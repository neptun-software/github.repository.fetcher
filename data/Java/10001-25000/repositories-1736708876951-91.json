{
  "metadata": {
    "timestamp": 1736708876951,
    "page": 91,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "supertokens/supertokens-core",
      "stars": 13594,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6015625,
          "content": "### Gradle ###\n.gradle\nbuild/\n\n# Ignore Gradle GUI config\ngradle-app.setting\n\n*.jar\n# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)\n!gradle-wrapper.jar\n!jar/**/*.jar\n!cli/jar/**/*.jar\n!downloader/jar/**/*.jar\n!ee/jar/**/*.jar\n\n*target*\n*.war\n*.ear\n*.class\n\n# eclipse specific git ignore\n*.pydevproject\n.project\n.metadata\nbin/**\ntmp/**\ntmp/**/*\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.classpath\n.settings/\n.loadpath\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n/.gradle/\n\n# Mac\n.DS_Store\n\n*.iml\nee/bin\naddDevTag\naddReleaseTag"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 107.076171875,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/), and this project adheres\nto [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n## [9.3.0]\n\n### Changes\n\n- Adds support for OAuth2\n    - Added new feature in license key: `OAUTH`\n    - Adds new core config:\n        - `oauth_provider_public_service_url`\n        - `oauth_provider_admin_service_url`\n        - `oauth_provider_consent_login_base_url`\n        - `oauth_provider_url_configured_in_oauth_provider`\n    - Adds following APIs:\n        - POST `/recipe/oauth/clients`\n        - PUT `/recipe/oauth/clients`\n        - GET `/recipe/oauth/clients`\n        - GET `/recipe/oauth/clients/list`\n        - POST `/recipe/oauth/clients/remove`\n        - GET `/recipe/oauth/auth/requests/consent`\n        - PUT `/recipe/oauth/auth/requests/consent/accept`\n        - PUT `/recipe/oauth/auth/requests/consent/reject`\n        - GET `/recipe/oauth/auth/requests/login`\n        - PUT `/recipe/oauth/auth/requests/login/accept`\n        - PUT `/recipe/oauth/auth/requests/login/reject`\n        - GET `/recipe/oauth/auth/requests/logout`\n        - PUT `/recipe/oauth/auth/requests/logout/accept`\n        - PUT `/recipe/oauth/auth/requests/logout/reject`\n        - POST `/recipe/oauth/auth`\n        - POST `/recipe/oauth/token`\n        - POST `/recipe/oauth/introspect`\n        - POST `/recipe/oauth/session/revoke`\n        - POST `/recipe/oauth/token/revoke`\n        - POST `/recipe/oauth/tokens/revoke`\n\n### Migration\n\nIf using PostgreSQL, run the following SQL script:\n\n```sql\nCREATE TABLE IF NOT EXISTS oauth_clients (\n    app_id VARCHAR(64),\n    client_id VARCHAR(255) NOT NULL,\n    is_client_credentials_only BOOLEAN NOT NULL,\n    PRIMARY KEY (app_id, client_id),\n    FOREIGN KEY(app_id) REFERENCES apps(app_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS oauth_sessions (\n    gid VARCHAR(255),\n    app_id VARCHAR(64) DEFAULT 'public',\n    client_id VARCHAR(255) NOT NULL,\n    session_handle VARCHAR(128),\n    external_refresh_token VARCHAR(255) UNIQUE,\n    internal_refresh_token VARCHAR(255) UNIQUE,\n    jti TEXT NOT NULL,\n    exp BIGINT NOT NULL,\n    PRIMARY KEY (gid),\n    FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX IF NOT EXISTS oauth_session_exp_index ON oauth_sessions(exp DESC);\nCREATE INDEX IF NOT EXISTS oauth_session_external_refresh_token_index ON oauth_sessions(app_id, external_refresh_token DESC);\n\nCREATE TABLE IF NOT EXISTS oauth_m2m_tokens (\n    app_id VARCHAR(64) DEFAULT 'public',\n    client_id VARCHAR(255) NOT NULL,\n    iat BIGINT NOT NULL,\n    exp BIGINT NOT NULL,\n    PRIMARY KEY (app_id, client_id, iat),\n    FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX IF NOT EXISTS oauth_m2m_token_iat_index ON oauth_m2m_tokens(iat DESC, app_id DESC);\nCREATE INDEX IF NOT EXISTS oauth_m2m_token_exp_index ON oauth_m2m_tokens(exp DESC);\n\nCREATE TABLE IF NOT EXISTS oauth_logout_challenges (\n    app_id VARCHAR(64) DEFAULT 'public',\n    challenge VARCHAR(128) NOT NULL,\n    client_id VARCHAR(255) NOT NULL,\n    post_logout_redirect_uri VARCHAR(1024),\n    session_handle VARCHAR(128),\n    state VARCHAR(128),\n    time_created BIGINT NOT NULL,\n    PRIMARY KEY (app_id, challenge),\n    FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX IF NOT EXISTS oauth_logout_challenges_time_created_index ON oauth_logout_challenges(time_created DESC);\n```\n\nIf using MySQL, run the following SQL script:\n\n```sql\nCREATE TABLE IF NOT EXISTS oauth_clients (\n  app_id VARCHAR(64),\n  client_id VARCHAR(255) NOT NULL,\n  is_client_credentials_only BOOLEAN NOT NULL,\n  PRIMARY KEY (app_id, client_id),\n  FOREIGN KEY(app_id) REFERENCES apps(app_id) ON DELETE CASCADE\n);\n\nCREATE TABLE IF NOT EXISTS oauth_sessions (\n  gid VARCHAR(255),\n  app_id VARCHAR(64) DEFAULT 'public',\n  client_id VARCHAR(255) NOT NULL,\n  session_handle VARCHAR(128),\n  external_refresh_token VARCHAR(255) UNIQUE,\n  internal_refresh_token VARCHAR(255) UNIQUE,\n  jti TEXT NOT NULL,\n  exp BIGINT NOT NULL,\n  PRIMARY KEY (gid),\n  FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX oauth_session_exp_index ON oauth_sessions(exp DESC);\nCREATE INDEX oauth_session_external_refresh_token_index ON oauth_sessions(app_id, external_refresh_token DESC);\n\nCREATE TABLE oauth_m2m_tokens (\n  app_id VARCHAR(64) DEFAULT 'public',\n  client_id VARCHAR(255) NOT NULL,\n  iat BIGINT UNSIGNED NOT NULL,\n  exp BIGINT UNSIGNED NOT NULL,\n  PRIMARY KEY (app_id, client_id, iat),\n  FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX oauth_m2m_token_iat_index ON oauth_m2m_tokens(iat DESC, app_id DESC);\nCREATE INDEX oauth_m2m_token_exp_index ON oauth_m2m_tokens(exp DESC);\n\nCREATE TABLE IF NOT EXISTS oauth_logout_challenges (\n  app_id VARCHAR(64) DEFAULT 'public',\n  challenge VARCHAR(128) NOT NULL,\n  client_id VARCHAR(255) NOT NULL,\n  post_logout_redirect_uri VARCHAR(1024),\n  session_handle VARCHAR(128),\n  state VARCHAR(128),\n  time_created BIGINT UNSIGNED NOT NULL,\n  PRIMARY KEY (app_id, challenge),\n  FOREIGN KEY(app_id, client_id) REFERENCES oauth_clients(app_id, client_id) ON DELETE CASCADE\n);\n\nCREATE INDEX oauth_logout_challenges_time_created_index ON oauth_logout_challenges(time_created ASC, app_id ASC);\n```\n\n## [9.2.3] - 2024-10-09\n\n- Adds support for `--with-temp-dir` in CLI and `tempDirLocation=` in Core\n- Adds validation to firstFactors and requiredSecondaryFactors names while creating tenants/apps/etc. to not allow \n  special chars.\n\n## [9.2.2] - 2024-09-04\n\n- Adds index on `last_active_time` for `user_last_active` table to improve the performance of MAU computation.\n\n### Migration\n\nIf using PostgreSQL, run the following SQL script:\n\n```sql\nCREATE INDEX IF NOT EXISTS user_last_active_last_active_time_index ON user_last_active (last_active_time DESC, app_id DESC);\n```\n\nIf using MySQL, run the following SQL script:\n\n```sql\nCREATE INDEX user_last_active_last_active_time_index ON user_last_active (last_active_time DESC, app_id DESC);\n```\n\n## [9.2.1] - 2024-09-02\n\n- Removes the stats that were resulting in high CPU consumption\n\n## [9.2.0] - 2024-08-20\n\n- Adds `SECURITY` feature in `EE_FEATURES`.\n\n## [9.1.2] - 2024-07-24\n\n- Fixes path routing which rejected tenantId stop words even if it was not an exact stop word match. For example, `/hellotenant` is a valid tenantId prefix, however, it was being rejected for the stop word `hello`. - https://github.com/supertokens/supertokens-core/issues/1021\n- 500 errors in core returns actual exception, since these APIs are developer facing, it makes easier to debug these errors.\n\n## [9.1.1] - 2024-07-24\n\n### Fixes\n\n- Account linking now properly checks if the login methods of the primary user can be shared with the tenants of the \n  recipe user we are trying to link\n- Simplifying email verification token creation\n\n## [9.1.0] - 2024-05-24\n\n### Changes\n\n- Adds support for CDI 3.1 and 5.1\n- Adds annotations to properties `CoreConfig` to aid dashboard API.\n- Updates `ApiVersionAPI` to optionally accept `websiteDomain` and `apiDomain` for telemetry.\n- Adds GET `/recipe/dashboard/tenant/core-config` to fetch the core properties with metadata for dashboard.\n- Reports `websiteDomain` and `apiDomain` for each app in telemetry.\n- API Key can now be passed using the `Authorization` header: `Authorization: <api-key>`\n\n### Breaking changes\n\n- CUD/App/Tenant Management APIs are deprecated and v2 versions have been added\n  - Adds new core API for fetching all the core properties for a tenant\n      - GET `/appid-<appid>/<tenantid>/recipe/dashboard/tenant/core-config`\n  - Deprecated the following APIs\n      - PUT `/recipe/multitenancy/connectionuridomain`\n      - GET `/recipe/multitenancy/connectionuridomain/list`\n      - PUT `/recipe/multitenancy/app`\n      - GET `/recipe/multitenancy/app/list`\n      - PUT `/appid-<appid>/recipe/multitenancy/tenant`\n      - GET `/appid-<appid>/<tenantid>/recipe/multitenancy/tenant`\n      - GET `/appid-<appid>/<tenantid>/recipe/multitenancy/tenant/list`\n  - Adds the following APIs to replace the deprecated APIs\n      - PUT `/recipe/multitenancy/connectionuridomain/v2`\n      - GET `/recipe/multitenancy/connectionuridomain/list/v2`\n      - PUT `/recipe/multitenancy/app/v2`\n      - GET `/recipe/multitenancy/app/list/v2`\n      - PUT `/appid-<appid>/recipe/multitenancy/tenant/v2`\n      - GET `/appid-<appid>/<tenantid>/recipe/multitenancy/tenant/v2`\n      - GET `/appid-<appid>/<tenantid>/recipe/multitenancy/tenant/list/v2`\n\n- In CDI 5.1, the auth recipe APIs such as emailpassword signIn, thirdParty signInUp, etc would not be blocked if the recipe was disabled using the deprecated APIs. They will be enforced if CDI version <= 5.0 is being passed in the header.\n\n### Fixes\n\n- Updates descriptions in the config.yaml to be consistent with the annotations.\n- Adds correct `max-age` for `JWKSPublicAPI` based on dynamic key generation interval.\n- Fixes `500` error when using TOTP code longer than 8 characters.\n\n### Migration\n\nMake sure the core is already upgraded to version 9.0.2 before migrating\n\nIf using PostgreSQL\n\n```sql\nALTER TABLE tenant_configs ADD COLUMN IF NOT EXISTS is_first_factors_null BOOLEAN DEFAULT TRUE;\nALTER TABLE tenant_configs ALTER COLUMN is_first_factors_null DROP DEFAULT;\n```\n\nIf using MySQL\n\n```sql\nALTER TABLE tenant_configs ADD COLUMN is_first_factors_null BOOLEAN DEFAULT TRUE;\nALTER TABLE tenant_configs ALTER COLUMN is_first_factors_null DROP DEFAULT;\n```\n\n## [9.0.2] - 2024-04-17\n\n- Fixes issue with core startup when creation of CUD/app/tenant has partial failure\n\n## [9.0.1] - 2024-03-20\n\n- Fixes verify TOTP and verify device APIs to treat any code as invalid\n- Fixes the computation of the number of failed attempts when return `INVALID_TOTP_ERROR`\n\n## [9.0.0] - 2024-03-13\n\n### Added\n\n- Supports CDI version `5.0`\n- MFA stats in `EEFeatureFlag`\n- Adds `ImportTotpDeviceAPI`\n- Adds `CheckCodeAPI`\n\n### Changes\n\n- `deviceName` in request body of `CreateOrUpdateTotpDeviceAPI` `POST` is now optional\n- Adds `firstFactors` and `requiredSecondaryFactors` in request body of create or update CUD, App and\n  Tenant APIs\n- Adds `deviceName` in the response of `CreateOrUpdateTotpDeviceAPI` `POST`\n- `VerifyTOTPAPI` changes\n    - Removes `allowUnverifiedDevices` from request body and unverified devices are not allowed\n    - Adds `currentNumberOfFailedAttempts` and `maxNumberOfFailedAttempts` in response when status is\n      `INVALID_TOTP_ERROR` or `LIMIT_REACHED_ERROR`\n    - Adds status `UNKNOWN_USER_ID_ERROR`\n- `VerifyTotpDeviceAPI` changes\n    - Adds `currentNumberOfFailedAttempts` and `maxNumberOfFailedAttempts` in response when status is\n      `INVALID_TOTP_ERROR` or `LIMIT_REACHED_ERROR`\n- Adds `consumedDevice` in the success response of the `ConsumeCodeAPI`\n- Adds `preAuthSessionId` input to `DeleteCodeAPI` to be able to delete codes for a device\n- Adds a new `useDynamicSigningKey` into the request body of `RefreshSessionAPI`\n    - This enables smooth switching between `useDynamicAccessTokenSigningKey` settings by allowing refresh calls to\n      change the signing key type of a session\n    - This is available after CDI3.0\n    - This is required in&after CDI5.0 and optional before\n- Adds optional `firstFactors` and `requiredSecondaryFactors` to the create or update connectionUriDomain, app and\n  tenant APIs\n- Updates Last active while linking accounts\n- Marks fake email in email password sign up as verified\n- Fixes slow down in useridmapping queries\n- Adds core version in the logs\n- Fixes issue with session creation when using external user id on a linked account\n- Enforces the API call from public tenant for the APIs that are app specific\n\n### Migration\n\nMake sure the core is already upgraded to version 8.0.0 before migrating\n\nIf using PostgreSQL\n\n```sql\nALTER TABLE totp_user_devices\n    ADD COLUMN IF NOT EXISTS created_at BIGINT default 0;\nALTER TABLE totp_user_devices\n    ALTER COLUMN created_at DROP DEFAULT;\n```\n\nIf using MySQL\n\n```sql\nALTER TABLE totp_user_devices\n    ADD COLUMN created_at BIGINT UNSIGNED default 0;\nALTER TABLE totp_user_devices\n    ALTER COLUMN created_at DROP DEFAULT;\nDROP INDEX all_auth_recipe_users_pagination_index2 ON all_auth_recipe_users;\nDROP INDEX all_auth_recipe_users_pagination_index4 ON all_auth_recipe_users;\n```\n\n## [8.0.1] - 2024-03-11\n\n- Making this version backward compatible. Breaking changes in `8.0.0` can now be ignored.\n\n## [8.0.0] - 2024-03-04\n\n### Breaking changes\n\n- The following app specific APIs return a 403 when they are called with a tenant ID other than the `public` one. For\n  example, if the path is `/users/count/active`, and you call it with `/tenant1/users/count/active`, it will return a\n    403. But if you call it with `/public/users/count/active`, or just `/users/count/active`, it will work.\n\n    - GET `/recipe/accountlinking/user/primary/check`\n    - GET `/recipe/accountlinking/user/link/check`\n    - POST `/recipe/accountlinking/user/primary`\n    - POST `/recipe/accountlinking/user/link`\n    - POST `/recipe/accountlinking/user/unlink`\n    - GET `/users/count/active`\n    - POST `/user/remove`\n    - GET `/ee/featureflag`\n    - GET `/user/id`\n    - PUT `/ee/license`\n    - DELETE `/ee/license`\n    - GET `/ee/license`\n    - GET `/requests/stats`\n    - GET `/recipe/user` when querying by `userId`\n    - GET `/recipe/jwt/jwks`\n    - POST `/recipe/jwt`\n\n### Fixes\n\n- Fixes issue with non-auth recipe related storage handling\n\n### Migration\n\nFor Postgresql:\n\n```sql\nALTER TABLE user_roles DROP CONSTRAINT IF EXISTS user_roles_role_fkey;\n```\n\nFor MySQL:\n\n```sql\nALTER TABLE user_roles DROP FOREIGN KEY user_roles_ibfk_1;\nALTER TABLE user_roles DROP FOREIGN KEY user_roles_ibfk_2;\nALTER TABLE user_roles\n    ADD FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n```\n\n## [7.0.18] - 2024-02-19\n\n- Fixes vulnerabilities in dependencies\n- Updates telemetry payload\n- Fixes Active User tracking to use the right storage\n\n## [7.0.17] - 2024-02-06\n\n- Fixes issue where error logs were printed to StdOut instead of StdErr.\n- Adds new config `supertokens_saas_load_only_cud` that makes the core instance load a particular CUD only, irrespective\n  of the CUDs present in the db.\n- Fixes connection pool handling when connection pool size changes for a tenant.\n\n## [7.0.16] - 2023-12-04\n\n- Returns 400, instead of 500, for badly typed core config while creating CUD, App or Tenant\n\n## [7.0.15] - 2023-11-28\n\n- Adds test for user pagination from old version\n\n## [7.0.14] - 2023-11-21\n\n- Updates test user query speed\n\n### Migration\n\nIf using MySQL plugin, run the following SQL script:\n\n```sql\nCREATE INDEX app_id_to_user_id_primary_user_id_index ON app_id_to_user_id (primary_or_recipe_user_id);\nCREATE INDEX app_id_to_user_id_user_id_index ON app_id_to_user_id (user_id);\n```\n\n## [7.0.13] - 2023-11-21\n\n- Adds test to user query speed\n\n### Migration\n\nIf using PostgreSQL database, run the following sql script:\n\n```sql\nCREATE INDEX IF NOT EXISTS app_id_to_user_id_primary_user_id_index ON app_id_to_user_id (primary_or_recipe_user_id, app_id);\n```\n\n## [7.0.12] - 2023-11-16\n\nIn this release, the core API routes have been updated to incorporate phone number normalization before processing.\nConsequently, existing entries in the database also need to undergo normalization. To facilitate this, we have included\na migration script to normalize phone numbers for all the existing entries.\n\n**NOTE**: You can skip the migration if you are not using passwordless via phone number.\n\n### Migration steps\n\nThis script updates the `phone_number` column in the `passwordless_users`, `passwordless_user_to_tenant`,\nand `passwordless_devices` tables with their respective normalized values. This script is idempotent and can be run\nmultiple times without any issue. Follow the steps below to run the script:\n\n1. Ensure that the core is already upgraded to version 7.0.12 (CDI version 4.0)\n2. Run the migration script\n\n   Make sure your Node.js version is 16 or above to run the script. Locate the migration script\n   at `supertokens-core/migration_scripts/to_version_7_0_12/index.js`. Modify the script by updating\n   the `DB_HOST`, `DB_USER`, `DB_PASSWORD`, and `DB_NAME` variables with the correct values. Subsequently, run the\n   following commands to initiate the script:\n\n    ```bash\n       $ git clone https://github.com/supertokens/supertokens-core.git\n       $ cd supertokens-core/migration_scripts/to_version_7_0_12\n       $ npm install\n       $ npm start\n    ```\n\n   Performance Note: On average, the script takes 19s for every 1000 rows with a maximum of 1 connection, 4.7s with a\n   maximum of 5 connections (default), and 4.5s with a maximum of 10 connections. Increasing the `MAX_POOL_SIZE` allows\n   the script to leverage more connections simultaneously, potentially improving execution speed.\n\n## [7.0.11] - 2023-11-10\n\n- Fixes email verification behaviour with user id mapping\n\n## [7.0.10] - 2023-11-03\n\n- Collects requests stats per app\n- Adds `/requests/stats` API to return requests stats for the last day\n\n## [7.0.9] - 2023-11-01\n\n- Tests `verified` in `loginMethods` for users with userId mapping\n\n## [7.0.8] - 2023-10-19\n\n- Tests thirdParty serialization fix\n\n## [7.0.7] - 2023-10-19\n\n- Fixes test that verifies tenant config persistence\n\n## [7.0.6] - 2023-10-18\n\n- Fixes issue with cron tasks that run per app and tenant\n\n## [7.0.5] - 2023-10-13\n\n- Adds postgres testing to the CICD\n\n## [7.0.4] - 2023-10-12\n\n- Fixes user info from primary user id query\n- Fixes `deviceIdHash` issue\n\n## [7.0.3] - 2023-10-11\n\n- Fixes issue with duplicate cron task\n\n## [7.0.2] = 2023-10-05\n\n- Fixes `500` error for passwordless login in certain cases - https://github.com/supertokens/supertokens-core/issues/828\n\n## [7.0.1] - 2023-10-04\n\n- Remove padding from link codes and pre-auth session ids in passwordless, but keep support for old format that included\n  padding (`=` signs)\n\n## [7.0.0] - 2023-09-19\n\n- Support for CDI version 4.0\n- Adds Account Linking feature\n\n### Session recipe changes\n\n- New access token version: v5, which contains a required prop: `rsub`. This contains the recipe user ID that belongs to\n  the login method that the user used to login. The `sub` claim in the access token payload is now the primary user ID.\n- APIs that return `SessionInformation` (like GET `/recipe/session`) contains userId, recipeUserId in the response.\n- Apis that create / modify / refresh a session return the `recipeUserId` in the `session` object in the response.\n- Token theft detected response returns userId and recipeUserId\n\n### Db Schema changes\n\n- Adds columns `primary_or_recipe_user_id`, `is_linked_or_is_a_primary_user` and `primary_or_recipe_user_time_joined`\n  to `all_auth_recipe_users` table\n- Adds columns `primary_or_recipe_user_id` and `is_linked_or_is_a_primary_user` to `app_id_to_user_id` table\n- Removes index `all_auth_recipe_users_pagination_index` and addes `all_auth_recipe_users_pagination_index1`,\n  `all_auth_recipe_users_pagination_index2`, `all_auth_recipe_users_pagination_index3` and\n  `all_auth_recipe_users_pagination_index4` indexes instead on `all_auth_recipe_users` table\n- Adds `all_auth_recipe_users_recipe_id_index` on `all_auth_recipe_users` table\n- Adds `all_auth_recipe_users_primary_user_id_index` on `all_auth_recipe_users` table\n- Adds `email` column to `emailpassword_pswd_reset_tokens` table\n- Changes `user_id` foreign key constraint on `emailpassword_pswd_reset_tokens` to `app_id_to_user_id` table\n\n### Migration steps for SQL\n\n1. Ensure that the core is already upgraded to version 6.0.13 (CDI version 3.0)\n2. Stop the core instance(s)\n3. Run the migration script\n\n    <details>\n\n    <summary>If using PostgreSQL</summary>\n\n    ```sql\n    ALTER TABLE all_auth_recipe_users\n      ADD COLUMN primary_or_recipe_user_id CHAR(36) NOT NULL DEFAULT ('0');\n\n    ALTER TABLE all_auth_recipe_users\n      ADD COLUMN is_linked_or_is_a_primary_user BOOLEAN NOT NULL DEFAULT FALSE;\n\n    ALTER TABLE all_auth_recipe_users\n      ADD COLUMN primary_or_recipe_user_time_joined BIGINT NOT NULL DEFAULT 0;\n\n    UPDATE all_auth_recipe_users\n      SET primary_or_recipe_user_id = user_id\n      WHERE primary_or_recipe_user_id = '0';\n\n    UPDATE all_auth_recipe_users\n      SET primary_or_recipe_user_time_joined = time_joined\n      WHERE primary_or_recipe_user_time_joined = 0;\n\n    ALTER TABLE all_auth_recipe_users\n      ADD CONSTRAINT all_auth_recipe_users_primary_or_recipe_user_id_fkey\n        FOREIGN KEY (app_id, primary_or_recipe_user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    ALTER TABLE all_auth_recipe_users\n      ALTER primary_or_recipe_user_id DROP DEFAULT;\n\n    ALTER TABLE app_id_to_user_id\n      ADD COLUMN primary_or_recipe_user_id CHAR(36) NOT NULL DEFAULT ('0');\n\n    ALTER TABLE app_id_to_user_id\n      ADD COLUMN is_linked_or_is_a_primary_user BOOLEAN NOT NULL DEFAULT FALSE;\n\n    UPDATE app_id_to_user_id\n      SET primary_or_recipe_user_id = user_id\n      WHERE primary_or_recipe_user_id = '0';\n\n    ALTER TABLE app_id_to_user_id\n      ADD CONSTRAINT app_id_to_user_id_primary_or_recipe_user_id_fkey\n        FOREIGN KEY (app_id, primary_or_recipe_user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    ALTER TABLE app_id_to_user_id\n        ALTER primary_or_recipe_user_id DROP DEFAULT;\n\n    DROP INDEX all_auth_recipe_users_pagination_index;\n\n    CREATE INDEX all_auth_recipe_users_pagination_index1 ON all_auth_recipe_users (\n      app_id, tenant_id, primary_or_recipe_user_time_joined DESC, primary_or_recipe_user_id DESC);\n\n    CREATE INDEX all_auth_recipe_users_pagination_index2 ON all_auth_recipe_users (\n      app_id, tenant_id, primary_or_recipe_user_time_joined ASC, primary_or_recipe_user_id DESC);\n\n    CREATE INDEX all_auth_recipe_users_pagination_index3 ON all_auth_recipe_users (\n      recipe_id, app_id, tenant_id, primary_or_recipe_user_time_joined DESC, primary_or_recipe_user_id DESC);\n\n    CREATE INDEX all_auth_recipe_users_pagination_index4 ON all_auth_recipe_users (\n      recipe_id, app_id, tenant_id, primary_or_recipe_user_time_joined ASC, primary_or_recipe_user_id DESC);\n\n    CREATE INDEX all_auth_recipe_users_primary_user_id_index ON all_auth_recipe_users (primary_or_recipe_user_id, app_id);\n\n    CREATE INDEX all_auth_recipe_users_recipe_id_index ON all_auth_recipe_users (app_id, recipe_id, tenant_id);\n\n    ALTER TABLE emailpassword_pswd_reset_tokens DROP CONSTRAINT IF EXISTS emailpassword_pswd_reset_tokens_user_id_fkey;\n\n    ALTER TABLE emailpassword_pswd_reset_tokens ADD CONSTRAINT emailpassword_pswd_reset_tokens_user_id_fkey FOREIGN KEY (app_id, user_id) REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    ALTER TABLE emailpassword_pswd_reset_tokens ADD COLUMN email VARCHAR(256);\n    ```\n    </details>\n\n    <details>\n\n    <summary>If using MySQL</summary>\n\n    ```sql\n    ALTER TABLE all_auth_recipe_users\n      ADD primary_or_recipe_user_id CHAR(36) NOT NULL DEFAULT ('0');\n\n    ALTER TABLE all_auth_recipe_users\n      ADD is_linked_or_is_a_primary_user BOOLEAN NOT NULL DEFAULT FALSE;\n\n    ALTER TABLE all_auth_recipe_users\n      ADD primary_or_recipe_user_time_joined BIGINT UNSIGNED NOT NULL DEFAULT 0;\n\n    UPDATE all_auth_recipe_users\n      SET primary_or_recipe_user_id = user_id\n      WHERE primary_or_recipe_user_id = '0';\n\n    UPDATE all_auth_recipe_users\n      SET primary_or_recipe_user_time_joined = time_joined\n      WHERE primary_or_recipe_user_time_joined = 0;\n\n    ALTER TABLE all_auth_recipe_users\n      ADD FOREIGN KEY (app_id, primary_or_recipe_user_id)\n      REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    ALTER TABLE all_auth_recipe_users\n      ALTER primary_or_recipe_user_id DROP DEFAULT;\n\n    ALTER TABLE app_id_to_user_id\n      ADD primary_or_recipe_user_id CHAR(36) NOT NULL DEFAULT ('0');\n\n    ALTER TABLE app_id_to_user_id\n      ADD is_linked_or_is_a_primary_user BOOLEAN NOT NULL DEFAULT FALSE;\n\n    UPDATE app_id_to_user_id\n      SET primary_or_recipe_user_id = user_id\n      WHERE primary_or_recipe_user_id = '0';\n\n    ALTER TABLE app_id_to_user_id\n      ADD FOREIGN KEY (app_id, primary_or_recipe_user_id)\n      REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    ALTER TABLE app_id_to_user_id\n      ALTER primary_or_recipe_user_id DROP DEFAULT;\n\n    DROP INDEX all_auth_recipe_users_pagination_index ON all_auth_recipe_users;\n\n    CREATE INDEX all_auth_recipe_users_pagination_index1 ON all_auth_recipe_users (\n      app_id, tenant_id, primary_or_recipe_user_time_joined DESC, primary_or_recipe_user_id DESC);\n\n    CREATE INDEX all_auth_recipe_users_pagination_index2 ON all_auth_recipe_users (\n      app_id, tenant_id, primary_or_recipe_user_time_joined ASC, primary_or_recipe_user_id DESC);\n\n    CREATE INDEX all_auth_recipe_users_pagination_index3 ON all_auth_recipe_users (\n      recipe_id, app_id, tenant_id, primary_or_recipe_user_time_joined DESC, primary_or_recipe_user_id DESC);\n\n    CREATE INDEX all_auth_recipe_users_pagination_index4 ON all_auth_recipe_users (\n      recipe_id, app_id, tenant_id, primary_or_recipe_user_time_joined ASC, primary_or_recipe_user_id DESC);\n\n    CREATE INDEX all_auth_recipe_users_primary_user_id_index ON all_auth_recipe_users (primary_or_recipe_user_id, app_id);\n\n    CREATE INDEX all_auth_recipe_users_recipe_id_index ON all_auth_recipe_users (app_id, recipe_id, tenant_id);\n\n    ALTER TABLE emailpassword_pswd_reset_tokens \n      DROP FOREIGN KEY emailpassword_pswd_reset_tokens_ibfk_1;\n\n    ALTER TABLE emailpassword_pswd_reset_tokens\n      ADD FOREIGN KEY (app_id, user_id) REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    ALTER TABLE emailpassword_pswd_reset_tokens ADD email VARCHAR(256);\n    ```\n\n    </details>\n\n4. Start the new instance(s) of the core (version 7.0.0)\n\n## [6.0.13] - 2023-09-15\n\n- Fixes paid stats reporting for multitenancy\n\n## [6.0.12] - 2023-09-04\n\n- Fixes randomly occurring `serialization error for concurrent update` in `verifySession` API\n- Fixes `MISSING_EE_FOLDER_ERROR` error when the core starts up with an empty database\n\n## [6.0.11] - 2023-08-16\n\n- Fixed feature flag cron job\n\n## [6.0.10] - 2023-08-16\n\n- Fixed an encoding/decoding issue for certain access token payloads\n\n## [6.0.9] - 2023-08-14\n\n- Now using decimal notation to add numbers into the access token payload (instead of scientific notation)\n\n## [6.0.8] - 2023-08-01\n\n- Fixes CUD validation starting with number.\n\n## [6.0.7] - 2023-07-28\n\n- Fixes session removing for user with useridmapping when disassociating from tenant.\n- Fixes issue with access token migration from version v1 and v2\n\n## [6.0.6] - 2023-07-24\n\n- Adds all ee features enabled for in memory database.\n\n## [6.0.5] - 2023-07-20\n\n- Fixes logging issue in API call where it used to print out the root CUD tenant info when querying with a tenant\n  that does not exist.\n\n## [6.0.4] - 2023-07-13\n\n- Fixes tenant prefix in stack trace log\n- `supertokens_default_cdi_version` config renamed to `supertokens_max_cdi_version`\n- Fixes `/apiversion` GET to return versions until `supertokens_max_cdi_version` if set\n- Fixes `/recipe/multitenancy/tenant` GET to return `TENANT_NOT_FOUND_ERROR` with 200 status when tenant was not found\n\n## [6.0.3] - 2023-07-11\n\n- Fixes duplicate users in users search queries when user is associated to multiple tenants\n- Fixes wrong tenant id in logging for `APIKeyUnauthorisedException`\n\n## [6.0.2] - 2023-07-04\n\n- Fixes some of the session APIs to return `tenantId`\n- argon and bcrypt related configs are now configurable only from config.yaml\n- `ip_allow_regex` and `ip_deny_regex` are now protected properties for SaaS\n- `hello` is disallowed as a tenantId\n- creation of apps enables all recipes by default but not during creation of tenant\n\n## [6.0.1]\n\n- Fixes `Invalid API key` issue on hello API\n- Fixes `CreateOrUpdateThirdPartyConfigAPI` as per CDI 3.0\n- Fixes `sessionHandle` to include tenant information and the related APIs are now app specific\n- Updated GET `/appid-<appId>/<tenantId>/recipe/session/user`\n    - Adds `fetchAcrossAllTenants` with default `true` - controls fetching of sessions across all tenants or only a\n      particular tenant\n- Updated POST `/appid-<appId>/<tenantId>/recipe/session/remove`\n    - Adds `revokeAcrossAllTenants` with default `true` - controls revoking of sessions across all tenants or only a\n      particular tenant\n- Updated telemetry to send `connectionUriDomain`, `appId` and `mau` information\n- Updated feature flag stats to report `usersCount` per tenant\n\n## [6.0.0] - 2023-06-02\n\n### Adds\n\n- Support for multitenancy.\n- New config `supertokens_saas_secret` added to support multitenancy in SaaS mode.\n- New config `supertokens_default_cdi_version` is added to specify the version of CDI core must assume when the version\n  is not specified in the request. If this config is not specified, the core will assume the latest version.\n\n### Fixes\n\n- Fixes an issue where session verification would fail for JWTs created using the JWT recipe\n\n### Changes\n\n- Modifies the `/recipe/dashboard/session/verify` API to include the user's email in the response\n- Support for multitenancy\n    - New APIs to manage apps and tenants\n        - `/recipe/multitenancy/connectionuridomain` PUT\n        - `/recipe/multitenancy/connectionuridomain/remove` POST\n        - `/recipe/multitenancy/connectionuridomain/list` GET\n        - `/recipe/multitenancy/app` PUT\n        - `/recipe/multitenancy/app/remove` POST\n        - `/recipe/multitenancy/app/list` GET\n        - `/appid-<appid>/recipe/multitenancy/tenant` PUT\n        - `/appid-<appid>/<tenantid>/recipe/multitenancy/tenant` GET\n        - `/appid-<appid>/recipe/multitenancy/tenant/remove` POST\n        - `/appid-<appid>/recipe/multitenancy/tenant/list` GET\n        - `/appid-<appid>/recipe/multitenancy/config/thirdparty` PUT\n        - `/appid-<appid>/recipe/multitenancy/config/thirdparty/remove` POST\n        - `/appid-<appid>/<tenantid>/recipe/multitenancy/tenant/user` POST\n        - `/appid-<appid>/<tenantid>/recipe/multitenancy/tenant/user/remove` POST\n    - API paths can be prefixed with `/appid-<appid>/<tenantid>` to perform app or tenant specific operations.\n\n### Migration steps for SQL\n\n1. Ensure that the core is already upgraded to version 5.0.0 (CDI version 2.21)\n2. Stop the core instance(s)\n3. Run the migration script\n\n    <details>\n\n    <summary>If using PostgreSQL</summary>\n\n   #### Run the following SQL script\n\n    ```sql\n    -- General Tables\n\n    CREATE TABLE IF NOT EXISTS apps  (\n      app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n      created_at_time BIGINT,\n      CONSTRAINT apps_pkey PRIMARY KEY(app_id)\n    );\n\n    INSERT INTO apps (app_id, created_at_time) \n      VALUES ('public', 0) ON CONFLICT DO NOTHING;\n\n    ------------------------------------------------------------\n\n    CREATE TABLE IF NOT EXISTS tenants (\n      app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n      tenant_id VARCHAR(64) NOT NULL DEFAULT 'public',\n      created_at_time BIGINT ,\n      CONSTRAINT tenants_pkey\n        PRIMARY KEY (app_id, tenant_id),\n      CONSTRAINT tenants_app_id_fkey FOREIGN KEY(app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE\n    );\n\n    INSERT INTO tenants (app_id, tenant_id, created_at_time) \n      VALUES ('public', 'public', 0) ON CONFLICT DO NOTHING;\n\n    CREATE INDEX IF NOT EXISTS tenants_app_id_index ON tenants (app_id);\n\n    ------------------------------------------------------------\n\n    ALTER TABLE key_value\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n      ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE key_value\n      DROP CONSTRAINT key_value_pkey;\n\n    ALTER TABLE key_value\n      ADD CONSTRAINT key_value_pkey \n        PRIMARY KEY (app_id, tenant_id, name);\n\n    ALTER TABLE key_value\n      DROP CONSTRAINT IF EXISTS key_value_tenant_id_fkey;\n\n    ALTER TABLE key_value\n      ADD CONSTRAINT key_value_tenant_id_fkey \n        FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS key_value_tenant_id_index ON key_value (app_id, tenant_id);\n\n    ------------------------------------------------------------\n\n    CREATE TABLE IF NOT EXISTS app_id_to_user_id (\n      app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n      user_id CHAR(36) NOT NULL,\n      recipe_id VARCHAR(128) NOT NULL,\n      CONSTRAINT app_id_to_user_id_pkey\n        PRIMARY KEY (app_id, user_id),\n      CONSTRAINT app_id_to_user_id_app_id_fkey\n        FOREIGN KEY(app_id) REFERENCES apps (app_id) ON DELETE CASCADE\n    );\n\n    INSERT INTO app_id_to_user_id (user_id, recipe_id) \n      SELECT user_id, recipe_id\n      FROM all_auth_recipe_users ON CONFLICT DO NOTHING;\n\n    CREATE INDEX IF NOT EXISTS app_id_to_user_id_app_id_index ON app_id_to_user_id (app_id);\n\n    ------------------------------------------------------------\n\n    ALTER TABLE all_auth_recipe_users\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n      ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE all_auth_recipe_users\n      DROP CONSTRAINT all_auth_recipe_users_pkey CASCADE;\n\n    ALTER TABLE all_auth_recipe_users\n      ADD CONSTRAINT all_auth_recipe_users_pkey \n        PRIMARY KEY (app_id, tenant_id, user_id);\n\n    ALTER TABLE all_auth_recipe_users\n      DROP CONSTRAINT IF EXISTS all_auth_recipe_users_tenant_id_fkey;\n\n    ALTER TABLE all_auth_recipe_users\n      ADD CONSTRAINT all_auth_recipe_users_tenant_id_fkey \n        FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    ALTER TABLE all_auth_recipe_users\n      DROP CONSTRAINT IF EXISTS all_auth_recipe_users_user_id_fkey;\n\n    ALTER TABLE all_auth_recipe_users\n      ADD CONSTRAINT all_auth_recipe_users_user_id_fkey \n        FOREIGN KEY (app_id, user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    DROP INDEX all_auth_recipe_users_pagination_index;\n\n    CREATE INDEX all_auth_recipe_users_pagination_index ON all_auth_recipe_users (time_joined DESC, user_id DESC, tenant_id DESC, app_id DESC);\n\n    CREATE INDEX IF NOT EXISTS all_auth_recipe_user_id_index ON all_auth_recipe_users (app_id, user_id);\n\n    CREATE INDEX IF NOT EXISTS all_auth_recipe_tenant_id_index ON all_auth_recipe_users (app_id, tenant_id);\n\n    -- Multitenancy\n\n    CREATE TABLE IF NOT EXISTS tenant_configs (\n      connection_uri_domain VARCHAR(256) DEFAULT '',\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      core_config TEXT,\n      email_password_enabled BOOLEAN,\n      passwordless_enabled BOOLEAN,\n      third_party_enabled BOOLEAN,\n      CONSTRAINT tenant_configs_pkey\n        PRIMARY KEY (connection_uri_domain, app_id, tenant_id)\n    );\n\n    ------------------------------------------------------------\n\n    CREATE TABLE IF NOT EXISTS tenant_thirdparty_providers (\n      connection_uri_domain VARCHAR(256) DEFAULT '',\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      third_party_id VARCHAR(28) NOT NULL,\n      name VARCHAR(64),\n      authorization_endpoint TEXT,\n      authorization_endpoint_query_params TEXT,\n      token_endpoint TEXT,\n      token_endpoint_body_params TEXT,\n      user_info_endpoint TEXT,\n      user_info_endpoint_query_params TEXT,\n      user_info_endpoint_headers TEXT,\n      jwks_uri TEXT,\n      oidc_discovery_endpoint TEXT,\n      require_email BOOLEAN,\n      user_info_map_from_id_token_payload_user_id VARCHAR(64),\n      user_info_map_from_id_token_payload_email VARCHAR(64),\n      user_info_map_from_id_token_payload_email_verified VARCHAR(64),\n      user_info_map_from_user_info_endpoint_user_id VARCHAR(64),\n      user_info_map_from_user_info_endpoint_email VARCHAR(64),\n      user_info_map_from_user_info_endpoint_email_verified VARCHAR(64),\n      CONSTRAINT tenant_thirdparty_providers_pkey\n        PRIMARY KEY (connection_uri_domain, app_id, tenant_id, third_party_id),\n      CONSTRAINT tenant_thirdparty_providers_tenant_id_fkey\n        FOREIGN KEY(connection_uri_domain, app_id, tenant_id)\n        REFERENCES tenant_configs (connection_uri_domain, app_id, tenant_id) ON DELETE CASCADE\n    );\n\n    CREATE INDEX IF NOT EXISTS tenant_thirdparty_providers_tenant_id_index ON tenant_thirdparty_providers (connection_uri_domain, app_id, tenant_id);\n\n    ------------------------------------------------------------\n\n    CREATE TABLE IF NOT EXISTS tenant_thirdparty_provider_clients (\n      connection_uri_domain VARCHAR(256) DEFAULT '',\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      third_party_id VARCHAR(28) NOT NULL,\n      client_type VARCHAR(64) NOT NULL DEFAULT '',\n      client_id VARCHAR(256) NOT NULL,\n      client_secret TEXT,\n      scope VARCHAR(128)[],\n      force_pkce BOOLEAN,\n      additional_config TEXT,\n      CONSTRAINT tenant_thirdparty_provider_clients_pkey\n        PRIMARY KEY (connection_uri_domain, app_id, tenant_id, third_party_id, client_type),\n      CONSTRAINT tenant_thirdparty_provider_clients_third_party_id_fkey\n        FOREIGN KEY (connection_uri_domain, app_id, tenant_id, third_party_id)\n        REFERENCES tenant_thirdparty_providers (connection_uri_domain, app_id, tenant_id, third_party_id) ON DELETE CASCADE\n    );\n\n    CREATE INDEX IF NOT EXISTS tenant_thirdparty_provider_clients_third_party_id_index ON tenant_thirdparty_provider_clients (connection_uri_domain, app_id, tenant_id, third_party_id);\n\n    -- Session\n\n    ALTER TABLE session_info\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n      ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE session_info\n      DROP CONSTRAINT session_info_pkey CASCADE;\n\n    ALTER TABLE session_info\n      ADD CONSTRAINT session_info_pkey \n        PRIMARY KEY (app_id, tenant_id, session_handle);\n\n    ALTER TABLE session_info\n      DROP CONSTRAINT IF EXISTS session_info_tenant_id_fkey;\n\n    ALTER TABLE session_info\n      ADD CONSTRAINT session_info_tenant_id_fkey \n        FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS session_expiry_index ON session_info (expires_at);\n\n    CREATE INDEX IF NOT EXISTS session_info_tenant_id_index ON session_info (app_id, tenant_id);\n\n    ------------------------------------------------------------\n\n    ALTER TABLE session_access_token_signing_keys\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE session_access_token_signing_keys\n      DROP CONSTRAINT session_access_token_signing_keys_pkey CASCADE;\n\n    ALTER TABLE session_access_token_signing_keys\n      ADD CONSTRAINT session_access_token_signing_keys_pkey \n        PRIMARY KEY (app_id, created_at_time);\n\n    ALTER TABLE session_access_token_signing_keys\n      DROP CONSTRAINT IF EXISTS session_access_token_signing_keys_app_id_fkey;\n\n    ALTER TABLE session_access_token_signing_keys\n      ADD CONSTRAINT session_access_token_signing_keys_app_id_fkey \n        FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS access_token_signing_keys_app_id_index ON session_access_token_signing_keys (app_id);\n\n    -- JWT\n\n    ALTER TABLE jwt_signing_keys\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE jwt_signing_keys\n      DROP CONSTRAINT jwt_signing_keys_pkey CASCADE;\n\n    ALTER TABLE jwt_signing_keys\n      ADD CONSTRAINT jwt_signing_keys_pkey \n        PRIMARY KEY (app_id, key_id);\n\n    ALTER TABLE jwt_signing_keys\n      DROP CONSTRAINT IF EXISTS jwt_signing_keys_app_id_fkey;\n\n    ALTER TABLE jwt_signing_keys\n      ADD CONSTRAINT jwt_signing_keys_app_id_fkey \n        FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS jwt_signing_keys_app_id_index ON jwt_signing_keys (app_id);\n\n    -- EmailVerification\n\n    ALTER TABLE emailverification_verified_emails\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE emailverification_verified_emails\n      DROP CONSTRAINT emailverification_verified_emails_pkey CASCADE;\n\n    ALTER TABLE emailverification_verified_emails\n      ADD CONSTRAINT emailverification_verified_emails_pkey \n        PRIMARY KEY (app_id, user_id, email);\n\n    ALTER TABLE emailverification_verified_emails\n      DROP CONSTRAINT IF EXISTS emailverification_verified_emails_app_id_fkey;\n\n    ALTER TABLE emailverification_verified_emails\n      ADD CONSTRAINT emailverification_verified_emails_app_id_fkey \n        FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS emailverification_verified_emails_app_id_index ON emailverification_verified_emails (app_id);\n\n    ------------------------------------------------------------\n\n    ALTER TABLE emailverification_tokens\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n      ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE emailverification_tokens\n      DROP CONSTRAINT emailverification_tokens_pkey CASCADE;\n\n    ALTER TABLE emailverification_tokens\n      ADD CONSTRAINT emailverification_tokens_pkey \n        PRIMARY KEY (app_id, tenant_id, user_id, email, token);\n\n    ALTER TABLE emailverification_tokens\n      DROP CONSTRAINT IF EXISTS emailverification_tokens_tenant_id_fkey;\n\n    ALTER TABLE emailverification_tokens\n      ADD CONSTRAINT emailverification_tokens_tenant_id_fkey \n        FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS emailverification_tokens_tenant_id_index ON emailverification_tokens (app_id, tenant_id);\n\n    -- EmailPassword\n\n    ALTER TABLE emailpassword_users\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE emailpassword_users\n      DROP CONSTRAINT emailpassword_users_pkey CASCADE;\n\n    ALTER TABLE emailpassword_users\n      DROP CONSTRAINT IF EXISTS emailpassword_users_email_key CASCADE;\n\n    ALTER TABLE emailpassword_users\n      ADD CONSTRAINT emailpassword_users_pkey \n        PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE emailpassword_users\n      DROP CONSTRAINT IF EXISTS emailpassword_users_user_id_fkey;\n\n    ALTER TABLE emailpassword_users\n      ADD CONSTRAINT emailpassword_users_user_id_fkey \n        FOREIGN KEY (app_id, user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    ------------------------------------------------------------\n\n    CREATE TABLE IF NOT EXISTS emailpassword_user_to_tenant (\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      user_id CHAR(36) NOT NULL,\n      email VARCHAR(256) NOT NULL,\n      CONSTRAINT emailpassword_user_to_tenant_email_key\n        UNIQUE (app_id, tenant_id, email),\n      CONSTRAINT emailpassword_user_to_tenant_pkey\n        PRIMARY KEY (app_id, tenant_id, user_id),\n      CONSTRAINT emailpassword_user_to_tenant_user_id_fkey\n        FOREIGN KEY (app_id, tenant_id, user_id)\n        REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE\n    );\n\n    ALTER TABLE emailpassword_user_to_tenant\n      DROP CONSTRAINT IF EXISTS emailpassword_user_to_tenant_email_key;\n\n    ALTER TABLE emailpassword_user_to_tenant\n      ADD CONSTRAINT emailpassword_user_to_tenant_email_key\n        UNIQUE (app_id, tenant_id, email);\n\n    ALTER TABLE emailpassword_user_to_tenant\n      DROP CONSTRAINT IF EXISTS emailpassword_user_to_tenant_user_id_fkey;\n\n    ALTER TABLE emailpassword_user_to_tenant\n      ADD CONSTRAINT emailpassword_user_to_tenant_user_id_fkey\n        FOREIGN KEY (app_id, tenant_id, user_id)\n        REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE;\n\n    INSERT INTO emailpassword_user_to_tenant (user_id, email)\n      SELECT user_id, email FROM emailpassword_users ON CONFLICT DO NOTHING;\n\n    ------------------------------------------------------------\n\n    ALTER TABLE emailpassword_pswd_reset_tokens\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE emailpassword_pswd_reset_tokens\n      DROP CONSTRAINT emailpassword_pswd_reset_tokens_pkey CASCADE;\n\n    ALTER TABLE emailpassword_pswd_reset_tokens\n      ADD CONSTRAINT emailpassword_pswd_reset_tokens_pkey \n        PRIMARY KEY (app_id, user_id, token);\n\n    ALTER TABLE emailpassword_pswd_reset_tokens\n      DROP CONSTRAINT IF EXISTS emailpassword_pswd_reset_tokens_user_id_fkey;\n\n    ALTER TABLE emailpassword_pswd_reset_tokens\n      ADD CONSTRAINT emailpassword_pswd_reset_tokens_user_id_fkey \n        FOREIGN KEY (app_id, user_id)\n        REFERENCES emailpassword_users (app_id, user_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS emailpassword_pswd_reset_tokens_user_id_index ON emailpassword_pswd_reset_tokens (app_id, user_id);\n\n    -- Passwordless\n\n    ALTER TABLE passwordless_users\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE passwordless_users\n      DROP CONSTRAINT passwordless_users_pkey CASCADE;\n\n    ALTER TABLE passwordless_users\n      ADD CONSTRAINT passwordless_users_pkey \n        PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE passwordless_users\n      DROP CONSTRAINT IF EXISTS passwordless_users_email_key;\n\n    ALTER TABLE passwordless_users\n      DROP CONSTRAINT IF EXISTS passwordless_users_phone_number_key;\n\n    ALTER TABLE passwordless_users\n      DROP CONSTRAINT IF EXISTS passwordless_users_user_id_fkey;\n\n    ALTER TABLE passwordless_users\n      ADD CONSTRAINT passwordless_users_user_id_fkey \n        FOREIGN KEY (app_id, user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    ------------------------------------------------------------\n\n    CREATE TABLE IF NOT EXISTS passwordless_user_to_tenant (\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      user_id CHAR(36) NOT NULL,\n      email VARCHAR(256),\n      phone_number VARCHAR(256),\n      CONSTRAINT passwordless_user_to_tenant_email_key\n        UNIQUE (app_id, tenant_id, email),\n      CONSTRAINT passwordless_user_to_tenant_phone_number_key\n        UNIQUE (app_id, tenant_id, phone_number),\n      CONSTRAINT passwordless_user_to_tenant_pkey\n        PRIMARY KEY (app_id, tenant_id, user_id),\n      CONSTRAINT passwordless_user_to_tenant_user_id_fkey\n        FOREIGN KEY (app_id, tenant_id, user_id)\n        REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE\n    );\n\n    ALTER TABLE passwordless_user_to_tenant\n      DROP CONSTRAINT IF EXISTS passwordless_user_to_tenant_user_id_fkey;\n\n    ALTER TABLE passwordless_user_to_tenant\n      ADD CONSTRAINT passwordless_user_to_tenant_user_id_fkey\n        FOREIGN KEY (app_id, tenant_id, user_id)\n        REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE;\n\n    INSERT INTO passwordless_user_to_tenant (user_id, email, phone_number)\n      SELECT user_id, email, phone_number FROM passwordless_users ON CONFLICT DO NOTHING;\n\n    ------------------------------------------------------------\n\n    ALTER TABLE passwordless_devices\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n      ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE passwordless_devices\n      DROP CONSTRAINT passwordless_devices_pkey CASCADE;\n\n    ALTER TABLE passwordless_devices\n      ADD CONSTRAINT passwordless_devices_pkey \n        PRIMARY KEY (app_id, tenant_id, device_id_hash);\n\n    ALTER TABLE passwordless_devices\n      DROP CONSTRAINT IF EXISTS passwordless_devices_tenant_id_fkey;\n\n    ALTER TABLE passwordless_devices\n      ADD CONSTRAINT passwordless_devices_tenant_id_fkey \n        FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    DROP INDEX IF EXISTS passwordless_devices_email_index;\n\n    CREATE INDEX IF NOT EXISTS passwordless_devices_email_index ON passwordless_devices (app_id, tenant_id, email);\n\n    DROP INDEX IF EXISTS passwordless_devices_phone_number_index;\n\n    CREATE INDEX IF NOT EXISTS passwordless_devices_phone_number_index ON passwordless_devices (app_id, tenant_id, phone_number);\n\n    CREATE INDEX IF NOT EXISTS passwordless_devices_tenant_id_index ON passwordless_devices (app_id, tenant_id);\n\n    ------------------------------------------------------------\n\n    ALTER TABLE passwordless_codes\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n      ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE passwordless_codes\n      DROP CONSTRAINT passwordless_codes_pkey CASCADE;\n\n    ALTER TABLE passwordless_codes\n      ADD CONSTRAINT passwordless_codes_pkey \n        PRIMARY KEY (app_id, tenant_id, code_id);\n\n    ALTER TABLE passwordless_codes\n      DROP CONSTRAINT IF EXISTS passwordless_codes_device_id_hash_fkey;\n\n    ALTER TABLE passwordless_codes\n      ADD CONSTRAINT passwordless_codes_device_id_hash_fkey \n        FOREIGN KEY (app_id, tenant_id, device_id_hash)\n        REFERENCES passwordless_devices (app_id, tenant_id, device_id_hash) ON DELETE CASCADE;\n\n    ALTER TABLE passwordless_codes\n      DROP CONSTRAINT passwordless_codes_link_code_hash_key;\n\n    ALTER TABLE passwordless_codes\n      DROP CONSTRAINT IF EXISTS passwordless_codes_link_code_hash_key;\n\n    ALTER TABLE passwordless_codes\n      ADD CONSTRAINT passwordless_codes_link_code_hash_key\n        UNIQUE (app_id, tenant_id, link_code_hash);\n\n    DROP INDEX IF EXISTS passwordless_codes_created_at_index;\n\n    CREATE INDEX IF NOT EXISTS passwordless_codes_created_at_index ON passwordless_codes (app_id, tenant_id, created_at);\n\n    DROP INDEX IF EXISTS passwordless_codes_device_id_hash_index;\n    CREATE INDEX IF NOT EXISTS passwordless_codes_device_id_hash_index ON passwordless_codes (app_id, tenant_id, device_id_hash);\n\n    -- ThirdParty\n\n    ALTER TABLE thirdparty_users\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE thirdparty_users\n      DROP CONSTRAINT thirdparty_users_pkey CASCADE;\n\n    ALTER TABLE thirdparty_users\n      DROP CONSTRAINT IF EXISTS thirdparty_users_user_id_key CASCADE;\n\n    ALTER TABLE thirdparty_users\n      ADD CONSTRAINT thirdparty_users_pkey \n        PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE thirdparty_users\n      DROP CONSTRAINT IF EXISTS thirdparty_users_user_id_fkey;\n\n    ALTER TABLE thirdparty_users\n      ADD CONSTRAINT thirdparty_users_user_id_fkey \n        FOREIGN KEY (app_id, user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    DROP INDEX IF EXISTS thirdparty_users_thirdparty_user_id_index;\n\n    CREATE INDEX IF NOT EXISTS thirdparty_users_thirdparty_user_id_index ON thirdparty_users (app_id, third_party_id, third_party_user_id);\n\n    DROP INDEX IF EXISTS thirdparty_users_email_index;\n\n    CREATE INDEX IF NOT EXISTS thirdparty_users_email_index ON thirdparty_users (app_id, email);\n\n    ------------------------------------------------------------\n\n    CREATE TABLE IF NOT EXISTS thirdparty_user_to_tenant (\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      user_id CHAR(36) NOT NULL,\n      third_party_id VARCHAR(28) NOT NULL,\n      third_party_user_id VARCHAR(256) NOT NULL,\n      CONSTRAINT thirdparty_user_to_tenant_third_party_user_id_key\n        UNIQUE (app_id, tenant_id, third_party_id, third_party_user_id),\n      CONSTRAINT thirdparty_user_to_tenant_pkey\n        PRIMARY KEY (app_id, tenant_id, user_id),\n      CONSTRAINT thirdparty_user_to_tenant_user_id_fkey\n        FOREIGN KEY (app_id, tenant_id, user_id)\n        REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE\n    );\n\n    ALTER TABLE thirdparty_user_to_tenant\n      DROP CONSTRAINT IF EXISTS thirdparty_user_to_tenant_third_party_user_id_key;\n\n    ALTER TABLE thirdparty_user_to_tenant\n      ADD CONSTRAINT thirdparty_user_to_tenant_third_party_user_id_key\n        UNIQUE (app_id, tenant_id, third_party_id, third_party_user_id);\n\n    ALTER TABLE thirdparty_user_to_tenant\n      DROP CONSTRAINT IF EXISTS thirdparty_user_to_tenant_user_id_fkey;\n\n    ALTER TABLE thirdparty_user_to_tenant\n      ADD CONSTRAINT thirdparty_user_to_tenant_user_id_fkey\n        FOREIGN KEY (app_id, tenant_id, user_id)\n        REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE;\n\n    INSERT INTO thirdparty_user_to_tenant (user_id, third_party_id, third_party_user_id)\n      SELECT user_id, third_party_id, third_party_user_id FROM thirdparty_users ON CONFLICT DO NOTHING;\n\n    -- UserIdMapping\n\n    ALTER TABLE userid_mapping\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE userid_mapping\n      DROP CONSTRAINT IF EXISTS userid_mapping_pkey CASCADE;\n\n    ALTER TABLE userid_mapping\n      ADD CONSTRAINT userid_mapping_pkey \n        PRIMARY KEY (app_id, supertokens_user_id, external_user_id);\n\n    ALTER TABLE userid_mapping\n      DROP CONSTRAINT IF EXISTS userid_mapping_supertokens_user_id_key;\n\n    ALTER TABLE userid_mapping\n      ADD CONSTRAINT userid_mapping_supertokens_user_id_key\n        UNIQUE (app_id, supertokens_user_id);\n\n    ALTER TABLE userid_mapping\n      DROP CONSTRAINT IF EXISTS userid_mapping_external_user_id_key;\n\n    ALTER TABLE userid_mapping\n      ADD CONSTRAINT userid_mapping_external_user_id_key\n        UNIQUE (app_id, external_user_id);\n\n    ALTER TABLE userid_mapping\n      DROP CONSTRAINT IF EXISTS userid_mapping_supertokens_user_id_fkey;\n\n    ALTER TABLE userid_mapping\n      ADD CONSTRAINT userid_mapping_supertokens_user_id_fkey \n        FOREIGN KEY (app_id, supertokens_user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS userid_mapping_supertokens_user_id_index ON userid_mapping (app_id, supertokens_user_id);\n\n    -- UserRoles\n\n    ALTER TABLE roles\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE roles\n      DROP CONSTRAINT roles_pkey CASCADE;\n\n    ALTER TABLE roles\n      ADD CONSTRAINT roles_pkey \n        PRIMARY KEY (app_id, role);\n\n    ALTER TABLE roles\n      DROP CONSTRAINT IF EXISTS roles_app_id_fkey;\n\n    ALTER TABLE roles\n      ADD CONSTRAINT roles_app_id_fkey \n        FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS roles_app_id_index ON roles (app_id);\n\n    ------------------------------------------------------------\n\n    ALTER TABLE role_permissions\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE role_permissions\n      DROP CONSTRAINT role_permissions_pkey CASCADE;\n\n    ALTER TABLE role_permissions\n      ADD CONSTRAINT role_permissions_pkey \n        PRIMARY KEY (app_id, role, permission);\n\n    ALTER TABLE role_permissions\n      DROP CONSTRAINT IF EXISTS role_permissions_role_fkey;\n\n    ALTER TABLE role_permissions\n      ADD CONSTRAINT role_permissions_role_fkey \n        FOREIGN KEY (app_id, role)\n        REFERENCES roles (app_id, role) ON DELETE CASCADE;\n\n    DROP INDEX IF EXISTS role_permissions_permission_index;\n\n    CREATE INDEX IF NOT EXISTS role_permissions_permission_index ON role_permissions (app_id, permission);\n\n    CREATE INDEX IF NOT EXISTS role_permissions_role_index ON role_permissions (app_id, role);\n\n    ------------------------------------------------------------\n\n    ALTER TABLE user_roles\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n      ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE user_roles\n      DROP CONSTRAINT user_roles_pkey CASCADE;\n\n    ALTER TABLE user_roles\n      ADD CONSTRAINT user_roles_pkey \n        PRIMARY KEY (app_id, tenant_id, user_id, role);\n\n    ALTER TABLE user_roles\n      DROP CONSTRAINT IF EXISTS user_roles_tenant_id_fkey;\n\n    ALTER TABLE user_roles\n      ADD CONSTRAINT user_roles_tenant_id_fkey \n        FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    ALTER TABLE user_roles\n      DROP CONSTRAINT IF EXISTS user_roles_role_fkey;\n\n    ALTER TABLE user_roles\n      ADD CONSTRAINT user_roles_role_fkey \n        FOREIGN KEY (app_id, role)\n        REFERENCES roles (app_id, role) ON DELETE CASCADE;\n\n    DROP INDEX IF EXISTS user_roles_role_index;\n\n    CREATE INDEX IF NOT EXISTS user_roles_role_index ON user_roles (app_id, tenant_id, role);\n\n    CREATE INDEX IF NOT EXISTS user_roles_tenant_id_index ON user_roles (app_id, tenant_id);\n\n    CREATE INDEX IF NOT EXISTS user_roles_app_id_role_index ON user_roles (app_id, role);\n\n    -- UserMetadata\n\n    ALTER TABLE user_metadata\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE user_metadata\n      DROP CONSTRAINT user_metadata_pkey CASCADE;\n\n    ALTER TABLE user_metadata\n      ADD CONSTRAINT user_metadata_pkey \n        PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE user_metadata\n      DROP CONSTRAINT IF EXISTS user_metadata_app_id_fkey;\n\n    ALTER TABLE user_metadata\n      ADD CONSTRAINT user_metadata_app_id_fkey \n        FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS user_metadata_app_id_index ON user_metadata (app_id);\n\n    -- Dashboard\n\n    ALTER TABLE dashboard_users\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE dashboard_users\n      DROP CONSTRAINT dashboard_users_pkey CASCADE;\n\n    ALTER TABLE dashboard_users\n      ADD CONSTRAINT dashboard_users_pkey \n        PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE dashboard_users\n      DROP CONSTRAINT IF EXISTS dashboard_users_email_key;\n\n    ALTER TABLE dashboard_users\n      ADD CONSTRAINT dashboard_users_email_key\n        UNIQUE (app_id, email);\n\n    ALTER TABLE dashboard_users\n      DROP CONSTRAINT IF EXISTS dashboard_users_app_id_fkey;\n\n    ALTER TABLE dashboard_users\n      ADD CONSTRAINT dashboard_users_app_id_fkey \n        FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS dashboard_users_app_id_index ON dashboard_users (app_id);\n\n    ------------------------------------------------------------\n\n    ALTER TABLE dashboard_user_sessions\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE dashboard_user_sessions\n      DROP CONSTRAINT dashboard_user_sessions_pkey CASCADE;\n\n    ALTER TABLE dashboard_user_sessions\n      ADD CONSTRAINT dashboard_user_sessions_pkey \n        PRIMARY KEY (app_id, session_id);\n\n    ALTER TABLE dashboard_user_sessions\n      DROP CONSTRAINT IF EXISTS dashboard_user_sessions_user_id_fkey;\n\n    ALTER TABLE dashboard_user_sessions\n      ADD CONSTRAINT dashboard_user_sessions_user_id_fkey \n        FOREIGN KEY (app_id, user_id)\n        REFERENCES dashboard_users (app_id, user_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS dashboard_user_sessions_user_id_index ON dashboard_user_sessions (app_id, user_id);\n\n    -- TOTP\n\n    ALTER TABLE totp_users\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE totp_users\n      DROP CONSTRAINT totp_users_pkey CASCADE;\n\n    ALTER TABLE totp_users\n      ADD CONSTRAINT totp_users_pkey \n        PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE totp_users\n      DROP CONSTRAINT IF EXISTS totp_users_app_id_fkey;\n\n    ALTER TABLE totp_users\n      ADD CONSTRAINT totp_users_app_id_fkey \n        FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS totp_users_app_id_index ON totp_users (app_id);\n\n    ------------------------------------------------------------\n\n    ALTER TABLE totp_user_devices\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE totp_user_devices\n      DROP CONSTRAINT totp_user_devices_pkey;\n\n    ALTER TABLE totp_user_devices\n      ADD CONSTRAINT totp_user_devices_pkey \n        PRIMARY KEY (app_id, user_id, device_name);\n\n    ALTER TABLE totp_user_devices\n      DROP CONSTRAINT IF EXISTS totp_user_devices_user_id_fkey;\n\n    ALTER TABLE totp_user_devices\n      ADD CONSTRAINT totp_user_devices_user_id_fkey \n        FOREIGN KEY (app_id, user_id)\n        REFERENCES totp_users (app_id, user_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS totp_user_devices_user_id_index ON totp_user_devices (app_id, user_id);\n\n    ------------------------------------------------------------\n\n    ALTER TABLE totp_used_codes\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public',\n      ADD COLUMN IF NOT EXISTS tenant_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE totp_used_codes\n      DROP CONSTRAINT totp_used_codes_pkey CASCADE;\n\n    ALTER TABLE totp_used_codes\n      ADD CONSTRAINT totp_used_codes_pkey \n        PRIMARY KEY (app_id, tenant_id, user_id, created_time_ms);\n\n    ALTER TABLE totp_used_codes\n      DROP CONSTRAINT IF EXISTS totp_used_codes_user_id_fkey;\n\n    ALTER TABLE totp_used_codes\n      ADD CONSTRAINT totp_used_codes_user_id_fkey \n        FOREIGN KEY (app_id, user_id)\n        REFERENCES totp_users (app_id, user_id) ON DELETE CASCADE;\n\n    ALTER TABLE totp_used_codes\n      DROP CONSTRAINT IF EXISTS totp_used_codes_tenant_id_fkey;\n\n    ALTER TABLE totp_used_codes\n      ADD CONSTRAINT totp_used_codes_tenant_id_fkey \n        FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    DROP INDEX IF EXISTS totp_used_codes_expiry_time_ms_index;\n\n    CREATE INDEX IF NOT EXISTS totp_used_codes_expiry_time_ms_index ON totp_used_codes (app_id, tenant_id, expiry_time_ms);\n\n    CREATE INDEX IF NOT EXISTS totp_used_codes_user_id_index ON totp_used_codes (app_id, user_id);\n\n    CREATE INDEX IF NOT EXISTS totp_used_codes_tenant_id_index ON totp_used_codes (app_id, tenant_id);\n\n    -- ActiveUsers\n\n    ALTER TABLE user_last_active\n      ADD COLUMN IF NOT EXISTS app_id VARCHAR(64) DEFAULT 'public';\n\n    ALTER TABLE user_last_active\n      DROP CONSTRAINT user_last_active_pkey CASCADE;\n\n    ALTER TABLE user_last_active\n      ADD CONSTRAINT user_last_active_pkey \n        PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE user_last_active\n      DROP CONSTRAINT IF EXISTS user_last_active_app_id_fkey;\n\n    ALTER TABLE user_last_active\n      ADD CONSTRAINT user_last_active_app_id_fkey \n        FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    CREATE INDEX IF NOT EXISTS user_last_active_app_id_index ON user_last_active (app_id);\n\n    ```\n\n    </details>\n\n    <details>\n\n    <summary>If using MySQL</summary>\n\n   #### Run the following SQL script\n\n    ```sql\n    -- helper stored procedures\n    DELIMITER //\n\n    CREATE PROCEDURE st_drop_all_fkeys()\n    BEGIN\n      DECLARE done INT DEFAULT FALSE;\n      DECLARE dropCommand VARCHAR(255);\n      DECLARE dropCur CURSOR for \n              SELECT concat('ALTER TABLE ', table_schema,'.',table_name,' DROP FOREIGN KEY ', constraint_name, ';') \n              FROM information_schema.table_constraints\n              WHERE constraint_type='FOREIGN KEY' \n                  AND table_schema = DATABASE()\n                  AND table_name in (\n                    'all_auth_recipe_users',\n                    'dashboard_user_sessions',\n                    'dashboard_users',\n                    'emailpassword_pswd_reset_tokens',\n                    'emailpassword_users',\n                    'emailverification_tokens',\n                    'emailverification_verified_emails',\n                    'jwt_signing_keys',\n                    'key_value',\n                    'passwordless_codes',\n                    'passwordless_devices',\n                    'passwordless_users',\n                    'role_permissions',\n                    'roles',\n                    'session_access_token_signing_keys',\n                    'session_info',\n                    'thirdparty_users',\n                    'totp_used_codes',\n                    'totp_user_devices',\n                    'totp_users',\n                    'user_last_active',\n                    'user_metadata',\n                    'user_roles',\n                    'userid_mapping'\n                  );\n\n      DECLARE CONTINUE handler for NOT found SET done = true;\n        OPEN dropCur;\n\n        read_loop: LOOP\n            FETCH dropCur INTO dropCommand;\n            IF done THEN\n                leave read_loop;\n            END IF;\n\n            SET @sdropCommand = dropCommand;\n\n            PREPARE dropClientUpdateKeyStmt FROM @sdropCommand;\n\n            EXECUTE dropClientUpdateKeyStmt;\n\n            DEALLOCATE prepare dropClientUpdateKeyStmt;\n        END LOOP;\n\n        CLOSE dropCur;\n    END //\n\n    --\n\n    CREATE PROCEDURE st_drop_all_pkeys()\n    BEGIN\n      DECLARE done INT DEFAULT FALSE;\n      DECLARE dropCommand VARCHAR(255);\n      DECLARE dropCur CURSOR for \n              SELECT concat('ALTER TABLE ', table_schema,'.',table_name,' DROP PRIMARY KEY ', ';') \n              FROM information_schema.table_constraints\n              WHERE constraint_type='PRIMARY KEY' \n                  AND table_schema = DATABASE()\n                  AND table_name in (\n                    'all_auth_recipe_users',\n                    'dashboard_user_sessions',\n                    'dashboard_users',\n                    'emailpassword_pswd_reset_tokens',\n                    'emailpassword_users',\n                    'emailverification_tokens',\n                    'emailverification_verified_emails',\n                    'jwt_signing_keys',\n                    'key_value',\n                    'passwordless_codes',\n                    'passwordless_devices',\n                    'passwordless_users',\n                    'role_permissions',\n                    'roles',\n                    'session_access_token_signing_keys',\n                    'session_info',\n                    'thirdparty_users',\n                    'totp_used_codes',\n                    'totp_user_devices',\n                    'totp_users',\n                    'user_last_active',\n                    'user_metadata',\n                    'user_roles',\n                    'userid_mapping'\n                  );\n\n      DECLARE CONTINUE handler for NOT found SET done = true;\n        OPEN dropCur;\n\n        read_loop: LOOP\n            FETCH dropCur INTO dropCommand;\n            IF done THEN\n                leave read_loop;\n            END IF;\n\n            SET @sdropCommand = dropCommand;\n\n            PREPARE dropClientUpdateKeyStmt FROM @sdropCommand;\n\n            EXECUTE dropClientUpdateKeyStmt;\n\n            DEALLOCATE prepare dropClientUpdateKeyStmt;\n        END LOOP;\n\n        CLOSE dropCur;\n    END //\n\n    --\n\n    CREATE PROCEDURE st_drop_all_keys()\n    BEGIN\n      DECLARE done INT DEFAULT FALSE;\n      DECLARE dropCommand VARCHAR(255);\n      DECLARE dropCur CURSOR for \n              SELECT concat('ALTER TABLE ', table_schema,'.',table_name,' DROP INDEX ', constraint_name, ';') \n              FROM information_schema.table_constraints\n              WHERE constraint_type='UNIQUE' \n                  AND table_schema = DATABASE()\n                  AND table_name in (\n                    'all_auth_recipe_users',\n                    'dashboard_user_sessions',\n                    'dashboard_users',\n                    'emailpassword_pswd_reset_tokens',\n                    'emailpassword_users',\n                    'emailverification_tokens',\n                    'emailverification_verified_emails',\n                    'jwt_signing_keys',\n                    'key_value',\n                    'passwordless_codes',\n                    'passwordless_devices',\n                    'passwordless_users',\n                    'role_permissions',\n                    'roles',\n                    'session_access_token_signing_keys',\n                    'session_info',\n                    'thirdparty_users',\n                    'totp_used_codes',\n                    'totp_user_devices',\n                    'totp_users',\n                    'user_last_active',\n                    'user_metadata',\n                    'user_roles',\n                    'userid_mapping'\n                  );\n\n      DECLARE CONTINUE handler for NOT found SET done = true;\n        OPEN dropCur;\n\n        read_loop: LOOP\n            FETCH dropCur INTO dropCommand;\n            IF done THEN\n                leave read_loop;\n            END IF;\n\n            SET @sdropCommand = dropCommand;\n\n            PREPARE dropClientUpdateKeyStmt FROM @sdropCommand;\n\n            EXECUTE dropClientUpdateKeyStmt;\n\n            DEALLOCATE prepare dropClientUpdateKeyStmt;\n        END LOOP;\n\n        CLOSE dropCur;\n    END //\n\n    --\n\n    CREATE PROCEDURE st_drop_all_indexes()\n    BEGIN\n      DECLARE done INT DEFAULT FALSE;\n      DECLARE dropCommand VARCHAR(255);\n      DECLARE dropCur CURSOR for \n              SELECT DISTINCT concat('ALTER TABLE ', table_schema, '.', table_name, ' DROP INDEX ', index_name, ';')\n              FROM information_schema.statistics\n              WHERE NON_UNIQUE = 1 \n                AND table_schema = database()\n                AND table_name in (\n                  'all_auth_recipe_users',\n                  'dashboard_user_sessions',\n                  'dashboard_users',\n                  'emailpassword_pswd_reset_tokens',\n                  'emailpassword_users',\n                  'emailverification_tokens',\n                  'emailverification_verified_emails',\n                  'jwt_signing_keys',\n                  'key_value',\n                  'passwordless_codes',\n                  'passwordless_devices',\n                  'passwordless_users',\n                  'role_permissions',\n                  'roles',\n                  'session_access_token_signing_keys',\n                  'session_info',\n                  'thirdparty_users',\n                  'totp_used_codes',\n                  'totp_user_devices',\n                  'totp_users',\n                  'user_last_active',\n                  'user_metadata',\n                  'user_roles',\n                  'userid_mapping'\n                );\n\n      DECLARE CONTINUE handler for NOT found SET done = true;\n        OPEN dropCur;\n\n        read_loop: LOOP\n            FETCH dropCur INTO dropCommand;\n            IF done THEN\n                leave read_loop;\n            END IF;\n\n            SET @sdropCommand = dropCommand;\n\n            PREPARE dropClientUpdateKeyStmt FROM @sdropCommand;\n\n            EXECUTE dropClientUpdateKeyStmt;\n\n            DEALLOCATE prepare dropClientUpdateKeyStmt;\n        END LOOP;\n\n        CLOSE dropCur;\n    END //\n\n    --\n\n    CREATE PROCEDURE st_add_column_if_not_exists(\n    IN p_table_name varchar(50), \n    IN p_column_name varchar(50),\n    IN p_column_type varchar(50),\n    IN p_additional varchar(100),\n    OUT p_status_message varchar(100))\n        READS SQL DATA\n    BEGIN\n        DECLARE v_count INT;\n        \n        # Check wether column exist or not\n        SELECT count(*) INTO v_count\n        FROM information_schema.columns\n        WHERE table_schema = database()\n            AND table_name   = p_table_name\n            AND column_name  = p_column_name;\n            \n        IF v_count > 0 THEN\n          # Return column already exists message\n          SELECT 'Column already Exists' INTO p_status_message;\n        ELSE\n            # Add Column and return success message\n          set @ddl_addcolumn=CONCAT('ALTER TABLE ',database(),'.',p_table_name,\n          ' ADD COLUMN ',p_column_name,' ',p_column_type,' ',p_additional);\n        prepare add_column_sql from @ddl_addcolumn;\n        execute add_column_sql;\n          SELECT 'Column Successfully  Created!' INTO p_status_message;\n        END IF;\n    END //\n\n    DELIMITER ;\n    -- Drop constraints and indexes\n\n    CALL st_drop_all_fkeys();\n    CALL st_drop_all_keys();\n    CALL st_drop_all_pkeys();\n    CALL st_drop_all_indexes(); \n\n    -- General Tables\n\n    CREATE TABLE IF NOT EXISTS apps  (\n      app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n      created_at_time BIGINT UNSIGNED\n    );\n\n    ALTER TABLE apps\n      ADD PRIMARY KEY(app_id);\n\n    INSERT IGNORE INTO apps (app_id, created_at_time) \n      VALUES ('public', 0);\n\n    --\n\n    CREATE TABLE IF NOT EXISTS tenants (\n      app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n      tenant_id VARCHAR(64) NOT NULL DEFAULT 'public',\n      created_at_time BIGINT UNSIGNED\n    );\n\n    ALTER TABLE tenants\n      ADD PRIMARY KEY(app_id, tenant_id);\n\n    ALTER TABLE tenants\n      ADD FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    INSERT IGNORE INTO tenants (app_id, tenant_id, created_at_time) \n      VALUES ('public', 'public', 0);\n\n    --\n\n    CALL st_add_column_if_not_exists('key_value', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n    CALL st_add_column_if_not_exists('key_value', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE key_value\n      ADD PRIMARY KEY (app_id, tenant_id, name);\n\n    ALTER TABLE key_value\n      ADD FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    --\n\n    CREATE TABLE IF NOT EXISTS app_id_to_user_id (\n      app_id VARCHAR(64) NOT NULL DEFAULT 'public',\n      user_id CHAR(36) NOT NULL,\n      recipe_id VARCHAR(128) NOT NULL\n    );\n\n    ALTER TABLE app_id_to_user_id\n      ADD PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE app_id_to_user_id\n      ADD FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    INSERT IGNORE INTO app_id_to_user_id (user_id, recipe_id) \n      SELECT user_id, recipe_id\n      FROM all_auth_recipe_users;\n\n    --\n\n    CALL st_add_column_if_not_exists('all_auth_recipe_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n    CALL st_add_column_if_not_exists('all_auth_recipe_users', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE all_auth_recipe_users\n      ADD PRIMARY KEY (app_id, tenant_id, user_id);\n\n    ALTER TABLE all_auth_recipe_users\n      ADD FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    ALTER TABLE all_auth_recipe_users\n      ADD FOREIGN KEY (app_id, user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    CREATE INDEX all_auth_recipe_users_pagination_index ON all_auth_recipe_users (time_joined DESC, user_id DESC, tenant_id DESC, app_id DESC);\n\n    -- Multitenancy\n\n    CREATE TABLE IF NOT EXISTS tenant_configs (\n      connection_uri_domain VARCHAR(256) DEFAULT '',\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      core_config TEXT,\n      email_password_enabled BOOLEAN,\n      passwordless_enabled BOOLEAN,\n      third_party_enabled BOOLEAN\n    );\n\n    ALTER TABLE tenant_configs\n      ADD PRIMARY KEY (connection_uri_domain, app_id, tenant_id);\n\n    --\n\n    CREATE TABLE IF NOT EXISTS tenant_thirdparty_providers (\n      connection_uri_domain VARCHAR(256) DEFAULT '',\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      third_party_id VARCHAR(28) NOT NULL,\n      name VARCHAR(64),\n      authorization_endpoint TEXT,\n      authorization_endpoint_query_params TEXT,\n      token_endpoint TEXT,\n      token_endpoint_body_params TEXT,\n      user_info_endpoint TEXT,\n      user_info_endpoint_query_params TEXT,\n      user_info_endpoint_headers TEXT,\n      jwks_uri TEXT,\n      oidc_discovery_endpoint TEXT,\n      require_email BOOLEAN,\n      user_info_map_from_id_token_payload_user_id VARCHAR(64),\n      user_info_map_from_id_token_payload_email VARCHAR(64),\n      user_info_map_from_id_token_payload_email_verified VARCHAR(64),\n      user_info_map_from_user_info_endpoint_user_id VARCHAR(64),\n      user_info_map_from_user_info_endpoint_email VARCHAR(64),\n      user_info_map_from_user_info_endpoint_email_verified VARCHAR(64)\n    );\n\n    ALTER TABLE tenant_thirdparty_providers\n      ADD PRIMARY KEY (connection_uri_domain, app_id, tenant_id, third_party_id);\n\n    ALTER TABLE tenant_thirdparty_providers\n      ADD FOREIGN KEY (connection_uri_domain, app_id, tenant_id)\n        REFERENCES tenant_configs (connection_uri_domain, app_id, tenant_id) ON DELETE CASCADE;\n\n    --\n\n    CREATE TABLE IF NOT EXISTS tenant_thirdparty_provider_clients (\n      connection_uri_domain VARCHAR(256) DEFAULT '',\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      third_party_id VARCHAR(28) NOT NULL,\n      client_type VARCHAR(64) NOT NULL DEFAULT '',\n      client_id VARCHAR(256) NOT NULL,\n      client_secret TEXT,\n      scope TEXT,\n      force_pkce BOOLEAN,\n      additional_config TEXT\n    );\n\n    ALTER TABLE tenant_thirdparty_provider_clients\n      ADD PRIMARY KEY (connection_uri_domain, app_id, tenant_id, third_party_id, client_type);\n\n    ALTER TABLE tenant_thirdparty_provider_clients\n      ADD FOREIGN KEY (connection_uri_domain, app_id, tenant_id, third_party_id)\n        REFERENCES tenant_thirdparty_providers (connection_uri_domain, app_id, tenant_id, third_party_id) ON DELETE CASCADE;\n\n\n    -- Session\n\n    CALL st_add_column_if_not_exists('session_info', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n    CALL st_add_column_if_not_exists('session_info', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE session_info\n      ADD PRIMARY KEY (app_id, tenant_id, session_handle);\n\n    ALTER TABLE session_info\n      ADD FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    CREATE INDEX session_expiry_index ON session_info (expires_at);\n\n    --\n\n    CALL st_add_column_if_not_exists('session_access_token_signing_keys', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE session_access_token_signing_keys\n      ADD PRIMARY KEY (app_id, created_at_time);\n\n    ALTER TABLE session_access_token_signing_keys\n      ADD FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    -- JWT\n\n    CALL st_add_column_if_not_exists('jwt_signing_keys', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE jwt_signing_keys\n      ADD PRIMARY KEY (app_id, key_id);\n\n    ALTER TABLE jwt_signing_keys\n      ADD FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    -- EmailVerification\n\n    CALL st_add_column_if_not_exists('emailverification_verified_emails', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE emailverification_verified_emails\n      ADD PRIMARY KEY (app_id, user_id, email);\n\n    ALTER TABLE emailverification_verified_emails\n      ADD FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    --\n\n    CALL st_add_column_if_not_exists('emailverification_tokens', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n    CALL st_add_column_if_not_exists('emailverification_tokens', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE emailverification_tokens\n      ADD PRIMARY KEY (app_id, tenant_id, user_id, email, token);\n\n    ALTER TABLE emailverification_tokens\n      ADD FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    ALTER TABLE emailverification_tokens\n      ADD CONSTRAINT token UNIQUE (token);\n\n    CREATE INDEX emailverification_tokens_index ON emailverification_tokens(token_expiry);\n\n    -- EmailPassword\n\n    CALL st_add_column_if_not_exists('emailpassword_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE emailpassword_users\n      ADD PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE emailpassword_users\n      ADD FOREIGN KEY (app_id, user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    -- --\n\n    CREATE TABLE IF NOT EXISTS emailpassword_user_to_tenant (\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      user_id CHAR(36) NOT NULL,\n      email VARCHAR(256) NOT NULL\n    );\n\n    ALTER TABLE emailpassword_user_to_tenant\n      ADD PRIMARY KEY (app_id, tenant_id, user_id);\n\n    ALTER TABLE emailpassword_user_to_tenant\n      ADD CONSTRAINT email UNIQUE (app_id, tenant_id, email);\n\n    ALTER TABLE emailpassword_user_to_tenant\n      ADD CONSTRAINT FOREIGN KEY (app_id, tenant_id, user_id)\n        REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE;\n\n    INSERT IGNORE INTO emailpassword_user_to_tenant (user_id, email)\n      SELECT user_id, email FROM emailpassword_users;\n\n    --\n\n    CALL st_add_column_if_not_exists('emailpassword_pswd_reset_tokens', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE emailpassword_pswd_reset_tokens\n      ADD PRIMARY KEY (app_id, user_id, token);\n\n    ALTER TABLE emailpassword_pswd_reset_tokens\n      ADD FOREIGN KEY (app_id, user_id)\n        REFERENCES emailpassword_users (app_id, user_id) ON DELETE CASCADE;\n\n    ALTER TABLE emailpassword_pswd_reset_tokens\n      ADD CONSTRAINT token UNIQUE (token);\n\n    CREATE INDEX emailpassword_password_reset_token_expiry_index ON emailpassword_pswd_reset_tokens (token_expiry);\n\n    -- Passwordless\n\n    CALL st_add_column_if_not_exists('passwordless_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE passwordless_users\n      ADD PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE passwordless_users\n      ADD FOREIGN KEY (app_id, user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    --\n\n    CREATE TABLE IF NOT EXISTS passwordless_user_to_tenant (\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      user_id CHAR(36) NOT NULL,\n      email VARCHAR(256),\n      phone_number VARCHAR(256)\n    );\n\n    ALTER TABLE passwordless_user_to_tenant\n      ADD PRIMARY KEY (app_id, tenant_id, user_id);\n\n    ALTER TABLE passwordless_user_to_tenant\n      ADD CONSTRAINT email UNIQUE (app_id, tenant_id, email);\n\n    ALTER TABLE passwordless_user_to_tenant\n      ADD CONSTRAINT phone_number UNIQUE (app_id, tenant_id, phone_number);\n\n    ALTER TABLE passwordless_user_to_tenant\n      ADD FOREIGN KEY (app_id, tenant_id, user_id)\n        REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE;\n\n    INSERT IGNORE INTO passwordless_user_to_tenant (user_id, email, phone_number)\n      SELECT user_id, email, phone_number FROM passwordless_users;\n\n    --\n\n    CALL st_add_column_if_not_exists('passwordless_devices', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n    CALL st_add_column_if_not_exists('passwordless_devices', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE passwordless_devices\n      ADD PRIMARY KEY (app_id, tenant_id, device_id_hash);\n\n    ALTER TABLE passwordless_devices\n      ADD FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    CREATE INDEX passwordless_devices_email_index ON passwordless_devices (app_id, tenant_id, email);\n\n    CREATE INDEX passwordless_devices_phone_number_index ON passwordless_devices (app_id, tenant_id, phone_number);\n\n    --\n\n    CALL st_add_column_if_not_exists('passwordless_codes', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n    CALL st_add_column_if_not_exists('passwordless_codes', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE passwordless_codes\n      ADD PRIMARY KEY (app_id, tenant_id, code_id);\n\n    ALTER TABLE passwordless_codes\n      ADD FOREIGN KEY (app_id, tenant_id, device_id_hash)\n        REFERENCES passwordless_devices (app_id, tenant_id, device_id_hash) ON DELETE CASCADE;\n\n    ALTER TABLE passwordless_codes\n      ADD CONSTRAINT link_code_hash\n        UNIQUE (app_id, tenant_id, link_code_hash);\n\n    CREATE INDEX passwordless_codes_created_at_index ON passwordless_codes (app_id, tenant_id, created_at);\n\n    -- ThirdParty\n\n    CALL st_add_column_if_not_exists('thirdparty_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE thirdparty_users\n      ADD PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE thirdparty_users\n      ADD FOREIGN KEY (app_id, user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    CREATE INDEX thirdparty_users_thirdparty_user_id_index ON thirdparty_users (app_id, third_party_id, third_party_user_id);\n\n    CREATE INDEX thirdparty_users_email_index ON thirdparty_users (app_id, email);\n\n    --\n\n    CREATE TABLE IF NOT EXISTS thirdparty_user_to_tenant (\n      app_id VARCHAR(64) DEFAULT 'public',\n      tenant_id VARCHAR(64) DEFAULT 'public',\n      user_id CHAR(36) NOT NULL,\n      third_party_id VARCHAR(28) NOT NULL,\n      third_party_user_id VARCHAR(256) NOT NULL\n    );\n\n    ALTER TABLE thirdparty_user_to_tenant\n      ADD PRIMARY KEY (app_id, tenant_id, user_id);\n\n    ALTER TABLE thirdparty_user_to_tenant\n      ADD CONSTRAINT third_party_user_id\n        UNIQUE (app_id, tenant_id, third_party_id, third_party_user_id);\n\n    ALTER TABLE thirdparty_user_to_tenant\n      ADD FOREIGN KEY (app_id, tenant_id, user_id)\n        REFERENCES all_auth_recipe_users (app_id, tenant_id, user_id) ON DELETE CASCADE;\n\n    INSERT IGNORE INTO thirdparty_user_to_tenant (user_id, third_party_id, third_party_user_id)\n      SELECT user_id, third_party_id, third_party_user_id FROM thirdparty_users;\n\n    -- UserIdMapping\n\n    CALL st_add_column_if_not_exists('userid_mapping', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE userid_mapping\n      ADD PRIMARY KEY (app_id, supertokens_user_id, external_user_id);\n\n    ALTER TABLE userid_mapping\n      ADD CONSTRAINT supertokens_user_id\n        UNIQUE (app_id, supertokens_user_id);\n\n    ALTER TABLE userid_mapping\n      ADD CONSTRAINT external_user_id\n        UNIQUE (app_id, external_user_id);\n\n    ALTER TABLE userid_mapping\n      ADD FOREIGN KEY (app_id, supertokens_user_id)\n        REFERENCES app_id_to_user_id (app_id, user_id) ON DELETE CASCADE;\n\n    -- UserRoles\n\n    CALL st_add_column_if_not_exists('roles', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE roles\n      ADD PRIMARY KEY (app_id, role);\n\n    ALTER TABLE roles\n      ADD FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    --\n\n    CALL st_add_column_if_not_exists('role_permissions', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE role_permissions\n      ADD PRIMARY KEY (app_id, role, permission);\n\n    ALTER TABLE role_permissions\n      ADD FOREIGN KEY (app_id, role)\n        REFERENCES roles (app_id, role) ON DELETE CASCADE;\n\n    CREATE INDEX role_permissions_permission_index ON role_permissions (app_id, permission);\n\n    --\n\n    CALL st_add_column_if_not_exists('user_roles', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n    CALL st_add_column_if_not_exists('user_roles', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE user_roles\n      ADD PRIMARY KEY (app_id, tenant_id, user_id, role);\n\n    ALTER TABLE user_roles\n      ADD FOREIGN KEY (app_id, role)\n        REFERENCES roles (app_id, role) ON DELETE CASCADE;\n\n    ALTER TABLE user_roles\n      ADD FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    CREATE INDEX user_roles_role_index ON user_roles (app_id, tenant_id, role);\n\n    -- UserMetadata\n\n    CALL st_add_column_if_not_exists('user_metadata', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE user_metadata\n      ADD PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE user_metadata\n      ADD FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    -- Dashboard\n\n    CALL st_add_column_if_not_exists('dashboard_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE dashboard_users\n      ADD PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE dashboard_users\n      ADD CONSTRAINT email\n        UNIQUE (app_id, email);\n\n    ALTER TABLE dashboard_users\n      ADD FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    --\n\n    CALL st_add_column_if_not_exists('dashboard_user_sessions', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE dashboard_user_sessions\n      ADD PRIMARY KEY (app_id, session_id);\n\n    ALTER TABLE dashboard_user_sessions\n      ADD FOREIGN KEY (app_id, user_id)\n        REFERENCES dashboard_users (app_id, user_id) ON DELETE CASCADE;\n\n    CREATE INDEX dashboard_user_sessions_expiry_index ON dashboard_user_sessions (expiry);\n\n    -- TOTP\n\n    CALL st_add_column_if_not_exists('totp_users', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE totp_users\n      ADD PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE totp_users\n      ADD FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    --\n\n    CALL st_add_column_if_not_exists('totp_user_devices', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE totp_user_devices\n      ADD PRIMARY KEY (app_id, user_id, device_name);\n\n    ALTER TABLE totp_user_devices\n      ADD FOREIGN KEY (app_id, user_id)\n        REFERENCES totp_users (app_id, user_id) ON DELETE CASCADE;\n\n    --\n\n    CALL st_add_column_if_not_exists('totp_used_codes', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n    CALL st_add_column_if_not_exists('totp_used_codes', 'tenant_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE totp_used_codes\n      ADD PRIMARY KEY (app_id, tenant_id, user_id, created_time_ms);\n\n    ALTER TABLE totp_used_codes\n      ADD FOREIGN KEY (app_id, user_id)\n        REFERENCES totp_users (app_id, user_id) ON DELETE CASCADE;\n\n    ALTER TABLE totp_used_codes\n      ADD FOREIGN KEY (app_id, tenant_id)\n        REFERENCES tenants (app_id, tenant_id) ON DELETE CASCADE;\n\n    CREATE INDEX totp_used_codes_expiry_time_ms_index ON totp_used_codes (app_id, tenant_id, expiry_time_ms);\n\n    -- ActiveUsers\n\n    CALL st_add_column_if_not_exists('user_last_active', 'app_id', 'VARCHAR(64)', 'NOT NULL DEFAULT \\'public\\'', @status_message);\n\n    ALTER TABLE user_last_active\n      ADD PRIMARY KEY (app_id, user_id);\n\n    ALTER TABLE user_last_active\n      ADD FOREIGN KEY (app_id)\n        REFERENCES apps (app_id) ON DELETE CASCADE;\n\n    -- Drop procedures\n\n    DROP PROCEDURE st_drop_all_fkeys;\n\n    DROP PROCEDURE st_drop_all_keys;\n\n    DROP PROCEDURE st_drop_all_pkeys;\n\n    DROP PROCEDURE st_drop_all_indexes;\n\n    DROP PROCEDURE st_add_column_if_not_exists;\n    ```\n\n    </details>\n\n4. Start the new instance(s) of the core (version 6.0.0)\n\n## [5.0.0] - 2023-04-05\n\n### Changes\n\n- Updated the `java-jwt` dependency version\n- Increases free Dashboard user count to 3\n\n### Fixes\n\n- Fixed creating JWTs using MongoDB if a key already exists\n\n### Breaking changes\n\n- Using an internal `SemVer` class to handle version numbers. This will make handling CDI version ranges easier.\n- Support for CDI version `2.21`\n    - Removed POST `/recipe/handshake`\n    - Added `useDynamicSigningKey` into `createNewSession` (POST `/recipe/session`), replacing\n      `access_token_signing_key_dynamic` used in CDI<=2.18\n    - Added `useStaticSigningKey` into `createSignedJWT` (POST `/recipe/jwt`)\n    - Added `checkDatabase` into `verifySession` (POST `/recipe/session/verify`), replacing\n      `access_token_blacklisting` used in CDI<=2.18\n    - Removed `idRefreshToken`, `jwtSigningPublicKey`, `jwtSigningPublicKeyExpiryTime` and `jwtSigningPublicKeyList`\n      from responses\n    - Deprecated GET `/recipe/jwt/jwks`\n    - Added GET `/.well-known/jwks.json`: a standard jwks\n- Added new access token version\n    - Uses standard prop names (i.e.: `sub` instead of `userId`)\n    - Contains the id of the signing key in the header (as `kid`)\n    - Stores the user payload merged into the root level, instead of the `userData` prop\n- Session handling function now throw if the user payload contains protected props (`sub`, `iat`, `exp`,\n  `sessionHandle`, `refreshTokenHash1`, `parentRefreshTokenHash1`, `antiCsrfToken`)\n    - A related exception type was added as `AccessTokenPayloadError`\n- Refactored the handling of signing keys\n- `createNewSession` now takes a `useStaticKey` parameter instead of depending on the\n  `access_token_signing_key_dynamic` config value\n- `createJWTToken` now supports signing by a dynamic key\n- `getSession` now takes a `checkDatabase` parameter instead of using the `access_token_blacklisting` config value\n- Updated plugin interface version to 2.21\n\n### Configuration Changes\n\n- `access_token_signing_key_dynamic` is now deprecated, only used for requests with CDI<=2.18\n- `access_token_blacklisting` is now deprecated, only used for requests with CDI<=2.18\n- Renamed `access_token_signing_key_update_interval` to `access_token_dynamic_signing_key_update_interval`\n\n### Database Changes\n\n- Added new `useStaticKey` field into session info\n- Manual migration is also required if `access_token_signing_key_dynamic` was set to false\n\n#### Migration steps for SQL\n\n- If using `access_token_signing_key_dynamic` false:\n    ```sql\n    ALTER TABLE session_info ADD COLUMN use_static_key BOOLEAN NOT NULL DEFAULT(true);\n    ALTER TABLE session_info ALTER COLUMN use_static_key DROP DEFAULT;\n    ```\n    ```sql\n    INSERT INTO jwt_signing_keys(key_id, key_string, algorithm, created_at)\n      select CONCAT('s-', created_at_time) as key_id, value as key_string, 'RS256' as algorithm, created_at_time as created_at\n      from session_access_token_signing_keys;\n    ```\n- If using `access_token_signing_key_dynamic` true or not set:\n    - ```sql\n  ALTER TABLE session_info ADD COLUMN use_static_key BOOLEAN NOT NULL DEFAULT(false);\n  ALTER TABLE session_info ALTER COLUMN use_static_key DROP DEFAULT;\n    ```\n\n#### Migration steps for MongoDB\n\n- If using `access_token_signing_key_dynamic` false:\n    ```\n    db.session_info.update({},\n      {\n        \"$set\": {\n          \"use_static_key\": true\n        }\n      });\n    ```\n    ```\n    db.key_value.aggregate([\n      {\n        \"$match\": {\n          _id: \"access_token_signing_key_list\"\n        }\n      },\n      {\n        $unwind: \"$keys\"\n      },\n      {\n        $addFields: {\n          _id: {\n            \"$concat\": [\n              \"s-\",\n              {\n                $convert: {\n                  input: \"$keys.created_at_time\",\n                  to: \"string\"\n                }\n              }\n            ]\n          },\n          \"key_string\": \"$keys.value\",\n          \"algorithm\": \"RS256\",\n          \"created_at\": \"$keys.created_at_time\",\n        }\n      },\n      {\n        \"$project\": {\n          \"keys\": 0,\n          \n        }\n      },\n      {\n        \"$merge\": {\n          \"into\": \"jwt_signing_keys\",\n          \n        }\n      }\n  ]);\n    ```\n\n- If using `access_token_signing_key_dynamic` true or not set:\n    ```\n    db.session_info.update({},\n      {\n        \"$set\": {\n          \"use_static_key\": false\n        }\n      });\n    ```\n\n## [4.6.0] - 2023-03-30\n\n- Add Optional Search Tags to Pagination API to enable dashboard search\n\n### New APIs:\n\n- `GET /user/search/tags` retrieves the available search tags\n\n## [4.5.0] - 2023-03-27\n\n- Add TOTP recipe\n\n### Database changes:\n\n- Add new tables for TOTP recipe:\n    - `totp_users` that stores the users that have enabled TOTP\n    - `totp_user_devices` that stores devices (each device has its own secret) for each user\n    - `totp_used_codes` that stores used codes for each user. This is to implement rate limiting and prevent replay\n      attacks.\n    - `user_last_active` that stores the last active time for each user.\n\n### New APIs:\n\n- `GET /users/count/active` to fetch the number of active users after the given timestamp.\n- `POST /recipe/totp/device` to create a new device as well as the user if it doesn't exist.\n- `POST /recipe/totp/device/verify` to verify a device. This is to ensure that the user has access to the device.\n- `POST /recipe/totp/verify` to verify a code and continue the login flow.\n- `PUT /recipe/totp/device` to update the name of a device. Name is just a string that the user can set to identify the\n  device.\n- `GET /recipe/totp/device/list` to get all devices for a user.\n- `POST /recipe/totp/device/remove` to remove a device. If the user has no more devices, the user is also removed.\n\n## [4.4.2] - 2023-03-16\n\n- Adds null check in email normalisation to fix: https://github.com/supertokens/supertokens-node/issues/514\n\n## [4.4.1] - 2023-03-09\n\n- Normalises email in all APIs in which email was not being\n  normalised: https://github.com/supertokens/supertokens-core/issues/577\n\n## [4.4.0] - 2023-02-21\n\n### Added\n\n- Dashboard Recipe\n- Support with CDI version `2.18`\n\n### Database Changes\n\n- Adds `dashboard_users` table\n- Adds `dashboard_user_sessions` table\n\n## [4.3.0] - 2023-01-05\n\n- Adds feature flag, ee folder and APIs to add / remove license keys for enterprise features.\n\n## [4.2.1] - 2022-11-24\n\n- Updates the type of `access_token_validity` in the CoreConfig from `int` to `long`\n\n## [4.2.0] - 2022-11-07\n\n- Update dependencies for security updates: https://github.com/supertokens/supertokens-core/issues/525\n\n## [4.1.1] - 2022-10-13\n\n- Updates core routes to now allow for trailing slashes\n\n## [4.1.0] - 2022-09-22\n\n- Adds request IP allow & deny list: https://github.com/supertokens/supertokens-core/issues/511\n\n## [4.0.1] - 2022-09-19\n\n- Fixes bug related to implementationDependencies.json\n\n## [4.0.0] - 2022-09-19\n\n### Added\n\n- EmailPassword User migration API which allows you to import users with their email and password hashes.\n- Support to import users with password hashes from Firebase\n- Support with CDI version `2.16`\n- Hello API on `/` route.\n\n### Database Changes\n\n- Updates the `password_hash` column in the `emailpassword_users` table from `VARCHAR(128)` to `VARCHAR(256)` to support\n  more password hash lengths.\n- Updates the `third_party_user_id` column in the `thirdparty_users` table from `VARCHAR(128)` to `VARCHAR(256)` to\n  resolve https://github.com/supertokens/supertokens-core/issues/306\n\n- For legacy users who are self hosting the SuperTokens core run the following command to update your database with the\n  changes:\n    - With MySql:\n      `ALTER TABLE thirdparty_users MODIFY third_party_user_id VARCHAR(256); ALTER TABLE emailpassword_users MODIFY password_hash VARCHAR(256);`\n    - With PostgreSQL:\n      `ALTER TABLE thirdparty_users ALTER COLUMN third_party_user_id TYPE VARCHAR(256); ALTER TABLE emailpassword_users ALTER COLUMN password_hash TYPE VARCHAR(256);`\n\n## [3.16.2] - 2022-09-02\n\n### Bug fixes\n\n- Updated java-jwt to handle `null` claims in JWTs\n\n## [3.16.1] - 2022-09-02\n\n### Bug fixes\n\n- Fixed handling of `null` in access token payloads: https://github.com/supertokens/supertokens-core/issues/499\n\n## [3.16.0] - 2022-08-18\n\n- Changes logging level of API start / finished & Cronjob start / finished to be `INFO` level instead of `DEBUG` level.\n- Added new config `log_level` to set logging level. Possible values are `DEBUG` | `INFO` | `WARN` | `ERROR` |\n  `NONE`. As an example, setting the log level to `WARN` would make the core print out `WARN` and `ERROR` level logs.\n\n## [3.15.1] - 2022-08-10\n\n- Updates UserIdMapping recipe to resolve UserId Mappings for Auth recipes in the core itself\n\n## [3.15.0] - 2022-07-25\n\n- Adds UserIdMapping recipe\n- Support for collecting and displaying failing tests\n\n### Database changes\n\n- Adds `userid_mapping` table\n\n## [3.14.0] - 2022-06-07\n\n- Fixes `/recipe/session/user GET` to return only session handles that have not expired.\n- Support for new plugin interface version (v2.15)\n- Checks for if the session has expired in `updateSession` before calling the update function.\n\n## [3.13.0] - 2022-05-05\n\n- Adds UserRoles recipe\n- Fixes base_path config option not being observed when running `supertokens list`\n- Adds base_path normalization logic\n\n### Database changes\n\n- Adds `roles`, `role_permissions` and `user_roles` table\n\n## [3.12.1] - 2022-04-02\n\n### Changes\n\n- Changed default `--with_argon2_hashing_pool_size` in `hashingCalibrate` CLI command to 1.\n\n## [3.12.0] - 2022-04-01\n\n- Adds github action for running tests against in memory db.\n- Adds github action for checking if \"Run tests\" action was completed (to run in PRs)\n- Fixes how config values are changed during tests.\n- Adds 60 mins timeout to github action jobs\n- Moves deleting user metadata to happen before deleting the actual user.\n- Adds support for argon2 hashing.\n- Adds colours to CLI output (in case of errors).\n\n### New config:\n\n- `password_hashing_alg`\n- `argon2_iterations`\n- `argon2_memory_kb`\n- `argon2_parallelism`\n- `argon2_hashing_pool_size`\n- `bcrypt_log_rounds`\n\n### New CLI command:\n\n- `supertokens hashingCalibrate`: Used to calibrate argon2 and bcrypt passing hashing params.\n\n## [3.11.0] - 2022-03-19\n\n### Changes\n\n- Fixes memory leak during testing.\n- Updated plugin interface version\n- Adds usermetadata recipe\n- Update CONTRIBUTING.md with instructions for gitpod setup\n\n### Database changes\n\n- Added `user_metadata` table\n\n## [3.10.0] - 2022-02-23\n\n- Updated plugin interface version\n- Fixed ResultSet instances to avoid Memory Leaks\n\n## [3.9.1] - 2022-02-16\n\n- Fixed https://github.com/supertokens/supertokens-core/issues/373: Catching `StorageTransactionLogicException` in\n  transaction helper function for retries\n\n## [3.9.0] - 2022-01-31\n\n### Changes\n\n- Supporting CDI v2.12\n- Adding the `userId` to the reponse of `recipe/user/password/reset`\n- Adds support for providing base path for all APIs: https://github.com/supertokens/supertokens-node/issues/252\n- Add workflow to verify if pr title follows conventional commits\n\n### New config param:\n\n- `base_path` - default is `\"\"` (No base path)\n\n## [3.8.0] - 2022-01-14\n\n### Added\n\n- Added Passwordless recipe ( with unit test coverage )\n\n### Database changes\n\n- Adds new tables for passwordless:\n    - `passwordless_users` that stores the users of the passwordless recipe\n    - `passwordless_devices` that stores devices/information about passwordless login attempts\n    - `passwordless_codes` that stores the codes each device can consume to finish the login process\n\n### Changes\n\n- New recipeId in `/users` response with a corresponding new user type\n\n## [3.7.0] - 2021-12-16\n\n### Added\n\n- Delete user endpoint\n\n## [3.6.1] - 2021-11-15\n\n### Fixes\n\n- Issue with JWT expiry always being lower than expected\n- Modulus and exponent for JsonWebKeys are now sent as unsigned when fetching public keys from the /jwt/jwks.json\n  endpoint. Both values are url encoded without any padding.\n\n### Changes\n\n- JWT creation logic to add a `iss` claim only if none is provided\n\n## [3.6.0] - 2021-08-26\n\n### Added\n\n- New config values `password_reset_token_lifetime`\n  and `email_verification_token_lifetime`: https://github.com/supertokens/supertokens-core/issues/297\n- Added support for multiple access token signing keys: https://github.com/supertokens/supertokens-core/issues/305\n- Updated CDI version\n- Added a table to store access token signing keys into SQL schema, called `session_access_token_signing_keys`\n- New JWT recipe to create JWT tokens using SuperTokens\n- New table `jwt_signing_keys` added to store keys used by the JWT recipe\n\n## [3.5.3] - 2021-09-20\n\n### Changes\n\n- Explicitly adds UTF-8 compatible conversion when encoding / decoding base64 strings.\n\n## [3.5.2] - 2021-09-01\n\n### Fixes\n\n- Issue with verifying refresh token throwing an unauthorised exception due to a db connection error.\n- Sends far ahead jwt signing key expiry time in case updating them is\n  disabled: https://github.com/supertokens/supertokens-core/issues/304\n\n### Changes\n\n- Changes JWT signing key update interval to not be limited to 720 hours\n\n## [3.5.1] - 2021-08-25\n\n### Added\n\n- Logs non \"OK\" status code from APIs for debugging purposes.\n\n### Fixed:\n\n- Always throws unauthorised response if refresh token is not valid - previously it was throwing a 500 error in case it\n  was not properly base 64 encoded.\n\n## [3.5.0] - 2021-06-20\n\n### Changed\n\n- Make emailverificaiton tables take a generic userId: https://github.com/supertokens/supertokens-core/issues/258\n- Adds new count and pagination APIs: https://github.com/supertokens/supertokens-core/issues/259\n- Adds new API to get session data, and deprecates older one to get session and JWT payload separately:\n  https://github.com/supertokens/supertokens-core/issues/255\n- Removed `isVerified` boolean from thirdparty sign in up API as per CDI spec 2.8, and hence does not do email\n  verification in this API either. Also related to https://github.com/supertokens/supertokens-core/issues/295\n\n### Added\n\n- Add `GET /recipe/users/by-email?email=john@example.com` endpoint for ThirdParty recipe to fetch all users with given\n  email\n- Add new emailverification APIs for remove tokens and unverify email.\n- Add `PUT /recipe/user` for emailpassword recipe to change user's password or email.\n\n## [3.4.2] - 2021-06-27\n\n### Fixes\n\n- `NullPointerException` that is thrown in `AccessTokenSigningKey.java` class when the `keyInfo` object is accessed in\n  parallel after the signing key has expired: https://github.com/supertokens/supertokens-core/issues/282\n\n## [3.4.1] - 2021-06-18\n\n### Added\n\n- `test_mode` to the options for running the core so that it can be run in test mode whilst being tested by the backend\n  SDK.\n- Adds `jwtSigningPublicKey` and `jwtSigningPublicKeyExpiryTime` to API response when returning `TRY_REFRESH_TOKEN\n  ` from session verify.\n\n## [3.4.0] - 2021-04-22\n\n### Changed\n\n- Uses Open JDK 15.0.1\n\n## [3.3.0] - 2021-02-16\n\n### Changed\n\n- Extracted email verification into its own recipe\n- ThirdParty recipe API\n\n## [3.2.0] - 2021-01-26\n\n### Changed\n\n- Normalises email by making it all lower case\n- Changes in handshake API\n- Changes in config\n- Changes in session create, verify and refresh APis\n\n## [3.1.0] - 2021-01-14\n\n### Changed\n\n- Used rowmapper for in memory db\n- Adds email verification APIs\n- Adds user pagination APIs\n- Adds timeJoined to whenever a user object is returned from an API\n\n## [3.0.1] - 2020-10-27\n\n### Changed\n\n- Makes Hello API do a db query as well for better status checking\n\n## [3.0.0] - 2020-10-25\n\n### Changed\n\n- Changes as per CDI 2.4: https://github.com/supertokens/core-driver-interface/issues/1\n- In memory db uses the SQL interface\n- Emailpassword recipe functions and APIs\n- Deprecates the need for a separate SQLite repo (since the in mem one already exists within the core)\n\n## [2.5.2] - 2020-10-25\n\n### Fixed\n\n- Issue #84 - Correct access token signing key expiry not being sent by APIs\n\n## [2.5.1] - 2020-10-08\n\n### Changed\n\n- Fixed issue of docker image hanging when run in foreground\n\n## [2.5.0] - 2020-10-08\n\n### Added\n\n- Updates the access token if blacklisting is switched on and the JWT payload has been changed somehow\n- API key support\n- JWT Api Key Rotation\n\n### Removed\n\n- Compatibility with the inefficient method for handling refresh tokens.\n\n## [2.4.0] - 2020-09-09\n\n### Added\n\n- CSRF check in refresh API\n- set csrf config to `false` by default\n- compatibility with CDI 2.3\n\n### Fixed\n\n- When regenerating session, uses old access tokens' parentRefreshTokenHash1 instead of null\n\n### Changed\n\n- Optimises refresh token to not store old tokens in the database\n- removes the need for a license key\n- removes API Pings\n\n## [2.3.0] - 2020-08-11\n\n### Changed\n\n- Makes default session expiry status code 401\n- Makes default refresh API path \"/session/refresh\"\n- Compatibility with CDI 2.2. Makes `cookie_domain` default value to not set, so that it will work with any API\n- Makes sameSite = lax by default\n- If licenseKey is missing, then dependency jars are downloaded in DEV mode\n\n## [2.2.3] - 2020-08-10\n\n### Changes\n\n- Makes license Apache 2.0\n\n## [2.2.2] - 2020-07-02\n\n### Fixed\n\n- Changes how versioning works to make it per API call.\n- Supports CDI 2.1\n\n## [2.2.1] - 2020-05-14\n\n### Fixed\n\n- Forcing of no in memory database flag to start command on Linux fixed\n\n## [2.2.0] - 2020-05-20\n\n### Added\n\n- Uses in memory database in dev mode if database is not configured\n- Removes the need to specify dev / production when running the start command\n\n## [2.1.0] - 2020-04-30\n\n### Added\n\n- Compatibility with CDI 2.0\n- API versions\n- SameSite cookie option\n- Updating of JWT payload\n- Session expired status code configuration\n- Partial lmrt support\n\n## [2.0.0] - 2020-04-07\n\n### Added\n\n- Compatibility with NoSQL databases like MongoDB\n- Setting sameSite cookie option. However, this is not usable in this release.\n\n## [1.1.1] - 2020-03-23\n\n### Changed\n\n- Adds #!/bin/bash in scripts\n\n## [1.1.0] - 2020-03-23\n\n### Changed\n\n- Allow for an unlimited number of SuperTokens instances in production mode\n- License changes to reflect the above\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at team@supertokens.io. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.048828125,
          "content": "# Contributing\n\nWe're so excited you're interested in helping with SuperTokens! We are happy to help you get started, even if you don't\nhave any previous open-source experience :blush:\n\n## New to Open Source?\n\n1. Take a look\n   at [How to Contribute to an Open Source Project on GitHub](https://egghead.io/courses/how-to-contribute-to-an-open-source-project-on-github)\n2. Go through\n   the [SuperTokens Code of Conduct](https://github.com/supertokens/supertokens-core/blob/master/CODE_OF_CONDUCT.md)\n\n## Where to ask Questions?\n\n1. Check our [Github Issues](https://github.com/supertokens/supertokens-core/issues) to see if someone has already\n   answered your question.\n2. Join our community on [Discord](https://supertokens.io/discord) and feel free to ask us your questions\n\nAs you gain experience with SuperTokens, please help answer other people's questions! :pray:\n\n## What to Work On?\n\nYou can get started by taking a look at our [Github issues](https://github.com/supertokens/supertokens-core/issues)  \nIf you find one that looks interesting and no one else is already working on it, comment in the issue that you are going\nto work on it.\n\nPlease ask as many questions as you need, either directly in the issue or on [Discord](https://supertokens.io/discord).\nWe're happy to help!:raised_hands:\n\n### Contributions that are ALWAYS welcome\n\n1. More tests\n2. Contributing to discussions that can be\n   found [here](https://github.com/supertokens/supertokens-core/issues?q=is%3Aissue+is%3Aopen+label%3Adiscussions)\n3. Improved error messages\n4. Educational content like blogs, videos, courses\n\n## Development Setup\n\n### With Gitpod\n\n1. Navigate to the [supertokens-root](https://github.com/supertokens/supertokens-root) repository\n2. Click on the `Open in Gitpod` button\n\n### Local Setup Prerequisites\n\n- OS: Linux or macOS. Or if using Windows, you need to use [wsl2](https://docs.microsoft.com/en-us/windows/wsl/about).\n- JDK: openjdk 15.0.1. Installation instructions for Mac and Linux can be found\n  in [our wiki](https://github.com/supertokens/supertokens-core/wiki/Installing-OpenJDK-for-Mac-and-Linux)\n- IDE: [IntelliJ](https://www.jetbrains.com/idea/download/)(recommended) or equivalent IDE\n\n### Familiarize yourself with SuperTokens\n\n1. [Architecture of SuperTokens](https://github.com/supertokens/supertokens-core/wiki/SuperTokens-Architecture)\n2. [SuperTokens code and file structure overview](https://github.com/supertokens/supertokens-core/wiki/Code-and-file-structure-overview)\n3. [Versioning methodology](https://github.com/supertokens/supertokens-core/wiki/Versioning,-git-and-releases)\n\n### Project Setup\n\n1. Fork the [supertokens-core](https://github.com/supertokens/supertokens-core) repository (**Skip this step if you are\n   NOT modifying supertokens-core**)\n2. `git clone https://github.com/supertokens/supertokens-root.git`\n3. `cd supertokens-root`\n4. Open the `modules.txt` file in an editor (**Skip this step if you are NOT modifying supertokens-core**):\n    - The `modules.txt` file contains the core, plugin-interface, the type of plugin and their branches(versions)\n    - By default the `master` branch is used but you can change the branch depending on which version you want to modify\n    - The `sqlite-plugin` is used as the default plugin as it is an in-memory database and requires no setup\n        - [core](https://github.com/supertokens/supertokens-core)\n        - [plugin-interface](https://github.com/supertokens/supertokens-plugin-interface)\n        - Check the repository branches by clicking on the links listed above, click the branch tab and check for all\n          the available versions\n    - Add your github `username` separated by a ',' after `core,master` in  `modules.txt`\n    - If, for example, your github `username` is `helloworld` then modules.txt should look like...\n      ```\n      // put module name like module name,branch name,github username(if contributing with a forked repository) and then call ./loadModules script        \n      core,master,helloworld  \n      plugin-interface,master        \n      sqlite-plugin,master\n      ```\n\n5. Run loadModules to clone the required repositories  \n   `./loadModules`\n\n## Modifying code\n\n1. Open `supetokens-root` in your IDE\n2. After gradle has imported all the dependencies you can start modifying the code\n\n## Testing\n\n### On your local machine\n\n1. Navigate to the `supertokens-root` repository\n2. Run all tests   \n   `./startTestEnv`\n3. If all tests pass the terminal should display\n\n- core tests:  \n  ![core tests passing](https://github.com/supertokens/supertokens-logo/blob/master/images/core-tests-passing.png)\n- plugin tests:  \n  ![plugin tests passing](https://github.com/supertokens/supertokens-logo/blob/master/images/plugin-tests-passing.png)\n\n### Using github actions\n\n1. Go to the supertokens-core repo on github (or your forked version of it).\n2. Navigate to the Actions tab.\n3. Find the action named \"Run tests\" and navigate to it.\n4. Click on the \"Run workflow\" button.\n5. Set the config variables in the drop down:\n    - **supertokens-plugin-interface repo owner name**: If you have forked the supertokens-plugin-interface repo, then\n      set the value of this to your github username.\n    - **supertokens-plugin-interface repos branch name**: If the core version you are working on is compatible with a\n      plugin-interface version that is not in the master branch, then set the correct branch name in this value.\n6. Click on \"Run workflow\".\n\n## Running the core manually\n\n1. Run `startTestEnv --wait` in a terminal, and keep it running\n2. Then open `supertokens-root` in another terminal and run `cp ./temp/config.yaml .`\n3. Then run `java -classpath \"./core/*:./plugin-interface/*:./ee/*\" io.supertokens.Main ./ DEV`. This will start the\n   core to listen on `http://localhost:3567`\n\n## Pull Request\n\n1. Before submitting a pull request make sure all tests have passed\n2. Reference the relevant issue or pull request and give a clear description of changes/features added when submitting a\n   pull request\n3. Make sure the PR title follows [conventional commits](https://www.conventionalcommits.org/en/v1.0.0/) specification\n\n## Install the supertokens CLI manually\n\n1. Setup test env and keep it running\n2. In `supertokens-root`, run `cp temp/config.yaml .`\n3. On a different terminal, go to `supertokens-root` folder and\n   run `java -classpath \"./cli/*\" io.supertokens.cli.Main true install`\n\n## SuperTokens Community\n\nSuperTokens is made possible by a passionate team and a strong community of developers. If you have any questions or\nwould like to get more involved in the SuperTokens community you can check out:\n\n- [Github Issues](https://github.com/supertokens/supertokens-core/issues)\n- [Discord](https://supertokens.io/discord)\n- [Twitter](https://twitter.com/supertokensio)\n- or [email us](mailto:team@supertokens.io)\n\nAdditional resources you might find useful:\n\n- [SuperTokens Docs](https://supertokens.io/docs/community/getting-started/installation)\n- [Blog Posts](https://supertokens.io/blog/)\n- [Development guideline for the backend and frontend recipes](https://github.com/supertokens/supertokens-core/wiki/Development-guideline-for-the-backend-and-frontend-recipes)\n\n\n\n\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 10.48046875,
          "content": "Portions of this software are licensed as follows:\n\n* All content that resides under the \"ee/\" directory of this repository, if that directory exists, is licensed under the\n  license defined in \"ee/LICENSE.md\".\n* All third party components incorporated into the SuperTokens Software are licensed under the original license provided\n  by the owner of the applicable component.\n* Content outside of the above mentioned directories or restrictions above is available under the \"Apache 2.0\"\n  license as defined below.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n   Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n   stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n   that You distribute, all copyright, patent, trademark, and\n   attribution notices from the Source form of the Work,\n   excluding those notices that do not pertain to any part of\n   the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n   distribution, then any Derivative Works that You distribute must\n   include a readable copy of the attribution notices contained\n   within such NOTICE file, excluding those notices that do not\n   pertain to any part of the Derivative Works, in at least one\n   of the following places: within a NOTICE text file distributed\n   as part of the Derivative Works; within the Source form or\n   documentation, if provided along with the Derivative Works; or,\n   within a display generated by the Derivative Works, if and\n   wherever such third-party notices normally appear. The contents\n   of the NOTICE file are for informational purposes only and\n   do not modify the License. You may add Your own attribution\n   notices within Derivative Works that You distribute, alongside\n   or as an addendum to the NOTICE text from the Work, provided\n   that such additional attribution notices cannot be construed\n   as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nCopyright 2020-2023 SuperTokens, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 23.0009765625,
          "content": "[![SuperTokens banner](https://raw.githubusercontent.com/supertokens/supertokens-logo/master/images/Artboard%20%E2%80%93%2027%402x.png)](https://supertokens.com/)\n\n# Open-Source auth provider\n\n<a href=\"https://supertokens.io/discord\">\n<img src=\"https://img.shields.io/discord/603466164219281420.svg?logo=discord\"\n    alt=\"chat on Discord\"></a>\n<span><img src=\"https://img.shields.io/docker/pulls/supertokens/supertokens-postgresql.svg\" alt=\"Docker pull stats\"/></span>\n\nAdd **secure login and session management** to your apps. [SDKs available](https://supertokens.com/docs/community/sdks)\nfor popular languages and front-end frameworks e.g. Node.js, Go, Python, React.js, React Native, Vanilla JS, etc.\n\n![Architecture Diagram](https://supertokens.com/img/architecture/self_hosted_generic.png)\nSupertokens architecture is optimized to add secure authentication for your users without compromising on user and\ndeveloper experience\n\n**Three building blocks of SuperTokens architecture**\n\n1. Frontend SDK: Manages session tokens and renders login UI widgets\n2. Backend SDK: Provides APIs for sign-up, sign-in, signout, session refreshing, etc. Your Frontend will talk to these\n   APIs\n3. SuperTokens Core: The HTTP service for the core auth logic and database operations. This service is used by the\n   Backend SDK\n\n## Features\n\n[![Click here to get started](.github/click-here-to-get-started.png)](https://supertokens.com/docs/guides)\n\n* Passwordless Login\n* Social Login\n* Email Password Login\n* Phone Password Login\n* Session Management\n* Multi-Factor Authentication\n* Multi Tenancy / Organization Support (Enterprise SSO)\n* User Roles\n* Microservice Authentication\n\n## Learn more\n\n- [🚀 What is SuperTokens?](https://github.com/supertokens/supertokens-core#-what-is-supertokens)\n    - [Philosophy](https://github.com/supertokens/supertokens-core#philosophy)\n    - [Features + Demo app](https://github.com/supertokens/supertokens-core#features---click-here-to-see-the-demo-app)\n    - [Documentation](https://github.com/supertokens/supertokens-core#documentation)\n- [🏗️ Architecture](https://github.com/supertokens/supertokens-core#%EF%B8%8F-architecture)\n- [☕ Why Java?](https://github.com/supertokens/supertokens-core#-why-java)\n- [⌨️ User Management Dashboard](https://github.com/supertokens/supertokens-core#-user-management-dashboard)\n- [🔥 SuperTokens vs Others](https://github.com/supertokens/supertokens-core#-supertokens-vs-others)\n- [🛠️ Building from source](https://github.com/supertokens/supertokens-core#%EF%B8%8F-building-from-source)\n- [👥 Community](https://github.com/supertokens/supertokens-core#-community)\n    - [Contributors](https://github.com/supertokens/supertokens-core#contributors-across-all-supertokens-repositories)\n- [👩‍💻 Contributing](https://github.com/supertokens/supertokens-core#-contributing)\n- [📝 License](https://github.com/supertokens/supertokens-core#-license)\n\n### If you like our project, please :star2: this repository! For feedback, feel free to join our [Discord](https://supertokens.io/discord), or create an issue on this repo\n\n## 🚀 What is SuperTokens?\n\nSuperTokens is an open-core alternative to proprietary login providers like Auth0 or AWS Cognito. We are\ndifferent because we offer:\n\n- Open source: SuperTokens can be used for free, forever, with no limits on the number of users.\n- An on-premises deployment so that you control 100% of your user data, using your own database.\n- An end-to-end solution with login, sign-ups, user and session management, without all the complexities of OAuth\n  protocols.\n- Ease of implementation and higher security.\n- Extensibility: Anyone can contribute and make SuperTokens better!\n\n### Philosophy\n\nAuthentication directly affects the UX, dev experience, and security of any app. We believe that\ncurrent solutions cannot optimize for all three \"pillars\", leading to many\napplications hand-rolling their own auth. This not only leads to security issues but is also a massive\ntime drain.\n\nWe want to change that - we believe the only way is to provide a solution that has the right level of\nabstraction gives you maximum control, is secure, and is simple to use - just like if you build it yourself,\nfrom scratch (minus the time to learn, build, and maintain).\n\nWe also believe in the principle of least vendor lock-in. Your having full control of your user's data means that you\ncan switch away from SuperTokens without forcing your existing users to logout, reset their passwords, or in the worst\ncase, sign up again.\n\n### [Click here](https://thirdpartyemailpassword.demo.supertokens.com/) to see the demo app.\n\n- Please visit [our website](https://supertokens.io/pricing) to see the list of features.\n- We want to make features as decoupled as possible. This means you can use SuperTokens for just login, or just session\n  management, or both. In fact, we also offer session management integrations with other login providers like Auth0.\n\n### Documentation\n\nThe docs can be seen [on our website](https://supertokens.io/docs/community/introduction).\n\nThere is more information about SuperTokens on\nthe [GitHub wiki section](https://github.com/supertokens/supertokens-core/wiki).\n\n## 🏗️ Architecture\n\nPlease find an [architecture diagram here](https://supertokens.io/docs/community/architecture)\n\n**For more information, please visit\nour [GitHub wiki section](https://github.com/supertokens/supertokens-core/wiki/SuperTokens-Architecture).**\n\n## ☕ Why Java?\n\n- ✅ Whilst running Java can seem difficult, we provide the JDK along with the binary/docker image when distributing it.\n  This makes running SuperTokens just like running any other HTTP microservice.\n- ✅ Java has a very mature ecosystem. This implies that third-party libraries have been battle-tested.\n- ✅ Java's strong type system ensures fewer bugs and easier maintainability. This is especially important when many\n  people are expected to work on the same project.\n- ✅ Our team is most comfortable with Java and hiring great Java developers is relatively easy as well.\n- ✅ One of the biggest criticisms of Java is memory usage. We have three solutions to this:\n    - The most frequent auth-related operation is session verification - this happens within the backend SDK (node,\n      python, Go) without contacting the Java core. Therefore, a single instance of the core can handle several 10s of\n      thousands of users fairly easily.\n    - We have carefully chosen our dependencies. For eg: we use an embedded tomcat server instead of a higher-level web\n      framework.\n    - We also plan on using [GraalVM](https://www.graalvm.org/) in the future and this can reduce memory usage by 95%!\n- ✅ If you require any modifications to the auth APIs, those would need to be done on the backend SDK level (for example\n  Node, Golang, Python..). So you’d rarely need to directly modify/work with the Java code in this repo.\n\n## ⌨️ User Management Dashboard\n\nOversee your users with the [SuperTokens User Management Dashboard](https://supertokens.com/docs/userdashboard/about)\n\n### List users\n\nList all the users who have signed up to your application.\n\n![List SuperTokens users](.github/list-user.png)\n\n### Manage users\n\nManage users by modifying or deleting their sessions, metadata, roles and account info.\n\n![Manage users](.github/user-info.png)\n\n## 🔥 SuperTokens vs others\n\nPlease find a detailed comparison chart [on our website](https://supertokens.io/pricing#comparison-chart)\n\n## 🛠️ Building from source\n\nPlease see our [wiki](https://github.com/supertokens/supertokens-core/wiki/Building-from-source) for instructions.\n\n## 👥 Community\n\n- [Discord](https://supertokens.io/discord)\n- [Email](mailto:team@supertokens.io)\n\nIf you think this is a project you could use in the future, please :star2: this repository!\n\n### Contributors (across all SuperTokens repositories)\n\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/rishabhpoddar\"><img src=\"https://avatars1.githubusercontent.com/u/2976287?s=460&u=d0cf2463df96fbdf1138cf74f88d7cf41415b238&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Rishabh Poddar</b></sub></a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/Advait_Ruia\"><img src=\"https://pbs.twimg.com/profile_images/1261970454685900800/ALVzsBQJ_400x400.jpg\" width=\"100px;\" alt=\"\"/><br /><sub><b>Advait Ruia</b></sub></a></td>\n    <td align=\"center\"><a href=\"https://github.com/bhumilsarvaiya\"><img src=\"https://avatars2.githubusercontent.com/u/21988812?s=460&u=c0bcde60a8bf1a99baafced55dd1a8d901fa7e4a&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Bhumil Sarvaiya</b></sub></a></td>\n    <td align=\"center\"><a href=\"https://github.com/jscyo\"><img src=\"https://i.stack.imgur.com/frlIf.png\" width=\"100px;\" alt=\"\"/><br /><sub><b>Joel Coutinho</b></sub></a></td> \n  </tr>\n  <tr>\n   <td align=\"center\"><a href=\"https://github.com/RakeshUP\"><img src=\"https://avatars1.githubusercontent.com/u/20946466?s=400&u=01d7d6d701eedd8345e491172e3af04578d18113&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Rakesh UP</b></sub></a></td>\n   <td align=\"center\"><a href=\"https://twitter.com/mufassirkazi\"><img src=\"https://i.stack.imgur.com/frlIf.png\" width=\"100px;\" alt=\"\"/><br /><sub><b>Mufassir Kazi</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/nkshah2\"><img src=\"https://avatars2.githubusercontent.com/u/18233774?s=400&u=5befa41674cfcd6c6060103360ab323cdfa24dcb&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nemi Shah</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/irohitb\"><img src=\"https://avatars3.githubusercontent.com/u/32276134?s=400&u=0b72f6c4e6cfa749229a8e69ed86acb720a384e7&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Rohit Bhatia</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/mmaha\"><img src=\"https://avatars3.githubusercontent.com/u/297517?s=400&u=8c41caf46c511ed2054c3d14c23193eda0d996af&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Madhu Mahadevan</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/nugmanoff\"><img src=\"https://avatars3.githubusercontent.com/u/20473743?s=460&u=2d33e10df1e8c3f38328e6e92d753363026f660f&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aidar Nugmanoff</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/arnxv0\"><img src=\"https://avatars2.githubusercontent.com/u/57629464?s=460&u=5f0cca1aed9fabb38bea74df73ed99dfcfec2f26&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Arnav Dewan</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/NkxxkN\"><img src=\"https://avatars1.githubusercontent.com/u/5072452?s=460&u=eda6b25b674d20e3389bf19a0619d6e4c1e46670&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>NkxxkN</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/UbadahJ\"><img src=\"https://avatars1.githubusercontent.com/u/26687928?s=460&u=ae1d3ae5fad6e4cfa71809f8ce4a99429321dcaf&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>LordChadiwala</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/LuizDoPc\"><img src=\"https://avatars0.githubusercontent.com/u/20651653?s=460&u=d673e5357da83e446311831efe107e695d3ef875&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Luiz Soares</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/sudiptog81\"><img src=\"https://avatars0.githubusercontent.com/u/11232940?s=460&u=07b4989ae4c43e43f35730d7f8d59631f5ed933c&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sudipto Ghosh</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/Fabricio20\"><img src=\"https://avatars1.githubusercontent.com/u/7545720?s=400&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Fabricio20</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/metallicmonkey\"><img src=\"https://avatars0.githubusercontent.com/u/10272154?s=460&u=b6f5daefe3f3ce49e9ed094043674a2c2718af73&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>metallicmonkey</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/vidu171\"><img src=\"https://avatars1.githubusercontent.com/u/25363324?s=460&u=8d3ccde95f49579e893c8c12db22cdcd0fea36cb&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vidhyanshu Jain</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/dlion\"><img src=\"https://avatars3.githubusercontent.com/u/2125236?s=460&u=801df23e89718386a099ba60e15b61a562fdf334&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Domenico Luciani</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/EnzoBtv\"><img src=\"https://avatars1.githubusercontent.com/u/40310156?s=460&u=f7c0e017293b0d57b8340dbfae36c078f0176e1a&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Enzo Batrov</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/IsautierEloise\"><img src=\"https://avatars2.githubusercontent.com/u/44578188?s=400&u=2bda597af317d871d6b1017193956b40a6fe0412&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Eloïse Isautier</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/ocReaper\"><img src=\"https://avatars2.githubusercontent.com/u/4038188?s=460&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ákos Resch</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/chotuchaudhary\"><img src=\"https://avatars0.githubusercontent.com/u/14938108?s=460&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Chotu Chaudhary</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/heracek\"><img src=\"https://avatars.githubusercontent.com/u/7502?s=460&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tomáš Horáček</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/sbauch\"><img src=\"https://avatars.githubusercontent.com/u/923033?s=460&u=db9bb41f9b279750c74afc1be0ab51db05539593&v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sam Bauch</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/mirrorrim\"><img src=\"https://avatars.githubusercontent.com/u/9555251?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Alexey Tylindus</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/gusfune\"><img src=\"https://avatars.githubusercontent.com/u/1147240?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Gus Fune</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/chenkaiC4\"><img src=\"https://avatars.githubusercontent.com/u/7543145?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>chenkaiC4</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/dulowski-marek\"><img src=\"https://avatars.githubusercontent.com/u/17051704?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Marek Dulowski</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/Piyushhbhutoria\"><img src=\"https://avatars.githubusercontent.com/u/20777594?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Piyushh Bhutoria</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/aldeed\"><img src=\"https://avatars.githubusercontent.com/u/3012067?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Eric Dobbertin</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/seniorquico\"><img src=\"https://avatars.githubusercontent.com/u/415806?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kyle Dodson</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/taijuten\"><img src=\"https://avatars.githubusercontent.com/u/4288526?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ralph Lawrence</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/christopher-kapic\"><img src=\"https://avatars.githubusercontent.com/u/59740769?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Christopher Kapic</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/Hanzyusuf\"><img src=\"https://avatars.githubusercontent.com/u/22171112?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hanzyusuf</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/porcellus\"><img src=\"https://avatars.githubusercontent.com/u/1129990?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Mihály Lengyel</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/cerino-ligutom\"><img src=\"https://avatars.githubusercontent.com/u/6721822?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Cerino O. Ligutom III</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/nadilas\"><img src=\"https://avatars.githubusercontent.com/u/5324856?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>nadilas</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/vasica38\"><img src=\"https://avatars.githubusercontent.com/u/26538079?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Vasile Catana</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/rossoskull\"><img src=\"https://avatars.githubusercontent.com/u/27884543?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jay Mistry</b></sub></a></td>\n  </tr> \n  <tr>\n<td align=\"center\"><a href=\"https://github.com/jacobhq\"><img src=\"https://avatars.githubusercontent.com/u/29145479?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jacob Marshall</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/miketromba\"><img src=\"https://avatars.githubusercontent.com/u/25141252?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>miketromba</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/olhapi\"><img src=\"https://avatars.githubusercontent.com/u/4780263?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Oleg Vdovenko</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/siddharthmudgal\"><img src=\"https://avatars.githubusercontent.com/u/9314217?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Siddharth</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/xuatz\"><img src=\"https://avatars.githubusercontent.com/u/9292261?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>xuatz</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/yowayb\"><img src=\"https://avatars.githubusercontent.com/u/603829?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Yoway Buorn</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/rtpa25\"><img src=\"https://avatars.githubusercontent.com/u/72537293?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ronit Panda</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/anugrahsinghal\"><img src=\"https://avatars.githubusercontent.com/u/18058884?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Anugrah Singhal</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/JeremyEastham\"><img src=\"https://avatars.githubusercontent.com/u/34139712?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jeremy Eastham</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/assafushy\"><img src=\"https://avatars.githubusercontent.com/u/7502687?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Assaf Yacobi</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/sattvikc\"><img src=\"https://avatars.githubusercontent.com/u/650429?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sattvik Chakravarthy</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/opichon\"><img src=\"https://avatars.githubusercontent.com/u/203745?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Olivier Pichon</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/FuzzySid\"><img src=\"https://avatars.githubusercontent.com/u/40206571?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Siddhant Varma</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/renyijiu\"><img src=\"https://avatars.githubusercontent.com/u/8318266?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>renyijiu</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/ITenthusiasm\"><img src=\"https://avatars.githubusercontent.com/u/47364027?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Isaiah Thomason</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/utsavdotpro\"><img src=\"https://avatars.githubusercontent.com/u/38961422?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Utsav Barnwal</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/saurabhghatnekar\"><img src=\"https://avatars.githubusercontent.com/u/20884782?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Saurabh Ghatnekar</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/alisher-aituarov\"><img src=\"https://avatars.githubusercontent.com/u/63276190?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Alisher Aituarov</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/wallstromsimon\"><img src=\"https://avatars.githubusercontent.com/u/3397398?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Simon Kihlberg Wallstrom</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/AreebKhan619\"><img src=\"https://avatars.githubusercontent.com/u/39133435?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Areeb Khan</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/sublimator\"><img src=\"https://avatars.githubusercontent.com/u/525211?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Nicholas Dudfield</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/Qdea\"><img src=\"https://avatars.githubusercontent.com/u/58660439?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Qdea</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/LukasKnuth\"><img src=\"https://avatars.githubusercontent.com/u/692211?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lukas Knuth</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/melvynhills\"><img src=\"https://avatars.githubusercontent.com/u/417315?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Melvyn Hills</b></sub></a></td>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/mattanimation\"><img src=\"https://avatars.githubusercontent.com/u/1426997?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Matt Murray</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/constantoine\"><img src=\"https://avatars.githubusercontent.com/u/13930958?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Cléo Rebert</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/daniil-borovoy\"><img src=\"https://avatars.githubusercontent.com/u/74528634?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Daniil Borovoy</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/kriskw1999\"><img src=\"https://avatars.githubusercontent.com/u/71312948?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Krzysztof Witkowski</b></sub></a></td>\n  </tr>\n  <tr>\n<td align=\"center\"><a href=\"https://github.com/Lehoczky\"><img src=\"https://avatars.githubusercontent.com/u/31937175?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lehoczky Zoltán</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/virajkanwade\"><img src=\"https://avatars.githubusercontent.com/u/316111?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Viraj Kanwade</b></sub></a></td>\n<td align=\"center\"><a href=\"https://github.com/anuragmerndev\"><img src=\"https://avatars.githubusercontent.com/u/144275260?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Anurag Srivastava</b></sub></a></td>\n  </tr>\n</table>\n\n## 👩‍💻 Contributing\n\nPlease see the [CONTRIBUTING.md](https://github.com/supertokens/supertokens-core/blob/master/CONTRIBUTING.md) file for\ninstructions.\n\n## 📝 License\n\n&copy; 2020-2023 SuperTokens Inc and its contributors. All rights reserved.\n\nPortions of this software are licensed as follows:\n\n* All content that resides under the \"ee/\" directory of this repository, if that directory exists, is licensed under the\n  license defined in \"ee/LICENSE.md\".\n* All third-party components incorporated into the SuperTokens Software are licensed under the original license provided\n  by the owner of the applicable component.\n* Content outside of the above-mentioned directories or restrictions above is available under the \"Apache 2.0\"\n  license as defined in the level \"LICENSE.md\" file\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 6.2421875,
          "content": "/*\n * This file was generated by the Gradle 'init' task.\n *\n * This generated file contains a sample Java Library project to get you started.\n * For more details take a look at the Java Libraries chapter in the Gradle\n * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html\n */\n\nplugins {\n    id 'application'\n}\ncompileJava { options.encoding = \"UTF-8\" }\ncompileTestJava { options.encoding = \"UTF-8\" }\n\n// Uncomment the below lines to make UTF-9 non default while testing\n//allprojects {\n//    tasks.withType(Test) {\n//        systemProperty \"file.encoding\", \"US-ASCII\"\n//    }\n//}\n\nversion = \"9.3.0\"\n\n\nrepositories {\n    mavenCentral()\n}\n\ndependencies {\n\n    // https://mvnrepository.com/artifact/com.google.code.gson/gson\n    // if this changes, remember to also change in the ee folder's build.gradle\n    implementation group: 'com.google.code.gson', name: 'gson', version: '2.3.1'\n\n    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml\n    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.16.1'\n\n    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core\n    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.16.1'\n\n    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic\n    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.4.14'\n\n    // https://mvnrepository.com/artifact/org.apache.tomcat.embed/tomcat-embed-core\n    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '10.1.18'\n\n    // https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305\n    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'\n\n    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc\n    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.45.1.0'\n\n    // https://mvnrepository.com/artifact/org.mindrot/jbcrypt\n    implementation group: 'org.mindrot', name: 'jbcrypt', version: '0.4'\n\n    // https://mvnrepository.com/artifact/org.jetbrains/annotations\n    implementation group: 'org.jetbrains', name: 'annotations', version: '13.0'\n\n    // https://mvnrepository.com/artifact/de.mkammerer/argon2-jvm\n    implementation group: 'de.mkammerer', name: 'argon2-jvm', version: '2.11'\n\n    // https://mvnrepository.com/artifact/com.auth0/java-jwt\n    implementation 'com.auth0:java-jwt:4.4.0'\n\n    // https://mvnrepository.com/artifact/com.lambdaworks/scrypt\n    implementation group: 'com.lambdaworks', name: 'scrypt', version: '1.4.0'\n\n    // https://mvnrepository.com/artifact/com.eatthepath/java-otp\n    implementation group: 'com.eatthepath', name: 'java-otp', version: '0.4.0'\n\n    // https://mvnrepository.com/artifact/commons-codec/commons-codec\n    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'\n\n    // https://mvnrepository.com/artifact/com.googlecode.libphonenumber/libphonenumber/\n    implementation group: 'com.googlecode.libphonenumber', name: 'libphonenumber', version: '8.13.25'\n\n    compileOnly project(\":supertokens-plugin-interface\")\n    testImplementation project(\":supertokens-plugin-interface\")\n\n    // this is so that we can find plugin-interface jar while testing\n    testImplementation 'junit:junit:4.12'\n\n    // https://mvnrepository.com/artifact/org.mockito/mockito-core\n    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'\n\n    // https://mvnrepository.com/artifact/org.reflections/reflections\n    testImplementation group: 'org.reflections', name: 'reflections', version: '0.9.10'\n\n    testImplementation 'com.tngtech.archunit:archunit-junit4:0.22.0'\n\n}\n\napplication {\n    mainClass.set(\"io.supertokens.Main\")\n}\n\njar {\n    archiveBaseName.set('core')\n}\n\n\ntask copyJars(type: Copy) {\n    into \"$buildDir/dependencies\"\n    from configurations.runtimeClasspath\n}\n\ntest {\n    jvmArgs '-Djava.security.egd=file:/dev/urandom'\n    testLogging {\n        outputs.upToDateWhen { false }\n        showStandardStreams = true\n    }\n}\n\nimport org.gradle.api.tasks.testing.logging.TestExceptionFormat\nimport org.gradle.api.tasks.testing.logging.TestLogEvent\n\ntasks.withType(Test) {\n    testLogging {\n        // set options for log level LIFECYCLE\n        events TestLogEvent.FAILED,\n                TestLogEvent.PASSED,\n                TestLogEvent.SKIPPED,\n                TestLogEvent.STANDARD_OUT\n        exceptionFormat TestExceptionFormat.FULL\n        showExceptions true\n        showCauses true\n        showStackTraces true\n\n        // set options for log level DEBUG and INFO\n        debug {\n            events TestLogEvent.STARTED,\n                    TestLogEvent.FAILED,\n                    TestLogEvent.PASSED,\n                    TestLogEvent.SKIPPED,\n                    TestLogEvent.STANDARD_ERROR,\n                    TestLogEvent.STANDARD_OUT\n            exceptionFormat TestExceptionFormat.FULL\n        }\n        info.events = debug.events\n        info.exceptionFormat = debug.exceptionFormat\n\n\n        // collect failing test names\n        ext.failedTests = []\n        afterTest { descriptor, result ->\n            if (result.resultType == TestResult.ResultType.FAILURE) {\n                String failedTest = \"${descriptor.className}::${descriptor.name}\"\n                logger.debug(\"Adding \" + failedTest + \" to failedTests...\")\n                failedTests << [failedTest]\n            }\n        }\n\n        afterSuite { desc, result ->\n            if (!desc.parent) { // will match the outermost suite\n                def output = \"Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)\"\n                def startItem = '|  ', endItem = '  |'\n                def repeatLength = startItem.length() + output.length() + endItem.length()\n                println('\\n' + ('-' * repeatLength) + '\\n' + startItem + output + endItem + '\\n' + ('-' * repeatLength))\n                // print failing tests\n                if (!failedTests.empty) {\n                    println(\"\\nFailed tests:\")\n                    failedTests.each { failedTest ->\n                        logger.lifecycle(\"${failedTest}\")\n                    }\n                }\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.yaml",
          "type": "blob",
          "size": 7.5322265625,
          "content": "# Config for SuperTokens service. Here you will set the config params for\n# the main service as well as your database.\n# Some parameters are compulsory and are indicated via a (COMPULSORY) tag.\n# Others are optional and are indicated via a (OPTIONAL) tag.\n# To see the default values of the optional params are mentioned in the tag itself\n\ncore_config_version: 0\n\n\n# (OPTIONAL | Default: 3567) integer value. The port at which SuperTokens service runs.\n# port:\n\n\n# (OPTIONAL | Default: \"localhost\") string value. The host on which SuperTokens service runs. Values here can\n# be localhost, example.com, 0.0.0.0 or any IP address associated with your machine\n# host:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: 3600) integer value. Time in seconds for how long an access token is\n# valid for.\n# access_token_validity:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: false) boolean value. Deprecated, please see changelog. Only used in\n# CDI<=2.18\n# If true, allows for immediate revocation of any access token. Keep in mind that setting this to true will result\n# in a db query for each API call that requires authentication.\n# access_token_blacklisting:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: true) boolean value. Deprecated, please see changelog.\n# If this is set to true, the access tokens created using CDI<=2.18 will be signed using a static signing key.\n# access_token_signing_key_dynamic:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default:168) integer value. Time in hours for how frequently the dynamic signing\n# key will change.\n# access_token_dynamic_signing_key_update_interval:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: 144000) double value. Time in mins for how long a refresh token is valid\n# for.\n# refresh_token_validity:\n\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 3600000) long value. Time in milliseconds for how long a password\n# reset token / link is valid for.\n# password_reset_token_lifetime:\n\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 86400000 (1 day)) long value. Time in milliseconds for how long an\n# email verification token / link is valid for.\n# email_verification_token_lifetime:\n\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 5) integer value. The maximum number of code input attempts per login\n# before the user needs to restart.\n# passwordless_max_code_input_attempts:\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 900000) long value. Time in milliseconds for how long a passwordless\n# code is valid for.\n# passwordless_code_lifetime:\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 5) integer value. The maximum number of invalid TOTP attempts that\n# will trigger rate limiting.\n# totp_max_attempts:\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 900) integer value. The time in seconds for which the user will be\n# rate limited once totp_max_attempts is crossed.\n# totp_rate_limit_cooldown_sec:\n\n# (OPTIONAL | Default: installation directory/logs/info.log) string value. Give the path to a file (on your local\n# system) in which the SuperTokens service can write INFO logs to. Set it to \"null\" if you want it to log to\n# standard output instead.\n# info_log_path:\n\n\n# (OPTIONAL | Default: installation directory/logs/error.log) string value. Give the path to a file (on your local\n# system) in which the SuperTokens service can write ERROR logs to. Set it to \"null\" if you want it to log to\n# standard error instead\n# error_log_path:\n\n\n# (OPTIONAL | Default: 10) integer value. Sets the max thread pool size for incoming http server requests.\n# max_server_pool_size:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: no API keys) comma separated string values. The API keys to query an\n# instance using this config file. The format is \"key1,key2,key3\". Keys can only contain '=', '-' and alpha-numeric\n# (including capital) chars. Each key must have a minimum length of 20 chars\n# api_keys:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: false). Learn more about Telemetry here:\n# https://github.com/supertokens/supertokens-core/wiki/Telemetry\n# disable_telemetry:\n\n\n# (OPTIONAL | Default: \"\"). Used to prepend a base path to all APIs when querying the core.\n# base_path:\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: \"BCRYPT\"). The password hashing algorithm to use. Values are \"ARGON2\" |\n# \"BCRYPT\"\n# password_hashing_alg:\n\n# (OPTIONAL | Default: 11). Number of rounds to set for bcrypt password hashing\n# bcrypt_log_rounds:\n\n# (OPTIONAL | Default: 1). Number of iterations for argon2 password hashing\n# argon2_iterations:\n\n# (OPTIONAL | Default: 87795 (85 mb)). Amount of memory in kb for argon2 password hashing\n# argon2_memory_kb:\n\n# (OPTIONAL | Default: 2). Amount of parallelism for argon2 password hashing\n# argon2_parallelism:\n\n# (OPTIONAL | Default: 1). Number of concurrent argon2 hashes that can happen at the same time for sign up or sign\n# in requests.\n# argon2_hashing_pool_size:\n\n# (OPTIONAL | Default: \"INFO\"). Logging level for the core. Values are \"DEBUG\" | \"INFO\" | \"WARN\" | \"ERROR\" | \"NONE\"\n# log_level:\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: null). The signer key used for firebase scrypt password hashing\n# firebase_password_hashing_signer_key:\n\n# (OPTIONAL | Default: 1). Number of concurrent firebase scrypt hashes that can happen at the same time for sign in requests.\n# firebase_password_hashing_pool_size:\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: null). Regex for allowing requests from IP addresses that match with\n# the value. For example, use the value of 127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1 to allow only localhost to query the\n# core. Comment it out to allow requests from any IP address.\n# ip_allow_regex:\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: null). Regex for denying requests from IP addresses that match with\n# the value. Comment this value to deny no IP address.\n# ip_deny_regex:\n\n# (OPTIONAL | Default: null). This is used when deploying the core in SuperTokens SaaS infrastructure. If set, limits\n# what database information is shown to / modifiable by the dev when they query the core to get the information about\n# their tenants. It only exposes that information when this key is used instead of the regular api_keys config.\n# supertokens_saas_secret:\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: null). This is used when the core needs to assume a specific CDI version\n# when CDI version is not specified in the request. When set to null, the core will assume the latest version of the\n# CDI.\n# supertokens_max_cdi_version:\n\n\n# (OPTIONAL | Default: null) string value. If specified, the supertokens service will only load the specified CUD even\n# if there are more CUDs in the database and block all other CUDs from being used from this instance.\n# supertokens_saas_load_only_cud:\n\n# (OPTIONAL | Default: null) string value. If specified, the core uses this URL to connect to the OAuth provider\n# public service.\n# oauth_provider_public_service_url:\n\n# (OPTIONAL | Default: null) string value. If specified, the core uses this URL to connect to the OAuth provider admin\n# service.\n# oauth_provider_admin_service_url:\n\n# (OPTIONAL | Default: null) string value. If specified, the core uses this URL to replace the default\n# consent and login URLs to {apiDomain}.\n# oauth_provider_consent_login_base_url:\n\n# (OPTIONAL | Default: oauth_provider_public_service_url) If specified, the core uses this URL to parse responses from\n# the oauth provider when the oauth provider's internal address differs from the known public provider address.\n# oauth_provider_url_configured_in_oauth_provider:\n\n# (Optional | Default: null) string value. The encryption key used for saving OAuth client secret on the database.\n# oauth_client_secret_encryption_key:\n"
        },
        {
          "name": "coreDriverInterfaceSupported.json",
          "type": "blob",
          "size": 0.353515625,
          "content": "{\n  \"_comment\": \"contains a list of core-driver interfaces branch names that this core supports\",\n  \"versions\": [\n    \"2.7\",\n    \"2.8\",\n    \"2.9\",\n    \"2.10\",\n    \"2.11\",\n    \"2.12\",\n    \"2.13\",\n    \"2.14\",\n    \"2.15\",\n    \"2.16\",\n    \"2.17\",\n    \"2.18\",\n    \"2.19\",\n    \"2.20\",\n    \"2.21\",\n    \"3.0\",\n    \"3.1\",\n    \"4.0\",\n    \"5.0\",\n    \"5.1\",\n    \"5.2\"\n  ]\n}\n"
        },
        {
          "name": "devConfig.yaml",
          "type": "blob",
          "size": 7.8173828125,
          "content": "# Config for SuperTokens service. Here you will set the config params for\n# the main service as well as your database.\n# Some parameters are compulsory and are indicated via a (COMPULSORY) tag.\n# Others are optional and are indicated via a (OPTIONAL) tag.\n# To see the default values of the optional params are mentioned in the tag itself\n\ncore_config_version: 0\n\n\n# (OPTIONAL | Default: 3567) integer value. The port at which SuperTokens service runs.\n# port:\n\n\n# (OPTIONAL | Default: \"localhost\") string value. The host on which SuperTokens service runs. Values here can\n# be localhost, example.com, 0.0.0.0 or any IP address associated with your machine\n# host:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: 3600) integer value. Time in seconds for how long an access token is\n# valid for.\n# access_token_validity:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: false) boolean value. Deprecated, please see changelog. Only used in\n# CDI<=2.18 If true, allows for immediate revocation of any access token. Keep in mind that setting this to true will\n# result in a db query for each API call that requires authentication.\n# access_token_blacklisting:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: true) boolean value. Deprecated, please see changelog.\n# If this is set to true, the access tokens created using CDI<=2.18 will be signed using a static signing key.\n# access_token_signing_key_dynamic:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: 168) integer value. Time in hours for how frequently the dynamic signing\n# key will change.\n# access_token_dynamic_signing_key_update_interval:\n\n# This is now deprecated, we only add this to the dev config to test if the fallback in the config parser works right\n# access_token_signing_key_update_interval:\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: 144000) double value. Time in mins for how long a refresh token is valid\n# for.\n# refresh_token_validity:\n\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 3600000) long value. Time in milliseconds for how long a password\n# reset token / link is valid for.\n# password_reset_token_lifetime:\n\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 86400000 (1 day)) long value. Time in milliseconds for how long an\n# email verification token / link is valid for.\n# email_verification_token_lifetime:\n\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 5) integer value. The maximum number of code input attempts per login\n# before the user needs to restart.\n# passwordless_max_code_input_attempts:\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 900000) long value. Time in milliseconds for how long a passwordless\n# code is valid for.\n# passwordless_code_lifetime:\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 5) integer value. The maximum number of invalid TOTP attempts that\n# will trigger rate limiting.\n# totp_max_attempts:\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: 900) integer value. The time in seconds for which the user will be\n# rate limited once totp_max_attempts is crossed.\n# totp_rate_limit_cooldown_sec:\n\n# (OPTIONAL | Default: installation directory/logs/info.log) string value. Give the path to a file (on your local\n# system) in which the SuperTokens service can write INFO logs to. Set it to \"null\" if you want it to log to\n# standard output instead.\n# info_log_path:\n\n\n# (OPTIONAL | Default: installation directory/logs/error.log) string value. Give the path to a file (on your local\n# system) in which the SuperTokens service can write ERROR logs to. Set it to \"null\" if you want it to log to\n# standard error instead\n# error_log_path:\n\n\n# (OPTIONAL | Default: 10) integer value. Sets the max thread pool size for incoming http server requests.\n# max_server_pool_size:\n\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: no API keys) comma separated string values. The API keys to query an\n# instance using this config file. The format is \"key1,key2,key3\". Keys can only contain '=', '-' and alpha-numeric\n# (including capital) chars. Each key must have a minimum length of 20 chars\n# api_keys:\n\n\n# DIFFERENT_ACROSS_APPS | Important: This is set to true here but is uncommented in config.yaml. The reason is that\n# when testing with drivers or in CICD, we do not want to send telemetry data. For unit tests, this is commented\n# again in Utils.reset function (in the test package)\ndisable_telemetry: true\n\n# (OPTIONAL | Default: \"\"). Used to prepend a base path to all APIs when querying the core.\n# base_path:\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: \"BCRYPT\"). The password hashing algorithm to use. Values are \"ARGON2\" |\n# \"BCRYPT\"\n# password_hashing_alg:\n\n# (OPTIONAL | Default: 11). Number of rounds to set for bcrypt password hashing\n# bcrypt_log_rounds:\n\n# (OPTIONAL | Default: 1). Number of iterations for argon2 password hashing\n# argon2_iterations:\n\n# (OPTIONAL | Default: 87795 (85 mb)). Amount of memory in kb for argon2 password hashing\n# argon2_memory_kb:\n\n# (OPTIONAL | Default: 2). Amount of parallelism for argon2 password hashing\n# argon2_parallelism:\n\n# (OPTIONAL | Default: 1). Number of concurrent argon2 hashes that can happen at the same time for sign up or sign\n# in requests.\n# argon2_hashing_pool_size:\n\n# (OPTIONAL | Default: \"INFO\"). Logging level for the core. Values are \"DEBUG\" | \"INFO\" | \"WARN\" | \"ERROR\" | \"NONE\"\n# log_level:\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: null). The signer key used for firebase scrypt password hashing\n# firebase_password_hashing_signer_key:\n\n# (OPTIONAL | Default: 1). Number of concurrent firebase scrypt hashes that can happen at the same time for sign in requests.\n# firebase_password_hashing_pool_size:\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: null). Regex for allowing requests from IP addresses that match with\n# the value. For example, use the value of 127\\.\\d+\\.\\d+\\.\\d+|::1|0:0:0:0:0:0:0:1 to allow only localhost to query the\n# core. Comment it out to allow requests from any IP address.\n# ip_allow_regex:\n\n# (DIFFERENT_ACROSS_TENANTS | OPTIONAL | Default: null). Regex for denying requests from IP addresses that match with\n# the value. Comment this value to deny no IP address.\n# ip_deny_regex:\n\n# (OPTIONAL | Default: null). This is used when deploying the core in SuperTokens SaaS infrastructure. If set, limits\n# what database information is shown to / modifiable by the dev when they query the core to get the information about\n# their tenants. It only exposes that information when this key is used instead of the regular api_keys config.\n# supertokens_saas_secret:\n\n# (DIFFERENT_ACROSS_APPS | OPTIONAL | Default: null). This is used when the core needs to assume a specific CDI version\n# when CDI version is not specified in the request. When set to null, the core will assume the latest version of the\n# CDI.\n# supertokens_max_cdi_version:\n\n# (OPTIONAL | Default: null) string value. If specified, the supertokens service will only load the specified CUD even\n# if there are more CUDs in the database and block all other CUDs from being used from this instance.\n# supertokens_saas_load_only_cud:\n\n# (OPTIONAL | Default: null) string value. If specified, the core uses this URL to connect to the OAuth provider\n# public service.\n# oauth_provider_public_service_url:\n\n# (OPTIONAL | Default: null) string value. If specified, the core uses this URL to connect to the OAuth provider admin\n# service.\n# oauth_provider_admin_service_url:\n\n# (OPTIONAL | Default: null) string value. If specified, the core uses this URL to replace the default\n# consent and login URLs to {apiDomain}.\n# oauth_provider_consent_login_base_url:\n\n# (OPTIONAL | Default: oauth_provider_public_service_url) If specified, the core uses this URL to parse responses from\n# the oauth provider when the oauth provider's internal address differs from the known public provider address.\n# oauth_provider_url_configured_in_oauth_provider:\n\n# (Optional | Default: null) string value. The encryption key used for saving OAuth client secret on the database.\n# oauth_client_secret_encryption_key:\n"
        },
        {
          "name": "downloader",
          "type": "tree",
          "content": null
        },
        {
          "name": "ee",
          "type": "tree",
          "content": null
        },
        {
          "name": "implementationDependencies.json",
          "type": "blob",
          "size": 6.1826171875,
          "content": "{\n  \"_comment\": \"Contains list of implementation dependencies URL for this project\",\n  \"list\": [\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/gson-2.3.1.jar\",\n      \"name\": \"Gson 2.3.1\",\n      \"src\": \"https://repo1.maven.org/maven2/com/google/code/gson/gson/2.3.1/gson-2.3.1-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.16.1/jackson-dataformat-yaml-2.16.1.jar\",\n      \"name\": \"Jackson Dataformat 2.16.1\",\n      \"src\": \"https://repo1.maven.org/maven2/com/fasterxml/jackson/dataformat/jackson-dataformat-yaml/2.16.1/jackson-dataformat-yaml-2.16.1-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/org/yaml/snakeyaml/2.2/snakeyaml-2.2.jar\",\n      \"name\": \"SnakeYAML 2.2\",\n      \"src\": \"https://repo1.maven.org/maven2/org/yaml/snakeyaml/2.2/snakeyaml-2.2-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.16.1/jackson-core-2.16.1.jar\",\n      \"name\": \"Jackson core 2.16.1\",\n      \"src\": \"https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-core/2.16.1/jackson-core-2.16.1-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.16.1/jackson-databind-2.16.1.jar\",\n      \"name\": \"Jackson databind 2.16.1\",\n      \"src\": \"https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-databind/2.16.1/jackson-databind-2.16.1-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.16.1/jackson-annotations-2.16.1.jar\",\n      \"name\": \"Jackson annotation 2.16.1\",\n      \"src\": \"https://repo1.maven.org/maven2/com/fasterxml/jackson/core/jackson-annotations/2.16.1/jackson-annotations-2.16.1-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14.jar\",\n      \"name\": \"Logback classic 1.4.14\",\n      \"src\": \"https://repo1.maven.org/maven2/ch/qos/logback/logback-classic/1.4.14/logback-classic-1.4.14-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14.jar\",\n      \"name\": \"Logback core 1.4.14\",\n      \"src\": \"https://repo1.maven.org/maven2/ch/qos/logback/logback-core/1.4.14/logback-core-1.4.14-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar\",\n      \"name\": \"SLF4j API 2.0.7\",\n      \"src\": \"https://repo1.maven.org/maven2/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/org/apache/tomcat/tomcat-annotations-api/10.1.18/tomcat-annotations-api-10.1.18.jar\",\n      \"name\": \"Tomcat annotations API 10.1.18\",\n      \"src\": \"https://repo1.maven.org/maven2/org/apache/tomcat/tomcat-annotations-api/10.1.18/tomcat-annotations-api-10.1.18-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18.jar\",\n      \"name\": \"Tomcat embed core API 10.1.1\",\n      \"src\": \"https://repo1.maven.org/maven2/org/apache/tomcat/embed/tomcat-embed-core/10.1.18/tomcat-embed-core-10.1.18-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar\",\n      \"name\": \"JSR305 3.0.2\",\n      \"src\": \"https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/org/jetbrains/annotations/13.0/annotations-13.0.jar\",\n      \"name\": \"JSR305 3.0.2\",\n      \"src\": \"https://repo1.maven.org/maven2/org/jetbrains/annotations/13.0/annotations-13.0-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/org/xerial/sqlite-jdbc/3.45.1.0/sqlite-jdbc-3.45.1.0.jar\",\n      \"name\": \"SQLite JDBC Driver 3.45.1.0\",\n      \"src\": \"https://repo1.maven.org/maven2/org/xerial/sqlite-jdbc/3.45.1.0/sqlite-jdbc-3.45.1.0-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/org/mindrot/jbcrypt/0.4/jbcrypt-0.4.jar\",\n      \"name\": \"JBCrypt 0.4\",\n      \"src\": \"https://repo1.maven.org/maven2/org/mindrot/jbcrypt/0.4/jbcrypt-0.4-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0.jar\",\n      \"name\": \"Auth0 Java JWT\",\n      \"src\": \"https://repo1.maven.org/maven2/com/auth0/java-jwt/4.4.0/java-jwt-4.4.0-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/de/mkammerer/argon2-jvm/2.11/argon2-jvm-2.11.jar\",\n      \"name\": \"Argon2-jvm 2.11\",\n      \"src\": \"https://repo1.maven.org/maven2/de/mkammerer/argon2-jvm/2.11/argon2-jvm-2.11-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/de/mkammerer/argon2-jvm-nolibs/2.11/argon2-jvm-nolibs-2.11.jar\",\n      \"name\": \"Argon2-jvm no libs 2.11\",\n      \"src\": \"https://repo1.maven.org/maven2/de/mkammerer/argon2-jvm-nolibs/2.11/argon2-jvm-nolibs-2.11-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/net/java/dev/jna/jna/5.8.0/jna-5.8.0.jar\",\n      \"name\": \"JNA 5.8.0\",\n      \"src\": \"https://repo1.maven.org/maven2/net/java/dev/jna/jna/5.8.0/jna-5.8.0-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/com/lambdaworks/scrypt/1.4.0/scrypt-1.4.0.jar\",\n      \"name\": \"Scrypt 1.4.0\",\n      \"src\": \"https://repo1.maven.org/maven2/com/lambdaworks/scrypt/1.4.0/scrypt-1.4.0-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/com/eatthepath/java-otp/0.4.0/java-otp-0.4.0.jar\",\n      \"name\": \"Java OTP 0.4.0\",\n      \"src\": \"https://repo1.maven.org/maven2/com/eatthepath/java-otp/0.4.0/java-otp-0.4.0-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/commons-codec/commons-codec/1.15/commons-codec-1.15.jar\",\n      \"name\": \"Commons Codec 1.15\",\n      \"src\": \"https://repo1.maven.org/maven2/commons-codec/commons-codec/1.15/commons-codec-1.15-sources.jar\"\n    },\n    {\n      \"jar\": \"https://repo1.maven.org/maven2/com/googlecode/libphonenumber/libphonenumber/8.13.25/libphonenumber-8.13.25.jar\",\n      \"name\": \"Libphonenumber 8.13.25\",\n      \"src\": \"https://repo1.maven.org/maven2/com/googlecode/libphonenumber/libphonenumber/8.13.25/libphonenumber-8.13.25-sources.jar\"\n    }\n  ]\n}"
        },
        {
          "name": "install",
          "type": "blob",
          "size": 0.2431640625,
          "content": "#!/bin/bash\n\n./jre/bin/java -classpath \"./downloader/*\" io.supertokens.downloader.Main $@\n\nif [ $? -ne 0 ]\nthen\n    echo \"Installation failed. Please try again\"\n\texit 1\nfi\n\necho \"\"\n\n./jre/bin/java -classpath \"./cli/*\" io.supertokens.cli.Main true $@"
        },
        {
          "name": "install.bat",
          "type": "blob",
          "size": 0.2421875,
          "content": "@echo off\njre\\bin\\java -classpath \"downloader\\*\" io.supertokens.downloader.Main %*\n\nIF %errorlevel% NEQ 0 (\n    echo Installation failed. Please try again\n    goto:eof\n)\n\necho.\n\njre\\bin\\java -classpath \"cli\\*\" io.supertokens.cli.Main true %*\n\n:eof\n"
        },
        {
          "name": "jar",
          "type": "tree",
          "content": null
        },
        {
          "name": "migration_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "pluginInterfaceSupported.json",
          "type": "blob",
          "size": 0.12109375,
          "content": "{\n  \"_comment\": \"contains a list of plugin interfaces branch names that this core supports\",\n  \"versions\": [\n    \"6.3\"\n  ]\n}"
        },
        {
          "name": "runBuild",
          "type": "blob",
          "size": 0.6513671875,
          "content": "exitIfNeeded () {\n  if [ $? -ne 0 ]\n\tthen\n\t\texit 1\n\tfi\n}\n\nprefix=`(cd ../ && ./utils/project-prefix)`\n(cd ../ && ./gradlew :$prefix-core:clean < /dev/null)\n\nexitIfNeeded\n\n(cd ../ && ./gradlew :$prefix-core:build -x test < /dev/null)\n\nexitIfNeeded\n\n(cd ../ && ./gradlew :$prefix-core:copyJars < /dev/null)\n\nexitIfNeeded\n\nif [ $# -eq 0 ]\nthen\n\trm -rf ./jar/*\n\tcp ./build/libs/* ./jar\nfi\n\n(cd ./cli/ && ./runBuild \"$@\")\nif [[ $? -ne 0 ]]\nthen\n    echo \"Failed to build\"\n\texit 1\nfi\n(cd ./downloader/ && ./runBuild \"$@\")\nif [[ $? -ne 0 ]]\nthen\n    echo \"Failed to build\"\n\texit 1\nfi\n(cd ./ee/ && ./runBuild \"$@\")\nif [[ $? -ne 0 ]]\nthen\n    echo \"Failed to build\"\n\texit 1\nfi"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-data",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}