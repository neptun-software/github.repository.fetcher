{
  "metadata": {
    "timestamp": 1736708828917,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OpenAPITools/openapi-generator",
      "stars": 22424,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".ddev",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.26171875,
          "content": ".git/\n*.iml\nout/\n*.ipr\n*.iws\nclasspath.txt\nversion.properties\n.project\n.classpath\nlib/*\nbuild/*\ngenerated-files/*\ngenerated-sources/*\ngenerated-code/*\n*.swp\n*.swo\n*.bak\nproject/\nsamples/*\ntarget/\n.idea/\n.lib/\n.DS_Store\n\n# Not needed in a linux container\nbin/windows/*\n"
        },
        {
          "name": ".envrc",
          "type": "blob",
          "size": 0.0205078125,
          "content": "has nix && use flake\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0546875,
          "content": "**/*.mustache linguist-vendored=true\n* text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 9.86328125,
          "content": ".mvn/.gradle-enterprise/\n.mvn/.develocity/\n.scannerwork/\n.vscode\n*.iml\nout/\n*.ipr\n*.iws\n*.gpg\nclasspath.txt\nversion.properties\nmodules/openapi-generator-maven-plugin/src/test/resources/default/_merged_spec.yaml\nmodules/openapi-generator-gradle-plugin/bin/\n!modules/openapi-generator-cli/src/main/resources/version.properties\n.project\n.classpath\nlib/*\nbuild/*\ngenerated-files/*\ngenerated-sources/*\ngenerated-code/*\n*.swp\n*.swo\ntarget\n.idea\n.lib\natlassian-ide-plugin.xml\n.DS_Store\npackages/\n.pub\n.packages\n.vagrant/\n.vscode/\n**/.vs\n.factorypath\n.metals/*\nnbproject/\nnbactions.xml\nnb-configuration.xml\n.direnv/\n**/:w\n\n.settings\n\n*.mustache~\n*.java~\n*.pm~\n*.xml~\n*.t~\n\n/target\n/generated-files\ntest-output/\nnbactions.xml\ntest-output/\n\n# website\nwebsite/build/\nwebsite/package-lock.json\n\n# scalatra\nsamples/server-generator/scalatra/output\nsamples/server-generator/scalatra/target\nsamples/server-generator/scalatra/output/.history\n\n# nodejs\n**/node_modules\nsamples/server-generator/node/output/node_modules\nsamples/server/petstore/nodejs/node_modules\nsamples/server/petstore/nodejs-server/node_modules\n\n# qt cpp\nsamples/client/build\nsamples/client/petstore/build\nsamples/client/petstore/cpp-qt/PetStore/moc_*\nsamples/client/petstore/cpp-qt/PetStore/*.o\nsamples/client/petstore/cpp-qt/build-*\nsamples/client/petstore/cpp-qt/build-*\nsamples/client/petstore/cpp-qt/PetStore/PetStore\nsamples/client/petstore/cpp-qt/PetStore/Makefile\nsamples/client/petstore/cpp-qt/PetStore/PetStore.pro.user\nsamples/client/petstore/cpp-qt/CMakeLists.txt.user\n\n# cpprestsdk\nsamples/client/petstore/cpp-restsdk/CMakeCache.txt\nsamples/client/petstore/cpp-restsdk/CMakeFiles/\nsamples/client/petstore/cpp-restsdk/Makefile\nsamples/client/petstore/cpp-restsdk/cmake_install.cmake\nsamples/client/petstore/cpp-restsdk/client/CMakeFiles\nsamples/client/petstore/cpp-restsdk/client/Makefile\nsamples/client/petstore/cpp-restsdk/client/cmake_install.cmake\nsamples/client/petstore/cpp-restsdk/client/CppRestPetstoreClientConfig.cmake\nsamples/client/petstore/cpp-restsdk/client/CMakeCache.txt\n\n#Java/Android\n**/.gradle\nsamples/client/petstore/java/hello.txt\nsamples/client/petstore/java/okhttp-gson/hello.txt\nsamples/client/petstore/java/okhttp-gson-3.1/hello.txt\nsamples/client/petstore/java/jersey2-java8/hello.txt\nsamples/client/petstore/java/jersey2/hello.txt\nsamples/client/petstore/android/default/hello.txt\nsamples/client/petstore/android/volley/.gradle/\nsamples/client/petstore/android/volley/build/\nsamples/client/petstore/java/jersey2/.gradle/\nsamples/client/petstore/java/jersey2/build/\nsamples/client/petstore/java/okhttp-gson/.gradle/\nsamples/client/petstore/java/okhttp-gson/build/\nsamples/client/petstore/java/feign/build/\nsamples/client/petstore/java/feign10x/build/\nsamples/client/petstore/java/feign/project/\nsamples/client/petstore/java/feign10x/project/\nsamples/client/petstore/java/retrofit/build/\nsamples/client/petstore/java/retrofit2/build/\nsamples/client/petstore/java/retrofit2/hello.txt\nsamples/client/petstore/java/retrofit2rx/build/\nsamples/client/petstore/java/default/build/\nsamples/client/petstore/scala/build/\nsamples/client/petstore/java/resttemplate/hello.txt\nsamples/client/petstore/java/retrofit2/hello.txt\nsamples/client/petstore/java/feign/hello.txt\nsamples/client/petstore/java/jersey2-java6/project/\nsamples/client/petstore/java/jersey2-java8/project/\nsamples/client/petstore/java/jersey2/project/\n\n# Perl\nsamples/client/petstore/perl/deep_module_test/\n\n# Objc\nsamples/client/petstore/objc/default/SwaggerClientTests/SwaggerClient.xcodeproj/xcuserdata\nsamples/client/petstore/objc/default/SwaggerClientTests/Build\nsamples/client/petstore/objc/default/SwaggerClientTests/Pods\nsamples/client/petstore/objc/default/SwaggerClientTests/SwaggerClient.xcworkspace\nsamples/client/petstore/objc/default/SwaggerClientTests/Podfile.lock\n\nsamples/client/petstore/objc/core-data/SwaggerClientTests/SwaggerClient.xcodeproj/xcuserdata\nsamples/client/petstore/objc/core-data/SwaggerClientTests/Build\nsamples/client/petstore/objc/core-data/SwaggerClientTests/Pods\nsamples/client/petstore/objc/core-data/SwaggerClientTests/SwaggerClient.xcworkspace\nsamples/client/petstore/objc/core-data/SwaggerClientTests/Podfile.lock\n\n# Swift\nsamples/client/petstore/swift/**/SwaggerClientTests/SwaggerClient.xcodeproj/xcuserdata\nsamples/client/petstore/swift/**/SwaggerClientTests/SwaggerClient.xcworkspace/xcuserdata\nsamples/client/petstore/swift/**/SwaggerClientTests/Pods/\n#samples/client/petstore/swift/**/SwaggerClientTests/Pods/Pods.xcodeproj/xcuserdata\n#samples/client/petstore/swift/**/SwaggerClientTests/Pods/Pods.xcodeproj/xcshareddata/xcschemes\nsamples/client/petstore/swift/**/SwaggerClientTests/Podfile.lock\n# Swift3\nsamples/client/petstore/swift3/**/SwaggerClientTests/SwaggerClient.xcodeproj/xcuserdata\nsamples/client/petstore/swift3/**/SwaggerClientTests/SwaggerClient.xcworkspace/xcuserdata\n#samples/client/petstore/swift3/**/SwaggerClientTests/Pods/\n#samples/client/petstore/swift3/**/SwaggerClientTests/Pods/Pods.xcodeproj/xcuserdata\n#samples/client/petstore/swift3/**/SwaggerClientTests/Pods/Pods.xcodeproj/xcshareddata/xcschemes\nsamples/client/petstore/swift3/**/SwaggerClientTests/Podfile.lock\n\n# C#\n*.csproj.user\nsamples/client/petstore/csharp/SwaggerClient/IO.Swagger.userprefs\nsamples/client/petstore/csharp/SwaggerClientTest/obj\nsamples/client/petstore/csharp/SwaggerClientTest/bin\nsamples/client/petstore/csharp/SwaggerClientTest/packages\nsamples/client/petstore/csharp/SwaggerClientTest/bin/Debug/\nsamples/client/petstore/csharp/SwaggerClientTest/obj/Debug/\nsamples/client/petstore/csharp/SwaggerClientTest/TestResult.xml\nsamples/client/petstore/csharp/SwaggerClientTest/nuget.exe\nsamples/client/petstore/csharp/SwaggerClientTest/testrunner/\nsamples/client/petstore/csharp/SwaggerClient/.vs\nsamples/client/petstore/csharp/SwaggerClient/nuget.exe\nsamples/client/petstore/csharp/SwaggerClient/obj\nsamples/client/petstore/csharp/SwaggerClient/bin\nsamples/client/petstore/csharp/SwaggerClient/obj/Debug/\nsamples/client/petstore/csharp/SwaggerClient/bin/Debug/\nsamples/client/petstore/csharp/SwaggerClient/packages\nsamples/client/petstore/csharp/SwaggerClient/TestResult.xml\nsamples/client/petstore/csharp/SwaggerClientWithPropertyChanged/IO.Swagger.userprefs\nsamples/client/petstore/csharp-refactor/OpenAPIClient/TestResult.xml\nsamples/client/petstore/csharp-refactor/OpenAPIClient/nuget.exe\n\n# Python\n*.pyc\n__pycache__\n.venv/\nsamples/client/petstore/python/dev-requirements.txt.log\nsamples/client/petstore/python/swagger_client.egg-info/SOURCES.txt\nsamples/client/petstore/python/.coverage\nsamples/client/petstore/python/.projectile\nsamples/client/petstore/python-asyncio/.pytest_cache/\n**/poetry.lock\n\n# PHP\nsamples/client/petstore/php/OpenAPIClient-php/composer.lock\nsamples/client/petstore/php-nextgen/OpenAPIClient-php/composer.lock\nsamples/client/petstore/php-dt/composer.lock\nsamples/client/petstore/php-dt-modern/composer.lock\nsamples/openapi3/server/petstore/php-symfony/SymfonyBundle-php/composer.lock\nsamples/server/petstore/php-laravel/lib/composer.lock\nsamples/server/petstore/php-lumen/lib/composer.lock\nsamples/server/petstore/php-slim4/composer.lock\nsamples/server/petstore/php-symfony/SymfonyBundle-php/composer.lock\nsamples/server/petstore/php-mezzio-ph/composer.lock\nsamples/server/petstore/php-mezzio-ph-modern/composer.lock\n\n# ts\nsamples/client/petstore/typescript-angular2/npm/npm-debug.log\nsamples/client/petstore/typescript-node/npm/npm-debug.log\nsamples/client/petstore/typescript-angular/tsd-debug.log\nsamples/client/petstore/typescript-axios/tests/**/dist/\nsamples/client/petstore/typescript-fetch/tests/**/dist/\n\n# aspnetcore\nsamples/server/petstore/aspnetcore/.vs/\neffective.pom\n\n# kotlin\nsamples/openapi3/client/petstore/kotlin/build\nsamples/server/petstore/kotlin-server/ktor/build\nsamples/server/petstore/kotlin-springboot/build\nsamples/client/petstore/kotlin*/src/main/kotlin/test/\nsamples/client/petstore/kotlin*/build/\nsamples/server/others/kotlin-server/jaxrs-spec/build/\nsamples/client/echo_api/kotlin-jvm-spring-3-restclient/build/\nsamples/client/echo_api/kotlin-jvm-okhttp/build/\n\n# haskell\n.stack-work\n.cabal-sandbox\ncabal.project.local\nsamples/client/petstore/haskell-http-client/docs/haddock-bundle.min.js\nsamples/client/petstore/haskell-http-client/docs/meta.json\nsamples/client/petstore/haskell-http-client/docs/quick-jump.css\nsamples/client/petstore/haskell-http-client/stack.yaml.lock\nsamples/server/petstore/haskell-servant/stack.yaml.lock\nsamples/server/petstore/haskell-yesod/stack.yaml.lock\n\n# R\n.Rproj.user\nsamples/client/petstore/R/**/petstore.Rcheck/\nsamples/client/petstore/R/**/*.tar.gz\nsamples/client/petstore/R/R.Rproj\nsamples/client/petstore/R/man/\nsamples/client/petstore/R-httr2-wrapper/man/\nsamples/client/petstore/R-httr2/man/\n\n# elixir\nsamples/client/petstore/elixir/_build/\nsamples/client/petstore/elixir/deps/\nsamples/client/petstore/elixir/mix.lock\n\n# groovy\nsamples/client/petstore/groovy/build\n\n# erlang\nsamples/client/petstore/erlang-client/_build/\nsamples/client/petstore/erlang-client/rebar.lock\nsamples/client/petstore/erlang-proper/_build/\nsamples/client/petstore/erlang-proper/rebar.lock\nsamples/server/petstore/erlang-server/_build/\nsamples/server/petstore/erlang-server/rebar.lock\n\n# Dart\n**/dart*/**/.dart_tool\n**/dart*/**/.packages\n**/dart*/**/pubspec.lock\n# Dart dio\n**/dart*/**/*.g.dart\n\n# JS\nsamples/client/petstore/javascript-es6/package-lock.json\nsamples/client/petstore/javascript-promise-es6/package-lock.json\nsamples/client/petstore/javascript-apollo/package-lock.json\n\n# elm\nsamples/client/petstore/elm/index.html\n\n# C\nsamples/client/petstore/c/build\nsamples/client/petstore/c/*.so\n\n# Ruby\nsamples/openapi3/client/petstore/ruby/Gemfile.lock\nsamples/openapi3/client/petstore/ruby-faraday/Gemfile.lock\nsamples/openapi3/client/petstore/ruby-httpx/Gemfile.lock\n\n# Crystal\nsamples/client/petstore/crystal/lib\n\n# Go\nsamples/openapi3/client/petstore/go/privatekey.pem\n\n## OCaml\nsamples/client/petstore/ocaml/_build/\n\n# jetbrain http client\nsamples/client/jetbrains/adyen/checkout71/http/client/Apis/http-client.private.env.json\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 5.548828125,
          "content": "## Learn more about this file at 'https://www.gitpod.io/docs/references/gitpod-yml'\n##\n## This '.gitpod.yml' file when placed at the root of a project instructs\n## Gitpod how to prepare & build the project, start development environments\n## and configure continuous prebuilds. Prebuilds when enabled builds a project\n## like a CI server so you can start coding right away - no more waiting for\n## dependencies to download and builds to finish when reviewing pull-requests\n## or hacking on something new.\n##\n## With Gitpod you can develop software from any device (even iPads) via \n## desktop or browser based versions of VS Code or any JetBrains IDE and\n## customise it to your individual needs - from themes to extensions, you\n## have full control.\n##\n## The easiest way to try out Gitpod is install the browser extension:\n## 'https://www.gitpod.io/docs/browser-extension' or by prefixing\n## 'https://gitpod.io#' to the source control URL of any project.\n##\n## For example: 'https://gitpod.io#https://github.com/gitpod-io/gitpod'\n\n\n## The 'image' section defines which Docker image Gitpod should use. \n## By default, Gitpod uses a standard Docker Image called 'workspace-full'\n## which can be found at 'https://github.com/gitpod-io/workspace-images'\n##\n## Workspaces started based on this default image come pre-installed with\n## Docker, Go, Java, Node.js, C/C++, Python, Ruby, Rust, PHP as well as\n## tools such as Homebrew, Tailscale, Nginx and several more.\n##\n## If this image does not include the tools needed for your project then\n## a public Docker image or your own Docker file can be configured.\n## \n## Learn more about images at 'https://www.gitpod.io/docs/config-docker'\n\n#image: node:buster                        # use 'https://hub.docker.com/_/node'\n#\n#image:                                    # leave image undefined if using a Dockerfile\n#  file: .gitpod.Dockerfile                # relative path to the Dockerfile from the\n#                                          # root of the project\n\n## The 'tasks' section defines how Gitpod prepares and builds this project\n## or how Gitpod can start development servers. With Gitpod, there are three\n## types of tasks:\n##\n## - before: Use this for tasks that need to run before init and before command. \n## - init: Use this to configure prebuilds of heavy-lifting tasks such as\n##         downloading dependencies or compiling source code.\n## - command: Use this to start your database or application when the workspace starts.\n##\n## Learn more about these tasks at 'https://www.gitpod.io/docs/config-start-tasks'\n\n#tasks:\n#  - before: |\n#      # commands to execute...\n#\n#  - init: |\n#      # sudo apt-get install python3     # can be used to install operating system \n#                                         # dependencies but these are not kept after the\n#                                         # prebuild completes thus Gitpod recommends moving\n#                                         # operating system dependency installation steps\n#                                         # to a custom Dockerfile to make prebuilds faster\n#                                         # and to keep your codebase DRY.  \n#                                         # 'https://www.gitpod.io/docs/config-docker'\n#\n#      # pip install -r requirements.txt  # install codebase dependencies\n#      # cmake                            # precompile codebase\n#\n#  - name: Web Server\n#    openMode: split-left\n#    env:\n#      WEBSERVER_PORT: 8080\n#    command: |\n#     python3 -m http.server $WEBSERVER_PORT\n#\n#  - name: Web Browser\n#    openMode: split-right\n#    env:\n#      WEBSERVER_PORT: 8080\n#    command: |\n#     gp await-port $WEBSERVER_PORT\n#     lynx `gp url`\n\ntasks:\n  - init: ./mvnw package -DskipTests\n\n## The 'ports' section defines various ports your may listen on are \n## configured in Gitpod on an authenticated URL. By default, all ports\n## are in private visibility state.\n##\n## Learn more about ports at 'https://www.gitpod.io/docs/config-ports'\n\n#ports:\n#  - port: 8080 # alternatively configure entire ranges via '8080-8090'\n#    visibility: private # either 'public' or 'private' (default)\n#    onOpen: open-browser # either 'open-browser', 'open-preview' or 'ignore'\n\n\n## The 'vscode' section defines a list of Visual Studio Code extensions from\n## the OpenVSX.org registry to be installed upon workspace startup. OpenVSX\n## is an open alternative to the proprietary Visual Studio Code Marketplace\n## and extensions can be added by sending a pull-request with the extension\n## identifier to https://github.com/open-vsx/publish-extensions\n##\n## The identifier of an extension is always ${publisher}.${name}.\n##\n## For example: 'vscodevim.vim'\n##\n## Learn more at 'https://www.gitpod.io/docs/ides-and-editors/vscode'\n\nvscode:\n  extensions:\n    - redhat.java\n    - vscjava.vscode-java-pack\n\n## The 'github' section defines configuration of continuous prebuilds\n## for GitHub repositories when the GitHub application\n## 'https://github.com/apps/gitpod-io' is installed in GitHub and granted\n## permissions to access the repository.\n##\n## Learn more at 'https://www.gitpod.io/docs/prebuilds'\n\ngithub: \n  prebuilds:\n    # enable for the default branch\n    master: true\n    # enable for all branches in this repo\n    branches: true\n    # enable for pull requests coming from this repo\n    pullRequests: true\n    # enable for pull requests coming from forks\n    pullRequestsFromForks: true\n    # add a check to pull requests\n    addCheck: true\n    # add a \"Review in Gitpod\" button as a comment to pull requests\n    addComment: true\n    # add a \"Review in Gitpod\" button to the pull request's description\n    addBadge: false\n"
        },
        {
          "name": ".hub.cli.dockerfile",
          "type": "blob",
          "size": 1.0185546875,
          "content": "## The builder labeled image acts as a transient container which is meant to\n## hold all non-artifact code.\n##\n## You can build _just_ this part with:\n##     docker --target builder -t container-name:builder -f .hub.cli.dockerfile .\nFROM maven:3-eclipse-temurin-17 as builder\n\nENV GEN_DIR /opt/openapi-generator\nWORKDIR ${GEN_DIR}\nCOPY . ${GEN_DIR}\n\n# Pre-compile openapi-generator-cli\nRUN mvn -B -am -pl \"modules/openapi-generator-cli\" package\n\n## The final (release) image\n## The resulting container here only needs the target jar\n## and ca-certificates (to be able to query HTTPS hosted specs)\nFROM eclipse-temurin:17-jre\n\nENV GEN_DIR /opt/openapi-generator\n\nRUN mkdir -p ${GEN_DIR}/modules/openapi-generator-cli/target\n\nWORKDIR ${GEN_DIR}/modules/openapi-generator-cli/target\n\nCOPY --from=builder ${GEN_DIR}/modules/openapi-generator-cli/target/openapi-generator-cli.jar ${GEN_DIR}/modules/openapi-generator-cli/target/openapi-generator-cli.jar\n\nCOPY docker-entrypoint.sh /usr/local/bin/\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nCMD [\"help\"]\n"
        },
        {
          "name": ".hub.online.dockerfile",
          "type": "blob",
          "size": 0.90625,
          "content": "## The builder labeled image acts as a transient container which is meant to\n## hold all non-artifact code.\n##\n## You can build _just_ this part with:\n##     docker --target builder -t container-name:builder -f .hub.online.dockerfile .\nFROM maven:3-eclipse-temurin-17 as builder\n\nENV GEN_DIR /opt/openapi-generator\nWORKDIR ${GEN_DIR}\nCOPY . ${GEN_DIR}\n\n# Pre-compile openapi-generator-online\nRUN mvn -B -am -pl \"modules/openapi-generator-online\" package\n\n## The final (release) image\n## The resulting container here only needs the target jar\nFROM eclipse-temurin:17-jre\n\nENV GEN_DIR /opt/openapi-generator\nENV TARGET_DIR /generator\n\nRUN mkdir -p ${TARGET_DIR}\n\nWORKDIR ${TARGET_DIR}\n\nCOPY --from=builder ${GEN_DIR}/modules/openapi-generator-online/target/openapi-generator-online.jar ${TARGET_DIR}/openapi-generator-online.jar\n\nENV GENERATOR_HOST=\"\"\n\nEXPOSE 8080\n\nCMD [\"java\", \"-jar\", \"/generator/openapi-generator-online.jar\"]\n"
        },
        {
          "name": ".java-version",
          "type": "blob",
          "size": 0.0029296875,
          "content": "11\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".sdkmanrc",
          "type": "blob",
          "size": 0.0283203125,
          "content": "java=11.0.23-tem\nmaven=3.8.8\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 13.224609375,
          "content": "sudo: required\nlanguage: java\njdk:\n  - openjdk11\n\n# See https://docs.travis-ci.com/user/languages/java/#caching\nbefore_cache:\n  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock\n  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/\n  # Avoid caching our built dependencies between runs.\n  - rm -fr $HOME/.m2/repository/org/openapitools/\n\ncache:\n  yarn: true\n  directories:\n  - $HOME/.m2\n  - $HOME/.ivy2\n  - $HOME/.gradle/caches/\n  - $HOME/.gradle/wrapper/\n  - $HOME/samples/client/petstore/javascript/node_modules\n  - $HOME/samples/client/petstore/php/OpenAPIToolsClient-php/vendor\n  - $HOME/samples/client/petstore/ruby/vendor/bundle\n  - $HOME/samples/client/petstore/python/.venv/\n  - $HOME/samples/server/petstore/rust-server/target\n  - $HOME/samples/server/petstore/rust-axum/target\n  - $HOME/perl5\n  - $HOME/.cargo\n  - $HOME/.pub-cache\n  - $HOME/samples/server/petstore/cpp-pistache/pistache\n  - $HOME/.rvm/gems/ruby-2.4.1\n  - $HOME/website/node_modules/\n  - $HOME/.cache/deno\n  - $HOME/.phpenv/versions/8.1.4\n\nservices:\n  - docker\n\n# comment out the host table change to use the public petstore server\naddons:\n  apt:\n    sources:\n      - ubuntu-toolchain-r-test\n    packages:\n      - g++-5\n  chrome: stable\n  hosts:\n    - petstore.swagger.io\n\nbefore_install:\n  - sudo rm -rf /var/lib/apt/lists/*\n  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n  - sudo add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge\"\n  - sudo apt-get update\n  #- sudo apt-get install -qqy --no-install-recommends google-chrome-stable\n  #- sudo apt-get -y -o Dpkg::Options::=\"--force-confnew\" install docker-ce\n  - mkdir -vp ~/.docker/cli-plugins/\n  - curl --silent -L \"https://github.com/docker/buildx/releases/download/v0.3.0/buildx-v0.3.0.linux-amd64\" > ~/.docker/cli-plugins/docker-buildx\n  - chmod a+x ~/.docker/cli-plugins/docker-buildx\n  # to run petstore server locally via docker\n  #- echo \"$DOCKER_HUB_PASSWORD\" | docker login --username=$DOCKER_HUB_USERNAME --password-stdin || true\n  #- docker pull swaggerapi/petstore\n  #- docker run -d -e SWAGGER_HOST=http://petstore.swagger.io -e SWAGGER_BASE_PATH=/v2 -p 80:8080 swaggerapi/petstore\n  #- docker ps -a\n  # comment out crystal installation as the tests will run on circleci or github action instead\n  # install crystal\n  #- echo 'deb http://download.opensuse.org/repositories/devel:/languages:/crystal/xUbuntu_16.04/ /' | sudo tee /etc/apt/sources.list.d/devel:languages:crystal.list\n  #- curl -fsSL https://download.opensuse.org/repositories/devel:languages:crystal/xUbuntu_16.04/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/devel_languages_crystal.gpg > /dev/null\n  #- sudo apt update\n  #- sudo apt install crystal\n  #- crystal --version\n  - curl -o- -L https://yarnpkg.com/install.sh | bash -s -- --version 1.22.0\n  - export PATH=\"$HOME/.yarn/bin:$PATH\"\n  # install rust\n  #- curl https://sh.rustup.rs -sSf | sh -s -- -y -v\n  ## required when sudo: required for the Ruby petstore tests\n  #- gem install bundler -v 2.3.26\n  ## set python 3.6.3 as default\n  #- source ~/virtualenv/python3.6/bin/activate\n  # -- skip bash test to shorten build time\n  # Add bats test framework and cURL for Bash script integration tests\n  #- sudo add-apt-repository ppa:duggan/bats --yes\n  #- sudo apt-get update -qq\n  #- sudo apt-get install -qq bats\n  #- sudo apt-get install -qq curl\n  # -- skip bash test end\n  # install dart\n  #- sudo apt-get update\n  #- sudo apt-get install apt-transport-https\n  #- sudo sh -c 'curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -'\n  #- sudo sh -c 'curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list'\n  #- sudo apt-get update\n  #- sudo apt-get install dart\n  # switch to php8\n  #- sudo apt-get install -f libonig-dev libzip-dev\n  #- git clone https://github.com/php-build/php-build $(phpenv root)/plugins/php-build\n  #- git clone https://github.com/ngyuki/phpenv-composer.git $(phpenv root)/plugins/phpenv-composer\n  #- if [ $(ls -A \"$HOME/.phpenv/versions/8.1.4\" | wc -l) -eq 0 ]; then\n  #    phpenv install 8.1.4;\n  #  fi;\n  #- phpenv rehash\n  #- phpenv versions\n  ##- phpenv global 7.2.15\n  #- phpenv global 8.1.4\n  #- php -v\n  # comment out below as installation failed in travis\n  # Add rebar3 build tool and recent Erlang/OTP for Erlang petstore server tests.\n  # - Travis CI does not support rebar3 [yet](https://github.com/travis-ci/travis-ci/issues/6506#issuecomment-275189490).\n  # - Rely on `kerl` for [pre-compiled versions available](https://docs.travis-ci.com/user/languages/erlang#Choosing-OTP-releases-to-test-against). Rely on installation path chosen by [`travis-erlang-builder`](https://github.com/travis-ci/travis-erlang-builder/blob/e6d016b1a91ca7ecac5a5a46395bde917ea13d36/bin/compile#L18).\n  # - . ~/otp/18.2.1/activate && erl -version\n  #- curl -f -L -o ./rebar3 https://s3.amazonaws.com/rebar3/rebar3 && chmod +x ./rebar3 && ./rebar3 version && export PATH=\"${TRAVIS_BUILD_DIR}:$PATH\"\n  # install C++ tools\n  #- sudo apt install -y --no-install-recommends valgrind cmake build-essential\n  #- cmake --version\n  # install Qt5\n  #- sudo apt install -y --no-install-recommends qt5-default\n  # install boost\n  #- sudo apt install -y --no-install-recommends libboost-all-dev\n  # perl dep\n  #- cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)\n  #- cpanm --quiet --no-interactive Test::Exception Test::More Log::Any LWP::UserAgent URI::Query Module::Runtime DateTime Module::Find Moose::Role JSON || echo \"Ignored failure from cpanm\"\n  # show host table to confirm petstore.swagger.io is mapped to localhost\n  - cat /etc/hosts\n  # show java version\n  - java -version\n  - if [ \"$TRAVIS_BRANCH\" = \"master\" ] && [ \"$TRAVIS_PULL_REQUEST\" == \"false\" ]; then\n      openssl aes-256-cbc -K $encrypted_6e2c8bba47c6_key -iv $encrypted_6e2c8bba47c6_iv -in sec.gpg.enc -out sec.gpg -d ;\n      gpg --keyserver keyserver.ubuntu.com --recv-key $SIGNING_KEY ;\n      gpg --check-trustdb ;\n    fi;\n  - pushd .; cd website; yarn install; popd\n\nscript:\n  # fail fast\n  - set -e\n  # show docker buildx version\n  - docker buildx version\n  # run integration tests defined in maven pom.xml\n  # WARN: Travis will timeout after 10 minutes of no stdout/stderr activity, which is problematic with mvn --quiet.\n  # show \"error\" only to reduce the log size\n  - ./mvnw -e --no-snapshot-updates --quiet --batch-mode --show-version clean install -DskipTests -Dmaven.javadoc.skip=true -Dorg.slf4j.simpleLogger.defaultLogLevel=error\nafter_success:\n  # push to maven repo\n  - if [ $SONATYPE_USERNAME ] && [ \"$TRAVIS_PULL_REQUEST\" == \"false\" ]; then\n      if [ \"$TRAVIS_BRANCH\" = \"master\" ] && [ -z $TRAVIS_TAG ]; then\n        echo \"Publishing from branch $TRAVIS_BRANCH\";\n        ./mvnw clean deploy --quiet -DskipTests=true -B -U -P release --settings CI/settings.xml -Dorg.slf4j.simpleLogger.defaultLogLevel=error;\n        echo \"Finished mvn clean deploy for $TRAVIS_BRANCH\";\n        pushd .;\n        cd modules/openapi-generator-gradle-plugin;\n        ./gradlew -Psigning.keyId=\"$SIGNING_KEY\" -Psigning.password=\"$SIGNING_PASSPHRASE\" -Psigning.secretKeyRingFile=\"${TRAVIS_BUILD_DIR}/sec.gpg\" -PossrhUsername=\"${SONATYPE_USERNAME}\" -PossrhPassword=\"${SONATYPE_PASSWORD}\" publishPluginMavenPublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository;\n        echo \"Finished ./gradlew publishPluginMavenPublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository\";\n        popd;\n      elif [ -z $TRAVIS_TAG ] && [[ \"$TRAVIS_BRANCH\" =~ ^[0-9]+\\.[0-9]+\\.x$ ]]; then\n        echo \"Publishing from branch $TRAVIS_BRANCH\";\n        ./mvnw clean deploy --quiet --settings CI/settings.xml -Dorg.slf4j.simpleLogger.defaultLogLevel=error;\n        echo \"Finished mvn clean deploy for $TRAVIS_BRANCH\";\n        pushd .;\n        cd modules/openapi-generator-gradle-plugin;\n        ./gradlew -PossrhUsername=\"${SONATYPE_USERNAME}\" -PossrhPassword=\"${SONATYPE_PASSWORD}\" publishPluginMavenPublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository;\n        echo \"Finished ./gradlew publishPluginMavenPublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository\";\n        popd;\n      fi;\n      if [ -n $TRAVIS_TAG ] && [[ \"$TRAVIS_TAG\" =~ ^[v][0-9]+\\.[0-9]+\\.[0-9]+$ ]]; then\n        echo \"Publishing the gradle plugin to Gradle Portal on tag $TRAVIS_TAG (only)\";\n        pushd .;\n        cd modules/openapi-generator-gradle-plugin;\n        ./gradlew -Psigning.keyId=\"$SIGNING_KEY\" -Psigning.password=\"$SIGNING_PASSPHRASE\" -Psigning.secretKeyRingFile=\"${TRAVIS_BUILD_DIR}/sec.gpg\" publishPlugins -Dgradle.publish.key=$GRADLE_PUBLISH_KEY -Dgradle.publish.secret=$GRADLE_PUBLISH_SECRET;\n        echo \"Finished ./gradlew publishPlugins (plugin portal)\";\n        popd;\n      fi;\n    fi;\n  ## docker: build and push openapi-generator-online to DockerHub\n  - if [ $DOCKER_HUB_USERNAME ]; then\n      echo \"$DOCKER_HUB_PASSWORD\" | docker login --username=$DOCKER_HUB_USERNAME --password-stdin;\n      export cli_version=$(\\mvn -o org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | grep -v '\\[');\n      export build_date=$(date -u +\"%Y-%m-%dT%H:%M:%SZ\");\n      docker buildx create --use;\n      if [ ! -z \"$TRAVIS_TAG\" ]; then\n          docker buildx build --push --platform linux/amd64,linux/arm64 --label=org.opencontainers.image.created=$build_date --label=org.opencontainers.image.title=openapi-generator-online --label=org.opencontainers.image.revision=$TRAVIS_COMMIT --label=org.opencontainers.image.version=$cli_version -t $DOCKER_GENERATOR_IMAGE_NAME:latest -t $DOCKER_GENERATOR_IMAGE_NAME:$TRAVIS_TAG -t $DOCKER_GENERATOR_IMAGE_NAME -t $DOCKER_GENERATOR_IMAGE_NAME:latest-release ./modules/openapi-generator-online;\n          echo \"Built and tagged $DOCKER_GENERATOR_IMAGE_NAME\";\n      fi;\n      if [ -z \"$TRAVIS_TAG\" ] && [ \"$TRAVIS_BRANCH\" = \"master\" ] && [ \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then\n          docker buildx build --push --platform linux/amd64,linux/arm64 --label=org.opencontainers.image.created=$build_date --label=org.opencontainers.image.title=openapi-generator-online --label=org.opencontainers.image.revision=$TRAVIS_COMMIT --label=org.opencontainers.image.version=$cli_version -t $DOCKER_GENERATOR_IMAGE_NAME ./modules/openapi-generator-online;\n          echo \"Pushed to $DOCKER_GENERATOR_IMAGE_NAME for master\";\n      fi;\n    fi;\n  ## docker: build cli image and push to Docker Hub\n  - if [ $DOCKER_HUB_USERNAME ]; then\n      echo \"$DOCKER_HUB_PASSWORD\" | docker login --username=$DOCKER_HUB_USERNAME --password-stdin;\n      cp docker-entrypoint.sh ./modules/openapi-generator-cli;\n      export cli_version=$(\\mvn -o org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version | grep -v '\\[');\n      export build_date=$(date -u +\"%Y-%m-%dT%H:%M:%SZ\");\n      docker buildx create --use;\n      docker buildx build --platform linux/amd64,linux/arm64 --label=org.opencontainers.image.created=$build_date --label=org.opencontainers.image.title=openapi-generator-cli --label=org.opencontainers.image.revision=$TRAVIS_COMMIT --label=org.opencontainers.image.version=$cli_version -t $DOCKER_CODEGEN_CLI_IMAGE_NAME ./modules/openapi-generator-cli;\n      if [ ! -z \"$TRAVIS_TAG\" ]; then\n          docker buildx build --push --platform linux/amd64,linux/arm64 --label=org.opencontainers.image.created=$build_date --label=org.opencontainers.image.title=openapi-generator-cli --label=org.opencontainers.image.revision=$TRAVIS_COMMIT --label=org.opencontainers.image.version=$cli_version -t $DOCKER_CODEGEN_CLI_IMAGE_NAME:latest -t $DOCKER_CODEGEN_CLI_IMAGE_NAME:$TRAVIS_TAG -t $DOCKER_CODEGEN_CLI_IMAGE_NAME -t $DOCKER_CODEGEN_CLI_IMAGE_NAME:latest-release ./modules/openapi-generator-cli;\n          echo \"Built and tagged $DOCKER_GENERATOR_IMAGE_NAME\";\n      fi;\n      if [ -z \"$TRAVIS_TAG\" ] && [ \"$TRAVIS_BRANCH\" = \"master\" ] && [ \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then\n          docker buildx build --push --platform linux/amd64,linux/arm64 --label=org.opencontainers.image.created=$build_date --label=org.opencontainers.image.title=openapi-generator-cli --label=org.opencontainers.image.revision=$TRAVIS_COMMIT --label=org.opencontainers.image.version=$cli_version -t $DOCKER_CODEGEN_CLI_IMAGE_NAME ./modules/openapi-generator-cli;\n          echo \"Pushed to $DOCKER_CODEGEN_CLI_IMAGE_NAME\";\n      fi;\n    fi;\n  ## NOTE; we will do the followign manually instead as the page doesn't need to be updated in every single travis build\n  ## publish latest website, variables below are secure environment variables which are unavailable to PRs from forks.\n  #  - if [ \"$TRAVIS_BRANCH\" = \"master\" ] && [ -z $TRAVIS_TAG ] && [ \"$TRAVIS_PULL_REQUEST\" == \"false\" ]; then\n  #      sed -i \"s/Vector{UInt8}/Vector\\&#123;UInt8\\&#125;/g\" docs/generators/julia-client.md;\n  #      sed -i \"s/Vector{UInt8}/Vector\\&#123;UInt8\\&#125;/g\" docs/generators/julia-server.md;\n  #      cd website;\n  #      git config --global user.name \"${GH_NAME}\";\n  #      git config --global user.email \"${GH_EMAIL}\";\n  #      echo \"machine github.com login ${GH_NAME} password ${GH_TOKEN}\" > ~/.netrc;\n  #      yarn install;\n  #      GIT_USER=\"${GH_NAME}\" yarn run publish-gh-pages;\n  #    fi;\n  #\nenv:\n  - DOCKER_GENERATOR_IMAGE_NAME=openapitools/openapi-generator-online DOCKER_CODEGEN_CLI_IMAGE_NAME=openapitools/openapi-generator-cli NODE_ENV=test CC=gcc-5 CXX=g++-5\n\n"
        },
        {
          "name": "CI",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.142578125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at team@openapitools.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 10.2763671875,
          "content": "# Guidelines For Contributing\n\n## Before submitting an issue\n\n - If you're not using the latest master to generate API clients or server stubs, please give it another try by pulling the latest master as the issue may have already been addressed. Ref: [Getting Started](https://github.com/openapitools/openapi-generator#getting-started)\n - Search the [open issue](https://github.com/openapitools/openapi-generator/issues) and [closed issue](https://github.com/openapitools/openapi-generator/issues?q=is%3Aissue+is%3Aclosed) to ensure no one else has reported something similar before.\n - File an [issue ticket](https://github.com/openapitools/openapi-generator/issues/new) by providing all the required information. Failure to provide enough detail may result in slow response from the community.\n - Test with the latest master by building the JAR locally to see if the issue has already been addressed.\n - You can also make a suggestion or ask a question by opening an \"issue\".\n\n## Before submitting a PR\n\n - Search the [open issue](https://github.com/openapitools/openapi-generator/issues) to ensure no one else has reported something similar and no one is actively working on similar proposed change.\n - If no one has suggested something similar, open an [\"issue\"](https://github.com/openapitools/openapi-generator/issues) with your suggestion to gather feedback from the community.\n - If you're adding a new option to a generator, please consider using the `-t` option with customized templates instead or start a discussion first by opening an issue as we want to avoid adding too many options to the generator.\n - It's recommended to **create a new git branch** for the change so that the merge commit message looks nicer in the commit history.\n\n## How to contribute\n\n### git\n\nIf you're new to git, you may find the following FAQs useful:\n\nhttps://github.com/openapitools/openapi-generator/wiki/FAQ#git\n\n### Branches\n\nPlease file the pull request against the correct branch, e.g. `master` for non-breaking changes. See the [Git Branches](https://github.com/OpenAPITools/openapi-generator/wiki/Git-Branches) page for more information.\n\n### Code generators\n\nAll the code generators can be found in [modules/openapi-generator/src/main/java/org/openapitools/codegen/languages](https://github.com/openapitools/openapi-generator/tree/master/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages)\n\nIf you want to add a new generator, follow the [new-generator](https://openapi-generator.tech/docs/new-generator) guide.\n\n### Templates\n\nAll the templates ([mustache](https://mustache.github.io/)) can be found in [modules/openapi-generator/src/main/resources](https://github.com/openapitools/openapi-generator/tree/master/modules/openapi-generator/src/main/resources).\n\nFor a list of variables available in the template, please refer to this [page](https://github.com/openapitools/openapi-generator/wiki/Mustache-Template-Variables)\n\n\n### Style guide\nCode change should conform to the programming style guide of the respective languages:\n- Ada: https://en.wikibooks.org/wiki/Ada_Style_Guide/Source_Code_Presentation\n- Android: https://source.android.com/source/code-style.html\n- Bash: https://github.com/bahamas10/bash-style-guide\n- C#: https://msdn.microsoft.com/en-us/library/vstudio/ff926074.aspx\n- C++: https://google.github.io/styleguide/cppguide.html\n- C++ (Tizen): https://wiki.tizen.org/Native_Platform_Coding_Idiom_and_Style_Guide#C.2B.2B_Coding_Style\n- C++ (Unreal Engine 4): https://docs.unrealengine.com/en-US/ProductionPipelines/DevelopmentSetup/CodingStandard/index.html\n- Clojure: https://github.com/bbatsov/clojure-style-guide\n- Crystal: https://crystal-lang.org/reference/conventions/coding_style.html\n- Dart: https://www.dartlang.org/guides/language/effective-dart/style\n- Eiffel: https://www.eiffel.org/doc/eiffel/Coding%20Standards\n- Elixir: https://github.com/christopheradams/elixir_style_guide\n- Erlang: https://github.com/inaka/erlang_guidelines\n- Go: https://github.com/golang/go/wiki/CodeReviewComments\n- Groovy: http://groovy-lang.org/style-guide.html\n- Haskell: https://github.com/tibbe/haskell-style-guide/blob/master/haskell-style.md\n- Java: https://google.github.io/styleguide/javaguide.html\n- JavaScript: https://github.com/airbnb/javascript/\n- Julia: https://docs.julialang.org/en/v1/manual/style-guide/\n- Kotlin: https://kotlinlang.org/docs/reference/coding-conventions.html\n- ObjC: https://github.com/NYTimes/objective-c-style-guide\n- Perl: http://perldoc.perl.org/perlstyle.html\n- PHP: https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-12-extended-coding-style-guide.md\n- PowerShell: https://msdn.microsoft.com/en-us/library/dd878270(v=vs.85).aspx\n- Python: https://www.python.org/dev/peps/pep-0008/\n- R: https://google.github.io/styleguide/Rguide.xml\n- Ruby: https://github.com/bbatsov/ruby-style-guide\n- Rust: https://github.com/rust-lang-nursery/fmt-rfcs/blob/master/guide/guide.md (the default [rustfmt](https://github.com/rust-lang-nursery/rustfmt) configuration)\n- Scala: http://docs.scala-lang.org/style/\n- Swift: [Apple Developer](https://developer.apple.com/library/prerelease/ios/documentation/Swift/Conceptual/Swift_Programming_Language/TheBasics.html)\n- TypeScript: https://github.com/Microsoft/TypeScript/wiki/Coding-guidelines\n- Xojo: https://documentation.xojo.com/topics/code_management/coding_guidelines.html\n\nFor other languages, feel free to suggest.\n\nYou may find the current code base not 100% conform to the coding style and we welcome contributions to fix those.\n\nFor [Vendor Extensions](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#vendorExtensions), please follow the naming convention below:\n- For general vendor extension, use lower case and hyphen. e.g. `x-is-unique`, `x-content-type`\n- For language-specified vendor extension, put it in the form of `x-{lang}-{extension-name}`. e.g. `x-objc-operation-id`, `x-java-feign-retry-limit`\n- For a list of existing vendor extensions in use, please refer to https://github.com/openapitools/openapi-generator/wiki/Vendor-Extensions. If you've added new vendor extensions as part of your PR, please update the wiki page.\n\n### Building\n\nThe `openapi-generator-cli` can be built using the following command. This will generate the `openapi-generator-cli.jar` in the `modules/openapi-generator-cli/target` directory without running the tests and generating the Javadocs.\n\n```shell\n./mvnw clean install -DskipTests -Dmaven.javadoc.skip=true\n```\n\nOr on Windows:\n\n```shell\nmvnw.cmd clean install -DskipTests -Dmaven.javadoc.skip=true\n```\n\nThe binary can run via `java -jar`. For example:\n\n```shell\njava -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar help\n```\n\n### Testing\n\nTo add test cases (optional) covering the change in the code generator, please refer to [modules/openapi-generator/src/test/java/org/openapitools/codegen](https://github.com/openapitools/openapi-generator/tree/master/modules/openapi-generator/src/test/java/org/openapitools/codegen)\n\nTo test the templates, please perform the following:\n\n- Update the Petstore sample by running the shell scripts under the `bin` folder. For example, run `./bin/generate-samples.sh ./bin/configs/python*` to update the Python-related samples under [`samples`](https://github.com/openapitools/openapi-generator/tree/master/samples). For Windows, please install [GIT bash](https://gitforwindows.org/). (If you find that there are new files generated or unexpected changes as a result of the update, that's not unusual as the test cases are added to the OpenAPI spec from time to time. If you've questions or concerns, please open a ticket to start a discussion)\n- During development, it can be helpful to quickly regenerate the samples without recompiling all of openapi-generator, e.g. when you have only updated the mustache templates. This can be done by passing the `-t` parameter: `-t modules/openapi-generator/src/main/resources/python`.\n- Run the tests in the sample folder using maven `mvn integration-test -f /path/to/pom.xml`, e.g. `mvn integration-test -f samples/client/petstore/python/pom.xml`. (some languages may not contain unit testing for Petstore and we're looking for contribution from the community to implement those tests). __Please notice:__ you must run a local instance of the Petstore server in order to perform the tests, as running them against petstore.swagger.io is not supported anymore. Please refer to item 3 of [Integration Tests - How to add integration tests for new Petstore samples](https://github.com/OpenAPITools/openapi-generator/wiki/Integration-Tests#how-to-add-integration-tests-for-new-petstore-samples) to learn how to quickly configure and run it.\n- Finally, git commit the updated samples files: `git commit -a` (`git add -A` if added files with new test cases)\n- For new test cases, please add to the [Fake Petstore spec](https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/test/resources/3_0/petstore-with-fake-endpoints-models-for-testing.yaml)\n\nTo start the CI tests, you can:\n- Run `mvn verify -Psamples`, assuming you have all the required tools installed to run tests for different languages.\n- Leverage http://travis-ci.org to run the CI tests by adding your own openapi-generator repository.\n- Run some of the CI tests in your local workspace.\n\nSee [OpenAPI Tools wiki](https://github.com/OpenAPITools/openapi-generator/wiki/Integration-Tests) for more information about the integration tests.\n\n### Tips\n- Smaller changes are easier to review\n- [Optional] For bug fixes, provide a OpenAPI Spec to repeat the issue so that the reviewer can use it to confirm the fix\n- Add test case(s) to cover the change\n- Document the fix in the code to make the code more readable\n- Make sure test cases passed after the change (one way is to leverage https://travis-ci.org/ to run the CI tests)\n- File a PR with meaningful title, description and commit messages\n- Make sure the option \"Allow edits from maintainers\" in the PR is selected so that the maintainers can update your PRs with minor fixes, if needed.\n- Recommended git settings\n   - `git config core.autocrlf input` to tell Git convert CRLF to LF on commit but not the other way around\n- To close an issue (e.g. issue 1542) automatically after a PR is merged, use keywords \"fix\", \"close\", \"resolve\" in the PR description, e.g. `fix #1542`. (Ref: [closing issues using keywords](https://help.github.com/articles/closing-issues-using-keywords/))\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.97265625,
          "content": "FROM maven:3-eclipse-temurin-17\n\nENV GEN_DIR /opt/openapi-generator\nWORKDIR ${GEN_DIR}\nVOLUME  ${MAVEN_HOME}/.m2/repository\n\n# Required from a licensing standpoint\nCOPY ./LICENSE ${GEN_DIR}\n\n# Required to compile openapi-generator\nCOPY ./google_checkstyle.xml ${GEN_DIR}\n\n# All poms are copied, then we go offline, to allow for better caching of code changes without fetching all dependencies each time\nCOPY ./modules/openapi-generator-gradle-plugin/pom.xml ${GEN_DIR}/modules/openapi-generator-gradle-plugin/\nCOPY ./modules/openapi-generator-maven-plugin/pom.xml ${GEN_DIR}/modules/openapi-generator-maven-plugin/\nCOPY ./modules/openapi-generator-online/pom.xml ${GEN_DIR}/modules/openapi-generator-online/\nCOPY ./modules/openapi-generator-cli/pom.xml ${GEN_DIR}/modules/openapi-generator-cli/\nCOPY ./modules/openapi-generator-core/pom.xml ${GEN_DIR}/modules/openapi-generator-core/\nCOPY ./modules/openapi-generator/pom.xml ${GEN_DIR}/modules/openapi-generator/\nCOPY ./pom.xml ${GEN_DIR}\nRUN mvn dependency:go-offline\n\n# Modules are copied individually here to allow for caching of docker layers between major.minor versions\nCOPY ./modules/openapi-generator-gradle-plugin ${GEN_DIR}/modules/openapi-generator-gradle-plugin\nCOPY ./modules/openapi-generator-maven-plugin ${GEN_DIR}/modules/openapi-generator-maven-plugin\nCOPY ./modules/openapi-generator-online ${GEN_DIR}/modules/openapi-generator-online\nCOPY ./modules/openapi-generator-cli ${GEN_DIR}/modules/openapi-generator-cli\nCOPY ./modules/openapi-generator-core ${GEN_DIR}/modules/openapi-generator-core\nCOPY ./modules/openapi-generator ${GEN_DIR}/modules/openapi-generator\n\n# Pre-compile openapi-generator-cli\nRUN mvn -B -am -pl \"modules/openapi-generator-cli\" package\n\n# This exists at the end of the file to benefit from cached layers when modifying docker-entrypoint.sh.\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s /usr/local/bin/docker-entrypoint.sh /usr/local/bin/openapi-generator\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\n\nCMD [\"help\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1630859375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)\n   Copyright 2018 SmartBear Software\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 118.5751953125,
          "content": "<h1 align=\"center\">OpenAPI Generator</h1>\n\n\n<div align=\"center\">\n\n[![Stable releases in Maven Central](https://img.shields.io/maven-metadata/v/https/repo1.maven.org/maven2/org/openapitools/openapi-generator/maven-metadata.xml.svg)](http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22org.openapitools%22%20AND%20a%3A%22openapi-generator%22)\n[![Apache 2.0 License](https://img.shields.io/badge/License-Apache%202.0-orange)](./LICENSE)\n[![Open Collective backers](https://img.shields.io/opencollective/backers/openapi_generator?color=orange&label=OpenCollective%20Backers)](https://opencollective.com/openapi_generator)\n[![Join the Slack chat room](https://img.shields.io/badge/Slack-Join%20the%20chat%20room-orange)](https://join.slack.com/t/openapi-generator/shared_invite/zt-2wmkn4s8g-n19PJ99Y6Vei74WMUIehQA)\n[![Follow OpenAPI Generator Twitter account to get the latest update](https://img.shields.io/twitter/follow/oas_generator.svg?style=social&label=Follow)](https://twitter.com/oas_generator)\n[![Contribute with Gitpod](https://img.shields.io/badge/Contribute%20with-Gitpod-908a85?logo=gitpod)](https://gitpod.io/#https://github.com/OpenAPITools/openapi-generator)\n[![Conan Center](https://shields.io/conan/v/openapi-generator)](https://conan.io/center/recipes/openapi-generator)\n[![Revved up by Develocity](https://img.shields.io/badge/Revved%20up%20by-Develocity-06A0CE?logo=Gradle&labelColor=02303A)](https://ge.openapi-generator.tech/scans)\n</div>\n\n<div align=\"center\">\n\n[Master](https://github.com/OpenAPITools/openapi-generator/tree/master) (`7.11.0`):\n[![Build Status](https://api.travis-ci.com/OpenAPITools/openapi-generator.svg?branch=master&status=passed)](https://app.travis-ci.com/github/OpenAPITools/openapi-generator/builds)\n[![Integration Test2](https://circleci.com/gh/OpenAPITools/openapi-generator.svg?style=shield)](https://circleci.com/gh/OpenAPITools/openapi-generator)\n[![Windows Test](https://ci.appveyor.com/api/projects/status/github/openapitools/openapi-generator?branch=master&svg=true&passingText=Windows%20Test%20-%20OK&failingText=Windows%20Test%20-%20Fails)](https://ci.appveyor.com/project/WilliamCheng/openapi-generator)\n[![Bitrise](https://img.shields.io/bitrise/4a2b10a819d12b67/master?label=bitrise%3A%20Swift+4,5&token=859FMDR8QHwabCzwvZK6vQ)](https://app.bitrise.io/app/4a2b10a819d12b67)\n\n</div>\n\n<div align=\"center\">\n\n:star::star::star: If you would like to contribute, please refer to [guidelines](CONTRIBUTING.md) and a list of [open tasks](https://github.com/openapitools/openapi-generator/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22). :star::star::star:\n\n:bangbang: To migrate from Swagger Codegen to OpenAPI Generator, please refer to the [migration guide](docs/migration-from-swagger-codegen.md) :bangbang:\n\n:notebook_with_decorative_cover: For more information, please refer to the [Wiki page](https://github.com/openapitools/openapi-generator/wiki) and [FAQ](https://github.com/openapitools/openapi-generator/wiki/FAQ) :notebook_with_decorative_cover:\n\n:notebook_with_decorative_cover: The eBook [A Beginner's Guide to Code Generation for REST APIs](https://gum.co/openapi_generator_ebook) is a good starting point for beginners :notebook_with_decorative_cover:\n\n:warning: If the OpenAPI spec, templates or any input (e.g. options, environment variables) is obtained from an untrusted source or environment, please make sure you've reviewed these inputs before using OpenAPI Generator to generate the API client, server stub or documentation to avoid potential security issues (e.g. [code injection](https://en.wikipedia.org/wiki/Code_injection)). For security vulnerabilities, please contact [team@openapitools.org](mailto:team@openapitools.org). :warning:\n\n:bangbang: Both \"OpenAPI Tools\" (https://OpenAPITools.org - the parent organization of OpenAPI Generator) and \"OpenAPI Generator\" are not affiliated with OpenAPI Initiative (OAI) :bangbang:\n\n</div>\n\n## Sponsors\n\nIf you find OpenAPI Generator useful for work, please consider asking your company to support this Open Source project by [becoming a sponsor](https://opencollective.com/openapi_generator). You can also individually sponsor the project by [becoming a backer](https://opencollective.com/openapi_generator).\n\n#### Thank you to our bronze sponsors!\n\n[![NamSor](https://openapi-generator.tech/img/companies/namsor.png)](https://www.namsor.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[![LightBow](https://openapi-generator.tech/img/companies/lightbow.png)](https://www.lightbow.net/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/docspring.png\" width=\"128\" height=\"128\">](https://docspring.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/datadog.png\" width=\"128\" height=\"128\">](https://datadoghq.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/thales.jpg\" width=\"128\" height=\"128\">](https://cpl.thalesgroup.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/apideck.jpg\" width=\"128\" height=\"128\">](https://www.apideck.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/pexa.png\" width=\"128\" height=\"128\">](https://www.pexa.com.au/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/numary.png\" width=\"128\" height=\"128\">](https://www.numary.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/onesignal.png\" width=\"128\" height=\"128\">](https://www.onesignal.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/virtualansoftware.png\" width=\"128\" height=\"128\">](https://www.virtualansoftware.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/mergedev.jpeg\" width=\"128\" height=\"128\">](https://www.merge.dev/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/burkert.jpg\" width=\"128\" height=\"128\">](https://www.burkert.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/finbourne.png\" width=\"128\" height=\"128\">](https://www.finbourne.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/bumpsh.png\" width=\"128\" height=\"128\">](https://bump.sh/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/bileto.png\" width=\"128\" height=\"128\">](https://www.bileto.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/bairesdev.png\" width=\"128\" height=\"128\">](https://www.bairesdev.com/sponsoring-open-source-projects/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/dmtech.jpeg\" width=\"128\" height=\"128\">](https://www.dmtech.de/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/adyen.png\" width=\"128\" height=\"128\">](https://adyen.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/fornex.png\" width=\"128\" height=\"128\">](https://fornex.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/alloyautomation.png\" width=\"128\" height=\"128\">](https://runalloy.com/signup?utm_source=github&utm_medium=referral&utm_campaign=1524_openapigenerator)\n[<img src=\"https://openapi-generator.tech/img/companies/ssstwitter.png\" width=\"128\" height=\"128\">](https://ssstwitter.com/?utm_source=github&utm_medium=referral&utm_campaign=sponsor)\n[<img src=\"https://openapi-generator.tech/img/companies/svix.png\" width=\"128\" height=\"128\">](https://www.svix.com/?utm_source=openapi-generator&utm_medium=sponsorship&utm_campaign=oss-sponsorship)\n[<img src=\"https://openapi-generator.tech/img/companies/litslink.png\" width=\"128\" height=\"128\">](https://litslink.com/services/artificial-intelligence?utm_source=openapi-generator&utm_medium=sponsorship&utm_campaign=oss-sponsorship)\n[<img src=\"https://openapi-generator.tech/img/companies/designli.jpg\" width=\"128\" height=\"128\">](https://designli.co?utm_source=openapi-generator&utm_medium=sponsorship&utm_campaign=oss-sponsorship)\n[<img src=\"https://openapi-generator.tech/img/companies/itm.png\" width=\"128\" height=\"128\">](https://opensource.muenchen.de?utm_source=openapi-generator&utm_medium=sponsorship&utm_campaign=oss-sponsorship)\n[<img src=\"https://openapi-generator.tech/img/companies/kong.png\" width=\"128\" height=\"128\">](https://konghq.com/products/kong-konnect?utm_medium=referral&utm_source=github&utm_campaign=platform&utm_content=openapi-generator)\n[<img src=\"https://openapi-generator.tech/img/companies/route4me.png\" width=\"128\" height=\"128\">](https://route4me.com/?utm_source=openapi-generator&utm_medium=sponsorship&utm_campaign=oss-sponsorship)\n[<img src=\"https://openapi-generator.tech/img/companies/dm.png\" width=\"128\" height=\"128\">](https://www.dotcom-monitor.com/sponsoring-open-source-projects/?utm_source=openapi-generator&utm_medium=sponsorship&utm_campaign=oss-sponsorship)\n\n#### Thank you GoDaddy for sponsoring the domain names, Linode for sponsoring the VPS, Checkly for sponsoring the API monitoring and Gradle for sponsoring Develocity\n\n[<img src=\"https://openapi-generator.tech/img/companies/godaddy.png\" width=\"150\">](https://www.godaddy.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[![Linode](https://www.linode.com/media/images/logos/standard/light/linode-logo_standard_light_small.png)](https://www.linode.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRAhEYadUyZYzGUotZiSdXkVMqqLGuohyixLl4eUpUV6pAbUULL\" width=\"150\">](https://checklyhq.com/?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n[<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/Gradle_logo.png/320px-Gradle_logo.png\" width=\"150\">](https://gradle.org?utm_source=openapi_generator&utm_medium=github_webpage&utm_campaign=sponsor)\n\n## Overview\n\nOpenAPI Generator allows generation of API client libraries (SDK generation), server stubs,  documentation and configuration automatically given an [OpenAPI Spec](https://github.com/OAI/OpenAPI-Specification) (both 2.0 and 3.0 are supported). Currently, the following languages/frameworks are supported:\n\n|                                  | Languages/Frameworks|\n| -------------------------------- ||\n| **API clients**                  | **ActionScript**, **Ada**, **Apex**, **Bash**, **C**, **C#** (.net 2.0, 3.5 or later, .NET Standard 1.3 - 2.1, .NET Core 3.1, .NET 5.0. Libraries: RestSharp, GenericHost, HttpClient), **C++** (Arduino, cpp-restsdk, Qt5, Tizen, Unreal Engine 4), **Clojure**, **Crystal**, **Dart**, **Elixir**, **Elm**, **Eiffel**, **Erlang**, **Go**, **Groovy**, **Haskell** (http-client, Servant), **Java** (Apache HttpClient 4.x, Apache HttpClient 5.x, Jersey2.x, OkHttp, Retrofit1.x, Retrofit2.x, Feign, RestTemplate, RESTEasy, Vertx, Google API Client Library for Java, Rest-assured, Spring 5 Web Client, Spring 6 RestClient, MicroProfile Rest Client, Helidon), **Jetbrains HTTP Client**, **Julia**, **k6**, **Kotlin**, **Lua**, **N4JS**, **Nim**, **Node.js/JavaScript** (ES5, ES6, AngularJS with Google Closure Compiler annotations, Flow types, Apollo GraphQL DataStore), **Objective-C**, **OCaml**, **Perl**, **PHP**, **PowerShell**, **Python**, **R**, **Ruby**, **Rust** (hyper, reqwest, rust-server), **Scala** (akka, http4s, scalaz, sttp, swagger-async-httpclient, pekko), **Swift** (2.x, 3.x, 4.x, 5.x, 6.x), **Typescript** (AngularJS, Angular (9.x - 19.x), Aurelia, Axios, Fetch, Inversify, jQuery, Nestjs, Node, redux-query, Rxjs), **XoJo**, **Zapier** |\n| **Server stubs**                 | **Ada**, **C#** (ASP.NET Core, Azure Functions), **C++** (Pistache, Restbed, Qt5 QHTTPEngine), **Erlang**, **F#** (Giraffe), **Go** (net/http, Gin, Echo), **Haskell** (Servant, Yesod), **Java** (MSF4J, Spring, Undertow, JAX-RS: CDI, CXF, Inflector, Jersey, RestEasy, Play Framework, [PKMST](https://github.com/ProKarma-Inc/pkmst-getting-started-examples), [Vert.x](https://vertx.io/), [Apache Camel](https://camel.apache.org/), [Helidon](https://helidon.io/)), **Julia**, **Kotlin** (Spring Boot, [Ktor](https://github.com/ktorio/ktor), [Vert.x](https://vertx.io/)), **PHP** ([Flight](https://docs.flightphp.com/), Laravel, Lumen, [Mezzio (fka Zend Expressive)](https://github.com/mezzio/mezzio), Slim, Silex, [Symfony](https://symfony.com/)), **Python** (FastAPI, Flask), **NodeJS**, **Ruby** (Sinatra, Rails5), **Rust** ([rust-server](https://openapi-generator.tech/docs/generators/rust-server/)), **Scala** (Akka, [Finch](https://github.com/finagle/finch), [Lagom](https://github.com/lagom/lagom), [Play](https://www.playframework.com/), [Cask](https://github.com/com-lihaoyi/cask), Scalatra)                                                                                                                                                    |\n| **API documentation generators** | **HTML**, **Confluence Wiki**, **Asciidoc**, **Markdown**, **Plant|\n| **Configuration files**          | [**Apache2**](https://httpd.apache.org|\n| **Others**                       | **GraphQL**, **JMeter**, **Ktorm**, **MySQL Schema**, **Postman Collection**, **Protocol Buffer|\n\n## Table of contents\n\n  - [OpenAPI Generator](#openapi-generator)\n  - [Overview](#overview)\n  - [Table of Contents](#table-of-contents)\n  - [1 - Installation](#1---installation)\n    - [1.1 - Compatibility](#11---compatibility)\n    - [1.2 - Artifacts on Maven Central](#12---artifacts-on-maven-central)\n    - [1.3 - Download JAR](#13---download-jar)\n    - [1.4 - Build Projects](#14---build-projects)\n    - [1.5 - Homebrew](#15---homebrew)\n    - [1.6 - Docker](#16---docker)\n    - [1.7 - NPM](#17---npm)\n    - [1.8 - pip](#18---pip)\n  - [2 - Getting Started](#2---getting-started)\n  - [3 - Usage](#3---usage)\n    - [3.1 - Customization](#31---customization)\n    - [3.2 - Workflow Integration](#32---workflow-integration-maven-gradle-github-cicd)\n    - [3.3 - Online Generators](#33---online-openapi-generator)\n    - [3.4 - License Information on Generated Code](#34---license-information-on-generated-code)\n    - [3.5 - IDE Integration](#35---ide-integration)\n  - [4 - Companies/Projects using OpenAPI Generator](#4---companiesprojects-using-openapi-generator)\n  - [5 - Presentations/Videos/Tutorials/Books](#5---presentationsvideostutorialsbooks)\n  - [6 - About Us](#6---about-us)\n    - [6.1 - OpenAPI Generator Core Team](#61---openapi-generator-core-team)\n    - [6.2 - OpenAPI Generator Technical Committee](#62---openapi-generator-technical-committee)\n    - [6.3 - History of OpenAPI Generator](#63---history-of-openapi-generator)\n  - [7 - License](#7---license)\n\n## [1 - Installation](#table-of-contents)\n\n### [1.1 - Compatibility](#table-of-contents)\n\nThe OpenAPI Specification has undergone 3 revisions since initial creation in 2010.  The openapi-generator project has the following compatibilities with the OpenAPI Specification:\n\n| OpenAPI Generator Version                                                                                                                                 | Release Date | Notes                                             |\n| --------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------ | ------------------------------------------------- |\n| 7.11.0 (upcoming minor release) [SNAPSHOT](https://oss.sonatype.org/content/repositories/snapshots/org/openapitools/openapi-generator-cli/7.11.0-SNAPSHOT/) | 20.12.2024   | Minor release with breaking changes (with fallback) |\n| [7.10.0](https://github.com/OpenAPITools/openapi-generator/releases/tag/v7.10.0) (latest stable release)                                                    | 18.11.2024   | Minor release with breaking changes (with fallback) |\n| [6.6.0](https://github.com/OpenAPITools/openapi-generator/releases/tag/v6.6.0)                                                    | 11.05.2023   | Minor release with breaking changes (with fallback) |\n| [5.4.0](https://github.com/OpenAPITools/openapi-generator/releases/tag/v5.4.0)                                                    | 31.01.2022   | Minor release with breaking changes (with fallback) |\n| [4.3.1](https://github.com/OpenAPITools/openapi-generator/releases/tag/v4.3.1)                                                    | 06.05.2020   | Patch release (enhancements, bug fixes, etc)                       |\n\nOpenAPI Spec compatibility: 1.0, 1.1, 1.2, 2.0, 3.0, 3.1 (beta support)\n\n(We do not publish daily/nightly build. Please use SNAPSHOT instead)\n\nFor old releases, please refer to the [**Release**](https://github.com/OpenAPITools/openapi-generator/releases) page.\n\nFor decommissioned generators/libraries/frameworks, please refer to [the \"Decommission\" label](https://github.com/OpenAPITools/openapi-generator/issues?q=label%3ADecommission+is%3Amerged+) in the pull request page.\n\n## [1.2 - Artifacts on Maven Central](#table-of-contents)\n\nYou can find our released artifacts on maven central:\n\n**Core:**\n```xml\n<dependency>\n    <groupId>org.openapitools</groupId>\n    <artifactId>openapi-generator</artifactId>\n    <version>${openapi-generator-version}</version>\n</dependency>\n```\nSee the different versions of the [openapi-generator](https://search.maven.org/artifact/org.openapitools/openapi-generator) artifact available on maven central.\n\n**Cli:**\n```xml\n<dependency>\n    <groupId>org.openapitools</groupId>\n    <artifactId>openapi-generator-cli</artifactId>\n    <version>${openapi-generator-version}</version>\n</dependency>\n```\nSee the different versions of the [openapi-generator-cli](https://search.maven.org/artifact/org.openapitools/openapi-generator-cli) artifact available on maven central.\n\n**Maven plugin:**\n```xml\n<dependency>\n    <groupId>org.openapitools</groupId>\n    <artifactId>openapi-generator-maven-plugin</artifactId>\n    <version>${openapi-generator-version}</version>\n</dependency>\n```\n* See the different versions of the [openapi-generator-maven-plugin](https://search.maven.org/artifact/org.openapitools/openapi-generator-maven-plugin) artifact available on maven central.\n* [Readme](https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator-maven-plugin/README.md)\n\n**Gradle plugin:**\n```xml\n<dependency>\n    <groupId>org.openapitools</groupId>\n    <artifactId>openapi-generator-gradle-plugin</artifactId>\n    <version>${openapi-generator-version}</version>\n</dependency>\n```\n* See the different versions of the [openapi-generator-gradle-plugin](https://search.maven.org/artifact/org.openapitools/openapi-generator-gradle-plugin) artifact available on maven central.\n* [Readme](https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator-gradle-plugin/README.adoc)\n\n### [1.3 - Download JAR](#table-of-contents)\n<!-- RELEASE_VERSION -->\nIf you're looking for the latest stable version, you can grab it directly from Maven.org (Java 11 runtime at a minimum):\n\nJAR location: `https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.10.0/openapi-generator-cli-7.10.0.jar`\n\nFor **Mac/Linux** users:\n```sh\nwget https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.10.0/openapi-generator-cli-7.10.0.jar -O openapi-generator-cli.jar\n```\n\nFor **Windows** users, you will need to install [wget](http://gnuwin32.sourceforge.net/packages/wget.htm) or you can use Invoke-WebRequest in PowerShell (3.0+), e.g.\n```\nInvoke-WebRequest -OutFile openapi-generator-cli.jar https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.10.0/openapi-generator-cli-7.10.0.jar\n```\n\nAfter downloading the JAR, run `java -jar openapi-generator-cli.jar help` to show the usage.\n\nFor Mac users, please make sure Java 11 is installed (Tips: run `java -version` to check the version), and export `JAVA_HOME` in order to use the supported Java version:\n```sh\nexport JAVA_HOME=`/usr/libexec/java_home -v 1.11`\nexport PATH=${JAVA_HOME}/bin:$PATH\n```\n\n<!-- /RELEASE_VERSION -->\n### Launcher Script\n\nOne downside to manual jar downloads is that you don't keep up-to-date with the latest released version. We have a Bash launcher script at [bin/utils/openapi-generator.cli.sh](./bin/utils/openapi-generator-cli.sh) which resolves this issue.\n\nTo install the launcher script, copy the contents of the script to a location on your path and make the script executable.\n\nAn example of setting this up (NOTE: Always evaluate scripts curled from external systems before executing them).\n\n```\nmkdir -p ~/bin/openapitools\ncurl https://raw.githubusercontent.com/OpenAPITools/openapi-generator/master/bin/utils/openapi-generator-cli.sh > ~/bin/openapitools/openapi-generator-cli\nchmod u+x ~/bin/openapitools/openapi-generator-cli\nexport PATH=$PATH:~/bin/openapitools/\n```\n\nNow, `openapi-generator-cli` is \"installed\". On invocation, it will query the GitHub repository for the most recently released version. If this matches the last downloaded jar,\nit will execute as normal. If a newer version is found, the script will download the latest release and execute it.\n\nIf you need to invoke an older version of the generator, you can define the variable `OPENAPI_GENERATOR_VERSION` either ad hoc or globally. You can export this variable if you'd like to persist a specific release version.\n\nExamples:\n\n```\n# Execute latest released openapi-generator-cli\nopenapi-generator-cli version\n\n# Execute version 4.1.0 for the current invocation, regardless of the latest released version\nOPENAPI_GENERATOR_VERSION=4.1.0 openapi-generator-cli version\n\n# Execute version 4.1.0-SNAPSHOT for the current invocation\nOPENAPI_GENERATOR_VERSION=4.1.0-SNAPSHOT openapi-generator-cli version\n\n# Execute version 4.0.2 for every invocation in the current shell session\nexport OPENAPI_GENERATOR_VERSION=4.0.2\nopenapi-generator-cli version # is 4.0.2\nopenapi-generator-cli version # is also 4.0.2\n\n# To \"install\" a specific version, set the variable in .bashrc/.bash_profile\necho \"export OPENAPI_GENERATOR_VERSION=4.0.2\" >> ~/.bashrc\nsource ~/.bashrc\nopenapi-generator-cli version # is always 4.0.2, unless any of the above overrides are done ad hoc\n```\n\n### [1.4 - Build Projects](#table-of-contents)\n\nTo build from source, you need the following installed and available in your `$PATH:`\n\n* [Java 11](https://adoptium.net/)\n\n* [Apache Maven 3.8.8 or greater](https://maven.apache.org/) (optional)\n\nAfter cloning the project, you can build it from source using [maven wrapper](https://maven.apache.org/wrapper/):\n\n- Linux: `./mvnw clean install`\n- Windows: `mvnw.cmd clean install`\n\n#### Nix users\n\nIf you're a nix user, you can enter OpenAPI Generator shell, by typing:\n```sh\nnix develop\n```\nIt will enter a shell with Java 11 installed.\n\nDirenv supports automatically loading of the nix developer shell, so if you're using direnv too, type:\n```sh\ndirenv allow\n```\nand have `java` and `mvn` set up with correct versions each time you enter project directory.\n\nThe default build contains minimal static analysis (via CheckStyle). To run your build with PMD and Spotbugs, use the `static-analysis` profile:\n\n- Linux: `./mvnw -Pstatic-analysis clean install`\n- Windows: `mvnw.cmd -Pstatic-analysis clean install`\n\n### [1.5 - Homebrew](#table-of-contents)\n\nTo install, run `brew install openapi-generator`\n\nHere is an example usage to generate a Ruby client:\n```sh\nopenapi-generator generate -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml -g ruby -o /tmp/test/\n```\n\nTo reinstall with the latest master, run `brew uninstall openapi-generator && brew install --HEAD openapi-generator`\n\nTo install OpenJDK (pre-requisites), please run\n```sh\nbrew tap AdoptOpenJDK/openjdk\nbrew install --cask adoptopenjdk11\nexport JAVA_HOME=`/usr/libexec/java_home -v 1.11`\n```\n\nor download installer via https://adoptium.net/\n\nTo install Maven (optional), please run\n```sh\nbrew install maven\n```\n\n### [1.6 - Docker](#table-of-contents)\n\n#### Public Pre-built Docker images\n\n - [https://hub.docker.com/r/openapitools/openapi-generator-cli/](https://hub.docker.com/r/openapitools/openapi-generator-cli/) (official CLI)\n - [https://hub.docker.com/r/openapitools/openapi-generator-online/](https://hub.docker.com/r/openapitools/openapi-generator-online/) (official web service)\n\n\n#### OpenAPI Generator CLI Docker Image\n\nThe OpenAPI Generator image acts as a standalone executable. It can be used as an alternative to installing via homebrew, or for developers who are unable to install Java or upgrade the installed version.\n\nTo generate code with this image, you'll need to mount a local location as a volume.\n\nExample:\n\n```sh\ndocker run --rm -v \"${PWD}:/local\" openapitools/openapi-generator-cli generate \\\n    -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml \\\n    -g go \\\n    -o /local/out/go\n```\n\nThe generated code will be located under `./out/go` in the current directory.\n\n#### OpenAPI Generator Online Docker Image\n\nThe openapi-generator-online image can act as a self-hosted web application and API for generating code. This container can be incorporated into a CI pipeline, and requires at least two HTTP requests and some docker orchestration to access generated code.\n\nExample usage:\n\n```sh\n# Start container at port 8888 and save the container id\n> CID=$(docker run -d -p 8888:8080 openapitools/openapi-generator-online)\n\n# allow for startup\n> sleep 10\n\n# Get the IP of the running container (optional)\nGEN_IP=$(docker inspect --format '{{.NetworkSettings.IPAddress}}'  $CID)\n\n# Execute an HTTP request to generate a Ruby client\n> curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' \\\n-d '{\"openAPIUrl\": \"https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml\"}' \\\n'http://localhost:8888/api/gen/clients/ruby'\n\n{\"code\":\"c2d483.3.4672-40e9-91df-b9ffd18d22b8\",\"link\":\"http://localhost:8888/api/gen/download/c2d483.3.4672-40e9-91df-b9ffd18d22b8\"}\n\n# Download the generated zip file\n> wget http://localhost:8888/api/gen/download/c2d483.3.4672-40e9-91df-b9ffd18d22b8\n\n# Unzip the file\n> unzip c2d483.3.4672-40e9-91df-b9ffd18d22b8\n\n# Shutdown the openapi generator image\n> docker stop $CID && docker rm $CID\n```\n\n#### Development in docker\n\nYou can use `run-in-docker.sh` to do all development. This script maps your local repository to `/gen`\nin the docker container. It also maps `~/.m2/repository` to the appropriate container location.\n\nTo execute `mvn package`:\n\n```sh\ngit clone https://github.com/openapitools/openapi-generator\ncd openapi-generator\n./run-in-docker.sh mvn package\n```\n\nBuild artifacts are now accessible in your working directory.\n\nOnce built, `run-in-docker.sh` will act as an executable for openapi-generator-cli. To generate code, you'll need to output to a directory under `/gen` (e.g. `/gen/out`). For example:\n\n```sh\n./run-in-docker.sh help # Executes 'help' command for openapi-generator-cli\n./run-in-docker.sh list # Executes 'list' command for openapi-generator-cli\n./run-in-docker.sh generate -i modules/openapi-generator/src/test/resources/3_0/petstore.yaml \\\n    -g go -o /gen/out/go-petstore -p packageName=petstore # generates go client, outputs locally to ./out/go-petstore\n```\n\n##### Troubleshooting\n\nIf an error like this occurs, just execute the **./mvnw clean install -U** command:\n\n> org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test (default-test) on project openapi-generator: A type incompatibility occurred while executing org.apache.maven.plugins:maven-surefire-plugin:2.19.1:test: java.lang.ExceptionInInitializerError cannot be cast to java.io.IOException\n\n```sh\n./run-in-docker.sh ./mvnw clean install -U\n```\n\n> Failed to execute goal org.fortasoft:gradle-maven-plugin:1.0.8:invoke (default) on project openapi-generator-gradle-plugin-mvn-wrapper: org.gradle.tooling.BuildException: Could not execute build using Gradle distribution 'https://services.gradle.org/distributions/gradle-4.7-bin.zip'\n\nRight now: no solution for this one :|\n\n#### Run Docker in Vagrant\nPrerequisite: install [Vagrant](https://www.vagrantup.com/downloads.html) and [VirtualBox](https://www.virtualbox.org/wiki/Downloads).\n ```sh\ngit clone https://github.com/openapitools/openapi-generator.git\ncd openapi-generator\nvagrant up\nvagrant ssh\ncd /vagrant\n./run-in-docker.sh ./mvnw package\n```\n\n### [1.7 - NPM](#table-of-contents)\n\nThere is also an [NPM package wrapper](https://www.npmjs.com/package/@openapitools/openapi-generator-cli) available for different platforms (e.g. Linux, Mac, Windows). (JVM is still required)\nPlease see the [project's README](https://github.com/openapitools/openapi-generator-cli) there for more information.\n\nInstall it globally to get the CLI available on the command line:\n\n```sh\nnpm install @openapitools/openapi-generator-cli -g\nopenapi-generator-cli version\n```\n\n<!-- RELEASE_VERSION -->\nTo use a specific version of \"openapi-generator-cli\"\n\n```sh\nopenapi-generator-cli version-manager set 7.10.0\n```\n\nOr install it as dev-dependency:\n\n```sh\nnpm install @openapitools/openapi-generator-cli -D\n```\n<!-- /RELEASE_VERSION -->\n\nYou can use [locally built JARs](https://github.com/OpenAPITools/openapi-generator-cli?tab=readme-ov-file#use-locally-built-jar) or [`SNAPSHOT` versions](https://github.com/OpenAPITools/openapi-generator-cli?tab=readme-ov-file#use-nightly-snapshot-build) as well.\n\n### [1.8 - pip](#table-of-contents)\n\n\n> **Platform(s)**: Linux, macOS, Windows\n**Install** via [PyPI](https://pypi.org/) (`java` executable is needed to run):\n\n```\npip install openapi-generator-cli\n```\n\nTo install a specific version\n```\npip install openapi-generator-cli==7.10.0\n```\n\nYou can also install with [jdk4py](https://github.com/activeviam/jdk4py) instead of java binary. (python>=3.10 is required)\n\n```\npip install openapi-generator-cli[jdk4py]\n```\n\nRef: https://github.com/openAPITools/openapi-generator-pip\n\n## [2 - Getting Started](#table-of-contents)\n\nTo generate a PHP client for [petstore.yaml](https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml), please run the following\n```sh\ngit clone https://github.com/openapitools/openapi-generator\ncd openapi-generator\n./mvnw clean package\njava -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar generate \\\n   -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml \\\n   -g php \\\n   -o /var/tmp/php_api_client\n```\n(if you're on Windows, replace the last command with `java -jar modules\\openapi-generator-cli\\target\\openapi-generator-cli.jar generate -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml -g php -o c:\\temp\\php_api_client`)\n\n<!-- RELEASE_VERSION -->\nYou can also download the JAR (latest release) directly from [maven.org](https://repo1.maven.org/maven2/org/openapitools/openapi-generator-cli/7.10.0/openapi-generator-cli-7.10.0.jar)\n<!-- /RELEASE_VERSION -->\n\nTo get a list of **general** options available, please run `java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar help generate`\n\nTo get a list of PHP specified options (which can be passed to the generator with a config file via the `-c` option), please run `java -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar config-help -g php`\n\n## [3 - Usage](#table-of-contents)\n\n### To generate a sample client library\nYou can build a client against the [Petstore API](https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml) as follows:\n\n```sh\n./bin/generate-samples.sh ./bin/configs/java-okhttp-gson.yaml\n```\n\n(On Windows, please install [GIT Bash for Windows](https://gitforwindows.org/) to run the command above)\n\nThis script uses the default library, which is `okhttp-gson`. It will run the generator with this command:\n\n```sh\njava -jar modules/openapi-generator-cli/target/openapi-generator-cli.jar generate \\\n  -i https://raw.githubusercontent.com/openapitools/openapi-generator/master/modules/openapi-generator/src/test/resources/3_0/petstore.yaml \\\n  -g java \\\n  -t modules/openapi-generator/src/main/resources/Java \\\n  --additional-properties artifactId=petstore-okhttp-gson,hideGenerationTimestamp=true \\\n  -o samples/client/petstore/java/okhttp-gson\n```\n\nwith a number of options. [The java options are documented here.](docs/generators/java.md)\n\nYou can also get the options with the `help generate` command (below only shows partial results):\n\n```\nNAME\n        openapi-generator-cli generate - Generate code with the specified\n        generator.\n\nSYNOPSIS\n        openapi-generator-cli generate\n                [(-a <authorization> | --auth <authorization>)]\n                [--api-name-suffix <api name suffix>] [--api-package <api package>]\n                [--artifact-id <artifact id>] [--artifact-version <artifact version>]\n                [(-c <configuration file> | --config <configuration file>)] [--dry-run]\n                [(-e <templating engine> | --engine <templating engine>)]\n                [--enable-post-process-file]\n                [(-g <generator name> | --generator-name <generator name>)]\n                [--generate-alias-as-model] [--git-host <git host>]\n                [--git-repo-id <git repo id>] [--git-user-id <git user id>]\n                [--global-property <global properties>...] [--group-id <group id>]\n                [--http-user-agent <http user agent>]\n                [(-i <spec file> | --input-spec <spec file>)]\n                [--ignore-file-override <ignore file override location>]\n                [--import-mappings <import mappings>...]\n                [--instantiation-types <instantiation types>...]\n                [--invoker-package <invoker package>]\n                [--language-specific-primitives <language specific primitives>...]\n                [--legacy-discriminator-behavior] [--library <library>]\n                [--log-to-stderr] [--minimal-update]\n                [--model-name-prefix <model name prefix>]\n                [--model-name-suffix <model name suffix>]\n                [--model-package <model package>]\n                [(-o <output directory> | --output <output directory>)] [(-p <additional properties> | --additional-properties <additional properties>)...]\n                [--package-name <package name>] [--release-note <release note>]\n                [--remove-operation-id-prefix]\n                [--reserved-words-mappings <reserved word mappings>...]\n                [(-s | --skip-overwrite)] [--server-variables <server variables>...]\n                [--skip-validate-spec] [--strict-spec <true/false strict behavior>]\n                [(-t <template directory> | --template-dir <template directory>)]\n                [--type-mappings <type mappings>...] [(-v | --verbose)]\n\nOPTIONS\n        -a <authorization>, --auth <authorization>\n            adds authorization headers when fetching the OpenAPI definitions\n            remotely. Pass in a URL-encoded string of name:header with a comma\n            separating multiple values\n\n...... (results omitted)\n\n        -v, --verbose\n            verbose mode\n\n```\n\nYou can then compile and run the client, as well as unit tests against it:\n\n```sh\ncd samples/client/petstore/java/okhttp-gson\nmvn package\n```\n\nOther generators have [samples](https://github.com/OpenAPITools/openapi-generator/tree/master/samples) too.\n\n### [3.1 - Customization](#table-of-contents)\n\nPlease refer to [customization.md](docs/customization.md) on how to customize the output (e.g. package name, version)\n\n### [3.2 - Workflow Integration (Maven, Gradle, Github, CI/CD)](#table-of-contents)\n\nPlease refer to [integration.md](docs/integration.md) on how to integrate OpenAPI generator with Maven, Gradle, sbt, Bazel, Github and CI/CD.\n\n### [3.3 - Online OpenAPI generator](#table-of-contents)\n\nHere are the public online services:\n\n- latest stable version: https://api.openapi-generator.tech\n- latest master: https://api-latest-master.openapi-generator.tech (updated with latest master every hour)\n\nThe server is sponsored by [Linode](https://www.linode.com/) [![Linode Logo](https://www.linode.com/media/images/logos/standard/light/linode-logo_standard_light_small.png)](https://www.linode.com/)\n\n(These services are beta and do not have any guarantee on service level)\n\nPlease refer to [online.md](docs/online.md) on how to run and use the `openapi-generator-online` - a web service for `openapi-generator`.\n\n### [3.4 - License information on Generated Code](#table-of-contents)\n\nThe OpenAPI Generator project is intended as a benefit for users of the Open API Specification.  The project itself has the [License](#7---license) as specified. In addition, please understand the following points:\n\n* The templates included with this project are subject to the [License](#7---license).\n* Generated code is intentionally _not_ subject to the parent project license\n\nWhen code is generated from this project, it shall be considered **AS IS** and owned by the user of the software.  There are no warranties--expressed or implied--for generated code.  You can do what you wish with it, and once generated, the code is your responsibility and subject to the licensing terms that you deem appropriate.\n\n### [3.5 - IDE Integration](#table-of-contents)\n\nHere is a list of community-contributed IDE plug-ins that integrate with OpenAPI Generator:\n\n- Eclipse: [Codewind OpenAPI Tools for Eclipse](https://www.eclipse.org/codewind/open-api-tools-for-eclipse.html) by [IBM](https://www.ibm.com)\n- IntelliJ IDEA: [OpenAPI Generator](https://plugins.jetbrains.com/plugin/8433-openapi-generator) by [Jim Schubert](https://jimschubert.us/#/)\n- IntelliJ IDEA: [Senya Editor](https://plugins.jetbrains.com/plugin/10690-senya-editor) by [senya.io](https://senya.io)\n- [RepreZen API Studio](https://www.reprezen.com/)\n- Visual Studio: [REST API Client Code Generator](https://marketplace.visualstudio.com/items?itemName=ChristianResmaHelle.ApiClientCodeGenerator) by [Christian Resma Helle](https://christian-helle.blogspot.com/)\n- Visual Studio Code: [Codewind OpenAPI Tools](https://marketplace.visualstudio.com/items?itemName=IBM.codewind-openapi-tools) by [IBM](https://marketplace.visualstudio.com/publishers/IBM)\n\n\n## [4 - Companies/Projects using OpenAPI Generator](#table-of-contents)\nHere are some companies/projects (alphabetical order) using OpenAPI Generator in production. To add your company/project to the list, please visit [README.md](README.md) and click on the icon to edit the page.\n\n- [Aalborg University](https://www.aau.dk)\n- [act coding](https://github.com/actcoding)\n- [Adaptant Solutions AG](https://www.adaptant.io/)\n- [adesso SE](https://www.adesso.de/)\n- [Adyen](https://www.adyen.com/)\n- [Agoda](https://www.agoda.com/)\n- [Airthings](https://www.airthings.com/)\n- [Aleri Solutions Gmbh](https://www.aleri.de/)\n- [Allianz](https://www.allianz.com)\n- [Angular.Schule](https://angular.schule/)\n- [Aqovia](https://aqovia.com/)\n- [Australia and New Zealand Banking Group (ANZ)](http://www.anz.com/)\n- [Arduino](https://www.arduino.cc/)\n- [ASKUL](https://www.askul.co.jp)\n- [Amazon Web Services (AWS)](https://aws.amazon.com/)\n- [b<>com](https://b-com.com/en)\n- [百度营销](https://e.baidu.com)\n- [Bandwidth](https://dev.bandwidth.com)\n- [Banzai Cloud](https://banzaicloud.com)\n- [BIMData.io](https://bimdata.io)\n- [Bithost GmbH](https://www.bithost.ch)\n- [Bosch Connected Industry](https://www.bosch-connected-industry.com)\n- [Boxever](https://www.boxever.com/)\n- [Brevy](https://www.brevy.com)\n- [Bunker Holding Group](https://www.bunker-holding.com/)\n- [California State University, Northridge](https://www.csun.edu)\n- [CAM](https://www.cam-inc.co.jp/)\n- [Camptocamp](https://www.camptocamp.com/en)\n- [Carlsberg Group](https://www.carlsberggroup.com/)\n- [CERN](https://home.cern/)\n- [Christopher Queen Consulting](https://www.christopherqueenconsulting.com/)\n- [Cisco](https://www.cisco.com/)\n- [codecentric AG](https://www.codecentric.de/)\n- [CoinAPI](https://www.coinapi.io/)\n- [Commencis](https://www.commencis.com/)\n- [ConfigCat](https://configcat.com/)\n- [cronn GmbH](https://www.cronn.de/)\n- [Crossover Health](https://crossoverhealth.com/)\n- [Cupix](https://www.cupix.com/)\n- [Datadog](https://www.datadoghq.com)\n- [DB Systel](https://www.dbsystel.de)\n- [Deeporute.ai](https://www.deeproute.ai/)\n- [Devsupply](https://www.devsupply.com/)\n- [dmTECH GmbH](https://www.dmTECH.de)\n- [DocSpring](https://docspring.com/)\n- [dwango](https://dwango.co.jp/)\n- [Edge Impulse](https://www.edgeimpulse.com/)\n- [Element AI](https://www.elementai.com/)\n- [Embotics](https://www.embotics.com/)\n- [emineo](https://www.emineo.ch)\n- [fastly](https://www.fastly.com/)\n- [Fenergo](https://www.fenergo.com/)\n- [freee](https://corp.freee.co.jp/en/)\n- [FreshCells](https://www.freshcells.de/)\n- [Fuse](https://www.fuse.no/)\n- [Gantner](https://www.gantner.com)\n- [GenFlow](https://github.com/RepreZen/GenFlow)\n- [GetYourGuide](https://www.getyourguide.com/)\n- [Glovo](https://glovoapp.com/)\n- [GMO Pepabo](https://pepabo.com/en/)\n- [GoDaddy](https://godaddy.com)\n- [Gumtree](https://gumtree.com)\n- [Here](https://developer.here.com/)\n- [IBM](https://www.ibm.com/)\n- [Instana](https://www.instana.com)\n- [Interxion](https://www.interxion.com)\n- [Inquisico](https://inquisico.com)\n- [JustStar](https://www.juststarinfo.com)\n- [k6.io](https://k6.io/)\n- [Klarna](https://www.klarna.com/)\n- [Kronsoft Development](https://www.kronsoft.ro/home/)\n- [Kubernetes](https://kubernetes.io)\n- [Landeshauptstadt München - it@M](https://muenchen.digital/it-at-m/)\n- [Linode](https://www.linode.com/)\n- [Logicdrop](https://www.logicdrop.com)\n- [Lumeris](https://www.lumeris.com)\n- [LVM Versicherungen](https://www.lvm.de)\n- [MailSlurp](https://www.mailslurp.com)\n- [Manticore Search](https://manticoresearch.com)\n- [Mastercard](https://developers.mastercard.com)\n- [Médiavision](https://www.mediavision.fr/)\n- [Metaswitch](https://www.metaswitch.com/)\n- [MoonVision](https://www.moonvision.io/)\n- [Myworkout](https://myworkout.com)\n- [NamSor](https://www.namsor.com/)\n- [Neverfail](https://www.neverfail.com/)\n- [NeuerEnergy](https://neuerenergy.com)\n- [Nokia](https://www.nokia.com/)\n- [OneSignal](https://www.onesignal.com/)\n- [Options Clearing Corporation (OCC)](https://www.theocc.com/)\n- [Openet](https://www.openet.com/)\n- [openVALIDATION](https://openvalidation.io/)\n- [Oracle](https://www.oracle.com/)\n- [Paxos](https://www.paxos.com)\n- [Plaid](https://plaid.com)\n- [PLAID, Inc.](https://plaid.co.jp/)\n- [Pinterest](https://www.pinterest.com)\n- [Ponicode](https://ponicode.dev/)\n- [Pricefx](https://www.pricefx.com/)\n- [PrintNanny](https://www.print-nanny.com/)\n- [Prometheus/Alertmanager](https://github.com/prometheus/alertmanager)\n- [Qavar](https://www.qavar.com)\n- [QEDIT](https://qed-it.com)\n- [Qovery](https://qovery.com)\n- [Qulix Systems](https://www.qulix.com)\n- [Raksul](https://corp.raksul.com)\n- [Raiffeisen Schweiz Genossenschaft](https://www.raiffeisen.ch)\n- [RedHat](https://www.redhat.com)\n- [RepreZen API Studio](https://www.reprezen.com/swagger-openapi-code-generation-api-first-microservices-enterprise-development)\n- [REST United](https://restunited.com)\n- [Robocorp](https://www.robocorp.com)\n- [Robotinfra](https://www.robotinfra.com)\n- [SearchApi](https://www.searchapi.io/)\n- [SmartHR](https://smarthr.co.jp/)\n- [Sony Interactive Entertainment](https://www.sie.com/en/index.html)\n- [Splitit](https://www.splitit.com/)\n- [Stingray](http://www.stingray.com)\n- [Suva](https://www.suva.ch/)\n- [Svix](https://www.svix.com/)\n- [Telstra](https://dev.telstra.com)\n- [Tencent](https://www.tencent.com)\n- [The University of Aizu](https://www.u-aizu.ac.jp/en/)\n- [TINQIN](https://www.tinqin.com/)\n- [Translucent ApS](https://www.translucent.dk)\n- [TravelTime platform](https://www.traveltimeplatform.com/)\n- [TribalScale](https://www.tribalscale.com)\n- [Trifork](https://trifork.com)\n- [TUI InfoTec GmbH](http://www.tui-infotec.com/)\n- [Twilio](https://www.twilio.com/)\n- [Twitter](https://twitter.com)\n- [unblu inc.](https://www.unblu.com/)\n- [Veamly](https://www.veamly.com/)\n- [VMWare](https://www.vmware.com/)\n- [wbt-solutions](https://www.wbt-solutions.de/)\n- [Woleet](https://www.woleet.io/)\n- [WSO2](https://wso2.com/)\n- [Vouchery.io](https://vouchery.io)\n- [Xero](https://www.xero.com/)\n- [Yahoo Japan](https://www.yahoo.co.jp/)\n- [viadee](https://www.viadee.de/)\n- [Vonage](https://vonage.com)\n- [YITU Technology](https://www.yitutech.com/)\n- [Yelp](https://www.yelp.com/)\n- [Zalando](https://www.zalando.com)\n- [3DS Outscale](https://www.outscale.com/)\n\n## [5 - Presentations/Videos/Tutorials/Books](#table-of-contents)\n\n- 2018/05/12 - [OpenAPI Generator - community drivenで成長するコードジェネレータ](https://ackintosh.github.io/blog/2018/05/12/openapi-generator/) by [中野暁人](https://github.com/ackintosh)\n- 2018/05/15 - [Starting a new open-source project](http://jmini.github.io/blog/2018/2018-05-15_new-open-source-project.html) by [Jeremie Bresson](https://github.com/jmini)\n- 2018/05/15 - [REST API仕様からAPIクライアントやスタブサーバを自動生成する「OpenAPI Generator」オープンソースで公開。Swagger Codegenからのフォーク](https://www.publickey1.jp/blog/18/rest_apiapiopenapi_generatorswagger_generator.html) by [Publickey](https://www.publickey1.jp)\n- 2018/06/08 - [Swagger Codegen is now OpenAPI Generator](https://angular.schule/blog/2018-06-swagger-codegen-is-now-openapi-generator) by [JohannesHoppe](https://github.com/JohannesHoppe)\n- 2018/06/21 - [Connect your JHipster apps to the world of APIs with OpenAPI and gRPC](https://fr.slideshare.net/chbornet/jhipster-conf-2018-connect-your-jhipster-apps-to-the-world-of-apis-with-openapi-and-grpc) by [Christophe Bornet](https://github.com/cbornet) at [JHipster Conf 2018](https://jhipster-conf.github.io/)\n- 2018/06/22 - [OpenAPI Generator で Gatling Client を生成してみた](https://rohki.hatenablog.com/entry/2018/06/22/073000) at [ソモサン](https://rohki.hatenablog.com/)\n- 2018/06/27 - [Lessons Learned from Leading an Open-Source Project Supporting 30+ Programming Languages](https://speakerdeck.com/wing328/lessons-learned-from-leading-an-open-source-project-supporting-30-plus-programming-languages) - [William Cheng](https://github.com/wing328) at [LinuxCon + ContainerCon + CloudOpen China 2018](http://bit.ly/2waDKKX)\n- 2018/07/19 - [OpenAPI Generator Contribution Quickstart - RingCentral Go SDK](https://medium.com/ringcentral-developers/openapi-generator-for-go-contribution-quickstart-8cc72bf37b53) by [John Wang](https://github.com/grokify)\n- 2018/08/22 - [OpenAPI Generatorのプロジェクト構成などのメモ](https://yinm.info/20180822/) by [Yusuke Iinuma](https://github.com/yinm)\n- 2018/09/12 - [RepreZen and OpenAPI 3.0: Now is the Time](https://www.reprezen.com/blog/reprezen-openapi-3.0-upgrade-now-is-the-time) by [Miles Daffin](https://www.reprezen.com/blog/author/miles-daffin)\n- 2018/10/31 - [A node package wrapper for openapi-generator](https://github.com/HarmoWatch/openapi-generator-cli)\n- 2018/11/03 - [OpenAPI Generator + golang + Flutter でアプリ開発](http://ryuichi111std.hatenablog.com/entry/2018/11/03/214005) by [Ryuichi Daigo](https://github.com/ryuichi111)\n- 2018/11/15 - [基于openapi3.0的yaml文件生成java代码的一次实践](https://blog.csdn.net/yzy199391/article/details/84023982) by [焱魔王](https://me.csdn.net/yzy199391)\n- 2018/11/18 - [Generating PHP library code from OpenAPI](https://lornajane.net/posts/2018/generating-php-library-code-from-openapi) by [Lorna Jane](https://lornajane.net/) at [LORNAJANE Blog](https://lornajane.net/blog)\n- 2018/11/19 - [OpenAPIs are everywhere](https://youtu.be/-lDot4Yn7Dg) by [Jeremie Bresson (Unblu)](https://github.com/jmini) at [EclipseCon Europe 2018](https://www.eclipsecon.org/europe2018)\n- 2018/12/09 - [openapi-generator をカスタマイズする方法](https://qiita.com/watiko/items/0961287c02eac9211572) by [@watiko](https://qiita.com/watiko)\n- 2019/01/03 - [Calling a Swagger service from Apex using openapi-generator](https://lekkimworld.com/2019/01/03/calling-a-swagger-service-from-apex-using-openapi-generator/) by [Mikkel Flindt Heisterberg](https://lekkimworld.com)\n- 2019/01/13 - [OpenAPI GeneratorでRESTful APIの定義書から色々自動生成する](https://ky-yk-d.hatenablog.com/entry/2019/01/13/234108) by [@ky_yk_d](https://twitter.com/ky_yk_d)\n- 2019/01/20 - [Contract-First API Development with OpenAPI Generator and Connexion](https://medium.com/commencis/contract-first-api-development-with-openapi-generator-and-connexion-b21bbf2f9244) by [Anil Can Aydin](https://github.com/anlcnydn)\n- 2019/01/30 - [Rapid Application Development With API First Approach Using Open-API Generator](https://dzone.com/articles/rapid-api-development-using-open-api-generator) by [Milan Sonkar](https://dzone.com/users/828329/milan_sonkar.html)\n- 2019/02/02 - [平静を保ち、コードを生成せよ 〜 OpenAPI Generator誕生の背景と軌跡 〜](https://speakerdeck.com/akihito_nakano/gunmaweb34) by [中野暁人](https://github.com/ackintosh) at [Gunma.web #34 スキーマ駆動開発](https://gunmaweb.connpass.com/event/113974/)\n- 2019/02/20 - [An adventure in OpenAPI V3 code generation](https://mux.com/blog/an-adventure-in-openapi-v3-api-code-generation/) by [Phil Cluff](https://mux.com/blog/author/philc/)\n- 2019/02/26 - [Building API Services: A Beginner’s Guide](https://medium.com/google-cloud/building-api-services-a-beginners-guide-7274ae4c547f) by [Ratros Y.](https://medium.com/@ratrosy) in [Google Cloud Platform Blog](https://medium.com/google-cloud)\n- 2019/02/26 - [Building APIs with OpenAPI: Continued](https://medium.com/@ratrosy/building-apis-with-openapi-continued-5d0faaed32eb) by [Ratros Y.](https://medium.com/@ratrosy) in [Google Cloud Platform Blog](https://medium.com/google-cloud)\n- 2019-03-07 - [OpenAPI Generator で Spring Boot と Angular をタイプセーフに繋ぐ](https://qiita.com/chibato/items/e4a748db12409b40c02f) by [Tomofumi Chiba](https://github.com/chibat)\n- 2019-03-16 - [A Quick introduction to manual OpenAPI V3](https://vadosware.io/post/quick-intro-to-manual-openapi-v3/) by [vados](https://github.com/t3hmrman) at [VADOSWARE](https://vadosware.io)\n- 2019-03-25 - [Access any REST service with the SAP S/4HANA Cloud SDK](https://blogs.sap.com/2019/03/25/integrate-sap-s4hana-cloud-sdk-with-open-api/) by [Alexander Duemont](https://people.sap.com/alexander.duemont)\n- 2019-03-25 - [OpenAPI generatorを試してみる](https://qiita.com/amuyikam/items/e8a45daae59c68be0fc8) by [@amuyikam](https://twitter.com/amuyikam)\n- 2019-03-27 - [OpenAPI3を使ってみよう！Go言語でクライアントとスタブの自動生成まで！](https://techblog.zozo.com/entry/openapi3/go) by [@gold_kou](https://twitter.com/gold_kou)\n- 2019-04-17 - [OpenAPIによるスキーマファースト開発の実施サンプルとCloud Runについて](https://tech-blog.optim.co.jp/entry/2019/04/17/174000) by [@yukey1031](https://twitter.com/yukey1031)\n- 2019-04-18 - [How to use OpenAPI3 for API developer (RubyKaigi 2019)](https://speakerdeck.com/ota42y/how-to-use-openapi3-for-api-developer) by [@ota42y](https://twitter.com/ota42y) at [RubyKaigi 2019](https://rubykaigi.org/2019)\n- 2019-04-29 - [A Beginner's Guide to Code Generation for REST APIs (OpenAPI Generator)](https://gum.co/openapi_generator_ebook) by [William Cheng](https://twitter.com/wing328)\n- 2019-05-01 - [Design and generate a REST API from Swagger / OpenAPI in Java, Python, C# and more](https://simply-how.com/design-and-generate-api-code-from-openapi) by [Simply How](https://simply-how.com/)\n- 2019-05-17 - [Generate Spring Boot REST API using Swagger/OpenAPI](https://www.47northlabs.com/knowledge-base/generate-spring-boot-rest-api-using-swagger-openapi/) by [Antonie Zafirov](https://www.47northlabs.com/author/antonie-zafirov/)\n- 2019-05-22 - [REST APIs代码生成指南(OpenAPI Generator)](https://gum.co/openapi_generator_ebook_gb) by [William Cheng](https://twitter.com/wing328), [Xin Meng](https://github.com/xmeng1)\n- 2019-05-24 - [REST API 代碼生成指南 (OpenAPI Generator)](https://gum.co/openapi_generator_ebook_big5) by [William Cheng](https://twitter.com/wing328)\n- 2019-06-24 - [Kubernetes Clients and OpenAPI Generator](https://speakerdeck.com/wing328/kubernetes-clients-and-openapi-generator) by [William Cheng](https://twitter.com/wing328) at [Kubernetes Contributor Summits Shanghai 2019](https://www.lfasiallc.com/events/contributors-summit-china-2019/)\n- 2019-06-28 [Codewind OpenAPI Tools](https://marketplace.eclipse.org/content/codewind-openapi-tools) in [Eclipse Marketplace](https://marketplace.eclipse.org/) by IBM\n- 2019-06-29 [Codewind OpenAPI Tools](https://marketplace.visualstudio.com/items?itemName=IBM.codewind-openapi-tools) in [Visual Studio Marketplace](https://marketplace.visualstudio.com/) by IBM\n- 2019-07-04 - [REST API のためのコード生成入門 (OpenAPI Generator)](https://gum.co/openapi_generator_ebook_big5) by [William Cheng](https://twitter.com/wing328), [中野暁人](https://github.com/ackintosh), [和田拓朗](https://github.com/taxpon)\n- 2019-07-08 - [OpenAPI Generator にコントリビュートしたら社名が載った話。(CAM) - CAM TECH BLOG](https://tech.cam-inc.co.jp/entry/2019/07/08/140000) by [CAM, Inc.](https://www.cam-inc.co.jp/)\n- 2019-07-14 - [OpenAPI GeneratorでPythonのクライアントライブラリを作成した](https://qiita.com/yuji38kwmt/items/dfb929316a1335a161c0) by [yuji38kwmt](https://qiita.com/yuji38kwmt)\n- 2019-07-19 - [Developer Experience (DX) for Open-Source Projects: How to Engage Developers and Build a Growing Developer Community](https://speakerdeck.com/wing328/developer-experience-dx-for-open-source-projects-english-japanese) by [William Cheng](https://twitter.com/wing328), [中野暁人](https://github.com/ackintosh) at [Open Source Summit Japan 2019](https://events.linuxfoundation.org/events/open-source-summit-japan-2019/)\n- 2019-08-14 - [Our OpenAPI journey with Standardizing SDKs](https://bitmovin.com/our-openapi-journey-with-standardizing-sdks/) by [Sebastian Burgstaller](https://bitmovin.com/author/sburgstaller/) at [Bitmovin](https://www.bitmovin.com)\n- 2019-08-15 - [APIのコードを自動生成させたいだけならgRPCでなくてもよくない?](https://www.m3tech.blog/entry/2019/08/15/110000) by [M3, Inc.](https://corporate.m3.com/)\n- 2019-08-22 - [マイクロサービスにおけるWeb APIスキーマの管理─ GraphQL、gRPC、OpenAPIの特徴と使いどころ](https://employment.en-japan.com/engineerhub/entry/2019/08/22/103000) by [@ota42y](https://twitter.com/ota42y)\n- 2019-08-24 - [SwaggerドキュメントからOpenAPI Generatorを使ってモックサーバー作成](https://qiita.com/masayoshi0222/items/4845e4c715d04587c104) by [坂本正義](https://qiita.com/masayoshi0222)\n- 2019-08-29 - [OpenAPI初探](https://cloud.tencent.com/developer/article/1495986) by [peakxie](https://cloud.tencent.com/developer/user/1113152) at [腾讯云社区](https://cloud.tencent.com/developer)\n- 2019-08-29 - [全面进化：Kubernetes CRD 1.16 GA前瞻](https://www.servicemesher.com/blog/kubernetes-1.16-crd-ga-preview/) by [Min Kim](https://github.com/yue9944882) at [ServiceMesher Blog](https://www.servicemesher.com/blog/)\n- 2019-09-01 - [Creating a PHP-Slim server using OpenAPI (Youtube video)](https://www.youtube.com/watch?v=5cJtbIrsYkg) by [Daniel Persson](https://www.youtube.com/channel/UCnG-TN23lswO6QbvWhMtxpA)\n- 2019-09-06 - [Vert.x and OpenAPI](https://wissel.net/blog/2019/09/vertx-and-openapi.html) by [Stephan H Wissel](https://twitter.com/notessensei) at [wissel.net blog](https://wissel.net)\n- 2019-09-09 - [Cloud-native development - Creating RESTful microservices](https://cloud.ibm.com/docs/cloud-native?topic=cloud-native-rest-api) in [IBM Cloud Docs](https://cloud.ibm.com/docs)\n- 2019-09-14 - [Generating and Configuring a Mastercard API Client](https://developer.mastercard.com/platform/documentation/generating-and-configuring-a-mastercard-api-client/) at [Mastercard Developers Platform](https://developer.mastercard.com/platform/documentation/)\n- 2019-09-15 - [OpenAPI(Swagger)導入下調べ](https://qiita.com/ShoichiKuraoka/items/f1f7a3c2376f7cd9c56a) by [Shoichi Kuraoka](https://qiita.com/ShoichiKuraoka)\n- 2019-09-17 - [Tutorial: Documenting http4k APIs with OpenApi3](https://www.http4k.org/tutorials/documenting_apis_with_openapi/) by [http4k](https://www.http4k.org/)\n- 2019-09-22 - [OpenAPI 3を完全に理解できる本](https://booth.pm/ja/items/1571902) by [@ota42y](https://twitter.com/ota42y)\n- 2019-09-22 - [RESTful APIs: Tutorial of OpenAPI Specification](https://medium.com/@amirm.lavasani/restful-apis-tutorial-of-openapi-specification-eeada0e3901d) by [Amir Lavasani](https://medium.com/@amirm.lavasani)\n- 2019-09-22 - [Redefining SDKs as software diversity kits](https://devrel.net/dev-rel/redefining-sdks-as-software-diversity-kits) by [Sid Maestre (Xero)](https://twitter.com/sidneyallen) at [DevRelCon San Francisco 2019](https://sf2019.devrel.net/)\n- 2019-09-23 - [swaggerからOpenApi GeneratorでSpringのコードを自動生成](https://qiita.com/littleFeet/items/492df2ad68a0799a5e5e) by [@littleFeet](https://qiita.com/littleFeet) at [Qiita](https://qiita.com/)\n- 2019-09-24 - [Eine Stunde was mit Api First!](https://www.slideshare.net/JanWeinschenker/eine-stunde-was-mit-api-first) by [@janweinschenker](https://twitter.com/janweinschenker) at [Java Forum Nord](https://javaforumnord.de/)\n- 2019-10-09 - [openapi-generator で生成した Go クライアントで Bearer 認証をする](https://autopp-tech.hatenablog.com/entry/2019/10/09/222039) by [Akira Tanimura](https://github.com/autopp)\n- 2019-10-10 - [Automatic Generation of REST Clients](https://www.meetup.com/fr-FR/Criteo-Labs-Tech-Talks/events/264775768/) by Thomas Peyrard, Senior Software Engineer at Criteo in [Full-Stack Tech Talks (Meetup)](https://www.meetup.com/fr-FR/Criteo-Labs-Tech-Talks/events/264775768/)\n- 2019-10-12 - [OpenApi自动生成client](https://blog.csdn.net/wxid2798226/article/details/102527467) by [郑泽洲](https://me.csdn.net/wxid2798226)\n- 2019-10-16 - [How to ship APIs faster?](https://medium.com/@accounts_76224/how-to-ship-apis-faster-cabef2f819e4) by [Simon Guilliams @ PoniCode](https://ponicode.dev)\n- 2019-10-22 - [OpenAPI + Spring Boot(Kotlin)でファイルダウンロードAPIを作成する](https://qiita.com/boronngo/items/4b78b92526209daeaee9) by [Yuki Furukawa](https://twitter.com/yuki_furukawa5)\n- 2019-10-24 - [Microprofile OpenAPI - Code First or Design First?](https://github.com/pe-st/apidocs/blob/master/MicroProfile-OpenAPI-all-slides.pdf) by [Peter [pɛʃə] Steiner](https://twitter.com/pesche) at [eclipsecon Europe 2019](https://www.eclipsecon.org/europe2019/sessions/microprofile-openapi-code-first-or-design-first)\n- 2019-11-06 - [Generating API clients based on OpenAPI v3 specifications](https://98elements.com/blog/generating-api-clients-based-on-openapi-v3-specifications) by [Dominik Jastrzębski @ 98elements](https://98elements.com)\n- 2019-11-06 - [OpenAPIを利用して自前のAPIサーバー(Sinatra)を移植した時のメモ](https://qiita.com/YasuhiroABE/items/c73920eab2d9d6e97fd9) by [Yasuhiro ABE](https://twitter.com/YasuhiroABE)\n- 2019-11-07 - [API First development with OpenAPI - You should you practise it !?](https://www.youtube.com/watch?v=F9iF3a1Z8Y8) by [Nick Van Hoof](https://www.nickvanhoof.com/) at [Devoxx Belgium 2019](https://devoxx.be/)\n- 2019-11-08 - [JHipster beyond CRUD - API-First for Enterprises by Enrico Costanzi](https://www.youtube.com/watch?v=m28JFovKQ20) by [Enrico Costanzi](https://twitter.com/enricocostanzi) at [JHipster Conf 2019 in Paris](https://jhipster-conf.github.io/)\n- 2019-11-11 - [TypeScript REST APIクライアント](https://qiita.com/unhurried/items/7b74f7d3c43545dadd2b) by [@unhurried](https://qiita.com/unhurried)\n- 2019-11-11 - [One Spec to Rule them all - OpenAPI in Action](https://www.youtube.com/watch?v=MMay_nht8ec) by [Andreas Litt](https://github.com/littldr) at [code.talks 2019](https://www.codetalks.com/)\n- 2019-11-13 - [OpenAPI 3.0 Editor And Generator With A Spring Boot Example](https://simply-how.com/design-and-generate-api-code-from-openapi) at [Simply How](https://simply-how.com/)\n- 2019-11-17 - [OpenAPI Generator YouTube playlist](https://www.youtube.com/playlist?list=PLtJyHVMdzfF6fBkOUV5VDVErP23CGgHIy) at [YouTube](https://www.youtube.com)\n- 2019-11-20 - [Introduction to OpenAPI](https://noti.st/lornajane/HvDH7U/introduction-to-openapi) by [Lorna Mitchell](https://twitter.com/lornajane) at [GOTO Copenhagen 2019](https://gotocph.com/2019/)\n- 2019-11-20 - [How to Generate Angular code from OpenAPI specifications](https://dotnetthoughts.net/how-to-generate-angular-code-from-openapi-specifications/) by Anuraj\n- 2019-11-23 - [Swagger ではない OpenAPI Specification 3.0 による API サーバー開発](https://www.slideshare.net/techblogyahoo/swagger-openapi-specification-30-api) by [Tetsuya Morimoto](https://github.com/t2y) at [JJUG CCC 2019 Fall](https://ccc2019fall.java-users.jp/)\n- 2019-11-24 - [Accelerate Flutter development with OpenAPI and Dart code generation](https://medium.com/@irinasouthwell_220/accelerate-flutter-development-with-openapi-and-dart-code-generation-1f16f8329a6a) by [Irina Southwell](https://medium.com/@irinasouthwell_220)\n- 2019-11-25 - [openapi-generatorで手軽にスタブサーバとクライアントの生成](https://qiita.com/pochopocho13/items/8db662e1934fb2b408b8) by [@pochopocho13](https://twitter.com/pochopocho13)\n- 2019-11-26 - [CordaCon 2019 Highlights: Braid Server and OpenAPI Generator for Corda Client API’s](https://blog.b9lab.com/cordacon-2019-highlights-braid-server-and-openapi-generator-for-corda-flows-api-s-d24179ccb27c) by [Adel Rustum](https://blog.b9lab.com/@adelrestom) at [B9lab](https://blog.b9lab.com/)\n- 2019-12-03 - [A Road to Less Coding: Auto-Generate APILibrary](https://www.corda.net/blog/a-road-to-less-coding-auto-generate-apilibrary/) at [Corda Blog](https://www.corda.net/blog/)\n- 2019-12-04 - [Angular＋NestJS＋OpenAPI（Swagger）でマイクロサービスを視野に入れた環境を考える](https://qiita.com/teracy55/items/0327c7a170ec772970c6) by [てらしー](https://twitter.com/teracy55)\n- 2019-12-05 - [Code generation on the Java VM](https://speakerdeck.com/sullis/code-generation-on-the-java-vm-2019-12-05) by [Sean Sullivan](https://speakerdeck.com/sullis)\n- 2019-12-17 - [OpenAPI Generator で OAuth2 アクセストークン発行のコードまで生成してみる](https://www.techscore.com/blog/2019/12/17/openapi-generator-oauth2-accesstoken/) by [TECHSCORE](https://www.techscore.com/blog/)\n- 2019-12-23 - [Use Ada for Your Web Development](https://www.electronicdesign.com/technologies/embedded-revolution/article/21119177/use-ada-for-your-web-development) by [Stephane Carrez](https://github.com/stcarrez)\n- 2019-12-23 - [OpenAPIのスキーマを分割・構造化していく方法](https://gift-tech.co.jp/articles/structured-openapi-schema) by [小飯塚達也](https://github.com/t2h5) at [GiFT, Inc](https://gift-tech.co.jp/)\n- 2020-01-17 - [OpenAPI demo for Pulp 3.0 GA](https://www.youtube.com/watch?v=mFBP-M0ZPfw&t=178s) by [Pulp](https://www.youtube.com/channel/UCI43Ffs4VPDv7awXvvBJfRQ) at [Youtube](https://www.youtube.com/)\n- 2020-01-19 - [Why document a REST API as code?](https://dev.to/rolfstreefkerk/why-document-a-rest-api-as-code-5e7p) by [Rolf Streefkerk](https://github.com/rpstreef) at [DEV Community](https://dev.to)\n- 2020-01-28 - [Get Your Serverless Swagger Back with OpenAPI](https://dev.to/matttyler/get-your-serverless-swagger-back-with-openapi-48gc) by [Matt Tyler](https://dev.to/matttyler)\n- 2020-01-30 - [OpenAPI Generatorへのコントリビュート](https://www.yutaka0m.work/entry/2020/01/30/163905) by [yutaka0m](https://github.com/yutaka0m)\n- 2020-02-01 - [Using OpenAPI to Maximise Your Pulp 3 Experience](https://fosdem.org/2020/schedule/event/openapi/) by [Dennis Kliban](https://github.com/dkliban/) at [FOSDEM](https://fosdem.org/)\n- 2020-02-07 - [Why you should use OpenAPI for your API design](https://www.youtube.com/watch?v=zhb7vUApLW8&t=927s) by [Nick Van Hoof](https://apiconference.net/speaker/nick-van-hoof/) at [API Conference](https://apiconference.net/)\n- 2020-02-17 - [Rubynetes: using OpenAPI to validate Kubernetes configs](https://www.brightbox.com/blog/2020/02/17/using-openapi-to-validate-kubernetes-configs/) by Neil Wilson at [Brightbox](https://www.brightbox.com/)\n- 2020-02-20 - [Building SDKs for the future](https://devblog.xero.com/building-sdks-for-the-future-b79ff726dfd6) by [Sid Maestre (Xero)](https://twitter.com/sidneyallen)\n- 2020-02-27 - [Nuxt利用プロダクトでIE11と仲良くするためのE2E](https://tech.medpeer.co.jp/entry/e2e-ie11) at [Medpeer.co.jp Tech Blog](https://tech.medpeer.co.jp/)\n- 2020-02-29 - [Providing Support to IoT Devices Deployed in Disconnected Rural Environment (Conference paper)](https://link.springer.com/chapter/10.1007/978-3-030-41494-8_14) by Sergio Laso, Daniel Flores-Martín, Juan Luis HerreraCarlos, CanalJuan Manuel, MurilloJavier Berrocal\n- 2020-03-02 - [How To Generate Angular & Spring Code From OpenAPI Specification](https://www.mokkapps.de/blog/how-to-generate-angular-and-spring-code-from-open-api-specification/) by [Michael Hoffmann](https://www.mokkapps.de/)\n- 2020-03-02 - [OpenAPI Generator + TypeScript で始める自動生成の型に守られた豊かなクライアント生活](https://gift-tech.co.jp/articles/openapi-generator-typescript) by [五百蔵 直樹](https://gift-tech.co.jp/members/naokiioroi) at [GiFT株式会社](https://gift-tech.co.jp/)\n- 2020-03-10 - [OpenAPI Generator Meetup #1](https://speakerdeck.com/akihito_nakano/openapi-generator-meetup-number-1) by [中野暁人](https://github.com/ackintosh) at [OpenAPI Generator Meetup #1](https://openapi-generator-meetup.connpass.com/event/168187/)\n- 2020-03-15 - [Load Testing Your API with Swagger/OpenAPI and k6](https://k6.io/blog/load-testing-your-api-with-swagger-openapi-and-k6)\n- 2020-04-13 - [俺的【OAS】との向き合い方 (爆速でOpenAPIと友達になろう)](https://tech-blog.optim.co.jp/entry/2020/04/13/100000) in [OPTim Blog](https://tech-blog.optim.co.jp/)\n- 2020-04-22 - [Introduction to OpenAPI Generator](https://nordicapis.com/introduction-to-openapi-generator/) by [Kristopher Sandoval](https://nordicapis.com/author/sandovaleffect/) in [Nordic APIs](https://nordicapis.com/)\n- 2020-04-27 - [How we use Open API v3 specification to auto-generate API documentation, code-snippets and clients](https://medium.com/pdf-generator-api/how-we-use-open-api-v3-specification-to-auto-generate-api-documentation-code-snippets-and-clients-d127a3cea784) by [Tanel Tähepõld](https://medium.com/@tanel.tahepold)\n- 2020-05-09 - [OpenAPIでお手軽にモックAPIサーバーを動かす](https://qiita.com/kasa_le/items/97ca6a8dd4605695c25c) by [Sachie Kamba](https://qiita.com/kasa_le)\n- 2020-05-18 - [Spring Boot REST with OpenAPI 3](https://dev.to/alfonzjanfrithz/spring-boot-rest-with-openapi-3-59jm) by [Alfonz Jan Frithz](https://dev.to/alfonzjanfrithz)\n- 2020-05-19 - [Dead Simple APIs with Open API](https://www.youtube.com/watch?v=sIaXmR6xRAw) by [Chris Tankersley](https://github.com/dragonmantank) at [Nexmo](https://developer.nexmo.com/)\n- 2020-05-22 - [TypeScript REST API Client](https://dev.to/unhurried/typescript-rest-api-client-4in3) by [\"unhurried\"](https://dev.to/unhurried)\n- 2020-05-28 - [【使用 lotify + Swagger 建置可共用的 LINE Notify bot】 - #NiJia @ Chatbot Developer Taiwan 第 #19 小聚](https://www.youtube.com/watch?v=agYVz6dzh1I) by [Chatbot Developer Taiwan](https://www.youtube.com/channel/UCxeYUyZNnHmpX23YNF-ewvw)\n- 2020-05-28 - [Building APIs with Laravel using OpenAPI](https://www.youtube.com/watch?v=xexLvQqAhiA) by [Chris Tankersley](https://github.com/dragonmantank) at [Laracon EU](https://laracon.eu/)\n- 2020-06-12 - [Interoperability by construction: code generation for Arrowhead Clients](https://ieeexplore.ieee.org/document/9274746) by Michele Albano, Brian Nielsen at [2020 IEEE Conference on Industrial Cyberphysical Systems (ICPS)](https://ieeexplore.ieee.org/xpl/conhome/9274544/proceeding)\n- 2020-06-23 - [新規サーバーアプリケーションにTypeScriptを採用してみた](https://www.cam-inc.co.jp/news/20200623) at [CAM Tech Blog](https://www.cam-inc.co.jp/news/tech-blog/)\n- 2020-06-29 - [Artifact Abstract: Deployment of APIs on Android Mobile Devices and Microcontrollers](https://ieeexplore.ieee.org/document/9127353) by [Sergio Laso ; Marino Linaje ; Jose Garcia-Alonso ; Juan M. Murillo ; Javier Berrocal](https://ieeexplore.ieee.org/document/9127353/authors#authors) at [2020 IEEE International Conference on Pervasive Computing and Communications (PerCom)](https://ieeexplore.ieee.org/xpl/conhome/9125449/proceeding)\n- 2020-07-07 - [5 Best API Documentation Tools](https://blog.dreamfactory.com/5-best-api-documentation-tools/) by Susanna Bouse at [DreamFactory Blog](https://blog.dreamfactory.com/)\n- 2020-07-12 - [Open API 3.0の定義からgolangのサーバコードのスケルトンを作成する](https://qiita.com/professor/items/4cbd04ec084d13057bc2) by [@professor (Qiita Blog)](https://qiita.com/professor)\n- 2020-07-20 - [Datadog API client libraries now available for Java and Go](https://www.datadoghq.com/blog/java-go-libraries/) by Jordan Obey at [Datadog Blog](https://www.datadoghq.com/blog)\n- 2020-07-23 - [Generate Client SDK for .NET Core using Open Api](https://dev.to/no0law1/generate-client-sdk-for-net-core-using-open-api-2dgh) by [Nuno Reis](https://dev.to/no0law1)\n- 2020-07-26 - [Dartのhttp_interceptorライブラリを使うと配列のクエリパラメータが消えてしまう件の応急処置](https://qiita.com/gyamoto/items/eeeff81b6770487319ed) by [@gyamoto](https://qiita.com/gyamoto)\n- 2020-08-01 - [Generate Angular ReactiveForms from Swagger/OpenAPI](https://dev.to/martinmcwhorter/generate-angular-reactiveforms-from-swagger-openapi-35h9) by [Martin McWhorter](https://dev.to/martinmcwhorter)\n- 2020-08-03 - [Criando Bibliotecas para APIs RESTful com OpenAPI, Swagger Editor e OpenAPI Generator](https://medium.com/@everisBrasil/criando-bibliotecas-para-apis-restful-com-openapi-swagger-editor-e-openapi-generator-75349a6420fd) by [everis Brasil (an NTT DATA Company)](https://medium.com/@everisBrasil)\n- 2020-08-19 - [マイクロサービスを連携してみよう](https://thinkit.co.jp/article/17704) by [岡井 裕矢(おかい ゆうや)](https://thinkit.co.jp/author/17588), [泉 勝(いずみ まさる)](https://thinkit.co.jp/author/17705) at [Think IT（シンクイット）](https://thinkit.co.jp/)\n- 2020-08-25 - [OpenAPI Generator と TypeScript で型安全にフロントエンド開発をしている話](https://tech.smarthr.jp/entry/2020/08/25/135631) at [SmartHR Tech Blog](https://tech.smarthr.jp/)\n- 2020-09-10 - [Introduction to OpenAPI with Instana](https://www.instana.com/blog/introduction-to-openapi-with-instana/) by [Cedric Ziel](https://www.instana.com/blog/author/cedricziel/) at [Instana Blog](https://www.instana.com/blog/)\n- 2020-09-17 - [Generate PowerShellSDK using openapi-generator](https://medium.com/@ghufz.learn/generate-powershellsdk-using-openapi-generator-33b700891e33) by [Ghufran Zahidi](https://medium.com/@ghufz.learn)\n- 2020-09-24 - [How to automate API code generation (OpenAPI/Swagger) and boost productivity - Tutorial with React Native featuring TypeScript](https://medium.com/@sceleski/how-to-automate-api-code-generation-openapi-swagger-and-boost-productivity-1176a0056d8a) by [Sanjin Celeski](https://medium.com/@sceleski)\n- 2020-09-25 - [Generate OpenAPI Angular Client](https://medium.com/@pguso/generate-openapi-angular-client-8c9288e8bbd4) by [Patric](https://medium.com/@pguso)\n- 2020-10-24 - [Working with Microsoft Identity - React Native Client](https://www.josephguadagno.net/2020/10/24/working-with-microsoft-identity-react-native-client) by [Joseph Guadagno](https://www.josephguadagno.net/)\n- 2020-10-31 - [[B2] OpenAPI Specification으로 타입-세이프하게 API 개발하기: 희망편 VS 절망편](https://www.youtube.com/watch?v=J4JHLESAiFk) by 최태건 at [FEConf 2020](https://2020.feconf.kr/)\n- 2020-11-05 - [Automated REST-Api Code Generation: Wie IT-Systeme miteinander sprechen](https://www.massiveart.com/blog/automated-rest-api-code-generation-wie-it-systeme-miteinander-sprechen) by Stefan Rottensteiner at [MASSIVE ART Blog](https://www.massiveart.com/blog)\n- 2020-12-01 - [OpenAPI GeneratorでGoのAPIサーバー/クライアントコードを自動生成する](https://qiita.com/saki-engineering/items/b20d8b6074c4da9664a5) by [@saki-engineering](https://qiita.com/saki-engineering)\n- 2020-12-04 - [Scaling the Test Coverage of OpenAPI Generator for 30+ Programming Languages](https://www.youtube.com/watch?v=7Lke9dHRqT0) by [William Cheng](https://github.com/wing328) at [Open Source Summit Japan + Automotive Linux Summit 2020](https://events.linuxfoundation.org/archive/2020/open-source-summit-japan/) ([Slides](https://speakerdeck.com/wing328/scaling-the-test-coverage-of-openapi-generator-for-30-plus-programming-languages))\n- 2020-12-09 - [プロジェクトにOpenAPI Generatorで自動生成された型付きAPI Clientを導入した話](https://qiita.com/yoshifujiT/items/905c18700ede23f40840) by [@yoshifujiT](https://github.com/yoshifujiT)\n- 2020-12-15 - [Next.js + NestJS + GraphQLで変化に追従するフロントエンドへ 〜 ショッピングクーポンの事例紹介](https://techblog.yahoo.co.jp/entry/2020121530052952/) by [小倉 陸](https://github.com/ogugu9) at [Yahoo! JAPAN Tech Blog](https://techblog.yahoo.co.jp/)\n- 2021-01-08 - [Hello, New API – Part 1](https://www.nginx.com/blog/hello-new-api-part-1/) by [Jeremy Schulman](https://www.nginx.com/people/jeremy-schulman/) at [Major League Baseball](https://www.mlb.com)\n- 2021-01-18 - [「アプリ開発あるある」を疑うことから始まった、API Clientコードの自動生成【デブスト2020】](https://codezine.jp/article/detail/13406?p=2) by [CodeZine編集部](https://codezine.jp/author/1)\n- 2021-02-05 - [REST-API-Roundtrip with SpringDoc and OpenAPI Generator](https://blog.viadee.de/en/rest-api-roundtrip) by [Benjamin Klatt](https://twitter.com/benklatt) at [viadee](https://www.viadee.de/en/)\n- 2021-02-17 - [REST-API-Roundtrip with SpringDoc and OpenAPI Generator](https://medium.com/nerd-for-tech/rest-api-roundtrip-with-springdoc-and-openapi-generator-30bd27ccf698) by [cloud @viadee](https://cloud-viadee.medium.com/)\n- 2021-03-08 - [OpenAPI Generator 工具的躺坑尝试](https://blog.csdn.net/u013019701/article/details/114531975) by [独家雨天](https://blog.csdn.net/u013019701) at [CSDN官方博客](https://blog.csdn.net/)\n- 2021-03-16 - [如何基于 Swagger 使用 OpenAPI Generator 生成 JMeter 脚本？](https://cloud.tencent.com/developer/article/1802704) by [高楼Zee](https://cloud.tencent.com/developer/user/5836255) at [腾讯云专栏](https://cloud.tencent.com/developer/column)\n- 2021-03-24 - [openapi-generator-cli による TypeScript 型定義](https://zenn.dev/takepepe/articles/openapi-generator-cli-ts) by [Takefumi Yoshii](https://zenn.dev/takepepe)\n- 2021-03-28 - [Trying out NestJS part 4: Generate Typescript clients from OpenAPI documents](https://dev.to/arnaudcortisse/trying-out-nestjs-part-4-generate-typescript-clients-from-openapi-documents-28mk) by [Arnaud Cortisse](https://dev.to/arnaudcortisse)\n- 2021-03-31 - [Open API Server Implementation Using OpenAPI Generator](https://www.baeldung.com/java-openapi-generator-server) at [Baeldung](https://www.baeldung.com/)\n- 2021-03-31 - [使用OpenAPI Generator實現Open API Server](https://www.1ju.org/article/java-openapi-generator-server) at [億聚網](https://www.1ju.org/)\n- 2021-04-19 - [Introducing Twilio’s OpenAPI Specification Beta](https://www.twilio.com/blog/introducing-twilio-open-api-specification-beta) by [GARETH PAUL JONES](https://www.twilio.com/blog/author/gpj) at [Twilio Blog](https://www.twilio.com/blog)\n- 2021-04-22 - [Leveraging OpenApi strengths in a Micro-Service environment](https://medium.com/unibuddy-technology-blog/leveraging-openapi-strengths-in-a-micro-service-environment-3d7f9e7c26ff) by Nicolas Jellab at [Unibuddy Technology Blog](https://medium.com/unibuddy-technology-blog)\n- 2021-04-27 - [From zero to publishing PowerShell API clients in PowerShell Gallery within minutes](https://speakerdeck.com/wing328/from-zero-to-publishing-powershell-api-clients-in-powershell-gallery-within-minutes) by [William Cheng](https://github.com/wing328) at [PowerShell + DevOps Global Summit 2021](https://events.devopscollective.org/event/powershell-devops-global-summit-2021/)\n- 2021-05-31 - [FlutterでOpen Api Generator(Swagger)を使う](https://aakira.app/blog/2021/05/flutter-open-api/) by [AAkira](https://twitter.com/_a_akira)\n- 2021-06-22 - [Rest API Documentation and Client Generation With OpenAPI](https://dzone.com/articles/rest-api-documentation-and-client-generation-with) by [Prasanth Gullapalli](https://dzone.com/users/1011797/prasanthnath.g@gmail.com.html)\n- 2021-07-16 - [銀行事業のサーバーサイド開発について / LINE 京都開発室 エンジニア採用説明会](https://www.youtube.com/watch?v=YrrKQHxLPpQ) by 野田誠人, Robert Mitchell\n- 2021-07-19 - [OpenAPI code generation with kotlin](https://sylhare.github.io/2021/07/19/Openapi-swagger-codegen-with-kotlin.html) by [sylhare](https://github.com/sylhare)\n- 2021-07-29 - [How To Rewrite a Huge Codebase](https://dzone.com/articles/how-to-rewrite-a-huge-code-base) by [Curtis Poe](https://dzone.com/users/4565446/publiusovidius.html)\n- 2021-08-21 - [Generating Client APIs using Swagger Part 1](https://medium.com/@flowsquad/generating-client-apis-using-swagger-part-1-2d46f13f5e92) by [FlowSquad.io](https://medium.com/@flowsquad)\n- 2021-09-11 - [Invoking AWS ParallelCluster API](https://docs.aws.amazon.com/parallelcluster/latest/ug/api-reference-v3.html) at [AWS ParallelCluster API official documentation](https://docs.aws.amazon.com/parallelcluster/latest/ug/api-reference-v3.html)\n- 2021-09-20 - [OpenAPI Generator - The Babel Fish of the API World](https://www.youtube.com/watch?v=s2zMtwd5klg) by [Cliffano Subagio (Principal Engineer at Shine Solutions)](https://github.com/cliffano) at [Apidays LIVE Australia 2021](https://www.apidays.global/australia2021/)\n- 2021-10-02 - [How to Write Fewer Lines of Code with the OpenAPI Generator](https://hackernoon.com/how-to-write-fewer-lines-of-code-with-the-openapi-generator) by [Mikhail Alfa](https://hackernoon.com/u/alphamikle)\n- 2021-10-12 - [OpenAPI Generator : 4000 étoiles sur GitHub et des spaghettis](https://www.youtube.com/watch?v=9hEsNBSqTFk) by [Jérémie Bresson](https://github.com/jmini) at [Devoxx FR 2021](https://cfp.devoxx.fr/2021/speaker/jeremie_bresson)\n- 2021-10-17 - [Generate a TypeScript HTTP Client From An OpenAPI Spec In DotNET 5](https://richardwillis.info/blog/generate-a-type-script-http-client-from-an-open-api-spec-in-dot-net-5) by [Richard Willis](https://github.com/badsyntax)\n- 2021-11-06 - [スタートアップの開発で意識したこと](https://zenn.dev/woo_noo/articles/5cb09f8e2899ae782ad1) by [woo-noo](https://zenn.dev/woo_noo)\n- 2021-11-09 - [Effective Software Development using OpenAPI Generator](https://apexlabs.ai/post/effective-software-development-using-openapi-generator) by Ajil Oomme\n- 2021-12-07 - [An Introduction to OpenAPI](https://betterprogramming.pub/4-use-cases-of-openapi-which-are-good-to-know-1a041f4ad71e) by [Na'aman Hirschfeld](https://naamanhirschfeld.medium.com/)\n- 2022-01-02 - [Towards a secure API client generator for IoT devices](https://arxiv.org/abs/2201.00270) by Anders Aaen Springborg, Martin Kaldahl Andersen, Kaare Holland Hattel, Michele Albano\n- 2022-02-02 - [Use OpenApi generator to share your models between Flutter and your backend](https://www.youtube.com/watch?v=kPW7ccu9Yvk) by [Guillaume Bernos](https://feb2022.fluttervikings.com/speakers/guillaume_bernos) at [Flutter Vikings Conference 2022 (Hybrid)](https://feb2022.fluttervikings.com/)\n- 2022-03-15 - [OpenAPI Specでハイフン区切りのEnum値をOpenAPI Generatorで出力すると、ハイフン区切りのまま出力される](https://qiita.com/yuji38kwmt/items/824d74d4889055ab37d8) by [yuji38kwmt](https://qiita.com/yuji38kwmt)\n- 2022-04-01 - [OpenAPI Generatorのコード生成とSpring Frameworkのカスタムデータバインディングを共存させる](https://techblog.zozo.com/entry/coexistence-of-openapi-and-spring) in [ZOZO Tech Blog](https://techblog.zozo.com/)\n- 2022-04-06 - [Effective Software Development using OpenAPI Generator](https://apexlabs.ai/post/openapi-generator) by Ajil Oommen (Senior Flutter Developer)\n- 2022-05-13 - [A Path From an API To Client Libraries](https://www.youtube.com/watch?v=XC8oVn_efTw) by [Filip Srnec](https://www.devoxx.co.uk/talk/?id=11211) at Infobip\n- 2022-06-01 - [API First, using OpenAPI and Spring Boot](https://medium.com/xgeeks/api-first-using-openapi-and-spring-boot-2602c04bb0d3) by [Micael Estrázulas Vianna](https://estrazulas.medium.com/)\n- 2022-06-10 - [Autogenerating Clients with FastAPI and Github Actions](https://www.propelauth.com/post/autogenerating-clients-with-fastapi-and-github-actions) by [Andrew Israel](https://www.propelauth.com/author/andrew)\n- 2022-06-12 - [Mustache templates with OpenAPI specs](https://medium.com/geekculture/mustache-templates-with-openapi-specs-f24711c67dec) by [Beppe Catanese](https://github.com/gcatanese)\n- 2022-07-01 - [Generate API contract using OpenAPI Generator Maven plugin](https://huongdanjava.com/generate-api-contract-using-openapi-generator-maven-plugin.html) by [Khanh Nguyen](https://huongdanjava.com/)\n- 2022-07-22 - [使用OpenAPI Generator Maven plugin开发api优先的java客户端和服务端代码](https://blog.roccoshi.top/2022/java/openapi-generator%E7%9A%84%E4%BD%BF%E7%94%A8/) by [Lincest](https://github.com/Lincest)\n- 2022-08-01 - [Tutorial: Etsy Open API v3 (ruby)](https://blog.tjoyal.dev/etsy-open-api-v3/) by [Thierry Joyal](https://github.com/tjoyal)\n- 2022-09-03 - [OpenAPI Generator For Go Web Development](https://blog.kevinhu.me/2022/09/03/03-openapi-generator/) by [Kevin Hu](https://twitter.com/Oldgunix)\n- 2022-10-01 - [OpenAPI Generatorをカスタマイズしたコードを生成する（Swagger Codegenとほぼ同じ）](https://nainaistar.hatenablog.com/entry/2022/10/03/120000) by [きり丸](https://twitter.com/nainaistar)\n- 2022-10-21 - [Kotlin（Spring Boot）の API を OpenAPI Generator で自動生成](https://zenn.dev/msksgm/articles/20221021-kotlin-spring-openapi-generator) by [msksgm](https://zenn.dev/msksgm)\n- 2022-10-26 - [Quarkus Insights #106: Quarkiverse Extension Spotlight: OpenApi Generator](https://www.youtube.com/watch?v=_s_if69t2iQ) by [Quarkusio](https://www.youtube.com/c/Quarkusio)\n- 2022-11-28 - [The REST API implementation flow](https://tmsvr.com/openapi-code-generation-for-rest-apis/) by [Imre Tömösvári](https://tmsvr.com/author/imre/)\n- 2022-12-13 - [API-First with Spring WebFlux and OpenAPI Generator](https://boottechnologies-ci.medium.com/api-first-with-spring-webflux-and-openapi-generator-38b7804c4ed4) by [Eric Anicet](https://boottechnologies-ci.medium.com/)\n- 2023-01-06 - [Major Improvements with Helidon and OpenAPI](https://medium.com/helidon/major-improvements-with-helidon-and-openapi-f76a0951508e) by [Tim Quinn](https://medium.com/@tquinno600)\n- 2023-02-02 - [Replacing Postman with the Jetbrains HTTP Client](https://lengrand.fr/replacing-postman-in-seconds-with-the-jetbrains-http-client/) by [julien Lengrand-Lambert](https://github.com/jlengrand)\n- 2023-03-15 - [OpenAPI Generatorに適したOpenAPIの書き方](https://techblog.zozo.com/entry/how-to-write-openapi-for-openapi-generator) by [ZOZO Tech Blog](https://techblog.zozo.com/)\n- 2023-03-19 - [EXOGEM: Extending OpenAPI Generator for Monitoring of RESTful APIs](https://link.springer.com/chapter/10.1007/978-3-031-26507-5_10) by Daniel Friis Holtebo, Jannik Lucas Sommer, Magnus Mølgaard Lund, Alessandro Tibo, Junior Dongo & Michele Albano at \"ICSOC 2022: Service-Oriented Computing – ICSOC 2022 Workshops\"\n- 2023-03-28 - [API-First Design with OpenAPI Generator](https://www.linkedin.com/pulse/api-first-design-openapi-generator-jonathan-manera/) by [Jonathan Manera](https://www.linkedin.com/in/manerajona/)\n- 2023-03-28 - [ハンズオンで学ぶサーバーサイド Kotlin（Spring Boot&Arrow&OpenAPI Generator）v1.0.1](https://zenn.dev/msksgm/books/implementing-server-side-kotlin-development) by [msk](https://zenn.dev/msksgm)\n- 2023-04-01 - [OpenAPI Client Code Generation](https://testingboss.com/blog/openapi-client-generation/) by Kwo Ding\n- 2023-04-27 - [Create an Angular Client using OpenAPI Specifications](Create an Angular Client using OpenAPI Specifications) by [Patric](https://pguso.medium.com/)\n- 2023-05-16 - [Adyen for Java developers](https://www.adyen.com/blog/adyen-java-library) by [Beppe Catanese, Developer Advocate, Adyen](https://github.com/gcatanese)\n- 2023-05-18 - [如何基于 Swagger 使用 OpenAPI Generator 生成 JMeter 脚本？](https://blog.51cto.com/u_15181572/6294974) by [高楼（Zee)](https://blog.51cto.com/u_15181572)\n- 2023-06-28 - [Generate API contract using OpenAPI Generator Maven plugin](https://huongdanjava.com/generate-api-contract-using-openapi-generator-maven-plugin.html) by [Khanh Nguyen](https://huongdanjava.com/)\n- 2023-06-30 - [Generate Client SDKs with OpenApi Generator in Springboot](https://medium.com/@ramavathvinayak/generate-client-sdks-with-openapi-generator-in-springboot-f9f012e73c0b) by [Vinayak Ramavath](https://medium.com/@ramavathvinayak)\n- 2023-12-10 - [UnityでOpenAPI Generatorを使う](https://www.youtube.com/watch?v=CbNwKVV5LRM) by [Soup Tori](https://www.youtube.com/@souptori8417)\n- 2024-01-24 - [Comment générer des stubs wiremock avec openapi generator](https://www.youtube.com/watch?v=0jhONfBrcKw) by [Alexis Couvreur](https://github.com/acouvreur)\n- 2024-03-04 - [Generating TypeScript Types with OpenAPI for REST API Consumption](https://www.pullrequest.com/blog/generating-typescript-types-with-openapi-for-rest-api-consumption/) by [PullRequest](https://www.pullrequest.com/)\n- 2024-03-07 - [Fully typed Web Apps with OpenAPI (Part 1)](https://medium.com/@gfox1984/fully-typed-web-apps-with-openapi-part-1-595d55766670) by [Guillaume Renard](https://medium.com/@gfox1984)\n- 2024-03-08 - [Laravel OpenAPIによる \"辛くない\" スキーマ駆動開発](https://fortee.jp/phperkaigi-2024/proposal/9e2e6c38-d078-4efa-99b4-83ebf9033b34) by [KentarouTakeda](https://twitter.com/KentarouTakeda)\n- 2024-04-04 - [Working with OpenAPI using Rust](https://www.shuttle.dev/blog/2024/04/04/using-openapi-rust) by [Joshua Mo](https://twitter.com/joshmo_dev)\n- 2024-04-08 - [Implement API first strategy with OpenAPI generator plugin](https://medium.com/javarevisited/implement-api-first-strategy-with-openapi-generator-plugin-e4bbe7f0d778) by [Rui Zhou](https://medium.com/@wirelesser)\n- 2024-05-06 - [OpenAPI Generator Custom Templates](https://www.javacodegeeks.com/openapi-generator-custom-templates.html) by [Mary Zheng](https://www.javacodegeeks.com/author/mary-zheng)\n\n\n## [6 - About Us](#table-of-contents)\n\nWhat's the design philosophy or principle behind OpenAPI Generator?\n\nWe focus on developer experience. The generators should produce code, config, documentation, and more that are easily understandable and consumable by users. We focused on simple use cases to start with (bottom-up approach). Since then the project and the community have grown a lot: 600k weekly downloads via NPM CLI wrapper, 30M downloads via openapi-generator-cli docker image just to highlight a few. We've gradually supported more features (e.g. oneOf, anyOf introduced in OpenAPI 3.0) in various generators and we will continue this approach to deliver something based on our understanding of user demand and what they want, and continue to add support of new features introduced in OpenAPI specification (such as v3.1 and future versions of the OpenAPI specification).\n\n### [6.1 - OpenAPI Generator Core Team](#table-of-contents)\n\nOpenAPI Generator core team members are contributors who have been making significant contributions (review issues, fix bugs, make enhancements, etc) to the project on a regular basis.\n\n#### Core Team Members\n* [@wing328](https://github.com/wing328) (2015/07) [:heart:](https://www.patreon.com/wing328)\n* [@jimschubert](https://github.com/jimschubert) (2016/05) [:heart:](https://www.patreon.com/jimschubert)\n* [@cbornet](https://github.com/cbornet) (2016/05)\n* [@jmini](https://github.com/jmini) (2018/04)  [:heart:](https://www.patreon.com/jmini)\n* [@etherealjoy](https://github.com/etherealjoy) (2019/06)\n\n:heart: = Link to support the contributor directly\n\n#### Template Creator\n\n**NOTE**: Embedded templates are only supported in _Mustache_ format. Support for all other formats is experimental and subject to change at any time.\n\nHere is a list of template creators:\n * API Clients:\n   * Ada: @stcarrez\n   * Apex: @asnelling\n   * Bash: @bkryza\n   * C: @PowerOfCreation @zhemant [:heart:](https://www.patreon.com/zhemant)\n   * C++ REST: @Danielku15\n   * C++ Tiny: @AndersSpringborg @kaareHH @michelealbano @mkakbas\n   * C++ UE4: @Kahncode\n   * C# (.NET 2.0): @who\n   * C# (.NET Standard 1.3 ): @Gronsak\n   * C# (.NET 4.5 refactored): @jimschubert [:heart:](https://www.patreon.com/jimschubert)\n   * C# (GenericHost): @devhl-labs\n   * C# (HttpClient): @Blackclaws\n   * Clojure: @xhh\n   * Crystal: @wing328\n   * Dart: @yissachar\n   * Dart (refactor): @joernahrens\n   * Dart 2: @swipesight\n   * Dart (Jaguar): @jaumard\n   * Dart (Dio): @josh-burton\n   * Elixir: @niku\n   * Elm: @eriktim\n   * Eiffel: @jvelilla\n   * Erlang: @tsloughter\n   * Erlang (PropEr): @jfacorro @robertoaloi\n   * Groovy: @victorgit\n   * Go: @wing328 [:heart:](https://www.patreon.com/wing328)\n   * Go (rewritten in 2.3.0): @antihax\n   * Godot (GDScript): @Goutte [:heart:](https://liberapay.com/Goutte)\n   * Haskell (http-client): @jonschoning\n   * Java (Feign): @davidkiss\n   * Java (Retrofit): @0legg\n   * Java (Retrofit2): @emilianobonassi\n   * Java (Jersey2): @xhh\n   * Java (okhttp-gson): @xhh\n   * Java (RestTemplate): @nbruno\n   * Java (Spring 5 WebClient): @daonomic\n   * Java (Spring 6 RestClient): @nicklas2751\n   * Java (RESTEasy): @gayathrigs\n   * Java (Vertx): @lopesmcc\n   * Java (Google APIs Client Library): @charlescapps\n   * Java (Rest-assured): @viclovsky\n   * Java (Java 11 Native HTTP client): @bbdouglas\n   * Java (Apache HttpClient 5.x): @harrywhite4 @andrevegas\n   * Java (Helidon): @spericas @tjquinno @tvallin\n   * Javascript/NodeJS: @jfiala\n   * JavaScript (Apollo DataSource): @erithmetic\n   * JavaScript (Closure-annotated Angular) @achew22\n   * JavaScript (Flow types) @jaypea\n   * Jetbrains HTTP Client : @jlengrand\n   * JMeter: @davidkiss\n   * Julia: @tanmaykm\n   * Kotlin: @jimschubert [:heart:](https://www.patreon.com/jimschubert)\n   * Kotlin (MultiPlatform): @andrewemery\n   * Kotlin (Volley): @alisters\n   * Kotlin (jvm-spring-webclient): @stefankoppier\n   * Kotlin (jvm-spring-restclient): @stefankoppier\n   * Lua: @daurnimator\n   * N4JS: @mmews-n4\n   * Nim: @hokamoto\n   * OCaml: @cgensoul\n   * Perl: @wing328 [:heart:](https://www.patreon.com/wing328)\n   * PHP (Guzzle): @baartosz\n   * PHP (with Data Transfer): @Articus\n   * PowerShell: @beatcracker\n   * PowerShell (refactored in 5.0.0): @wing328\n   * Python: @spacether [:heart:][spacether sponsorship]\n   * Python-Experimental: @spacether [:heart:][spacether sponsorship]\n   * Python (refactored in 7.0.0): @wing328\n   * R: @ramnov\n   * Ruby (Faraday): @meganemura @dkliban\n   * Ruby (HTTPX): @honeyryderchuck\n   * Rust: @farcaller\n   * Rust (rust-server): @metaswitch\n   * Scala (scalaz & http4s): @tbrown1979\n   * Scala (Akka): @cchafer\n   * Scala (sttp): @chameleon82\n   * Scala (sttp4): @flsh86\n   * Scala (Pekko): @mickaelmagniez\n   * Scala (http4s): @JennyLeahy\n   * Swift: @tkqubo\n   * Swift 3: @hexelon\n   * Swift 4: @ehyche\n   * Swift 5: @4brunu\n   * Swift 6: @4brunu\n   * Swift Combine: @dydus0x14\n   * TypeScript (Angular1): @mhardorf\n   * TypeScript (Angular2): @roni-frantchi\n   * TypeScript (Angular6): @akehir\n   * TypeScript (Angular7): @topce\n   * TypeScript (Axios): @nicokoenig\n   * TypeScript (Fetch): @leonyu\n   * TypeScript (Inversify): @gualtierim\n   * TypeScript (jQuery): @bherila\n   * TypeScript (Nestjs): @vfrank66\n   * TypeScript (Node):  @mhardorf\n   * TypeScript (Rxjs): @denyo\n   * TypeScript (redux-query): @petejohansonxo\n   * Xojo: @Topheee\n   * Zapier: @valmoz, @emajo\n * Server Stubs\n   * Ada: @stcarrez\n   * C# ASP.NET 5: @jimschubert [:heart:](https://www.patreon.com/jimschubert)\n   * C# ASP.NET Core 3.0: @A-Joshi\n   * C# APS.NET Core 3.1: @phatcher\n   * C# Azure functions: @Abrhm7786\n   * C# NancyFX: @mstefaniuk\n   * C++ (Qt5 QHttpEngine): @etherealjoy\n   * C++ Pistache: @sebymiano\n   * C++ Restbed: @stkrwork\n   * Erlang Server: @galaxie @nelsonvides\n   * F# (Giraffe) Server: @nmfisher\n   * Go Server: @guohuang\n   * Go Server (refactored in 7.0.0): @lwj5\n   * Go (Echo) Server: @ph4r5h4d\n   * Go (Gin) Server: @kemokemo\n   * GraphQL Express Server: @renepardon\n   * Haskell Servant: @algas\n   * Haskell Yesod: @yotsuya\n   * Java Camel: @carnevalegiacomo\n   * Java MSF4J: @sanjeewa-malalgoda\n   * Java Spring Boot: @diyfr\n   * Java Undertow: @stevehu\n   * Java Play Framework: @JFCote\n   * Java PKMST: @anshu2185 @sanshuman @rkumar-pk @ninodpillai\n   * Java Vert.x: @lwlee2608\n   * Java Micronaut: @andriy-dmytruk\n   * Java Helidon: @spericas @tjquinno @tvallin\n   * Java WireMock: [@acouvreur](https://github.com/acouvreur)\n   * JAX-RS RestEasy: @chameleon82\n   * JAX-RS CXF: @hiveship\n   * JAX-RS CXF (CDI): @nickcmaynard\n   * JAX-RS RestEasy (JBoss EAP): @jfiala\n   * Julia: @tanmaykm\n   * Kotlin: @jimschubert [:heart:](https://www.patreon.com/jimschubert)\n   * Kotlin (Spring Boot): @dr4ke616\n   * Kotlin (Vertx): @Wooyme\n   * Kotlin (JAX-RS): @anttileppa\n   * Kotlin WireMock: @stefankoppier\n   * NodeJS Express: @YishTish\n   * PHP Flight: @daniel-sc\n   * PHP Laravel: @renepardon\n   * PHP Lumen: @abcsun\n   * PHP Mezzio (with Path Handler): @Articus\n   * PHP Slim: @jfastnacht\n   * PHP Slim4: [@ybelenko](https://github.com/ybelenko)\n   * PHP Symfony: @ksm2\n   * PHP Symfony6: @BenjaminHae\n   * Python FastAPI: @krjakbrjak\n   * Python AIOHTTP:\n   * Ruby on Rails 5: @zlx\n   * Rust (rust-server): @metaswitch\n   * Scala Akka: @Bouillie\n   * Scala Cask: @aaronp\n   * Scala Finch: @jimschubert [:heart:](https://www.patreon.com/jimschubert)\n   * Scala Lagom: @gmkumar2005\n   * Scala Play: @adigerber\n * Documentation\n   * AsciiDoc: @man-at-home\n   * HTML Doc 2: @jhitchcock\n   * Confluence Wiki: @jhitchcock\n   * PlantUML: @pburls\n * Configuration\n   * Apache2: @stkrwork\n   * k6: @mostafa\n * Schema\n   * Avro: @sgadouar\n   * GraphQL: @wing328 [:heart:](https://www.patreon.com/wing328)\n   * Ktorm: @Luiz-Monad\n   * MySQL: [@ybelenko](https://github.com/ybelenko)\n   * PostgreSQL: [@iri](https://github.com/iri)\n   * Postman Collection: @gcatanese\n   * Protocol Buffer: @wing328\n   * WSDL: @adessoDpd\n\n:heart: = Link to support the contributor directly\n\n#### How to join the core team\n\nHere are the requirements to become a core team member:\n- rank within top 50 in https://github.com/openapitools/openapi-generator/graphs/contributors\n  - to contribute, here are some good [starting points](https://github.com/openapitools/openapi-generator/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22)\n- regular contributions to the project\n  - about 3 hours per week\n  - for contribution, it can be addressing issues, reviewing PRs submitted by others, submitting PR to fix bugs or make enhancements, etc\n  - must be active in the past 3 months at the time of application\n\n To join the core team, please reach out to team@openapitools.org for more information.\n\n To become a Template Creator, simply submit a PR for new API client (e.g. Rust, Elixir) or server stub (e.g. Ruby Grape) generator.\n\n### [6.2 - OpenAPI Generator Technical Committee](#table-of-contents)\n\nMembers of the OpenAPI Generator technical committee shoulder the following responsibilities:\n\n- Provides guidance and direction to other users\n- Reviews pull requests and issues\n- Improves the generator by making enhancements, fixing bugs or updating documentations\n- Sets the technical direction of the generator\n\nWho is eligible? Those who want to join must have at least 3 PRs merged into a generator. (Exceptions can be granted to template creators or contributors who have made a lot of code changes with less than 3 merged PRs)\n\nIf you want to join the committee, please kindly apply by sending an email to team@openapitools.org with your Github ID.\n\n#### Members of Technical Committee\n\n| Languages/Generators  | Member (join date)                                                                                                                                                                                                                                    |\n|:----------------------|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| ActionScript          |                                                                                                                                                                                                                                                       |\n| Ada                   | @stcarrez (2018/02) @michelealbano (2018/02)                                                                                                                                                                                                          |\n| Android               | @jaz-ah (2017/09)                                                                                                                                                                                                                                     |\n| Apex                  |                                                                                                                                                                                                                                                       |\n| Bash                  | @frol (2017/07) @bkryza (2017/08) @kenjones-cisco (2017/09)                                                                                                                                                                                           |\n| C                     | @zhemant (2018/11) @ityuhui (2019/12) @michelealbano (2020/03) @eafer (2024/12)                                                                                                                                                                                        |\n| C++                   | @ravinikam (2017/07) @stkrwork (2017/07) @etherealjoy (2018/02) @martindelille (2018/03) @muttleyxd (2019/08)                                                                                                                                         |\n| C#                    | @mandrean (2017/08) @shibayan (2020/02) @Blackclaws (2021/03) @lucamazzanti (2021/05) @iBicha (2023/07)                                                                                                                                          |\n| Clojure               |                                                                                                                                                                                                                                                       |\n| Crystal               | @cyangle (2021/01)                                                                                                                                                                                                                                    |\n| Dart                  | @jaumard (2018/09) @josh-burton (2019/12) @amondnet (2019/12) @sbu-WBT (2020/12) @kuhnroyal (2020/12) @agilob (2020/12) @ahmednfwela (2021/08)                                                                                                        |\n| Eiffel                | @jvelilla (2017/09)                                                                                                                                                                                                                                   |\n| Elixir                | @mrmstn (2018/12)                                                                                                                                                                                                                                     |\n| Elm                   | @eriktim (2018/09)                                                                                                                                                                                                                                    |\n| Erlang                | @tsloughter (2017/11) @jfacorro (2018/10) @robertoaloi (2018/10) @nelsonvides (2024/09)                                                                                                                                                               |\n| F#                    | @nmfisher (2019/05)                                                                                                                                                                                                                                   |\n| Go                    | @antihax (2017/11) @grokify (2018/07) @kemokemo (2018/09) @jirikuncar (2021/01) @ph4r5h4d (2021/04) @lwj5 (2023/04)                                                                                                                                                   |\n| GraphQL               | @renepardon (2018/12)                                                                                                                                                                                                                                 |\n| Groovy                |                                                                                                                                                                                                                                                       |\n| Haskell               |                                                                                                                                                                                                                                                       |\n| Java                  | @bbdouglas (2017/07) @sreeshas (2017/08) @jfiala (2017/08) @lukoyanov (2017/09) @cbornet (2017/09) @jeff9finger (2018/01) @karismann (2019/03) @Zomzog (2019/04) @lwlee2608 (2019/10) @martin-mfg (2023/08)                                                                 |\n| Java Spring           | @cachescrubber (2022/02) @welshm (2022/02) @MelleD (2022/02) @atextor (2022/02) @manedev79 (2022/02) @javisst (2022/02) @borsch (2022/02) @banlevente (2022/02) @Zomzog (2022/09) @martin-mfg (2023/08)                                                                     |\n| JMeter                | @kannkyo (2021/01)                                                                                                                                                                                                                                    |\n| Jetbrains HTTP Client | @jlengrand (2023/01)                                                                                                                                                                                                                                  |\n| Julia                 | @tanmaykm (2023/01)                                                                                                                                                                                                                                   |\n| Kotlin                | @dr4ke616 (2018/08) @karismann (2019/03) @Zomzog (2019/04) @andrewemery (2019/10) @4brunu (2019/11) @yutaka0m (2020/03) @stefankoppier (2022/06) @e5l (2024/10)                                          |\n| Lua                   | @daurnimator (2017/08)                                                                                                                                                                                                                                |\n| N4JS                  | @mmews-n4 (2023/03)                                                                                                                                                                                      |\n| Nim                   |                                                                                                                                                                                                                                                       |\n| NodeJS/Javascript     | @CodeNinjai (2017/07) @frol (2017/07) @cliffano (2017/07)                                                                                                                                                                                             |\n| ObjC                  |                                                                                                                                                                                                                                                       |\n| OCaml                 | @cgensoul (2019/08)                                                                                                                                                                                                                                   |\n| Perl                  | @wing328 (2017/07) [:heart:](https://www.patreon.com/wing328) @yue9944882 (2019/06)                                                                                                                                                                   |\n| PHP                   | @jebentier (2017/07), @dkarlovi (2017/07), @mandrean (2017/08), @jfastnacht (2017/09), [@ybelenko](https://github.com/ybelenko) (2018/07), @renepardon (2018/12)                                                                                      |\n| PowerShell            | @wing328 (2020/05)                                                                                                                                                                                                                                    |\n| Python                | @cbornet (2017/09) @tomplus (2018/10) @krjakbrjak (2023/02) @fa0311 (2023/10) @multani (2023/10) |\n| R                     | @Ramanth (2019/07) @saigiridhar21 (2019/07)                                                                                                                                                                                                           |\n| Ruby                  | @cliffano (2017/07) @zlx (2017/09) @autopp (2019/02)                                                                                                                                                                                                  |\n| Rust                  | @frol (2017/07) @farcaller (2017/08) @richardwhiuk (2019/07) @paladinzh (2020/05) @jacob-pro (2022/10)                                                                                                                                                |\n| Scala                 | @clasnake (2017/07), @shijinkui  (2018/01), @ramzimaalej (2018/03), @chameleon82 (2020/03), @Bouillie (2020/04) @fish86 (2023/06)                                                               |\n| Swift                 | @jgavris (2017/07) @ehyche (2017/08) @Edubits (2017/09) @jaz-ah (2017/09) @4brunu (2019/11) @dydus0x14 (2023/06)                                                                                                                                                           |\n| TypeScript            | @TiFu (2017/07) @taxpon (2017/07) @sebastianhaas (2017/07) @kenisteward (2017/07) @Vrolijkx (2017/09) @macjohnny (2018/01) @topce (2018/10) @akehir (2019/07) @petejohansonxo (2019/11) @amakhrov (2020/02) @davidgamero (2022/03) @mkusaka (2022/04) @joscha (2024/10)    |\n| Xojo                  | @Topheee (2023/04)                                                                                                                                                                                                                                    |\n\n\nPast Members of Technical Committee:\n| Languages/Generators         | Member (join date)                                                                                                                                                                                                                |\n| :---------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| Python            | @taxpon (2017/07) @frol (2017/07) @mbohlool (2017/07) @cbornet (2017/09) @kenjones-cisco (2017/11) @tomplus (2018/10) @arun-nalla (2019/11)  |\n\n\n:heart: = Link to support the contributor directly\n\n### [6.3 - History of OpenAPI Generator](#table-of-contents)\n\nOpenAPI Generator is a fork of [Swagger Codegen](https://github.com/swagger-api/swagger-codegen). In view of the issues with the Swagger Codegen 3.0.0 (beta) release and the disagreement on the project's direction, more than 40 top contributors and template creators of Swagger Codegen decided to fork Swagger Codegen and maintain a community-driven version called \"OpenAPI Generator\". Please refer to the [Q&A](docs/qna.md) for more information.\n\n#### Founding Members (alphabetical order):\n\n- [Akihito Nakano](https://github.com/ackintosh)\n- [Artem Ocheredko](https://github.com/galaxie)\n- [Arthur Mogliev](https://github.com/Articus)\n- [Bartek Kryza](https://github.com/bkryza)\n- [Ben Wells](https://github.com/bvwells)\n- [Benjamin Gill](https://github.com/bjgill)\n- [Christophe Bornet](https://github.com/cbornet)\n- [Cliffano Subagio](https://github.com/cliffano)\n- [Daiki Matsudate](https://github.com/d-date)\n- [Daniel](https://github.com/Danielku15)\n- [Emiliano Bonassi](https://github.com/emilianobonassi)\n- [Erik Timmers](https://github.com/eriktim)\n- [Esteban Gehring](https://github.com/macjohnny)\n- [Gustavo Paz](https://github.com/gustavoapaz)\n- [Javier Velilla](https://github.com/jvelilla)\n- [Jean-François Côté](https://github.com/JFCote)\n- [Jim Schubert](https://github.com/jimschubert)\n- [Jon Schoning](https://github.com/jonschoning)\n- [Jérémie Bresson](https://github.com/jmini) [:heart:](https://www.patreon.com/jmini)\n- [Jörn Ahrens](https://github.com/jayearn)\n- [Keni Steward](https://github.com/kenisteward)\n- [Marcin Stefaniuk](https://github.com/mstefaniuk)\n- [Martin Delille](https://github.com/MartinDelille)\n- [Masahiro Yamauchi](https://github.com/algas)\n- [Michele Albano](https://github.com/michelealbano)\n- [Ramzi Maalej](https://github.com/ramzimaalej)\n- [Ravindra Nikam](https://github.com/ravinikam)\n- [Ricardo Cardona](https://github.com/ricardona)\n- [Sebastian Haas](https://github.com/sebastianhaas)\n- [Sebastian Mandrean](https://github.com/mandrean)\n- [Sreenidhi Sreesha](https://github.com/sreeshas)\n- [Stefan Krismann](https://github.com/stkrwork)\n- [Stephane Carrez](https://github.com/stcarrez)\n- [Takuro Wada](https://github.com/taxpon)\n- [Tomasz Prus](https://github.com/tomplus)\n- [Tristan Sloughter](https://github.com/tsloughter)\n- [Victor Orlovsky](https://github.com/viclovsky)\n- [Victor Trakhtenberg](https://github.com/victorgit)\n- [Vlad Frolov](https://github.com/frol)\n- [Vladimir Pouzanov](https://github.com/farcaller)\n- [William Cheng](https://github.com/wing328)\n- [Xin Meng](https://github.com/xmeng1) [:heart:](https://www.patreon.com/user/overview?u=16435385)\n- [Xu Hui Hui](https://github.com/xhh)\n- [antihax](https://github.com/antihax)\n- [beatcracker](https://github.com/beatcracker)\n- [daurnimator](https:/github.com/daurnimator)\n- [etherealjoy](https://github.com/etherealjoy)\n- [jfiala](https://github.com/jfiala)\n- [lukoyanov](https://github.com/lukoyanov)\n\n:heart: = Link to support the contributor directly\n\n## [7 - License](#table-of-contents)\n-------\n\nCopyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)\nCopyright 2018 SmartBear Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at [apache.org/licenses/LICENSE-2.0](https://www.apache.org/licenses/LICENSE-2.0)\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n---\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 1.12890625,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\n# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n\n  config.vm.box = \"ubuntu/bionic64\"\n\n  config.vm.provider \"virtualbox\" do |v|\n    v.name = \"openapi-generator\"\n    v.memory = 2048\n    v.cpus = 2\n  end\n\n  config.vm.box_check_update = true\n\n  #SSH\n  config.ssh.forward_agent = true\n\n  config.ssh.shell = \"bash -c 'BASH_ENV=/etc/profile exec bash'\"\n\n  #Provision\n  config.vm.provision \"shell\", inline: <<-SHELL\n    sudo apt-get update\n    sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common\n    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -\n    sudo add-apt-repository  \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n          $(lsb_release -cs) stable\"\n    sudo sh -c 'echo \"deb https://apt.dockerproject.org/repo ubuntu-cosmic main\" > /etc/apt/sources.list.d/docker.list'\n    sudo apt-get update\n    sudo apt-get upgrade -y\n    sudo apt-get install -y docker-ce\n    sudo usermod -aG docker vagrant\n  SHELL\n\nend\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 8.9052734375,
          "content": "version: '{branch}-{build}'\nimage: Visual Studio 2022\nhosts:\n  petstore.swagger.io: 127.0.0.1\ninstall:\n  - cmd: SET PATH=C:\\maven\\apache-maven-3.8.3\\bin;C:\\gradle\\gradle-7.6\\bin;%JAVA_HOME%\\bin;%PATH%\n  - cmd: SET MAVEN_OPTS=-Xmx4g\n  - cmd: SET JAVA_OPTS=-Xmx4g\n  - cmd: SET M2_HOME=C:\\maven\\apache-maven-3.8.3\n  - cmd: java -version\n  - cmd: dir/w\n  - cmd: docker pull swaggerapi/petstore\n  - cmd: docker run -d -e SWAGGER_HOST=http://petstore.swagger.io -e SWAGGER_BASE_PATH=/v2 -p 80:8080 swaggerapi/petstore \n  - ps: Start-Sleep -s 120\n  - ps: $PSVersionTable.PSVersion\n  - ps: Install-Module -Name Pester -Force -Scope CurrentUser -SkipPublisherCheck\nbuild_script:\n  - dotnet --info\n  # build C# aspnetcore 5.0 server\n  #- dotnet build samples\\server\\petstore\\aspnetcore-5.0\\Org.OpenAPITools.sln\n  ## build C# aspnetcore 3.1 server\n  #- dotnet build samples\\server\\petstore\\aspnetcore-3.1\\Org.OpenAPITools.sln\n  ## build C# aspnetcore 3.0 server\n  #- dotnet build samples\\server\\petstore\\aspnetcore-3.0\\Org.OpenAPITools.sln\n  ## build C# aspnetcore 2.2 server\n  #- dotnet build samples\\server\\petstore\\aspnetcore\\Org.OpenAPITools.sln\n  ## build C# API client (multiple frameworks)\n  #- dotnet build samples\\client\\petstore\\csharp\\OpenAPIClientCoreAndNet47\\Org.OpenAPITools.sln\n  ## build C# API client (httpclient)\n  #- dotnet build samples\\client\\petstore\\csharp\\OpenAPIClient-httpclient\\Org.OpenAPITools.sln\n  ## build C# API client (generichost)\n  #- dotnet build samples\\client\\petstore\\csharp\\OpenAPIClient-generichost-netstandard2.0\\Org.OpenAPITools.sln\n  ## build C# API client (netcore)\n  #- dotnet build samples\\client\\petstore\\csharp\\OpenAPIClient\\Org.OpenAPITools.sln\n  #- dotnet build samples\\client\\petstore\\csharp\\OpenAPIClientCore\\Org.OpenAPITools.sln\n  ## build C# API client (.net framework 4.7)\n  #- dotnet build samples\\client\\petstore\\csharp\\OpenAPIClient-net47\\Org.OpenAPITools.sln\n  ## build C# API client (.net framework 4.8)\n  #- dotnet build samples\\client\\petstore\\csharp\\OpenAPIClient-net48\\Org.OpenAPITools.sln\n  ## build C# API client (.net 5.0)\n  #- dotnet build samples\\client\\petstore\\csharp\\OpenAPIClient-net5.0\\Org.OpenAPITools.sln\n  ## build C# API client (.net 5.0 with ConditionalSerialization)\n  #- dotnet build samples\\client\\petstore\\csharp\\OpenAPIClient-ConditionalSerialization\\Org.OpenAPITools.sln\n\ntest_script:\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\AllOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\AnyOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\AnyOfNoCompare\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\FormModels\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  # - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\ManualSourceGenerationTests\\ManualTests.Latest.UseSourceGeneration\\ManualTests.Latest.UseSourceGeneration.csproj\n  # - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\ManualPetstoreTests\\OpenAPIClient-generichost-manual-tests\\OpenAPIClient-generichost-manual-tests.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\NullReferenceTypes\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\OneOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\Petstore\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\SourceGeneration\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net9\\UseDateTimeForDate\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\AllOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\AnyOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\AnyOfNoCompare\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\FormModels\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\ManualSourceGenerationTests\\ManualTests.Latest.UseSourceGeneration\\ManualTests.Latest.UseSourceGeneration.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\ManualPetstoreTests\\OpenAPIClient-generichost-manual-tests\\OpenAPIClient-generichost-manual-tests.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\NullReferenceTypes\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\OneOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\Petstore\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\SourceGeneration\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net8\\UseDateTimeForDate\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\standard2.0\\Petstore\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.8\\AllOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.8\\AnyOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.8\\AnyOfNoCompare\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.8\\FormModels\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.8\\OneOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.8\\Petstore\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.8\\UseDateTimeForDate\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.7\\AllOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.7\\AnyOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.7\\AnyOfNoCompare\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.7\\FormModels\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.7\\OneOf\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.7\\Petstore\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\generichost\\net4.7\\UseDateTimeForDate\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n\n  - dotnet test samples\\client\\petstore\\csharp\\httpclient\\standard2.0\\Petstore\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n\n  - dotnet test samples\\client\\petstore\\csharp\\restsharp\\net4.7\\MultipleFrameworks\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\restsharp\\net4.7\\Petstore\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\restsharp\\net4.8\\Petstore\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\restsharp\\net8\\ParameterMappings\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\restsharp\\net8\\EnumMappings\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\restsharp\\net8\\Petstore\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\restsharp\\net8\\UseDateTimeForDate\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\restsharp\\standard2.0\\ConditionalSerialization\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n  - dotnet test samples\\client\\petstore\\csharp\\restsharp\\standard2.0\\Petstore\\src\\Org.OpenAPITools.Test\\Org.OpenAPITools.Test.csproj\n\n### TODO: Execute all generators via powershell or other\n  # generate all petstore clients\n  # - .\\bin\\windows\\run-all-petstore.cmd\n  # generate all petstore clients (openapi3)\n  # - .\\bin\\openapi3\\windows\\run-all-petstore.cmd\n\n  # test ps petstore\n  - ps: |\n      cd samples\\client\\petstore\\powershell\\\n      .\\CIRunTest.ps1\ncache:\n  - C:\\maven\\\n  - C:\\gradle\\\n  - C:\\Users\\appveyor\\.m2\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "bitrise.yml",
          "type": "blob",
          "size": 1.107421875,
          "content": "---\nformat_version: '8'\ndefault_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git\nproject_type: other\ntrigger_map:\n- push_branch: \"*\"\n  workflow: primary\n- pull_request_source_branch: \"*\"\n  workflow: primary\nworkflows:\n  primary:\n    steps:\n    - git-clone@8.0.0: {}\n    - script@1.2.0:\n        title: Install Cocoapods\n        inputs:\n        - content: |\n            #!/usr/bin/env bash\n\n            sudo gem install cocoapods\n    - script@1.2.0:\n        title: Run Swift6 tests\n        inputs:\n        - content: |\n            #!/usr/bin/env bash\n\n            set -e\n\n            ./samples/client/petstore/swift6/swift6_test_all.sh\n    - script@1.2.0:\n        title: Run Swift5 tests\n        inputs:\n        - content: |\n            #!/usr/bin/env bash\n\n            set -e\n\n            ./samples/client/petstore/swift5/swift5_test_all.sh\n    - script@1.2.0:\n        title: Run swift-combine tests\n        inputs:\n        - content: |\n            #!/usr/bin/env bash\n\n            set -e\n\n            ./samples/client/petstore/swift-combine/swift-combine_test_all.sh\n\nmeta:\n  bitrise.io:\n    stack: osx-xcode-16.0.x\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.4853515625,
          "content": "version: \"3\"\n\nservices:\n  docusaurus:\n    build: .\n    ports:\n      - 3000:3000\n      - 35729:35729\n    volumes:\n      - ./docs:/app/docs\n      - ./website/blog:/app/website/blog\n      - ./website/core:/app/website/core\n      - ./website/i18n:/app/website/i18n\n      - ./website/pages:/app/website/pages\n      - ./website/static:/app/website/static\n      - ./website/sidebars.json:/app/website/sidebars.json\n      - ./website/siteConfig.js:/app/website/siteConfig.js\n    working_dir: /app/website\n"
        },
        {
          "name": "docker-entrypoint.sh",
          "type": "blob",
          "size": 1.765625,
          "content": "#!/usr/bin/env bash\n\nset -euo pipefail\n\n# GEN_DIR allows to share the entrypoint between Dockerfile and run-in-docker.sh (backward compatible)\nGEN_DIR=${GEN_DIR:-/opt/openapi-generator}\nJAVA_OPTS=${JAVA_OPTS:-\"-DloggerPath=conf/log4j.properties\"}\n\ncli=\"${GEN_DIR}/modules/openapi-generator-cli\"\ncodegen=\"${cli}/target/openapi-generator-cli.jar\"\n\n# We code in a list of commands here as source processing is potentially buggy (requires undocumented conventional use of annotations).\n# A list of known commands helps us determine if we should compile CLI. There's an edge-case where a new command not added to this\n# list won't be considered a \"real\" command. We can get around that a bit by checking CLI completions beforehand if it exists.\ncommands=\"config-help,generate,batch,help,list,meta,validate,version\"\n\nif [ $# == 0 ]; then\n    echo \"No command specified. Available commands:\"\n    for i in $(echo $commands | sed \"s/,/ /g\"); do\n        echo \"  $i\"\n    done\n    exit\nfi\n\n# if CLI jar exists, check $1 against completions available in the CLI\nif [[ -f \"${codegen}\" && -n \"$(java ${JAVA_OPTS} -jar \"${codegen}\" completion | grep \"^$1\\$\" )\" ]]; then\n    command=$1\n    shift\n    exec java ${JAVA_OPTS} -jar \"${codegen}\" \"${command}\" \"$@\"\nelif [[ -n \"$(echo $commands | tr ',' '\\n' | grep \"^$1\\$\" )\" ]]; then\n    # If CLI jar does not exist, and $1 is a known CLI command, build the CLI jar and run that command.\n    if [[ ! -f \"${codegen}\" ]]; then\n        (cd \"${GEN_DIR}\" && exec mvn -am -pl \"modules/openapi-generator-cli\" -Duser.home=$(dirname $MAVEN_CONFIG) package)\n    fi\n    command=$1\n    shift\n    exec java ${JAVA_OPTS} -jar \"${codegen}\" \"${command}\" \"$@\"\nelse\n    # Pass args as linux commands. This allows us to do something like: docker run -it (-e…, -v…) image ls -la\n    exec \"$@\"\nfi\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 0.96875,
          "content": "{\n  \"nodes\": {\n    \"flake-utils\": {\n      \"locked\": {\n        \"lastModified\": 1676283394,\n        \"narHash\": \"sha256-XX2f9c3iySLCw54rJ/CZs+ZK6IQy7GXNY4nSOyu2QG4=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"3db36a8b464d0c4532ba1c7dda728f4576d6d073\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1678083093,\n        \"narHash\": \"sha256-eTkS9GcdSAYA3cE9zCAAs9wY3+oM2zT45ydIkAcEFFQ=\",\n        \"owner\": \"nixos\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"684306b246d05168e42425a3610df7e2c4d51fcd\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nixos\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 0.49609375,
          "content": "{\n  description = \"OpenAPI generator nix flake\";\n\n  inputs.nixpkgs.url = \"github:nixos/nixpkgs\";  \n  inputs.flake-utils.url = \"github:numtide/flake-utils\";\n\n  outputs = { self, nixpkgs, flake-utils, ... }:\n    flake-utils.lib.eachDefaultSystem (system:\n      let\n        pkgs = import nixpkgs { inherit system; };\n      in\n      {\n        devShells.default = pkgs.mkShell\n          {\n            buildInputs = with pkgs;[\n              jdk11\n              maven\n            ];\n          };\n      }\n    );\n}\n\n"
        },
        {
          "name": "google_checkstyle.xml",
          "type": "blob",
          "size": 10.6640625,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\" \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<!-- \n    Adjusted from original Google Checkstyle config - https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml\n    For details, see further comments in this file.\n-->\n\n<!--\n    Checkstyle configuration that checks the Google coding conventions from Google Java Style\n    that can be found at https://google.github.io/styleguide/javaguide.html.\n\n    Checkstyle is very configurable. Be sure to read the documentation at\n    http://checkstyle.sf.net (or in your downloaded distribution).\n\n    To completely disable a check, just comment it out or delete it from the file.\n\n    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.\n -->\n\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n\n    <property name=\"severity\" value=\"warning\"/>\n\n    <property name=\"fileExtensions\" value=\"java, properties, xml\"/>\n    <!-- Checks for whitespace                               -->\n    <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n    <module name=\"FileTabCharacter\">\n        <property name=\"eachLine\" value=\"true\"/>\n    </module>\n\n    <module name=\"TreeWalker\">\n        <module name=\"OuterTypeFilename\"/>\n        <module name=\"IllegalTokenText\">\n            <property name=\"tokens\" value=\"STRING_LITERAL, CHAR_LITERAL\"/>\n            <property name=\"format\" value=\"\\\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\"/>\n            <property name=\"message\" value=\"Avoid using corresponding octal or Unicode escape.\"/>\n        </module>\n        <module name=\"AvoidEscapedUnicodeCharacters\">\n            <property name=\"allowEscapesForControlCharacters\" value=\"true\"/>\n            <property name=\"allowByTailComment\" value=\"true\"/>\n            <property name=\"allowNonPrintableEscapes\" value=\"true\"/>\n        </module>\n        <module name=\"LineLength\">\n            <property name=\"max\" value=\"100\"/>\n            <property name=\"ignorePattern\" value=\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/>\n        </module>\n        <module name=\"AvoidStarImport\"/>\n        <module name=\"OneTopLevelClass\"/>\n        <module name=\"NoLineWrap\"/>\n        <module name=\"EmptyBlock\">\n            <property name=\"option\" value=\"TEXT\"/>\n            <property name=\"tokens\" value=\"LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH\"/>\n        </module>\n        <module name=\"NeedBraces\"/>\n        <module name=\"LeftCurly\"/>\n        <module name=\"RightCurly\">\n            <property name=\"option\" value=\"alone\"/>\n            <property name=\"tokens\" value=\"CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT\"/>\n        </module>\n        <module name=\"WhitespaceAround\">\n            <property name=\"allowEmptyConstructors\" value=\"true\"/>\n            <property name=\"allowEmptyMethods\" value=\"true\"/>\n            <property name=\"allowEmptyTypes\" value=\"true\"/>\n            <property name=\"allowEmptyLoops\" value=\"true\"/>\n            <message key=\"ws.notFollowed\" value=\"WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)\"/>\n            <message key=\"ws.notPreceded\" value=\"WhitespaceAround: ''{0}'' is not preceded with whitespace.\"/>\n        </module>\n        <module name=\"OneStatementPerLine\"/>\n        <module name=\"MultipleVariableDeclarations\"/>\n        <module name=\"ArrayTypeStyle\"/>\n        <module name=\"MissingSwitchDefault\"/>\n        <module name=\"FallThrough\"/>\n        <module name=\"UpperEll\"/>\n        <module name=\"ModifierOrder\"/>\n        <module name=\"EmptyLineSeparator\">\n            <property name=\"allowNoEmptyLineBetweenFields\" value=\"true\"/>\n        </module>\n        <module name=\"SeparatorWrap\">\n            <property name=\"tokens\" value=\"DOT\"/>\n            <property name=\"option\" value=\"nl\"/>\n        </module>\n        <module name=\"SeparatorWrap\">\n            <property name=\"tokens\" value=\"COMMA\"/>\n            <property name=\"option\" value=\"EOL\"/>\n        </module>\n        <module name=\"PackageName\">\n            <property name=\"format\" value=\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\"/>\n            <message key=\"name.invalidPattern\" value=\"Package name ''{0}'' must match pattern ''{1}''.\"/>\n        </module>\n        <module name=\"TypeName\">\n            <message key=\"name.invalidPattern\" value=\"Type name ''{0}'' must match pattern ''{1}''.\"/>\n        </module>\n        <module name=\"MemberName\">\n            <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/>\n            <message key=\"name.invalidPattern\" value=\"Member name ''{0}'' must match pattern ''{1}''.\"/>\n        </module>\n        <module name=\"ParameterName\">\n            <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/>\n            <message key=\"name.invalidPattern\" value=\"Parameter name ''{0}'' must match pattern ''{1}''.\"/>\n        </module>\n        <module name=\"CatchParameterName\">\n            <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/>\n            <message key=\"name.invalidPattern\" value=\"Catch parameter name ''{0}'' must match pattern ''{1}''.\"/>\n        </module>\n        <module name=\"LocalVariableName\">\n            <property name=\"tokens\" value=\"VARIABLE_DEF\"/>\n            <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9]*$\"/>\n            <property name=\"allowOneCharVarInForLoop\" value=\"true\"/>\n            <message key=\"name.invalidPattern\" value=\"Local variable name ''{0}'' must match pattern ''{1}''.\"/>\n        </module>\n        <module name=\"ClassTypeParameterName\">\n            <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/>\n            <message key=\"name.invalidPattern\" value=\"Class type name ''{0}'' must match pattern ''{1}''.\"/>\n        </module>\n        <module name=\"MethodTypeParameterName\">\n            <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/>\n            <message key=\"name.invalidPattern\" value=\"Method type name ''{0}'' must match pattern ''{1}''.\"/>\n        </module>\n        <module name=\"InterfaceTypeParameterName\">\n            <property name=\"format\" value=\"(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)\"/>\n            <message key=\"name.invalidPattern\" value=\"Interface type name ''{0}'' must match pattern ''{1}''.\"/>\n        </module>\n        <module name=\"NoFinalizer\"/>\n        <module name=\"GenericWhitespace\">\n            <message key=\"ws.followed\" value=\"GenericWhitespace ''{0}'' is followed by whitespace.\"/>\n            <message key=\"ws.preceded\" value=\"GenericWhitespace ''{0}'' is preceded with whitespace.\"/>\n            <message key=\"ws.illegalFollow\" value=\"GenericWhitespace ''{0}'' should followed by whitespace.\"/>\n            <message key=\"ws.notPreceded\" value=\"GenericWhitespace ''{0}'' is not preceded with whitespace.\"/>\n        </module>\n        <module name=\"Indentation\">\n            <!-- Modified defaults for swagger-codegen (multiplied Google by 2)-->\n            <property name=\"basicOffset\" value=\"4\"/>\n            <property name=\"braceAdjustment\" value=\"0\"/>\n            <property name=\"caseIndent\" value=\"4\"/>\n            <property name=\"throwsIndent\" value=\"8\"/>\n            <property name=\"lineWrappingIndentation\" value=\"8\"/>\n            <property name=\"arrayInitIndent\" value=\"4\"/>\n            <!-- Actual Google Java Style defaults -->\n            <!--\n                <property name=\"basicOffset\" value=\"2\"/>\n                <property name=\"braceAdjustment\" value=\"0\"/>\n                <property name=\"caseIndent\" value=\"2\"/>\n                <property name=\"throwsIndent\" value=\"4\"/>\n                <property name=\"lineWrappingIndentation\" value=\"4\"/>\n                <property name=\"arrayInitIndent\" value=\"2\"/>\n                -->\n        </module>\n        <module name=\"AbbreviationAsWordInName\">\n            <property name=\"ignoreFinal\" value=\"false\"/>\n            <property name=\"allowedAbbreviationLength\" value=\"1\"/>\n        </module>\n        <module name=\"OverloadMethodsDeclarationOrder\"/>\n        <module name=\"VariableDeclarationUsageDistance\"/>\n        <module name=\"CustomImportOrder\">\n            <property name=\"specialImportsRegExp\" value=\"com.google\"/>\n            <property name=\"sortImportsInGroupAlphabetically\" value=\"true\"/>\n            <property name=\"customImportOrderRules\" value=\"STATIC###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE###STANDARD_JAVA_PACKAGE\"/>\n        </module>\n        <module name=\"MethodParamPad\"/>\n        <module name=\"OperatorWrap\">\n            <property name=\"option\" value=\"NL\"/>\n            <property name=\"tokens\" value=\"BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR \"/>\n        </module>\n        <module name=\"AnnotationLocation\">\n            <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF\"/>\n        </module>\n        <module name=\"AnnotationLocation\">\n            <property name=\"tokens\" value=\"VARIABLE_DEF\"/>\n            <property name=\"allowSamelineMultipleAnnotations\" value=\"true\"/>\n        </module>\n        <module name=\"NonEmptyAtclauseDescription\"/>\n        <module name=\"JavadocTagContinuationIndentation\"/>\n        <module name=\"SummaryJavadoc\">\n            <property name=\"forbiddenSummaryFragments\" value=\"^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )\"/>\n        </module>\n        <module name=\"JavadocParagraph\"/>\n        <module name=\"AtclauseOrder\">\n            <property name=\"tagOrder\" value=\"@param, @return, @throws, @deprecated\"/>\n            <property name=\"target\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF\"/>\n        </module>\n        <module name=\"JavadocMethod\">\n            <property name=\"scope\" value=\"public\"/>\n            <property name=\"allowMissingParamTags\" value=\"true\"/>\n            <property name=\"allowMissingThrowsTags\" value=\"true\"/>\n            <property name=\"allowMissingReturnTag\" value=\"true\"/>\n            <property name=\"minLineCount\" value=\"2\"/>\n            <property name=\"allowedAnnotations\" value=\"Override, Test\"/>\n            <property name=\"allowThrowsTagsForSubclasses\" value=\"true\"/>\n        </module>\n        <module name=\"MethodName\">\n            <property name=\"format\" value=\"^[a-z][a-z0-9][a-zA-Z0-9_]*$\"/>\n            <message key=\"name.invalidPattern\" value=\"Method name ''{0}'' must match pattern ''{1}''.\"/>\n        </module>\n        <module name=\"SingleLineJavadoc\">\n            <property name=\"ignoreInlineTags\" value=\"false\"/>\n        </module>\n        <module name=\"EmptyCatchBlock\">\n            <property name=\"exceptionVariableName\" value=\"expected\"/>\n        </module>\n        <module name=\"CommentsIndentation\"/>\n    </module>\n</module>\n"
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 11.0244140625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.2.0\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"$(uname)\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        JAVA_HOME=\"$(/usr/libexec/java_home)\"; export JAVA_HOME\n      else\n        JAVA_HOME=\"/Library/Java/Home\"; export JAVA_HOME\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=$(java-config --jre-home)\n  fi\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=$(cygpath --unix \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=$(cygpath --path --unix \"$CLASSPATH\")\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$JAVA_HOME\" ] && [ -d \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"$(cd \"$JAVA_HOME\" || (echo \"cannot cd into $JAVA_HOME.\"; exit 1); pwd)\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"$(which javac)\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"$(expr \"\\\"$javaExecutable\\\"\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=$(which readlink)\n    if [ ! \"$(expr \"$readLink\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"$(dirname \"\\\"$javaExecutable\\\"\")\"\n        javaExecutable=\"$(cd \"\\\"$javaHome\\\"\" && pwd -P)/javac\"\n      else\n        javaExecutable=\"$(readlink -f \"\\\"$javaExecutable\\\"\")\"\n      fi\n      javaHome=\"$(dirname \"\\\"$javaExecutable\\\"\")\"\n      javaHome=$(expr \"$javaHome\" : '\\(.*\\)/bin')\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"$(\\unset -f command 2>/dev/null; \\command -v java)\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=$(cd \"$wdir/..\" || exit 1; pwd)\n    fi\n    # end of workaround\n  done\n  printf '%s' \"$(cd \"$basedir\" || exit 1; pwd)\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    # Remove \\r in case we run on Windows within Git Bash\n    # and check out the repository with auto CRLF management\n    # enabled. Otherwise, we may read lines that are delimited with\n    # \\r\\n and produce $'-Xarg\\r' rather than -Xarg due to word\n    # splitting rules.\n    tr -s '\\r\\n' ' ' < \"$1\"\n  fi\n}\n\nlog() {\n  if [ \"$MVNW_VERBOSE\" = true ]; then\n    printf '%s\\n' \"$1\"\n  fi\n}\n\nBASE_DIR=$(find_maven_basedir \"$(dirname \"$0\")\")\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\nMAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}; export MAVEN_PROJECTBASEDIR\nlog \"$MAVEN_PROJECTBASEDIR\"\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nwrapperJarPath=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\"\nif [ -r \"$wrapperJarPath\" ]; then\n    log \"Found $wrapperJarPath\"\nelse\n    log \"Couldn't find $wrapperJarPath, downloading it ...\"\n\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      wrapperUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    else\n      wrapperUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    fi\n    while IFS=\"=\" read -r key value; do\n      # Remove '\\r' from value to allow usage on windows as IFS does not consider '\\r' as a separator ( considers space, tab, new line ('\\n'), and custom '=' )\n      safeValue=$(echo \"$value\" | tr -d '\\r')\n      case \"$key\" in (wrapperUrl) wrapperUrl=\"$safeValue\"; break ;;\n      esac\n    done < \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\n    log \"Downloading from: $wrapperUrl\"\n\n    if $cygwin; then\n      wrapperJarPath=$(cygpath --path --windows \"$wrapperJarPath\")\n    fi\n\n    if command -v wget > /dev/null; then\n        log \"Found wget ... using wget\"\n        [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--quiet\"\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget $QUIET \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        else\n            wget $QUIET --http-user=\"$MVNW_USERNAME\" --http-password=\"$MVNW_PASSWORD\" \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        log \"Found curl ... using curl\"\n        [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--silent\"\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl $QUIET -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n        else\n            curl $QUIET --user \"$MVNW_USERNAME:$MVNW_PASSWORD\" -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n        fi\n    else\n        log \"Falling back to using Java to download\"\n        javaSource=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        javaClass=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.class\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaSource=$(cygpath --path --windows \"$javaSource\")\n          javaClass=$(cygpath --path --windows \"$javaClass\")\n        fi\n        if [ -e \"$javaSource\" ]; then\n            if [ ! -e \"$javaClass\" ]; then\n                log \" - Compiling MavenWrapperDownloader.java ...\"\n                (\"$JAVA_HOME/bin/javac\" \"$javaSource\")\n            fi\n            if [ -e \"$javaClass\" ]; then\n                log \" - Running MavenWrapperDownloader.java ...\"\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$wrapperUrl\" \"$wrapperJarPath\") || rm -f \"$wrapperJarPath\"\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\n# If specified, validate the SHA-256 sum of the Maven wrapper jar file\nwrapperSha256Sum=\"\"\nwhile IFS=\"=\" read -r key value; do\n  case \"$key\" in (wrapperSha256Sum) wrapperSha256Sum=$value; break ;;\n  esac\ndone < \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\nif [ -n \"$wrapperSha256Sum\" ]; then\n  wrapperSha256Result=false\n  if command -v sha256sum > /dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | sha256sum -c > /dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  elif command -v shasum > /dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | shasum -a 256 -c > /dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\"\n    echo \"Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties.\"\n    exit 1\n  fi\n  if [ $wrapperSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.\" >&2\n    echo \"Investigate or delete $wrapperJarPath to attempt a clean download.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified wrapperSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=$(cygpath --path --windows \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=$(cygpath --path --windows \"$CLASSPATH\")\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\")\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $*\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\n# shellcheck disable=SC2086 # safe args\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 7.4130859375,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Apache Maven Wrapper startup batch script, version 3.2.0\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset WRAPPER_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET WRAPPER_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET WRAPPER_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %WRAPPER_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM If specified, validate the SHA-256 sum of the Maven wrapper jar file\nSET WRAPPER_SHA_256_SUM=\"\"\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperSha256Sum\" SET WRAPPER_SHA_256_SUM=%%B\n)\nIF NOT %WRAPPER_SHA_256_SUM%==\"\" (\n    powershell -Command \"&{\"^\n       \"$hash = (Get-FileHash \\\"%WRAPPER_JAR%\\\" -Algorithm SHA256).Hash.ToLower();\"^\n       \"If('%WRAPPER_SHA_256_SUM%' -ne $hash){\"^\n       \"  Write-Output 'Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.';\"^\n       \"  Write-Output 'Investigate or delete %WRAPPER_JAR% to attempt a clean download.';\"^\n       \"  Write-Output 'If you updated your Maven version, you need to update the specified wrapperSha256Sum property.';\"^\n       \"  exit 1;\"^\n       \"}\"^\n       \"}\"\n    if ERRORLEVEL 1 goto error\n)\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% ^\n  %JVM_CONFIG_MAVEN_PROPS% ^\n  %MAVEN_OPTS% ^\n  %MAVEN_DEBUG_OPTS% ^\n  -classpath %WRAPPER_JAR% ^\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n\ncmd /C exit /B %ERROR_CODE%\n"
        },
        {
          "name": "new.sh",
          "type": "blob",
          "size": 11.5634765625,
          "content": "#!/usr/bin/env bash\n\nset -euo pipefail\nset -o noclobber\n\nusage() {\ncat <<EOF\nStubs out files for new generators\n\nUsage:\n$0 [options]\n    Options:\n$(grep \"[[:space:]].)\\ #\" $0 | tr -d \"#\" | sed -E 's/( \\| \\*)//' | sed -E 's/([a-zA-Z])\\)/-\\1/')\n\nExamples:\n  Create a server generator for ktor:\n  $0 -n kotlin -s\n\n    Creates:\n    modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinServerCodegen.java\n    modules/openapi-generator/src/main/resources/kotlin-server/README.mustache\n    modules/openapi-generator/src/main/resources/kotlin-server/model.mustache\n    modules/openapi-generator/src/main/resources/kotlin-server/api.mustache\n    bin/configs/kotlin-server-petstore-new.yaml\n\n  Create a generic C# server generator:\n  $0 -n csharp -s -t\n    Creates:\n    modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/CsharpServerCodegen.java\n    modules/openapi-generator/src/main/resources/csharp-server/README.mustache\n    modules/openapi-generator/src/main/resources/csharp-server/model.mustache\n    modules/openapi-generator/src/main/resources/csharp-server/api.mustache\n    bin/configs/csharp-server-petstore-new.yaml\n    modules/openapi-generator/src/test/java/org/openapitools/codegen/csharp/CsharpServerCodegenTest.java\n    modules/openapi-generator/src/test/java/org/openapitools/codegen/csharp/CsharpServerCodegenModelTest.java\n    modules/openapi-generator/src/test/java/org/openapitools/codegen/csharp/CsharpServerCodegenOptionsTest.java\n    modules/openapi-generator/src/test/java/org/openapitools/codegen/options/CsharpServerCodegenOptionsProvider.java\nEOF\n    exit 0;\n}\n\ndeclare os=${OSTYPE//[0-9.]/}\ndeclare root=$(cd $(dirname \"${BASH_SOURCE}\") && pwd)\ndeclare gen_type=\ndeclare tests=0\ndeclare gen_name\n\ncheckPreviousGenType() {\n    if [ \"a\" != \"a$gen_type\" ]; then\n        echo \"[error] You may only set a single generator type at a time!\" >&2\n        usage >&2\n        exit 1\n    fi\n}\n\n[ $# -eq 0 ] && usage\nwhile getopts \":hcsdtfHn:\" arg; do\n  case ${arg} in\n    n) # Required. Specify generator name, should be kebab-cased.\n      gen_name=${OPTARG}\n      ;;\n    c) # Create a client generator\n        checkPreviousGenType\n        gen_type=client\n        ;;\n    s) # Create a server generator\n        checkPreviousGenType\n        gen_type=server\n        ;;\n    d) # Create a documentation generator\n        checkPreviousGenType\n        gen_type=documentation\n        ;;\n    H) # Create a schema generator\n        checkPreviousGenType\n        gen_type=schema\n        ;;\n    f) # Create a config generator\n        checkPreviousGenType\n        gen_type=config\n        ;;\n    t) # When specified, creates test file(s) for the generator.\n      tests=1\n      ;;\n    h | *) # Display help.\n      usage\n      exit 0\n      ;;\n  esac\ndone\n\nif [ -z \"$gen_type\" ]; then\n    echo \"[error] You may set a generator type\" >&2\n    usage >&2\n    exit 1\nfi\n\n[ -z \"${gen_name}\" ] && usage\n\ntitleCase() {\n  if [ \"$os\" == \"darwin\" ]; then\n    echo $1 | tr '-' ' ' | tr '_' ' ' | ruby -e \"print STDIN.gets.split.map(&:capitalize).join(' ')\" | tr -d ' '\n  else\n    read -ra words <<< $(echo $1 | tr '-' ' ' | tr '_' ' ')\n    echo \"${words[@]^}\" | tr -d ' '\n  fi\n}\n\nkebabCase() {\n  echo $1 | tr '_' ' ' | tr ' ' '-' | tr '[:upper:]' '[:lower:]'\n}\n\nkebabCasePath() {\n  echo $1 | tr '_' ' ' | tr ' ' '-' | tr '-' '/' | tr '[:upper:]' '[:lower:]'\n}\n\nkebabCasePathWin() {\n  echo $1 | tr '_' ' ' | tr ' ' '-' | tr '-' '\\\\' | tr '[:upper:]' '[:lower:]'\n}\n\nkebabCasePkg() {\n  echo $1 | tr '_' ' ' | tr ' ' '-' | tr '-' '.' | tr '[:upper:]' '[:lower:]'\n}\n\nupperCase() {\n  echo $1 | tr '[[:lower:]]' '[[:upper:]]'\n}\n\ndeclare lang_classname=$(titleCase \"${gen_name}-${gen_type}-Codegen\")\ndeclare gen_name_camel=$(kebabCase \"${gen_name}\")\ndeclare gen_name_camel_path=$(kebabCasePath \"${gen_name}\")\ndeclare gen_name_camel_pathwin=$(kebabCasePathWin \"${gen_name}\")\ndeclare gen_name_camel_pkg=$(kebabCasePkg \"${gen_name}\")\ndeclare codegen_type_enum=$(upperCase \"${gen_type}\")\n\n# Step 1: Add Language Generator\n[ -f \"${root}/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/${lang_classname}.java\" ] && \\\n    echo \"${lang_classname} already exists\" && exit 1;\n\necho \"Creating modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/${lang_classname}.java\"\ncat > \"${root}/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/${lang_classname}.java\" <<EOF\npackage org.openapitools.codegen.languages;\n\nimport org.openapitools.codegen.*;\nimport io.swagger.models.properties.ArrayProperty;\nimport io.swagger.models.properties.MapProperty;\nimport io.swagger.models.properties.Property;\nimport io.swagger.models.parameters.Parameter;\n\nimport java.io.File;\nimport java.util.*;\n\nimport org.apache.commons.lang3.StringUtils;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\npublic class ${lang_classname} extends DefaultCodegen implements CodegenConfig {\n    public static final String PROJECT_NAME = \"projectName\";\n\n    private final Logger LOGGER = LoggerFactory.getLogger(${lang_classname}.class);\n\n    public CodegenType getTag() {\n        return CodegenType.${codegen_type_enum};\n    }\n\n    public String getName() {\n        return \"${gen_name_camel}\";\n    }\n\n    public String getHelp() {\n        return \"Generates a ${gen_name_camel} ${gen_type}.\";\n    }\n\n    public ${lang_classname}() {\n        super();\n\n        outputFolder = \"generated-code\" + File.separator + \"${gen_name_camel}\";\n        modelTemplateFiles.put(\"model.mustache\", \".zz\");\n        apiTemplateFiles.put(\"api.mustache\", \".zz\");\n        embeddedTemplateDir = templateDir = \"${gen_name_camel}\";\n        apiPackage = \"Apis\";\n        modelPackage = \"Models\";\n        supportingFiles.add(new SupportingFile(\"README.mustache\", \"\", \"README.md\"));\n        // TODO: Fill this out.\n    }\n}\nEOF\n\n# Step 2: Register the new class with service loader\necho -e \"\\norg.openapitools.codegen.languages.${lang_classname}\" >> \"${root}/modules/openapi-generator/src/main/resources/META-INF/services/org.openapitools.codegen.CodegenConfig\"\n\n# Step 3: Create resource files\nmkdir -p \"${root}/modules/openapi-generator/src/main/resources/${gen_name_camel}\"\necho \"Creating modules/openapi-generator/src/main/resources/${gen_name_camel}/README.mustache\" && \\\n    touch \"${root}/modules/openapi-generator/src/main/resources/${gen_name_camel}/README.mustache\"\necho \"Creating modules/openapi-generator/src/main/resources/${gen_name_camel}/model.mustache\" && \\\n    touch \"${root}/modules/openapi-generator/src/main/resources/${gen_name_camel}/model.mustache\"\necho \"Creating modules/openapi-generator/src/main/resources/${gen_name_camel}/api.mustache\" && \\\n    touch \"${root}/modules/openapi-generator/src/main/resources/${gen_name_camel}/api.mustache\"\n\n# Step 4: Create generation config scripts\necho \"Creating bin/configs/${gen_name_camel}-petstore-new.yaml\"\ncat > \"${root}/bin/configs/${gen_name_camel}-petstore-new.yaml\"<<EOF\ngeneratorName: ${gen_name_camel}\noutputDir: samples/${gen_type}/petstore/${gen_name_camel_path}\ninputSpec: modules/openapi-generator/src/test/resources/3_0/petstore.yaml\ntemplateDir: modules/openapi-generator/src/main/resources/${gen_name_camel}\nadditionalProperties:\n  hideGenerationTimestamp: \"true\"\nEOF\n\n# Step 5: (optional) Create OpenAPI Generator test files\nif [ \"1\" -eq \"${tests}\" ]; then\n    mkdir -p \"${root}/modules/openapi-generator/src/test/java/org/openapitools/codegen/${gen_name_camel_path}\"\n    # Codegen\n    echo \"Creating modules/openapi-generator/src/test/java/org/openapitools/codegen/${gen_name_camel_path}/${lang_classname}Test.java\"\n    cat > \"${root}/modules/openapi-generator/src/test/java/org/openapitools/codegen/${gen_name_camel_path}/${lang_classname}Test.java\"<<EOF\npackage org.openapitools.codegen.${gen_name_camel_pkg};\n\nimport org.openapitools.codegen.*;\nimport org.openapitools.codegen.languages.${lang_classname};\nimport io.swagger.models.*;\nimport io.swagger.parser.SwaggerParser;\nimport org.testng.Assert;\nimport org.testng.annotations.Test;\n\npublic class ${lang_classname}Test {\n\n    ${lang_classname} codegen = new ${lang_classname}();\n\n    @Test\n    public void shouldSucceed() throws Exception {\n        // TODO: Complete this test.\n        Assert.fail(\"Not implemented.\");\n    }\n}\nEOF\n\n    # Model\n    echo \"Creating modules/openapi-generator/src/test/java/org/openapitools/codegen/${gen_name_camel_path}/${lang_classname}ModelTest.java\"\n    cat > \"${root}/modules/openapi-generator/src/test/java/org/openapitools/codegen/${gen_name_camel_path}/${lang_classname}ModelTest.java\"<<EOF\npackage org.openapitools.codegen.${gen_name_camel_pkg};\n\nimport org.openapitools.codegen.*;\nimport org.openapitools.codegen.languages.${lang_classname};\nimport io.swagger.models.*;\nimport io.swagger.models.properties.*;\n\nimport org.testng.Assert;\nimport org.testng.annotations.Test;\n\n@SuppressWarnings(\"static-method\")\npublic class ${lang_classname}ModelTest {\n\n    @Test(description = \"convert a simple java model\")\n    public void simpleModelTest() {\n        final Model model = new ModelImpl()\n                .description(\"a sample model\")\n                .property(\"id\", new LongProperty())\n                .property(\"name\", new StringProperty())\n                .required(\"id\")\n                .required(\"name\");\n        final DefaultCodegen codegen = new ${lang_classname}();\n\n        // TODO: Complete this test.\n        Assert.fail(\"Not implemented.\");\n    }\n\n}\n\nEOF\n\n    # Options\n    echo \"Creating modules/openapi-generator/src/test/java/org/openapitools/codegen/${gen_name_camel_path}/${lang_classname}OptionsTest.java\"\n    cat > \"${root}/modules/openapi-generator/src/test/java/org/openapitools/codegen/${gen_name_camel_path}/${lang_classname}OptionsTest.java\"<<EOF\npackage org.openapitools.codegen.${gen_name_camel_pkg};\n\nimport org.openapitools.codegen.AbstractOptionsTest;\nimport org.openapitools.codegen.CodegenConfig;\nimport org.openapitools.codegen.languages.${lang_classname};\nimport org.openapitools.codegen.options.${lang_classname}OptionsProvider;\n\nimport static org.mockito.Mockito.mock;\nimport static org.mockito.Mockito.verify;\n\npublic class ${lang_classname}OptionsTest extends AbstractOptionsTest {\n    private ${lang_classname} codegen = mock(${lang_classname}.class, mockSettings);\n\n    public ${lang_classname}OptionsTest() {\n        super(new ${lang_classname}OptionsProvider());\n    }\n\n    @Override\n    protected CodegenConfig getCodegenConfig() {\n        return codegen;\n    }\n\n    @SuppressWarnings(\"unused\")\n    @Override\n    protected void verifyOptions() {\n        // TODO: Complete options using Mockito\n        // verify(codegen).someMethod(arguments)\n    }\n}\n\nEOF\n\n    # Options Provider\n    echo \"Creating modules/openapi-generator/src/test/java/org/openapitools/codegen/options/${lang_classname}OptionsProvider.java\"\n    cat > \"${root}/modules/openapi-generator/src/test/java/org/openapitools/codegen/options/${lang_classname}OptionsProvider.java\"<<EOF\npackage org.openapitools.codegen.options;\n\nimport org.openapitools.codegen.CodegenConstants;\nimport org.openapitools.codegen.languages.${lang_classname};\n\nimport com.google.common.collect.ImmutableMap;\n\nimport java.util.Map;\n\npublic class ${lang_classname}OptionsProvider implements OptionsProvider {\n    public static final String PROJECT_NAME_VALUE = \"OpenAPI\";\n\n    @Override\n    public String getLanguage() {\n        return \"${gen_name_camel}\";\n    }\n\n    @Override\n    public Map<String, String> createOptions() {\n        ImmutableMap.Builder<String, String> builder = new ImmutableMap.Builder<String, String>();\n        return builder\n                .put(${lang_classname}.PROJECT_NAME, PROJECT_NAME_VALUE)\n                .build();\n    }\n\n    @Override\n    public boolean isServer() {\n        return false;\n    }\n}\n\nEOF\nfi\n\necho \"Finished.\"\n"
        },
        {
          "name": "openapi-generator.code-workspace",
          "type": "blob",
          "size": 2.484375,
          "content": "{\n  \"folders\": [\n    {\n      \"name\": \"openapi-generator\",\n      \"path\": \".\"\n    },\n    {\n      \"name\": \"openapi-generator-cli\",\n      \"path\": \"modules/openapi-generator-cli\"\n    },\n    {\n      \"name\": \"openapi-generator-core\",\n      \"path\": \"modules/openapi-generator-core\"\n    },\n    {\n      \"name\": \"openapi-generator-gradle-plugin\",\n      \"path\": \"modules/openapi-generator-gradle-plugin\"\n    },\n    {\n      \"name\": \"openapi-generator-maven-plugin\",\n      \"path\": \"modules/openapi-generator-maven-plugin\"\n    },\n    {\n      \"name\": \"openapi-generator-online\",\n      \"path\": \"modules/openapi-generator-online\"\n    }\n  ],\n  \"settings\": {\n    \"editor.formatOnType\": true,\n    \"editor.linkedEditing\": true,\n    \"editor.tabCompletion\": \"on\",\n    \"editor.tabSize\": 4,\n    \"editor.renderWhitespace\": \"boundary\",\n    \"editor.suggest.shareSuggestSelections\": true,\n    \"editor.suggestSelection\": \"first\",\n    \"editor.semanticHighlighting.enabled\": true,\n    \"explorer.confirmDelete\": true,\n    \"files.autoSave\": \"onFocusChange\",\n    \"files.exclude\": {\n      \"**/.classpath\": true,\n      \"**/.factorypath\": true,\n      \"**/.project\": true,\n      \"**/.settings\": true,\n      \"modules/openapi-generator-cli\": true,\n      \"modules/openapi-generator-core\": true,\n      \"modules/openapi-generator-gradle-plugin\": true,\n      \"modules/openapi-generator-maven-plugin\": true,\n      \"modules/openapi-generator-online\": true,\n    },\n    \"files.trimFinalNewlines\": false,\n    \"files.trimTrailingWhitespace\": true,\n    \"task.saveBeforeRun\": \"always\",\n    \"java.autobuild.enabled\": false,\n    \"java.completion.enabled\": true,\n    \"java.completion.guessMethodArguments\": true,\n    \"java.completion.maxResults\": 5,\n    \"java.format.onType.enabled\": true,\n    \"java.referencesCodeLens.enabled\": true,\n    \"java.saveActions.organizeImports\": true,\n    \"java.showBuildStatusOnStart.enabled\": true,\n    \"java.dependency.autoRefresh\": true,\n    \"java.dependency.refreshDelay\": 3000,\n    \"java.format.enabled\": true,\n    \"java.configuration.updateBuildConfiguration\": \"disabled\",\n    \"maven.pomfile.autoUpdateEffectivePOM\": true,\n    \"maven.excludedFolders\": [\n      \"**/.*\",\n      \"**/node_modules\",\n      \"**/target\",\n      \"**/bin\",\n      \"**/archetype-resources\",\n      \"samples\"\n    ]\n  },\n  \"extensions\": {\n    \"recommendations\": [\n      \"vscjava.vscode-java-pack\",\n      \"attilabuti.mustache-syntax-vscode\",\n      \"formulahendry.code-runner\",\n      \"visualstudioexptteam.vscodeintellicode\",\n      \"42crunch.vscode-openapi\",\n      \"mermade.openapi-lint\"\n    ]\n  }\n}\n"
        },
        {
          "name": "openapitools.json",
          "type": "blob",
          "size": 0.1474609375,
          "content": "{\n  \"$schema\": \"node_modules/@openapitools/openapi-generator-cli/config.schema.json\",\n  \"spaces\": 2,\n  \"generator-cli\": {\n    \"version\": \"7.4.0\"\n  }\n}\n"
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 0.09375,
          "content": "{\n  \"name\": \"openapi-generator\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {}\n}\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 48.1494140625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <parent>\n        <groupId>org.sonatype.oss</groupId>\n        <artifactId>oss-parent</artifactId>\n        <version>5</version>\n        <relativePath />\n        <!-- lookup parent from repository -->\n    </parent>\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.openapitools</groupId>\n    <artifactId>openapi-generator-project</artifactId>\n    <packaging>pom</packaging>\n    <name>openapi-generator-project</name>\n    <!-- RELEASE_VERSION -->\n    <version>7.11.0-SNAPSHOT</version>\n    <!-- /RELEASE_VERSION -->\n    <url>https://github.com/openapitools/openapi-generator</url>\n    <scm>\n        <connection>scm:git:git@github.com:openapitools/openapi-generator.git</connection>\n        <developerConnection>scm:git:git@github.com:openapitools/openapi-generator.git</developerConnection>\n        <url>https://github.com/openapitools/openapi-generator</url>\n    </scm>\n    <developers>\n        <!-- original author of the project -->\n        <developer>\n            <id>fehguy</id>\n            <name>Tony Tam</name>\n            <email>fehguy@gmail.com</email>\n        </developer>\n        <!-- openapi-generator core team -->\n        <developer>\n            <id>wing328</id>\n            <name>William Cheng</name>\n            <email>wing328hk@gmail.com</email>\n        </developer>\n        <developer>\n            <id>jimschubert</id>\n            <name>Jim Schubert</name>\n            <email>james.schubert@gmail.com</email>\n        </developer>\n        <developer>\n            <id>cbornet</id>\n            <name>Christophe Bornet</name>\n        </developer>\n        <developer>\n            <id>jmini</id>\n            <name>Jérémie Bresson</name>\n            <email>dev@jmini.fr</email>\n        </developer>\n        <developer>\n            <id>etherealjoy</id>\n            <name>Sunn</name>\n            <email>sunn.ssb@live.com</email>\n        </developer>\n    </developers>\n    <issueManagement>\n        <system>github</system>\n        <url>https://github.com/openapitools/openapi-generator/issues</url>\n    </issueManagement>\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n    <licenses>\n        <license>\n            <name>Apache License 2.0</name>\n            <url>https://www.apache.org/licenses/LICENSE-2.0.html</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n    <build>\n        <sourceDirectory>src/main/java</sourceDirectory>\n        <outputDirectory>target/classes</outputDirectory>\n        <extensions>\n            <extension>\n                <groupId>org.jvnet.wagon-svn</groupId>\n                <artifactId>wagon-svn</artifactId>\n                <version>${wagon-svn.version}</version>\n            </extension>\n            <extension>\n                <groupId>org.apache.maven.wagon</groupId>\n                <artifactId>wagon-ssh-external</artifactId>\n                <version>${wagon-ssh-external.version}</version>\n            </extension>\n            <extension>\n                <groupId>org.apache.maven.wagon</groupId>\n                <artifactId>wagon-webdav</artifactId>\n                <version>${wagon-webdav.version}</version>\n            </extension>\n        </extensions>\n        <defaultGoal>install</defaultGoal>\n        <directory>target</directory>\n        <finalName>${project.artifactId}-${project.version}</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <version>${checkstyle.plugin.version}</version>\n                <configuration>\n                    <consoleOutput>false</consoleOutput>\n                    <failsOnError>false</failsOnError>\n                    <excludes>**/samples/*.java</excludes>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>checkstyle-check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <phase>verify</phase>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- https://www.jacoco.org/jacoco/trunk/doc/maven.html -->\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>${jacoco.version}</version>\n                <executions>\n                    <execution>\n                        <id>jacoco-initialize</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>jacoco-site</id>\n                        <phase>test</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>default-check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <rule>\n                                    <element>PACKAGE</element>\n                                    <limits>\n                                        <limit>\n                                            <counter>LINE</counter>\n                                            <value>COVEREDRATIO</value>\n                                            <minimum>0</minimum>\n                                        </limit>\n                                    </limits>\n                                </rule>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n                <configuration>\n                    <excludes>\n                        <exclude>**/gradle-wrapper.jar</exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>${maven-surefire-plugin.version}</version>\n                <configuration>\n                    <printSummary>true</printSummary>\n                    <parallel>classes</parallel>\n                    <threadCountClasses>3</threadCountClasses>\n                    <useSystemClassLoader>false</useSystemClassLoader>\n                    <junitArtifactName>none:none</junitArtifactName>\n                    <testNGArtifactName>org.testng:testng</testNGArtifactName>\n                    <argLine>@{argLine} -XX:+StartAttachListener</argLine>\n                    <rerunFailingTestsCount>2</rerunFailingTestsCount>\n                    <systemPropertyVariables>\n                        <org.openapitools.codegen.utils.oncelogger.expiry>1000</org.openapitools.codegen.utils.oncelogger.expiry>\n                        <org.openapitools.codegen.utils.oncelogger.cachesize>5000</org.openapitools.codegen.utils.oncelogger.cachesize>\n                    </systemPropertyVariables>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                        <!--  must be on the classpath for test instrumentation  -->\n                        <groupId>org.jacoco</groupId>\n                        <artifactId>org.jacoco.agent</artifactId>\n                        <classifier>runtime</classifier>\n                        <version>${jacoco.version}</version>\n                        <scope>runtime</scope>\n                    </dependency>\n                </dependencies>\n            </plugin>\n            <plugin>\n                <artifactId>maven-dependency-plugin</artifactId>\n                <version>${maven-dependency-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>copy-dependencies</goal>\n                        </goals>\n                        <configuration>\n                            <outputDirectory>${project.build.directory}/lib</outputDirectory>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>${maven-compiler-plugin.version}</version>\n                <configuration>\n                    <source>${maven.compiler.source}</source>\n                    <target>${maven.compiler.source}</target>\n                    <annotationProcessors>\n                        lombok.launch.AnnotationProcessorHider$AnnotationProcessor,lombok.launch.AnnotationProcessorHider$ClaimingProcessor,javaslang.match.PatternsProcessor\n                    </annotationProcessors>\n                    <annotationProcessorPaths>\n                        <processorPath>\n                            <groupId>org.projectlombok</groupId>\n                            <artifactId>lombok</artifactId>\n                            <version>${lombok.version}</version>\n                        </processorPath>\n                        <processorPath>\n                            <groupId>org.jetbrains.kotlin</groupId>\n                            <artifactId>kotlin-compiler-embeddable</artifactId>\n                            <version>${kotlin-compiler-embeddable.version}</version>\n                        </processorPath>\n                    </annotationProcessorPaths>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>${maven-jar-plugin.version}</version>\n                <configuration>\n                    <archive>\n                        <manifestEntries>\n                            <mode>development</mode>\n                            <url>${project.url}</url>\n                            <implementation-version>${project.version}</implementation-version>\n                            <package>org.openapitools</package>\n                        </manifestEntries>\n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-site-plugin</artifactId>\n                <version>${maven-site-plugin.version}</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-release-plugin</artifactId>\n                <version>${maven-release-plugin.version}</version>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>${maven-javadoc-plugin.version}</version>\n                <configuration>\n                    <source>${maven.compiler.source}</source>\n                    <encoding>UTF-8</encoding>\n                    <maxmemory>1g</maxmemory>\n                    <failOnWarnings>false</failOnWarnings>\n                    <doclint>none</doclint>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>attach-javadocs</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>3.0.1</version>\n                <executions>\n                    <execution>\n                        <id>attach-sources</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>jar-no-fork</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>3.3.0</version>\n                <executions>\n                    <execution>\n                        <id>enforce-maven</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <requireJavaVersion>\n                                    <version>1.11.0</version>\n                                </requireJavaVersion>\n                                <requireMavenVersion>\n                                    <version>3.3.4</version>\n                                </requireMavenVersion>\n                                <requireReleaseDeps>\n                                    <message>No Snapshots Allowed!</message>\n                                    <failWhenParentIsSnapshot>false</failWhenParentIsSnapshot>\n                                    <excludes>\n                                        <exclude>org.openapitools:*</exclude>\n                                    </excludes>\n                                </requireReleaseDeps>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>de.thetaphi</groupId>\n                <artifactId>forbiddenapis</artifactId>\n                <version>3.5.1</version>\n                <configuration>\n                    <bundledSignatures>\n                        <!--\n                          This will automatically choose the right\n                          signatures based on 'maven.compiler.target':\n                        -->\n                        <bundledSignature>jdk-unsafe</bundledSignature>\n                        <bundledSignature>jdk-deprecated</bundledSignature>\n                        <bundledSignature>jdk-internal</bundledSignature>\n                        <!-- disallow undocumented classes like sun.misc.Unsafe: -->\n                        <bundledSignature>jdk-non-portable</bundledSignature>\n                        <bundledSignature>jdk-reflection</bundledSignature>\n                    </bundledSignatures>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>check</goal>\n                            <goal>testCheck</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>se.bjurr.violations</groupId>\n                    <artifactId>violations-maven-plugin</artifactId>\n                    <version>${violations-maven-plugin.version}</version>\n                    <configuration>\n                        <maxViolations>0</maxViolations>\n                        <detailLevel>VERBOSE</detailLevel>\n                        <minSeverity>ERROR</minSeverity>\n                        <violations>\n                            <violation>\n                                <parser>FINDBUGS</parser>\n                                <reporter>Spotbugs</reporter>\n                                <folder>${project.basedir}</folder>\n                                <pattern>.*/spotbugsXml\\.xml$</pattern>\n                            </violation>\n                            <violation>\n                                <parser>PMD</parser>\n                                <reporter>PMD</reporter>\n                                <folder>${project.basedir}</folder>\n                                <pattern>.*/pmd\\.xml$</pattern>\n                            </violation>\n                            <violation>\n                                <parser>CHECKSTYLE</parser>\n                                <reporter>Checkstyle</reporter>\n                                <folder>${project.basedir}</folder>\n                                <pattern>.*/checkstyle-result\\.xml$</pattern>\n                            </violation>\n                        </violations>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <phase>verify</phase>\n                            <goals>\n                                <goal>violations</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>com.github.spotbugs</groupId>\n                    <artifactId>spotbugs-maven-plugin</artifactId>\n                    <version>${spotbugs-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-pmd-plugin</artifactId>\n                    <version>${pmd-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-checkstyle-plugin</artifactId>\n                    <version>${checkstyle.plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>pl.project13.maven</groupId>\n                    <artifactId>git-commit-id-plugin</artifactId>\n                    <version>${git-commit-id-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>com.gradle</groupId>\n                    <artifactId>develocity-maven-extension</artifactId>\n                    <configuration>\n                        <develocity>\n                            <normalization>\n                                <runtimeClassPath>\n                                    <ignoredFiles>\n                                        <ignoredFile>**/_merged_spec.yaml</ignoredFile>\n                                    </ignoredFiles>\n                                </runtimeClassPath>\n                            </normalization>\n                        </develocity>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n    </build>\n    <profiles>\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>1.6</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.sonatype.plugins</groupId>\n                        <artifactId>nexus-staging-maven-plugin</artifactId>\n                        <version>1.6.8</version>\n                        <extensions>true</extensions>\n                        <configuration>\n                            <serverId>ossrh</serverId>\n                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                            <autoReleaseAfterClose>true</autoReleaseAfterClose>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>release-sign-artifacts</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <!-- CI related -->\n        <profile>\n            <!-- This profile will run much more in-depth static analysis checks. -->\n            <id>static-analysis</id>\n            <properties>\n                <skipTests>true</skipTests>\n                <maven.javadoc.skip>true</maven.javadoc.skip>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.github.spotbugs</groupId>\n                        <artifactId>spotbugs-maven-plugin</artifactId>\n                        <version>${spotbugs-plugin.version}</version>\n                        <configuration>\n                            <failOnError>false</failOnError>\n                            <!-- https://spotbugs.readthedocs.io/en/stable/effort.html -->\n                            <effort>min</effort>\n                            <excludeFilterFile>\n                                ${project.basedir}${file.separator}spotbugs-exclude.xml</excludeFilterFile>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>spotbugs-check</id>\n                                <goals>\n                                    <goal>check</goal>\n                                </goals>\n                                <phase>verify</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-pmd-plugin</artifactId>\n                        <version>${pmd-plugin.version}</version>\n                        <configuration>\n                            <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>\n                            <failOnViolation>false</failOnViolation>\n                            <printFailingErrors>false</printFailingErrors>\n                            <rulesets>\n                                <ruleset>category/java/errorprone.xml</ruleset>\n                            </rulesets>\n                            <excludes>\n                                <exclude>**/samples/**/*</exclude>\n                            </excludes>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>pmd-check</id>\n                                <goals>\n                                    <goal>check</goal>\n                                </goals>\n                                <phase>verify</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n            <reporting>\n                <plugins>\n                    <plugin>\n                        <groupId>com.github.spotbugs</groupId>\n                        <artifactId>spotbugs-maven-plugin</artifactId>\n                        <version>${spotbugs-plugin.version}</version>\n                    </plugin>\n                </plugins>\n            </reporting>\n        </profile>\n        <!-- Samples -->\n        <profile>\n            <id>android-client</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/android/volley</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>bash-client</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/bash</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>clojure-client</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>clojure</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/clojure</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>haskell-http-client</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>haskell-http-client</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/haskell-http-client</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>haskell-http-client-integration-test</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>haskell-http-client</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/haskell-http-client/tests-integration</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-client-jersey2-java8</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/java/jersey2-java8</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-client-openapi3-jersey2-java8</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/openapi3/client/petstore/java/jersey2-java8</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-client-okhttp-gson</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/java/okhttp-gson</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-client-okhttp-gson-parcelable</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/java/okhttp-gson-parcelableModel</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-client-retrofit2</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/java/retrofit2</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-client-retrofit2-rx</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/java/retrofit2rx2</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-client-feign</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/java/feign</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>javascript-client-es6</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>javascript</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/javascript-es6</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>javascript-client-promise-es6</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>javascript</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/javascript-promise-es6</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>scala-sttp</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>scala</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/scala-sttp</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-micronaut-client</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/java-micronaut-client</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-micronaut-server</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/java-micronaut-server</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-helidon-client</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/java-helidon-client/mp</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-helidon-server</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/java-helidon-server/mp</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-msf4j-server</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/java-msf4j</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>jaxrs-cxf-server</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/jaxrs-cxf</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>jaxrs-resteasy-server</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/jaxrs-resteasy/default</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>jaxrs-resteasy-server-joda</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/jaxrs-resteasy/joda</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>jaxrs-resteasy-eap-server</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/jaxrs-resteasy/eap</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>jaxrs-resteasy-eap-server-joda</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/jaxrs-resteasy/eap-joda</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>jaxrs-server</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/jaxrs/jersey2</module>\n            </modules>\n        </profile>\n        <profile>\n            <!-- openapi v3's one -->\n            <id>jaxrs-jersey</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/jaxrs-jersey</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>jaxrs-spec</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/jaxrs-spec</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>jaxrs-spec-interface</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/jaxrs-spec-interface</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>jaxrs-spec-interface-response</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/jaxrs-spec-interface-response</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>typescript-client-tests-default</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/openapi3/client/petstore/typescript/tests/default</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>typescript-client-tests-deno</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/openapi3/client/petstore/typescript/tests/deno</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>typescript-client-tests-jquery</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/openapi3/client/petstore/typescript/tests/jquery</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>typescript-client-tests-browser</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/openapi3/client/petstore/typescript/tests/browser</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>typescript-fetch-client-tests-default</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/typescript-fetch/tests/default</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>typescript-fetch-client-builds-default</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/typescript-fetch/builds/default</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>typescript-fetch-client-builds-es6-target</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/typescript-fetch/builds/es6-target</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>typescript-fetch-client-builds-with-npm-version</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/typescript-fetch/builds/with-npm-version</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>typescript-fetch-client-builds-prefix-parameter-interfaces</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/typescript-fetch/builds/prefix-parameter-interfaces</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>typescript-node-npm-client</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/typescript-node/npm</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>ruby-client</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/ruby</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>go-client</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/client/petstore/go</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>springboot-beanvalidation</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/springboot-beanvalidation</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>springboot-reactive</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/springboot-reactive</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>springboot</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/springboot</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>springboot-virtualan</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/springboot-virtualan</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-inflector</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/java-inflector</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>java-undertow</id>\n            <activation>\n                <property>\n                    <name>env</name>\n                    <value>java</value>\n                </property>\n            </activation>\n            <modules>\n                <module>samples/server/petstore/java-undertow</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>openapi-generator</id>\n            <activation>\n                <activeByDefault>true</activeByDefault>\n                <property>\n                    <name>!integration-test</name>\n                </property>\n            </activation>\n            <modules>\n                <module>modules/openapi-generator-core</module>\n                <module>modules/openapi-generator</module>\n                <module>modules/openapi-generator-cli</module>\n                <module>modules/openapi-generator-maven-plugin</module>\n                <module>modules/openapi-generator-gradle-plugin</module>\n                <module>modules/openapi-generator-online</module>\n            </modules>\n        </profile>\n    </profiles>\n    <reporting>\n        <outputDirectory>target/site</outputDirectory>\n        <plugins>\n            <plugin>\n                <groupId>net.alchim31.maven</groupId>\n                <artifactId>scala-maven-plugin</artifactId>\n                <version>${scala-maven-plugin.version}</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jxr-plugin</artifactId>\n                <version>3.0.0</version>\n                <configuration>\n                    <aggregate>true</aggregate>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-project-info-reports-plugin</artifactId>\n                <version>${maven-project-info-reports-plugin.version}</version>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>project-team</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n        </plugins>\n    </reporting>\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.junit</groupId>\n                <artifactId>junit-bom</artifactId>\n                <version>${junit.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.testng</groupId>\n                <artifactId>testng</artifactId>\n                <version>${testng.version}</version>\n                <scope>test</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n    <repositories>\n        <repository>\n            <id>sonatype-snapshots</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n        <archunit.version>1.3.0</archunit.version>\n        <checkstyle.plugin.version>3.1.0</checkstyle.plugin.version>\n        <commons-cli.version>1.5.0</commons-cli.version>\n        <commons-io.version>2.16.1</commons-io.version>\n        <commons-lang.version>3.12.0</commons-lang.version>\n        <commons-text.version>1.10.0</commons-text.version>\n        <diffutils.version>1.3.0</diffutils.version>\n        <generex.version>1.0.2</generex.version>\n        <git-commit-id-plugin.version>4.9.10</git-commit-id-plugin.version>\n        <groovy.version>3.0.9</groovy.version>\n        <guava.version>32.1.3-jre</guava.version>\n        <handlebars-java.version>4.3.1</handlebars-java.version>\n        <jackson-threetenbp.version>2.15.2</jackson-threetenbp.version>\n        <jackson.version>2.17.1</jackson.version>\n        <jacoco.version>0.8.10</jacoco.version>\n        <jmustache.version>1.15</jmustache.version>\n        <junit.version>5.10.2</junit.version>\n        <kotlin.version>1.6.21</kotlin.version>\n        <kotlin-compiler-embeddable.version>1.6.21</kotlin-compiler-embeddable.version>\n        <lombok.version>1.18.30</lombok.version>\n        <maven-dependency-plugin.version>3.6.0</maven-dependency-plugin.version>\n        <maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>\n        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>\n        <maven-javadoc-plugin.version>3.4.0</maven-javadoc-plugin.version>\n        <maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>\n        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>\n        <maven-site-plugin.version>4.0.0-M8</maven-site-plugin.version>\n        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>\n        <mockito.version>4.10.0</mockito.version>\n        <pmd-plugin.version>3.12.0</pmd-plugin.version>\n        <resolver-util-version>1.9.18</resolver-util-version>\n        <rxgen.version>1.4</rxgen.version>\n        <scala-maven-plugin.version>4.6.1</scala-maven-plugin.version>\n        <slf4j.version>1.7.36</slf4j.version>\n        <snakeyaml.version>2.3</snakeyaml.version>\n        <spotbugs-plugin.version>3.1.12.2</spotbugs-plugin.version>\n        <swagger-parser-groupid.version>io.swagger.parser.v3</swagger-parser-groupid.version>\n        <swagger-parser.version>2.1.22</swagger-parser.version>\n        <testng.version>7.10.2</testng.version>\n        <violations-maven-plugin.version>1.34</violations-maven-plugin.version>\n        <wagon-ssh-external.version>3.4.3</wagon-ssh-external.version>\n        <wagon-svn.version>1.12</wagon-svn.version>\n        <wagon-webdav.version>1.0-beta-2</wagon-webdav.version>\n    </properties>\n</project>\n"
        },
        {
          "name": "run-in-docker.sh",
          "type": "blob",
          "size": 1.2490234375,
          "content": "#!/bin/bash\nset -exo pipefail\n\ncd \"$(dirname ${BASH_SOURCE})\"\n\nmaven_cache_repo=\"${HOME}/.m2/repository\"\n\nmkdir -p \"${maven_cache_repo}\"\n\n# !! The -u option below needs to be defined so we don't write to a user's bound ~/.m2/repository as root.\n# !! but using this also means we either need to setup a user with the same id, or we execute without a username and home directory.\n# !! This means we can't bind the .m2 directory to any user's directory (like /root/.m2).\n# !! We _must_ define $MAVEN_CONFIG explicitly as a location that is not /root/.m2; the user executing this may not have access to the container's user's directory.\ndocker run --rm -it \\\n        -w /gen \\\n        -e GEN_DIR=/gen \\\n        -e MAVEN_CONFIG=/var/maven/.m2 \\\n        -e MAVEN_OPTS=\"-Dmaven.repo.local=/var/maven/.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true -Djacoco.skip=true\" \\\n        -u \"$(id -u):$(id -g)\" \\\n        -v \"${PWD}:/gen\" \\\n        -v \"${PWD}/CI/run-in-docker-settings.xml:/var/maven/.m2/settings.xml\" \\\n        -v \"${maven_cache_repo}:/var/maven/.m2/repository\" \\\n        --entrypoint /gen/docker-entrypoint.sh \\\n        maven:3-eclipse-temurin-17 \"$@\"\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sec.gpg.enc",
          "type": "blob",
          "size": 7.796875,
          "content": null
        },
        {
          "name": "spotbugs-exclude.xml",
          "type": "blob",
          "size": 0.7763671875,
          "content": "<FindBugsFilter>\n\n\t<Match>\n\t\t<Bug pattern=\"RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\" />\n\t</Match>\n\n\t<Match>\n\t\t<Bug pattern=\"URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD\" />\n\t</Match>\n\n\t<Match>\n\t\t<Bug pattern=\"RV_RETURN_VALUE_IGNORED_BAD_PRACTICE\" />\n\t</Match>\n\n\t<Match>\n\t\t<Bug pattern=\"URF_UNREAD_FIELD\" />\n\t\t<Or>\n\t\t\t<And>\n\t\t\t\t<Class name=\"io.undertow.server.protocol.ajp.AjpRequestParseState\" />\n\t\t\t\t<Field name=\"dataSize\" />\n\t\t\t</And>\n\t\t</Or>\n\t</Match>\n\n\t<!-- For source/class naming, see https://spotbugs.readthedocs.io/en/stable/filter.html#java-element-name-matching -->\n\t<Match>\n\t\t<!-- Ignore all source files with samples in path name -->\n\t\t<Source name=\"~.*\\samples\\.*\"/>\n\t</Match>\n\t<Match>\n\t\t<!-- Ignore all bugs in any test classes -->\n\t\t<Class name=\"~.*\\.*Test\" />\n\t</Match>\n</FindBugsFilter>"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}