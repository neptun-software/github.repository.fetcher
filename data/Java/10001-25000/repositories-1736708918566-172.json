{
  "metadata": {
    "timestamp": 1736708918566,
    "page": 172,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjE3NQ==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "datahub-project/datahub",
      "stars": 10135,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.3427734375,
          "content": "**/node_modules/\n*/build/\n*/*/build/\n**/venv/\n**/.tox/\n**/.mypy_cache/\n**/.pytest_cache/\n**/__pycache__/\nout\n**/*.class\n# Have to copy gradle/wrapper/gradle-wrapper.jar, can't exclude ALL jars\n**/build/**/*.jar\n# Content in .git is used to get the git version\n# Just ignore the heavy parts that are not used\n.git/logs\n.git/COMMIT_*\n.git/index\n.gradle\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.12890625,
          "content": "*.sh text eol=lf\n*.ts text eol=lf\n*.tsx text eol=lf\ngradlew text eol=lf\nmetadata-utils/src/test/resources/filterQuery/* text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.6884765625,
          "content": "# Gradle & Avro\n.project\n.settings\n.classpath\n.gradle\n.idea\n*.iml\n*.iws\n*.ipr\n\n*gma-create-all.sql\n*gma-drop-all.sql\n\n# Pegasus, Avro, & other schemas\n**/src/mainGenerated*\n**/src/generatedJsonSchema\n**/metadata-io/generated\n**/metadata-integration/java/datahub-client/generated\n**/src/testGenerated*\nmetadata-events/mxe-registration/src/main/resources/**/*.avsc\n\n# Java\n.java-version\n\n# Python\n.venv\nvenv/\nenv.bak/\nvenv.bak/\n.mypy_cache/\n.dmypy.json\ndmypy.json\nMANIFEST\n*.pyc\n.python-version\n\n# Generated files\n**/bin\n# Added by mp-maker\n**/build\n/config\n*/i18n\nout/\n\n# Mac OS\n**/.DS_Store\n\n#spark-lineage\n**/spark-lineage/metastore_db/\n**/spark-lineage/**/derby.log\n**/spark-lineage/**/hive/\n**/spark-lineage/**/out*.csv/\n**/spark-lineage/coalesce-test/\n\n#VS Code\n.vscode\n.devcontainer\n\n#spark smoke test\nsmoke-test/spark-smoke-test/docker/workspace/\nsmoke-test/spark-smoke-test/__pycache__/\n\n# cypress integration test generated files\n**/cypress/videos\n**/cypress/screenshots\n**/cypress/node_modules\n\n# Metadata Ingestion Generated\nmetadata-ingestion/generated/**\n\n# docs\ndocs/generated/\ndocs-website/versioned_docs/\ndocs-website/versioned_sidebars/\ntmp*\ntemp/**\n\n# frontend assets\ndatahub-frontend/public/**\n\n.remote*\n# Ignore runtime generated authenticatior/authorizer jar files\nmetadata-service/plugin/src/test/resources/sample-plugins/**\n\nsmoke-test/rollback-reports\ncoverage*.xml\n.vercel\n\n# A long series of binary directories we should ignore\ndatahub-frontend/bin/main/\ndatahub-frontend/bin/test/\ndatahub-graphql-core/bin/\ndatahub-upgrade/bin/\nentity-registry/bin/\ningestion-scheduler/bin/\nli-utils/bin/\nmetadata-auth/auth-api/bin/\nmetadata-dao-impl/kafka-producer/bin/\nmetadata-events/mxe-registration/bin/\nmetadata-events/mxe-schemas/bin/\nmetadata-events/mxe-utils-avro-1.7/bin/\nmetadata-integration/java/datahub-client/bin/\nmetadata-integration/java/datahub-protobuf/bin/\nmetadata-io/bin/\nmetadata-jobs/mae-consumer-job/bin/\nmetadata-jobs/mae-consumer/bin/\nmetadata-jobs/mce-consumer-job/bin/\nmetadata-jobs/mce-consumer/bin/\nmetadata-jobs/pe-consumer/bin/\nmetadata-models-validator/bin/\nmetadata-models/bin/\nmetadata-service/auth-config/bin/\nmetadata-service/auth-filter/bin/\nmetadata-service/auth-impl/bin/\nmetadata-service/auth-servlet-impl/bin/\nmetadata-service/factories/bin/\nmetadata-service/graphql-servlet-impl/bin/\nmetadata-service/openapi-servlet/bin/\nmetadata-service/plugin/bin/\nmetadata-service/plugin/src/test/sample-test-plugins/bin/\nmetadata-service/restli-api/bin/\nmetadata-service/restli-client/bin/\nmetadata-service/restli-servlet-impl/bin/\nmetadata-service/servlet/bin/\nmetadata-service/war/bin/\nmetadata-utils/bin/\ntest-models/bin/\n\ndatahub-executor/\ndatahub-integrations-service/\nmetadata-ingestion-modules/acryl-cloud\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 18.2802734375,
          "content": "# Auto-generated by .github/scripts/generate_pre_commit.py at 2025-01-09 10:08:09 UTC\n# Do not edit this file directly. Run the script to regenerate.\n# Add additional hooks in .github/scripts/pre-commit-override.yaml\nrepos:\n  - repo: local\n    hooks:\n      - id: datahub-graphql-core-spotless\n        name: datahub-graphql-core Spotless Apply\n        entry: ./gradlew :datahub-graphql-core:spotlessApply\n        language: system\n        files: ^datahub-graphql-core/.*\\.java$\n        pass_filenames: false\n\n      - id: datahub-upgrade-spotless\n        name: datahub-upgrade Spotless Apply\n        entry: ./gradlew :datahub-upgrade:spotlessApply\n        language: system\n        files: ^datahub-upgrade/.*\\.java$\n        pass_filenames: false\n\n      - id: entity-registry-spotless\n        name: entity-registry Spotless Apply\n        entry: ./gradlew :entity-registry:spotlessApply\n        language: system\n        files: ^entity-registry/.*\\.java$\n        pass_filenames: false\n\n      - id: ingestion-scheduler-spotless\n        name: ingestion-scheduler Spotless Apply\n        entry: ./gradlew :ingestion-scheduler:spotlessApply\n        language: system\n        files: ^ingestion-scheduler/.*\\.java$\n        pass_filenames: false\n\n      - id: li-utils-spotless\n        name: li-utils Spotless Apply\n        entry: ./gradlew :li-utils:spotlessApply\n        language: system\n        files: ^li-utils/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-auth-auth-api-spotless\n        name: metadata-auth/auth-api Spotless Apply\n        entry: ./gradlew :metadata-auth:auth-api:spotlessApply\n        language: system\n        files: ^metadata-auth/auth-api/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-dao-impl-kafka-producer-spotless\n        name: metadata-dao-impl/kafka-producer Spotless Apply\n        entry: ./gradlew :metadata-dao-impl:kafka-producer:spotlessApply\n        language: system\n        files: ^metadata-dao-impl/kafka-producer/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-events-mxe-avro-spotless\n        name: metadata-events/mxe-avro Spotless Apply\n        entry: ./gradlew :metadata-events:mxe-avro:spotlessApply\n        language: system\n        files: ^metadata-events/mxe-avro/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-events-mxe-registration-spotless\n        name: metadata-events/mxe-registration Spotless Apply\n        entry: ./gradlew :metadata-events:mxe-registration:spotlessApply\n        language: system\n        files: ^metadata-events/mxe-registration/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-events-mxe-schemas-spotless\n        name: metadata-events/mxe-schemas Spotless Apply\n        entry: ./gradlew :metadata-events:mxe-schemas:spotlessApply\n        language: system\n        files: ^metadata-events/mxe-schemas/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-events-mxe-utils-avro-spotless\n        name: metadata-events/mxe-utils-avro Spotless Apply\n        entry: ./gradlew :metadata-events:mxe-utils-avro:spotlessApply\n        language: system\n        files: ^metadata-events/mxe-utils-avro/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-ingestion-lint-fix\n        name: metadata-ingestion Lint Fix\n        entry: ./gradlew :metadata-ingestion:lintFix\n        language: system\n        files: ^metadata-ingestion/.*\\.py$\n        pass_filenames: false\n\n      - id: metadata-ingestion-modules-airflow-plugin-lint-fix\n        name: metadata-ingestion-modules/airflow-plugin Lint Fix\n        entry: ./gradlew :metadata-ingestion-modules:airflow-plugin:lintFix\n        language: system\n        files: ^metadata-ingestion-modules/airflow-plugin/.*\\.py$\n        pass_filenames: false\n\n      - id: metadata-ingestion-modules-dagster-plugin-lint-fix\n        name: metadata-ingestion-modules/dagster-plugin Lint Fix\n        entry: ./gradlew :metadata-ingestion-modules:dagster-plugin:lintFix\n        language: system\n        files: ^metadata-ingestion-modules/dagster-plugin/.*\\.py$\n        pass_filenames: false\n\n      - id: metadata-ingestion-modules-gx-plugin-lint-fix\n        name: metadata-ingestion-modules/gx-plugin Lint Fix\n        entry: ./gradlew :metadata-ingestion-modules:gx-plugin:lintFix\n        language: system\n        files: ^metadata-ingestion-modules/gx-plugin/.*\\.py$\n        pass_filenames: false\n\n      - id: metadata-ingestion-modules-prefect-plugin-lint-fix\n        name: metadata-ingestion-modules/prefect-plugin Lint Fix\n        entry: ./gradlew :metadata-ingestion-modules:prefect-plugin:lintFix\n        language: system\n        files: ^metadata-ingestion-modules/prefect-plugin/.*\\.py$\n        pass_filenames: false\n\n      - id: metadata-integration-java-acryl-spark-lineage-spotless\n        name: metadata-integration/java/acryl-spark-lineage Spotless Apply\n        entry: ./gradlew :metadata-integration:java:acryl-spark-lineage:spotlessApply\n        language: system\n        files: ^metadata-integration/java/acryl-spark-lineage/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-integration-java-datahub-client-spotless\n        name: metadata-integration/java/datahub-client Spotless Apply\n        entry: ./gradlew :metadata-integration:java:datahub-client:spotlessApply\n        language: system\n        files: ^metadata-integration/java/datahub-client/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-integration-java-datahub-event-spotless\n        name: metadata-integration/java/datahub-event Spotless Apply\n        entry: ./gradlew :metadata-integration:java:datahub-event:spotlessApply\n        language: system\n        files: ^metadata-integration/java/datahub-event/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-integration-java-datahub-protobuf-spotless\n        name: metadata-integration/java/datahub-protobuf Spotless Apply\n        entry: ./gradlew :metadata-integration:java:datahub-protobuf:spotlessApply\n        language: system\n        files: ^metadata-integration/java/datahub-protobuf/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-integration-java-datahub-schematron-cli-spotless\n        name: metadata-integration/java/datahub-schematron/cli Spotless Apply\n        entry: ./gradlew :metadata-integration:java:datahub-schematron:cli:spotlessApply\n        language: system\n        files: ^metadata-integration/java/datahub-schematron/cli/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-integration-java-datahub-schematron-lib-spotless\n        name: metadata-integration/java/datahub-schematron/lib Spotless Apply\n        entry: ./gradlew :metadata-integration:java:datahub-schematron:lib:spotlessApply\n        language: system\n        files: ^metadata-integration/java/datahub-schematron/lib/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-integration-java-examples-spotless\n        name: metadata-integration/java/examples Spotless Apply\n        entry: ./gradlew :metadata-integration:java:examples:spotlessApply\n        language: system\n        files: ^metadata-integration/java/examples/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-integration-java-openlineage-converter-spotless\n        name: metadata-integration/java/openlineage-converter Spotless Apply\n        entry: ./gradlew :metadata-integration:java:openlineage-converter:spotlessApply\n        language: system\n        files: ^metadata-integration/java/openlineage-converter/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-integration-java-spark-lineage-legacy-spotless\n        name: metadata-integration/java/spark-lineage-legacy Spotless Apply\n        entry: ./gradlew :metadata-integration:java:spark-lineage-legacy:spotlessApply\n        language: system\n        files: ^metadata-integration/java/spark-lineage-legacy/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-io-spotless\n        name: metadata-io Spotless Apply\n        entry: ./gradlew :metadata-io:spotlessApply\n        language: system\n        files: ^metadata-io/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-io-metadata-io-api-spotless\n        name: metadata-io/metadata-io-api Spotless Apply\n        entry: ./gradlew :metadata-io:metadata-io-api:spotlessApply\n        language: system\n        files: ^metadata-io/metadata-io-api/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-jobs-common-spotless\n        name: metadata-jobs/common Spotless Apply\n        entry: ./gradlew :metadata-jobs:common:spotlessApply\n        language: system\n        files: ^metadata-jobs/common/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-jobs-mae-consumer-spotless\n        name: metadata-jobs/mae-consumer Spotless Apply\n        entry: ./gradlew :metadata-jobs:mae-consumer:spotlessApply\n        language: system\n        files: ^metadata-jobs/mae-consumer/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-jobs-mae-consumer-job-spotless\n        name: metadata-jobs/mae-consumer-job Spotless Apply\n        entry: ./gradlew :metadata-jobs:mae-consumer-job:spotlessApply\n        language: system\n        files: ^metadata-jobs/mae-consumer-job/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-jobs-mce-consumer-spotless\n        name: metadata-jobs/mce-consumer Spotless Apply\n        entry: ./gradlew :metadata-jobs:mce-consumer:spotlessApply\n        language: system\n        files: ^metadata-jobs/mce-consumer/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-jobs-mce-consumer-job-spotless\n        name: metadata-jobs/mce-consumer-job Spotless Apply\n        entry: ./gradlew :metadata-jobs:mce-consumer-job:spotlessApply\n        language: system\n        files: ^metadata-jobs/mce-consumer-job/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-jobs-pe-consumer-spotless\n        name: metadata-jobs/pe-consumer Spotless Apply\n        entry: ./gradlew :metadata-jobs:pe-consumer:spotlessApply\n        language: system\n        files: ^metadata-jobs/pe-consumer/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-models-spotless\n        name: metadata-models Spotless Apply\n        entry: ./gradlew :metadata-models:spotlessApply\n        language: system\n        files: ^metadata-models/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-models-custom-spotless\n        name: metadata-models-custom Spotless Apply\n        entry: ./gradlew :metadata-models-custom:spotlessApply\n        language: system\n        files: ^metadata-models-custom/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-models-validator-spotless\n        name: metadata-models-validator Spotless Apply\n        entry: ./gradlew :metadata-models-validator:spotlessApply\n        language: system\n        files: ^metadata-models-validator/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-operation-context-spotless\n        name: metadata-operation-context Spotless Apply\n        entry: ./gradlew :metadata-operation-context:spotlessApply\n        language: system\n        files: ^metadata-operation-context/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-auth-config-spotless\n        name: metadata-service/auth-config Spotless Apply\n        entry: ./gradlew :metadata-service:auth-config:spotlessApply\n        language: system\n        files: ^metadata-service/auth-config/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-auth-filter-spotless\n        name: metadata-service/auth-filter Spotless Apply\n        entry: ./gradlew :metadata-service:auth-filter:spotlessApply\n        language: system\n        files: ^metadata-service/auth-filter/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-auth-impl-spotless\n        name: metadata-service/auth-impl Spotless Apply\n        entry: ./gradlew :metadata-service:auth-impl:spotlessApply\n        language: system\n        files: ^metadata-service/auth-impl/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-auth-servlet-impl-spotless\n        name: metadata-service/auth-servlet-impl Spotless Apply\n        entry: ./gradlew :metadata-service:auth-servlet-impl:spotlessApply\n        language: system\n        files: ^metadata-service/auth-servlet-impl/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-configuration-spotless\n        name: metadata-service/configuration Spotless Apply\n        entry: ./gradlew :metadata-service:configuration:spotlessApply\n        language: system\n        files: ^metadata-service/configuration/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-factories-spotless\n        name: metadata-service/factories Spotless Apply\n        entry: ./gradlew :metadata-service:factories:spotlessApply\n        language: system\n        files: ^metadata-service/factories/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-graphql-servlet-impl-spotless\n        name: metadata-service/graphql-servlet-impl Spotless Apply\n        entry: ./gradlew :metadata-service:graphql-servlet-impl:spotlessApply\n        language: system\n        files: ^metadata-service/graphql-servlet-impl/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-openapi-analytics-servlet-spotless\n        name: metadata-service/openapi-analytics-servlet Spotless Apply\n        entry: ./gradlew :metadata-service:openapi-analytics-servlet:spotlessApply\n        language: system\n        files: ^metadata-service/openapi-analytics-servlet/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-openapi-entity-servlet-spotless\n        name: metadata-service/openapi-entity-servlet Spotless Apply\n        entry: ./gradlew :metadata-service:openapi-entity-servlet:spotlessApply\n        language: system\n        files: ^metadata-service/openapi-entity-servlet/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-openapi-entity-servlet-generators-spotless\n        name: metadata-service/openapi-entity-servlet/generators Spotless Apply\n        entry: ./gradlew :metadata-service:openapi-entity-servlet:generators:spotlessApply\n        language: system\n        files: ^metadata-service/openapi-entity-servlet/generators/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-openapi-servlet-spotless\n        name: metadata-service/openapi-servlet Spotless Apply\n        entry: ./gradlew :metadata-service:openapi-servlet:spotlessApply\n        language: system\n        files: ^metadata-service/openapi-servlet/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-openapi-servlet-models-spotless\n        name: metadata-service/openapi-servlet/models Spotless Apply\n        entry: ./gradlew :metadata-service:openapi-servlet:models:spotlessApply\n        language: system\n        files: ^metadata-service/openapi-servlet/models/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-plugin-spotless\n        name: metadata-service/plugin Spotless Apply\n        entry: ./gradlew :metadata-service:plugin:spotlessApply\n        language: system\n        files: ^metadata-service/plugin/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-plugin-src-test-sample-test-plugins-spotless\n        name: metadata-service/plugin/src/test/sample-test-plugins Spotless Apply\n        entry: ./gradlew :metadata-service:plugin:src:test:sample-test-plugins:spotlessApply\n        language: system\n        files: ^metadata-service/plugin/src/test/sample-test-plugins/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-restli-client-spotless\n        name: metadata-service/restli-client Spotless Apply\n        entry: ./gradlew :metadata-service:restli-client:spotlessApply\n        language: system\n        files: ^metadata-service/restli-client/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-restli-client-api-spotless\n        name: metadata-service/restli-client-api Spotless Apply\n        entry: ./gradlew :metadata-service:restli-client-api:spotlessApply\n        language: system\n        files: ^metadata-service/restli-client-api/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-restli-servlet-impl-spotless\n        name: metadata-service/restli-servlet-impl Spotless Apply\n        entry: ./gradlew :metadata-service:restli-servlet-impl:spotlessApply\n        language: system\n        files: ^metadata-service/restli-servlet-impl/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-schema-registry-api-spotless\n        name: metadata-service/schema-registry-api Spotless Apply\n        entry: ./gradlew :metadata-service:schema-registry-api:spotlessApply\n        language: system\n        files: ^metadata-service/schema-registry-api/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-schema-registry-servlet-spotless\n        name: metadata-service/schema-registry-servlet Spotless Apply\n        entry: ./gradlew :metadata-service:schema-registry-servlet:spotlessApply\n        language: system\n        files: ^metadata-service/schema-registry-servlet/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-services-spotless\n        name: metadata-service/services Spotless Apply\n        entry: ./gradlew :metadata-service:services:spotlessApply\n        language: system\n        files: ^metadata-service/services/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-service-servlet-spotless\n        name: metadata-service/servlet Spotless Apply\n        entry: ./gradlew :metadata-service:servlet:spotlessApply\n        language: system\n        files: ^metadata-service/servlet/.*\\.java$\n        pass_filenames: false\n\n      - id: metadata-utils-spotless\n        name: metadata-utils Spotless Apply\n        entry: ./gradlew :metadata-utils:spotlessApply\n        language: system\n        files: ^metadata-utils/.*\\.java$\n        pass_filenames: false\n\n      - id: mock-entity-registry-spotless\n        name: mock-entity-registry Spotless Apply\n        entry: ./gradlew :mock-entity-registry:spotlessApply\n        language: system\n        files: ^mock-entity-registry/.*\\.java$\n        pass_filenames: false\n\n      - id: smoke-test-lint-fix\n        name: smoke-test Lint Fix\n        entry: ./gradlew :smoke-test:lintFix\n        language: system\n        files: ^smoke-test/.*\\.py$\n        pass_filenames: false\n\n      - id: test-models-spotless\n        name: test-models Spotless Apply\n        entry: ./gradlew :test-models:spotlessApply\n        language: system\n        files: ^test-models/.*\\.java$\n        pass_filenames: false\n\n      - id: smoke-test-cypress-lint-fix\n        name: smoke-test cypress Lint Fix\n        entry: ./gradlew :smoke-test:cypressLintFix\n        language: system\n        files: ^smoke-test/tests/cypress/.*$\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.044921875,
          "content": "# LinkedIn Owners.\n@linkedin/datahub-reviewers"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0986328125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2015 LinkedIn Corp. All rights reserved.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 14.8486328125,
          "content": "(c) 2015 LinkedIn Corp. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed\nunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\nCONDITIONS OF ANY KIND, either express or implied.\n\n================================================================================\n\nThis product uses Gradle (https://github.com/gradle/gradle) as its build system\nand includes the Gradle wrapper script.\nCopyright 2020 Gradle\nLicense: Apache-2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes/uses Apache Avro (http://avro.apache.org/)\nCopyright (c) 2012 The Apache Software Foundation.\nLicense: Apache 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes/uses Apache Kafka (https://kafka.apache.org/)\nCopyright (c) 2017 The Apache Software Foundation.\nLicense: Apache 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes/uses Apache HttpComponents (https://hc.apache.org/)\nCopyright (c) 2017 The Apache Software Foundation.\nLicense: Apache 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes/uses Apache Commons IO (https://commons.apache.org/proper/commons-io/)\nCopyright (c) 2020 The Apache Software Foundation.\nLicense: Apache 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes/uses Apache Commons Lang (https://commons.apache.org/proper/commons-lang/)\nCopyright (c) 2020 The Apache Software Foundation.\nLicense: Apache 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes/uses Snappy-Java (https://github.com/xerial/snappy-java)\nCopyright (c) 2011 Taro L. Saito\nLicense: Apache 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes/uses Jackson (http://jackson.codehaus.org/)\nCopyright (c) 2007- Tatu Saloranta, tatu.saloranta@iki.fi\nLicense: Apache 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes/uses ParaNamer (https://github.com/paul-hammant/paranamer)\nCopyright (c) 2006- Paul Hammant & ThoughtWorks Inc\nLicense: BSD 2 - https://opensource.org/licenses/BSD-2-Clause\n\nThis product includes/uses SLF4J (http://slf4j.org)\nCopyright (c) 2004 QOS.ch\nLicense: MIT - http://www.opensource.org/licenses/mit-license.php\n\nThis product includes/uses TestNG (http://testng.org/)\nCopyright (c) 2004 Cedric Beust\nLicense: Apache 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes/uses Mockito (http://mockito.org/)\nCopyright (c) 2007 Mockito contributors\nLicense: MIT - http://www.opensource.org/licenses/mit-license.php\n\nThis product includes/uses Play Framework (https://www.playframework.com/)\nCopyright (c) 2009- Typesafe\nLicense: Apache 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes/uses Spring Framework (http://projects.spring.io/spring-framework/)\nCopyright (c) 2002- the original author or authors\nLicense: Apache 2.0 - http://www.apache.org/licenses/LICENSE-2.0\n\n\n========================================================================\nExternal dependencies\n========================================================================\nIn addition, this product automatically loads third party code from an external repository.\nSuch third party code is subject to other license terms than as set forth above.\nIn addition, such third party code may also depend on and load multiple tiers of dependencies.\n\n=========================================\n\nOPEN SOURCE LICENSES:\n\n=========================================\n\nApache License, Version 2.0, January 2004\n\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions\n\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\n2. Grant of Copyright License\n\nSubject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License\n\nSubject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\n4. Redistribution\n\nYou may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n\nYou must give any other recipients of the Work or Derivative Works a copy of this License; and\nYou must cause any modified files to carry prominent notices stating that You changed the files; and\nYou must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\nIf the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.\nYou may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n\n5. Submission of Contributions\nUnless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\n6. Trademarks\nThis License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty\nUnless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability\nIn no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability\nWhile redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\n=========================================\n\nThe MIT License (MIT)\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n=========================================\n\nBSD 2-Clause License\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.62109375,
          "content": "<!--HOSTED_DOCS_ONLY\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\nexport const Logo = (props) => {\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", padding: \"20px\", height: \"190px\" }}>\n      <img\n        alt=\"DataHub Logo\"\n        src=\"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/datahub-logo-color-mark.svg\"\n        {...props}\n      />\n    </div>\n  );\n};\n\n<Logo />\n\n<!--\nHOSTED_DOCS_ONLY-->\n<p align=\"center\">\n<img alt=\"DataHub\" src=\"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/datahub-logo-color-mark.svg\" height=\"150\" />\n</p>\n<!-- -->\n\n# DataHub: The Data Discovery Platform for the Modern Data Stack\n## Built with ❤️ by <img src=\"https://datahubproject.io/img/acryl-logo-light-mark.png\" width=\"25\"/> [Acryl Data](https://acryldata.io) and <img src=\"https://datahubproject.io/img/LI-In-Bug.png\" width=\"25\"/> [LinkedIn](https://engineering.linkedin.com)\n[![Version](https://img.shields.io/github/v/release/datahub-project/datahub?include_prereleases)](https://github.com/datahub-project/datahub/releases/latest)\n[![PyPI version](https://badge.fury.io/py/acryl-datahub.svg)](https://badge.fury.io/py/acryl-datahub)\n[![build & test](https://github.com/datahub-project/datahub/workflows/build%20&%20test/badge.svg?branch=master&event=push)](https://github.com/datahub-project/datahub/actions?query=workflow%3A%22build+%26+test%22+branch%3Amaster+event%3Apush)\n[![Docker Pulls](https://img.shields.io/docker/pulls/acryldata/datahub-gms.svg)](https://hub.docker.com/r/acryldata/datahub-gms)\n[![Slack](https://img.shields.io/badge/slack-join_chat-white.svg?logo=slack&style=social)](https://datahubproject.io/slack?utm_source=github&utm_medium=readme&utm_campaign=github_readme)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/datahub-project/datahub/blob/master/docs/CONTRIBUTING.md)\n[![GitHub commit activity](https://img.shields.io/github/commit-activity/m/datahub-project/datahub)](https://github.com/datahub-project/datahub/pulls?q=is%3Apr)\n[![License](https://img.shields.io/github/license/datahub-project/datahub)](https://github.com/datahub-project/datahub/blob/master/LICENSE)\n[![YouTube](https://img.shields.io/youtube/channel/subscribers/UC3qFQC5IiwR5fvWEqi_tJ5w?style=social)](https://www.youtube.com/channel/UC3qFQC5IiwR5fvWEqi_tJ5w)\n[![Medium](https://img.shields.io/badge/Medium-12100E?style=for-the-badge&logo=medium&logoColor=white)](https://medium.com/datahub-project)\n[![Follow](https://img.shields.io/twitter/follow/datahubproject?label=Follow&style=social)](https://twitter.com/datahubproject)\n### 🏠 Hosted DataHub Docs (Courtesy of Acryl Data): [datahubproject.io](https://datahubproject.io/docs)\n\n---\n\n[Quickstart](https://datahubproject.io/docs/quickstart) |\n[Features](https://datahubproject.io/docs/) |\n[Roadmap](https://feature-requests.datahubproject.io/roadmap) |\n[Adoption](#adoption) |\n[Demo](https://demo.datahubproject.io/) |\n[Town Hall](https://datahubproject.io/docs/townhalls)\n\n---\n> 📣 DataHub Town Hall is the 4th Thursday at 9am US PT of every month - [add it to your calendar!](https://rsvp.datahubproject.io/)\n>\n> - Town-hall Zoom link: [zoom.datahubproject.io](https://zoom.datahubproject.io)\n> - [Meeting details](docs/townhalls.md) & [past recordings](docs/townhall-history.md)\n\n> ✨ DataHub Community Highlights:\n>\n> - Read our Monthly Project Updates [here](https://blog.datahubproject.io/tagged/project-updates).\n> - Bringing The Power Of The DataHub Real-Time Metadata Graph To Everyone At Acryl Data: [Data Engineering Podcast](https://www.dataengineeringpodcast.com/acryl-data-datahub-metadata-graph-episode-230/)\n> - Check out our most-read blog post, [DataHub: Popular Metadata Architectures Explained](https://engineering.linkedin.com/blog/2020/datahub-popular-metadata-architectures-explained) @ LinkedIn Engineering Blog.\n> - Join us on [Slack](docs/slack.md)! Ask questions and keep up with the latest announcements.\n\n## Introduction\n\nDataHub is an open-source data catalog for the modern data stack. Read about the architectures of different metadata systems and why DataHub excels [here](https://engineering.linkedin.com/blog/2020/datahub-popular-metadata-architectures-explained). Also read our\n[LinkedIn Engineering blog post](https://engineering.linkedin.com/blog/2019/data-hub), check out our [Strata presentation](https://speakerdeck.com/shirshanka/the-evolution-of-metadata-linkedins-journey-strata-nyc-2019) and watch our [Crunch Conference Talk](https://www.youtube.com/watch?v=OB-O0Y6OYDE). You should also visit [DataHub Architecture](docs/architecture/architecture.md) to get a better understanding of how DataHub is implemented.\n\n## Features & Roadmap\n\nCheck out DataHub's [Features](docs/features.md) & [Roadmap](https://feature-requests.datahubproject.io/roadmap).\n\n## Demo and Screenshots\n\nThere's a [hosted demo environment](https://demo.datahubproject.io/) courtesy of [Acryl Data](https://acryldata.io) where you can explore DataHub without installing it locally\n\n## Quickstart\n\nPlease follow the [DataHub Quickstart Guide](https://datahubproject.io/docs/quickstart) to get a copy of DataHub up & running locally using [Docker](https://docker.com). As the guide assumes some basic knowledge of Docker, we'd recommend you to go through the \"Hello World\" example of [A Docker Tutorial for Beginners](https://docker-curriculum.com) if Docker is completely foreign to you.\n\n## Development\n\nIf you're looking to build & modify datahub please take a look at our [Development Guide](https://datahubproject.io/docs/developers).\n\n<p align=\"center\">\n<a href=\"https://demo.datahubproject.io/\">\n  <img width=\"70%\"  src=\"https://raw.githubusercontent.com/datahub-project/static-assets/main/imgs/entity.png\"/>\n</a>\n</p>\n\n## Source Code and Repositories\n\n- [datahub-project/datahub](https://github.com/datahub-project/datahub): This repository contains the complete source code for DataHub's metadata model, metadata services, integration connectors and the web application.\n- [acryldata/datahub-actions](https://github.com/acryldata/datahub-actions): DataHub Actions is a framework for responding to changes to your DataHub Metadata Graph in real time.\n- [acryldata/datahub-helm](https://github.com/acryldata/datahub-helm): Repository of helm charts for deploying DataHub on a Kubernetes cluster\n- [acryldata/meta-world](https://github.com/acryldata/meta-world): A repository to store recipes, custom sources, transformations and other things to make your DataHub experience magical\n- [dbt-impact-action](https://github.com/acryldata/dbt-impact-action) : This repository contains a github action for commenting on your PRs with a summary of the impact of changes within a dbt project\n- [datahub-tools](https://github.com/makenotion/datahub-tools) : Additional python tools to interact with the DataHub GraphQL endpoints, built by Notion\n- [business-glossary-sync-action](https://github.com/acryldata/business-glossary-sync-action) : This repository contains a github action that opens PRs to update your business glossary yaml file.\n\n## Releases\n\nSee [Releases](https://github.com/datahub-project/datahub/releases) page for more details. We follow the [SemVer Specification](https://semver.org) when versioning the releases and adopt the [Keep a Changelog convention](https://keepachangelog.com/) for the changelog format.\n\n## Contributing\n\nWe welcome contributions from the community. Please refer to our [Contributing Guidelines](docs/CONTRIBUTING.md) for more details. We also have a [contrib](contrib) directory for incubating experimental features.\n\n## Community\n\nJoin our [Slack workspace](https://datahubproject.io/slack?utm_source=github&utm_medium=readme&utm_campaign=github_readme) for discussions and important announcements. You can also find out more about our upcoming [town hall meetings](docs/townhalls.md) and view past recordings.\n\n## Security\n\nSee [Security Stance](docs/SECURITY_STANCE.md) for information on DataHub's Security.\n\n## Adoption\n\nHere are the companies that have officially adopted DataHub. Please feel free to add yours to the list if we missed it.\n\n- [ABLY](https://ably.team/)\n- [Adevinta](https://www.adevinta.com/)\n- [Banksalad](https://www.banksalad.com)\n- [Cabify](https://cabify.tech/)\n- [ClassDojo](https://www.classdojo.com/)\n- [Coursera](https://www.coursera.org/)\n- [CVS Health](https://www.cvshealth.com/)\n- [DefinedCrowd](http://www.definedcrowd.com)\n- [DFDS](https://www.dfds.com/)\n- [Digital Turbine](https://www.digitalturbine.com/)\n- [Expedia Group](http://expedia.com)\n- [Experius](https://www.experius.nl)\n- [Geotab](https://www.geotab.com)\n- [Grofers](https://grofers.com)\n- [Haibo Technology](https://www.botech.com.cn)\n- [hipages](https://hipages.com.au/)\n- [inovex](https://www.inovex.de/)\n- [Inter&Co](https://inter.co/)\n- [IOMED](https://iomed.health)\n- [Klarna](https://www.klarna.com)\n- [LinkedIn](http://linkedin.com)\n- [Moloco](https://www.moloco.com/en)\n- [N26](https://n26brasil.com/)\n- [Optum](https://www.optum.com/)\n- [Peloton](https://www.onepeloton.com)\n- [PITS Global Data Recovery Services](https://www.pitsdatarecovery.net/)\n- [Razer](https://www.razer.com)\n- [Rippling](https://www.rippling.com/)\n- [Showroomprive](https://www.showroomprive.com/)\n- [SpotHero](https://spothero.com)\n- [Stash](https://www.stash.com)\n- [Shanghai HuaRui Bank](https://www.shrbank.com)\n- [s7 Airlines](https://www.s7.ru/)\n- [ThoughtWorks](https://www.thoughtworks.com)\n- [TypeForm](http://typeform.com)\n- [Udemy](https://www.udemy.com/)\n- [Uphold](https://uphold.com)\n- [Viasat](https://viasat.com)\n- [Wikimedia](https://www.wikimedia.org)\n- [Wolt](https://wolt.com)\n- [Zynga](https://www.zynga.com)\n\n\n\n## Select Articles & Talks\n\n- [DataHub Blog](https://blog.datahubproject.io/)\n- [DataHub YouTube Channel](https://www.youtube.com/channel/UC3qFQC5IiwR5fvWEqi_tJ5w)\n- [Optum: Data Mesh via DataHub](https://opensource.optum.com/blog/2022/03/23/data-mesh-via-datahub)\n- [Saxo Bank: Enabling Data Discovery in Data Mesh](https://medium.com/datahub-project/enabling-data-discovery-in-a-data-mesh-the-saxo-journey-451b06969c8f)\n- [Bringing The Power Of The DataHub Real-Time Metadata Graph To Everyone At Acryl Data](https://www.dataengineeringpodcast.com/acryl-data-datahub-metadata-graph-episode-230/)\n- [DataHub: Popular Metadata Architectures Explained](https://engineering.linkedin.com/blog/2020/datahub-popular-metadata-architectures-explained)\n- [Driving DataOps Culture with LinkedIn DataHub](https://www.youtube.com/watch?v=ccsIKK9nVxk) @ [DataOps Unleashed 2021](https://dataopsunleashed.com/#shirshanka-session)\n- [The evolution of metadata: LinkedIn’s story](https://speakerdeck.com/shirshanka/the-evolution-of-metadata-linkedins-journey-strata-nyc-2019) @ [Strata Data Conference 2019](https://conferences.oreilly.com/strata/strata-ny-2019.html)\n- [Journey of metadata at LinkedIn](https://www.youtube.com/watch?v=OB-O0Y6OYDE) @ [Crunch Data Conference 2019](https://crunchconf.com/2019)\n- [DataHub Journey with Expedia Group](https://www.youtube.com/watch?v=ajcRdB22s5o)\n- [Data Discoverability at SpotHero](https://www.slideshare.net/MaggieHays/data-discoverability-at-spothero)\n- [Data Catalogue — Knowing your data](https://medium.com/albert-franzi/data-catalogue-knowing-your-data-15f7d0724900)\n- [DataHub: A Generalized Metadata Search & Discovery Tool](https://engineering.linkedin.com/blog/2019/data-hub)\n- [Open sourcing DataHub: LinkedIn’s metadata search and discovery platform](https://engineering.linkedin.com/blog/2020/open-sourcing-datahub--linkedins-metadata-search-and-discovery-p)\n- [Emerging Architectures for Modern Data Infrastructure](https://future.com/emerging-architectures-for-modern-data-infrastructure-2020/)\n\nSee the full list [here](docs/links.md).\n\n## License\n\n[Apache License 2.0](./LICENSE).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.3623046875,
          "content": "# Reporting Security Issues\n\nIf you think you have found a security vulnerability, please send a report to security@datahubproject.io. This address can be used for all of Acryl Data’s open source and commercial products (including but not limited to DataHub and Acryl Data). We can accept only vulnerability reports at this address.\n\nIt's not mandatory, but if you'd like to encrypt your message to us; please use our PGP key. The key fingerprint is:\n\nA50B10A86CC21F4B7BE102E170764C95B4FACEBF\n\nThe key is available from [keyserver.ubuntu.com](https://keyserver.ubuntu.com/pks/lookup?search=A50B10A86CC21F4B7BE102E170764C95B4FACEBF&fingerprint=on&op=index).\n\nAcryl Data will send you a response indicating the next steps in handling your report. After the initial reply to your report, the security team will keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.\n\n**Important:** We ask you to not disclose the vulnerability before it have been fixed and announced, unless you received a response from the Acryl Data security team that you can do so.\n\n## Security announcements\n\nWe maintain [Security Advisories](https://github.com/datahub-project/datahub/security/advisories) on the DataHub project GitHub repository,\nwhere we will post a summary, remediation, and mitigation details for any patch containing security fixes.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 24.2119140625,
          "content": "buildscript {\n  ext.jdkVersionDefault = 17\n  ext.javaClassVersionDefault = 11\n\n  def springModules = ['mae-consumer', 'mce-consumer', 'pe-consumer']\n\n  ext.jdkVersion = { p ->\n    // If Spring 6 is present, hard dependency on jdk17\n    if (p.configurations.any { it.getDependencies().any{\n      (it.getGroup().equals(\"org.springframework\") && it.getVersion().startsWith(\"6.\"))\n      || (it.getGroup().equals(\"org.springframework.boot\") && it.getVersion().startsWith(\"3.\") && !it.getName().equals(\"spring-boot-starter-test\"))\n    }} || springModules.contains(p.name)) {\n      return 17\n    } else {\n      // otherwise we can use the preferred default which can be overridden with a property: -PjdkVersionDefault\n      return p.hasProperty('jdkVersionDefault') ? Integer.valueOf((String) p.getProperty('jdkVersionDefault')) : ext.jdkVersionDefault\n    }\n  }\n\n  ext.javaClassVersion = { p ->\n    // If Spring 6 is present, hard dependency on jdk17\n    if (p.configurations.any { it.getDependencies().any {\n      (it.getGroup().equals(\"org.springframework\") && it.getVersion().startsWith(\"6.\"))\n              || (it.getGroup().equals(\"org.springframework.boot\") && it.getVersion().startsWith(\"3.\") && !it.getName().equals(\"spring-boot-starter-test\"))\n    }} || springModules.contains(p.name)) {\n      return 17\n    } else {\n      // otherwise we can use the preferred default which can be overridden with a property: -PjavaClassVersionDefault\n      return p.hasProperty('javaClassVersionDefault') ? Integer.valueOf((String) p.getProperty('javaClassVersionDefault')) : ext.javaClassVersionDefault\n    }\n  }\n\n  ext.junitJupiterVersion = '5.6.1'\n  // Releases: https://github.com/linkedin/rest.li/blob/master/CHANGELOG.md\n  ext.pegasusVersion = '29.57.0'\n  ext.mavenVersion = '3.6.3'\n  ext.versionGradle = '8.11.1'\n  ext.springVersion = '6.1.14'\n  ext.springBootVersion = '3.2.9'\n  ext.springKafkaVersion = '3.1.6'\n  ext.openTelemetryVersion = '1.18.0'\n  ext.neo4jVersion = '5.14.0'\n  ext.neo4jTestVersion = '5.14.0'\n  ext.neo4jApocVersion = '5.14.0'\n  ext.testContainersVersion = '1.17.4'\n  ext.elasticsearchVersion = '2.11.1' // ES 7.10, Opensearch 1.x, 2.x\n  ext.jacksonVersion = '2.15.3'\n  ext.jettyVersion = '11.0.21'\n  // see also datahub-frontend/play.gradle\n  ext.playVersion = '2.8.22'\n  ext.playScalaVersion = '2.13'\n  ext.akkaVersion = '2.6.21' // 2.7.0+ has incompatible license\n  ext.log4jVersion = '2.23.1'\n  ext.slf4jVersion = '1.7.36'\n  ext.logbackClassic = '1.4.14'\n  ext.hadoop3Version = '3.3.6'\n  ext.kafkaVersion = '5.5.15'\n  ext.hazelcastVersion = '5.3.6'\n  ext.ebeanVersion = '15.5.2'\n  ext.googleJavaFormatVersion = '1.18.1'\n  ext.openLineageVersion = '1.25.0'\n  ext.logbackClassicJava8 = '1.2.12'\n\n  ext.docker_registry = 'acryldata'\n\n  apply from: './repositories.gradle'\n  buildscript.repositories.addAll(project.repositories)\n  dependencies {\n    classpath 'com.linkedin.pegasus:gradle-plugins:' + pegasusVersion\n    classpath 'com.github.node-gradle:gradle-node-plugin:7.0.2'\n    classpath 'io.acryl.gradle.plugin:gradle-avro-plugin:0.2.0'\n    classpath 'org.springframework.boot:spring-boot-gradle-plugin:' + springBootVersion\n    classpath \"io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0\"\n    classpath \"com.palantir.gradle.gitversion:gradle-git-version:3.0.0\"\n    classpath \"org.gradle.playframework:gradle-playframework:0.14\"\n    classpath \"gradle.plugin.org.hidetake:gradle-swagger-generator-plugin:2.19.2\"\n  }\n}\n\nplugins {\n  id 'com.gorylenko.gradle-git-properties' version '2.4.1'\n  id 'com.gradleup.shadow' version '8.3.5' apply false\n  id 'com.palantir.docker' version '0.35.0' apply false\n  id 'com.avast.gradle.docker-compose' version '0.17.6'\n  id \"com.diffplug.spotless\" version \"6.23.3\"\n  // https://blog.ltgt.net/javax-jakarta-mess-and-gradle-solution/\n  // TODO id \"org.gradlex.java-ecosystem-capabilities\" version \"1.0\"\n}\n\napply from: \"gradle/docker/docker.gradle\"\n\nproject.ext.spec = [\n    'product' : [\n        'pegasus' : [\n            'd2' : 'com.linkedin.pegasus:d2:' + pegasusVersion,\n            'data' : 'com.linkedin.pegasus:data:' + pegasusVersion,\n            'dataAvro': 'com.linkedin.pegasus:data-avro:' + pegasusVersion,\n            'generator': 'com.linkedin.pegasus:generator:' + pegasusVersion,\n            'restliCommon' : 'com.linkedin.pegasus:restli-common:' + pegasusVersion,\n            'restliClient' : 'com.linkedin.pegasus:restli-client:' + pegasusVersion,\n            'restliDocgen' : 'com.linkedin.pegasus:restli-docgen:' + pegasusVersion,\n            'restliServer' : 'com.linkedin.pegasus:restli-server:' + pegasusVersion,\n            'restliSpringBridge': 'com.linkedin.pegasus:restli-spring-bridge:' + pegasusVersion,\n            'restliTestUtils' : 'com.linkedin.pegasus:restli-client-testutils:' + pegasusVersion,\n        ]\n    ]\n]\n\nproject.ext.externalDependency = [\n    'akkaHttp': \"com.typesafe.akka:akka-http-core_$playScalaVersion:10.2.10\", // max version due to licensing\n    'akkaActor': \"com.typesafe.akka:akka-actor_$playScalaVersion:$akkaVersion\",\n    'akkaStream': \"com.typesafe.akka:akka-stream_$playScalaVersion:$akkaVersion\",\n    'akkaActorTyped': \"com.typesafe.akka:akka-actor-typed_$playScalaVersion:$akkaVersion\",\n    'akkaSlf4j': \"com.typesafe.akka:akka-slf4j_$playScalaVersion:$akkaVersion\",\n    'akkaJackson': \"com.typesafe.akka:akka-serialization-jackson_$playScalaVersion:$akkaVersion\",\n    'akkaParsing': \"com.typesafe.akka:akka-parsing_$playScalaVersion:$akkaVersion\",\n    'akkaProtobuf': \"com.typesafe.akka:akka-protobuf-v3_$playScalaVersion:$akkaVersion\",\n    'antlr4Runtime': 'org.antlr:antlr4-runtime:4.9.3',\n    'antlr4': 'org.antlr:antlr4:4.9.3',\n    'assertJ': 'org.assertj:assertj-core:3.11.1',\n    'avro': 'org.apache.avro:avro:1.11.4',\n    'avroCompiler': 'org.apache.avro:avro-compiler:1.11.4',\n    'awsGlueSchemaRegistrySerde': 'software.amazon.glue:schema-registry-serde:1.1.17',\n    'awsMskIamAuth': 'software.amazon.msk:aws-msk-iam-auth:2.0.3',\n    'awsS3': 'software.amazon.awssdk:s3:2.26.21',\n    'awsSecretsManagerJdbc': 'com.amazonaws.secretsmanager:aws-secretsmanager-jdbc:1.0.13',\n    'awsPostgresIamAuth': 'software.amazon.jdbc:aws-advanced-jdbc-wrapper:1.0.2',\n    'awsRds':'software.amazon.awssdk:rds:2.18.24',\n    'cacheApi': 'javax.cache:cache-api:1.1.0',\n    'commonsCli': 'commons-cli:commons-cli:1.5.0',\n    'commonsIo': 'commons-io:commons-io:2.17.0',\n    'commonsLang': 'commons-lang:commons-lang:2.6',\n    'commonsText': 'org.apache.commons:commons-text:1.12.0',\n    'commonsCollections': 'commons-collections:commons-collections:3.2.2',\n    'caffeine': 'com.github.ben-manes.caffeine:caffeine:3.1.8',\n    'datastaxOssNativeProtocol': 'com.datastax.oss:native-protocol:1.5.1',\n    'datastaxOssCore': 'com.datastax.oss:java-driver-core:4.14.1',\n    'datastaxOssQueryBuilder': 'com.datastax.oss:java-driver-query-builder:4.14.1',\n    'dgraph4j' : 'io.dgraph:dgraph4j:21.12.0',\n    'dropwizardMetricsCore': 'io.dropwizard.metrics:metrics-core:4.2.3',\n    'dropwizardMetricsJmx': 'io.dropwizard.metrics:metrics-jmx:4.2.3',\n    'ebean': 'io.ebean:ebean:' + ebeanVersion,\n    'ebeanTest': 'io.ebean:ebean-test:' + ebeanVersion,\n    'ebeanAgent': 'io.ebean:ebean-agent:' + ebeanVersion,\n    'ebeanDdl': 'io.ebean:ebean-ddl-generator:' + ebeanVersion,\n    'ebeanQueryBean': 'io.ebean:querybean-generator:' + ebeanVersion,\n    'elasticSearchRest': 'org.opensearch.client:opensearch-rest-high-level-client:' + elasticsearchVersion,\n    'elasticSearchJava': 'org.opensearch.client:opensearch-java:2.6.0',\n    'findbugsAnnotations': 'com.google.code.findbugs:annotations:3.0.1',\n    'graphqlJava': 'com.graphql-java:graphql-java:21.5',\n    'graphqlJavaScalars': 'com.graphql-java:graphql-java-extended-scalars:21.0',\n    'gson': 'com.google.code.gson:gson:2.8.9',\n    'guice': 'com.google.inject:guice:7.0.0',\n    'guicePlay': 'com.google.inject:guice:5.0.1', // Used for frontend while still on old Play version\n    'guava': 'com.google.guava:guava:32.1.3-jre',\n    'h2': 'com.h2database:h2:2.2.224',\n    'hadoopCommon':'org.apache.hadoop:hadoop-common:2.7.2',\n    'hadoopMapreduceClient':'org.apache.hadoop:hadoop-mapreduce-client-core:2.7.2',\n    \"hadoopClient\": \"org.apache.hadoop:hadoop-client:$hadoop3Version\",\n    \"hadoopCommon3\":\"org.apache.hadoop:hadoop-common:$hadoop3Version\",\n    'hazelcast':\"com.hazelcast:hazelcast:$hazelcastVersion\",\n    'hazelcastSpring':\"com.hazelcast:hazelcast-spring:$hazelcastVersion\",\n    'hazelcastTest':\"com.hazelcast:hazelcast:$hazelcastVersion:tests\",\n    'hibernateCore': 'org.hibernate:hibernate-core:5.2.16.Final',\n    'httpClient': 'org.apache.httpcomponents.client5:httpclient5:5.3',\n    'iStackCommons': 'com.sun.istack:istack-commons-runtime:4.0.1',\n    'jacksonJDK8': \"com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion\",\n    'jacksonDataPropertyFormat': \"com.fasterxml.jackson.dataformat:jackson-dataformat-properties:$jacksonVersion\",\n    'jacksonCore': \"com.fasterxml.jackson.core:jackson-core:$jacksonVersion\",\n    'jacksonDataBind': \"com.fasterxml.jackson.core:jackson-databind:$jacksonVersion\",\n    'jacksonDataFormatYaml': \"com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion\",\n    'woodstoxCore': 'com.fasterxml.woodstox:woodstox-core:6.4.0',\n    'javatuples': 'org.javatuples:javatuples:1.2',\n    'javaxInject' : 'javax.inject:javax.inject:1',\n    'javaxValidation' : 'javax.validation:validation-api:2.0.1.Final',\n    'jakartaValidation': 'jakarta.validation:jakarta.validation-api:3.1.0-M2',\n    'jerseyCore': 'org.glassfish.jersey.core:jersey-client:2.41',\n    'jerseyGuava': 'org.glassfish.jersey.bundles.repackaged:jersey-guava:2.25.1',\n    'jettyJaas': \"org.eclipse.jetty:jetty-jaas:$jettyVersion\",\n    'jettyClient': \"org.eclipse.jetty:jetty-client:$jettyVersion\",\n    'jettison': 'org.codehaus.jettison:jettison:1.5.4',\n    'jgrapht': 'org.jgrapht:jgrapht-core:1.5.1',\n    'jna': 'net.java.dev.jna:jna:5.12.1',\n    'jsonPatch': 'jakarta.json:jakarta.json-api:2.1.3',\n    'jsonPathImpl': 'org.eclipse.parsson:parsson:1.1.6',\n    'jsonSimple': 'com.googlecode.json-simple:json-simple:1.1.1',\n    'jsonSmart': 'net.minidev:json-smart:2.4.9',\n    'json': 'org.json:json:20231013',\n    'jsonSchemaValidator': 'com.github.java-json-tools:json-schema-validator:2.2.14',\n    'junit': 'junit:junit:4.13.2',\n    'junitJupiterApi': \"org.junit.jupiter:junit-jupiter-api:$junitJupiterVersion\",\n    'junitJupiterParams': \"org.junit.jupiter:junit-jupiter-params:$junitJupiterVersion\",\n    'junitJupiterEngine': \"org.junit.jupiter:junit-jupiter-engine:$junitJupiterVersion\",\n    // avro-serde includes dependencies for `kafka-avro-serializer` `kafka-schema-registry-client` and `avro`\n    'kafkaAvroSerde': \"io.confluent:kafka-streams-avro-serde:$kafkaVersion\",\n    'kafkaAvroSerializer': 'io.confluent:kafka-avro-serializer:5.1.4',\n    'kafkaClients': \"org.apache.kafka:kafka-clients:$kafkaVersion-ccs\",\n    'snappy': 'org.xerial.snappy:snappy-java:1.1.10.4',\n    'logbackClassic': \"ch.qos.logback:logback-classic:$logbackClassic\",\n    'logbackClassicJava8' : \"ch.qos.logback:logback-classic:$logbackClassicJava8\",\n    'slf4jApi': \"org.slf4j:slf4j-api:$slf4jVersion\",\n    'log4jCore': \"org.apache.logging.log4j:log4j-core:$log4jVersion\",\n    'log4jApi': \"org.apache.logging.log4j:log4j-api:$log4jVersion\",\n    'log4j12Api': \"org.slf4j:log4j-over-slf4j:$slf4jVersion\",\n    'log4j2Api': \"org.apache.logging.log4j:log4j-to-slf4j:$log4jVersion\",\n    'lombok': 'org.projectlombok:lombok:1.18.30',\n    'mariadbConnector': 'org.mariadb.jdbc:mariadb-java-client:2.6.0',\n    'mavenArtifact': \"org.apache.maven:maven-artifact:$mavenVersion\",\n    'mixpanel': 'com.mixpanel:mixpanel-java:1.4.4',\n    'mockito': 'org.mockito:mockito-core:4.11.0',\n    'mockitoInline': 'org.mockito:mockito-inline:4.11.0',\n    'mockServer': 'org.mock-server:mockserver-netty:5.11.2',\n    'mockServerClient': 'org.mock-server:mockserver-client-java:5.11.2',\n    'mysqlConnector': 'com.mysql:mysql-connector-j:8.4.0',\n    'neo4jHarness': 'org.neo4j.test:neo4j-harness:' + neo4jTestVersion,\n    'neo4jJavaDriver': 'org.neo4j.driver:neo4j-java-driver:' + neo4jVersion,\n    'neo4jTestJavaDriver': 'org.neo4j.driver:neo4j-java-driver:' + neo4jTestVersion,\n    'neo4jApocCore': 'org.neo4j.procedure:apoc-core:' + neo4jApocVersion,\n    'neo4jApocCommon': 'org.neo4j.procedure:apoc-common:' + neo4jApocVersion,\n    'opentelemetryApi': 'io.opentelemetry:opentelemetry-api:' + openTelemetryVersion,\n    'opentelemetryAnnotations': 'io.opentelemetry:opentelemetry-extension-annotations:' + openTelemetryVersion,\n    'opentracingJdbc':'io.opentracing.contrib:opentracing-jdbc:0.2.15',\n    'parquet': 'org.apache.parquet:parquet-avro:1.12.3',\n    'parquetHadoop': 'org.apache.parquet:parquet-hadoop:1.13.1',\n    'picocli': 'info.picocli:picocli:4.5.0',\n    'playCache': \"com.typesafe.play:play-cache_$playScalaVersion:$playVersion\",\n    'playCaffeineCache': \"com.typesafe.play:play-caffeine-cache_$playScalaVersion:$playVersion\",\n    'playWs': \"com.typesafe.play:play-ahc-ws-standalone_$playScalaVersion:2.1.10\",\n    'playDocs': \"com.typesafe.play:play-docs_$playScalaVersion:$playVersion\",\n    'playGuice': \"com.typesafe.play:play-guice_$playScalaVersion:$playVersion\",\n    'playJavaJdbc': \"com.typesafe.play:play-java-jdbc_$playScalaVersion:$playVersion\",\n    'playAkkaHttpServer': \"com.typesafe.play:play-akka-http-server_$playScalaVersion:$playVersion\",\n    'playServer': \"com.typesafe.play:play-server_$playScalaVersion:$playVersion\",\n    'playTest': \"com.typesafe.play:play-test_$playScalaVersion:$playVersion\",\n    'playFilters': \"com.typesafe.play:filters-helpers_$playScalaVersion:$playVersion\",\n    'pac4j': 'org.pac4j:pac4j-oidc:6.0.6',\n    'playPac4j': \"org.pac4j:play-pac4j_$playScalaVersion:12.0.0-PLAY2.8\",\n    'postgresql': 'org.postgresql:postgresql:42.7.4',\n    'protobuf': 'com.google.protobuf:protobuf-java:3.25.5',\n    'grpcProtobuf': 'io.grpc:grpc-protobuf:1.53.0',\n    'rangerCommons': 'org.apache.ranger:ranger-plugins-common:2.3.0',\n    'reflections': 'org.reflections:reflections:0.9.9',\n    'resilience4j': 'io.github.resilience4j:resilience4j-retry:1.7.1',\n    'rythmEngine': 'org.rythmengine:rythm-engine:1.3.0',\n    'servletApi': 'jakarta.servlet:jakarta.servlet-api:6.0.0',\n    'shiroCore': 'org.apache.shiro:shiro-core:1.13.0',\n    'snakeYaml': 'org.yaml:snakeyaml:2.0',\n    'sparkSql' : 'org.apache.spark:spark-sql_2.12:3.0.3',\n    'sparkHive' : 'org.apache.spark:spark-hive_2.12:3.0.3',\n    'springBeans': \"org.springframework:spring-beans:$springVersion\",\n    'springContext': \"org.springframework:spring-context:$springVersion\",\n    'springCore': \"org.springframework:spring-core:$springVersion\",\n    'springDocUI': 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0',\n    'springJdbc': \"org.springframework:spring-jdbc:$springVersion\",\n    'springWeb': \"org.springframework:spring-web:$springVersion\",\n    'springWebMVC': \"org.springframework:spring-webmvc:$springVersion\",\n    'springBootTest': \"org.springframework.boot:spring-boot-starter-test:$springBootVersion\",\n    'springBoot': \"org.springframework.boot:spring-boot:$springBootVersion\",\n    'springBootAutoconfigure': \"org.springframework.boot:spring-boot-autoconfigure:$springBootVersion\",\n    'springBootStarterWeb': \"org.springframework.boot:spring-boot-starter-web:$springBootVersion\",\n    'springBootStarterJetty': \"org.springframework.boot:spring-boot-starter-jetty:$springBootVersion\",\n    'springBootStarterCache': \"org.springframework.boot:spring-boot-starter-cache:$springBootVersion\",\n    'springBootStarterValidation': \"org.springframework.boot:spring-boot-starter-validation:$springBootVersion\",\n    'springKafka': \"org.springframework.kafka:spring-kafka:$springKafkaVersion\",\n    'springActuator': \"org.springframework.boot:spring-boot-starter-actuator:$springBootVersion\",\n    'springRetry': \"org.springframework.retry:spring-retry:2.0.6\",\n    'swaggerAnnotations': 'io.swagger.core.v3:swagger-annotations:2.2.15',\n    'swaggerCli': 'io.swagger.codegen.v3:swagger-codegen-cli:3.0.46',\n    'swaggerCore': 'io.swagger.core.v3:swagger-core:2.2.7',\n    'springBootAutoconfigureJdk11': 'org.springframework.boot:spring-boot-autoconfigure:2.7.18',\n    'testng': 'org.testng:testng:7.8.0',\n    'testContainers': 'org.testcontainers:testcontainers:' + testContainersVersion,\n    'testContainersJunit': 'org.testcontainers:junit-jupiter:' + testContainersVersion,\n    'testContainersPostgresql':'org.testcontainers:postgresql:' + testContainersVersion,\n    'testContainersElasticsearch': 'org.testcontainers:elasticsearch:' + testContainersVersion,\n    'testContainersCassandra': 'org.testcontainers:cassandra:' + testContainersVersion,\n    'testContainersKafka': 'org.testcontainers:kafka:' + testContainersVersion,\n    'testContainersOpenSearch': 'org.opensearch:opensearch-testcontainers:2.0.0',\n    'typesafeConfig':'com.typesafe:config:1.4.1',\n    'wiremock':'com.github.tomakehurst:wiremock:2.10.0',\n    'zookeeper': 'org.apache.zookeeper:zookeeper:3.8.4',\n    'wire': 'com.squareup.wire:wire-compiler:3.7.1',\n    'charle':  'com.charleskorn.kaml:kaml:0.53.0',\n    'jline':'jline:jline:1.4.1',\n    'jetbrains':' org.jetbrains.kotlin:kotlin-stdlib:1.6.0',\n    'annotationApi': 'javax.annotation:javax.annotation-api:1.3.2',\n    'jakartaAnnotationApi': 'jakarta.annotation:jakarta.annotation-api:3.0.0',\n    'classGraph': 'io.github.classgraph:classgraph:4.8.172',\n    'mustache': 'com.github.spullara.mustache.java:compiler:0.9.14',\n    'javaxMail': 'com.sun.mail:jakarta.mail:1.6.7'\n]\n\nallprojects {\n  apply plugin: 'idea'\n  apply plugin: 'eclipse'\n  // apply plugin: 'org.gradlex.java-ecosystem-capabilities'\n\n  tasks.withType(Test).configureEach { task -> if (task.project.name != \"metadata-io\") {\n      // https://docs.gradle.org/current/userguide/performance.html\n      maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1\n\n      if (project.configurations.getByName(\"testImplementation\").getDependencies()\n              .any { it.getName().contains(\"testng\") }) {\n        useTestNG()\n      }\n    }\n  }\n\n  /**\n   * If making changes to this section also see the sections for pegasus below\n   * which use project.plugins.hasPlugin('pegasus')\n   **/\n  if (!project.plugins.hasPlugin('pegasus') && (project.plugins.hasPlugin('java')\n          || project.plugins.hasPlugin('java-library')\n          || project.plugins.hasPlugin('application'))) {\n\n    java {\n      toolchain {\n        languageVersion = JavaLanguageVersion.of(jdkVersion(project))\n      }\n    }\n\n    compileJava {\n      options.release = javaClassVersion(project)\n    }\n\n    tasks.withType(JavaCompile).configureEach {\n      javaCompiler = javaToolchains.compilerFor {\n        languageVersion = JavaLanguageVersion.of(jdkVersion(project))\n      }\n      // Puts parameter names into compiled class files, necessary for Spring 6\n      options.compilerArgs.add(\"-parameters\")\n    }\n\n    tasks.withType(JavaExec).configureEach {\n      javaLauncher = javaToolchains.launcherFor {\n        languageVersion = JavaLanguageVersion.of(jdkVersion(project))\n      }\n    }\n  }\n\n  // not duplicated, need to set this outside and inside afterEvaluate\n  afterEvaluate {\n    /**\n     * If making changes to this section also see the sections for pegasus below\n     * which use project.plugins.hasPlugin('pegasus')\n     **/\n    if (!project.plugins.hasPlugin('pegasus') && (project.plugins.hasPlugin('java')\n            || project.plugins.hasPlugin('java-library')\n            || project.plugins.hasPlugin('application'))) {\n\n      compileJava {\n        options.release = javaClassVersion(project)\n      }\n\n      tasks.withType(JavaExec).configureEach {\n        javaLauncher = javaToolchains.launcherFor {\n          languageVersion = JavaLanguageVersion.of(jdkVersion(project))\n        }\n      }\n    }\n  }\n\n}\n\nconfigure(subprojects.findAll {! it.name.startsWith('spark-lineage')}) {\n\n  configurations.all {\n    exclude group: \"io.netty\", module: \"netty\"\n    exclude group: \"log4j\", module: \"log4j\"\n    exclude group: \"org.springframework.boot\", module: \"spring-boot-starter-logging\"\n    exclude group: \"com.vaadin.external.google\", module: \"android-json\"\n    exclude group: \"org.slf4j\", module: \"slf4j-reload4j\"\n    exclude group: \"org.slf4j\", module: \"slf4j-log4j12\"\n    exclude group: \"org.slf4j\", module: \"slf4j-nop\"\n    exclude group: \"org.slf4j\", module: \"slf4j-ext\"\n    exclude group: \"org.codehaus.jackson\", module: \"jackson-mapper-asl\"\n    exclude group: \"javax.mail\", module: \"mail\"\n\n    resolutionStrategy.force externalDependency.antlr4Runtime\n    resolutionStrategy.force externalDependency.antlr4\n    resolutionStrategy.force 'org.apache.mina:mina-core:2.2.4'\n  }\n}\n\nsubprojects {\n\n  apply plugin: 'maven-publish'\n  apply plugin: 'com.gorylenko.gradle-git-properties'\n  apply plugin: 'com.diffplug.spotless'\n\n  gitProperties {\n    keys = ['git.commit.id','git.commit.id.describe','git.commit.time']\n    // using any tags (not limited to annotated tags) for \"git.commit.id.describe\" property\n    // see http://ajoberstar.org/grgit/grgit-describe.html for more info about the describe method and available parameters\n    // 'it' is an instance of org.ajoberstar.grgit.Grgit\n    customProperty 'git.commit.id.describe', { it.describe(tags: true) }\n    failOnNoGitDirectory = false\n  }\n\n  plugins.withType(JavaPlugin).configureEach {\n    if (project.name == 'datahub-web-react') {\n      return\n    }\n\n    dependencies {\n      implementation externalDependency.annotationApi\n      constraints {\n        implementation(\"com.google.googlejavaformat:google-java-format:$googleJavaFormatVersion\")\n        implementation('io.netty:netty-all:4.1.115.Final')\n        implementation('org.apache.commons:commons-compress:1.27.1')\n        implementation('org.apache.velocity:velocity-engine-core:2.4')\n        implementation('org.hibernate:hibernate-validator:6.0.20.Final')\n        implementation(\"com.fasterxml.jackson.core:jackson-databind:$jacksonVersion\")\n        implementation(\"com.fasterxml.jackson.core:jackson-dataformat-cbor:$jacksonVersion\")\n        implementation(externalDependency.commonsIo)\n        implementation(externalDependency.protobuf)\n      }\n    }\n\n    spotless {\n      java {\n        googleJavaFormat()\n        target project.fileTree(project.projectDir) {\n          include 'src/**/*.java'\n          include 'app/**/*.java'\n          include 'test/**/*.java'\n          exclude 'src/**/resources/'\n          exclude 'src/**/generated/'\n          exclude 'src/**/mainGeneratedDataTemplate/'\n          exclude 'src/**/mainGeneratedRest/'\n          exclude 'src/renamed/avro/'\n          exclude 'src/test/sample-test-plugins/'\n        }\n      }\n    }\n\n    if (project.plugins.hasPlugin('pegasus')) {\n      dependencies {\n        dataTemplateCompile spec.product.pegasus.data\n        dataTemplateCompile externalDependency.annotationApi // support > jdk8\n        restClientCompile spec.product.pegasus.restliClient\n      }\n\n      java {\n        toolchain {\n          languageVersion = JavaLanguageVersion.of(jdkVersion(project))\n        }\n      }\n\n      compileJava {\n        options.release = javaClassVersion(project)\n      }\n\n      tasks.withType(JavaCompile).configureEach {\n        javaCompiler = javaToolchains.compilerFor {\n          languageVersion = JavaLanguageVersion.of(jdkVersion(project))\n        }\n        // Puts parameter names into compiled class files, necessary for Spring 6\n        options.compilerArgs.add(\"-parameters\")\n      }\n\n      tasks.withType(JavaExec).configureEach {\n        javaLauncher = javaToolchains.launcherFor {\n          languageVersion = JavaLanguageVersion.of(jdkVersion(project))\n        }\n      }\n    }\n\n    afterEvaluate {\n      def spotlessJavaTask = tasks.findByName('spotlessJava')\n      def processTask = tasks.findByName('processResources')\n      if (processTask != null) {\n        spotlessJavaTask.dependsOn processTask\n      }\n      def compileJavaTask = tasks.findByName('compileJava')\n      if (compileJavaTask != null) {\n        spotlessJavaTask.dependsOn compileJavaTask\n      }\n    }\n  }\n\n  afterEvaluate {\n    if (project.plugins.hasPlugin('pegasus')) {\n      dependencies {\n        dataTemplateCompile spec.product.pegasus.data\n        dataTemplateCompile externalDependency.annotationApi // support > jdk8\n        restClientCompile spec.product.pegasus.restliClient\n      }\n\n      compileJava {\n        options.release = javaClassVersion(project)\n      }\n\n      tasks.withType(JavaExec).configureEach {\n        javaLauncher = javaToolchains.launcherFor {\n          languageVersion = JavaLanguageVersion.of(jdkVersion(project))\n        }\n      }\n    }\n  }\n}\n\nwrapper {\n  gradleVersion = project.versionGradle\n  distributionType = Wrapper.DistributionType.ALL\n}\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "datahub-frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "datahub-graphql-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "datahub-kubernetes",
          "type": "tree",
          "content": null
        },
        {
          "name": "datahub-upgrade",
          "type": "tree",
          "content": null
        },
        {
          "name": "datahub-web-react",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs-website",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "entity-registry",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.046875,
          "content": "org.gradle.configureondemand=true\norg.gradle.parallel=true\norg.gradle.caching=true\n\n# Cycle daemons after 30m\norg.gradle.daemon.idletimeout=1800000\n\n# Increase gradle JVM memory to 5GB to allow tests to run locally\norg.gradle.jvmargs=-Xmx5120m -XX:MaxMetaspaceSize=512m\norg.gradle.workers.max=4\n\n# Increase retries to 5 (from default of 3) and increase interval from 125ms to 1s.\n# Based on this thread https://github.com/gradle/gradle/issues/4629, it's unclear\n# if we should be using systemProp or not.  We're using both for now.\norg.gradle.internal.repository.max.retries=5\norg.gradle.internal.repository.max.tentatives=5\norg.gradle.internal.repository.initial.backoff=1000\nsystemProp.org.gradle.internal.http.connectionTimeout=120000\nsystemProp.org.gradle.internal.http.socketTimeout=120000\nsystemProp.org.gradle.internal.repository.max.retries=5\nsystemProp.org.gradle.internal.repository.max.tentatives=5\nsystemProp.org.gradle.internal.repository.initial.backoff=1000\n\n# Needed to publish to Nexus from a sub-module\ngnsp.disableApplyOnlyOnRootProjectEnforcement=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.556640625,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.896484375,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n@rem SPDX-License-Identifier: Apache-2.0\r\n@rem\r\n\r\n@if \"%DEBUG%\"==\"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n@rem This is normally unused\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif %ERRORLEVEL% equ 0 goto execute\r\n\r\necho. 1>&2\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\necho. 1>&2\r\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\r\necho location of your Java installation. 1>&2\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho. 1>&2\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\necho. 1>&2\r\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\r\necho location of your Java installation. 1>&2\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif %ERRORLEVEL% equ 0 goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nset EXIT_CODE=%ERRORLEVEL%\r\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\r\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\r\nexit /b %EXIT_CODE%\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "ingestion-scheduler",
          "type": "tree",
          "content": null
        },
        {
          "name": "li-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "lombok.config",
          "type": "blob",
          "size": 0.1513671875,
          "content": "config.stopBubbling = true\nlombok.addLombokGeneratedAnnotation = true\nlombok.copyableAnnotations += org.springframework.beans.factory.annotation.Qualifier\n"
        },
        {
          "name": "metadata-auth",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-dao-impl",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-events",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-ingestion-modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-ingestion",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-io",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-jobs",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-models-custom",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-models-validator",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-models",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-operation-context",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "mock-entity-registry",
          "type": "tree",
          "content": null
        },
        {
          "name": "perf-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "python-build",
          "type": "tree",
          "content": null
        },
        {
          "name": "repositories.gradle",
          "type": "blob",
          "size": 0.87890625,
          "content": "repositories {\n    gradlePluginPortal()\n    mavenLocal()\n\n    if (project.hasProperty('apacheMavenRepositoryUrl')) {\n        maven { url project.getProperty('apacheMavenRepositoryUrl') }\n    } else {\n        mavenCentral()\n    }\n\n    if (project.hasProperty('confluentMavenRepositoryUrl')) {\n        maven {\n            url project.getProperty('confluentMavenRepositoryUrl')\n        }\n    } else {\n        maven {\n            url \"https://packages.confluent.io/maven/\"\n        }\n    }\n\n    if (project.hasProperty('linkedinOpenSourceRepositoryUrl')) {\n        maven {\n            url project.getProperty('linkedinOpenSourceRepositoryUrl')\n        }\n    } else {\n        maven {\n            url \"https://linkedin.jfrog.io/artifactory/open-source/\" // GMA, pegasus\n        }\n    }\n}\n\ntry {\n    subprojects {\n        project.repositories.addAll(rootProject.repositories)\n    }\n} catch (Throwable t) {\n}\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 4.7080078125,
          "content": "include 'datahub-web-react'\ninclude 'datahub-frontend'\ninclude 'datahub-graphql-core'\ninclude 'metadata-service:war'\ninclude 'metadata-service:servlet'\ninclude 'metadata-service:factories'\ninclude 'metadata-service:auth-config'\ninclude 'metadata-service:auth-impl'\ninclude 'metadata-service:auth-filter'\ninclude 'metadata-service:auth-servlet-impl'\ninclude 'metadata-service:restli-api'\ninclude 'metadata-service:restli-client-api'\ninclude 'metadata-service:restli-client'\ninclude 'metadata-service:restli-servlet-impl'\ninclude 'metadata-service:graphql-servlet-impl'\ninclude 'metadata-service:openapi-servlet'\ninclude 'metadata-service:openapi-entity-servlet'\ninclude 'metadata-service:openapi-entity-servlet:generators'\ninclude 'metadata-service:openapi-analytics-servlet'\ninclude 'metadata-service:plugin'\ninclude 'metadata-service:plugin:src:test:sample-test-plugins'\ninclude 'metadata-dao-impl:kafka-producer'\ninclude 'metadata-events:mxe-avro'\ninclude 'metadata-events:mxe-registration'\ninclude 'metadata-events:mxe-schemas'\ninclude 'metadata-events:mxe-utils-avro'\ninclude 'metadata-ingestion'\ninclude 'metadata-jobs:mae-consumer'\ninclude 'metadata-jobs:mce-consumer'\ninclude 'metadata-jobs:pe-consumer'\ninclude 'metadata-jobs:mae-consumer-job'\ninclude 'metadata-jobs:mce-consumer-job'\ninclude ':docker'\ninclude ':docker:elasticsearch-setup'\ninclude ':docker:mysql-setup'\ninclude ':docker:postgres-setup'\ninclude ':docker:kafka-setup'\ninclude ':docker:datahub-ingestion'\ninclude ':docker:datahub-ingestion-base'\ninclude 'metadata-models'\ninclude 'metadata-models-validator'\ninclude 'metadata-testing:metadata-models-test-utils'\ninclude 'metadata-testing:metadata-test-utils'\ninclude 'entity-registry'\ninclude 'metadata-io'\ninclude 'metadata-io:metadata-io-api'\ninclude 'datahub-upgrade'\ninclude 'metadata-utils'\ninclude 'li-utils'\ninclude 'test-models'\ninclude 'metadata-perf'\ninclude 'docs-website'\ninclude 'metadata-models-custom'\ninclude 'entity-registry:custom-test-model'\ninclude 'metadata-integration:java:spark-lineage-legacy'\ninclude 'metadata-integration:java:datahub-client'\ninclude 'metadata-integration:java:custom-plugin-lib'\ninclude 'metadata-integration:java:datahub-event'\ninclude 'metadata-integration:java:datahub-protobuf'\ninclude 'metadata-integration:java:openlineage-converter'\ninclude 'metadata-integration:java:acryl-spark-lineage'\ninclude 'ingestion-scheduler'\ninclude 'metadata-ingestion-modules:airflow-plugin'\ninclude 'metadata-ingestion-modules:gx-plugin'\ninclude 'metadata-ingestion-modules:dagster-plugin'\ninclude 'metadata-ingestion-modules:prefect-plugin'\ninclude 'python-build'\ninclude 'smoke-test'\ninclude 'metadata-auth:auth-api'\ninclude 'metadata-service:schema-registry-api'\ninclude 'metadata-service:schema-registry-servlet'\ninclude 'metadata-integration:java:examples'\ninclude 'mock-entity-registry'\ninclude 'metadata-service:services'\ninclude 'metadata-service:configuration'\ninclude ':metadata-jobs:common'\ninclude ':metadata-operation-context'\ninclude ':metadata-service:openapi-servlet:models'\ninclude ':metadata-integration:java:datahub-schematron:lib'\ninclude ':metadata-integration:java:datahub-schematron:cli'\n\ndef installPreCommitHooks() {\n    def preCommitInstalled = false\n    try {\n        def process = [\"which\", \"pre-commit\"].execute()\n        def stdout = new StringBuilder()\n        def stderr = new StringBuilder()\n        process.waitForProcessOutput(stdout, stderr)\n        preCommitInstalled = (process.exitValue() == 0)\n        println \"Pre-commit check: ${stdout}\"\n    } catch (Exception e) {\n        println \"Error checking pre-commit: ${e.message}\"\n        return\n    }\n\n    if (!preCommitInstalled) {\n        try {\n            def installProcess = [\"python\", \"-m\", \"pip\", \"install\", \"pre-commit\"].execute()\n            def stdout = new StringBuilder()\n            def stderr = new StringBuilder()\n            installProcess.waitForProcessOutput(stdout, stderr)\n            if (installProcess.exitValue() != 0) {\n                println \"Failed to install pre-commit: ${stderr}\"\n                return\n            }\n            println \"Install output: ${stdout}\"\n        } catch (Exception e) {\n            println \"Error installing pre-commit: ${e.message}\"\n            return \n        }\n    }\n\n    try {\n        def installHooksProcess = [\"python\", \"-m\", \"pre_commit\", \"install\"].execute()\n        def stdout = new StringBuilder()\n        def stderr = new StringBuilder()\n        installHooksProcess.waitForProcessOutput(stdout, stderr)\n        if (installHooksProcess.exitValue() != 0) {\n            println \"Failed to install hooks: ${stderr}\"\n            return\n        }\n        println \"Hooks output: ${stdout}\"\n    } catch (Exception e) {\n        println \"Error installing hooks: ${e.message}\"\n        return\n    }\n}\n\ninstallPreCommitHooks()"
        },
        {
          "name": "smoke-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-models",
          "type": "tree",
          "content": null
        },
        {
          "name": "vercel.json",
          "type": "blob",
          "size": 0.236328125,
          "content": "{\n  \"buildCommand\": \"./gradlew -PuseSystemNode=true :docs-website:build\",\n  \"github\": {\n    \"silent\": true,\n    \"autoJobCancelation\": true\n  },\n  \"installCommand\": \"./docs-website/vercel-setup.sh\",\n  \"outputDirectory\": \"docs-website/build\"\n}\n"
        }
      ]
    }
  ]
}