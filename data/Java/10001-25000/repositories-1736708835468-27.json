{
  "metadata": {
    "timestamp": 1736708835468,
    "page": 27,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/shardingsphere",
      "stars": 20118,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 1.8486328125,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nnotifications:\n  commits: notifications@shardingsphere.apache.org\n  issues: notifications@shardingsphere.apache.org\n  pullrequests: notifications@shardingsphere.apache.org\n  jobs: notifications@shardingsphere.apache.org\n\ngithub:\n  description: Empowering Data Intelligence with Distributed SQL for Sharding, Scalability, and Security Across All Databases.\n  labels:\n    - database\n    - database-cluster\n    - distributed-database\n    - distributed-sql-database\n    - distributed-transaction\n    - database-gateway\n    - database-middleware\n    - sql\n    - mysql\n    - postgresql\n    - shard\n    - read-write-splitting\n    - encrypt\n    - data-encryption\n    - data-pipeline\n    - bigdata\n  features:\n    issues: true\n    projects: true\n    wiki: true\n  protected_branches:\n    master:\n      required_status_checks:\n        contexts:\n          - Check - CheckStyle\n          - Check - Spotless\n          - Check - License\n      required_pull_request_reviews:\n        dismiss_stale_reviews: true\n        required_approving_review_count: 1\n  collaborators:\n    - zhuruixuan\n    - TherChenYang\n    - yydeng626\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.9150390625,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\ncoverage:\n  status:\n    # pull-requests only\n    patch:\n      default:\n        threshold: 0.1%\nignore:\n  - \"examples/.*\"\ncodecov:\n  max_report_age: off"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.8408203125,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n* text eol=lf\n*.jpg -text\n*.jpeg -text\n*.png -text\n*.eot -text\n*.ttf -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5439453125,
          "content": "# maven ignore\ntarget/\n*.class\n*.jar\n*.war\n*.zip\n*.tar\n*.tar.gz\ndependency-reduced-pom.xml\n.flattened-pom.xml\npom.xml.versionsBackup\n\n# maven plugin ignore\nrelease.properties\n*.gpg\n\n# eclipse ignore\n.settings/\n.project\n.classpath\n.factorypath\n\n# idea ignore\n.idea/\n!/.idea/icon.png\n!/.idea/vcs.xml\n*.ipr\n*.iml\n*.iws\n\n# vscode ignore\n.vscode/\n\n# temp ignore\nlogs/\n*.log\n*.tlog\n*.doc\n*.cache\n*.diff\n*.patch\n*.tmp\n\n# system ignore\n.DS_Store\nThumbs.db\n\n# antlr ignore\ngen/\n*.tokens\n\n# profiler ignore\n.profiler/\n\n# hugo ignore\npublic/\n.hugo_build.lock\n*.html-e\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".licenserc.yaml",
          "type": "blob",
          "size": 1.1875,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nheader:\n  license:\n    spdx-id: Apache-2.0\n    copyright-owner: Apache Software Foundation\n\n  paths-ignore:\n    - '.github/GIT_TEMPLATE/**'\n    - '.github/ISSUE_TEMPLATE/**'\n    - '.github/PULL_REQUEST_TEMPLATE'\n    - '**/.gitignore'\n    - '.mvn'\n    - 'docs/**'\n    - '**/*.md'\n    - '**/*.json'\n    - '**/*.data'\n    - '**/*.iml'\n    - '**/*.ini'\n    - 'LICENSE'\n    - 'NOTICE'\n    - '**/release-docs/**'\n\n  comment: on-failure\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 6.8271484375,
          "content": "# Contributor Covenant Code of Conduct\n\nThe following code of conduct is based on full compliance with [ASF CODE OF CONDUCT](https://www.apache.org/foundation/policies/conduct.html).\n\n## Development Guidelines\n\n - Write codes with heart. Pursue clean, simplified and extremely elegant codes. Agree with concepts in &lt;Refactoring: Improving the Design of Existing Code&gt; and &lt;Clean Code: A Handbook of Agile Software Craftsmanship&gt;.\n - Be familiar with codes already had, to keep consistent with the style and use.\n - Highly reusable, no duplicated codes or configurations.\n - Delete codes out of use in time.\n\n## Contributor Covenant Submitting of Conduct\n\n - Make sure Maven build process success. Run `mvn -T 1C clean install` or `./mvnw -T 1C clean install` command in shell to start Maven build process. On which directory to run Maven build process, there are 2 alternatives, we could select one of them: 1) if we're not familiar with Apache ShardingSphere, then we could run it on project root directory, 2) if we know which modules will be affected by the changes, then we could run it on these modules to save build time.\n - Make sure the test coverage rate is not lower than the master branch.\n - Careful consideration for each `pull request`; Small and frequent `pull request` with complete unit function is welcomed.\n - Conform to `Contributor Covenant Code of Conduct` below.\n - If using IDEA，you can import the recommended `src/resources/code-style-idea.xml`.\n\n## Contributor Covenant Code of Conduct\n\n - Use linux line separators.\n - Keep indents (including blank lines) consistent with the previous one.\n - Keep one blank line after class definition.\n - No meaningless blank lines. Please extract private methods to instead of blank lines if too long method body or different logic code fragments.\n - Use meaningful class, method and variable names, avoid to use abbreviate. \n - Return values are named with `result`; Variables in the loop structure are named with `each`; Replace `each` with `entry` in map.\n - Exceptions when catch are named with `ex`; Exceptions when catch but do nothing are named with `ignored`.\n - Name property files with `Spinal Case`(a variant of `Snake Case` which uses hyphens `-` to separate words). \n - Split codes that need to add notes with it into small methods, which are explained with method names.\n - Have constants on the left and variable on the right in `=` and `equals` conditional expressions; Have variable on the left and constants on the right in `greater than` and `less than` conditional expressions.\n - Beside using same names as input parameters and global fields in assign statement, avoid using `this` modifier.\n - Design class as `final` class except abstract class for extend.\n - Make nested loop structures a new method.\n - Order of members definition and parameters should be consistent during classes and methods.\n - Use guard clauses in priority.\n - Minimize the access permission for classes and methods.\n - Private method should be just next to the method in which it is used; Multiple private methods should be in the same as the appearance order of original methods.\n - No `null` parameters or return values.\n - Replace if else return and assign statement with ternary operator in priority.\n - Replace constructors, getters, setter methods and log variable with lombok in priority.\n - Use `LinkedList`  in priority. Use `ArrayList` for use index to get element only.\n - Use capacity based `Collection` such as `ArrayList`, `HashMap` must indicate initial capacity to avoid recalculate capacity.\n - Use English in all the logs and javadoc.\n - Include Javadoc, todo and fixme only in the comments.\n - Only `public` classes and methods need javadoc, other methods, classes and override methods do not need javadoc.\n - conditional operator(<expression1> ? <expression2> : <expression3>) `nested use` is forbidden.\n\n## Contributor Covenant Unit Test of Conduct\n\n - Test codes and production codes should follow the same kind of code of conduct.\n - Unit test should follow AIR (Automatic, Independent, Repeatable) principle.\n   - Automatic: Unit test should run automatically, not interactively. Check test result manually and `System.out`, `log` are prohibited, use assert to check test results.\n   - Independent: Call each other and sequence dependency during unit test cases are prohibited. Every test case should run independent.\n   - Repeatable: Unit test case should not dependency external environment, they can run repeatable.\n - Unit test should follow BCDE (Border, Correct, Design, Error) design principle.\n   - Border: Border value test, test for loop border, special value and value sequence to get expect result.\n   - Correct: Correct value test, test for correct value to get expect result.\n   - Design: Design with production codes.\n   - Error: Error value test, test for error input, exception to get expect result.\n - Without particular reasons, test cases should be fully covered.\n - Every test case need precised assertion.\n - Environment preparation codes should be separate from test codes.\n - Only those that relate to `Mockito`, junit `Assert`, hamcrest `CoreMatchers` and `MatcherAssert` can use static import.\n - For single parameter asserts, `assertTrue`, `assertFalse`, `assertNull` and `assertNotNull` should be used.\n - For multiple parameter asserts, `assertThat` should be used.\n - For accurate asserts, try not to use `not`, `containsString` to make assertions.\n - Actual values of test cases should be named `actualXXX`, expected values `expectedXXX`.\n - Class for test case and `@Test` annotation do not need javadoc.\n\n## Contributor Covenant G4 Code of Conduct\n - Common Conduct\n   - Every line cannot over `200` chars, guarantee every line have complete semantics.\n - Lexer Conduct\n   - Every rule should be in single line, no empty line between rules.\n   - Rule of lexer name should capitalization. If name composite with more than one word, use `underline` to separate. Rule name of `DataType` and `Symbol` should end with `underline`. If rule name is conflicted with ANTLR's keyword, should take an `underline` behind rule name.\n   - For private rule in lexer should use `fragment`, rule with `fragment` should define behind of public rule which they served.\n   - Common rule of lexer should put in file `Keyword.g4`, every database may has customized rule file by themselves. For example: `MySQLKeyword.g4`.\n - Parser Conduct\n   - After every rule finish, blank line should no indents.\n   - No space before rule name definition. One space between `colon` and rule, `semicolon` should take a new line and keep indents (including blank lines) consistent with the previous one.\n   - If a rule's branch is over than `5`, every branch take a new line.\n   - Rule name of parser should same with java variable's camel case.\n   - Define separate files for every SQL type, file name should consist of `database` + `SQL type` + `Statement`. For example: `MySQLDQLStatement.g4`.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.501953125,
          "content": "You can report a bug, submit a new feature enhancement recommendation, or commit codes by a pull request.\n\n## Reporting Bug\n\n - Before reporting a bug, please search from google to confirm that you cannot find any hint on it.\n - Look at the [issues List](https://github.com/apache/shardingsphere/issues) to confirm this issue is not a duplicated one.\n - [Create](https://github.com/apache/shardingsphere/issues/new) a new issue.\n - Define a clear and descriptive title for the issue.\n - If a bug is reported, please provide information below:\n       - Details for reproduce bug step by step. Include SQL, configuration, expected results, actual results and tracing log.\n       - ShardingSphere and your OS version.\n       - Source code that reproduce the bug on GitHub, can be linked here.\n       - Stack trace if exception thrown.\n       - Screenshot and animated gif to help bug reproduce if necessary.\n       - Screenshot for CPU, Memory, Network and IO stat if performance issue.\n - If enhancement recommendation reported, please provide information below:\n       - Details for enhancement behaviour.\n       - Explain why this enhancement is general feature for most developers.\n       - List similar features which already available in other product if possible. Both open source and commercial software are available.\n - Assign label after issue created. Label should be bug, enhancement, discussion and so on.\n - Please pay attention to the issue and provide more information during discuss.\n - Please close issue when it is resolved. If you don't close it, we will close it after 3 days。\n - If this issue has new information, please reopen it again. Please note, issue can reopen which only closed by yourself.\n\n## Commit Pull Request\n\n - Please choose an interested issue, or create a new issue and then settle a correct label.\n - Reply a deadline message to pickup this issue. \n - Find a mentor in [Core developers list](https://shardingsphere.apache.org/community/en/team/), he will give you feedback for design and implements.\n - Fork to your GitHub repo and begin to work.\n - Please follow [Development conventions](https://shardingsphere.apache.org/community/en/involved/conduct/code/), and complete check before pull request submit.\n - Submit a pull request to master branch when finished.\n - Mentor will do code review and discuss some details, include design, implement, performance and code style. Code will be merged until mentor accepted.\n - Finally, congratulations that you have become the official contributor for Apache ShardingSphere.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.84375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n=======================================================================\nApache ShardingSphere Subcomponents:\n\nThe Apache ShardingSphere project contains subcomponents with separate copyright\nnotices and license terms. Your use of the source code for the these\nsubcomponents is subject to the terms and conditions of the following\nlicenses.\n\n========================================================================\nApache 2.0 licenses\n========================================================================\n\nThe following components are provided under the Apache License. See project link for details.\nThe text of each license is the standard Apache 2.0 license.\n\n    Maven Wrapper(mvnw, mvnw.cmd files in root path), https://github.com/apache/maven-wrapper, Apache 2.0\n"
        },
        {
          "name": "MATURITY.md",
          "type": "blob",
          "size": 22.060546875,
          "content": "# Podling Maturity Assessment for ShardingSphere\n\n## Overview\n\nThis is an assessment of the ShardingSphere podling’s maturity, meant to help inform the decision (of the mentors, community, Incubator PMC and ASF Board of Directors) to graduate it as a top-level Apache project.\n\nIt is based on the ASF project maturity model at https://community.apache.org/apache-way/apache-project-maturity-model.html\n\n## Status of this document\n\nAll open items are updated with the latest status.\n\n## Maturity model assessment\n\nMentors and community members are encouraged to contribute to this page and comment on it, the following table summarizes project’s self-assessment against the Apache Maturity Model.\n\n**CODE**\n\n| **ID**   | **Description**                                                                                                                                                                                                                                                                 | **Status**                                                                                                                                                                                                                                                                                   |\n|----------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **CD10** | The project produces Open Source software, for distribution to the public at no charge.                                                                                                                                                                                         | **YES.** The project source code is licensed under the `Apache License 2.0`.                                                                                                                                                                                                                 |\n| **CD20** | The project's code is easily discoverable and publicly accessible.                                                                                                                                                                                                              | **YES.** The [website](https://shardingsphere.apache.org/) includes `SCM` link which can access GitHub directly.                                                                                                                                                                             |\n| **CD30** | The code can be built in a reproducible way using widely available standard tools.                                                                                                                                                                                              | **YES.** The build uses Apache Maven and Jenkins as the continuous integration tools, user can find `How to Build` in the [GitHub's README.md](https://github.com/apache/incubator-shardingsphere/blob/dev/README.md) for more information.                                                  |\n| **CD40** | The full history of the project's code is available via a source code control system, in a way that allows any released version to be recreated.                                                                                                                                | **YES.** The project uses git to manage source code, demo code, documentation and website, all releases are tagged.                                                                                                                                                                          |\n| **CD50** | The provenance of each line of code is established via the source code control system, in a reliable way based on strong authentication of the committer. When third-party contributions are committed, commit messages provide reliable information about the code provenance. | **YES.** The project uses GitHub which managed by Apache Infra, it ensuring provenance of each line of code to a committer. The third-party contributions are accepted in accordance with the [contributor guide](https://shardingsphere.apache.org/community/en/involved/contribute/) only. |\n\n**Licenses and Copyright**\n\n| **ID**   | **Description**                                                                                                                                                                              | **Status**                                                                                                                                                                                                            |\n|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **LC10** | The code is released under the Apache License, version 2.0.                                                                                                                                  | **YES.** The [LICENSE file](https://github.com/apache/shardingsphere/blob/master/LICENSE) is in GitHub repository.                                                                                                    |\n| **LC20** | Libraries that are mandatory dependencies of the project's code do not create more restrictions than the Apache License does.                                                                | **YES.** The [list of dependencies](https://github.com/apache/shardingsphere/tree/master/distribution/proxy/src/main/release-docs/licenses) for binary release has been reviewed to contain compatible licenses only. |\n| **LC30** | The libraries mentioned in LC20 are available as Open Source software.                                                                                                                       | **YES.** See LC20's dependencies list.                                                                                                                                                                                |\n| **LC40** | Committers are bound by an Individual Contributor Agreement (the \"Apache iCLA\") that defines which code they are allowed to commit and how they need to identify code that is not their own. | **YES.** All committers have iCLAs on file before they have an apache account.                                                                                                                                        |\n| **LC50** | The copyright ownership of everything that the project produces is clearly defined and documented.                                                                                           | **YES.** All files in the source code have appropriate headers and checked by `Apache rat plugin` when build.                                                                                                         |\n\n**Releases**\n\n| **ID**   | **Description**                                                                                                                                                                        | **Status**                                                                                                                                                                                                                                                                                                                 |\n|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **RE10** | Releases consist of source code, distributed using standard and open archive formats that are expected to stay readable in the long term.                                              | **YES.** Source release is distributed via [dist.apache.org](https://dist.apache.org/repos/dist/release/incubator/shardingsphere/) and linked from [download page](https://shardingsphere.apache.org/document/current/en/downloads/).                                                                                      |\n| **RE20** | Releases are approved by the project's PMC (see CS10), in order to make them an act of the Foundation.                                                                                 | **YES.** All releases have been voted by ShardingSphere community and incubator, which have least 3 (P)PMC votes.                                                                                                                                                                                                          |\n| **RE30** | Releases are signed and/or distributed along with digests that can be reliably used to validate the downloaded archives.                                                               | **YES.** All releases are signed, and the [KEYS file](https://dist.apache.org/repos/dist/release/incubator/shardingsphere/KEYS) is provided on dist.apache.org.                                                                                                                                                            |\n| **RE40** | Convenience binaries can be distributed alongside source code but they are not Apache Releases -- they are just a convenience provided with no guarantee.                              | **YES.** Convenience binaries are distributed via [Maven Central Repository](https://mvnrepository.com/artifact/org.apache.shardingsphere), [DockerHub](https://hub.docker.com/r/apache/sharding-proxy/tags) and [dist.apache.org](https://dist.apache.org/repos/dist/release/incubator/shardingsphere/) at the same time. |\n| **RE50** | The release process is documented and repeatable to the extent that someone new to the project is able to independently generate the complete set of artifacts required for a release. | **YES.** [Release guide](https://shardingsphere.apache.org/community/en/involved/release/) is available. The releases of the project have been performed by 3 different release managers.                                                                                                                                  |\n\n**Quality**\n\n| **ID**   | **Description**                                                                                                                                                                               | **Status**                                                                                                                                             |\n|----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **QU10** | The project is open and honest about the quality of its code. Various levels of quality and maturity for various modules are natural and acceptable as long as they are clearly communicated. | **YES.** All [issues](https://github.com/apache/incubator-shardingsphere/issues) record in ShardingSphere's GitHub repository.                         |\n| **QU20** | The project puts a very high priority on producing secure software.                                                                                                                           | **YES.** Security issues are treated with the highest priority.                                                                                        |\n| **QU30** | The project provides a well-documented, secure and private channel to report security issues, along with a documented way of responding to them.                                              | **YES.** Website provides a [security page](https://shardingsphere.apache.org/community/en/security/)                                                  |\n| **QU40** | The project puts a high priority on backwards compatibility and aims to document any incompatible changes and provide tools and documentation to help users transition to new features.       | **YES.** Each release note contains all related issues and pull requests in the milestone, and extract mainly updates and API changes from milestones. |\n| **QU50** | The project strives to respond to documented bug reports in a timely manner.                                                                                                                  | **YES.** The project has resolved 2000+ issues and 1200+ pull requests during 3 years. The response times on are pretty good.                          |\n\n**Community**\n\n| **ID**   | **Description**                                                                                                                                                                          | **Status**                                                                                                                                                                                                                                 |\n|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **CO10** | The project has a well-known homepage that points to all the information required to operate according to this maturity model.                                                           | **YES.** The [website](https://shardingsphere.apache.org/) describes of the project with download, user manual, technical details, how to contribute and team introduce.                                                                   |\n| **CO20** | The community welcomes contributions from anyone who acts in good faith and in a respectful manner and adds value to the project.                                                        | **YES.** There is [contributor guide](https://shardingsphere.apache.org/community/en/involved/contribute/) and the current committers are really welcome contributions.                                                                    |\n| **CO30** | Contributions include not only source code, but also documentation, constructive bug reports, constructive discussions, marketing and generally anything that adds value to the project. | **YES.** The contribution guide refers to non source code contribution, like [documentation](https://shardingsphere.apache.org/community/en/involved/contribute/document/). The community has elected some non-coding committers.          |\n| **CO40** | The community strives to be meritocratic and over time aims to give more rights and responsibilities to contributors who add value to the project.                                       | **YES.** The community has elected 2 new PPMC members and 4 new committers during incubation, based on meritocracy.                                                                                                                        |\n| **CO50** | The way in which contributors can be granted more rights such as commit access or decision power is clearly documented and is the same for all contributors.                             | **YES.** The criteria is documented in the [committer guide](https://shardingsphere.apache.org/community/en/involved/committer/).                                                                                                          |\n| **CO60** | The community operates based on consensus of its members (see CS10) who have decision power. Dictators, benevolent or not, are not welcome in Apache projects.                           | **YES.** The project works to build consensus. All votes have been unanimous so far.                                                                                                                                                       |\n| **CO70** | The project strives to answer user questions in a timely manner.                                                                                                                         | **YES.** The project typically provides detailed answers to user questions within a few days via [dev@ mailing list](mailto:dev@shardingsphere.apache.org) and [GitHub issues](https://github.com/apache/incubator-shardingsphere/issues). |\n\n**Consensus**\n\n| **ID**   | **Description**                                                                                                                                                                                                              | **Status**                                                                                                                                                                                           |\n|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **CS10** | The project maintains a public list of its contributors who have decision power -- the project's PMC (Project Management Committee) consists of those contributors.                                                          | **YES.** The [team page](https://shardingsphere.apache.org/community/en/team/) list all of PPMC members and committers.                                                                              |\n| **CS20** | Decisions are made by consensus among PMC members 9 and are documented on the project's main communications channel. Community opinions are taken into account but the PMC has the final word if needed.                     | **YES.** The project has been making important decisions on the mailing lists.                                                                                                                       |\n| **CS30** | Documented voting rules are used to build consensus when discussion is not sufficient.                                                                                                                                       | **YES.** The project uses the standard ASF voting rules.                                                                                                                                             |\n| **CS40** | In Apache projects, vetoes are only valid for code commits and are justified by a technical explanation, as per the Apache voting rules defined in CS30.                                                                     | **YES.** The project has not used a veto at any point during incubating.                                                                                                                             |\n| **CS50** | All \"important\" discussions happen asynchronously in written form on the project's main communications channel. Offline, face-to-face or private discussions 11 that affect the project are also documented on that channel. | **YES.** The project has been making important decisions on the project mailing lists. Minor decisions may occasionally happen during code reviews, which are also asynchronous and in written form. |\n\n**Independence**\n\n| **ID**   | **Description**                                                                                | **Status**                                                                                                                                                                                                                                                                         |\n|----------|------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| **IN10** | The project is independent from any corporate or organizational influence.                     | **YES.** The project team gathers people from different companies (JD.com, dangdang.com, CHINA TELECOM Bestpay, DAOCloud). No company or organization has significantly more influence than any other. We can note a growth of the contributions coming from different committers. |\n| **IN20** | Contributors act as themselves as opposed to representatives of a corporation or organization. | **YES.** The contributors act on their own initiative without representing a corporation or organization.                                                                                                                                                                          |\n\nMentors, PPMCs and committers please discuss and modify on [wiki](https://cwiki.apache.org/confluence/display/SHARDINGSPHERE/Podling+Maturity+Assessment+for+ShardingSphere).\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.1708984375,
          "content": "Apache ShardingSphere\nCopyright 2018-2024 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.3896484375,
          "content": "## [Distributed SQL transaction & query engine for data sharding, scaling, encryption, and more - on any database.](https://shardingsphere.apache.org/)\n\n**Official Website:** [https://shardingsphere.apache.org/](https://shardingsphere.apache.org/)\n\n[![GitHub Release](https://img.shields.io/github/release/apache/shardingsphere.svg)](https://github.com/apache/shardingsphere/releases)\n[![Lines of Code](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=ncloc)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)\n\n[![CI](https://github.com/apache/shardingsphere/actions/workflows/ci.yml/badge.svg)](https://github.com/apache/shardingsphere/actions/workflows/ci.yml)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)\n[![Technical Debt](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=sqale_index)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)\n[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)\n[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)\n[![codecov](https://codecov.io/gh/apache/shardingsphere/branch/master/graph/badge.svg)](https://codecov.io/gh/apache/shardingsphere)\n\n[![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/5394/badge)](https://bestpractices.coreinfrastructure.org/projects/5394)\n\n[![Slack](https://img.shields.io/badge/%20Slack-ShardingSphere%20Channel-blueviolet)](https://join.slack.com/t/apacheshardingsphere/shared_invite/zt-sbdde7ie-SjDqo9~I4rYcR18bq0SYTg)\n[![Gitter](https://badges.gitter.im/shardingsphere/shardingsphere.svg)](https://gitter.im/shardingsphere/Lobby)\n\n[![Twitter](https://img.shields.io/twitter/url/https/twitter.com/ShardingSphere.svg?style=social&label=Follow%20%40ShardingSphere)](https://twitter.com/ShardingSphere)\n\n<table style=\"width:100%\">\n    <tr>\n        <th>\n            <a href=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map?activity=stars&repo_id=49876476\" target=\"_blank\" style=\"display: block\" align=\"center\">\n                <picture>\n                    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=stars&repo_id=49876476&image_size=auto&color_scheme=dark\" width=\"721\" height=\"auto\">\n                    <img alt=\"Star Geographical Distribution of apache/shardingsphere\" src=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=stars&repo_id=49876476&image_size=auto&color_scheme=light\" width=\"721\" height=\"auto\">\n                </picture>\n            </a>\n        </th>\n        <th>\n            <a href=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map?activity=pull-request-creators&repo_id=49876476\" target=\"_blank\" style=\"display: block\" align=\"center\">\n                <picture>\n                    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=pull-request-creators&repo_id=49876476&image_size=auto&color_scheme=dark\" width=\"721\" height=\"auto\">\n                    <img alt=\"Pull Request Creator Geographical Distribution of apache/shardingsphere\" src=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=pull-request-creators&repo_id=49876476&image_size=auto&color_scheme=light\" width=\"721\" height=\"auto\">\n                </picture>\n            </a>\n        </th>\n        <th>\n            <a href=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map?activity=issue-creators&repo_id=49876476\" target=\"_blank\" style=\"display: block\" align=\"center\">\n                <picture>\n                    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=issue-creators&repo_id=49876476&image_size=auto&color_scheme=dark\" width=\"721\" height=\"auto\">\n                    <img alt=\"Issue Creator Geographical Distribution of apache/shardingsphere\" src=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=issue-creators&repo_id=49876476&image_size=auto&color_scheme=light\" width=\"721\" height=\"auto\">\n                </picture>\n            </a>\n        </th>\n    </tr>\n</table>\n\n### OVERVIEW\n\n<hr>\n\nApache ShardingSphere is a distributed SQL transaction & query engine that allows for data sharding, scaling, encryption, and more - on any database. Our community's guiding development concept is Database Plus for creating a complete ecosystem that allows you to transform any database into a distributed database system. \n\nIt focuses on repurposing existing databases, by placing a standardized upper layer above existing and fragmented databases, rather than creating a new database. \n\nThe goal is to provide unified database services and minimize or eliminate the challenges caused by underlying databases' fragmentation. \nThis results in applications only needing to communicate with a single standardized service.\n\nThe concepts at the core of the project are `Connect`, `Enhance` and `Pluggable`.\n\n- `Connect:` Flexible adaptation of database protocol, SQL dialect and database storage. It can quickly connect applications and heterogeneous databases.\n- `Enhance:` Capture database access entry to provide additional features transparently, such as: redirect (sharding, readwrite-splitting and shadow), transform (data encrypt and mask), authentication (security, audit and authority), governance (circuit breaker and access limitation and analyze, QoS and observability).\n- `Pluggable:` Leveraging the micro kernel and 3 layers pluggable mode, features and database ecosystem can be embedded flexibly. Developers can customize their ShardingSphere just like building with LEGO blocks.\n\nShardingSphere became an [Apache](https://apache.org/index.html#projects-list) Top-Level Project on April 16, 2020.\n\nSo far, ShardingSphere has been used by over [15,000 projects on GitHub](https://github.com/search?l=Maven+POM&q=shardingsphere+language%3A%22Maven+POM%22&type=Code).\n\n### DOCUMENTATION📜\n\n<hr>\n\n[![EN doc](https://img.shields.io/badge/document-English-blue.svg)](https://shardingsphere.apache.org/document/current/en/overview/)\n[![CN doc](https://img.shields.io/badge/文档-中文版-blue.svg)](https://shardingsphere.apache.org/document/current/cn/overview/)\n\nFor full documentation & more details, visit: [Docs](https://shardingsphere.apache.org/document/current/en/overview/)\n\n### CONTRIBUTION🚀🧑💻\n\n<hr>\n\nFor guides on how to get started and setup your environment, contributor & committer guides, visit: [Contribution Guidelines](https://shardingsphere.apache.org/community/en/involved/)\n\n### Team\n\n<hr>\n\nWe deeply appreciate [community contributors](https://shardingsphere.apache.org/community/en/team) for their dedication to Apache ShardingSphere.\n\n##\n\n### COMMUNITY & SUPPORT💝🖤\n\n<hr>\n\n:link: [Mailing List](https://shardingsphere.apache.org/community/en/involved/subscribe/). Best for: Apache community updates, releases, changes.\n\n:link: [GitHub Issues](https://github.com/apache/shardingsphere/issues). Best for: larger systemic questions/bug reports or anything development related.\n\n:link: [GitHub Discussions](https://github.com/apache/shardingsphere/discussions). Best for: technical questions & support, requesting new features, proposing new features.\n\n:link: [Slack channel](https://join.slack.com/t/apacheshardingsphere/shared_invite/zt-sbdde7ie-SjDqo9~I4rYcR18bq0SYTg). Best for: instant communications and online meetings, sharing your applications.\n\n:link: [Twitter](https://twitter.com/ShardingSphere). Best for: keeping up to date on everything ShardingSphere.\n\n:link: [LinkedIn](https://www.linkedin.com/showcase/apache-shardingsphere/e). Best for: professional networking and career development with other ShardingSphere contributors.\n\n##\n\n### STATUS👀\n\n<hr>\n\n:white_check_mark: Version 5.5.1: released :tada:\n\n🔗 For the release notes, follow this link to the relevant [GitHub page](https://github.com/apache/shardingsphere/blob/master/RELEASE-NOTES.md).\n\n:soon: Version 5.5.2\n\nWe are currently working towards our 5.5.2 milestone.\nKeep an eye on the [milestones page](https://github.com/apache/shardingsphere/milestones) of this repo to stay up to date.\n\n[comment]: <> (##)\n\n[comment]: <> (### NIGHTLY BUILDS:)\n\n[comment]: <> (<hr>)\n\n[comment]: <> (A nightly build of ShardingSphere from the latest master branch is available. )\n\n[comment]: <> (The package is updated daily and is available [here]&#40;http://117.48.121.24:8080&#41;.)\n\n[comment]: <> (##)\n\n[comment]: <> (**‼️ Notice:**)\n\n[comment]: <> (<hr>)\n\n[comment]: <> (Use this nightly build at your own risk! )\n\n[comment]: <> (The branch is not always fully tested. )\n\n[comment]: <> (The nightly build may contain bugs, and there may be new features added which may cause problems with your environment. )\n\n##\n\n### How it Works\n\n<hr>\n\nApache ShardingSphere includes 2 independent products: JDBC & Proxy.\nThey all provide functions of data scale-out, distributed transaction and distributed governance, applicable in a variety of situations such as Java-based isomorphism, heterogeneous language and Cloud-Native.\n\n### ShardingSphere-JDBC\n\n<hr>\n\n[![Maven Status](https://img.shields.io/maven-central/v/org.apache.shardingsphere/shardingsphere-jdbc.svg?color=green)](https://mvnrepository.com/artifact/org.apache.shardingsphere/shardingsphere-jdbc)\n\nA lightweight Java framework providing extra services at the Java JDBC layer. \nWith the client end connecting directly to the database, it provides services in the form of a jar and requires no extra deployment and dependence.\n\n:link: For more details, follow this [link to the official website](https://shardingsphere.apache.org/document/current/en/overview/#shardingsphere-jdbc).\n\n### ShardingSphere-Proxy\n\n<hr>\n\n[![Nightly-Download](https://img.shields.io/static/v1?label=nightly-builds&message=download&color=orange)](https://nightlies.apache.org/shardingsphere/)\n[![Download](https://img.shields.io/badge/release-download-orange.svg)](https://www.apache.org/dyn/closer.lua/shardingsphere/5.3.2/apache-shardingsphere-5.3.2-shardingsphere-proxy-bin.tar.gz)\n[![Docker Pulls](https://img.shields.io/docker/pulls/apache/shardingsphere-proxy.svg)](https://store.docker.com/community/images/apache/shardingsphere-proxy)\n\nA transparent database proxy, providing a database server that encapsulates the database binary protocol to support heterogeneous languages. \nFriendlier to DBAs, the MariaDB, MySQL and PostgreSQL version now provided can use any kind of terminal.\n\n:link: For more details, follow this [link to the official website](https://shardingsphere.apache.org/document/current/en/overview/#shardingsphere-proxy).\n\n### Hybrid Architecture\n\n<hr>\n\nShardingSphere-JDBC adopts a decentralized architecture, applicable to high-performance light-weight OLTP applications developed with Java. \nShardingSphere-Proxy provides static entry and all languages support, suitable for an OLAP application and sharding databases management and operation.\n\nThrough the combination of ShardingSphere-JDBC & ShardingSphere-Proxy together with a unified sharding strategy by the same registry center, the ShardingSphere ecosystem can build an application system suitable to all kinds of scenarios.\n\n:link: More details can be found following this [link to the official website](https://shardingsphere.apache.org/document/current/en/overview/#hybrid-architecture).\n\n##\n\n### Solution\n\n<hr>\n\n| *Solutions/Features* | *Distributed Database*  | *Data Security*      | *Database Gateway*                | *Stress Testing* |\n|----------------------|-------------------------|----------------------|-----------------------------------|------------------|\n|                      | Data Sharding           | Data Encryption      | Heterogeneous Databases Supported | Shadow Database  |\n|                      | Read/write Splitting    | Row Authority (TODO) | SQL Dialect Translate (TODO)      | Observability    |\n|                      | Distributed Transaction | SQL Audit (TODO)     |                                   |                  |\n|                      | Elastic Scale-out       | SQL Firewall (TODO)  |                                   |                  |\n|                      | High Availability       |                      |                                   |                  |\n\n##\n\n### Roadmap\n\n<hr>\n\n![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_en.png)\n\n##\n\n### How to Build Apache ShardingSphere\n\n<hr>\n\nCheck out [Wiki](https://github.com/apache/shardingsphere/wiki) section for details on how to build Apache ShardingSphere and a full guide on how to get started and setup your local dev environment.\n\n##\n\n### Landscapes\n\n<hr>\n\n<p align=\"center\">\n<br/><br/>\n<img src=\"https://landscape.cncf.io/images/cncf-landscape-horizontal-color.svg\" width=\"165\"/>&nbsp;&nbsp;<img src=\"https://www.cncf.io/wp-content/uploads/2023/04/cncf-main-site-logo.svg\" width=\"200\"/>\n<br/><br/>\nApache ShardingSphere enriches the <a href=\"https://landscape.cncf.io/?category=app-definition-and-development&grouping=category\">CNCF CLOUD NATIVE Landscape</a>.\n</p>\n\n##\n"
        },
        {
          "name": "README_ZH.md",
          "type": "blob",
          "size": 12.3515625,
          "content": "## [ShardingSphere - 构建异构数据库上层的标准和生态](https://shardingsphere.apache.org/index_zh.html)\n\n**官方网站: https://shardingsphere.apache.org/**\n\n[![GitHub release](https://img.shields.io/github/release/apache/shardingsphere.svg)](https://github.com/apache/shardingsphere/releases)\n[![Lines of Code](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=ncloc)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)\n\n[![CI](https://github.com/apache/shardingsphere/actions/workflows/ci.yml/badge.svg)](https://github.com/apache/shardingsphere/actions/workflows/ci.yml)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)\n[![Technical Debt](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=sqale_index)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)\n[![Maintainability Rating](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=sqale_rating)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)\n[![Security Rating](https://sonarcloud.io/api/project_badges/measure?project=apache_shardingsphere&metric=security_rating)](https://sonarcloud.io/summary/new_code?id=apache_shardingsphere)\n[![codecov](https://codecov.io/gh/apache/shardingsphere/branch/master/graph/badge.svg)](https://codecov.io/gh/apache/shardingsphere)\n\n[![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/5394/badge)](https://bestpractices.coreinfrastructure.org/projects/5394)\n\n[![Slack](https://img.shields.io/badge/%20Slack-ShardingSphere%20Channel-blueviolet)](https://join.slack.com/t/apacheshardingsphere/shared_invite/zt-sbdde7ie-SjDqo9~I4rYcR18bq0SYTg)\n[![Gitter](https://badges.gitter.im/shardingsphere/shardingsphere.svg)](https://gitter.im/shardingsphere/Lobby)\n\n[![Twitter](https://img.shields.io/twitter/url/https/twitter.com/ShardingSphere.svg?style=social&label=Follow%20%40ShardingSphere)](https://twitter.com/ShardingSphere)\n\n<table style=\"width:100%\">\n    <tr>\n        <th>\n            <a href=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map?activity=stars&repo_id=49876476\" target=\"_blank\" style=\"display: block\" align=\"center\">\n                <picture>\n                    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=stars&repo_id=49876476&image_size=auto&color_scheme=dark\" width=\"721\" height=\"auto\">\n                    <img alt=\"Star Geographical Distribution of apache/shardingsphere\" src=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=stars&repo_id=49876476&image_size=auto&color_scheme=light\" width=\"721\" height=\"auto\">\n                </picture>\n            </a>\n        </th>\n        <th>\n            <a href=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map?activity=pull-request-creators&repo_id=49876476\" target=\"_blank\" style=\"display: block\" align=\"center\">\n                <picture>\n                    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=pull-request-creators&repo_id=49876476&image_size=auto&color_scheme=dark\" width=\"721\" height=\"auto\">\n                    <img alt=\"Pull Request Creator Geographical Distribution of apache/shardingsphere\" src=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=pull-request-creators&repo_id=49876476&image_size=auto&color_scheme=light\" width=\"721\" height=\"auto\">\n                </picture>\n            </a>\n        </th>\n        <th>\n            <a href=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map?activity=issue-creators&repo_id=49876476\" target=\"_blank\" style=\"display: block\" align=\"center\">\n                <picture>\n                    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=issue-creators&repo_id=49876476&image_size=auto&color_scheme=dark\" width=\"721\" height=\"auto\">\n                    <img alt=\"Issue Creator Geographical Distribution of apache/shardingsphere\" src=\"https://next.ossinsight.io/widgets/official/analyze-repo-stars-map/thumbnail.png?activity=issue-creators&repo_id=49876476&image_size=auto&color_scheme=light\" width=\"721\" height=\"auto\">\n                </picture>\n            </a>\n        </th>\n    </tr>\n</table>\n\n### 概述\n\n<hr>\n\nApache ShardingSphere 产品定位为 `Database Plus`，旨在构建异构数据库上层的标准和生态。\n它关注如何充分合理地利用数据库的计算和存储能力，而并非实现一个全新的数据库。ShardingSphere 站在数据库的上层视角，关注他们之间的协作多于数据库自身。\n\n`连接`、`增强` 和 `可插拔` 是 Apache ShardingSphere 的核心概念。\n\n- `连接：`通过对数据库协议、SQL 方言以及数据库存储的灵活适配，快速的连接应用与多模式的异构数据库；\n- `增强：`获取数据库的访问流量，并提供流量重定向（数据分片、读写分离、影子库）、流量变形（数据加密、数据脱敏）、流量鉴权（安全、审计、权限）、流量治理（熔断、限流）以及流量分析（服务质量分析、可观察性）等透明化增强功能；\n- `可插拔：`项目采用微内核 + 三层可插拔模型，使内核、功能组件以及生态对接完全能够灵活的方式进行插拔式扩展，开发者能够像使用积木一样定制属于自己的独特系统。\n\nShardingSphere 已于 2020 年 4 月 16 日成为 [Apache 软件基金会](https://apache.org/index.html#projects-list)的顶级项目。\n\n迄今为止，已有超过 [15,000 个 GitHub 项目](https://github.com/search?l=Maven+POM&q=shardingsphere+language%3A%22Maven+POM%22&type=Code)采用了 ShardingSphere。\n\n### 文档📜\n\n<hr>\n\n[![EN d](https://img.shields.io/badge/document-English-blue.svg)](https://shardingsphere.apache.org/document/current/en/overview/)\n[![CN doc](https://img.shields.io/badge/文档-中文版-blue.svg)](https://shardingsphere.apache.org/document/current/cn/overview/)\n\n更多信息请参考：[https://shardingsphere.apache.org/document/current/cn/overview/](https://shardingsphere.apache.org/document/current/cn/overview/)\n\n### 参与贡献🚀🧑💻\n\n<hr>\n\n搭建开发环境和贡献者指南，请参考：[https://shardingsphere.apache.org/community/cn/involved/](https://shardingsphere.apache.org/community/cn/involved/)\n\n### 团队成员\n\n<hr>\n\n我们真挚感谢[社区贡献者](https://shardingsphere.apache.org/community/cn/team)对 Apache ShardingSphere 的奉献。\n\n##\n\n### 社区和支持💝🖤\n\n<hr>\n\n:link: [Mailing List](https://shardingsphere.apache.org/community/cn/involved/subscribe/). 适合于 Apache 社区相关讨论和版本发布；\n\n:link: [GitHub Issues](https://github.com/apache/shardingsphere/issues). 适合于设计问题、缺陷报告或者开发相关；\n\n:link: [GitHub Discussions](https://github.com/apache/shardingsphere/discussions). 适合于技术问题咨询和新功能讨论；\n\n:link: [Slack channel](https://join.slack.com/t/apacheshardingsphere/shared_invite/zt-sbdde7ie-SjDqo9~I4rYcR18bq0SYTg). 适合于在线交流和线上会议；\n\n:link: [Twitter](https://twitter.com/ShardingSphere). 随时了解 Apache ShardingSphere 信息。\n\n##\n\n### 状态👀\n\n<hr>\n\n:white_check_mark: Version 5.5.1: 已发布 :tada:\n\n🔗 请访问 [发布说明](https://github.com/apache/shardingsphere/blob/master/RELEASE-NOTES.md) 获得更详细的信息.\n\n:soon: Version 5.5.2\n\n我们目前正在开发 5.5.2 里程碑。\n请访问[里程碑](https://github.com/apache/shardingsphere/milestones) 获取最新信息。\n\n##\n\n### 工作原理\n\n<hr>\n\nApache ShardingSphere 由 JDBC、Proxy 这 2 款既能够独立部署，又支持混合部署配合使用的产品组成。\n它们均提供标准化的数据水平扩展、分布式事务和分布式治理等功能，可适用于如 Java 同构、异构语言、云原生等各种多样化的应用场景。\n\n### ShardingSphere-JDBC\n\n<hr>\n\n[![Maven Status](https://img.shields.io/maven-central/v/org.apache.shardingsphere/shardingsphere-jdbc.svg?color=green)](https://mvnrepository.com/artifact/org.apache.shardingsphere/shardingsphere-jdbc)\n\n定位为轻量级 Java 框架，在 Java 的 JDBC 层提供的额外服务。\n它使用客户端直连数据库，以 jar 包形式提供服务，无需额外部署和依赖，可理解为增强版的 JDBC 驱动，完全兼容 JDBC 和各种 ORM 框架。\n\n:link: 更多信息请参考[官方网站](https://shardingsphere.apache.org/document/current/cn/overview/#shardingsphere-jdbc)。\n\n### ShardingSphere-Proxy\n\n<hr>\n\n[![Nightly-Download](https://img.shields.io/static/v1?label=nightly-builds&message=download&color=orange)](https://nightlies.apache.org/shardingsphere/)\n[![Download](https://img.shields.io/badge/release-download-orange.svg)](https://www.apache.org/dyn/closer.lua/shardingsphere/5.3.1/apache-shardingsphere-5.3.1-shardingsphere-proxy-bin.tar.gz)\n[![Docker Pulls](https://img.shields.io/docker/pulls/apache/shardingsphere-proxy.svg)](https://store.docker.com/community/images/apache/shardingsphere-proxy)\n\n定位为透明化的数据库代理端，提供封装了数据库二进制协议的服务端版本，用于完成对异构语言的支持。\n目前提供 MySQL 和 PostgreSQL 版本，它可以使用任何兼容 MySQL/PostgreSQL 协议的访问客户端操作数据，对 DBA 更加友好。\n\n:link: 更多信息请参考[官方网站](https://shardingsphere.apache.org/document/current/en/overview/#shardingsphere-proxy)。\n\n|       | *ShardingSphere-JDBC* | *ShardingSphere-Proxy* |\n|-------|-----------------------|------------------------|\n| 数据库   | 任意                    | MySQL/PostgreSQL       |\n| 连接消耗数 | 高                     | 低                      |\n| 异构语言  | 仅 Java                | 任意                     |\n| 性能    | 损耗低                   | 损耗略高                   |\n| 无中心化  | 是                     | 否                      |\n| 静态入口  | 无                     | 有                      |\n\n### 混合架构\n\n<hr>\n\nShardingSphere-JDBC 采用无中心化架构，与应用程序共享资源，适用于 Java 开发的高性能的轻量级 OLTP 应用；\nShardingSphere-Proxy 提供静态入口以及异构语言的支持，独立于应用程序部署，适用于 OLAP 应用以及对分片数据库进行管理和运维的场景。\n\nApache ShardingSphere 是多接入端共同组成的生态圈。\n通过混合使用 ShardingSphere-JDBC 和 ShardingSphere-Proxy，并采用同一注册中心统一配置分片策略，能够灵活的搭建适用于各种场景的应用系统，使得架构师更加自由地调整适合于当前业务的最佳系统架构。\n\n:link: 更多信息请参考[官方网站](https://shardingsphere.apache.org/document/current/en/overview/#hybrid-architecture)。\n\n##\n\n### 解决方案\n\n<hr>\n\n| *解决方案/功能* | *分布式数据库* | *数据安全*        | *数据库网关*        | *全链路压测* |\n|-----------|----------|---------------|----------------|---------|\n|           | 数据分片     | 数据加密          | 异构数据库支持        | 影子库     |\n|           | 读写分离     | 行级权限（TODO）    | SQL 方言转换（TODO） | 可观测性    |\n|           | 分布式事务    | SQL 审计（TODO）  |                |         |\n|           | 弹性伸缩     | SQL 防火墙（TODO） |                |         |\n|           | 高可用      |               |                |         |\n\n##\n\n### 线路规划\n\n<hr>\n\n![Roadmap](https://shardingsphere.apache.org/document/current/img/roadmap_cn.png)\n\n##\n\n### 如何构建 Apache ShardingSphere\n\n<hr>\n\n查看 [Wiki](https://github.com/apache/shardingsphere/wiki) 详细了解如何构建 Apache ShardingSphere。\n\n##\n\n### 全景图\n\n<hr>\n\n<p align=\"center\">\n<br/><br/>\n<img src=\"https://landscape.cncf.io/images/cncf-landscape-horizontal-color.svg\" width=\"165\"/>&nbsp;&nbsp;<img src=\"https://www.cncf.io/wp-content/uploads/2023/04/cncf-main-site-logo.svg\" width=\"200\"/>\n<br/><br/>\nShardingSphere 进入了<a href=\"https://landscape.cncf.io/?category=app-definition-and-development&grouping=category\">CNCF 云原生全景图</a>。\n</p>\n\n##\n"
        },
        {
          "name": "RELEASE-NOTES.md",
          "type": "blob",
          "size": 122.0107421875,
          "content": "## Release 5.5.2-SNAPSHOT\n\n### API Changes\n\n### New Features\n\n1. Kernel: Add firebird SQL parser module and database type [#33773](https://github.com/apache/shardingsphere/pull/33773)\n\n### Enhancements\n\n1. Kernel: Add arguments not null check when creating RouteUnit - [#33382](https://github.com/apache/shardingsphere/pull/33382)\n1. Kernel: Add index columns not empty judgement for IndexColumnTokenGenerator - [#33384](https://github.com/apache/shardingsphere/pull/33384)\n1. Kernel: Add binding to owner table - [#33533](https://github.com/apache/shardingsphere/pull/33533)\n1. Kernel: Add binding to owner table - [#33533](https://github.com/apache/shardingsphere/pull/33533)\n1. Kernel: Add WithAvailable interface and encrypt with, combine, insert select support checker - [#34175](https://github.com/apache/shardingsphere/pull/34175)\n1. Metadata: Add load-table-metadata-batch-size props to concurrent load table metadata - [#34009](https://github.com/apache/shardingsphere/pull/34009)\n1. DistSQL: Check inline expression when create sharding table rule with inline sharding algorithm - [#33735](https://github.com/apache/shardingsphere/pull/33735)\n1. SQL Parser: Support parsing Doris BITXOR - [#33258](https://github.com/apache/shardingsphere/pull/33258)\n1. SQL Parser: Support parsing Doris INSTR - [#33289](https://github.com/apache/shardingsphere/pull/33289)\n1. SQL Parser: Support parsing Doris STRRIGHT - [#33393](https://github.com/apache/shardingsphere/pull/33393)\n1. SQL Parser: Support parsing MySQL by adding non-reserved keywords in BaseRule.g4 file according to MySQL 8.4 doc - [#33846](https://github.com/apache/shardingsphere/pull/33846)\n1. SQL Parser: Support parsing Doris EXTRACT\\_URL\\_PARAMETER - [#33571](https://github.com/apache/shardingsphere/pull/33571)\n1. SQL Parser: Enhance create view, alter view, drop view sql parser - [#34283](https://github.com/apache/shardingsphere/pull/34283)\n1. SQL Binder: Add sql bind logic for create table statement - [#34074](https://github.com/apache/shardingsphere/pull/34074)\n1. SQL Binder: Support create index statement sql bind - [#34112](https://github.com/apache/shardingsphere/pull/34112)\n1. SQL Parser: Support MySQL update with statement parse - [#34126](https://github.com/apache/shardingsphere/pull/34126)\n1. SQL Binder: Remove TablesContext#findTableNames method and implement select order by, group by bind logic - [#34123](https://github.com/apache/shardingsphere/pull/34123)\n1. SQL Binder: Support select with statement sql bind and add bind test case - [#34141](https://github.com/apache/shardingsphere/pull/34141)\n1. SQL Binder: Support sql bind for select with current select projection reference - [#34151](https://github.com/apache/shardingsphere/pull/34151)\n1. SQL Binder: Support alter table, drop table sql bind and add test case - [#34154](https://github.com/apache/shardingsphere/pull/34154)\n1. SQL Binder: Support rename table statement sql bind and split segment bind to ddl and dml package - [#34158](https://github.com/apache/shardingsphere/pull/34158)\n1. SQL Binder: Support copy statement sql bind and add bind test case - [#34159](https://github.com/apache/shardingsphere/pull/34159)\n1. SQL Binder: Support truncate table sql bind and add test case - [#34162](https://github.com/apache/shardingsphere/pull/34162)\n1. SQL Binder: Support create view, alter view, drop view sql bind logic - [#34167](https://github.com/apache/shardingsphere/pull/34167)\n1. SQL Binder: Support load data and load xml sql bind and add test case - [#34177](https://github.com/apache/shardingsphere/pull/34177)\n1. SQL Binder: Support optimize table sql bind and add test case - [#34242](https://github.com/apache/shardingsphere/pull/34242)\n1. SQL Binder: Support show create table, show columns, show index statement bind - [#34271](https://github.com/apache/shardingsphere/pull/34271)\n1. SQL Binder: Support deny user sql bind and add test case - [#34279](https://github.com/apache/shardingsphere/pull/34279)\n1. SQL Binder: Support with segment bind check with UniqueCommonTableExpressionException - [#34163](https://github.com/apache/shardingsphere/pull/34163)\n1. Storage: Support setting `hive_conf_list`, `hive_var_list` and `sess_var_list` for jdbcURL when connecting to HiveServer2 - [#33749](https://github.com/apache/shardingsphere/pull/33749)\n1. Storage: Support connecting to HiveServer2 through database connection pools other than HikariCP - [#33762](https://github.com/apache/shardingsphere/pull/33762)\n1. Storage: Partial support for connecting to embedded ClickHouse `chDB` - [#33786](https://github.com/apache/shardingsphere/pull/33786)\n1. Transaction: Support savepoint/release savepoint TCL statements in jdbc adapter -[#34173](https://github.com/apache/shardingsphere/pull/34173)\n1. Transaction: Bump the minimum Seata Client version for Seata AT integration to 2.2.0 - [#33872](https://github.com/apache/shardingsphere/pull/33872)\n1. SQL Federation: Upgrade calcite version to 1.38.0 and update all license info in LICENSE file - [#33279](https://github.com/apache/shardingsphere/pull/33279)\n1. JDBC: Add show database name for JDBC when execute SHOW COMPUTE NODES - [#33437](https://github.com/apache/shardingsphere/pull/33437)\n1. JDBC: Support ZonedDateTime on ResultSet - [#33660](https://github.com/apache/shardingsphere/issues/33660)\n1. Proxy: Add query parameters and check for MySQL kill processId - [#33274](https://github.com/apache/shardingsphere/pull/33274)\n1. Proxy: Support table not exist exception for PostgreSQL proxy - [#33885](https://github.com/apache/shardingsphere/pull/33274)\n1. Proxy Native: Change the Base Docker Image of ShardingSphere Proxy Native - [#33263](https://github.com/apache/shardingsphere/issues/33263)\n1. Proxy Native: Support connecting to HiveServer2 with ZooKeeper Service Discovery enabled in GraalVM Native Image - [#33768](https://github.com/apache/shardingsphere/pull/33768)\n1. Proxy Native: Support local transactions of ClickHouse under GraalVM Native Image - [#33801](https://github.com/apache/shardingsphere/pull/33801)\n1. Proxy Native: Support Seata AT integration under Proxy Native in GraalVM Native Image - [#33889](https://github.com/apache/shardingsphere/pull/33889)\n1. Sharding: Support GroupConcat function for aggregating multiple shards in MySQL, OpenGauss, Doris - [#33808](https://github.com/apache/shardingsphere/pull/33808)\n1. Agent: Simplify the use of Agent's Docker Image - [#33356](https://github.com/apache/shardingsphere/pull/33356)\n1. Mode: Support modifying Hikari-CP configurations via props in standalone mode [#34185](https://github.com/apache/shardingsphere/pull/34185)\n1. Encrypt: Support insert statement rewrite use quote [#34259](https://github.com/apache/shardingsphere/pull/34259)\n\n### Bug Fixes\n\n1. SQL Parser: Fixes LiteralExpressionSegment cast exception in SQL parser - [#33332](https://github.com/apache/shardingsphere/pull/33332)\n1. SQL Parser: Fixes PostgreSQL and openGauss time extract function parse week and quarter error - [#33564](https://github.com/apache/shardingsphere/pull/33564)\n1. SQL Parser: Fixes MySQL parse zone unreserved keyword error - [#33720](https://github.com/apache/shardingsphere/pull/33720)\n1. SQL Parser: Fixes MySQL range parse error when use table owner - [#33874](https://github.com/apache/shardingsphere/pull/33874)\n1. SQL Binder: Fixes table does not exist exception when use HintManager#setDatabaseName to transparent - [#33370](https://github.com/apache/shardingsphere/pull/33370)\n1. SQL Binder: Use Multimap and CaseInsensitiveString to replace CaseInsensitiveMap for supporting MySQL multi table join with same table alias - [#33303](https://github.com/apache/shardingsphere/pull/33303)\n1. SQL Binder: Fixes the combine statement cannot find the outer table when bind - [#33357](https://github.com/apache/shardingsphere/pull/33357)\n1. SQL Binder: Fixes SQL performance issues caused by repeated subquery fetches - [#33361](https://github.com/apache/shardingsphere/pull/33361)\n1. SQL Binder: Fixes the expression segment cannot find the outer table when binding - [#34015](https://github.com/apache/shardingsphere/pull/34015)\n1. Storage: Fixes cannot connect to HiveServer2 using remote Hive Metastore Server - [#33837](https://github.com/apache/shardingsphere/pull/33837)\n1. Proxy: Fixes BatchUpdateException when execute INSERT INTO ON DUPLICATE KEY UPDATE in proxy adapter - [#33796](https://github.com/apache/shardingsphere/pull/33796)\n1. Proxy: Fixes \"ALL PRIVILEGES ON `DB`.*\" is not recognized during SELECT privilege verification for MySQL - [#34037](https://github.com/apache/shardingsphere/pull/34037)\n1. Proxy: Fixes MySQL longblob wrong column type returned by proxy protocol - [#34121](https://github.com/apache/shardingsphere/pull/34121)\n1. Proxy: Fixes MySQL proxy error if insert SQL contains more parameters not in insert values syntax - [#34287](https://github.com/apache/shardingsphere/pull/34287)\n1. Sharding: Remove ShardingRouteAlgorithmException check logic temporarily to support different actual table name configuration - [#33367](https://github.com/apache/shardingsphere/pull/33367)\n1. Sharding: Fixes SQL COUNT with GROUP BY to prevent incorrect row returns - [#33380](https://github.com/apache/shardingsphere/pull/33380)\n1. Sharding: Fixes avg, sum, min, max function return empty data when no query result return - [#33449](https://github.com/apache/shardingsphere/pull/33449)\n1. Encrypt: Fixes merge exception without encrypt rule in database - [#33708](https://github.com/apache/shardingsphere/pull/33708)\n1. Encrypt: Use sql bind info in EncryptInsertPredicateColumnTokenGenerator to avoid wrong column table mapping - [#34110](https://github.com/apache/shardingsphere/pull/34110)\n1. Mode: Fixes `JDBCRepository` improper handling of H2-database in memory mode - [#33281](https://github.com/apache/shardingsphere/issues/33281)\n1. Mode: Fixes duplicate column names added when index changed in DDL - [#33982](https://github.com/apache/shardingsphere/issues/33281)\n\n### Change Logs\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/30)\n\n## Release 5.5.1\n\n### API Changes\n\n1. Authority: Mark privilege provider ALL_PERMITTED as deprecated and will be removed in future\n1. DistSQL: Remove optional param usageCount from show storage units\n1. Readwrite-splitting: Change dataSources to dataSourceGroups for YAML\n\n### New Features\n\n1. Kernel: Add new doris, hive and presto sql parser module and database type\n\n### Enhancements\n\n1. Kernel: Support sql hint extract when sql contains dbeaver hint comment\n1. Kernel: Add extract combine left select in extractFromSelectStatementWithoutProjection method\n1. Metadata: Collect table type for PostgreSQL\n1. Metadata: Add assisted node to create and delete databases\n1. Mode: Change shadow、sharding's algorithms node path to shadow_algorithms and sharding_algorithms node path\n1. DistSQL: Check privilege when registering or altering storage unit\n1. DistSQL: Check duplicate actual data nodes when creating or altering sharding table rule\n1. DistSQL: Add like support for show storage units\n1. DistSQL: Rollback if import database configuration failed\n1. DistSQL: add table type to result set of show logical tables\n1. Proxy: Make the results of show tables in order\n1. Proxy: Trigger metadata collection when creating and deleting database and table\n1. Proxy: Optimize Agent to support collecting metrics data from multiple data sources when used with Driver\n1. SQL Parser: Support PostgreSQL COLLATION and CONSTRAINT keywords\n1. SQL Parser: Support MySQL change replication with no server ids\n1. SQL Parser: Support MySQL row and column aliases with ON DUPLICATE KEY UPDATE\n1. SQL Parser: Support MySQL CALL SQL with mysql prefix\n1. SQL Parser: Support MySQL create loadable function returns int/dec\n1. SQL Parser: Support parsing MySQL CREATE TABLESPACE/TABLE in Mysql-8\n1. SQL Parser: Support parsing MySQL CREATE INDEX with ENGINE_ATTRIBUTE\n1. SQL Parser: Support parsing MySQL LOAD DATA with @ variable\n1. SQL Parser: Support parsing MySQL START REPLICA statement\n1. SQL Parser: Support parsing MySQL json table function\n1. SQL Parser: Enhance mysql json function visit statement result\n1. SQL Parser: Enhance Oracle update statement as alias parse and add test case\n1. SQL Parser: Add MySQL column not null SQL parsing\n1. SQL Parser: Add MySQL charset sql parsing\n1. SQL Parser: Support Oracle column length unit type SQL parsing\n1. SQL Parser: Support PostgreSQL, openGauss function table and update from parse\n1. SQL Parser: Support cte with postgres and openGauss\n1. SQL Parser: Optimize the timezone support of PostgreSQLDateValueParser\n1. SQL Parser: Support PostgreSQL limit and offset as null\n1. SQL Federation: Support SQL federation bit_count function for MySQL\n1. SQL Federation: Improve atan and anan2 sql function for MySQL\n1. SQL Federation: Support federated query mysql bin function\n1. SQL Federation: Support for federated query NOT operator\n1. Transaction: Support for switching transaction types\n1. Use same transaction type in one transaction in jdbc adapter\n1. Proxy Native: Add more graalvm reachability metadata for caffeine cache\n1. Sharding: Revise all local index for sharding table and add object uniqueness level spi to control index token generator\n1. Sharding: Add NullsOrderType.LOW and NullsOrderType.HIGH to handle NULL order by in sharding feature\n1. Add inline sharding algorithms match actual data nodes check\n1. Encrypt: Add unsupported check for combine statement with encrypt columns\n1. Encrypt: Support select distinct(column) encrypt rewrite and refactor SubstitutableColumnNameToken build logic\n1. Encrypt: Support like concat nested concat statement rewrite with encrypt feature\n1. Pipeline: Add SHARDING_TOTAL_COUNT impl of JobExecutorServiceHandler to improve CPU core requirement\n1. Pipeline: Support page query for inventory dumper and data consistency streaming query\n1. Pipeline: Use case-insensitive identifiers to enhance the table metadata loader\n1. Pipeline: Support primary key columns ordering for standard pipeline table metadata loader\n1. Sharding: Optimize sharding table index name rewriting rules and remove unnecessary suffix rewriting - [#31171](https://github.com/apache/shardingsphere/issues/31171)\n1. Metadata: Support postgresql and opengauss CHARACTER VARYING type metadata load - [#34221](https://github.com/apache/shardingsphere/pull/34221)\n\n### Bug Fixes\n\n1. Kernel: Replace ThreadLocal with TransmittableThreadLocal in HintManager to support cross Thread usage\n1. Kernel: Use ConnectionPropertiesParser spi to parse jdbcUrl to solve oracle url parse error\n1. Kernel: Fixes column count assert exception caused by postgresql system table judge\n1. Metadata: Keep in-used storage node when unregister storage unit\n1. Metadata: Fixes the generated key column name case insensitivity error\n1. SQL Parser: Support PostgreSQL do nothing conflict action\n1. SQL Parser: Fix oracle nvl function and interval hour parse error\n1. DistSQL: Fixes load single table error after creating logical data source\n1. DistSQL: Fixes set default single table storage unit to random failed\n1. DistSQL: Fixes set default single table storage unit to logical data source failed\n1. DistSQL: Fixes NPE when import metadata\n1. Fixes the problem of missing storage unit when registering storage unit\n1. SQL Binder: Add TableAvailable interface for CloseStatementContext, MoveStatementContext, FetchStatementContext and fix SQL rewrite test case\n1. SQL Federation: Fixes federated query LocalDateTime conversion\n1. SQL Federation: Fixes push down SQL execute error when sql contains chinese character with SQL federation\n1. SQL Federation: Fixes federation query binary type data query\n1. SQL Federation: Fixes null result in federated query for a single projected column\n1. SQL Federation: Fixes SQL federation unknown type exception caused by calcite wrong result type with bigint\n1. Transaction: Fixes savepoint manager not cleaned up in distributed transactions\n1. Transaction: Fixes PostgreSQL rollback only\n1. Transaction: Fixes transaction context not cleaned up when xa transaction is committed\n1. Transaction: Fixes setSavepoint method invocation not cleaning up\n1. Transaction: Fixes the issue that cursor is not rewritten\n1. Proxy: Support binary type bool value in PostgreSQL\n1. Proxy: Support array type prepared param in PostgreSQL\n1. Proxy: Support binary protocol value for text array in PostgreSQL\n1. Proxy: Fixes duplicate results when querying information_schema.SCHEMATA\n1. Proxy: Fixes incorrect results for querying information_schema.SCHEMATA\n1. Proxy: Fixes NPE when execute show table status\n1. Proxy: Fixes no database selected exception occurs when show tables from database\n1. Proxy: Fixes the error that the process does not exit after proxy startup fail\n1. Proxy: Fixes the error that the persisted system metadata was not cleared after the database was deleted in the PostgreSQL scenario\n1. Proxy: Fixes no database selected exception in the query SQL\n1. JDBC: Fixes the NPE when it does not contain a specified logic database in Driver\n1. Sharding: Fixes Sharding column not tracked through aliases\n1. Sharding: Fixes alter view exception when config sharding rule and binding table rule\n1. Sharding: Fixes is need accumulate logic\n1. Encrypt: Fixes show create table wrong result with encrypt when data type contains float\n1. Encrypt: Add insert select rewrite for encrypt\n1. Encrypt: Fixes the issue where updating a non-encrypted table and using a subquery on an encrypted table\n1. Pipeline: Fixes default data source lost when create migration job\n1. Pipeline: InventoryTaskSplitter compatible with `BigInteger` primary key\n1. Resolve the issue where \"zip file closed\" in versions prior to SpringBoot 2.3\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/29)\n\n## Release 5.5.0\n\n### API Changes\n\n1. Kernel: Remove the sqlCommentParseEnabled configuration in SQL Parser Rule to reduce code complexity\n1. SQL Parser: Consider removing sqlCommentParseEnabled config in SQLParser rule\n1. Federation: Add allQueryUseSQLFederation config for sql federation\n1. Proxy: Remove the outdated schemaName configuration of the Proxy\n\n### New Features\n\n1. DistSQL: New syntax for query plugin (SPI) implementation\n1. DistSQL: New syntax for managing SQL_TRANSLATOR rule\n\n### Enhancements\n\n1. Authority: Add isSuper option for user\n1. SQL Parser: Add EOF to throw exception when parse distsql rollback migration statement\n1. SQL Parser: Support more plsql statement parse and add plsql parse assert logic\n1. SQL Parser: Support parse index hint\n1. SQL Parser: Support mysql intersect combine operation sql parse\n1. SQL Parser: Support parse chinese white space for oracle\n1. SQL Parser: Fix mysql TimeStampDiff function parse\n1. SQL Parser: Fix sqlServer unqualified shorthand parsing\n1. SQL Parser: Support sqlServer SEARCH unreserved word parsing\n1. SQL Parser: Add sql server MEMBER unreserved word\n1. DistSQL: Use JSON format to output props in RQL\n1. DistSQL: Optimize REFRESH DATABASE METADATA logic\n1. DistSQL: SHOW COMPUTE NODES supports JDBC nodes\n1. DistSQL: Optimize syntax of REFRESH DATABASE METADATA\n1. DistSQL: Optimize the output of SHOW TABLE METADATA\n1. SQL Binder: Add ParameterMarkerSegmentBinder logic for Oracle MergeStatementBinder\n1. SQL Federation: Support mysql cross join statement for sql federation\n1. Transaction: Add advice message in XATransactionCheckPrivilegeFailedException\n1. Proxy: Add MySQL precompiled parameter verification to avoid turning on rewriteBatchedStatements=true when BenchmarkSQL connects to Proxy, causing an ArrayIndexOutOfBoundsException exception when the Proxy parameterCount exceeds 65535.\n1. Proxy: Fix mysql client multi statements option in protocol\n1. Sharding: Validate duplicate sharding actual data nodes\n1. Sharding: Support null condition value routing\n1. Pipeline: Improve CDC stability and performance\n1. Pipeline: MemoryPipelineChannel supports configurable zero queue size for less memory consumption\n1. Pipeline: Show dedicated error when mode type is not Cluster\n1. Pipeline: Ignore error message in status DistSQL result on job cancelling\n\n### Bug Fixes\n\n1. MetaData: Fixes database system schema is not built when create database\n1. Metadata: Fixes NPE of system schema builder rule\n1. Governance: Fixes thread blocking problem when create logic database for Etcd register center\n1. Governance：Fixes register storage units and create feature rules failure when use Standalone mode\n1. SQL Parser: Fixes PostgreSQL NPE when parse columnRef\n1. SQL Parser: Fixes npe cause by parse MySQL select window statement\n1. SQL Federation: Fixes Object 'DUAL' not found exception when execute select 1 from dual with sql federation\n1. Transaction: Fixes xa auto commit in executeQuery\n1. Proxy: Restore original databaseName in connectionSession after unicast\n1. Proxy: Fixes show tables can be executed without use database\n1. Proxy: Fixes the incorrect current database after unicast routing\n1. Proxy: Fixes the problem that show tables can be executed before use database\n1. Proxy: Fixes multi statements with specified database name\n1. Sharding: Fixes routing error when joining tables in uppercase\n1. Sharding: Fixes drop sharding table exception when table name is uppercase\n1. Sharding: Fixes generated key with upper case column name\n1. Readwrite-splitting: Fix check exception when using shadow data source\n1. Pipeline: Fixes commit/rollback migration job doesn't drop related consistency check job when check job is not completed\n1. Pipeline: Fixes show consistency check status stop_time display\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/28)\n\n\n## Release 5.4.1\n\n### New Features\n\n1. Metadata: Standalone mode adapts to metadata new structure\n1. Governance: Governance supports register instance level data source\n1. Proxy: Supports dbcp and c3p0 connection pools\n\n### Enhancements\n\n1. Mode: Improve Standalone mode JDBC type impl reset data on initialization\n1. JDBC: Move jdbc core META-INF/services/java.sql.Driver from test to main\n1. Encrypt: Add duplicate name check for derived columns and logical columns\n1. Encrypt: Deny DDL for cipher columns in Proxy\n1. Encrypt: Add the default type for derived columns to varchar(4000)\n1. Pipeline: Isolate ShardingSphereDataSource Standalone repository in pipeline\n1. Pipeline: Disable system-schema-metadata-enabled in pipeline\n1. Pipeline: Add algorithm columns in SHOW MIGRATION CHECK ALGORITHMS DistSQL result\n1. Pipeline: Add type_alias column in SHOW MIGRATION CHECK ALGORITHMS DistSQL result\n\n### Bug Fixes\n\n1. Single Table: Fixes not switched active version when CREATE/DROP table modifies the Single rule configuration\n1. JDBC: Fixes JDBC memory leak with MySQL in the 5.4.0 version\n1. Pipeline: Fixes get inventory position not correctly on breakpoint resuming when table names are similar\n1. Pipeline: Fixes CDC importer not start on breakpoint resuming when first inventory task is finished\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/27)\n\n\n## Release 5.4.0\n\n### API Changes\n\n1. Metadata: Change sharding broadcast tables to global broadcast tables\n1. JDBC: Remove exclamation mark (!) for global rules\n1. DistSQL: Simplify keywords ASSISTED_QUERY, LIKE_QUERY in encrypt DistSQL\n1. DistSQL: Optimize SQL_PARSER rule syntax\n1. Encrypt: Adjust encryption yaml API to distinguish between encrypt, like, and assisted query configurations\n1. Encrypt: Remove plain column and queryWithCipherColumn configuration in encrypt feature\n1. Readwrite-splitting: Refactor read/write splitting api\n1. Proxy: Remove property proxy-instance-type configuration\n1. Proxy: Remove property proxy-backend-executor-suitable\n1. Proxy: Remove property proxy-mysql-default-version\n1. Scaling: Refactor commit rollback streaming to drop streaming\n1. Sharding: Merge ShardingCacheRule into ShardingRule (Experimental)\n\n### New Features\n\n1. DistSQL: New syntax to manage SQL_FEDERATION rule\n1. Proxy: Support Unix Domain Socket\n\n### Enhancements\n\n1. Scaling: CDC supports pure incremental mode\n1. Scaling: CDC supports exporting data by transaction\n1. Scaling: CDC supports MySQL and PostgreSQL\n1. Scaling: CDC supports single table\n1. Scaling: CDC supports all openGauss data types\n1. Scaling: CDC supports replication reconnection\n1. Scaling: Remove DataConsistencyCalculateAlgorithmChooser\n1. Scaling: Improve performance of integer unique key table inventory data splitting\n1. Scaling: Adjust process configuration default value to reduce resource consumption\n1. Scaling: Auto refresh table metadata for migration\n1. Scaling: Compatible with openGauss existing replication slot reuse when database not existing\n1. Scaling: Show data consistency check status result should be empty when it's not completed\n1. Scaling: Enable concurrent CRC32 match on source and target\n1. Scaling: Pipeline job compatible with sharding rule audit strategy\n1. Metadata: Refactor metadata persistence structure\n1. Metadata: Optimize the process of loading single table metadata\n1. Metadata: Support MySQL/PostgreSQL/openGauss system tables empty query\n1. DistSQL: Add support for transactionalReadQueryStrategy for read/write splitting rule\n1. DistSQL: Enhanced algorithm properties check\n1. Transaction: Add privilege check\n1. Transaction: Remove the TransactionTypeHolder and only create the current transaction manager\n1. Parser: Support MySQL LOAD DATA and LOAD XML statement with single table or broadcast table\n1. Parser: Improve the parsing support of high-priority SQL statements in the test results of the MySQL test program\n1. Parser: Oracle dialect parser now supports Chinese comma\n1. Encrypt: Support query of encrypt column in projection subquery when use encrypt feature\n1. Kernel: Adds table existence metadata check for INSERT, DELETE, UPDATE and SELECT statements\n1. JDBC: Implement batch execution for ShardingSphereStatement\n1. Proxy: Frontend supports SSL/TLS\n1. Proxy: Support Flush message for PostgreSQL/openGauss Proxy\n1. Proxy: Support data type bit, bool for PostgreSQL Proxy\n\n### Bug Fixes\n1. Scaling: Fix pipeline job failure status persistence and usage\n1. Scaling: Fix CDC DELETE event Record.beforeList is null\n1. Scaling: Fix openGauss mppdb decoding plugin single quote issue\n1. Scaling: Fix execute engine not closed after job stopping\n1. Scaling: Fix stop job before task starting\n1. Metadata: Fix case sensitive issue when loading schema meta data with H2 database\n1. Metadata: Fix \"object not found\" exception when config PostgreSQL/openGauss schema name as database name\n1. DistSQL: Fix wrong result of check_table_metadata_enabled when execute SHOW DIST VARIABLE\n1. Encrypt: Fix SQL rewrite exception when use PostgreSQL/openGauss encrypt like feature\n1. Sharding: Support null sharding condition pass to sharding algorithm to allow user control null value route\n1. Parser: Support BETWEEN AND expression parsing in MySQL Projection\n1. Mask: Fix wrong mask result when config same value of from-x and to-y with KEEP_FROM_X_TO_Y\n1. Infra: Fix ClassNotFoundException may occur when missing pgjdbc\n1. Proxy: Fix MySQL packet out of order when client sending pipelining requests\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/25)\n\n\n## 5.3.2\n\n### API Changes\n\n1. Proxy: Add property `system-log-level`, support dynamic change of log level by DistSQL.\n1. DistSQL: Remove Hint-related DistSQL, users can use `SQL Hint` instead\n\n### New Features\n\n1. Scaling: Support any type of column unique key table\n\n### Enhancements\n\n1. Scaling: Use stream query for inventory dump and data consistency check\n1. Scaling: Compatible with `VARBINARY` column type in MySQL binlog parsing\n1. Scaling: Refactor `AbstractSimplePipelineJob.execute` to blocking\n1. Scaling: Improve table records count calculation\n1. Scaling: Support proxy sharding rule absent for migration job\n1. Scaling: Add `useServerPrepStmts=false` for pipeline job on MySQL\n1. Scaling: Improve datetime/time parsing for MySQL binlog\n1. Scaling: Add global status for prepare stage\n1. Scaling: Add `netTimeoutForStreamingResults` for pipeline job on MySQL\n1. Authority: Support specifying password authentication method\n1. Authority: Add md5 authentication support for openGauss protocol\n1. Agent: Add more metrics for JDBC\n1. Kernel: ShardingSphere Driver configuration supports Apollo\n1. Kernel: Adjust `SKIP_ENCRYPT_REWRITE SQL` Hint to `SKIP_SQL_REWRITE` to support more scenarios\n1. Kernel: Support openGauss `EXPLAIN PERFORMANCE`\n1. Encrypt: Like supports concat function\n\n### Bug Fixes\n\n1. Scaling: Fix unicode char and special char decoding for PostgreSQL incremental task\n1. Scaling: Fix Migration not support PostgreSQL json type\n1. DistSQL: `CREATE SHARDING TABLE RULE` supports `NONE` strategy\n1. Kernel: Fix use system database error when data sources are empty\n1. Kernel: Fix set worker-id does not take effect with Standalone mode\n1. Kernel: Clear storage node information when delete readwrite-splitting and database discovery rules\n1. Kernel: Fix the abnormal problem of Column index out of range in single table complex query\n1. Kernel: Fix PostgreSQL like lower case failed.\n1. Kernel: Fixed the exception of built-in metabase data collection when the front and back database types were inconsistent\n1. Kernel: Fix the problem of routing error reporting under certain table names\n1. Kernel: Fix MySQL create procedure parse error\n1. Kernel: Fix union extract table name NPE\n1. Kernel: Fix upper case table constraint not rewrite error\n1. Kernel: Fix failed to parse PostgreSQL / openGauss SQL contains money type\n1. Kernel: Fix PostgreSQL / openGauss positional parameter rule\n1. Kernel: Fix PostgreSQL / openGauss failed to parse const with type cast\n1. Kernel: Fix Chinese characters encode exception when execute select with sql federation engine\n1. Kernel: Fix `IndexOutOfBoundsException` when execute set variable statement int jdbc adapter\n1. Kernel: Fix index does not exist exception when execute drop index statement\n1. Proxy: Properly handle number sign in MySQL Proxy binary protocol\n1. Proxy: Fix PostgreSQL Proxy failed to handle bytea data type\n1. Proxy: Fix PostgreSQL Proxy failed to parse time value with microseconds\n1. Proxy: Fix PostgreSQL protocol codec for date type in binary format\n1. Proxy: Fix possible CCE `PostgreSQLInt2BinaryProtocolValue`\n1. Proxy: Fix possible error when client pass quoted charset to PostgreSQL/openGauss Proxy\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/24)\n\n\n## 5.3.1\n\n### New Features\n\n1. Kernel: Add new data masking, dynamic data masking features, and built-in data masking algorithms\n1. Scaling: Basic support of CDC feature\n1. DistSQL: Add masking rule related DistSQL\n\n### Enhancements\n\n1. Kernel: Cluster mode avoids secondary refresh of metadata\n1. Kernel: SHOW COMPUTE NODES supports displaying the version number of each instance\n1. Kernel: System database add cluster information table\n1. Kernel: Standalone mode persistent metadata supports MySQL\n1. Kernel: SQL HINT performance improvement\n1. Kernel: Restore routing to the specified database with Hint\n1. Encrypt: Supports underscore wildcards for Encrypt CharDigestLikeEncryptAlgorithm\n1. Kernel: Support SQL federation SELECT NULLS LAST/FIRST statement\n1. Kernel: Refactor encrypt integration test logic and add more test cases\n1. Kernel: Add salt props for MD5MaskAlgorithm, MD5EncryptAlgorithm\n1. Kernel: Refactor ShardingConditionEngine to support SPI configuration\n1. DistSQL: Add algorithm type check for `CREATE SHARDING TABLE RULE`\n\n### Bug Fixes\n\n1. Fix the problem of ZooKeeper cluster error reporting when ShardingSphere connects to Kubernetes\n1. Kernel:  Fix use Consul in cluster mode start up failure\n1. DB Discovery: Close heartbeat job when drop discovery rule\n1. Kernel: Fix wrong decide result when execute same sharding condition subquery with SQL federation\n1. Kernel:  Fix priority problem of UNION, INTERSECT, EXCEPT set operation in SQL Federation for PostgreSQL and openGauss dialect\n1. Kernel:  Fix create view index out of range exception when view contains set operator\n1. Kernel: Add XA resource exceeds length check\n1. Kernel:  Fix transaction support for spring requires_new\n1. Encrypt:  Fix AESEncryptAlgorithm decrypt exception when config char type with PostgreSQL and openGauss\n1. Encrypt: Fix abnormal expansion result for shorthand when encrypt subquery contains an alias\n1. Kernel:  Fix unsigned flag of column metadata was not serialized\n1. Kernel: Fix PostgreSQL / openGauss select fetch parsing issue to support federation execution engine\n1. Proxy: Fix packet sequence ID may be incorrect if error occurred in MySQL Proxy\n1. Proxy: Fix error occur in Proxy when using PostgreSQL composite type\n1. Proxy: Set proper column definition flag for MySQL COM_STMT_PREPARE\n1. Proxy: When querying PG metadata through Proxy and the result set is empty, the labels are lost\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/23)\n\n\n## 5.3.0\n\n### API Changes\n\n1. DistSQL: Refactor syntax API, please refer to the user manual\n1. Proxy: Change the configuration style of global rule, remove the exclamation mark\n1. Proxy: Allow zero-configuration startup, enable the default account root/root when there is no Authority configuration\n1. Proxy: Remove the default logback.xml and use API initialization\n1. JDBC: Remove the Spring configuration and use Driver + YAML configuration instead\n\n### Enhancements\n\n1. DistSQL: New syntax REFRESH DATABASE METADATA, refresh logic database metadata\n1. Kernel: Support DistSQL REFRESH DATABASE METADATA to load configuration from the governance center and rebuild MetaDataContext\n1. Support postgresql/openGauss setting transaction isolation level\n1. Scaling: Increase inventory task progress update frequency\n1. Scaling: DATA_MATCH consistency check support breakpoint resume\n1. Scaling: Support drop consistency check job via DistSQL\n1. Scaling: Rename column from sharding_total_count to job_item_count in job list DistSQL response\n1. Scaling: Add sharding column in incremental task SQL to avoid broadcast routing\n1. Scaling: Sharding column could be updated when generating SQL\n1. Scaling: Improve column value reader for DATA_MATCH consistency check\n1. DistSQL: Encrypt DistSQL syntax optimization, support like query algorithm\n1. DistSQL: Add properties value check when REGISTER STORAGE UNIT\n1. DistSQL: Remove useless algorithms at the same time when DROP RULE\n1. DistSQL: EXPORT DATABASE CONFIGURATION supports broadcast tables\n1. DistSQL: REGISTER STORAGE UNIT supports heterogeneous data sources\n1. Encrypt: Support Encrypt LIKE feature\n1. Automatically start distributed transactions when executing DML statements across multiple shards\n1. Kernel: Support client \\d for PostgreSQL and openGauss\n1. Kernel: Support select group by, order by statement when column contains null values\n1. Kernel: Support parse RETURNING clause of PostgreSQL/openGauss Insert\n1. Kernel: SQL HINT performance improvement\n1. Kernel: Support mysql case when then statement parse\n1. Kernel: Supporting data source level heterogeneous database gateway\n1. (Experimental) Sharding: Add sharding cache plugin\n1. Proxy: Support more PostgreSQL datetime formats\n1. Proxy: Support MySQL COM_RESET_CONNECTION\n1. Scaling: Improve MySQLBinlogEventType.valueOf to support unknown event type\n1. Kernel: Support case when for federation\n\n### Bug Fix\n\n1. Scaling: Fix barrier node created at job deletion\n1. Scaling: Fix part of columns value might be ignored in DATA_MATCH consistency check\n1. Scaling: Fix jdbc url parameters are not updated in consistency check\n1. Scaling: Fix tables sharding algorithm type INLINE is case-sensitive\n1. Scaling: Fix incremental task on MySQL require mysql system database permission\n1. Proxy: Fix the NPE when executing select SQL without storage node\n1. Proxy: Support DATABASE_PERMITTED permission verification in unicast scenarios\n1. Kernel: Fix the wrong value of worker-id in show compute nodes\n1. Kernel: Fix route error when the number of readable data sources and weight configurations of the Weight algorithm are not equal\n1. Kernel: Fix multiple groups of readwrite-splitting refer to the same load balancer name, and the load balancer fails problem\n1. Kernel: Fix can not disable and enable compute node problem\n1. JDBC: Fix data source is closed in ShardingSphereDriver cluster mode when startup problem\n1. Kernel: Fix wrong rewrite result when part of logical table name of the binding table is consistent with the actual table name, and some are inconsistent\n1. Kernel: Fix startup exception when use SpringBoot without configuring rules\n1. Encrypt: Fix null pointer exception when Encrypt value is null\n1. Kernel: Fix oracle parsing does not support varchar2 specified type\n1. Kernel: Fix serial flag judgment error within the transaction\n1. Kernel: Fix cursor fetch error caused by wasNull change\n1. Kernel: Fix alter transaction rule error when refresh metadata\n1. Encrypt: Fix EncryptRule cast to TransparentRule exception that occurs when the call procedure statement is executed in the Encrypt scenario\n1. Encrypt: Fix exception which caused by ExpressionProjection in shorthand projection\n1. Proxy: Fix PostgreSQL Proxy int2 negative value decoding incorrect\n1. Proxy: PostgreSQL/openGauss support describe insert returning clause\n1. Proxy: Fix gsql 3.0 may be stuck when connecting Proxy\n1. Proxy: Fix parameters are missed when checking SQL in Proxy backend\n1. Proxy: Enable MySQL Proxy to encode large packets\n1. Kernel: Fix oracle parse comment without whitespace error\n1. DistSQL: Fix show create table for encrypt table\n\n### Refactor\n\n1. Scaling: Reverse table name and column name when generating SQL if it's SQL keyword\n1. Scaling: Improve increamental task failure handling\n1. Kernel: Governance center node adjustment, unified hump to underscore\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/22)\n\n\n## 5.2.1\n\n### New Feature\n\n1. Add ShardingSphere default system database to support global metadata management\n1. Support asynchronous data consistency check\n1. Added support for Consul governance center\n1. Added support for Nacos governance center\n1. Added support for the view function in the governance center\n\n### Enhancement\n\n1. SQL Federation engine adds ADVANCED executor and adapts to openGauss database\n1. Support ShardingSphere Proxy startup after read-write splitting read database is disabled\n1. SQL HINT supports force sharding route\n1. Show processlist supports showing Proxy connections (sleep, active)\n1. Optimized ShardingSphere-JDBC data source configuration error message\n1. ShardingSphere-JDBC supports SpringBoot 3.x version\n1. Support load MySQL, PostgreSQL, openGauss and SQLServer view metadata\n1. Update Snakeyaml to 1.33 and open YAML 3MB limit\n1. Reuse cached connections as possible when unicast sharding\n1. Support Parsing ALTER ROLE in Oracle\n1. Add support of ALTER RESOURCE COST for Oracle\n1. Support parsing Drop Materialized View in Oracle\n1. Support parsing DROP LIBRARY in Oracle\n1. Support parsing DROP JAVA in Oracle\n1. Support parsing DROP PLUGGABLE DATABASE in Oracle\n1. Support parsing DROP INDEX TYPE in Oracle\n1. Support Parsing ALTER PACKAGE in openGauss\n1. Support openGauss select offset, count statement parse and remove useless syntax in PostgreSQL grammar\n1. Add max_size to openGauss syntax\n1. Optimize alter view/drop view parse logic and fix alter view refresher bug\n1. Add sql parser error detail to ParseCancellationException\n1. Add support for parse OptOnConflict for postgres\n1. Enhance support for ALTER TABLE and ALTER VIEW in PostgreSQL\n1. Add a missing keyword in PostgreSQL Declare Statement\n1. Add json function support to mysql parser\n1. ShardingSphere-Proxy automatically adapts to cgroup memory limits in Docker environment\n1. Show migration status DistSQL respond new added error_message column\n1. Show migration status respond new added processed_records_count column\n1. Support MySQL 8 caching_sha2_password authentication in incremental dump\n1. Improve drop pipeline process configuration\n1. Support unique key table migration\n1. Support migrate table to new name table\n1. Improve thread pool usage in pipeline task and runner\n1. Support cancelable data consistency check\n1. DistSQL: When creating or altering readwrite-splitting rule, check duplicate write or read resources\n1. DistSQL: Add validity check for `ALTER SHARDING BINDING TABLE RULES`\n1. Standalone mode H2 support persistent metadata\n1. Fix openGauss cursor execution in xa transaction\n1. Added transaction related exceptions\n\n### Bug Fix\n\n1. Generate proper placeholder for PostgreSQL when rewriting\n1. Fix opengauss update set parse exception\n1. Fix parse exception when execute insert statement with negative value\n1. Fix wrong connectDescriptorUrlPattern in OracleDataSourceMetaData\n1. Fix insert SQL garbled after sharding rewrote in special rules\n1. Fix exception when execute select * from information_schema.tables\n1. Fix exception when execute alter view rename\n1. Fix PostgreSQL check data source permission when using rolsuper\n1. DistSQL: fix NPE for `REFRESH TABLE METADATA` when there is no resource\n1. Fix Unmodified table metadata when modify rules\n1. Fix database discovery\n1. The MySQL.NORMAL_REPLICATION algorithm cannot find primary node\"\n1. Fixed using etcd to build a cluster event not aware\n1. Fix NPE occurred when transaction management is not created\n1. Fix routing exception that occurs when the sharding value of the InlineShardingAlgorithm algorithm exceeds Integer\n\n### API Changes\n\n1. SQL HINT syntax format adjust to SQL-style format\n1. DistSQL: Remove syntax `COUNT DATABASE RULES`\n1. ShardingSphere mode remove overwrite configuration\n1. Agent: Optimize configuration of agent.yaml\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/21)\n\n## 5.2.0\n\n### New Feature\n\n1. Support SQL audit for sharding feature\n1. Support MySQL show processlist and kill process id feature\n1. Scaling: Add dedicated DistSQL for data migration\n1. Scaling: Basic support migrate data to heterogeneous database\n1. DistSQL: New syntax `CREATE MIGRATION PROCESS CONFIGURATION`\n1. DistSQL: New syntax `ALTER MIGRATION PROCESS CONFIGURATION`\n1. DistSQL: New syntax `SHOW MIGRATION PROCESS CONFIGURATION`\n1. DistSQL: New syntax  `ADD MIGRATION SOURCE RESOURCE`\n1. DistSQL: New syntax `SHOW SQL_TRANSLATOR RULE`\n1. DistSQL: New syntax `CREATE SHARDING AUDITOR`\n1. DistSQL: New syntax `ALTER SHARDING AUDITOR`\n1. DistSQL: New syntax `SHOW SHARDING AUDIT ALGORITHMS`\n\n### Enhancement\n\n1. Support column visible feature for MySQL, Oracle, SQLServer and H2\n1. Support cartesian product configuration for read write splitting\n1. Support spring namespace and spring boot usage for sql translator\n1. Support JSR-310 Year and Month in IntervalShardingAlgorithm\n1. Support broadcast table update/delete limit statement\n1. Support create index on table(column) statement rewrite when config encrypt\n1. Support openGauss cursor, fetch, move, close statement for sharding, readwrite-splitting\n1. Support encrypt column rewrite when execute column is null in predicate\n1. Support encrypt show create table return logic columns\n1. Support create table with index statement rewrite when config encrypt\n1. Support PostgreSQL create operator statement parse\n1. Support PostgreSQL create materialized view statement parse\n1. Support PostgreSQL nested comments parse\n1. Support PostgreSQL alter subscription statement parse\n1. Support PostgreSQL create group statement parse\n1. Support PostgreSQL alter statictics statement parse\n1. Support PostgreSQL create foreign table statement parse\n1. Support PostgreSQL alter server statement parse\n1. Support PostgreSQL create foreign data wrapper statement parse\n1. Support PostgreSQL create event trigger statement parse\n1. Support PostgreSQL security label statement parse\n1. Support PostgreSQL reindex statement parse\n1. Support PostgreSQL reassign owned statement and refresh materialized view statement parse\n1. Support PostgreSQL prepare transaction statement parse\n1. Support PostgreSQL create collation statement parse\n1. Support PostgreSQL lock statement parse\n1. Support PostgreSQL alter rule statement parse\n1. Support PostgreSQL notify statement parse\n1. Support PostgreSQL unlisten statement parse\n1. Support Oracle alter function and alter hierarchy statement parse\n1. Support Oracle alter pluggable database statement parse\n1. Support Oracle alter materialized view log statement parse\n1. Support Oracle alter diskgroup statement parse\n1. Support Oracle alter operator statement parse\n1. Support oracle alter cluster statement parse\n1. Support oracle alter audit policy statement parse\n1. Support Oracle alter index type statement parse\n1. Support Oracle lock table statement parse\n1. Support Oracle alter java statement parse\n1. Support Oracle inline constraint statement parse\n1. Support openGauss geometric operator statement parse\n1. Optimize MySQL visible/invisible parse of create/alter table statements\n1. Support scope of variable prefixed with @@ in MySQL SET statement parse\n1. Support MySQL create procedure with create view parse\n1. Support column segments parse in create index on table statement\n1. Support openGauss cursor, fetch, move, close statement for sharding, readwrite-splitting\n1. Support encrypt column rewrite when execute column is null in predicate\n1. Support encrypt show create table return logic columns\n1. Support create table with index statement rewrite when config encrypt\n1. Support parsing ALTER LOCKDOWN PROFILE in Oracle\n1. Support parsing ALTER MATERIALIZED VIEW in Oracle\n1. Support parsing ALTER MATERIALIZED ZONEMAP in Oracle\n1. Support parsing ALTER LIBRARY in Oracle\n1. Support parsing ALTER INMEMORY JOIN GROUP in Oracle\n1. Support parsing DROP OPERATOR in Oracle\n1. Support parsing DROP RESTORE POINT in Oracle\n1. Support parsing CREATE RESTORE POINT in Oracle\n1. Support parsing DROP INMEMORY JOIN GROUP in Oracle\n1. Support parsing create_bit_xor_table in MySQL\n1. Support parsing MySQL DO statement\n1. Support parsing DropServer in openGauss\n1. Support parsing CREATE AGGREGATE In openGauss\n1. Support parsing ALTER ROUTINE in PostgreSQL\n1. Add PostgreSQL Create Cast Statement\n1. Add PostgreSQL Create Aggregate Statement\n1. Support fetch/move/close cursor statement in PostgreSQL\n1. Support Parsing ALTER PUBLICATION in PostgreSQL\n1. Add PostgreSQL Create Access Method Statement\n1. Support Parsing ALTER POLICY in PostgreSQL\n1. Support parsing ALTER OPERATOR in PostgreSQL\n1. Add PostgreSQL Copy Statement\n1. Add PostgreSQL Comment Statement\n1. Support listen statement in PostgreSQL\n1. Support DECLARE cursor statement\n1. Add default serverConfig in helm charts\n1. Assemble openGauss JDBC Driver into Proxy distribution\n1. ShardingSphere-Proxy listen on specified IP addresses\n1. Support COM_STMT_SEND_LONG_DATA in MySQL Proxy\n1. SELECT VERSION() support alias in MySQL Proxy\n1. Fix openGauss Proxy could not be connected if no resource defined\n1. Support using JRE defined in JAVA_HOME in ShardingSphere-Proxy's startup script\n1. Avoid client blocked when OOM occurred in ShardingSphere-Proxy\n1. Support using c3p0 in ShardingSphere-JDBC\n1. Support SET NAMES with value quoted by double-quote\n1. Connection.prepareStatement with columns arguments is available in ShardingSphere-JDBC\n1. Scaling: Improve MySQL connect and reconnect\n1. Scaling: Fix MySQL json column may cause leak at incremental task\n1. Scaling: Add permission check for PostgreSQL data sources\n1. Scaling: Incremental migration support for MySQL MGR mode\n1. Scaling: Improve job progress persistence\n1. Scaling: Start job DistSQL execute and return synchronously\n1. Scaling: Inventory migration support table has primary key and unique key\n1. Scaling: Close unerlying ElasticJob when stopping job\n1. Scaling: Improve logical replication slot name generation for PostgreSQL and openGauss\n1. Scaling: Make query DistSQL could be executed when no database selected\n1. DistSQL: Add worker_id to the result set of `SHOW INSTANCE LIST` & `SHOW INSTANCE INFO`\n1. DistSQL: Improve the result of `EXPORT DATABASE CONFIG`\n1. DistSQL: Support more databases for `FORMAT SQL`\n1. DistSQL: Optimize the execution logic of `CREATE TRAFFIC RULE`\n1. DistSQL: Support `assistEncryptor` for Encrypt RDL\n1. DistSQL: Add sharding algorithm type check when `CREATE SHARDING TABLE RULE`\n1. Support database discovery to configure multiple groups of high availability under the same logic database\n1. Support ShardingSphere-Proxy to start up under empty logic library\n1. Support for isolating EventBus events by instance\n1. Support the database to detect changes in the master node and restart the detection heartbeat task\n1. Support ShardingSphere-Proxy to generate new worker-id when re-registering in cluster mode\n1. Thrown exception when inserting expression value in shadow column on executing insert\n1. Support distributed transactions across multiple logical databases\n1. Support executing truncate in XA & PostgreSQL\n1. Support alter local transaction rule with DistSQL\n1. Support global transaction manager\n1. Delete support for branch transaction on proxy\n\n### Bug Fix\n\n1. Fix single table metadata refresh error caused by filtering DataSourceContainedRule\n1. Fix parsing exception caused by the null value of MySQL blob type\n1. Fix PostgreSQL/openGauss reset statement parse error\n1. Fix wrong parameter rewrite when use sharding and encrypt\n1. Fix the failed conversion of Month related classes on IntervalShardingAlgorithm\n1. Fix NullPointerException when execute select union statement contains subquery\n1. Fix wrong encrypt rewrite result due to incorrect order of metadata\n1. Fix MySQL trim function parse error\n1. Fix MySQL insert values with _binary parse error\n1. Fix MySQL syntax error cannot be thrown to client\n1. Avoid EventLoop blocked because of closing JDBC resources\n1. Correct server status flags returned by MySQL Proxy\n1. Fix a possible connection leak issue if Proxy client disconnected in transaction\n1. Fixed a possible consistency issue with the statement being executed when the Proxy client is disconnected\n1. Avoid pooled connection polluted by executing SET statements\n1. Make SHOW TABLES FROM work in ShardingSphere-Proxy\n1. Fix PostgreSQL DDL could not be executed by Extended Query\n1. Fix SHOW VARIABLES could not be executed in PostgreSQL Proxy without resource\n1. Fix FileNotFoundException when use ShardingSphere Driver with SpringBoot fatjar\n1. Scaling: Fix the problem that the table contains both primary key and unique index at inventory migration\n1. Scaling: Improve incremental migration, support the latest position in the middle of batch insert event\n1. Scaling: Fix the error caused by null field value in openGauss incremental migration\n1. DistSQL: Fix incorrect strategy name in result of `SHOW SHARDING TABLE RULES`\n1. DistSQL: Fix current rule config is modified in advance when `ALTER SHARDING TABLE RULE`\n1. DistSQL: Fix connection leak when `ALTER RESOURCE`\n1. DistSQL: Fix `CREATE TRAFFIC RULE` failed when load balance algorithm is null\n1. Fix that the monitoring heartbeat task was not stopped when the database was discovered and the logical library was deleted\n1. Fix cluster mode ShardingSphere-JDBC load all logic database\n1. Fix worker-id generated by SnowflakeKeyGenerateAlgorithm in cluster mode may exceed the maximum value\n1. Fix `DistSQL` adding shadow algorithm exception without shadow data source\n1. Fix cross-database data source confusion caused by same data source name in multiple logical databases\n1. Fix RUL DistSQL execution failure in transaction\n1. Fix begin for PostgreSQL & openGauss\n1. Agent: Fixed the error of null value in contextManager when collecting metric data\n\n### API Changes\n\n1. Remove SQL passthrough to data source feature\n1. Add new assistedQueryEncryptorName and remove QueryAssistedEncryptAlgorithm interface\n1. Refactor readwrite-splitting api to improve user experience\n1. Remove check-duplicate-table-enabled configuration\n1. Remove useless config item show-process-list-enabled configuration\n1. Scaling: Change keyword for part of data migration DistSQL\n1. Scaling: Redesign part of data migration DistSQL\n1. DistSQL: Unify parameter type specification\n1. DistSQL: Split `SHOW INSTANCE MODE` to `SHOW MODE INFO` and `SHOW INSTANCE INFO`\n1. DistSQL: Change `DROP SCALING jobId` to `CLEAN MIGRATION jobId`\n1. DistSQL: Remove `COUNT INSTANCE RULES`\n1. Add database found that high availability supports all the slave libraries to go offline, and the main library undertakes the read traffic configuration\n1. SnowflakeKeyGenerateAlgorithm supports configuring worker-id in standalone mode\n1. Replace `sourceDataSourceName` with `productionDataSourceName` in Shadow API Configuration\n1. Authority: Remove deprecated native authority provider\n\n### Refactor\n\n1. ShardingSphere metadata refactoring for splitting actual metadata and logical metadata\n1. Use ConnectionContext, QueryContext to remove ThreadLocal in FetchOrderByValueQueuesHolder, TrafficContextHolder, SQLStatementDatabaseHolder and TransactionHolder\n1. Modify the default value of the ShardingSphere-Proxy version in the helm chart\n1. Docker container will exit if ShardingSphere-Proxy failed to startup\n1. Helm Charts in ShardingSphere repository are transferred to sub-project shardingsphere-on-cloud\n1. Scaling: Plenty of refactor for better code reuse\n1. DistSQL: Add a new category named RUL\n1. Refactor the schedule module and split it into cluster schedule and standalone schedule\n1. Remove memory mode, keep standalone mode and cluster mode\n1. Refactoring metadata table loading logic and persistence logic\n1. Refactoring distributed locks to retain the most concise interface design\n1. Refactor : Unify The Creation for Proxy Containers in IT from ENV Modules\n1. Refactor : Unify The Configuration for container created by testcontainer\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/20)\n\n## 5.1.2\n\n### New Feature\n\n1. Kernel: Alpha version to support SQL dialect translate for MySQL and PostgreSQL\n1. Kernel: Support custom schema for PostgreSQL and openGauss\n1. Kernel: Support create/alter/drop view statement for PostgreSQL and openGauss\n1. Kernel: Support openGauss cursor statement\n1. Kernel: Support use customize system database\n1. Kernel: Support get openGauss and MySQL create SQL\n1. Kernel: Support get postgres create SQL\n1. Proxy: Official support for quickly deploying a ShardingSphere-Proxy cluster with a ZooKeeper cluster in Kubernetes using Helm\n1. JDBC: Support ShardingSphere JDBC Driver\n1. Scaling: Support PostgreSQL auto create table\n1. Scaling: Support scaling for table with customized schema in PostgreSQL and openGauss\n1. Scaling: Support scaling for table with text primary key and without integer primary key\n1. Mode: Registry center supports PG/openGauss three-level structure\n1. Mode: Registry center supports database-level distributed lock\n\n### Enhancement\n\n1. Kernel: Support copy statement for PostgreSQL and openGauss\n1. Kernel: Support alter/drop index statement for PostgreSQL\n1. Kernel: Support update force index statement for MySQL\n1. Kernel: Support create/alter/drop schema for openGauss\n1. Kernel: Optimize RoundRobinReplicaLoadBalanceAlgorithm and RoundRobinTrafficLoadBalanceAlgorithm logic\n1. Kernel: Optimize metadata loading logic when frontendDatabaseType and backendDatabaseType are different\n1. Kernel: Refactor meta data load logic\n1. Kernel: Optimize show processlist statement\n1. Kernel: Improve performance about large tables loaded\n1. Kernel: Support execute comment statement\n1. Kernel: Support view in sharding rule\n1. Kernel: Support parsing CREATE ROLLBACK SEGMENT in Oracle\n1. Kernel: Support Parsing DROP TYPE in openGauss\n1. Kernel: Support Parsing ALTER TYPE in openGauss\n1. Kernel: Support parsing DROP DISKGROUP in Oracle\n1. Kernel: Support parsing CREATE DISKGROUP in Oracle\n1. Kernel: Support parsing DROP FLASHBACK ARCHIVE in Oracle\n1. Kernel: Support Parsing CHECKPOINT in openGauss\n1. Kernel: Support parsing CREATE FLASHBACK ARCHIVE in Oracle\n1. Kernel: Add PostgreSQL Close Statement\n1. Kernel: Support Parsing DROP CAST in openGauss\n1. Kernel: Support parsing CREATE CAST in openGauss\n1. Kernel: Support parsing CREATE CONTROL FILE in Oracle\n1. Kernel: Support Parsing DROP DIRECTORY in openGauss\n1. Kernel: Support parsing ALTER DIRECTORY in openGauss\n1. Kernel: Support parsing CREATE DIRECTORY in openGauss\n1. Kernel: Add PostgreSQL Checkpoint Statement\n1. Kernel: Support parsing DROP SYNONYM in openGauss\n1. Kernel: Support parsing CREATE SYNONYM in openGauss\n1. Kernel: Support parsing ALTER SYNONYM in openGauss\n1. Kernel: Add PostgreSQL CALL Statement\n1. Kernel: Support parsing CREATE PFILE in Oracle\n1. Kernel: Support parsing CREATE SPFILE in Oracle\n1. Kernel: Support parsing ALTER SEQUENCE in Oracle\n1. Kernel: Support parsing CREATE CONTEXT in Oracle\n1. Kernel: Support Parsing ALTER PACKAGE in oracle\n1. Kernel: Support parsing CREATE SEQUENCE in Oracle\n1. Kernel: Support parsing ALTER ATTRIBUTE DIMENSION in Oracle\n1. Kernel: Support parsing ALTER ANALYTIC VIEW in Oracle\n1. Kernel: Use ShardingSphere SPI in SQLVisitorFacade\n1. Kernel: Use ShardingSphere SPI in DatabaseTypedSQLParserFacade\n1. Kernel: Support parsing ALTER OUTLINE in Oracle\n1. Kernel: Support parsing DROP OUTLINE in Oracle\n1. Kernel: Support parsing drop edition in oracle\n1. Kernel: Support WITH Common Table Expression of SQLServer\n1. Kernel: Exclude parenthesis from SubquerySegment's start and stop index in withClause\n1. Kernel: Refactor JoinTableSegment\n1. Kernel: Support parsing DROP SYNONYM in Oracle\n1. Kernel: Support parsing CREATE DIRECTORY in Oracle\n1. Kernel: Support parsing CREATE SYNONYM in Oracle\n1. Kernel: Support for XmlNamespaces Clause of SQLServer SELECT Statement\n1. Kernel: Support parsing Alter Database Dictionary in Oracle\n1. Kernel: Support FOR Clause of SQLServer SELECT Statement\n1. Kernel: Support Parsing ALTER DATABASE LINK in Oracle\n1. Kernel: Support CREATE EDITION Parsing in Oracle\n1. Kernel: Support parsing ALTER TRIGGER in Oracle\n1. Kernel: Add SQLServer REVERT Statement\n1. Kernel: Support Parsing DROP TEXT SEARCH in PostgreSQL\n1. Kernel: Add drop server for PostgreSQL\n1. Kernel: Support Parsing ALTER VIEW in Oracle\n1. Kernel: Add drop access method for PostgreSQL\n1. Kernel: Support Parsing DROP ROUTINE in PostgreSQL\n1. Kernel: Proofread SQLServer DROP USER Statement\n1. Kernel: Support parsing DROP TRIGGER in Oracle\n1. Kernel: Support parsing Drop subscription in PostgreSQL\n1. Kernel: Add drop operator class for PostgreSQL\n1. Kernel: Support parsing DROP PUBLICATION in PostgreSQL\n1. Kernel: Support Parsing DROP VIEW in Oracle\n1. Kernel: Support Parsing DROP TRIGGER in PostgreSQL\n1. Kernel: Support Parsing DROP DIRECTORY in Oracle\n1. Kernel: Support Parsing DROP STATISTICS for PostgreSQL\n1. Kernel: Add drop type SQL parser for PostgreSQL\n1. Kernel: Support Parsing DROP RULE in PostgreSQL\n1. Kernel: Proofread SQLServer ALTER LOGIN Statement\n1. Kernel: Support parsing PostgreSQL DROP FOREIGN DATA WRAPPER\n1. Kernel: Small changes to PostgreSQL DROP EVENT TRIGGER statement\n1. Proxy: ShardingSphere-Proxy MySQL supports receiving MySQL packet more than 16 MB\n1. Proxy: Supports netty parameter ChannelOption.SO_BACKLOG configurable in ShardingSphere-Proxy\n1. Proxy: Optimize so-reuseaddr in netty to solve the problem of port occupied\n1. Proxy: Docker image of ShardingSphere-Proxy supports aarch64 platform\n1. Proxy: Make server version configurable in ShardingSphere-Proxy MySQL\n1. Proxy: Supports more character sets in ShardingSphere-Proxy PostgreSQL/openGauss\n1. Proxy: Make default port configurable in ShardingSphere-Proxy\n1. Scaling: Compatible with HA ports for openGauss:3.0 when thread_pool enabled\n1. Scaling: Optimize ZooKeeper event handling in PipelineJobExecutor to avoid blocking ZooKeeper events\n1. Scaling: Make table name case-insensitive in whole process\n1. Scaling: Improve replication slot cleanup for PostgreSQL and openGauss\n1. Scaling: Improve lock protection for job preparation\n1. Scaling: Support PostgreSQL insert on conflict do update\n1. Scaling: Do not cache data source in GlobalDataSourceRegistry to avoid possible shared resource close issue\n1. Scaling: Reuse data source pool as more as possible to reduce working database connections\n1. DistSQL: `REFRESH TABLE METADATA` supports specifying PostgreSQL's schema\n1. DistSQL: `ALTER SHARDING TABLE RULE` add validation of binding table\n1. Mode: ShardingSphere-JDBC supports configuring database connection name\n1. Distributed Transaction: DistSQL is prohibited from executing within a transaction\n1. Distributed Transaction: autocommit = 0, DDL part of DML will automatically open the transaction\n\n### Bug Fix\n\n1. Kernel: Fix parsing error about show statement for PostgreSQL and openGauss\n1. Kernel: Fix parsing error about time extract function for for PostgreSQL and openGauss\n1. Kernel: Fix parsing error about select mod function for for PostgreSQL and openGauss\n1. Kernel: Fix PSQLException when execute join statement with multi schema in readwrite scenario\n1. Kernel: Fix wrong route result when execute create schema statement in encrypt scenario\n1. Kernel: Fix npe when execute drop schema if exist statement\n1. Kernel: Fix wrong route result when execute SELECT LAST_INSERT_ID() AS id; statement\n1. Kernel: Fix npe when execute use database when database doesn't contains datasource\n1. Kernel: Fix create function with set var\n1. Proxy: Fix NPE caused by column's case unmatched in PostgreSQLComDescribeExecutor\n1. Proxy: Complete command tags for schema DDL in ShardingSphere-Proxy PostgreSQL / openGauss\n1. Scaling: Fix MySQL unsigned type null value cause error during increment task\n1. Scaling: Fix resource leak caused by error occurred when creating DataSource in ShardingSphere-Scaling\n1. Scaling: Fix ShardingSphereDataSource creation ignoring other rules\n1. Scaling: Fix on preparation job could not be stopped\n1. Scaling: Fix data source property url and jdbcUrl compatibility\n1. Scaling: Fix openGauss logical replication slot creation, avoid possible incremental data loss\n1. Scaling: Update local job status before persisting job status to registry center, make sure it won't be overwritten later\n1. Scaling: Handling null value in TestDecodingPlugin for PostgreSQL\n1. DistSQL: Fix `SET VARIABLE` modification not taking effect in stand-alone and memory mode\n1. DistSQL: Fix the inconsistency between `SHOW INSTANCE LIST` display data and actual data\n1. DistSQL: Fix capitalization sensitivity in sharding DistSQL\n1. Mode: Fix the new version metadata lost data after the Scaling changes the table sharding rules\n1. Distributed Transaction: Fix getIndexInfo with catalog\n\n### API Changes\n\n1. DistSQL: Change `EXPORT SCHEMA CONFIG`  to `EXPORT DATABASE CONFIG`\n1. DistSQL: Change `IMPORT SCHEMA CONFIG` to `IMPORT DATABASE CONFIG`\n1. DistSQL: Change `SHOW SCHEMA  RESOURCES` to `SHOW DATABASE RESOURCES`\n1. DistSQL: Change `COUNT SCHEMA RULES` to `COUNT DATABASE RULES`\n1. Mode: Adjust db-discovery algorithm configuration\n1. Authority: Authority provider `ALL_PRIVILEGES_PERMITTED` updated to `ALL_PERMITTED`\n1. Authority: Authority provider `SCHEMA_PRIVILEGES_PERMITTED` updated to `DATABASE_PERMITTED`\n\n### Refactor\n\n1. Scaling: Refactor JobConfiguration, prepare for different types of jobs reuse and extension\n1. Mode: Optimize compute node structure of the registry center\n1. Mode: Use uuid instead of ip@port as instance id\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/19)\n\n## 5.1.1\n\n### New Feature\n1. Kernel: support alter materialized view for PostgreSQL\n1. Kernel: support declare for PostgreSQL\n1. Kernel: support discard for PostgreSQL\n1. Kernel: Add mode to parser to support $$ in PostgreSQL\n1. Kernel: Support MySQL create tablespace statement parse\n1. Scaling: Implement stop source writing and restore source writing\n1. Scaling: Support partial tables scale-out\n1. DistSQL: New DistSQL syntax: `SHOW UNUSED RESOURCES`\n1. Mode: Added persistent `XA Recovery Id` to Governance Center\n1. Mode: Database discovery adds delayed master-slave delay function\n1. Distributed Transaction: Add savepoint support for ShardingSphere proxy\n1. Distributed Transaction: Support auto rollback when report exception in transaction block for PostgreSQL and openGauss\n1. Distributed Transaction: Make it is easy to use with Narayana\n1. Distributed Transaction: Add savepoint support for ShardingSphere-JDBC\n\n### Enhancement\n1. Kernel: Refactor kernel to improve performance\n1. Proxy: Reduce Docker image size of ShardingSphere-Proxy\n1. Proxy: ShardingSphere-Proxy supports set names statements\n1. Proxy: ShardingSphere-Proxy MySQL supports multi statements\n1. Scaling: Only one proxy node could do data consistency check in proxy cluster\n1. Scaling: Replace scaling input and output config fields type from int to Integer\n1. Scaling: Update MySQL checksum SQL\n1. Scaling: Improve scaling job progress deletion in reset and progress check before starting job\n1. Scaling: Improve `FinishCheckJob` data consistency check when target tables already have the same data as source tables\n1. Scaling: Break scaling job ASAP when there is unsupported table since primary key\n1. Scaling: Reuse `ClusterPersistRepository` of proxy in `PipelineAPIFactory`\n1. Scaling: Update jobId generation algorithm, and make it support idempotency\n1. DistSQL: Support configuration data type and length when CREATE/ALTER ENCRYPT RULE\n1. DistSQL: Unify the display results of `SHOW ALL VARIABLES` and `SHOW VARIABLE`\n1. DistSQL: Remove the effect of binding order when `DROP BINDING TABLE RULES`\n1. DistSQL: Add column `mode_type` in the result of `SHOW INSTANCE LIST`\n1. DistSQL: Add validation to the mode when `ENABLE/DISABLE INSTANCE`\n1. DistSQL: Check if the rule is in used when `DROP READWRITE_SPLITTING RULE`\n1. DistSQL: Check duplicate resource names when `CREATE READWRITE_SPLITTING RULE`\n1. DistSQL: Add column `delay_time` to the result of `SHOW READWRITE_SPLITTING READ RESOURCES`\n1. DistSQL: Support `IF EXISTS` when `DROP RULE`\n1. DistSQL: Optimize the prompt information of connection failure when `ADD/ALTER RESOURCE`\n1. Mode: Add schema-level global distributed locks\n1. Mode: Add schema version number to support batch execution of DistSQL\n1. Mode: Persistent metadata optimization in cluster mode\n1. Mode: The database discovery add the `schemaName` identifier when create a JOB\n\n### Refactor\n\n1. Kernel: Refactor test case for encrypt\n1. Kernel: Refactor metadata to support PostgreSQL database and schema\n1. Scaling: Remove HikariCP dependency in pipeline modules\n1. Mode: Refactor governance center storage node structure\n1. Mode: Refactor governance center meta data structure\n1. Mode: Adjust the database discovery MGR module to MySQL module\n\n### Bug Fix\n1. Kernel: Fix function with no parameter\n1. Kernel: Fix `InsertValueContext.getValue` cast exception\n1. Kernel: Fix aggregate distinct column error\n1. Kernel: Fix NPE when rewrite parameter with schema\n1. Kernel: Fix NPE caused by `GeneratedKeysResultSet` not return `columnName` in read-write splitting\n1. Kernel: Fix show tables statement loses part of the single table\n1. Kernel: Fix ModShardingAlgorithm wrong route result when exist same suffix table\n1. Kernel: Fix sql parse error when contains key in assignment clause and optimize index parse\n1. Kernel: Fix NumberFormatException when sharding algorithm config number props\n1. Kernel: Fix wrong metadata when config single dataSource for read-write splitting\n1. Kernel: Fix statement close exception when use `BatchPreparedStatementExecutor`\n1. Kernel: Fix rewrite lowercase logic when sql contains shorthand projection\n1. Kernel: Fix NullPointerException when start up proxy with memory mode\n1. Proxy: Fix literals may be replaced by mistake in PostgreSQL/openGauss protocol\n1. Proxy: Fix ShardingSphere-Proxy PostgreSQL with multi-schema cannot be connected by PostgreSQL JDBC Driver 42.3.x\n1. Proxy: Fix timestamp nanos inaccurate in ShardingSphere-Proxy MySQL\n1. Proxy: Complete ShardingSphere-Proxy PostgreSQL codec for numeric in binary format\n1. Proxy: Potential performance issue and risk of OOM in ShardingSphere-JDBC\n1. Proxy: Fix Operation not allowed after ResultSet closed occasionally happens in ShardingSphere-Proxy MySQL\n1. Proxy: Fix NPE causes by ShardingSphere-JDBC executeBatch without addBatch\n1. Scaling: Fix failed or stopped job could not be started by DistSQL except restarting proxy\n1. DistSQL: Fix parsing exception for inline expression when `CREATE SHARDING TABLE RULE`\n1. DistSQL: Fix parsing exception when password is keyword `password` in `ADD RESOURCE` statement\n1. Mode: Fixed loss of compute nodes due to ZooKeeper session timeout\n1. Mode: Fixed the case of the table name in the governance center\n1. Mode: DistSQL enable disable instance refresh in-memory compute node status\n1. Mode: Fixed database discovery unable to create Rule through DistSQL\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/18)\n\n## 5.1.0\n\n### New feature\n\n1. Support SQL hint\n1. New DistSQL syntax: SHOW AUTHORITY RULE\n1. New DistSQL syntax: SHOW TRANSACTION RULE\n1. New DistSQL syntax: ALTER TRANSACTION RULE\n1. New DistSQL syntax: SHOW SQL_PARSER RULE\n1. New DistSQL syntax: ALTER SQL_PARSER RULE\n1. New DistSQL syntax: ALTER DEFAULT SHARDING STRATEGY\n1. New DistSQL syntax: DROP DEFAULT SHARDING STRATEGY\n1. New DistSQL syntax: CREATE DEFAULT SINGLE TABLE RULE\n1. New DistSQL syntax: SHOW SINGLE TABLES\n1. New DistSQL syntax: SHOW SINGLE TABLE RULES\n1. New DistSQL syntax: SHOW SHARDING TABLE NODES\n1. New DistSQL syntax: CREATE/ALTER/DROP SHARDING KEY GENERATOR\n1. New DistSQL syntax: SHOW SHARDING KEY GENERATORS\n1. New DistSQL syntax: REFRESH TABLE METADATA\n1. New DistSQL syntax: PARSE SQL, Output the abstract syntax tree obtained by parsing SQL\n1. New DistSQL syntax: SHOW UNUSED SHARDING ALGORITHMS\n1. New DistSQL syntax: SHOW UNUSED SHARDING KEY GENERATORS\n1. New DistSQL syntax: CREATE/DROP SHARDING SCALING RULE\n1. New DistSQL syntax: ENABLE/DISABLE SHARDING SCALING RULE\n1. New DistSQL syntax: SHOW SHARDING SCALING RULES\n1. New DistSQL syntax: SHOW INSTANCE MODE\n1. New DistSQL syntax: COUNT SCHEMA RULES\n1. Scaling: Add `rateLimiter` configuration and `QPS` `TPS` implementation\n1. Scaling: Add `DATA_MATCH` data consistency check\n1. Scaling: Add `batchSize` configuration to avoid possible OOME\n1. Scaling: Add `streamChannel` configuration and `MEMORY` implementation\n1. Scaling: Support MySQL BINARY data type\n1. Scaling: Support MySQL YEAR data type\n1. Scaling: Support PostgreSQL BIT data type\n1. Scaling: Support PostgreSQL MONEY data type\n1. Database discovery adds support for JDBC Spring Boot\n1. Database discovery adds support for JDBC Spring Namespace\n1. Database discovery adds support for openGauss\n1. Shadow DB adds support for logical data source transfer\n1. Add data type validator for column matching shadow algorithm\n1. Add support for xa start/end/prepare/commit/recover in encrypt case with only one data source\n\n### API Change\n\n1. Redesign the database discovery related DistSQL syntax\n1. In DistSQL, the keyword GENERATED_KEY is adjusted to KEY_GENERATE_STRATEGY\n1. Native authority provider is marked as deprecated and will be removed in a future version\n1. Scaling: Move scaling configuration from server.yaml to config-sharding.yaml\n1. Scaling: Rename clusterAutoSwitchAlgorithm SPI to completionDetector and refactor method parameter\n1. Scaling: Data consistency check API method rename and return type change\n1. Database discovery module API refactoring\n1. Readwrite-splitting supports static and dynamic configuration\n1. Shadow DB remove the enable configuration\n1. Shadow algorithm type modified\n\n### Enhancement\n\n1. Improve load multi single table performance\n1. Remove automatically added order by primary key clause\n1. Optimize binding table route logic without sharding column in join condition\n1. Support update sharding key when the sharding routing result keep the same\n1. Optimize rewrite engine performance\n1. Support select union/union all ... statements by federation engine\n1. Support insert on duplicate key update sharding column when route context keep same\n1. Use union all to merge sql route units for simple select to improve performance\n1. Supports autocommit in ShardingSphere-Proxy\n1. ShardingSphere openGauss Proxy supports sha256 authentication method\n1. Remove property java.net.preferIPv4Stack=true from Proxy startup script\n1. Remove the verification of null rules for JDBC\n1. Optimize performance of executing openGauss batch bind\n1. Disable Netty resource leak detector by default\n1. Supports describe prepared statement in PostgreSQL / openGauss Proxy\n1. Optimize performance of executing PostgreSQL batched inserts\n1. Add instance_id to the result of SHOW INSTANCE LIST\n1. Support to use instance_id to perform operations when enable/disable a proxy instance\n1. Support auto creative algorithm when `CREATE SHARDING TABLE RULE`, reducing the steps of creating rule\n1. Support specifying an existing KeyGenerator when CREATE SHARDING TABLE RULE\n1. DROP DATABASE supports IF EXISTS option\n1. DATANODES in SHARDING TABLE RULE supports enumerated inline expressions\n1. CREATE/ALTER SHARDING TABLE RULE supports complex sharding algorithm\n1. SHOW SHARDING TABLE NODES supports non-inline scenarios (range, time, etc.)\n1. When there is only one read data source in the readwrite-splitting rule, it is not allowed to be disabled\n1. Scaling: Add basic support of chunked streaming data consistency check\n1. Shadow algorithm decision logic optimization to improve performance\n\n### Refactor\n\n1. Refactor federation engine scan table logic\n1. Avoid duplicated TCL SQL parsing when executing prepared statement in Proxy\n1. Scaling: Add pipeline modules to redesign scaling\n1. Scaling: Refactor several job configuration structure\n1. Scaling: Precalculate tasks splitting and persist in job configuration\n1. Scaling: Add basic support of pipeline-core code reuse for encryption job\n1. Scaling: Add basic support of scaling job and encryption job combined running\n1. Scaling: Add `input` and `output` configuration, including `workerThread` and `rateLimiter`\n1. Scaling: Move `blockQueueSize` into `streamChannel`\n1. Scaling: Change jobId type from integer to text\n1. Optimize JDBC to load only the specified schema\n1. Optimize meta data structure of the registry center\n1. Rename Note shadow algorithm to HINT shadow algorithm\n\n### Bug Fix\n\n1. Support parsing function\n1. Fix alter table drop constrain\n1. Fix optimize table route\n1. Support Route resource group\n1. Support parsing binlog\n1. Support postgreSql/openGauss '&' and '|' operator\n1. Support parsing openGauss insert on duplicate key\n1. Support parse postgreSql/openGauss union\n1. Support query which table has column contains keyword\n1. Fix missing parameter in function\n1. Fix sub query table with no alias\n1. Fix utc timestamp function\n1. Fix alter encrypt column\n1. Support alter column with position encrypt column\n1. Fix delete with schema for postgresql\n1. Fix wrong route result caused by oracle parser ambiguity\n1. Fix projection count error when use sharding and encrypt\n1. Fix npe when using shadow and readwrite_splitting\n1. Fix wrong metadata when actual table is case insensitive\n1. Fix encrypt rewrite exception when execute multiple table join query\n1. Fix parsing chinese\n1. Fix encrypt exists sub query\n1. Fix full route caused by the MySQL BINARY keyword in the sharding condition\n1. Fix getResultSet method empty result exception when using JDBCMemoryQueryResult processing statement\n1. Fix incorrect shard table validation logic when creating store function/procedure\n1. Fix null charset exception occurs when connecting Proxy with some PostgreSQL client\n1. Fix executing commit in prepared statement cause transaction status incorrect in MySQL Proxy\n1. Fix client connected to Proxy may stuck if error occurred in PostgreSQL with non English locale\n1. Fix file not found when path of configurations contains blank character\n1. Fix transaction status may be incorrect cause by early flush\n1. Fix the unsigned datatype problem when query with PrepareStatement\n1. Fix protocol violation in implementations of prepared statement in MySQL Proxy\n1. Fix caching too many connections in openGauss batch bind\n1. Fix the problem of missing data in SHOW READWRITE_SPLITTING RULES when db-discovery and readwrite-splitting are used together\n1. Fix the problem of missing data in SHOW READWRITE_SPLITTING READ RESOURCES when db-discovery and readwrite-splitting are used together\n1. Fix the NPE when the CREATE SHARDING TABLE RULE statement does not specify the sub-database and sub-table strategy\n1. Fix NPE when PREVIEW SQL by schema.table\n1. Fix DISABLE statement could disable readwrite-splitting write data source in some cases\n1. Fix DIABLE INSTANCE could disable the current instance in some cases\n1. Fix the issue that user may query the unauthorized logic schema when the provider is SCHEMA_PRIVILEGES_PERMITTED\n1. Fix NPE when authority provider is not configured\n1. Scaling: Fix DB connection leak on XA initialization which triggered by data consistency check\n1. Scaling: Fix PostgreSQL replication stream exception on multiple data sources\n1. Scaling: Fix migrating updated record exception on PostgreSQL incremental phase\n1. Scaling: Fix MySQL 5.5 check BINLOG_ROW_IMAGE option failure\n1. Scaling: Fix PostgreSQL xml data type consistency check\n1. Fix database discovery failed to modify cron configuration\n1. Fix single read data source use weight loadbalance algorithm error\n1. Fix create redundant data source without memory mode\n1. Fix column value matching shadow algorithm data type conversion exception\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/17)\n\n## 5.0.0\n\n### New feature\n\n1. Support parsing SQL comment\n1. New DistSQL syntax: shadow rule management\n1. New DistSQL syntax: scaling job management\n1. New DistSQL syntax: disable proxy instance\n1. New DistSQL syntax: disable readwrite-splitting read data source\n1. New DistSQL syntax: `DROP SHARDING ALGORITHM`\n1. New DistSQL syntax: `ALTER RESOURCE`\n1. New DistSQL syntax: `CREATE SHARDING ALGORITHM`\n1. New DistSQL syntax: `CREATE DEFAULT SHARDING [TABLE | DATABASE] STRATEGY`\n1. New DistSQL syntax: `SHOW ALL VARIABLE`\n1. New DistSQL syntax：`SHOW VARIABLE variableName;`\n1. Support `3` modes, including Memory, Standalone and Cluster mode\n1. Proxy supports for openGauss\n1. Scaling: Add basic support for openGauss\n1. Scaling: Add incremental task completion detect algorithm SPI interface\n1. Scaling: Add data consistency check algorithm SPI interface\n1. Scaling: Basic support of create table on target automatically for MySQL and openGauss\n1. Scaling: Support auto switch cluster configuration when job finished\n1. Scaling: Add more DistSQL support such as data consistency check, etc\n\n### API Change\n\n1. Add schema name configuration for ShardingSphere-JDBC\n1. Add default sharding column configuration\n1. Change the default authority provider from `NATIVE` to `ALL_PRIVILEGES_PERMITTED`\n1. SCTL syntax adjustment, merged with DistSQL RAL syntax\n1. `SHOW RESOURCES` DistSQL is adjusted to `SHOW SCHEMA RESOURCES`\n1. Remove `shadow` logical field, support shadow algorithm\n\n### Enhancement\n\n1. Support parsing MySQL union/union all statement\n1. Support PostgreSQL `ABORT` statement\n1. Refactor and improve metadata loading process\n1. Support PostgreSQL `CREATE INDEX` statement to generate index automatically when no index is specified\n1. Support SQL statement execution with logical schema\n1. Support binding tables configuration with different sharding columns\n1. Optimize kernel performance\n1. Proxy supports queries to part of information_schema tables to optimize client connection experience\n1. DistSQL supports using quotation marks to use keywords as parameter names\n1. The password in the `ADD RESOURCE` statement supports special characters\n1. `ADD RESOURCE` supports custom JDBC parameters and connection pool properties\n1. `DROP RESOURCE` supports optional parameter `ignore single tables`, used to ignore single table rule restrictions\n1. Support the use of DistSQL to create sharding table rule based on readwrite-splitting rules\n1. `SHOW DATABASES` statement supports like syntax\n1. `CREATE SHARDING TABLE RULE` supports the use of inline expressions to specify resources\n1. `CREATE SHARDING TABLE RULE` supports configuration using `dataNodes`\n1. `CREATE SHARDING TABLE RULE` supports reuse of existing algorithms\n1. `SET VARIABLE`, support to modify proxy configuration\n1. PostgreSQL's protocol enhancements (Such as supports Portal, unspecified type)\n1. Using Netty executor to optimize Proxy performance in specified scenarios\n1. Make memory strictly fetch size configurable in Proxy\n1. Scaling: Improve support for PostgreSQL\n1. Scaling: Support concurrent data consistency check of source and target side\n\n### Refactor\n\n1. Refactor the SingleTable feature to support Encrypt multiple data sources\n1. Adjust the persistent data structure of the registry center state node\n1. Remove the SQL rewrite of DML for Shadow\n1. Support the SQL routing of DDL for Shadow\n1. Scaling: Refactor default implementation of incremental task completion detect algorithm\n1. Scaling: Refactor default implementation of data consistency check algorithm\n1. Scaling: Remove HTTP API and binary distribution\n\n### Bug Fix\n\n1. Fix sharding interval algorithm\n1. Fix `SHOW INDEX FROM TABLE FROM TABLE` statement rewrite exception\n1. Fix Encrypt multi tables join query rewrite exception\n1. Fix subquery index out of range exception\n1. Fix wrong result of Oracle paging query\n1. Fix the rewrite exception when KeyGenerateStrategy is not configured in the Sharding feature\n1. Fix federation executor engine exception caused by Oracle dialect case\n1. Fix Sharding and Encrypt integration usage rewrite exception\n1. Fix Oracle metadata loading exception\n1. Fix the issue that `SHOW RESOURCES` statement cannot display custom attributes\n1. Fix the issue that SQL execution exception is not thrown\n1. Fix Etcd can not send node added event\n1. Fix PostgreSQL rows contains null value may be missing in query result\n1. Fix PostgreSQL metadata columns are out-of-order\n1. Fix client character set may be incorrect in Proxy\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/16)\n\n## 5.0.0-beta\n\n### New feature\n\n1. New DistSQL to load and show all the ShardingSphere configuration rules\n1. Support join SQL from different database instances\n1. Support multiple backend database types for new feature of database gateway\n1. Support creating and updating the authentication online\n1. Add new automated agent module\n\n### API Change\n\n1. `QueryReplica` configuration item is replaced by `read-write-splitting`\n1. `Authentication` configuration item of ShardingProxy is replaced by `AUTHORITY`\n1. Optimize the datasource configuration for ShardingJDBC with `dataSourceClassName`\n1. New API for automated sharding table configuration to provide standard and automated sharding tables\n1. Remove configuration item `acceptor-size` from ShardingProxy\n1. Create a built-in sharding algorithm SPI which allows users to directly configure the class name as in 4.x\n\n### Enhancement\n\n1. Improve metadata loading process distinctly\n1. Greatly enhance the SQL parsing for Oracle, SQLServer and PostgreSQL\n1. Support loading privileges from MySQL/PostgreSQL/SQLServer/Oracle\n1. Support DDL statement for encryption feature\n1. Support rewrite owner table name of projection if using sharding and encrypt together\n1. When using `SELECT *` from encrypt SQL, add quote char for rewritten column to avoid conflict with keyword\n1. Support PostgreSQL JSON/JSONB/pattern matching operator parse\n1. Support MySQL/PostgreSQL `CREATE/ALTER/DROP TABLESPACE` statement\n1. Support PostgreSQL `PREPARE, EXECUTE, DEALLOCATE` statement\n1. Support PostgreSQL `EXPLAIN` statement\n1. Support PostgreSQL `START/END TRANSACTION` statement\n1. Support PostgreSQL `ALTER/DROP INDEX` statement\n1. Support CREATE `TABLESPACE` of PostgreSQL\n1. Support MySQL `CREATE LOADABLE FUNCTION` statement\n1. Support MySQL/PostgreSQL `ALTER TABLE RENAME` statement\n1. Support PostgreSQL Close command\n\n### Refactor\n\n1. New schema structure in registry center\n1. Remove Nacos and Apollo config center support\n1. ShardingScaling leverages elasticJob as its job distribution\n1. Refactor the metadata content and its update process\n\n### Bug Fix\n\n1. Bug fix for cannot use `SELECT * wildcard` when readwrite-splitting only\n1. Fix instance error when the custom sharding algorithm does not match the configuration type.\n1. Fix NoSuchTableException when execute drop table if exists statement\n1. Fix wrong table rewrite in `UPDATE ... SET ...` statement\n1. Fix wrong table rewrite in CREATE/ALTER TABLE statement foreign key reference table\n1. Fix projection owner check exception when exist subquery temporary table\n1. Fix Oracle/SQL92 `SELECT ... WHERE ... LIKE` statement class cast exception\n1. Fix MySQL `SELECT EXISTS ... FROM ...` statement parse error\n1. Fix wrong result of SHOW INDEX statement\n1. Fix SELECT `... GROUP BY ...` statement rewrite and merge result error\n1. Fix CREATE TABLE statement rewrite error for encrypt\n1. Fix exception occur in PostgreSQL Proxy when reading text format parameter values\n1. Enhance the support of array object for PostgreSQL Proxy\n1. Fix the bug of Datetype casting for ShardingProxy\n1. PostgreSQL Proxy supports using numeric type\n1. Fix PostgreSQL Proxy transaction command complete packet's tag incorrect\n1. Fix PostgreSQL Proxy may return packet which is not expected by client\n\n### Change Log\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/14)\n\n## 5.0.0-alpha\n\n### Build & Dependencies\n\n1. Upgrade the minimum supported version of JDK to Java8\n1. Update Zookeeper to version 3.6.x and curator to version 5.1.0\n1. Update Google Guava to version 29.0-jre\n\n### New Feature\n\n1. The pluggable architecture is available and support function extension through the SPI\n1. Independent SQL parsing engine is available to get SQL parsed AST for the different database dialects\n1. New RDL(Rule Definition Language) feature for ShardingSphere Proxy supports creating sharding rules and sharding tables\n1. ShardingSphere-Scaling supports resuming data migration from break-point\n1. ShardingSphere-Scaling supports using ShardingSphere JDBC to migrate data to new cluster\n1. ShardingSphere shadow database is available\n\n### API Changes\n\n1. New sharding/encryption/shadow/queryReplica API\n1. New sharding algorithm and strategy API\n1. New API for ShardingSphere Scaling to create task\n1. Remove DefaultDataSourceName setting item\n1. The separator of the parameter configuration item is changed from the dot ‘.’ to minus sign ‘-’\n1. Change parameter allow.range.query.with.inline.sharding from global parameter to sharding algorithm parameter\n\n### Refactor\n\n1. Refactor the architecture of SQL parsing module base on the database dialects\n1. Use SPI mechanism to reconstruct online metadata change processing\n1. Rename Orchestration module to Governance module\n1. Rename MasterSlave module to QueryReplica module\n1. Refactor the metadata structure in the governance registration center\n1. Refactor GovernmentShardingSphereDataSource\n1. ShardingSphere UI merges configuration center and registration center display layout\n\n### Enhancement\n\n1. The enhancement for MySQL and PostgreSQL SQL syntax definition and parsing process\n1. The enhancement for sub-queries in different database dialects\n1. Support MySQL view operations for non-sharding tables\n1. Support MySQL stored function and procedure operations for non-sharding tables\n1. Support SQLServer Top syntax\n1. Optimize the metadata loading to improve the startup speed\n1. Optimize batch insert performance\n1. Supports the use of Oracle RAC JDBC URL\n1. XA transaction manager adds support for Oracle database\n1. ShardingSphere Proxy supports the use of p6sy driver\n1. Add help information to the ShardingSphere Proxy startup script\n\n### Bug Fixes\n\n1. Fix alias rewriting error when processing OrderBy condition\n1. Fix SQL rewriting error when MYSQL Insert statement contains expression\n1. Fix parameter calculation error in update on duplicate SQL\n1. Fix generatedKeys gets wrong when batch inserting\n1. Fix the abnormal issue of multi-table verification in DML statement update operation\n1. Fix the NPE problem caused by executing SQL when the table does not exist\n1. Fix the exception when using the Show table command for an unconfigured table\n1. Fix metadata loading error when Oracle database has multiple qualified users\n1. Fix the issue that replica node cannot be enabled online\n1. Fix the problem that ShardingSphere-JDBC does not support PostgreSQL array type\n1. Fix the problem that ShardingSphere-Proxy does not respond when querying long blob data\n\n###  Change Logs\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/10)\n\n## 4.1.1\n\n### Enhancement\n\n1. Add Sharding-Scaling & Sharding-UI dockerfile\n1. update MySQL & PostgreSQL version for proxy\n\n### Bug Fixes\n\n1. Fix parser syntax rule of SUBSTRING and CONVERT\n1. Fix parser ColumnSegment ClassCastException\n1. Fix TableMetaData load error when use Sharding-JDBC with oracle\n1. Fix getSchema NPE when use Sharding-JDBC with oracle\n1. Fix Sharding-JDBC parse sql NPE in PostgreSQL\n1. Fix Sharding-Proxy receive error response for PostgreSQL JDBC client\n1. Fix Sharding-Proxy response number of update is 0 for PostgreSQL JDBC client\n1. Fix Sharding-Proxy receive null for PostgreSQL column meta data\n1. Fix Sharding-Scaling NPE in MySQL incremental task\n\n###  Change Logs\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/13)\n\n## 4.1.0\n\n### New Features\n\n1. Support scaling for ShardingSphere (alpha version)\n1. Move etcd registry center from experiment repo to apache repo\n1. Upgrade to Java 8\n\n### Enhancement\n\n1. Optimization for Sharding Parser with ANTLR Visitor improving the parsing performance of long SQL by 100%~1000%\n1. Use multiple threads to load metadata for different data sources\n1. Support `allow.range.query.with.inline.sharding` option\n1. The docker of ShardingSphere-Proxy supports loading external lib packages\n1. Support integration with Spring using @ShardingSphereTransactionType\n1. Enhance ShardingDataSource to compatible with Seata in micro-service distribution transaction\n\n### Refactor\n\n1. Remove leaf key generator\n\n### Bug Fixes\n\n1. Fix an exception caused by using a CHAR/VARCHAR type column as an order by item\n1. Refine `DataTypeName` syntax rules of all database dialects\n1. Fix an exception caused by executing `BEGIN` using prepared statement of MySQL C API\n1. Fix the problem that `ALTER TABLE` fails to execute when the field type of the table contains Integer/Double/BigDecimal\n1. Fix the problem of the stop index dislocation of segment with alias\n1. Fix the problem that overwriting SQL `SELECT * FROM tbl WHERE encrypt_col = ? AND (sharding_key = ? OR sharding_key = ?)` when using sharding + encrypt would throw StringIndexOutOfBoundsException\n1. Fix the problem of incorrect decoding after AES encoding when using ShardingSphere-Proxy in Spring Boot\n1. Fix a long-time problem of adding schema dynamically in ShardingSphere-UI\n\n###  Change Logs\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/12)\n\n## 4.0.1\n\n### Bug Fixes\n\n1. Using guava cache to fix parsing deadlock.\n1. Oracle insert SQL could not work in encrypt mode.\n1. Proxy for PostgreSQL decode parameters error in all types except String.\n1. COM_STM_EXECUTE of proxy for MySQL could not support sysbench.\n1. None sharding strategy could not config in spring-boot.\n1. WasNull field was wrong in GroupByStreamMergeResult.\n1. Metadata.getColumns could not work in JDBC.\n1. IN operator contains space and `\\n` `\\t` `\\r` could not supported by parser.\n\n### Enhancement\n\n1. Optimize antlr performance using two-stage parsing strategy.\n1. Add class filter constructor to restrict the illegal class from YAML.\n\n###  Change Logs\n\n1. [MILESTONE](https://github.com/apache/shardingsphere/milestone/11)\n\n## 4.0.0\n\n### API Changes\n\n1. Change package and maven groupId form `io.shardingsphere` to `org.apache.shardingsphere`.\n1. Adjust ShardingSphere-JDBC configuration API.\n1. Adjust persist structure for registry center.\n\n### New Features\n\n1. SQL92 Syntax available.\n1. ShardingSphere-Proxy for PostgreSQL protocol available.\n1. SQL 100% compatible if route to single data node.\n1. Less-than(<), greater-than(>) and Less-than-equal(<=), greater-than-equal(>=) for sharding key operator available.\n1. DISTINCT SQL syntax available.\n1. Broadcast table available.\n1. LEAF key generator available.\n1. XA Transaction available, Atomikos, Narayana and Bitronix integrated.\n1. BASE Transaction available, Seata integrated.\n1. Data encrypt available.\n1. Skywalking plugin available.\n1. ShardingSphere-UI available, an orchestration management platform.\n\n### Enhancement\n\n1. MariaDB supported.\n1. Improve the compatibility of SQL parsing.\n1. `SELECT FOR UPDATE` route to primary data source only.\n1. Hint in ShardingSphere-Proxy available.\n1. Make configuration of orchestration consistent between ShardingSphere-JDBC and ShardingSphere-Proxy.\n1. Renew modified data sources only, not renew all the data sources.\n1. Vibrate configurable for Snowflake key generator.\n\n### Bug Fixes\n\n1. Improve the compatibility of JDBC Driver URL.\n1. Delete statement with alias available.\n1. Check and disable updating sharding column.\n1. Fix wrong type of TINYINT and SMALLINT as INTEGER.\n\n###  Change Logs\n\n1. [MILESTONE #3](https://github.com/apache/shardingsphere/milestone/3)\n1. [MILESTONE #4](https://github.com/apache/shardingsphere/milestone/4)\n1. [MILESTONE #5](https://github.com/apache/shardingsphere/milestone/5)\n1. [MILESTONE #6](https://github.com/apache/shardingsphere/milestone/6)\n1. [MILESTONE #7](https://github.com/apache/incubator-shardingsphere/milestone/7)\n1. [MILESTONE #8](https://github.com/apache/incubator-shardingsphere/milestone/8)\n1. [MILESTONE #9](https://github.com/apache/incubator-shardingsphere/milestone/9)\n\n## 4.0.0.RC3\n\n### New Features\n\n1. ShardingSphere-UI, an orchestration management platform for ShardingSphere comes online.\n1. Not only SQLs from MySQL, PostgreSQL, SQLServer, Oracle, but any SQL92 Syntax can be parsed correctly and used in ShardingSphere.\n\n### Enhancement\n\n1. Support using less-than character(<) and greater-than character(>) for sharding data.\n1. When primary and replica dataSources exist, support executing `SELECT FOR UPDATE` on primary data source.\n1. Support hint in ShardingSphere-Proxy.\n1. Finish parsing DAL syntax for MySQL.\n1. Make configuration of orchestration compatible between ShardingSphere-JDBC and ShardingSphere-Proxy.\n\n### Bug Fixes\n\n1. Through Bug fix, the feature of encryption becomes much stable and applicable.\n1. Support delete statement with alias.\n1. Check and disable updating sharding column.\n1. Fix wrong type of TINYINT and SMALLINT as INTEGER.\n\n### Refactor\n\n1. Rename optimized module to preprocessor module.\n1. Decouple rewrite core module and sharding/encrypt features.\n\n### Change Logs\n\n1. [MILESTONE](https://github.com/apache/incubator-shardingsphere/milestone/8)\n\n## 4.0.0.RC2\n\n### API Changes\n\n1. Optimize and delete API and configuration item of sharding logic index.\n1. Update the API of encryption to support the encrypted and plain data coexistence.\n\n### New Features\n\n1. Integration of Seata for distributed transaction.\n1. User can do data encryption by using ShardingProxy.\n1. User can use Leaf-segment generator to get distributed ID.\n1. Support Skywalking plugin for application performance management.\n\n### Enhancement\n\n1. Renew modified dataSources, not all the datasources to improve performance for configuration orchestration.\n1. Improve the compatibility of SQL parsing.\n\n### Refactor\n\n1. Remove DatabaseType enum, use dynamic SPI to load data source type.\n1. The parse engine upgrade from the 2nd generation to 3rd.\n1. The Refactoring of SQL rewriting module.\n\n### Change Logs\n\n1. [MILESTONE](https://github.com/apache/incubator-shardingsphere/milestone/7)\n\n\n## 4.0.0.RC1\n\nMerge all change logs of version 3.1.0.M1, 3.1.0, 3.1.0.1 and 4.0.0.M1. First apache release.\n\n### API Changes\n\n1. Adjust persist structure for orchestration's registry center.\n1. Adjust ShardingSphere-JDBC configuration API.\n1. Change package and maven groupId form `io.shardingsphere` to `org.apache.shardingsphere`.\n1. Adjust spring-boot-starter.\n\n### New Features\n\n1. XA Transaction available.\n1. Data encrypt available.\n1. Use PostgreSQL protocol access ShardingSphere-Proxy available.\n1. DISTINCT SQL syntax available.\n1. Broadcast table.\n1. All SQL 100% compatible if route to single data node (MySQL Only).\n\n###  Change Logs\n\n1. [MILESTONE #3](https://github.com/apache/shardingsphere/milestone/3)\n1. [MILESTONE #4](https://github.com/apache/shardingsphere/milestone/4)\n1. [MILESTONE #5](https://github.com/apache/shardingsphere/milestone/5)\n1. [MILESTONE #6](https://github.com/apache/shardingsphere/milestone/6)\n\n\n## 3.0.0\n\n### Milestones\n\n1. ShardingSphere-Proxy launch. Support the use of ShardingSphere in the form of database to support for MySQL CLI and GUI client\n\n### New Features\n\n#### Core\n\n1. [ISSUE #290](https://github.com/apache/shardingsphere/issues/290) Support batch INSERT\n1. [ISSUE #501](https://github.com/apache/shardingsphere/issues/501) Support OR\n1. [ISSUE #980](https://github.com/apache/shardingsphere/issues/980) Support DCL\n1. [ISSUE #1111](https://github.com/apache/shardingsphere/issues/1111) Support MySQL DAL\n\n#### ShardingSphere-Proxy\n\n1. [ISSUE #902](https://github.com/apache/shardingsphere/issues/902) Support XA transaction\n1. [ISSUE #916](https://github.com/apache/shardingsphere/issues/916) Support authorization\n1. [ISSUE #936](https://github.com/apache/shardingsphere/issues/936) Support registry center\n1. [ISSUE #1046](https://github.com/apache/shardingsphere/issues/1046) Support multiple logic databases\n\n### Enhancements\n\n#### Core\n\n1. [ISSUE #373](https://github.com/apache/shardingsphere/issues/373) Support `order by ?`\n1. [ISSUE #610](https://github.com/apache/shardingsphere/issues/610) Route unicast for DQL without table\n1. [ISSUE #701](https://github.com/apache/shardingsphere/issues/701) Caching parsed results to improve performance\n1. [ISSUE #773](https://github.com/apache/shardingsphere/issues/773) Support sharding and autoincrement key of INSERT without column names\n1. [ISSUE #935](https://github.com/apache/shardingsphere/issues/935) Use `YAML` instead of `JSON` to store configurations in registry center\n1. [ISSUE #1004](https://github.com/apache/shardingsphere/issues/1004) Properties can configure for sharding and replica query independent\n1. [ISSUE #1205](https://github.com/apache/shardingsphere/issues/1205) Execute engine enhancement\n\n#### ShardingSphere-JDBC\n\n1. [ISSUE #652](https://github.com/apache/shardingsphere/issues/652) Support `Spring Boot Starter` 2.X\n1. [ISSUE #702](https://github.com/apache/shardingsphere/issues/702) Support `$->{..}` for inline expression\n1. [ISSUE #719](https://github.com/apache/shardingsphere/issues/719) Support inject key generator objects by spring namespace\n1. [ISSUE #720](https://github.com/apache/shardingsphere/issues/720) Support inject sharding algorithm objects by spring namespace\n\n#### Sharding-Opentracing\n\n1. [ISSUE #1172](https://github.com/apache/shardingsphere/issues/1172) Opentracing enhancement\n\n### API changes\n\n1. [ISSUE #1153](https://github.com/apache/shardingsphere/issues/1153) Adjust the maven artifactId for orchestration module\n1. [ISSUE #1203](https://github.com/apache/shardingsphere/issues/1203) Adjust Spring namespace xsd for sharding and replica query\n1. [ISSUE #1289](https://github.com/apache/shardingsphere/issues/1289) Adjust hint API\n1. [ISSUE #1302](https://github.com/apache/shardingsphere/issues/1302) Refine package structure\n1. [ISSUE #1305](https://github.com/apache/shardingsphere/issues/1305) Deprecated and remove sharding-jdbc-transaction-parent module\n1. [ISSUE #1382](https://github.com/apache/shardingsphere/issues/1328) Remove type configuration in orchestration module\n\n### Bug Fixes\n\n#### Core\n\n1. [ISSUE #569](https://github.com/apache/shardingsphere/issues/569) Failed to parse SQL for Oracle when ROWNUM is not at end\n1. [ISSUE #628](https://github.com/apache/shardingsphere/issues/628) Support data type jsonb for PostgreSQL\n1. [ISSUE #646](https://github.com/apache/shardingsphere/issues/646) When aliases in `SELECT ITEMS` correspond to the real column names of `GROUP BY` or `ORDER BY`, there is no need to generate derived columns\n1. [ISSUE #806](https://github.com/apache/shardingsphere/issues/806) `NOT IN` parse exception\n1. [ISSUE #827](https://github.com/apache/shardingsphere/issues/827) Endless loop for bad SQL like `SELECT * FROM table WHERE id IN ()`\n1. [ISSUE #919](https://github.com/apache/shardingsphere/issues/919) Inline expression with groovy may cause memory leak\n1. [ISSUE #993](https://github.com/apache/shardingsphere/issues/993) Fail to parsing PostgreSQL due to the quotation\n1. [ISSUE #1015](https://github.com/apache/shardingsphere/issues/1015) Support SQL like `SELECT id, COUNT(*) FROM table GROUP BY 1,2`\n1. [ISSUE #1120](https://github.com/apache/shardingsphere/issues/1120) Derived columns of `GROUP BY / ORDER BY` appear in query result\n1. [ISSUE #1186](https://github.com/apache/shardingsphere/issues/1186) Dead lock may occur on MEMORY_STRICTLY mode when get connection on concurrency environment\n1. [ISSUE #1265](https://github.com/apache/shardingsphere/issues/1265) RoundRobinReplicaLoadBalanceAlgorithm throw an ArrayIndexOutOfBoundsException when AtomicInteger overflow\n\n#### ShardingSphere-JDBC\n\n1. [ISSUE #372](https://github.com/apache/shardingsphere/issues/372) Reuse PreparedStatement cause cache of route result do not clean\n1. [ISSUE #629](https://github.com/apache/shardingsphere/issues/629) Support transaction isolation on JDBC\n1. [ISSUE #735](https://github.com/apache/shardingsphere/issues/735) Unexpected replica datasource routing result when using `Round-robin` load-balance algorithm in Mybatis\n1. [ISSUE #1011](https://github.com/apache/shardingsphere/issues/1011) Can't resolve placeholder in `Spring Boot YAML` configuration\n\n## 2.0.3\n\n### New Features\n\n#### Core\n\n1. [ISSUE #600](https://github.com/apache/shardingsphere/issues/600) Support TCL\n\n### Bug Fixes\n\n#### Core\n\n1. [ISSUE #540](https://github.com/apache/shardingsphere/issues/540) Support SQL that alias is the keyword\n1. [ISSUE #577](https://github.com/apache/shardingsphere/issues/577) Support new line for `YAML` configuration\n\n#### ShardingSphere-JDBC\n\n1. [ISSUE #522](https://github.com/apache/shardingsphere/issues/522) Replica database does not need to execute the DDL for replica query\n\n\n## 2.0.2\n\n### Enhancements\n\n#### Core\n\n1. [ISSUE #475](https://github.com/apache/shardingsphere/issues/475) Support `CREATE INDEX`\n1. [ISSUE #525](https://github.com/apache/shardingsphere/issues/525) Support `DROP INDEX`\n\n### Bug Fixes\n\n#### Core\n\n1. [ISSUE #521](https://github.com/apache/shardingsphere/issues/521) `ShardingProperties` is invalid in `YAML` configuration\n1. [ISSUE #529](https://github.com/apache/shardingsphere/issues/529) Table name capitalization cannot be queried\n1. [ISSUE #541](https://github.com/apache/shardingsphere/issues/541) `IS NOT NULL` parse error\n1. [ISSUE #557](https://github.com/apache/shardingsphere/issues/557) When `GROUP BY` and `ORDER BY` aliases are inconsistent, stream merging should be used\n1. [ISSUE #559](https://github.com/apache/shardingsphere/issues/559) Support parsing numbers beginning with minus and decimal (e.g. `-.12`)\n1. [ISSUE #567](https://github.com/apache/shardingsphere/issues/567) Add escape char for derived columns or alias when using MySQL\n\n#### ShardingSphere-JDBC\n\n1. [ISSUE #520](https://github.com/apache/shardingsphere/issues/520) Exception is no longer `DuplicateKeyException` when the unique key conflict\n\n\n## 2.0.1\n\n### Enhancements\n\n#### Core\n\n1. [ISSUE #490](https://github.com/apache/shardingsphere/issues/490) Using `rownum` greater than or equal to or less than or equal to the result of paging is incorrect in Oracle\n1. [ISSUE #496](https://github.com/apache/shardingsphere/issues/496) Logical table names in sharding configuration can be case sensitive\n1. [ISSUE #497](https://github.com/apache/shardingsphere/issues/497) Close registry center gracefully\n\n### Bug Fixes\n\n#### ShardingSphere-JDBC\n\n1. [ISSUE #489](https://github.com/apache/shardingsphere/issues/489) Uses `RuntimeBeanReference` to prevent the creation of `InnerBean` on spring namespace\n1. [ISSUE #491](https://github.com/apache/shardingsphere/issues/491) Can't close connection by `ResultSet.getStatement().getConnection().close()`\n\n\n## 2.0.0\n\n### Milestones\n\n1. API adjust. Brand new groupId and artifactId for `Maven`, package name and spring namespace name. Simplify and enhance API configuration, inline expression fully configuration support\n1. Support `spring-boot-starter` of `ShardingSphere-JDBC`\n1. Dynamic configuration. `ZooKeeper` and `etcd` can be used as registry to dynamically modify data sources and sharding configurations\n1. Database orchestration. Fusing database access procedures to access databases and disable access to replica databases\n1. ConfigMap support. Predefined metadata can be obtained in the sharding and replica query strategy\n1. Tracking system support. You can view the invocation chain of `ShardingSphere-JDBC` through `sky-walking` and other `Opentracing` based APM systems\n\n### Enhancements\n\n#### Core\n\n1. [ISSUE #386](https://github.com/apache/shardingsphere/issues/386) Support SQL that does not contain table names, such as `SELECT 1`\n\n#### ShardingSphere-JDBC\n\n1. [ISSUE #407](https://github.com/apache/shardingsphere/issues/407) Support Hyphen properties for `sharding-jdbc-spring-boot-starter`\n1. [ISSUE #424](https://github.com/apache/shardingsphere/issues/424) Providing SQL overall execution events\n\n### Bug Fixes\n\n#### Core\n\n1. [ISSUE #387](https://github.com/apache/shardingsphere/issues/387) Prevent errors from keywords process when '`' exists in function + column name\n1. [ISSUE #419](https://github.com/apache/shardingsphere/issues/419) When SQL is rewritten, it does not determine whether alias is a keyword without the escape character, which results in SQL exception\n1. [ISSUE #464](https://github.com/apache/shardingsphere/issues/464) SQL if the varchar type is not closed due to the absence of matching single quotes, and the next varchar in SQL is the wrong SQL of Chinese characters, it will lead to higher use of CPU\n\n#### ShardingSphere-JDBC\n\n1. [ISSUE #394](https://github.com/apache/shardingsphere/issues/394) Can't only close statement\n1. [ISSUE #398](https://github.com/apache/shardingsphere/issues/398) Use Hint routing to shield case sensitivity\n1. [ISSUE #404](https://github.com/apache/shardingsphere/issues/404) Sharding-jdbc's spring-boot-starter does not support HikariDataSource\n1. [ISSUE #436](https://github.com/apache/shardingsphere/issues/436) Replica query, when the RoundRobin algorithm is configured from the database and MyBatis is used, it can only be routed to the same replica database\n1. [ISSUE #452](https://github.com/apache/shardingsphere/issues/452) Sharding of DDL statements to more than one table causes a connection leak\n1. [ISSUE #472](https://github.com/apache/shardingsphere/issues/472) Before Connection executes createStatement, it calls getMetaData first and then setAutoCommit can not take effective connection to the database that was created later\n\n## 1.5.4.1\n\n### Bug Fixes\n\n1. [ISSUE #382](https://github.com/apache/shardingsphere/issues/382) The query cannot be completed without sharding rule\n\n## 1.5.4\n\n### Bug Fixes\n\n1. [ISSUE #356](https://github.com/apache/shardingsphere/issues/356) In the Where condition of SQL, the REGEXP operator is compatible with non sharding columns\n1. [ISSUE #362](https://github.com/apache/shardingsphere/issues/362) Replica query using PreparedStatement does not invoke the setParameter method to cause errors\n1. [ISSUE #370](https://github.com/apache/shardingsphere/issues/370) Error in calling getGeneratedKeys using native self increment primary key\n1. [ISSUE #375](https://github.com/apache/shardingsphere/issues/375) Data can not be obtained after paging second pages route to a single node\n1. [ISSUE #379](https://github.com/apache/shardingsphere/issues/379) When Mybatis is used to call Connection.getMetaData (), the connection is not close correct\n\n## 1.5.3\n\n### Enhancements\n\n1. [ISSUE #98](https://github.com/apache/shardingsphere/issues/98) Replica query load balancing strategy support configuration\n1. [ISSUE #196](https://github.com/apache/shardingsphere/issues/196) Replica query and sharding configuration independence\n\n### Bug Fixes\n\n1. [ISSUE #349](https://github.com/apache/shardingsphere/issues/349) Incorrect function of ResultSet.wasNull causes null numeric type in DB to zero\n1. [ISSUE #351](https://github.com/apache/shardingsphere/issues/351) Tables that are included in the default data source but not in TableRule configuration are not properly executed\n1. [ISSUE #353](https://github.com/apache/shardingsphere/issues/353) In the Where condition of SQL, it is compatible with non sharding columns !=, !> and !< operator\n1. [ISSUE #354](https://github.com/apache/shardingsphere/issues/354) In the Where condition of SQL, NOT operators are compatible with non-sharding columns\n\n## 1.5.2\n\n### Milestones\n\n1. The test engine of quality assurance, each SQL can run 60 test cases of different dimensions\n\n### Enhancements\n\n1. [ISSUE #335](https://github.com/apache/shardingsphere/issues/335) Support the GROUP BY + custom function SQL\n1. [ISSUE #341](https://github.com/apache/shardingsphere/issues/341) Support ORDER BY xxx NULLS FIRST | LAST statement of Oracle\n\n### Bug Fixes\n\n1. [ISSUE #334](https://github.com/apache/shardingsphere/issues/334) Parsing ORDER BY with functions will resolve the following ASC and DESC to the name attribute of OrderItem\n1. [ISSUE #335](https://github.com/apache/shardingsphere/issues/339) JOIN parsing is incorrect using the full name association of the table\n1. [ISSUE #346](https://github.com/apache/shardingsphere/issues/346) Parsing table name error of DDL statement DROP TABLE IF EXISTS USER\n\n## 1.5.1\n\n### New Features\n\n1. [ISSUE #314](https://github.com/apache/shardingsphere/issues/314) Support DDL type SQL\n\n### Changes\n\n1. [ISSUE #327](https://github.com/apache/shardingsphere/issues/327) Close sql.show configuration by default\n\n### Bug Fixes\n\n1. [ISSUE #308](https://github.com/apache/shardingsphere/issues/308) Invalid return of database native GeneratedKey\n1. [ISSUE #309](https://github.com/apache/shardingsphere/issues/310) ORDER BY and GROUP BY in sub-queries are not included in the analytic context\n1. [ISSUE #313](https://github.com/apache/shardingsphere/issues/313) Support <> operator\n1. [ISSUE #317](https://github.com/apache/shardingsphere/issues/317) Parameter of LIMIT can not be type of Long\n1. [ISSUE #320](https://github.com/apache/shardingsphere/issues/320) SQL rewriting error of GROUP BY + LIMIT\n1. [ISSUE #323](https://github.com/apache/shardingsphere/issues/323) Parsing ORDER BY + Aggregation Expression error\n\n## 1.5.0\n\n### Milestones\n\n1. The new SQL parsing module removes the dependence on Druid. We only need to parse the sharding context, and adopt a \"semi understanding\" concept for SQL to further improve performance and compatibility, and reduce code complexity\n1. The new SQL rewrite module adds an optimized rewrite module\n1. The new SQL merge module is rebuilt into 3 merging engines: streaming, memory and decorator\n\n### New Features\n\n1. Support Oracle, SQLServer and PostgreSQL\n1. Non functional sub-query support\n\n### Enhancements\n\n1. [ISSUE #256](https://github.com/apache/shardingsphere/issues/256) Configurable display sharding execute to SQL log\n1. [ISSUE #291](https://github.com/apache/shardingsphere/issues/291) Processing SQL use stream mode that contains only GroupBy\n\n### Changes\n\n1. Simplify the distributed self increasing sequence. Each table is supported by simplifying a multiple self increasing sequence to a single table supporting only a single distributed self increasing sequence, and no longer supporting workerID settings through environment variables\n1. Remove support for OR\n\n### Bug Fixes\n\n1. [ISSUE #239](https://github.com/apache/shardingsphere/issues/239) LIMIT routes to multiple query result sets. If there is only one result set that is not empty, the result of paging is incorrect\n1. [ISSUE #263](https://github.com/apache/shardingsphere/issues/263) Sharding and logical table configuration can be case insensitive\n1. [ISSUE #292](https://github.com/apache/shardingsphere/issues/292) When the memory mode handles GROUP BY statement, if there is paging information, it needs to be rewritten\n1. [ISSUE #295](https://github.com/apache/shardingsphere/issues/295) LIMIT 0 does not filter the result set according to paging restrictions\n\n## 1.4.2\n\n### Enhancements\n\n1. [ISSUE #219](https://github.com/apache/shardingsphere/issues/219) Thread performance optimization\n1. [ISSUE #215](https://github.com/apache/shardingsphere/issues/215) Aggregated result set of stream sort StreamingOrderByReducerResultSet performance optimization\n1. [ISSUE #161](https://github.com/apache/shardingsphere/issues/161) When the result sets are merged, heap sort can be used to improve performance\n\n### Bug Fixes\n\n1. [ISSUE #212](https://github.com/apache/shardingsphere/issues/212) More meaningful hints for missing data source rules\n1. [ISSUE #214](https://github.com/apache/shardingsphere/issues/214) table_name.column_name in (?,?) in WHERE can't parser expression\n1. [ISSUE #180](https://github.com/apache/shardingsphere/issues/180) Batch execution of Update return inaccuracy\n1. [ISSUE #225](https://github.com/apache/shardingsphere/issues/225) The last character of automatic generation of Id is not 0\n\n## 1.4.1\n\n### Enhancements\n\n1. [ISSUE #191](https://github.com/apache/shardingsphere/issues/191) Generating KeyGenerator of workerId based on IP of host\n1. [ISSUE #192](https://github.com/apache/shardingsphere/issues/192) Get workerId's KeyGenerator based on HOSTNAME's digital suffix\n1. [ISSUE #210](https://github.com/apache/shardingsphere/issues/210) Routing to single database and single table to remove supplementary SQL statement fragments\n\n### Bug Fixes\n\n1. [ISSUE #194](https://github.com/apache/shardingsphere/issues/194) Some component exceptions in the close method of Connection, Statement, ResultSet and other interfaces cause the close method of another component to be not invoked\n1. [ISSUE #199](https://github.com/apache/shardingsphere/issues/199) Sharding and reuse PreparedStatement object cause route error\n1. [ISSUE #201](https://github.com/apache/shardingsphere/issues/201) Event transmission missing before batch operation execution\n1. [ISSUE #203](https://github.com/apache/shardingsphere/issues/203) Merge events sent by the batch operation\n1. [ISSUE #209](https://github.com/apache/shardingsphere/issues/209) Parallel execution of multiple limit queries leads to IndexOutOfBoundsException\n\n## 1.4.0\n\n### Enhancements\n\nAutomatic generation key implementation, including\n\n1. [ISSUE #162](https://github.com/apache/shardingsphere/issues/162) Implementation of distributed primary key algorithm\n1. [ISSUE #163](https://github.com/apache/shardingsphere/issues/163) Acquisition of a self increasing sequence of JDBC interfaces\n1. [ISSUE #171](https://github.com/apache/shardingsphere/issues/171) Sharding-jdbc-core coordination automatic generation sequence transformation\n1. [ISSUE #172](https://github.com/apache/shardingsphere/issues/172) The configuration of YAML and Spring supports the self increasing sequence\n\n### Bug Fixes\n\n1. [ISSUE #176](https://github.com/apache/shardingsphere/issues/176) The wasNull flag of AbstractMemoryResultSet is not reset in time\n\n## 1.3.3\n\n### Enhancements\n\n1. [ISSUE #59](https://github.com/apache/shardingsphere/issues/59) PreparedStatement can call the correct underlying set method according to the parameter type when setting parameters\n\n### Bug Fixes\n\n1. [ISSUE #149](https://github.com/apache/shardingsphere/issues/149) When INSERT IGNORE INTO, if the data is duplicated, the value returned to -1 when ignored, and it should be returned to 0\n1. [ISSUE #118](https://github.com/apache/shardingsphere/issues/118) In the same thread, DQL is executed first, then DML is executed, and DML operation is executed from the replica database\n1. [ISSUE #122](https://github.com/apache/shardingsphere/issues/122) In cases where connections are not available (such as network interruption), transactions should be interrupted rather than retry\n1. [ISSUE #152](https://github.com/apache/shardingsphere/issues/152) PreparedStatement's cache causes an array out of bound\n1. [ISSUE #150](https://github.com/apache/shardingsphere/issues/150) With the latest SQLServer jdbc driver compatibility problem, Product Name should be changed from SQLServer to Microsoft SQL Server\n1. [ISSUE #166](https://github.com/apache/shardingsphere/issues/166) Druid data source stat filter multi-thread error reporting should be added to database connection level synchronization\n\n## 1.3.2\n\n### Enhancements\n\n1. [ISSUE #79](https://github.com/apache/shardingsphere/issues/79) Optimizes limit for only one target table, does not modify limit offset\n\n### Bug Fixes\n\n1. [ISSUE #36](https://github.com/apache/shardingsphere/issues/36) ShardingPreparedStatement cannot set parameters repeatedly\n1. [ISSUE #114](https://github.com/apache/shardingsphere/issues/114) When ShardingPreparedStatement performs batch tasks, it repeatedly analyzes SQL and leads to OOM\n1. [ISSUE #33](https://github.com/apache/shardingsphere/issues/33) According to the MySQL document, queries similar to limit 100 and -1 format are not supported\n1. [ISSUE #124](https://github.com/apache/shardingsphere/issues/124) The return value of com.dangdang.ddframe.rdb.sharding.jdbc.adapter.AbstractStatementAdapter.getUpdateCount does not conform to the JDBC specification\n1. [ISSUE #141](https://github.com/apache/shardingsphere/issues/141) Multi-thread executor parameter setting failure\n\n\n## 1.3.1\n\n### Enhancements\n\n1. [ISSUE #91](https://github.com/apache/shardingsphere/issues/91) Open support for Statement.getGeneratedKeys can return the original database self increase primary key\n1. [ISSUE #92](https://github.com/apache/shardingsphere/issues/92) Query DQL statement event sending\n\n### Bug Fixes\n\n1. [ISSUE #89](https://github.com/apache/shardingsphere/issues/89) Use replica query with sharding hint leads to conflict\n1. [ISSUE #95](https://github.com/apache/shardingsphere/issues/95) Write operations in the same thread read from the primary database changed to the same thread and within the same connection\n\n## 1.3.0\n\n### New Features\n\n1. [ISSUE #85](https://github.com/apache/shardingsphere/issues/85) New feature for replica query\n\n### Enhancements\n\n1. [ISSUE #82](https://github.com/apache/shardingsphere/issues/82) TableRule can import the dataSourceName attribute to specify the data source corresponding to the TableRule\n1. [ISSUE #88](https://github.com/apache/shardingsphere/issues/88) Release restrictions on other databases, support standard SQL, do not support personalized paging statements\n\n### Bug Fixes\n\n1. [ISSUE #81](https://github.com/apache/shardingsphere/issues/81) Associative table query uses OR query condition to resolve the result exceptions\n\n## 1.2.1\n\n### Refactor\n\n1. [ISSUE #60](https://github.com/apache/shardingsphere/issues/60) API adjust, remove ShardingDataSource, use factory instead\n1. [ISSUE #76](https://github.com/apache/shardingsphere/issues/76) ShardingRule and TableRule change to Builder pattern\n1. [ISSUE #77](https://github.com/apache/shardingsphere/issues/77) ShardingRule and TableRule change to Builder pattern\n\n### Enhancements\n\n1. [ISSUE #61](https://github.com/apache/shardingsphere/issues/61) Add the logical table name to the ShardingValue class\n1. [ISSUE #66](https://github.com/apache/shardingsphere/issues/66) Statement on the JDBC tier supports get/set MaxFieldSize, MaxRows and QueryTimeout\n1. [ISSUE #72](https://github.com/apache/shardingsphere/issues/72) Batch inserts supporting select union all\n1. [ISSUE #78](https://github.com/apache/shardingsphere/issues/78) Simplifying sharding only configuration, without configuring logical table and real table correspondence\n1. [ISSUE #80](https://github.com/apache/shardingsphere/issues/80) Simplifying the configuration that does not sharding, specifying the default data source, do not need configure TableRule\n\n### Bug Fixes\n\n1. [ISSUE #63](https://github.com/apache/shardingsphere/issues/63) No table name or table alias is added to the ORDER BY and GROUP BY derivation columns\n1. [ISSUE #65](https://github.com/apache/shardingsphere/issues/65) Performance enhancement for parsing condition context\n1. [ISSUE #67](https://github.com/apache/shardingsphere/issues/67) The soft transaction log cannot be deleted when routed to multiple tables\n1. [ISSUE #71](https://github.com/apache/shardingsphere/issues/71) Routing single sharding key by OFFSET of LIMIT error\n1. [ISSUE #75](https://github.com/apache/shardingsphere/issues/75) MemoryTransactionLogStorage retry times update concurrency problem\n\n## 1.2.0\n\n### New Features\n\n1. [ISSUE #53](https://github.com/apache/shardingsphere/issues/53) The relationship between the real table and the logical table is not configured, and the real table is dynamically calculated by the sharding algorithm\n1. [ISSUE #58](https://github.com/apache/shardingsphere/issues/58) Soft transaction: the initial version of the best effort type\n\n### Refactor\n\n1. [ISSUE #49](https://github.com/apache/shardingsphere/issues/49) Adjust the property configuration\n1. [ISSUE #51](https://github.com/apache/shardingsphere/issues/51) Refactor of Hint interface\n\n### Bug Fixes\n\n1. [ISSUE #43](https://github.com/apache/shardingsphere/issues/43) The yaml file contains Chinese, and the operating system mode is not UTF-8 encoding, resulting in yaml can not be parsed\n1. [ISSUE #48](https://github.com/apache/shardingsphere/issues/48) Yaml file is not closed after reading\n1. [ISSUE #57](https://github.com/apache/shardingsphere/issues/57) At the analytic level, we can identify subqueries to ensure that the behavior of supplementary columns can be accurately positioned\n\n## 1.1.0\n\n### New Features\n\n1. [ISSUE #40](https://github.com/apache/shardingsphere/issues/40) Support YAML configuration\n1. [ISSUE #41](https://github.com/apache/shardingsphere/issues/41) Support Spring namespace configuration\n1. [ISSUE #42](https://github.com/apache/shardingsphere/issues/42) Support inline expression configuration\n\n### Bug Fixes\n\n1. [ISSUE #25](https://github.com/apache/shardingsphere/issues/25) The problem of repeated results will appear under the OR expression\n\n## 1.0.1\n\n### Enhancements\n\n1. [ISSUE #39](https://github.com/apache/shardingsphere/issues/39) Support the use of Hint method to register the key value to SQL routing\n\n### Bug Fixes\n\n1. [ISSUE #11](https://github.com/apache/shardingsphere/issues/11) The count function returns incorrectly without aliases\n1. [ISSUE #13](https://github.com/apache/shardingsphere/issues/13) The Insert statement does not write column names or write column names but column names do not contain sharding fields, occur broadcast route\n1. [ISSUE #16](https://github.com/apache/shardingsphere/issues/16) For now a new connection pool is executed every time SQL is executed. Instead, each ShardingDataSource object should be changed to share a pool\n1. [ISSUE #18](https://github.com/apache/shardingsphere/issues/18) When query Count, getObject() throws Exception: Unsupported data type: Object\n1. [ISSUE #19](https://github.com/apache/shardingsphere/issues/19) In SUM and AVG functions, merger is not executed if aliases are not added, and null pointer exception fired if aliases are added\n1. [ISSUE #38](https://github.com/apache/shardingsphere/issues/38) The compatibility between JPA and ShardingSphere-JDBC. JPA automatically add the column aliases of SELECT, resulting in ORDER BY obtaining ResultSet data only by aliases rather than column names\n\n## 1.0.0\n\n1. Initial version\n"
        },
        {
          "name": "agent",
          "type": "tree",
          "content": null
        },
        {
          "name": "db-protocol",
          "type": "tree",
          "content": null
        },
        {
          "name": "distribution",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "features",
          "type": "tree",
          "content": null
        },
        {
          "name": "infra",
          "type": "tree",
          "content": null
        },
        {
          "name": "jdbc",
          "type": "tree",
          "content": null
        },
        {
          "name": "kernel",
          "type": "tree",
          "content": null
        },
        {
          "name": "lombok.config",
          "type": "blob",
          "size": 0.857421875,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# this config is to ignore lombok code in jacoco\nlombok.addLombokGeneratedAnnotation = true\n"
        },
        {
          "name": "mode",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.4150390625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.3.2\n#\n# Optional ENV vars\n# -----------------\n#   JAVA_HOME - location of a JDK home dir, required when download maven via java source\n#   MVNW_REPOURL - repo url base for downloading maven distribution\n#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output\n# ----------------------------------------------------------------------------\n\nset -euf\n[ \"${MVNW_VERBOSE-}\" != debug ] || set -x\n\n# OS specific support.\nnative_path() { printf %s\\\\n \"$1\"; }\ncase \"$(uname)\" in\nCYGWIN* | MINGW*)\n  [ -z \"${JAVA_HOME-}\" ] || JAVA_HOME=\"$(cygpath --unix \"$JAVA_HOME\")\"\n  native_path() { cygpath --path --windows \"$1\"; }\n  ;;\nesac\n\n# set JAVACMD and JAVACCMD\nset_java_home() {\n  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched\n  if [ -n \"${JAVA_HOME-}\" ]; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n      JAVACCMD=\"$JAVA_HOME/jre/sh/javac\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n      JAVACCMD=\"$JAVA_HOME/bin/javac\"\n\n      if [ ! -x \"$JAVACMD\" ] || [ ! -x \"$JAVACCMD\" ]; then\n        echo \"The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run.\" >&2\n        echo \"JAVA_HOME is set to \\\"$JAVA_HOME\\\", but \\\"\\$JAVA_HOME/bin/java\\\" or \\\"\\$JAVA_HOME/bin/javac\\\" does not exist.\" >&2\n        return 1\n      fi\n    fi\n  else\n    JAVACMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v java\n    )\" || :\n    JAVACCMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v javac\n    )\" || :\n\n    if [ ! -x \"${JAVACMD-}\" ] || [ ! -x \"${JAVACCMD-}\" ]; then\n      echo \"The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run.\" >&2\n      return 1\n    fi\n  fi\n}\n\n# hash string like Java String::hashCode\nhash_string() {\n  str=\"${1:-}\" h=0\n  while [ -n \"$str\" ]; do\n    char=\"${str%\"${str#?}\"}\"\n    h=$(((h * 31 + $(LC_CTYPE=C printf %d \"'$char\")) % 4294967296))\n    str=\"${str#?}\"\n  done\n  printf %x\\\\n $h\n}\n\nverbose() { :; }\n[ \"${MVNW_VERBOSE-}\" != true ] || verbose() { printf %s\\\\n \"${1-}\"; }\n\ndie() {\n  printf %s\\\\n \"$1\" >&2\n  exit 1\n}\n\ntrim() {\n  # MWRAPPER-139:\n  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.\n  #   Needed for removing poorly interpreted newline sequences when running in more\n  #   exotic environments such as mingw bash on Windows.\n  printf \"%s\" \"${1}\" | tr -d '[:space:]'\n}\n\n# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties\nwhile IFS=\"=\" read -r key value; do\n  case \"${key-}\" in\n  distributionUrl) distributionUrl=$(trim \"${value-}\") ;;\n  distributionSha256Sum) distributionSha256Sum=$(trim \"${value-}\") ;;\n  esac\ndone <\"${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n[ -n \"${distributionUrl-}\" ] || die \"cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n\ncase \"${distributionUrl##*/}\" in\nmaven-mvnd-*bin.*)\n  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/\n  case \"${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)\" in\n  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;\n  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;\n  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;\n  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;\n  *)\n    echo \"Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version\" >&2\n    distributionPlatform=linux-amd64\n    ;;\n  esac\n  distributionUrl=\"${distributionUrl%-bin.*}-$distributionPlatform.zip\"\n  ;;\nmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;\n*) MVN_CMD=\"mvn${0##*/mvnw}\" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;\nesac\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\n[ -z \"${MVNW_REPOURL-}\" ] || distributionUrl=\"$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*\"$_MVNW_REPO_PATTERN\"}\"\ndistributionUrlName=\"${distributionUrl##*/}\"\ndistributionUrlNameMain=\"${distributionUrlName%.*}\"\ndistributionUrlNameMain=\"${distributionUrlNameMain%-bin}\"\nMAVEN_USER_HOME=\"${MAVEN_USER_HOME:-${HOME}/.m2}\"\nMAVEN_HOME=\"${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string \"$distributionUrl\")\"\n\nexec_maven() {\n  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :\n  exec \"$MAVEN_HOME/bin/$MVN_CMD\" \"$@\" || die \"cannot exec $MAVEN_HOME/bin/$MVN_CMD\"\n}\n\nif [ -d \"$MAVEN_HOME\" ]; then\n  verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  exec_maven \"$@\"\nfi\n\ncase \"${distributionUrl-}\" in\n*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;\n*) die \"distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'\" ;;\nesac\n\n# prepare tmp dir\nif TMP_DOWNLOAD_DIR=\"$(mktemp -d)\" && [ -d \"$TMP_DOWNLOAD_DIR\" ]; then\n  clean() { rm -rf -- \"$TMP_DOWNLOAD_DIR\"; }\n  trap clean HUP INT TERM EXIT\nelse\n  die \"cannot create temp dir\"\nfi\n\nmkdir -p -- \"${MAVEN_HOME%/*}\"\n\n# Download and Install Apache Maven\nverbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nverbose \"Downloading from: $distributionUrl\"\nverbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n# select .zip or .tar.gz\nif ! command -v unzip >/dev/null; then\n  distributionUrl=\"${distributionUrl%.zip}.tar.gz\"\n  distributionUrlName=\"${distributionUrl##*/}\"\nfi\n\n# verbose opt\n__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''\n[ \"${MVNW_VERBOSE-}\" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v\n\n# normalize http auth\ncase \"${MVNW_PASSWORD:+has-password}\" in\n'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nhas-password) [ -n \"${MVNW_USERNAME-}\" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nesac\n\nif [ -z \"${MVNW_USERNAME-}\" ] && command -v wget >/dev/null; then\n  verbose \"Found wget ... using wget\"\n  wget ${__MVNW_QUIET_WGET:+\"$__MVNW_QUIET_WGET\"} \"$distributionUrl\" -O \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" || die \"wget: Failed to fetch $distributionUrl\"\nelif [ -z \"${MVNW_USERNAME-}\" ] && command -v curl >/dev/null; then\n  verbose \"Found curl ... using curl\"\n  curl ${__MVNW_QUIET_CURL:+\"$__MVNW_QUIET_CURL\"} -f -L -o \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" \"$distributionUrl\" || die \"curl: Failed to fetch $distributionUrl\"\nelif set_java_home; then\n  verbose \"Falling back to use Java to download\"\n  javaSource=\"$TMP_DOWNLOAD_DIR/Downloader.java\"\n  targetZip=\"$TMP_DOWNLOAD_DIR/$distributionUrlName\"\n  cat >\"$javaSource\" <<-END\n\tpublic class Downloader extends java.net.Authenticator\n\t{\n\t  protected java.net.PasswordAuthentication getPasswordAuthentication()\n\t  {\n\t    return new java.net.PasswordAuthentication( System.getenv( \"MVNW_USERNAME\" ), System.getenv( \"MVNW_PASSWORD\" ).toCharArray() );\n\t  }\n\t  public static void main( String[] args ) throws Exception\n\t  {\n\t    setDefault( new Downloader() );\n\t    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );\n\t  }\n\t}\n\tEND\n  # For Cygwin/MinGW, switch paths to Windows format before running javac and java\n  verbose \" - Compiling Downloader.java ...\"\n  \"$(native_path \"$JAVACCMD\")\" \"$(native_path \"$javaSource\")\" || die \"Failed to compile Downloader.java\"\n  verbose \" - Running Downloader.java ...\"\n  \"$(native_path \"$JAVACMD\")\" -cp \"$(native_path \"$TMP_DOWNLOAD_DIR\")\" Downloader \"$distributionUrl\" \"$(native_path \"$targetZip\")\"\nfi\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\nif [ -n \"${distributionSha256Sum-}\" ]; then\n  distributionSha256Result=false\n  if [ \"$MVN_CMD\" = mvnd.sh ]; then\n    echo \"Checksum validation is not supported for maven-mvnd.\" >&2\n    echo \"Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  elif command -v sha256sum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | sha256sum -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  elif command -v shasum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | shasum -a 256 -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n    echo \"Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  fi\n  if [ $distributionSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified distributionSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\n# unzip and move\nif command -v unzip >/dev/null; then\n  unzip ${__MVNW_QUIET_UNZIP:+\"$__MVNW_QUIET_UNZIP\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -d \"$TMP_DOWNLOAD_DIR\" || die \"failed to unzip\"\nelse\n  tar xzf${__MVNW_QUIET_TAR:+\"$__MVNW_QUIET_TAR\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -C \"$TMP_DOWNLOAD_DIR\" || die \"failed to untar\"\nfi\nprintf %s\\\\n \"$distributionUrl\" >\"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url\"\nmv -- \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" \"$MAVEN_HOME\" || [ -d \"$MAVEN_HOME\" ] || die \"fail to move MAVEN_HOME\"\n\nclean || :\nexec_maven \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.75,
          "content": "<# : batch portion\n@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Apache Maven Wrapper startup batch script, version 3.3.2\n@REM\n@REM Optional ENV vars\n@REM   MVNW_REPOURL - repo url base for downloading maven distribution\n@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output\n@REM ----------------------------------------------------------------------------\n\n@IF \"%__MVNW_ARG0_NAME__%\"==\"\" (SET __MVNW_ARG0_NAME__=%~nx0)\n@SET __MVNW_CMD__=\n@SET __MVNW_ERROR__=\n@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%\n@SET PSModulePath=\n@FOR /F \"usebackq tokens=1* delims==\" %%A IN (`powershell -noprofile \"& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}\"`) DO @(\n  IF \"%%A\"==\"MVN_CMD\" (set __MVNW_CMD__=%%B) ELSE IF \"%%B\"==\"\" (echo %%A) ELSE (echo %%A=%%B)\n)\n@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%\n@SET __MVNW_PSMODULEP_SAVE=\n@SET __MVNW_ARG0_NAME__=\n@SET MVNW_USERNAME=\n@SET MVNW_PASSWORD=\n@IF NOT \"%__MVNW_CMD__%\"==\"\" (%__MVNW_CMD__% %*)\n@echo Cannot start maven from wrapper >&2 && exit /b 1\n@GOTO :EOF\n: end batch / begin powershell #>\n\n$ErrorActionPreference = \"Stop\"\nif ($env:MVNW_VERBOSE -eq \"true\") {\n  $VerbosePreference = \"Continue\"\n}\n\n# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties\n$distributionUrl = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionUrl\nif (!$distributionUrl) {\n  Write-Error \"cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties\"\n}\n\nswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {\n  \"maven-mvnd-*\" {\n    $USE_MVND = $true\n    $distributionUrl = $distributionUrl -replace '-bin\\.[^.]*$',\"-windows-amd64.zip\"\n    $MVN_CMD = \"mvnd.cmd\"\n    break\n  }\n  default {\n    $USE_MVND = $false\n    $MVN_CMD = $script -replace '^mvnw','mvn'\n    break\n  }\n}\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\nif ($env:MVNW_REPOURL) {\n  $MVNW_REPO_PATTERN = if ($USE_MVND) { \"/org/apache/maven/\" } else { \"/maven/mvnd/\" }\n  $distributionUrl = \"$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')\"\n}\n$distributionUrlName = $distributionUrl -replace '^.*/',''\n$distributionUrlNameMain = $distributionUrlName -replace '\\.[^.]*$','' -replace '-bin$',''\n$MAVEN_HOME_PARENT = \"$HOME/.m2/wrapper/dists/$distributionUrlNameMain\"\nif ($env:MAVEN_USER_HOME) {\n  $MAVEN_HOME_PARENT = \"$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain\"\n}\n$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString(\"x2\")}) -join ''\n$MAVEN_HOME = \"$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME\"\n\nif (Test-Path -Path \"$MAVEN_HOME\" -PathType Container) {\n  Write-Verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  Write-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\n  exit $?\n}\n\nif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {\n  Write-Error \"distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl\"\n}\n\n# prepare tmp dir\n$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile\n$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path \"$TMP_DOWNLOAD_DIR_HOLDER.dir\"\n$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null\ntrap {\n  if ($TMP_DOWNLOAD_DIR.Exists) {\n    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\n    catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\n  }\n}\n\nNew-Item -Itemtype Directory -Path \"$MAVEN_HOME_PARENT\" -Force | Out-Null\n\n# Download and Install Apache Maven\nWrite-Verbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nWrite-Verbose \"Downloading from: $distributionUrl\"\nWrite-Verbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n$webclient = New-Object System.Net.WebClient\nif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {\n  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)\n}\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n$webclient.DownloadFile($distributionUrl, \"$TMP_DOWNLOAD_DIR/$distributionUrlName\") | Out-Null\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\n$distributionSha256Sum = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionSha256Sum\nif ($distributionSha256Sum) {\n  if ($USE_MVND) {\n    Write-Error \"Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\"\n  }\n  Import-Module $PSHOME\\Modules\\Microsoft.PowerShell.Utility -Function Get-FileHash\n  if ((Get-FileHash \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {\n    Write-Error \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property.\"\n  }\n}\n\n# unzip and move\nExpand-Archive \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -DestinationPath \"$TMP_DOWNLOAD_DIR\" | Out-Null\nRename-Item -Path \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" -NewName $MAVEN_HOME_NAME | Out-Null\ntry {\n  Move-Item -Path \"$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME\" -Destination $MAVEN_HOME_PARENT | Out-Null\n} catch {\n  if (! (Test-Path -Path \"$MAVEN_HOME\" -PathType Container)) {\n    Write-Error \"fail to move MAVEN_HOME\"\n  }\n} finally {\n  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\n  catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\n}\n\nWrite-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\n"
        },
        {
          "name": "parser",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 58.0380859375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n  ~ contributor license agreements.  See the NOTICE file distributed with\n  ~ this work for additional information regarding copyright ownership.\n  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n  ~ (the \"License\"); you may not use this file except in compliance with\n  ~ the License.  You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.apache</groupId>\n        <artifactId>apache</artifactId>\n        <version>29</version>\n    </parent>\n    <groupId>org.apache.shardingsphere</groupId>\n    <artifactId>shardingsphere</artifactId>\n    <version>5.5.2-SNAPSHOT</version>\n    <packaging>pom</packaging>\n    <name>Apache ShardingSphere</name>\n    <description>Build criterion and ecosystem above multi-model databases</description>\n    \n    <modules>\n        <module>infra</module>\n        <module>parser</module>\n        <module>db-protocol</module>\n        <module>mode</module>\n        <module>kernel</module>\n        \n        <module>jdbc</module>\n        <module>proxy</module>\n        \n        <module>features</module>\n        <module>agent</module>\n        \n        <module>test</module>\n        \n        <module>distribution</module>\n    </modules>\n    \n    <properties>\n        <!-- Environments -->\n        <java.version>1.8</java.version>\n        <maven.version.range>[3.0.4,)</maven.version.range>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <remoteresources.skip>true</remoteresources.skip>\n        <jacoco.skip>true</jacoco.skip>\n        <maven.deploy.skip>false</maven.deploy.skip>\n        <maven.javadoc.skip>true</maven.javadoc.skip>\n        <maven.enforcer.fail>true</maven.enforcer.fail>\n        <shade.package>org.apache.shardingsphere.shade</shade.package>\n        <antlr.output.directory>${basedir}/target/generated-sources/antlr4</antlr.output.directory>\n        \n        <sonar.organization>apache</sonar.organization>\n        <sonar.host.url>https://sonarcloud.io</sonar.host.url>\n        <sonar.exclusions>**/autogen/**/*</sonar.exclusions>\n        \n        <!-- 3rd party library versions -->\n        <guava.version>32.1.2-jre</guava.version>\n        <checker-qual.version>3.39.0</checker-qual.version>\n        <error_prone_annotations.version>2.22.0</error_prone_annotations.version>\n        <j2objc-annotations.version>1.3</j2objc-annotations.version>\n        \n        <commons-lang3.version>3.15.0</commons-lang3.version>\n        <commons-codec.version>1.16.0</commons-codec.version>\n        <commons-math3.version>3.6.1</commons-math3.version>\n        <caffeine.version>2.9.3</caffeine.version>\n        <transmittable-thread-local.version>2.14.2</transmittable-thread-local.version>\n        <java-util.version>2.4.0</java-util.version>\n        \n        <antlr4.version>4.10.1</antlr4.version>\n        <snakeyaml.version>2.2</snakeyaml.version>\n        <gson.version>2.10.1</gson.version>\n        <jackson.version>2.16.1</jackson.version>\n        <json-path.version>2.9.0</json-path.version>\n        <json-smart.version>2.4.10</json-smart.version>\n        <accessors-smart.version>2.4.9</accessors-smart.version>\n        <asm.version>9.3</asm.version>\n        <groovy.version>4.0.22</groovy.version>\n        <freemarker.version>2.3.31</freemarker.version>\n        <bytebuddy.version>1.15.4</bytebuddy.version>\n        \n        <jakarta.jakartaee-bom.version>8.0.0</jakarta.jakartaee-bom.version>\n        <glassfish-jaxb.version>2.3.9</glassfish-jaxb.version>\n        \n        <atomikos.version>6.0.0</atomikos.version>\n        <narayana.version>5.12.7.Final</narayana.version>\n        <jboss-transaction-spi.version>7.6.1.Final</jboss-transaction-spi.version>\n        <jboss-logging.version>3.2.1.Final</jboss-logging.version>\n        <seata.version>2.2.0</seata.version>\n        \n        <netty.version>4.1.112.Final</netty.version>\n        <bouncycastle.version>1.78.1</bouncycastle.version>\n        \n        <curator.version>5.7.0</curator.version>\n        <zookeeper.version>3.9.2</zookeeper.version>\n        <audience-annotations.version>0.12.0</audience-annotations.version>\n        <jetcd.version>0.7.7</jetcd.version>\n        <vertx.version>4.5.1</vertx.version>\n        \n        <grpc.version>1.65.1</grpc.version>\n        <protobuf.version>3.21.12</protobuf.version>\n        <okhttp.version>4.12.0</okhttp.version>\n        \n        <elasticjob.version>3.0.4</elasticjob.version>\n        \n        <slf4j.version>1.7.36</slf4j.version>\n        <logback.version>1.2.13</logback.version>\n        <commons-logging.version>1.2</commons-logging.version>\n        \n        <lombok.version>1.18.36</lombok.version>\n        <immutables.version>2.9.3</immutables.version>\n        \n        <postgresql.version>42.7.2</postgresql.version>\n        <mysql-connector-java.version>8.3.0</mysql-connector-java.version>\n        <mssql.version>6.1.7.jre8-preview</mssql.version>\n        <h2.version>2.2.224</h2.version>\n        <opengauss.version>3.1.0-og</opengauss.version>\n        <mariadb-java-client.version>2.4.2</mariadb-java-client.version>\n        <clickhouse-jdbc.version>0.6.3</clickhouse-jdbc.version>\n        <hive.version>4.0.1</hive.version>\n        <hive-server2-jdbc-driver-thin.version>1.6.0</hive-server2-jdbc-driver-thin.version>\n        <hadoop.version>3.3.6</hadoop.version>\n        <presto.version>0.288.1</presto.version>\n        \n        <hikari-cp.version>4.0.3</hikari-cp.version>\n        \n        <prometheus-simpleclient.version>0.11.0</prometheus-simpleclient.version>\n        <prometheus-jmx.version>0.16.1</prometheus-jmx.version>\n        <opentelemetry.version>1.41.0</opentelemetry.version>\n        <opentelemetry-semconv.version>1.27.0-alpha</opentelemetry-semconv.version>\n        <kotlin-stdlib.version>1.9.10</kotlin-stdlib.version>\n        \n        <junit.version>5.11.2</junit.version>\n        <hamcrest.version>3.0</hamcrest.version>\n        <mockito.version>4.11.0</mockito.version>\n        <awaitility.version>4.2.2</awaitility.version>\n        <testcontainers.version>1.20.3</testcontainers.version>\n        <commons-csv.version>1.9.0</commons-csv.version>\n        \n        <graal-sdk.version>24.1.0</graal-sdk.version>\n        <jedis.version>4.4.6</jedis.version>\n        \n        <!-- 3rd party library plugin versions -->\n        <protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>\n        <dockerfile-maven.version>1.4.13</dockerfile-maven.version>\n        <os-detector-maven-plugin.version>0.3.1</os-detector-maven-plugin.version>\n        <native-maven-plugin.version>0.10.4</native-maven-plugin.version>\n        \n        <!-- Compile plugin versions -->\n        <templating-maven-plugin.version>1.0.0</templating-maven-plugin.version>\n        <git-commit-id-plugin.version>4.9.10</git-commit-id-plugin.version>\n        <maven-enforcer-plugin.version>3.2.1</maven-enforcer-plugin.version>\n        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>\n        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>\n        <maven-surefire-plugin.version>3.5.1</maven-surefire-plugin.version>\n        <maven-failsafe-plugin.version>3.2.5</maven-failsafe-plugin.version>\n        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>\n        <jandex-maven-plugin.version>3.1.3</jandex-maven-plugin.version>\n        <build-helper-maven-plugin.version>3.3.0</build-helper-maven-plugin.version>\n        <maven-dependency-plugin.version>3.6.0</maven-dependency-plugin.version>\n        <exec-maven-plugin.version>3.1.0</exec-maven-plugin.version>\n        \n        <!-- Release plugin versions -->\n        <maven-source-plugin.version>3.2.1</maven-source-plugin.version>\n        <maven-deploy-plugin.version>3.1.1</maven-deploy-plugin.version>\n        <maven-release-plugin.version>3.0.0</maven-release-plugin.version>\n        <maven-assembly-plugin.version>3.5.0</maven-assembly-plugin.version>\n        \n        <maven-shade-plugin.version>3.5.1</maven-shade-plugin.version>\n        <checksum-maven-plugin.version>1.10</checksum-maven-plugin.version>\n        \n        <!-- Check plugin versions -->\n        <apache-rat-plugin.version>0.15</apache-rat-plugin.version>\n        <spotless-maven-plugin.version>2.24.1</spotless-maven-plugin.version>\n        <maven-checkstyle-plugin.version>3.2.1</maven-checkstyle-plugin.version>\n        <maven-pmd-plugin.version>3.20.0</maven-pmd-plugin.version>\n        <spotbugs-maven-plugin.version>4.7.2.1</spotbugs-maven-plugin.version>\n        <fb-contrib.version>7.6.0</fb-contrib.version>\n        <findsecbugs.version>1.12.0</findsecbugs.version>\n        <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>\n        \n        <!-- Report plugin versions -->\n        <maven-site-plugin.version>4.0.0-M13</maven-site-plugin.version>\n        <maven-project-info-reports-plugin.version>3.5.0</maven-project-info-reports-plugin.version>\n        <maven-javadoc-plugin.version>3.5.0</maven-javadoc-plugin.version>\n        <maven-jxr-plugin.version>3.3.0</maven-jxr-plugin.version>\n        <jdepend-maven-plugin.version>2.0</jdepend-maven-plugin.version>\n        <taglist-maven-plugin.version>2.4</taglist-maven-plugin.version>\n        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>\n        <dependency-check-maven.version>10.0.3</dependency-check-maven.version>\n    </properties>\n    \n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>guava</artifactId>\n                <version>${guava.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.google.guava</groupId>\n                        <artifactId>listenablefuture</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.checkerframework</groupId>\n                <artifactId>checker-qual</artifactId>\n                <version>${checker-qual.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.errorprone</groupId>\n                <artifactId>error_prone_annotations</artifactId>\n                <version>${error_prone_annotations.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.j2objc</groupId>\n                <artifactId>j2objc-annotations</artifactId>\n                <version>${j2objc-annotations.version}</version>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>${commons-lang3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-codec</groupId>\n                <artifactId>commons-codec</artifactId>\n                <version>${commons-codec.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.github.ben-manes.caffeine</groupId>\n                <artifactId>caffeine</artifactId>\n                <version>${caffeine.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>transmittable-thread-local</artifactId>\n                <version>${transmittable-thread-local.version}</version>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.yaml</groupId>\n                <artifactId>snakeyaml</artifactId>\n                <version>${snakeyaml.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.code.gson</groupId>\n                <artifactId>gson</artifactId>\n                <version>${gson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson</groupId>\n                <artifactId>jackson-bom</artifactId>\n                <version>${jackson.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.jayway.jsonpath</groupId>\n                <artifactId>json-path</artifactId>\n                <version>${json-path.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>net.minidev</groupId>\n                <artifactId>json-smart</artifactId>\n                <version>${json-smart.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>net.minidev</groupId>\n                <artifactId>accessors-smart</artifactId>\n                <version>${accessors-smart.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.ow2.asm</groupId>\n                <artifactId>asm</artifactId>\n                <version>${asm.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.groovy</groupId>\n                <artifactId>groovy</artifactId>\n                <version>${groovy.version}</version>\n            </dependency>\n            \n            <dependency>\n                <groupId>jakarta.platform</groupId>\n                <artifactId>jakarta.jakartaee-bom</artifactId>\n                <version>${jakarta.jakartaee-bom.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.glassfish.jaxb</groupId>\n                <artifactId>jaxb-bom</artifactId>\n                <version>${glassfish-jaxb.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.freemarker</groupId>\n                <artifactId>freemarker</artifactId>\n                <version>${freemarker.version}</version>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-math3</artifactId>\n                <version>${commons-math3.version}</version>\n            </dependency>\n            \n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-bom</artifactId>\n                <version>${netty.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.bouncycastle</groupId>\n                <artifactId>bcpkix-jdk18on</artifactId>\n                <version>${bouncycastle.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.bouncycastle</groupId>\n                <artifactId>bctls-jdk18on</artifactId>\n                <version>${bouncycastle.version}</version>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-framework</artifactId>\n                <version>${curator.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-client</artifactId>\n                <version>${curator.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-recipes</artifactId>\n                <version>${curator.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.zookeeper</groupId>\n                <artifactId>zookeeper</artifactId>\n                <version>${zookeeper.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>ch.qos.logback</groupId>\n                        <artifactId>logback-core</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.yetus</groupId>\n                <artifactId>audience-annotations</artifactId>\n                <version>${audience-annotations.version}</version>\n            </dependency>\n            \n            <dependency>\n                <groupId>io.grpc</groupId>\n                <artifactId>grpc-bom</artifactId>\n                <version>${grpc.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.google.protobuf</groupId>\n                <artifactId>protobuf-bom</artifactId>\n                <version>${protobuf.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.apache.shardingsphere.elasticjob</groupId>\n                <artifactId>elasticjob-lite-core</artifactId>\n                <version>${elasticjob.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.zaxxer</groupId>\n                        <artifactId>HikariCP-java7</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shardingsphere.elasticjob</groupId>\n                <artifactId>elasticjob-lite-lifecycle</artifactId>\n                <version>${elasticjob.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.zaxxer</groupId>\n                        <artifactId>HikariCP-java7</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>jcl-over-slf4j</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>jul-to-slf4j</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.projectlombok</groupId>\n                <artifactId>lombok</artifactId>\n                <version>${lombok.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            \n            <dependency>\n                <groupId>commons-logging</groupId>\n                <artifactId>commons-logging</artifactId>\n                <version>${commons-logging.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.postgresql</groupId>\n                <artifactId>postgresql</artifactId>\n                <version>${postgresql.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.mysql</groupId>\n                <artifactId>mysql-connector-j</artifactId>\n                <version>${mysql-connector-java.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.microsoft.sqlserver</groupId>\n                <artifactId>mssql-jdbc</artifactId>\n                <version>${mssql.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.opengauss</groupId>\n                <artifactId>opengauss-jdbc</artifactId>\n                <version>${opengauss.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.mariadb.jdbc</groupId>\n                <artifactId>mariadb-java-client</artifactId>\n                <version>${mariadb-java-client.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.h2database</groupId>\n                <artifactId>h2</artifactId>\n                <version>${h2.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.clickhouse</groupId>\n                <artifactId>clickhouse-jdbc</artifactId>\n                <version>${clickhouse-jdbc.version}</version>\n                <classifier>http</classifier>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-jdbc</artifactId>\n                <version>${presto.version}</version>\n                <scope>test</scope>\n            </dependency>\n            \n            <dependency>\n                <groupId>com.zaxxer</groupId>\n                <artifactId>HikariCP</artifactId>\n                <version>${hikari-cp.version}</version>\n                <scope>test</scope>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.junit</groupId>\n                <artifactId>junit-bom</artifactId>\n                <version>${junit.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.hamcrest</groupId>\n                <artifactId>hamcrest</artifactId>\n                <version>${hamcrest.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.mockito</groupId>\n                <artifactId>mockito-bom</artifactId>\n                <version>${mockito.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n                <exclusions>\n                    <exclusion>\n                        <groupId>net.bytebuddy</groupId>\n                        <artifactId>byte-buddy</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>net.bytebuddy</groupId>\n                        <artifactId>byte-buddy-agent</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.awaitility</groupId>\n                <artifactId>awaitility</artifactId>\n                <version>${awaitility.version}</version>\n                <scope>test</scope>\n            </dependency>\n            \n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-test</artifactId>\n                <version>${curator.version}</version>\n                <scope>test</scope>\n            </dependency>\n            \n            <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-classic</artifactId>\n                <version>${logback.version}</version>\n                <scope>test</scope>\n            </dependency>\n            \n            <dependency>\n                <groupId>net.bytebuddy</groupId>\n                <artifactId>byte-buddy</artifactId>\n                <version>${bytebuddy.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>net.bytebuddy</groupId>\n                <artifactId>byte-buddy-agent</artifactId>\n                <version>${bytebuddy.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.cedarsoftware</groupId>\n                <artifactId>java-util</artifactId>\n                <version>${java-util.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>redis.clients</groupId>\n                <artifactId>jedis</artifactId>\n                <version>${jedis.version}</version>\n                <scope>provided</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n    \n    <dependencies>\n        <dependency>\n            <groupId>com.google.guava</groupId>\n            <artifactId>guava</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n        </dependency>\n        \n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n        </dependency>\n        \n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-api</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-engine</artifactId>\n            <version>${junit.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-params</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-inline</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-junit-jupiter</artifactId>\n            <scope>test</scope>\n        </dependency>\n        \n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>jcl-over-slf4j</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.cedarsoftware</groupId>\n            <artifactId>java-util</artifactId>\n        </dependency>\n    </dependencies>\n    \n    <build>\n        <pluginManagement>\n            <plugins>\n                <!-- 3rd party library plugins -->\n                <plugin>\n                    <groupId>org.antlr</groupId>\n                    <artifactId>antlr4-maven-plugin</artifactId>\n                    <version>${antlr4.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.xolstice.maven.plugins</groupId>\n                    <artifactId>protobuf-maven-plugin</artifactId>\n                    <version>${protobuf-maven-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>com.spotify</groupId>\n                    <artifactId>dockerfile-maven-plugin</artifactId>\n                    <version>${dockerfile-maven.version}</version>\n                </plugin>\n                \n                <!-- Compile plugins -->\n                <plugin>\n                    <artifactId>maven-enforcer-plugin</artifactId>\n                    <version>${maven-enforcer-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <id>enforce-banned-dependencies</id>\n                            <goals>\n                                <goal>enforce</goal>\n                            </goals>\n                            <configuration>\n                                <rules>\n                                    <dependencyConvergence />\n                                    <requireMavenVersion>\n                                        <version>${maven.version.range}</version>\n                                    </requireMavenVersion>\n                                    <requireJavaVersion>\n                                        <version>${java.version}</version>\n                                    </requireJavaVersion>\n                                </rules>\n                                <fail>${maven.enforcer.fail}</fail>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>${maven-compiler-plugin.version}</version>\n                    <configuration>\n                        <source>${java.version}</source>\n                        <target>${java.version}</target>\n                        <testSource>${java.version}</testSource>\n                        <testTarget>${java.version}</testTarget>\n                        <compilerArgs>-Xlint:-options</compilerArgs>\n                        <annotationProcessorPaths>\n                            <path>\n                                <groupId>org.projectlombok</groupId>\n                                <artifactId>lombok</artifactId>\n                                <version>${lombok.version}</version>\n                            </path>\n                            <path>\n                                <groupId>org.immutables</groupId>\n                                <artifactId>value</artifactId>\n                                <version>${immutables.version}</version>\n                            </path>\n                        </annotationProcessorPaths>\n                    </configuration>\n                </plugin>\n                <!-- TODO nianjun should remove after test container is used in agent e2e -->\n                <plugin>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>${maven-resources-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>${maven-surefire-plugin.version}</version>\n                    <configuration>\n                        <trimStackTrace>false</trimStackTrace>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-failsafe-plugin</artifactId>\n                    <version>${maven-failsafe-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <id>integration-tests</id>\n                            <goals>\n                                <goal>integration-test</goal>\n                                <goal>verify</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>${maven-jar-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>io.smallrye</groupId>\n                    <artifactId>jandex-maven-plugin</artifactId>\n                    <version>${jandex-maven-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>build-helper-maven-plugin</artifactId>\n                    <version>${build-helper-maven-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <id>add-source</id>\n                            <goals>\n                                <goal>add-source</goal>\n                            </goals>\n                            <phase>generate-sources</phase>\n                            <configuration>\n                                <sources>\n                                    <source>${antlr.output.directory}</source>\n                                </sources>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                \n                <!-- Release plugins -->\n                <plugin>\n                    <artifactId>maven-source-plugin</artifactId>\n                    <version>${maven-source-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <id>attach-sources</id>\n                            <goals>\n                                <goal>jar-no-fork</goal>\n                            </goals>\n                            <phase>verify</phase>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-deploy-plugin</artifactId>\n                    <version>${maven-deploy-plugin.version}</version>\n                    <configuration>\n                        <skip>${maven.deploy.skip}</skip>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-release-plugin</artifactId>\n                    <version>${maven-release-plugin.version}</version>\n                    <configuration>\n                        <tagNameFormat>@{project.version}</tagNameFormat>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-assembly-plugin</artifactId>\n                    <version>${maven-assembly-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-shade-plugin</artifactId>\n                    <version>${maven-shade-plugin.version}</version>\n                    <configuration>\n                        <minimizeJar>true</minimizeJar>\n                        <shadedArtifactAttached>false</shadedArtifactAttached>\n                        <shadeSourcesContent>true</shadeSourcesContent>\n                        <createDependencyReducedPom>false</createDependencyReducedPom>\n                        <createSourcesJar>false</createSourcesJar>\n                        <filters>\n                            <filter>\n                                <artifact>*:*</artifact>\n                                <excludes>\n                                    <exclude>META-INF/*.SF</exclude>\n                                    <exclude>META-INF/*.DSA</exclude>\n                                    <exclude>META-INF/*.RSA</exclude>\n                                </excludes>\n                            </filter>\n                        </filters>\n                        <transformers>\n                            <transformer implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\" />\n                        </transformers>\n                    </configuration>\n                </plugin>\n                \n                <!-- Report plugins -->\n                <plugin>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <version>${maven-javadoc-plugin.version}</version>\n                    <configuration>\n                        <source>${java.version}</source>\n                        <charset>${project.build.sourceEncoding}</charset>\n                        <encoding>${project.build.sourceEncoding}</encoding>\n                        <docencoding>${project.build.sourceEncoding}</docencoding>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>jdepend-maven-plugin</artifactId>\n                    <version>${jdepend-maven-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>taglist-maven-plugin</artifactId>\n                    <version>${taglist-maven-plugin.version}</version>\n                    <configuration>\n                        <aggregate>true</aggregate>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.owasp</groupId>\n                    <artifactId>dependency-check-maven</artifactId>\n                    <version>${dependency-check-maven.version}</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n        \n        <plugins>\n            <plugin>\n                <artifactId>maven-source-plugin</artifactId>\n            </plugin>\n            <!-- Release plugins -->\n            <plugin>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>attach-javadocs</id>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <artifactId>maven-failsafe-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>${jacoco-maven-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>jacoco-report</id>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n        \n        <extensions>\n            <extension>\n                <groupId>com.tisonkun.os</groupId>\n                <artifactId>os-detector-maven-plugin</artifactId>\n                <version>${os-detector-maven-plugin.version}</version>\n            </extension>\n        </extensions>\n    </build>\n    \n    <reporting>\n        <plugins>\n            <plugin>\n                <artifactId>maven-site-plugin</artifactId>\n                <version>${maven-site-plugin.version}</version>\n            </plugin>\n            <plugin>\n                <artifactId>maven-project-info-reports-plugin</artifactId>\n                <version>${maven-project-info-reports-plugin.version}</version>\n            </plugin>\n            <plugin>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>${maven-javadoc-plugin.version}</version>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>aggregate</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n            <plugin>\n                <artifactId>maven-jxr-plugin</artifactId>\n                <version>${maven-jxr-plugin.version}</version>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>aggregate</report>\n                        </reports>\n                        <inherited>false</inherited>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n            \n            <plugin>\n                <groupId>org.apache.rat</groupId>\n                <artifactId>apache-rat-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <configuration>\n                    <failOnViolation>false</failOnViolation>\n                    <failsOnError>false</failsOnError>\n                    <violationSeverity>warning</violationSeverity>\n                    <!--suppress MavenModelInspection -->\n                    <configLocation>${maven.multiModuleProjectDirectory}/src/resources/checkstyle.xml</configLocation>\n                    <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                    <excludes>**/autogen/**/*</excludes>\n                    <goal>checkstyle-aggregate</goal>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-pmd-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>com.github.spotbugs</groupId>\n                <artifactId>spotbugs-maven-plugin</artifactId>\n                <configuration>\n                    <xmlOutput>true</xmlOutput>\n                    <xmlOutputDirectory>target/site</xmlOutputDirectory>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>jdepend-maven-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>taglist-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </reporting>\n    \n    <url>http://shardingsphere.apache.org</url>\n    <licenses>\n        <license>\n            <name>Apache License 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n    \n    <mailingLists>\n        <mailingList>\n            <name>ShardingSphere Developer List</name>\n            <subscribe>dev-subscribe@shardingsphere.apache.org</subscribe>\n            <unsubscribe>dev-unsubscribe@shardingsphere.apache.org</unsubscribe>\n            <post>dev@shardingsphere.apache.org</post>\n        </mailingList>\n    </mailingLists>\n    \n    <scm>\n        <connection>scm:git:https://github.com/apache/shardingsphere.git</connection>\n        <developerConnection>scm:git:https://github.com/apache/shardingsphere.git</developerConnection>\n        <url>https://github.com/apache/shardingsphere.git</url>\n        <tag>HEAD</tag>\n    </scm>\n    \n    <distributionManagement>\n        <site>\n            <id>Apache ShardingSphere</id>\n            <url>https://shardingsphere.apache.org/statistics</url>\n        </site>\n    </distributionManagement>\n    \n    <profiles>\n        <profile>\n            <id>jdk11+</id>\n            <activation>\n                <jdk>[11,)</jdk>\n            </activation>\n            <properties>\n                <maven.compiler.release>8</maven.compiler.release>\n            </properties>\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <plugin>\n                            <artifactId>maven-surefire-plugin</artifactId>\n                            <configuration>\n                                <argLine>--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.lang.reflect=ALL-UNNAMED --add-opens java.base/sun.net=ALL-UNNAMED --add-opens java.base/java.net=ALL-UNNAMED</argLine>\n                            </configuration>\n                        </plugin>\n                        <plugin>\n                            <artifactId>maven-failsafe-plugin</artifactId>\n                            <configuration>\n                                <argLine>--add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.lang.reflect=ALL-UNNAMED --add-opens java.base/sun.net=ALL-UNNAMED --add-opens java.base/java.net=ALL-UNNAMED</argLine>\n                            </configuration>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n            </build>\n        </profile>\n        <profile>\n            <id>generateMetadata</id>\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <plugin>\n                            <groupId>org.apache.maven.plugins</groupId>\n                            <artifactId>maven-surefire-plugin</artifactId>\n                            <version>${maven-surefire-plugin.version}</version>\n                            <configuration>\n                                <includes>\n                                    <include>org.apache.shardingsphere.test.natived.**</include>\n                                </includes>\n                            </configuration>\n                        </plugin>\n                        <plugin>\n                            <groupId>org.graalvm.buildtools</groupId>\n                            <artifactId>native-maven-plugin</artifactId>\n                            <version>${native-maven-plugin.version}</version>\n                            <extensions>true</extensions>\n                            <configuration>\n                                <agent>\n                                    <enabled>true</enabled>\n                                    <defaultMode>Conditional</defaultMode>\n                                    <modes>\n                                        <conditional>\n                                            <userCodeFilterPath>${user.dir}/test/native/native-image-filter/user-code-filter.json</userCodeFilterPath>\n                                            <extraFilterPath>${user.dir}/test/native/native-image-filter/extra-filter.json</extraFilterPath>\n                                            <parallel>true</parallel>\n                                        </conditional>\n                                    </modes>\n                                    <metadataCopy>\n                                        <disabledStages>\n                                            <stage>main</stage>\n                                        </disabledStages>\n                                        <merge>false</merge>\n                                        <outputDirectory>${user.dir}/infra/reachability-metadata/src/main/resources/META-INF/native-image/org.apache.shardingsphere/generated-reachability-metadata/</outputDirectory>\n                                    </metadataCopy>\n                                </agent>\n                            </configuration>\n                            <executions>\n                                <execution>\n                                    <id>build-native</id>\n                                    <goals>\n                                        <goal>compile-no-fork</goal>\n                                    </goals>\n                                    <phase>package</phase>\n                                </execution>\n                                <execution>\n                                    <id>test-native</id>\n                                    <goals>\n                                        <goal>test</goal>\n                                    </goals>\n                                    <phase>test</phase>\n                                </execution>\n                            </executions>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n            </build>\n        </profile>\n        <profile>\n            <id>nativeTestInShardingSphere</id>\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <plugin>\n                            <artifactId>maven-surefire-plugin</artifactId>\n                            <configuration>\n                                <includes>\n                                    <include>org.apache.shardingsphere.test.natived.**</include>\n                                </includes>\n                            </configuration>\n                        </plugin>\n                        <plugin>\n                            <groupId>org.graalvm.buildtools</groupId>\n                            <artifactId>native-maven-plugin</artifactId>\n                            <version>${native-maven-plugin.version}</version>\n                            <extensions>true</extensions>\n                            <configuration>\n                                <buildArgs>\n                                    <buildArg>-H:+AddAllCharsets</buildArg>\n                                    <buildArg>-H:+UnlockExperimentalVMOptions</buildArg>\n                                    <buildArg>-H:ThrowMissingRegistrationErrors=</buildArg>\n                                    <buildArg>-H:MissingRegistrationReportingMode=Warn</buildArg>\n                                </buildArgs>\n                                <quickBuild>true</quickBuild>\n                            </configuration>\n                            <executions>\n                                <execution>\n                                    <id>test-native</id>\n                                    <goals>\n                                        <goal>test</goal>\n                                    </goals>\n                                    <phase>test</phase>\n                                </execution>\n                            </executions>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n            </build>\n        </profile>\n        <profile>\n            <id>check</id>\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <!-- Check plugins -->\n                        <plugin>\n                            <groupId>org.apache.rat</groupId>\n                            <artifactId>apache-rat-plugin</artifactId>\n                            <version>${apache-rat-plugin.version}</version>\n                            <configuration>\n                                <!--suppress MavenModelInspection -->\n                                <excludesFile>${maven.multiModuleProjectDirectory}/src/resources/rat.txt</excludesFile>\n                            </configuration>\n                            <executions>\n                                <execution>\n                                    <goals>\n                                        <goal>check</goal>\n                                    </goals>\n                                    <phase>verify</phase>\n                                </execution>\n                            </executions>\n                        </plugin>\n                        <plugin>\n                            <groupId>com.diffplug.spotless</groupId>\n                            <artifactId>spotless-maven-plugin</artifactId>\n                            <version>${spotless-maven-plugin.version}</version>\n                            <configuration>\n                                <java>\n                                    <eclipse>\n                                        <!--suppress MavenModelInspection -->\n                                        <file>${maven.multiModuleProjectDirectory}/src/resources/spotless/java.xml</file>\n                                    </eclipse>\n                                    <licenseHeader>\n                                        <!--suppress MavenModelInspection -->\n                                        <file>${maven.multiModuleProjectDirectory}/src/resources/spotless/copyright.txt</file>\n                                    </licenseHeader>\n                                    <replaceRegex>\n                                        <!-- specify replacements using regex match and replace -->\n                                        <name>Formatting JavaDoc extra spaces</name>\n                                        <searchRegex>\\*\\s+(\\r?\\n)\\s{5}\\*</searchRegex>\n                                        <replacement>*$1     *</replacement>\n                                    </replaceRegex>\n                                </java>\n                                <pom>\n                                    <sortPom>\n                                        <encoding>UTF-8</encoding>\n                                        <nrOfIndentSpace>4</nrOfIndentSpace>\n                                        <keepBlankLines>true</keepBlankLines>\n                                        <indentBlankLines>true</indentBlankLines>\n                                        <indentSchemaLocation>false</indentSchemaLocation>\n                                        <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>\n                                        <sortModules>false</sortModules>\n                                        <sortExecutions>false</sortExecutions>\n                                        <predefinedSortOrder>custom_1</predefinedSortOrder>\n                                        <expandEmptyElements>false</expandEmptyElements>\n                                        <sortProperties>false</sortProperties>\n                                    </sortPom>\n                                    <replace>\n                                        <name>Leading blank line</name>\n                                        <search>--&gt;\n&lt;project</search>\n                                        <replacement>--&gt;\n\n&lt;project</replacement>\n                                    </replace>\n                                </pom>\n                            </configuration>\n                        </plugin>\n                        <plugin>\n                            <artifactId>maven-checkstyle-plugin</artifactId>\n                            <version>${maven-checkstyle-plugin.version}</version>\n                            <configuration>\n                                <consoleOutput>true</consoleOutput>\n                                <failOnViolation>true</failOnViolation>\n                                <failsOnError>true</failsOnError>\n                                <violationSeverity>error</violationSeverity>\n                                <!--suppress MavenModelInspection -->\n                                <configLocation>${maven.multiModuleProjectDirectory}/src/resources/checkstyle.xml</configLocation>\n                                <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                                <excludes>**/autogen/**/*</excludes>\n                            </configuration>\n                        </plugin>\n                        <plugin>\n                            <artifactId>maven-pmd-plugin</artifactId>\n                            <version>${maven-pmd-plugin.version}</version>\n                            <configuration>\n                                <aggregate>true</aggregate>\n                                <targetJdk>${java.version}</targetJdk>\n                                <rulesets>\n                                    <!--suppress MavenModelInspection -->\n                                    <ruleset>${maven.multiModuleProjectDirectory}/src/resources/pmd.xml</ruleset>\n                                </rulesets>\n                            </configuration>\n                        </plugin>\n                        <plugin>\n                            <groupId>com.github.spotbugs</groupId>\n                            <artifactId>spotbugs-maven-plugin</artifactId>\n                            <version>${spotbugs-maven-plugin.version}</version>\n                            <configuration>\n                                <fork>false</fork>\n                                <failOnError>false</failOnError>\n                                <!--suppress MavenModelInspection -->\n                                <excludeFilterFile>${maven.multiModuleProjectDirectory}/src/resources/spotbugs.xml</excludeFilterFile>\n                                <plugins>\n                                    <plugin>\n                                        <groupId>com.mebigfatguy.fb-contrib</groupId>\n                                        <artifactId>fb-contrib</artifactId>\n                                        <version>${fb-contrib.version}</version>\n                                    </plugin>\n                                    <plugin>\n                                        <groupId>com.h3xstream.findsecbugs</groupId>\n                                        <artifactId>findsecbugs-plugin</artifactId>\n                                        <version>${findsecbugs.version}</version>\n                                    </plugin>\n                                </plugins>\n                            </configuration>\n                        </plugin>\n                        <plugin>\n                            <groupId>org.sonarsource.scanner.maven</groupId>\n                            <artifactId>sonar-maven-plugin</artifactId>\n                            <version>${sonar-maven-plugin.version}</version>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n                <plugins>\n                    <!-- Check plugins -->\n                    <plugin>\n                        <groupId>org.apache.rat</groupId>\n                        <artifactId>apache-rat-plugin</artifactId>\n                    </plugin>\n                    <plugin>\n                        <groupId>com.diffplug.spotless</groupId>\n                        <artifactId>spotless-maven-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>apply</goal>\n                                </goals>\n                                <phase>compile</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-checkstyle-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>validate</id>\n                                <goals>\n                                    <goal>check</goal>\n                                </goals>\n                                <phase>validate</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <artifactId>maven-pmd-plugin</artifactId>\n                    </plugin>\n                    <plugin>\n                        <groupId>com.github.spotbugs</groupId>\n                        <artifactId>spotbugs-maven-plugin</artifactId>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "proxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}