{
  "metadata": {
    "timestamp": 1736708842065,
    "page": 37,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "conductor-oss/conductor",
      "stars": 18371,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.068359375,
          "content": "# General\n\n# Backend \nserver/build/libs\n\n# UI\n**/node_modules\nui/build"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1826171875,
          "content": "gradlew eol=lf\n*.gradle eol=lf\n*.java eol=lf\n*.groovy eol=lf\nspring.factories eol=lf\n*.sh eol=lf\n\ndocs/* linguist-documentation\nserver/src/main/resources/swagger-ui/* linguist-vendored\n\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3759765625,
          "content": "# Java Build\n.gradle\n.classpath\ndump.rdb\nout\nbin\ntarget\nbuildscan.log\n/docs/site\n\n# Python\n/polyglot-clients/python/conductor.egg-info\n*.pyc\n\n# OS & IDE\n.DS_Store\n.settings\n.vscode\n.idea\n.project\n*.iml\n\n# JS & UI Related\nnode_modules\n/ui/build\n/ui/public/monaco-editor\n\n# publishing secrets\nsecrets/signing-key\n\n# local builds\nlib/\nbuild/\n*/build/\n\n# asdf version file\n.tool-versions\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.9501953125,
          "content": "# Code of Conduct\n\nHello valued community members! üëã\n\nOur Conductor community has grown tremendously, and as part of ensuring a harmonious experience for everyone, \nwe've outlined some guidelines that we'd love for all members to uphold. \nOur community thrives when everyone engages with kindness, respect, and a collaborative spirit. Here's what we hope to see:\n\n\n### 1. Maintain a Positive Tone.  \nEvery interaction is an opportunity to lift someone up. Let's ensure our words and actions reflect optimism and encouragement.\n\n### 2. Be Respectful to the Community\nEvery member here comes with a unique background and perspective. Please honor those differences by being courteous, considerate, and open-minded. \nRemember, mutual respect is the foundation of a thriving community. Be careful in the words that you choose. \nWe are a community of professionals, and we conduct ourselves professionally. \nBe kind to others. Do not insult or put down other participants. Harassment and other exclusionary behaviors aren't acceptable. \nThis includes, but is not limited to:\n* Violent threats or language directed against another person  Discriminatory jokes and language\n* Posting sexualized language or imagery\n* Posting (or threatening to post) other people's personally identifying information (‚Äúdoxing‚Äù)\n* Personal insults, especially those using racist or sexist terms\n* Unwelcome sexual attention\n* Advocating for, or encouraging, any of the above behavior\n* Repeated harassment of others. In general, if someone asks you to stop, then stop\n\n### 3. Preserve Our Community's Unity\nWe understand that as we grow, there might be differing opinions and interests. \nHowever, we kindly request not to create splinter groups or fork out the community. \nLet's work through our differences and continue building this space together.\n\n### 4. Focus on Constructive Discussions\nWe all have moments of frustration, but let's express ourselves in ways that are constructive. \nAvoid comments that could come off as sarcastic, condescending, or disdainful. \nRemember, it's always possible to give feedback or express disagreement without belittling others.\nWe are here to learn from each other and make Conductor the best platform out there. \nA big part of that are the exchanges of ideas and approaches that are grounded in data and sound reasoning. \nWe kindly request that you adhere to that pattern and be thoughtful and responsible in your discussions. \nThis also means that you are required to have discussions focused on the community and not on promotion of any services, products or goods.\n\n### 5. When we disagree, try to understand why.\nDisagreements, both social and technical, happen all the time and this community is no exception. \nIt is important that we resolve disagreements and differing views constructively. \nRemember that we‚Äôre all different. The strength of this community comes from its varied community of people from a wide range of backgrounds. \nDifferent people have different perspectives on issues. Being unable to understand why someone holds a viewpoint doesn‚Äôt mean that they‚Äôre wrong. \nDon‚Äôt forget that it is human to err and blaming each other doesn‚Äôt get us anywhere. \nInstead, focus on helping to resolve issues and learning from mistakes.\nOur community's strength lies in our collective spirit. \nBy following these guidelines, we ensure that our community remains an inspiring, respectful, and welcoming place for everyone. \nIf you have any concerns or suggestions or if you need to report on any behavior that violates this Code of Conduct, please feel free to reach out to the admins - community@orkes.io. \nLet's continue to support and uplift each other!\n\n### Enforcement\nWe have a variety of ways of enforcing the code of conduct, including, but not limited to\n* Asking you nicely to knock it off\n* Asking you less nicely\n* Temporary or permanent suspension of the account\n* Removal of privileges and/or adding restrictions to the account\n* Removal of content\n* Banning from the community\n\nThank you,"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.3046875,
          "content": "# Contributing\nThanks for your interest in Conductor!\nThis guide helps to find the most efficient way to contribute, ask questions, and report issues.\n\nCode of conduct\n-----\n\nPlease review our [Code of Conduct](https://orkes.io/orkes-conductor-community-code-of-conduct)\n\nI have a question!\n-----\n\nWe have a dedicated [discussion forum](https://github.com/conductor-oss/conductor/discussions) for asking \"how to\" questions and to discuss ideas. The discussion forum is a great place to start if you're considering creating a feature request or work on a Pull Request.\n*Please do not create issues to ask questions.*\n\nConductor users hangout in the [Slack channel](https://join.slack.com/t/orkes-conductor/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA).  Join the channel for more real-time communication!\n\nI want to contribute!\n------\n\nWe welcome Pull Requests and already had many outstanding community contributions!\nCreating and reviewing Pull Requests take considerable time. This section helps you to set up a smooth Pull Request experience.\n\nThe stable branch is [main](https://github.com/conductor-oss/conductor/tree/main).\n\nPlease create pull requests for your contributions against [main](https://github.com/conductor-oss/conductor/tree/main) only.\n\nIt's a great idea to discuss the new feature you're considering on the [discussion forum](https://github.com/conductor-oss/conductor/discussions) before writing any code. There are often different ways you can implement a feature. Getting some discussion about different options helps shape the best solution. When starting directly with a Pull Request, there is the risk of having to make considerable changes. Sometimes that is the best approach, though! Showing an idea with code can be very helpful; be aware that it might be throw-away work. Some of our best Pull Requests came out of multiple competing implementations, which helped shape it to perfection.\n\nAlso, consider that not every feature is a good fit for Conductor. A few things to consider are:\n\n* Is it increasing complexity for the user, or might it be confusing?\n* Does it, in any way, break backward compatibility (this is seldom acceptable)\n* Does it require new dependencies (this is rarely acceptable for core modules)\n* Should the feature be opt-in or enabled by default. For integration with a new Queuing recipe or persistence module, a separate module which can be optionally enabled is the right choice.\n* Should the feature be implemented in the main Conductor repository, or would it be better to set up a separate repository? Especially for integration with other systems, a separate repository is often the right choice because the life-cycle of it will be different.\n* Is it part of the Conductor project roadmap?\n\nOf course, for more minor bug fixes and improvements, the process can be more light-weight.\n\nWe'll try to be responsive to Pull Requests. Do keep in mind that because of the inherently distributed nature of open source projects, responses to a PR might take some time because of time zones, weekends, and other things we may be working on.\n\nI want to report an issue\n-----\n\nIf you found a bug, it is much appreciated if you create an issue. Please include clear instructions on how to reproduce the issue, or even better, include a test case on a branch. Make sure to come up with a descriptive title for the issue because this helps while organizing issues.\n\nI have a great idea for a new feature\n----\nMany features in Conductor have come from ideas from the community. If you think something is missing or certain use cases could be supported better, let us know! You can do so by opening a discussion on the [discussion forum](https://github.com/conductor-oss/conductor/discussions). Provide as much relevant context to why and when the feature would be helpful. Providing context is especially important for \"Support XYZ\" issues since we might not be familiar with what \"XYZ\" is and why it's useful. If you have an idea of how to implement the feature, include that as well.\n\nOnce we have decided on a direction, it's time to summarize the idea by creating a new issue.\n\n## Code Style\nWe use [spotless](https://github.com/diffplug/spotless) to enforce consistent code style for the project, so make sure to run `gradlew spotlessApply` to fix any violations after code changes.\n\n## License\nAll files are released with the Apache 2.0 license.\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0439453125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} Orkes, Inc.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "OSSMETADATA",
          "type": "blob",
          "size": 0.01953125,
          "content": "osslifecycle=active\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.466796875,
          "content": "\n<picture>\n  <!-- Dark mode logo -->\n  <source srcset=\"https://github.com/user-attachments/assets/104b3a67-6013-4622-8075-a45da3a9e726\" media=\"(prefers-color-scheme: dark)\">\n  <!-- Light mode logo -->\n  <img src=\"https://assets.conductor-oss.org/logo.png\" alt=\"Logo\">\n</picture>\n\n\n<h1 align=\"center\" style=\"border-bottom: none\">\n    Scalable Workflow Orchestration\n</h1>\n\n\n[![Github release](https://img.shields.io/github/v/release/conductor-oss/conductor.svg)](https://GitHub.com/Netflix/conductor-oss/releases)\n[![License](https://img.shields.io/github/license/conductor-oss/conductor.svg)](http://www.apache.org/licenses/LICENSE-2.0)\n[![Conductor Slack](https://img.shields.io/badge/Slack-Join%20the%20Community-blueviolet?logo=slack)](https://join.slack.com/t/orkes-conductor/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA)\n[![Community Forum](https://img.shields.io/badge/Discourse-Join%20the%20Community-blue?logo=discourse&logoColor=white)](https://community.orkes.io)\n[![Conductor OSS](https://img.shields.io/badge/Conductor%20OSS-Visit%20Site-blue)](https://conductor-oss.org)\n[![GitHub stars](https://img.shields.io/github/stars/conductor-oss/conductor?style=social)](https://github.com/conductor-oss/conductor/stargazers)\n\n\n\nConductor is a platform _originally_ created at **Netflix** to orchestrate microservices and events. [Conductor OSS](https://conductor-oss.org) is maintained by the team of developers at [Orkes.io](https://orkes.io/) along with members of the open source community.\n\n\n[![conductor_oss_getting_started](https://github.com/user-attachments/assets/6153aa58-8ad1-4ec5-93d1-38ba1b83e3f4)](https://youtu.be/4azDdDlx27M)\n\n- - - \n# Table of Contents\n1. [What is Conductor?](#what-is-conductor)\n    * [Key benefits](#key-benefits)\n    * [Features](#features)\n2. [Getting Started](#getting-started)\n    * [Requirements](#requirements)\n    * [Quick Start](#quick-start-guide)\n    * [Create your first workflow](#create-your-first-workflow)\n3. [Documentation](#documentation)\n4. [Database Specifications](#database-specifications)\n5. [Deployment Options](#deployment-options)\n6. [Conductor Roadmap](#conductor-oss-roadmap)\n7. [How to Contribute](#contributors)\n8. [Additional Resources](#resources)\n9. [Community & Support](#slack-community)\n\n# What is Conductor?\nConductor (or [Netflix Conductor](https://netflixtechblog.com/netflix-conductor-a-microservices-orchestrator-2e8d4771bf40)) is a microservices orchestration engine for distributed and asynchronous workflows. It empowers developers to create workflows that define interactions between services, databases, and other external systems.\n\nConductor is designed to enable flexible, resilient, and scalable workflows. It allows you to compose services into complex workflows without coupling them tightly, simplifying orchestration across cloud-native applications and enterprise systems alike.\n\n## Key benefits\n* **Resilience and Error Handling:** Conductor enables automatic retries and fallback mechanisms.\n* **Scalability:** Built to scale with complex workflows in high-traffic environments.\n* **Observability:** Provides monitoring and debugging capabilities for workflows.\n* **Ease of Integration:** Seamlessly integrates with microservices, external APIs, and legacy systems.\n\n## Features\n* **Workflow as Code:** Define workflows in JSON and manage them with versioning.\n* **Rich Task Types:** Includes task types like HTTP, JSON, Lambda, Sub Workflow, and Event tasks, allowing for flexible workflow definitions.\n* **Dynamic Workflow Management:** Workflows can evolve independently of the underlying services.\n* **Built-in UI:** A customizable UI is available to monitor and manage workflows.\n* **Flexible Persistence and Queue Options:** Use Redis, MySQL, Postgres, and more.\n- - - \n# Getting Started\n\n### Requirements\n* Install Docker Desktop ([Mac](https://docs.docker.com/desktop/setup/install/mac-install/), [Windows/PC](https://docs.docker.com/desktop/setup/install/windows-install/), [Linux](https://docs.docker.com/desktop/setup/install/linux/))\n* Install Java (JDK) 17 or newer\n* Node 14 for the UI to build\n  * _Earlier versions may work, but are untested_\n  \n\n## Quick Start Guide\n\n#### Clone the repo\n\n```shell\ngit clone https://github.com/conductor-oss/conductor\n```\n\n#### Change to new Conductor directory\n\n```shell\ncd conductor\n```\n\n#### Start with Docker Compose (_recommended for local deployment_)\n\n```shell\ndocker compose -f docker/docker-compose.yaml up\n```\n\n#### Create your first workflow\n\n##### To create a workflow, navigate to the UI:\n* http://localhost:8127\n\n##### Or use the REST API with your preferred HTTP client\n* http://localhost:8080\n\n# Documentation\nCheck-out the [Conductor OSS docs](https://github.com/conductor-oss/conductor/tree/main/docs) for additional details\n- - - \n# Database Specifications\n* The default persistence used is Redis\n* The indexing backend is [Elasticsearch](https://www.elastic.co/) (7.x)\n\n\n### Configuration for various database backends\n\n| Backend        | Configuration                                                                         |\n|----------------|---------------------------------------------------------------------------------------|\n| Redis + ES7    | [config-redis.properties](docker/server/config/config-redis.properties)               |\n| Postgres       | [config-postgres.properties](docker/server/config/config-postgres.properties)         |\n| Postgres + ES7 | [config-postgres-es7.properties](docker/server/config/config-postgres-es7.properties) |\n| MySQL + ES7    | [config-mysql.properties](docker/server/config/config-mysql.properties)               |\n\n\n# Deployment Options\nIn addition to the Docker Compose setup, Netflix Conductor supports several other deployment methods to suit various environments:\n\n* **Docker:** Outlined above\n* **Custom Deployment:** Build from source and deploy Conductor as a standalone Java application. Configure databases, queues, and environment settings as needed.\n\n## Available SDKs\nConductor provides several SDKs for interacting with the API and creating custom clients:\n\n* [**Java SDK:**](https://github.com/conductor-sdk/conductor-javascript) Fully featured for building and executing workflows in Java.\n* [**Python SDK:**](https://github.com/conductor-sdk/conductor-python) Python library for creating and managing workflows.\n* [**Go SDK:**](https://github.com/conductor-sdk/conductor-go) For integrating Conductor workflows with Go-based services.\n* [**C# (C sharp) SDK:**](https://github.com/conductor-sdk/conductor-csharp)The conductor-csharp repository provides the client SDKs to build task workers in C#\n\nEach SDK is maintained as part of the Conductor project, providing examples and comprehensive API documentation.\n\n# Conductor OSS Roadmap\n[See the roadmap for the Conductor](ROADMAP.md)\nIf you would like to participate in the roadmap and development, [please reach out](https://forms.gle/P2i1xHrxPQLrjzTB7).\n\n# Documentation and Community\n* **Official Documentation:** [Conductor documentation](https://docs.conductor-oss.org/index.html) contains detailed explanations of workflow concepts, API reference, and guides.\n* **Conductor Slack:** [Join the Conductor Slack](https://join.slack.com/t/orkes-conductor/shared_invite/zt-2vdbx239s-Eacdyqya9giNLHfrCavfaA) channel for community discussions and support.\n* **Orkes Community Discourse:** [Hosted by Orkes.io](https://community.orkes.io) on Discourse, you can engage the Conductor & Orkes community, ask questions, and contribute ideas. \n- - -\n# License\nConductor is licensed under the Apache 2.0 License ¬© [Conductor Open-source](https://conductor-oss.org/)\n- - - \n# Contributing\n\nWe welcome contributions from everyone!\n\n- **Report Issues:** Found a bug or have a feature request? Open an [issue on GitHub](https://github.com/conductor-oss/conductor/issues).\n- **Contribute Code:** Check out our [Contribution Guide](https://github.com/conductor-oss/conductor/blob/main/CONTRIBUTING.md) for initial guidelines, and explore our [good first issues](https://github.com/conductor-oss/conductor/labels/good%20first%20issue) for beginner-friendly tasks to tackle first.\n- **Build a Conductor SDK:** Need an SDK not included with Conductor? Build your own using the [Swagger API](http://localhost:8080) included with your local deployment. \n- **Contribute to our Docs:** Contribute edits or updates to keep our [documentation](https://github.com/conductor-oss/conductor/tree/main/docs) in great shape for the community.\n\n## Contributors\n\n<a href=\"https://github.com/conductor-oss/conductor/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=conductor-oss/conductor\" />\n</a>\n"
        },
        {
          "name": "RELATED.md",
          "type": "blob",
          "size": 0.044921875,
          "content": "[Related Projects](docs/resources/related.md)\n"
        },
        {
          "name": "ROADMAP.md",
          "type": "blob",
          "size": 2.5,
          "content": "# Conductor OSS Roadmap\n\n\n## New Features\n### Type safety for workflow inputs and task input/output through JSON Schema\n\n* Allow type safe workflows and workers with support for JSON schema and protobuf\n* Enable scaffolding code generation for workers through schema for workers using CLI tool\n\n### New System Tasks\n\n* Database task to work with relational & no-sql databases\n* Polling support for HTTP task\n* Operators\n * * For..Each with parallel and sequential execution\n * * Improved While loop\n * *  Try..Catch for improved error handling at the task level\n\n### LLM Integrations\nConductor is a perfect platform to build your next LLM powered application or incorporating genAI into your applications.\nEnable system tasks for LLM integrations that lets you work with various language models for:\n1. Text completion\n2. Chat completion with memory\n3. Embedding generation\n\n### CLI for Conductor\nAllow developers to manage their conductor instance via CLI.\n\n* Manage metadata\n* Query and manage workflow executions (terminate, pause, resume, retry)\n* Start | Stop manage conductor server\n\n### Support Python as a scripting language for INLINE task\nExtend usability of Conductor by allowing lightweight python code as INLINE tasks.\n\n### New APIs for workflow state management\n\n* Synchronous execution of workflows\n* update workflow variables\n* Update tasks synchronously\n\n## SDKs\n\n* Rust\n* Kotlin\n* C++\n* Ruby\n* Swift\n* Flutter / Dart \n* PHP\n\n### Worker metrics on server\nExpose an endpoint on the server that can be used by workers to publish worker specific metrics.\nThis will allow monitoring metrics for all the workers in a distributed system across the entire system. \n\n## Testing\nInfrastructure to make workflows easier to test and debug right from the UI and IDE.\n\n### Workflow Debugger\n\n* Ability to debug your workflows during development just like you would do when you write code\n* All functionality of a debugger\n* Breakpoints add/remove\n* Step to next\n* Drop to a certain task that was already executed. (going back in time)\n* Ability to inspect, modify, add input / output parameters\n* Watch Windows to see values of interesting &nbsp;parameters during execution\n* Attaching to a certain WF execution\n* Remote Task debugging (with SDK Support).. Enable step by step execution in a task worker from the server\n\n## Maintenance\n\n1. Deprecate support for Elasticsearch 6\n2. Update support for newer versions of Elasticsearch\n2. Improve/Fix JOIN task performance (less about making it performant and more about just fixing the usability) &nbsp;- Done"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.28515625,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 3.x.x   | :white_check_mark: |\n| 2.x.x   | :x:                |\n| 1.x.x   | :x:                |\n\n## Reporting a Vulnerability\n\nPlease email oss@orkes.com to report vulnerabilities.\n"
        },
        {
          "name": "USERS.md",
          "type": "blob",
          "size": 1.4296875,
          "content": "\n## Who uses Conductor?\n\nWe would like to keep track of whose using Conductor. Please send a pull request with your company name and Github handle.\n\n* [Netflix](https://www.netflix.com/) [[@aravindanr](https://github.com/aravindanr)]\n* [Florida Blue](http://bcbsfl.com/) [[@rickfish](https://github.com/rickfish)]\n* [UWM](https://www.uwm.com/) [[@zergrushjoe](https://github.com/ZergRushJoe)]\n* [Deutsche Telekom Digital Labs](https://dtdl.in) [[@jas34](https://github.com/jas34)] [[@deoramanas](https://github.com/deoramanas)]\n* [VMware](https://www.vmware.com/) [[@taojwmware](https://github.com/taojwmware)] [[@venkag](https://github.com/venkag)]\n* [JP Morgan Chase](https://www.chase.com/) [[@maheshyaddanapudi](https://github.com/maheshyaddanapudi)]\n* [Orkes](https://orkes.io/) [[@CherishSantoshi](https://github.com/CherishSantoshi)]\n* [313X](https://313x.com.br) [[@dalmoveras](https://github.com/dalmoveras)]\n* [Supercharge](https://supercharge.io) [[@team-supercharge](https://github.com/team-supercharge)]\n* [GE Healthcare](https://www.gehealthcare.com/) [[@flavioschuindt](https://github.com/flavioschuindt)]\n* [ReliaQuest](https://www.reliaquest.com/) [[@rq-dbrady](https://github.com/rq-dbrady)] [[@alexmay48](https://github.com/alexmay48)]\n* [Clari](https://www.clari.com/) [[@TeamJOF](https://github.com/clari)]\n* [Atlassian](https://www.atlassian.com/) [[@LuisLainez](https://github.com/LuisLainez)] [[@aradu](https://github.com/aradu-atlassian)]\n"
        },
        {
          "name": "amqp",
          "type": "tree",
          "content": null
        },
        {
          "name": "annotations-processor",
          "type": "tree",
          "content": null
        },
        {
          "name": "annotations",
          "type": "tree",
          "content": null
        },
        {
          "name": "awss3-storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "awssqs-event-queue",
          "type": "tree",
          "content": null
        },
        {
          "name": "azureblob-storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 4.9716796875,
          "content": "import org.springframework.boot.gradle.plugin.SpringBootPlugin\n\nbuildscript {\n    repositories {\n        mavenCentral()\n        maven {\n            url \"https://plugins.gradle.org/m2/\"\n        }\n    }\n    dependencies {\n        classpath 'org.springframework.boot:spring-boot-gradle-plugin:3.3.5'\n        classpath 'com.diffplug.spotless:spotless-plugin-gradle:6.+'\n    }\n}\n\nplugins {\n    id 'io.spring.dependency-management' version '1.1.3'\n    id 'java'\n    id 'application'\n    id 'maven-publish'\n    id 'signing'\n    id 'java-library'\n    id \"com.diffplug.spotless\" version \"6.25.0\"\n    id 'org.springframework.boot' version '3.3.5'\n}\n\n// Establish version and status\next.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name\n\nsubprojects {\n    tasks.withType(Javadoc).all { enabled = false }\n}\n\napply from: \"$rootDir/dependencies.gradle\"\napply from: \"$rootDir/springboot-bom-overrides.gradle\"\napply from: \"$rootDir/deploy.gradle\"\n\nallprojects {\n    apply plugin: 'io.spring.dependency-management'\n    apply plugin: 'java-library'\n    apply plugin: 'project-report'\n\n    java {\n        toolchain {\n            languageVersion = JavaLanguageVersion.of(17)\n        }\n    }\n\n    sourceCompatibility = JavaVersion.VERSION_17\n    targetCompatibility = JavaVersion.VERSION_17\n\n    group = 'org.conductoross'\n\n    configurations {\n        all {\n            exclude group: 'ch.qos.logback', module: 'logback-classic'\n            exclude group: 'ch.qos.logback', module: 'logback-core'\n            exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'\n            exclude group: 'org.slf4j', module: 'slf4j-log4j12'\n\n            resolutionStrategy.eachDependency { details ->\n                if (details.requested.group.startsWith('com.fasterxml.jackson.') ) {\n                    details.useVersion \"2.18.0\"\n                }\n            }\n        }\n    }\n\n    repositories {\n        mavenCentral()\n    }\n\n    dependencyManagement {\n        imports {\n            // dependency versions for the BOM can be found at https://docs.spring.io/spring-boot/docs/3.1.4/reference/htmlsingle/#appendix.dependency-versions\n            mavenBom(SpringBootPlugin.BOM_COORDINATES)\n        }\n    }\n\n    dependencies {\n        implementation('org.apache.logging.log4j:log4j-core')\n        implementation('org.apache.logging.log4j:log4j-api')\n        implementation('org.apache.logging.log4j:log4j-slf4j-impl')\n        implementation('org.apache.logging.log4j:log4j-jul')\n        implementation('org.apache.logging.log4j:log4j-web')\n        implementation \"com.fasterxml.jackson.datatype:jackson-datatype-jsr310\"\n        compileOnly 'org.projectlombok:lombok:1.18.34'\n\n        annotationProcessor 'org.projectlombok:lombok:1.18.34'\n        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'\n\n        testImplementation('org.springframework.boot:spring-boot-starter-test')\n        testImplementation('org.springframework.boot:spring-boot-starter-log4j2')\n        testImplementation 'junit:junit'\n        testImplementation \"org.junit.vintage:junit-vintage-engine\"\n        testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'\n\n        //Locks for the dependecies\n        implementation('org.codehaus.jettison:jettison') {\n            version {\n                strictly '1.5.4'\n            }\n        }\n        implementation('org.apache.tomcat.embed:tomcat-embed-core')\n    }\n    // processes additional configuration metadata json file as described here\n    // https://docs.spring.io/spring-boot/docs/2.3.1.RELEASE/reference/html/appendix-configuration-metadata.html#configuration-metadata-additional-metadata\n    compileJava.inputs.files(processResources)\n\n    test {\n        useJUnitPlatform()\n        testLogging {\n            events = [\"SKIPPED\", \"FAILED\"]\n            exceptionFormat = \"full\"\n            displayGranularity = 1\n            showStandardStreams = false\n        }\n    }\n    bootJar {\n        enabled = false\n    }\n}\n\n// all client and their related modules are published with Java 17 compatibility\n[\"annotations\", \"common\", \"client\", \"client-spring\", \"grpc\", \"grpc-client\"].each {\n    project(\":conductor-$it\") {\n        compileJava {\n            options.release = 17\n        }\n    }\n}\n\ntask server {\n    dependsOn ':conductor-server:bootRun'\n}\n\nconfigure(allprojects - project(':conductor-grpc')) {\n    apply plugin: 'com.diffplug.spotless'\n\n    spotless {\n        java {\n            googleJavaFormat().aosp()\n            removeUnusedImports()\n            importOrder('java', 'javax', 'org', 'com.netflix', '', '\\\\#com.netflix', '\\\\#')\n            licenseHeaderFile(\"$rootDir/licenseheader.txt\")\n        }\n    }\n}\n\n['cassandra-persistence', 'core', 'redis-concurrency-limit', 'test-harness', 'client'].each {\n    configure(project(\":conductor-$it\")) {\n        spotless {\n            groovy {\n                importOrder('java', 'javax', 'org', 'com.netflix', '', '\\\\#com.netflix', '\\\\#')\n                licenseHeaderFile(\"$rootDir/licenseheader.txt\")\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "cassandra-persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "client-spring",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "common-persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "conductor-clients",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependencies.gradle",
          "type": "blob",
          "size": 2.1533203125,
          "content": "/*\n *  Copyright 2023 Conductor authors\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n *  the License. You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n *  an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations under the License.\n */\n\n/*\n * Common place to define all the version dependencies\n */\next {\n    revActivation = '2.0.1'\n    revApacheHttpComponentsClient5 = '5.2.1'\n    revAwaitility = '3.1.6'\n    revAwsSdk = '1.12.756'\n    revBval = '2.0.5'\n    revCassandra = '3.10.2'\n    revCassandraUnit = '3.11.2.0'\n    revCommonsIo = '2.7'\n    revDynoQueues = '2.0.20'\n    revElasticSearch6 = '6.8.23'\n    revEmbeddedRedis = '0.6'\n    revEurekaClient = '2.0.2'\n    revGroovy = '4.0.9'\n    revGrpc = '1.66.0'\n    revGuava = '33.2.1-jre'\n    revHamcrestAllMatchers = '1.8'\n    revHealth = '1.1.4'\n    revPostgres = '42.7.2'\n    revProtoBuf = '3.25.5'\n    revJakartaAnnotation = '2.1.1'\n    revJAXB = '4.0.1'\n    revJAXRS = '4.0.0'\n    revJedis = '3.3.0'\n    revJersey = '3.1.7'\n    revJerseyCommon = '3.1.7'\n    revJsonPath = '2.4.0'\n    revJq = '0.0.13'\n    revJsr311Api = '1.1.1'\n    revMockServerClient = '5.12.0'\n    revSpringDoc = '2.1.0'\n    revOrkesQueues = '1.0.10'\n    revPowerMock = '2.0.9'\n    revProtogenAnnotations = '1.0.0'\n    revProtogenCodegen = '1.4.0'\n    revRarefiedRedis = '0.0.17'\n    revRedisson = '3.13.3'\n    revRxJava = '1.2.2'\n    revSpectator = '0.122.0'\n    revSpock = '2.4-M1-groovy-4.0'\n    revSpotifyCompletableFutures = '0.3.3'\n    revTestContainer = '1.19.3'\n    revFasterXml = '2.15.3'\n    revAmqpClient = '5.13.0'\n    revKafka = '2.6.0'\n    revMicrometer = '1.13.1'\n    revPrometheus = '0.9.0'\n    revElasticSearch7 = '7.17.19'\n    revCodec = '1.15'\n    revAzureStorageBlobSdk = '12.18.0'\n    revNatsStreaming = '2.6.5'\n    revNats = '2.16.14'\n    revStan = '2.2.3'\n    revFlyway = '10.15.2'\n\n}\n"
        },
        {
          "name": "deploy.gradle",
          "type": "blob",
          "size": 2.44140625,
          "content": "\nsubprojects {\n\n    apply plugin: 'maven-publish'\n    apply plugin: 'java-library'\n    apply plugin: 'signing'\n\n    group = 'org.conductoross'\n\n    java {\n        withSourcesJar()\n        withJavadocJar()\n    }\n\n    publishing {\n        publications {\n            mavenJava(MavenPublication) {\n                from components.java\n                versionMapping {\n                    usage('java-api') {\n                        fromResolutionOf('runtimeClasspath')\n                    }\n                    usage('java-runtime') {\n                        fromResolutionResult()\n                    }\n                }\n                pom {\n                    name = 'Conductor OSS'\n                    description = 'Conductor OSS build.'\n                    url = 'https://github.com/conductor-oss/conductor'\n                    scm {\n                        connection = 'scm:git:git://github.com/conductor-oss/conductor.git'\n                        developerConnection = 'scm:git:ssh://github.com/conductor-oss/conductor.git'\n                        url = 'https://github.com/conductor-oss/conductor'\n                    }\n                    licenses {\n                        license {\n                            name = 'The Apache License, Version 2.0'\n                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n                        }\n                    }\n                    developers {\n                        developer {\n                            organization = 'Conductor OSS'\n                            organizationUrl = 'https://conductor-oss.org/'\n                            name = 'Conductor OSS'\n                        }\n                    }\n                }\n            }\n        }\n\n        repositories {\n            maven {\n                url = \"https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/\"\n                credentials {\n                    username project.properties.username\n                    password project.properties.password\n                }\n            }\n        }\n    }\n\n    signing {\n        def signingKeyId = findProperty('signingKeyId')\n        if (signingKeyId) {\n            def signingKey = findProperty('signingKey')\n            def signingPassword = findProperty('signingPassword')\n            if (signingKeyId && signingKey && signingPassword) {\n                useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)\n            }\n            sign publishing.publications\n        }\n\n    }\n\n}"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "es6-persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "es7-persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "family.properties",
          "type": "blob",
          "size": 0.0126953125,
          "content": "generation=1\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.0478515625,
          "content": "org.gradle.daemon=true\norg.gradle.jvmargs=-Xmx1g\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.4365234375,
          "content": "#!/bin/sh\n\n#\n# Copyright ¬© 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions ¬´$var¬ª, ¬´${var}¬ª, ¬´${var:-default}¬ª, ¬´${var+SET}¬ª,\n#           ¬´${var#prefix}¬ª, ¬´${var%suffix}¬ª, and ¬´$( cmd )¬ª;\n#         * compound commands having a testable exit status, especially ¬´case¬ª;\n#         * various built-in commands including ¬´command¬ª, ¬´set¬ª, and ¬´ulimit¬ª.\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command;\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n#     shell script including quotes and variable substitutions, so put them in\n#     double quotes to make sure that they get re-expanded; and\n#   * put everything else in single quotes, so that it's not re-expanded.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.80078125,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\"==\"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n@rem This is normally unused\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif %ERRORLEVEL% equ 0 goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif %ERRORLEVEL% equ 0 goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nset EXIT_CODE=%ERRORLEVEL%\r\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\r\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\r\nexit /b %EXIT_CODE%\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "grpc-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "grpc-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "grpc",
          "type": "tree",
          "content": null
        },
        {
          "name": "http-task",
          "type": "tree",
          "content": null
        },
        {
          "name": "java-sdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "json-jq-task",
          "type": "tree",
          "content": null
        },
        {
          "name": "kafka-event-queue",
          "type": "tree",
          "content": null
        },
        {
          "name": "kafka",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenseheader.txt",
          "type": "blob",
          "size": 0.5869140625,
          "content": "/*\n * Copyright $YEAR Conductor Authors.\n * <p>\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n * the License. You may obtain a copy of the License at\n * <p>\n * http://www.apache.org/licenses/LICENSE-2.0\n * <p>\n * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n * an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations under the License.\n */"
        },
        {
          "name": "main.py",
          "type": "blob",
          "size": 2.654296875,
          "content": "import os\nimport re\n\ndef define_env(env):\n    \"Hook function\"\n\n    @env.macro\n    def insert_content(key = None):\n        key = key or env.page.title\n        filename = env.variables['extra']['additional_content'][key]\n        return include_file(filename)\n\n    @env.macro\n    def include_file(filename):\n        prefix = env.variables['config']['docs_dir']\n        full_filename = os.path.join(prefix, filename)\n        with open(full_filename, 'r') as f:\n            lines = f.readlines()\n        return ''.join(lines)\n\n\n    \"\"\" \n    def copy_markdown_images(tmpRoot, markdown):\n        # root = os.path.dirname(os.path.dirname(self.page.url))\n        root = self.page.url\n\n        paths = []\n\n        p = re.compile(\"!\\[.*\\]\\((.*)\\)\")\n        it = p.finditer(markdown)\n        for match in it:\n            path = match.group(1)\n            paths.append(path)\n\n            destinationPath = os.path.realpath(self.config['base_path'] + \"/\" +\n                                               root + \"/gen_/\" + path)\n\n            if not os.path.isfile(destinationPath):\n                print(\"Copying image: \" + path + \" to \" + destinationPath)\n\n                os.makedirs(os.path.dirname(destinationPath), exist_ok=True)\n                shutil.copyfile(tmpRoot + \"/\" + path, destinationPath)\n\n        for path in paths:\n            markdown = markdown.replace(path, \"gen_/\" + path)\n\n        return markdown \n    \"\"\"\n\n    @env.macro\n    def snippet(file_path, section_name, num_sections=1):\n        p = re.compile(\"^#+ \")\n        m = p.search(section_name)\n        if m:\n            section_level = m.span()[1] - 1\n            root = env.variables['config']['docs_dir']\n            full_path = os.path.join(root, file_path)\n\n            content = \"\"\n            with open(full_path, 'r') as myfile:\n                content = myfile.read()\n\n            p = re.compile(\"^\" + section_name + \"$\", re.MULTILINE)\n            start = p.search(content)\n            start_span = start.span()\n            p = re.compile(\"^#{1,\" + str(section_level) + \"} \", re.MULTILINE)\n\n            result = \"\"            \n            all = [x for x in p.finditer(content[start_span[1]:])]\n            \n            print (len(all))\n\n            if len(all) == 0 or (num_sections-1) >= len(all):\n                result = content[start_span[0]:]\n            else:\n                end = all[num_sections-1]\n                end_index = end.span()[0]\n                result = content[start_span[0]:end_index + start_span[1]]\n\n            # If there are any images, find them, copy them\n            # result = copy_markdown_images(root, result)\n            return result\n        else:\n            return \"Heading reference beginning in # is required\"\n"
        },
        {
          "name": "metrics",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 5.8408203125,
          "content": "site_name: Conductor Documentation\nsite_description: Conductor is a platform created to orchestrate workflows that span across microservices.\nrepo_url: https://github.com/conductor-oss/conductor\nsite_url: https://conductor-oss.github.io/conductor\nedit_uri: ''\nstrict: false\nuse_directory_urls: false\n\nnav:\n  - index.md\n  - Developer's Guide:\n    - Concepts: \n      - devguide/concepts/index.md\n      - devguide/concepts/workflows.md\n      - devguide/concepts/tasks.md\n      - devguide/concepts/workers.md\n      - devguide/concepts/why.md\n    - Running Conductor:\n      - devguide/running/source.md\n      - devguide/running/docker.md\n      - devguide/running/hosted.md\n    - Architecture: \n      - devguide/architecture/index.md\n      - devguide/architecture/tasklifecycle.md\n      - devguide/architecture/technicaldetails.md\n      - devguide/architecture/directed-acyclic-graph.md\n    - How Tos:\n      - Workflows:\n        - devguide/how-tos/Workflows/debugging-workflows.md\n        - devguide/how-tos/Workflows/handling-errors.md\n        - devguide/how-tos/Workflows/searching-workflows.md\n        - devguide/how-tos/Workflows/starting-workflows.md\n        - devguide/how-tos/Workflows/updating-workflows.md\n        - devguide/how-tos/Workflows/view-workflow-executions.md\n        - devguide/how-tos/Workflows/versioning-workflows.md\n      - Tasks:\n        - devguide/how-tos/Tasks/creating-tasks.md\n        - devguide/how-tos/Tasks/dynamic-vs-switch-tasks.md\n        - devguide/how-tos/Tasks/monitoring-task-queues.md\n        - devguide/how-tos/Tasks/reusing-tasks.md\n        - devguide/how-tos/Tasks/task-configurations.md\n        - devguide/how-tos/Tasks/task-inputs.md\n        - devguide/how-tos/Tasks/task-timeouts.md\n        - devguide/how-tos/Tasks/updating-tasks.md\n        - devguide/how-tos/Tasks/extending-system-tasks.md\n      - Workers:\n        - devguide/how-tos/Workers/build-a-golang-task-worker.md\n        - devguide/how-tos/Workers/build-a-java-task-worker.md\n        - devguide/how-tos/Workers/build-a-python-task-worker.md\n      - Monitoring:\n        - devguide/how-tos/Monitoring/Conductor-LogLevel.md\n    - Tutorial:\n      - devguide/labs/index.md\n      - devguide/labs/first-workflow.md\n      - devguide/labs/eventhandlers.md\n      - devguide/labs/kitchensink.md\n    - FAQ: devguide/faq.md\n    - Best Practices: devguide/bestpractices.md\n  - Documentation: \n    - API Specification:\n      - documentation/api/index.md\n      - documentation/api/metadata.md\n      - documentation/api/startworkflow.md\n      - documentation/api/workflow.md\n      - documentation/api/task.md\n      - documentation/api/taskdomains.md\n    - Configuration:\n      - Workflow Definition:\n        - documentation/configuration/workflowdef/index.md\n        - Operators:\n          - documentation/configuration/workflowdef/operators/index.md\n          - documentation/configuration/workflowdef/operators/do-while-task.md\n          - documentation/configuration/workflowdef/operators/dynamic-task.md\n          - documentation/configuration/workflowdef/operators/dynamic-fork-task.md\n          - documentation/configuration/workflowdef/operators/fork-task.md\n          - documentation/configuration/workflowdef/operators/join-task.md\n          - documentation/configuration/workflowdef/operators/set-variable-task.md\n          - documentation/configuration/workflowdef/operators/start-workflow-task.md\n          - documentation/configuration/workflowdef/operators/sub-workflow-task.md\n          - documentation/configuration/workflowdef/operators/switch-task.md\n          - documentation/configuration/workflowdef/operators/terminate-task.md\n        - System Tasks:\n          - documentation/configuration/workflowdef/systemtasks/index.md\n          - documentation/configuration/workflowdef/systemtasks/event-task.md\n          - documentation/configuration/workflowdef/systemtasks/http-task.md\n          - documentation/configuration/workflowdef/systemtasks/human-task.md\n          - documentation/configuration/workflowdef/systemtasks/inline-task.md\n          - documentation/configuration/workflowdef/systemtasks/json-jq-transform-task.md\n          - documentation/configuration/workflowdef/systemtasks/kafka-publish-task.md\n          - documentation/configuration/workflowdef/systemtasks/wait-task.md\n      - documentation/configuration/taskdef.md\n      - documentation/configuration/eventhandlers.md\n    - Conductor Metrics:\n      - Server Metrics: documentation/metrics/server.md\n      - Client Metrics: documentation/metrics/client.md\n    - Advanced Topics:\n      - documentation/advanced/extend.md\n      - documentation/advanced/isolationgroups.md\n      - documentation/advanced/annotation-processor.md\n      - documentation/advanced/archival-of-workflows.md\n      - documentation/advanced/azureblob-storage.md\n      - documentation/advanced/externalpayloadstorage.md\n      - documentation/advanced/redis.md\n      - documentation/advanced/postgresql.md\n    - Client SDKs:\n      - documentation/clientsdks/index.md\n      - documentation/clientsdks/java-sdk.md\n      - documentation/clientsdks/csharp-sdk.md\n      - documentation/clientsdks/clojure-sdk.md\n      - documentation/clientsdks/go-sdk.md\n      - documentation/clientsdks/python-sdk.md\n      - documentation/clientsdks/js-sdk.md\n  - Resources:\n    - Contributing: resources/contributing.md\n    - Code of Conduct: https://orkes.io/orkes-conductor-community-code-of-conduct\n    - Related Projects: resources/related.md\n    - License: resources/license.md\ntheme: \n  name: material\n  logo: img/logo.svg\n  custom_dir: docs/overrides\n  features:\n    - navigation.tabs\n    - navigation.tabs.sticky\n    - navigation.indexes\n    - navigation.footer\nextra_css:\n  - css/custom.css\nplugins:\n  - search\n  - macros\nmarkdown_extensions:\n  - admonition\n  - codehilite\n  - attr_list\n  - pymdownx.highlight:\n      anchor_linenums: true\n  - pymdownx.inlinehilite\n  - pymdownx.snippets\n  - pymdownx.superfences  \ncopyright: Conductor authors\n\n"
        },
        {
          "name": "mysql-persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "nats-streaming",
          "type": "tree",
          "content": null
        },
        {
          "name": "nats",
          "type": "tree",
          "content": null
        },
        {
          "name": "os-persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "polyglot-clients",
          "type": "tree",
          "content": null
        },
        {
          "name": "postgres-external-storage",
          "type": "tree",
          "content": null
        },
        {
          "name": "postgres-persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "redis-concurrency-limit",
          "type": "tree",
          "content": null
        },
        {
          "name": "redis-lock",
          "type": "tree",
          "content": null
        },
        {
          "name": "redis-persistence",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.0419921875,
          "content": "mkdocs\nmkdocs-material\nmkdocs-macros-plugin"
        },
        {
          "name": "rest",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 1.9482421875,
          "content": "/*\n *  Copyright 2023 Conductor authors\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n *  the License. You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n *  an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations under the License.\n */\n\nplugins {\n    id \"com.gradle.enterprise\" version \"3.11.1\"\n}\n\ngradleEnterprise {\n    buildScan {\n        termsOfServiceUrl = \"https://gradle.com/terms-of-service\"\n        termsOfServiceAgree = \"yes\"\n        publishAlways()\n\n        buildScanPublished { scan ->\n            file(\"buildscan.log\") << \"${new Date()} - ${scan.buildScanUri}\\n\"\n        }\n    }\n}\n\nrootProject.name = 'conductor'\n\ninclude 'annotations'\ninclude 'annotations-processor'\n\ninclude 'server'\ninclude 'common'\ninclude 'core'\ninclude 'client'\ninclude 'client-spring'\n\ninclude 'cassandra-persistence'\ninclude 'redis-persistence'\n\ninclude 'es6-persistence'\n\ninclude 'redis-lock'\n\ninclude 'awss3-storage'\ninclude 'awssqs-event-queue'\n\ninclude 'redis-concurrency-limit'\n\ninclude 'json-jq-task'\ninclude 'http-task'\n\ninclude 'rest'\ninclude 'grpc'\ninclude 'grpc-server'\ninclude 'grpc-client'\n\ninclude 'java-sdk'\n\n// community modules\ninclude 'workflow-event-listener'\ninclude 'task-status-listener'\ninclude 'test-util'\ninclude 'kafka'\ninclude 'common-persistence'\ninclude 'mysql-persistence'\ninclude 'postgres-persistence'\ninclude 'metrics'\ninclude 'es7-persistence'\ninclude 'os-persistence'\ninclude 'azureblob-storage'\ninclude 'postgres-external-storage'\ninclude 'amqp'\ninclude 'nats'\ninclude 'nats-streaming'\ninclude 'kafka-event-queue'\n\ninclude 'test-harness'\n\nrootProject.children.each {it.name=\"conductor-${it.name}\"}\n\n"
        },
        {
          "name": "springboot-bom-overrides.gradle",
          "type": "blob",
          "size": 1.017578125,
          "content": "/*\n *  Copyright 2023 Conductor authors\n *  <p>\n *  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with\n *  the License. You may obtain a copy of the License at\n *  <p>\n *  http://www.apache.org/licenses/LICENSE-2.0\n *  <p>\n *  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on\n *  an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the\n *  specific language governing permissions and limitations under the License.\n */\n\n// Contains overrides for Spring Boot Dependency Management plugin\n// Dependency version override properties can be found at https://docs.spring.io/spring-boot/docs/3.1.4/reference/htmlsingle/#appendix.dependency-versions.properties\n\n// Conductor's default is ES6, but SB brings in ES7\next['elasticsearch.version'] = revElasticSearch7\n\n// SB brings groovy 3.0.x which is not compatible with Spock\next['groovy.version'] = revGroovy\n"
        },
        {
          "name": "task-status-listener",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-harness",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-util",
          "type": "tree",
          "content": null
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "workflow-event-listener",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}