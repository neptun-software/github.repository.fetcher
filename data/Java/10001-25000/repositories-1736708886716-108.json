{
  "metadata": {
    "timestamp": 1736708886716,
    "page": 108,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "youth5201314/banner",
      "stars": 12942,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.478515625,
          "content": "# Built application files\r\n*.apk\r\n*.ap_\r\n\r\n# Files for the Dalvik VM\r\n*.dex\r\n\r\n# Java class files\r\n*.class\r\n\r\n# Generated files\r\nbin/\r\ngen/\r\n\r\n# Gradle files\r\n.gradle/\r\nbuild/\r\n\r\n# Local configuration file (sdk path, etc)\r\nlocal.properties\r\n\r\n# Proguard folder generated by Eclipse\r\nproguard/\r\n\r\n# Log Files\r\n*.log\r\n\r\n# Android Studio Navigation editor temp files\r\n.navigation/\r\n\r\n# Android Studio captures folder\r\ncaptures/\r\n.idea\r\n/banner.iml\r\n/gradlew\r\n/gradlew.bat\r\n/gradle.properties\r\n"
        },
        {
          "name": "BannerExample.iml",
          "type": "blob",
          "size": 0.9521484375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module external.linked.project.id=\"BannerExample\" external.linked.project.path=\"$MODULE_DIR$\" external.root.project.path=\"$MODULE_DIR$\" external.system.id=\"GRADLE\" external.system.module.group=\"\" external.system.module.version=\"unspecified\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"java-gradle\" name=\"Java-Gradle\">\n      <configuration>\n        <option name=\"BUILD_FOLDER_PATH\" value=\"$MODULE_DIR$/build\" />\n        <option name=\"BUILDABLE\" value=\"false\" />\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/.gradle\" />\n      <excludeFolder url=\"file://$MODULE_DIR$/build\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.0654296875,
          "content": "\r\n## Banner 2.0 全新升级\r\n> 只做一个可以自定义的轮播容器，不侵入UI ———— Banner 2.0\r\n\r\n```\r\n> 各位老铁反馈的问题我都有看，不是不解决，有时真的很难复现，\r\n> 如果能在提交问题时，有条件提供个demo发到我邮箱，方便定位问题，毕竟大家的场景和使用方式都有差异，\r\n> 我自己也在使用，在多个千万级APP上一直稳定运行，如果真有严重问题肯定第一时间就修复了\r\n```\r\n\r\n<a href=\"https://github.com/youth5201314/banner/tree/release-1.4.10\" target=\"_blank\">Banner 1.4.10(还想看老版本的可以点击这里)</a>\r\n\r\n### 阔别已久，从新回归\r\n\r\n* 首先我声明几点：\r\n    * 这只是一个开源库，如果满意你可以使用、可以借鉴修改，希望对你们有所帮助。\r\n    * 如果不满意请友好的提出，注明错误的详细信息或者修改建议，好的想法和自定义的东西亦可以直接提交，大家都能来一起完善。\r\n    * 如果你觉得实在是没用，也请你做一个有自我修养的人。\r\n   \r\n### 主要改进功能介绍\r\n最开始是想上传以前基于viewpager更新好的版本，但是看着viewpager2正式版已经出来了，就上新的吧，viewpager2确实比viewpager性能好很多。\r\n\r\n- [x] 使用了ViewPager2为基础控件  <a href=\"https://developer.android.google.cn/jetpack/androidx/releases/viewpager2\" target=\"_blank\">ViewPager2介绍</a>\r\n- [x] 支持了androidx兼容包\r\n- [x] 方便了UI、Indicator自定义\r\n- [x] 支持画廊效果、魅族效果\r\n- [x] 兼容了水平和垂直轮播，也可以实现类似淘宝头条的效果\r\n- [x] 依赖包目前只需要导入了ViewPager2\r\n\r\n\r\n\r\n### 效果图\r\n更多效果运行demo查看\r\n\r\n![默认](images/banner_example.gif)\r\n\r\n![画廊](images/banner_example2.gif)\r\n\r\n![魅族](images/banner_example1.gif)\r\n\r\n![头条](images/banner_example3.gif)\r\n\r\n##### 内置了多种PageTransformer效果\r\n\r\n![DepthPageTransformer](images/DepthPageTransformer.gif)\r\n![ZoomOutPageTransformer](images/ZoomOutPageTransformer.gif)\r\n\r\n|内置的PageTransformer|\r\n|---|\r\n|AlphaPageTransformer|\r\n|DepthPageTransformer|\r\n|RotateDownPageTransformer|\r\n|RotateUpPageTransformer|\r\n|RotateYTransformer|\r\n|ScaleInTransformer|\r\n|ZoomOutPageTransformer|\r\n 也可以组合使用效果更佳\r\n\r\n## 方法\r\n更多方法以实际使用为准，下面不一定全部列出了\r\n\r\n|方法名|返回类型|描述|\r\n|---|---|---|\r\n|getAdapter()|extends BannerAdapter|获取你设置的BannerAdapter\r\n|getViewPager2()|ViewPager2|获取ViewPager2\r\n|getIndicator()|Indicator|获取你设置的指示器（没有设置直接获取会抛异常哦）\r\n|getIndicatorConfig()|IndicatorConfig|获取你设置的指示器配置信息（没有设置直接获取会抛异常哦）\r\n|getRealCount()|int|返回banner真实总数\r\n|setUserInputEnabled(boolean)|this|禁止手动滑动Banner;true 允许，false 禁止\r\n|setDatas(List<T>)|this|重新设置banner数据\r\n|isAutoLoop(boolean)|this|是否允许自动轮播\r\n|setLoopTime(long)|this|设置轮播间隔时间（默认3000毫秒）\r\n|setScrollTime(long)|this|设置轮播滑动的时间（默认800毫秒）\r\n|start()|this|开始轮播(主要配合生命周期使用)，或者你手动暂停再次启动\r\n|stop()|this|停止轮播(主要配合生命周期使用)，或者你需要手动暂停\r\n|setAdapter(T extends BannerAdapter)|this|设置banner的适配器\r\n|setAdapter(T extends BannerAdapter,boolean)|this|设置banner的适配器,是否支持无限循环\r\n|setOrientation(@Orientation)|this|设置banner轮播方向(垂直or水平)\r\n|setOnBannerListener(this)|this|设置点击事件，下标是从0开始\r\n|addOnPageChangeListener(this)|this|添加viewpager2的滑动监听\r\n|setPageTransformer(PageTransformer)|this|设置viewpager的切换效果\r\n|addPageTransformer(PageTransformer)|this|添加viewpager的切换效果（可以设置多个）\r\n|setIndicator(Indicator)|this|设置banner轮播指示器(提供有base和接口，可以自定义)\r\n|setIndicator(Indicator,boolean)|this|设置指示器（传false代表不将指示器添加到banner上，配合布局文件，可以自我发挥）\r\n|setIndicatorSelectedColor(@ColorInt)|this|设置指示器选中颜色\r\n|setIndicatorSelectedColorRes(@ColorRes)|this|设置指示器选中颜色\r\n|setIndicatorNormalColor(@ColorInt)|this|设置指示器默认颜色\r\n|setIndicatorNormalColorRes(@ColorRes)|this|设置指示器默认颜色\r\n|setIndicatorGravity(@IndicatorConfig.Direction)|this|设置指示器位置（左，中，右）\r\n|setIndicatorSpace(int)|this|设置指示器之间的间距\r\n|setIndicatorMargins(IndicatorConfig.Margins)|this|设置指示器的Margins\r\n|setIndicatorWidth(int,int)|this|设置指示器选中和未选中的宽度，直接影响绘制指示器的大小\r\n|setIndicatorNormalWidth(int)|this|设置指示器未选中的宽度\r\n|setIndicatorSelectedWidth(int)|this|设置指示器选中的宽度\r\n|setIndicatorRadius(int)|this|设置指示器圆角，不要圆角可以设置为0\r\n|setIndicatorHeight(int)|this|设置指示器高度\r\n|setBannerRound(float)|this|设置banner圆角（还有一种setBannerRound2方法，需要5.0以上）\r\n|setBannerGalleryEffect(int,int,float)|this|画廊效果\r\n|setBannerGalleryMZ(int,float)|this|魅族效果\r\n|setStartPosition(int)|this|设置开始的位置 (需要在setAdapter或者setDatas之前调用才有效哦)\r\n|setIndicatorPageChange()|this|设置指示器改变监听 (一般是为了配合数据操作使用，看情况自己发挥)\r\n|setCurrentItem()|this|设置当前位置，和原生使用效果一样\r\n|addBannerLifecycleObserver()|this|给banner添加生命周期观察者，内部自动管理banner的生命周期\r\n\r\n\r\n## Attributes属性\r\n>在banner布局文件中调用,如果你自定义了indicator请做好兼容处理。\r\n下面的属性并不是每个指示器都用得到，所以使用时要注意！\r\n\r\n|Attributes|format|describe\r\n|---|---|---|\r\n|banner_loop_time|integer|轮播间隔时间，默认3000\r\n|banner_auto_loop|boolean|是否自动轮播，默认true\r\n|banner_infinite_loop|boolean|是否支持无限循环（即首尾直接过渡），默认true\r\n|banner_orientation|enum|轮播方向：horizontal（默认） or vertical\r\n|banner_radius|dimension|banner圆角半径，默认0（不绘制圆角）\r\n|banner_indicator_normal_width|dimension|指示器默认的宽度，默认5dp （对RoundLinesIndicator无效）\r\n|banner_indicator_selected_width|dimension|指示器选中的宽度，默认7dp \r\n|banner_indicator_normal_color|color|指示器默认颜色，默认0x88ffffff\r\n|banner_indicator_selected_color|color|指示器选中颜色，默认0x88000000\r\n|banner_indicator_space|dimension|指示器之间的间距，默认5dp （对RoundLinesIndicator无效）\r\n|banner_indicator_gravity|dimension|指示器位置，默认center\r\n|banner_indicator_margin|dimension|指示器的margin,默认5dp，不能和下面的同时使用\r\n|banner_indicator_marginLeft|dimension|指示器左边的margin\r\n|banner_indicator_marginTop|dimension|指示器上边的margin\r\n|banner_indicator_marginRight|dimension|指示器右边的margin\r\n|banner_indicator_marginBottom|dimension|指示器下边的margin\r\n|banner_indicator_height|dimension|指示器高度（对CircleIndicator无效）\r\n|banner_indicator_radius|dimension|指示器圆角（对CircleIndicator无效）\r\n|banner_round_top_left|boolean|设置要绘制的banner圆角方向（如果都不设置默认全部）\r\n|banner_round_top_right|boolean|设置要绘制的banner圆角方向（如果都不设置默认全部）\r\n|banner_round_bottom_left|boolean|设置要绘制的banner圆角方向（如果都不设置默认全部）\r\n|banner_round_bottom_right|boolean|设置要绘制的banner圆角方向（如果都不设置默认全部）\r\n\r\n\r\n\r\n## 使用步骤\r\n>以下提供的是最简单的步骤，需要复杂的样式自己可以自定义\r\n\r\n#### Step 1.依赖banner\r\nGradle \r\n```groovy\r\n\r\nrepositories {\r\n    maven { url \"https://s01.oss.sonatype.org/content/groups/public\" }\r\n}\r\n\r\ndependencies{\r\n    //2.1.0以前jcenter的依赖\r\n    //implementation 'com.youth.banner:banner:2.1.0'\r\n    //现在Maven Central\r\n    implementation 'io.github.youth5201314:banner:2.2.3'\r\n\r\n}\r\n```\r\n\r\n#### Step 2.添加权限到你的 AndroidManifest.xml\r\n```xml\r\n<!-- if you want to load images from the internet -->\r\n<uses-permission android:name=\"android.permission.INTERNET\" /> \r\n\r\n```\r\n\r\n#### Step 3.在布局文件中添加Banner，可以设置自定义属性\r\n！！！此步骤可以省略，可以直接在Activity或者Fragment中new Banner();\r\n```xml\r\n<com.youth.banner.Banner\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:id=\"@+id/banner\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"高度自己设置\" />\r\n```\r\n\r\n#### Step 4.继承BannerAdapter，和RecyclerView的Adapter一样（如果你只是图片轮播也可以使用默认的）\r\n！！！此步骤可以省略，图片轮播提供有默认适配器，其他的没有提供是因为大家的可变性要求不确定，所以直接自定义的比较好。\r\n```java\r\n\r\n/**\r\n * 自定义布局，下面是常见的图片样式，更多实现可以看demo，可以自己随意发挥\r\n */\r\npublic class ImageAdapter extends BannerAdapter<DataBean, ImageAdapter.BannerViewHolder> {\r\n\r\n    public ImageAdapter(List<DataBean> mDatas) {\r\n        //设置数据，也可以调用banner提供的方法,或者自己在adapter中实现\r\n        super(mDatas);\r\n    }\r\n\r\n    //创建ViewHolder，可以用viewType这个字段来区分不同的ViewHolder\r\n    @Override\r\n    public BannerViewHolder onCreateHolder(ViewGroup parent, int viewType) {\r\n        ImageView imageView = new ImageView(parent.getContext());\r\n        //注意，必须设置为match_parent，这个是viewpager2强制要求的\r\n        imageView.setLayoutParams(new ViewGroup.LayoutParams(\r\n                ViewGroup.LayoutParams.MATCH_PARENT,\r\n                ViewGroup.LayoutParams.MATCH_PARENT));\r\n        imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\r\n        return new BannerViewHolder(imageView);\r\n    }\r\n\r\n    @Override\r\n    public void onBindView(BannerViewHolder holder, DataBean data, int position, int size) {\r\n        holder.imageView.setImageResource(data.imageRes);\r\n    }\r\n\r\n    class BannerViewHolder extends RecyclerView.ViewHolder {\r\n        ImageView imageView;\r\n\r\n        public BannerViewHolder(@NonNull ImageView view) {\r\n            super(view);\r\n            this.imageView = view;\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n#### Step 5.Banner具体方法调用 \r\n\r\n```java\r\npublic class BannerActivity extends AppCompatActivity {\r\n    public void useBanner() {\r\n        //--------------------------简单使用-------------------------------\r\n        banner.addBannerLifecycleObserver(this)//添加生命周期观察者\r\n                .setAdapter(new BannerExampleAdapter(DataBean.getTestData()))\r\n                .setIndicator(new CircleIndicator(this));\r\n        \r\n        //—————————————————————————如果你想偷懒，而又只是图片轮播————————————————————————\r\n         banner.setAdapter(new BannerImageAdapter<DataBean>(DataBean.getTestData3()) {\r\n                    @Override\r\n                    public void onBindView(BannerImageHolder holder, DataBean data, int position, int size) {\r\n                        //图片加载自己实现\r\n                        Glide.with(holder.itemView)\r\n                             .load(data.imageUrl)\r\n                             .apply(RequestOptions.bitmapTransform(new RoundedCorners(30)))\r\n                             .into(holder.imageView);\r\n                    }\r\n                })\r\n                .addBannerLifecycleObserver(this)//添加生命周期观察者\r\n                .setIndicator(new CircleIndicator(this));\r\n        //更多使用方法仔细阅读文档，或者查看demo\r\n    }\r\n}\r\n```\r\n\r\n## Banner使用中优化体验\r\n**如果你需要考虑更好的体验，可以看看下面的代码**\r\n#### Step 1.（可选）生命周期改变时\r\n```java\r\npublic class BannerActivity {\r\n  \r\n    //方法一：自己控制banner的生命周期\r\n    \r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        //开始轮播\r\n        banner.start();\r\n    }\r\n    \r\n    @Override\r\n    protected void onStop() {\r\n        super.onStop();\r\n        //停止轮播\r\n        banner.stop();\r\n    }\r\n    \r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n        //销毁\r\n        banner.destroy();\r\n    }\r\n    \r\n    //方法二：调用banner的addBannerLifecycleObserver()方法，让banner自己控制\r\n   \r\n    protected void onCreate(Bundle savedInstanceState) {\r\n         //添加生命周期观察者\r\n        banner.addBannerLifecycleObserver(this);\r\n    }\r\n}\r\n```\r\n\r\n\r\n## 常见问题（收录被反复询问的问题）\r\n\r\n* 网络图片加载不出来？\r\n\r\n  `banner本身不提供图片加载功能，首先确认banner本身使用是否正确，具体参考demo，\r\n  然后请检查你的图片加载框架或者网络请求框架，服务端也可能加了https安全认证，是看下是否报有证书相关错误`\r\n  \r\n* 怎么实现视频轮播？\r\n\r\n  `demo中有实现类似淘宝商品详情的效果，第一个放视频，后面的放的是图片，并且可以设置首尾不能滑动。\r\n  因为大家使用的播放器不一样业务环境也不同，具体情况自己把握，demo就是给一个思路哈！可以参考和修改`\r\n\r\n* 我想指定轮播开始的位置？\r\n\r\n  `现在提供了setStartPosition()方法，在sheAdapter和setDatas直接调用一次就行了，当然setAdapter后通过setCurrentItem设置也行`\r\n\r\n* 父控件滑动时，banner切换会获取焦点，然后自动全部显示。不想让banner获取焦点可以给父控件加上：\r\n\r\n    ```\r\n        //banner也一定要用最新版哦！\r\n        android:focusable=\"true\"\r\n        android:focusableInTouchMode=\"true\"\r\n    ```\r\n* 怎么设置圆角？\r\n  1、调用提供的方法或者自定义属性进行设置，这里设置的是banner本身的圆角，不是轮播内view的圆角\r\n  2、在adapter中对自定义的view进行自己实现，就拿图片举例：可以自己定义一个圆角的ImageView控件，或者使用glide渲染都行。请举一反三，view都自定义了还有什么不能改的？\r\n  \r\n    \r\n## Thanks\r\n\r\n- [MZBannerView](https://github.com/pinguo-zhouwei/MZBannerView)\r\n- [MagicViewPager](https://github.com/hongyangAndroid/MagicViewPager)\r\n- [zguop的viewpager2的滑动时间解决方案](https://github.com/zguop/banner/blob/master/pager2banner/src/main/java/com/to/aboomy/pager2banner/Banner.java)\r\n\r\n\r\n### 联系方式  <a target=\"_blank\" href=\"http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&email=KBkYGhAfGhEYEB5oWVkGS0dF\" style=\"text-decoration:none;\"><img src=\"images/mailme.png\"/></a>\r\n* 我的个人微博：https://weibo.com/u/3013494003 有兴趣的也可以关注，大家一起交流\r\n* 有问题可以加群大家一起交流，如果你觉得对你有帮助可以扫描下面支付宝二维码随意打赏下哦！\r\n\r\n<img src=\"images/qq.png\" width=\"220\"/> <img src=\"images/pay.jpg\" width=\"220\"/>\r\n\r\n\r\n## 更新说明\r\n[更新说明](update_message.md)\r\n\r\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "banner",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.9794921875,
          "content": "\nbuildscript {\n    ext {\n        kotlin_version = '1.7.0'\n    }\n    repositories {\n        maven { url 'https://maven.aliyun.com/repository/public/' }\n        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }\n        maven { url 'https://jitpack.io' }\n        maven { url \"https://s01.oss.sonatype.org/content/groups/public\" }\n        google()\n    }\n    dependencies {\n\n        classpath 'com.android.tools.build:gradle:7.1.1'\n        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.3'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n\n    }\n}\n\nallprojects {\n    repositories {\n        maven { url 'https://maven.aliyun.com/repository/public/' }\n        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }\n        maven { url 'https://jitpack.io' }\n        maven { url \"https://s01.oss.sonatype.org/content/groups/public\" }\n        mavenCentral()\n        google()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.052734375,
          "content": "include ':app'\ninclude ':banner'\ninclude ':usekotlin'\n"
        },
        {
          "name": "update_message.md",
          "type": "blob",
          "size": 5.009765625,
          "content": "\n## 更新说明\n#### v2.2.3\n    * 修改adapter 数据相关操作方法\n    * banner 去掉泛型返回\n    * demo 添加更新数据注释\n    * 更新viewpager2到beta2\n\n#### v2.2.1-2.2.2\n   * 对kotlin使用的兼容支持\n   * 对kotlin使用demo进行了修改\n   * 新版本都将迁移至MavenCentral\n   * 更新viewpager2到1.1.0-alpha01\n   * 修改bug\n   \n#### v2.2.0\n   * 自定义属性中增加可选择设置banner圆角的具体方向\n   * 增加DrawableIndicator指示器,支持直接设置图片了，可以通过构造方法或者自定义属性设置\n   * 合并ZakAnun朋友提交的优化监听器的设置以及减少 onPageScrolled 回调\n   * 对demo进行了修改\n   * 新的版本迁移将至jitpack仓库\n\n#### v2.1.0\n   * 修改banner圆角锯齿\n   * 修改画廊支持左右不同的大小\n   * 内置增加了默认的图片适配器，方便偷懒的人，但是其他类型的没有内置是因为可变性太高了，大家自定义就好\n   * 自定义参数全部修改成banner_开头了，避免和其他库冲突。麻烦使用的大家修改下！\n\n#### v2.0.12\n   * 修改了new banner时无默认参数的问题\n   * 自带的指示器支持选中和默认的宽度\n   * setAdapter支持设置是否无限循环\n   \n#### v2.0.11\n   * 合并了lvshaojun朋友提交的代码\n    \n#### v2.0.9\n   * 增加了addBannerLifecycleObserver()方法，给banner添加生命周期观察者，将生命周期交给banner自己处理，\n     你也可以不使用这种方式自己象以前的方式自己控制，具体可以参考文档和demo\n   * 修改了DepthPageTransformer效果，现在使用这种效果返回的位置应该没有问题了\n   * 其他优化\n\n#### v2.0.8\n   * 修复bug\n   * 增加混淆配置\n\n#### v2.0.7\n   * 修复画廊问题\n   * 增加了多种PageTransformer\n   * 增加滑动距离方法\n   * demo中提供了adapter数据操作示例\n   * 工具类中增加view圆角裁剪方法\n   * 增加魅族轮播效果\n\n#### v2.0.6\n   * 修复指示器无法设置为白色问题\n   * 新增销毁方法\n   * 调小滑动距离\n\n#### v2.0.5\n   * demo中增加tv遥控器控件切换，我没有真机测试，所以只放到了demo中，使用的朋友有TV真机的帮忙测试下反馈给我哈！\n   * 增加了view的添加和分离回调时，分别暂停和开始轮播，主要解决滑动嵌套时不可见轮播。这个也可以自己监听实现哈\n    \n#### v2.0.3-2.0.4\n    banner 修复了几个紧急bug，圆角绘制引起的残影和焦点问题，替换layoutmanager为null的异常\n \n#### v2.0.2\n    banner bug修复\n * 有朋友想要在引导页使用banner，所以增加了is_infinite_loop属性来控制是否能无限循环\n * 增加了设置开始轮播位置的方法\n * 修复圆角裁剪和首次设置开始位置不对的bug\n * demo中增加了类似淘宝详情banner的案例，第一个放视频，不能无限循环\n * 设置指示器方法调整，demo增加自定义数字指示器案例\n * 对ProxyLayoutManger进行的优化\n\n#### v2.0.1\n    banner bug修改\n * 解决一系列嵌套banner的事件冲突和解决方案\n （如果我没有考虑到的场景，大家再反馈或者提交方案）\n\n#### v2.0.0\n    banner 正式版发布\n * 改变banner圆角实现方式，兼容低版本\n * 新增两种指示器效果，基本能满足大部分需求了\n\n#### v2.0.0-beta\n    banner 测试版发布\n * 修改banner内部轮播逻辑\n * 增加设置画廊效果方法\n * 内置有2种官方Transformer效果，更多效果你可以自定义\n * 优化切换事件和点击事件,去掉onBannerChanged方法\n * 新增轮播滑动时间控制，感谢zguop，这里的具体实现方法来自zguop的项目\n * 支持多PageTransformer组合设置\n\n#### v2.0.0-alpha03\n    banner 预览版使用中的问题优化。\n    这里要感谢BoldFruit朋友修复了一个bug；我爷爷得了癌症住院了需要照顾，公司事情也多，所以更新频率会慢很多。希望大家理解！\n    不过我更希望大家要是发现bug，亦可以自己修复提交，有什么想法新增的功能也可以提交过来。可以提供一个良好的开源环境哈！\n    还有不要一直夺命连环催，大家都有自己的事情，多多理解！\n    \n * 增加支持布局文件中使用自定义指示器了（自己发挥）\n * 增加支持Android5.0以上的设置banner圆角方法\n * 其他问题修复（有些实在是不好复现加上有点忙，只修改了部分bug）\n\n#### v2.0.0-alpha02\n    banner 预览版使用中的问题优化\n * #666 修改orientation自定义属性与其他库冲突问题：改成banner_orientation\n * 增加RecyclerView嵌套banner和ConstraintLayout中使用banner测试demo\n * #669 RecyclerView嵌套banner 轮播优化代码建议，demo中可以查看\n * 其他问题修复\n\n#### v2.0.0-alpha\n    banner 2.0全新基础升级，目前是预览版，使用中的问题慢慢迭代\n *  使用了ViewPager2为基础控件  \n * 支持了androidx兼容包\n * 方便了UI、Indicator自定义（现在还是基础版本，后面再提升）\n * 依赖包目前只需要导入了ViewPager2\n"
        },
        {
          "name": "usekotlin",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}