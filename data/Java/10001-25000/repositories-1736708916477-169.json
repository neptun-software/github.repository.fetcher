{
  "metadata": {
    "timestamp": 1736708916477,
    "page": 169,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JessYanCoding/MVPArms",
      "stars": 10281,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.458984375,
          "content": "# Built application files\n*.apk\n*.ap_\n\n# Files for the ART/Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\nout/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# Android Studio Navigation editor temp files\n.navigation/\n\n# Android Studio captures folder\ncaptures/\n\n# Intellij\n*.iml\n.idea\n\n# Keystore files\n*.jks\n\n# MacOS\n.DS_Store\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.642578125,
          "content": "language: android\njdk: oraclejdk8\nbefore_install:\n  - yes | sdkmanager \"platforms;android-28\"\n\nenv:\n  global:\n    - ANDROID_API_LEVEL=28\n    - ANDROID_BUILD_TOOLS_VERSION=28.0.3\n    - TRAVIS_SECURE_ENV_VARS=true\n\nandroid:\n  components:\n    # The BuildTools version used by your project\n    - tools\n    - platform-tools\n    - build-tools-$ANDROID_BUILD_TOOLS_VERSION\n    - extra-android-m2repository\n    - extra-google-android-support\n\n    # The SDK version used to compile your project\n    - android-$ANDROID_API_LEVEL\n  licenses:\n    - '.+'\n\nscript:\n  - ./gradlew clean\n  #    - ./gradlew install\n  #    - ./gradlew bintrayUpload\n  - ./gradlew assembleDebug"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.06640625,
          "content": "[UpdateLog](https://github.com/JessYanCoding/MVPArms/wiki/UpdateLog)"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1376953125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting jess.yan.effort@gmail.com. All complaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.166015625,
          "content": "# Contributing\nIf you would like to contribute code you can do so through GitHub by forking the repository and sending a pull request targeting the branch `master`.\n\nWhen submitting code, please make every effort to follow existing conventions and style in order to keep the code as readable as possible.\n\n## License\n\nBy contributing your code, you agree to license your contribution under the terms of the APLv2: https://github.com/JessYanCoding/MVPArms/blob/master/LICENSE\n\nAll files are released with the Apache 2.0 license.\n\nIf you are adding a new file it should have a header like this:\n\n```\n/*\n * Copyright 2018 JessYan\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n ```"
        },
        {
          "name": "CONTRIBUTING_APP.md",
          "type": "blob",
          "size": 3.2333984375,
          "content": "**如果您使用或基于 MVPArms 开发过开源的 APP 或者 Framework, 恳请您将项目地址 [Pull Request](https://github.com/JessYanCoding/MVPArms/pull/new/master) 到这个页面, 方便更多人学习的同时, 也能为您的开源项目引入更多的流量, 也衷心的希望大家在学习 MVPArms 获得自我提升的同时, 也能帮助其他朋友更快的成长, 将开源精神传递下去!**\n\n**同时您也可以给自己的开源项目打上 mvparms 的标签，这样大家就能在 [Topics](https://github.com/topics/mvparms) 中找到您的开源项目**\n\n> **Tips: 以下项目并不能百分百保证完全按照框架的正规流程和正确配置, 大家可以作为参考, 但主要还是以官方 Demo 为准**\n\n<!-- 格式为: [**项目名字** : 项目描述](项目地址) -->\n### App\n#### Kotlin\n* [**养眼** : 这是一个基于 **MVPArms** 使用 **kotlin** 开发的 **看图 App** (**程序媛建议路过**) ](https://github.com/miaoMiaoDaShi/YangYanNew)\n* [**NoblesSpiritsKotlin** : 这是一个基于 **MVPArms** 使用 **kotlin** 开发的 **Mall App**](https://github.com/haife/NoblesSpiritsKotlin)\n\n#### Java\n* [**Hands-Chopping** : 这是一个基于 **MVPArms + ArmsComponent** 开发的包含 **Steam** 和 **杉果** 的组件化客户端](https://github.com/noterpopo/Hands-Chopping)\n* [**YeLearns** : 这是一个基于 **MVPArms** 开发的包含 **玩安卓、DIYcode、干货、微信资讯、游明星空** 等多个模块的客户端](https://github.com/yeyueduxing/YeLearns)\n* [**LQRBiliBlili** : 这是一个基于 **MVPArms** 开发的高仿 **bilibili** 安卓客户端 (**!!!请注意, 此项目在 GlobalConfiguration 中的部分配置是不正确的, 特别是对 Retrofit 的配置, 如非特殊需求, 请不要再一次给 Retrofit 设置新的 OkHttpClient, 框架内部已提供有 OkHttpClient, 请以官方 Demo 为准**)](https://github.com/GitLqr/LQRBiliBlili)\n* [**DiyCode** : 这是一个基于 **MVPArms** 开发的 **DiyCode** 社区客户端](https://github.com/linsneider/DiyCodeAndroid)\n* [**Ganamrs** : 这是一个基于 **MVPArms** 开发的 **Gank** 开源客户端](https://github.com/lianhuo/Ganamrs)\n* [**P2P** : 这是一个基于 **MVPArms** 开发的 **金融** 客户端](https://github.com/Everglowzz/P2P)\n* [**ZackShop** : 这是一个基于 **MVPArms** 开发的 **仿京东** 客户端](https://github.com/zhangqian666/shop-front-android)\n\n### Framework\n* [**MVPFrames** : 这个项目是将 **MVPArms** 框架和 **MVPArt** 框架合并成一个通用型项目, 并增加了数据库](https://github.com/DesignQu/MVPFrames)\n* [**MVVMArms** : Android MVVM Architecture Components based on **MVPArms** and **Android Architecture Components**.](https://github.com/xiaobailong24/MVVMArms)\n* [**smartframework-android-atlas** : 这是一个将 **MVPArms** 框架和 **Atlas** 框架相结合的组件化 **MVP** 框架](https://github.com/smarthane/smartframework-android-atlas)\n* [**smartframework-android** : 这是一个将 **MVPArms** 框架和 **VirtualAPK** 框架相结合的插件化 **MVP** 框架](https://github.com/smarthane/smartframework-android)\n* [**Atoms-mvp** : 这是一个参考 **MVPArms** 框架, 将自己对框架的理解相结合的 **MVP** 框架](https://github.com/xwc520/Atoms-mvp)\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MVPArms.md",
          "type": "blob",
          "size": 10.8173828125,
          "content": "![Logo](image/arms_banner_v1.0.jpg)\n![Official](image/official.jpeg)\n\n<p align=\"center\">\n   <a href=\"https://bintray.com/jessyancoding/maven/MVPArms/_latestVersion\">\n    <img src=\"https://img.shields.io/badge/Jcenter-v2.5.2-brightgreen.svg?style=flat-square\" alt=\"Latest Stable Version\" />\n  </a>\n  <a href=\"https://travis-ci.org/JessYanCoding/MVPArms\">\n    <img src=\"https://travis-ci.org/JessYanCoding/MVPArms.svg?branch=master\" alt=\"Build Status\" />\n  </a>\n  <a href=\"https://developer.android.com/about/versions/android-4.0.html\">\n    <img src=\"https://img.shields.io/badge/API-14%2B-blue.svg?style=flat-square\" alt=\"Min Sdk Version\" />\n  </a>\n  <a href=\"http://www.apache.org/licenses/LICENSE-2.0\">\n    <img src=\"http://img.shields.io/badge/License-Apache%202.0-blue.svg?style=flat-square\" alt=\"License\" />\n  </a>\n  <a href=\"https://www.jianshu.com/u/1d0c0bc634db\">\n    <img src=\"https://img.shields.io/badge/Author-JessYan-orange.svg?style=flat-square\" alt=\"Author\" />\n  </a>\n  <a href=\"https://shang.qq.com/wpa/qunwpa?idkey=7e59e59145e6c7c68932ace10f52790636451f01d1ecadb6a652b1df234df753\">\n    <img src=\"https://img.shields.io/badge/QQ%E7%BE%A4-455850365%20%7C%20301733278-orange.svg?style=flat-square\" alt=\"QQ Group\" />\n  </a>\n</p>\n\n<h2 align=\"center\">一个整合了大量主流开源项目高度可配置化的 Android MVP 快速集成框架</h2>\n\n## Usage\n> New Project (**以下步骤太麻烦? 现在可直接在新建的新工程中使用新功能 [一键生成 app Module](https://github.com/JessYanCoding/MVPArms-Module-Template), 让您免于项目繁琐的配置，快速开启 MVPArms 的世界**)\n>> 如果您想构建一个全新的项目，直接将整个项目 **clone** (或者下载) 下来，再将 **demo** 作为主 **Module** (建议将 **arms Module** 删除，并使用 **Gradle** [远程依赖](https://github.com/JessYanCoding/MVPArms/wiki#1.1) 本框架，便于更新，删除前请务必先查看 [这里](https://github.com/JessYanCoding/MVPArms/wiki/Issues#2))，最后将项目包名改成自己的包名，**demo Module** 包含可以直接使用的包结构，一个主流的 `MVP`+`Dagger2`+`Retrofit`+`RxJava` 框架就这样轻松的构建成功了，现在您再参考 **Mvp** 包下的 **UserActivity** 的格式，[使用 Template 一键生成 MVP、Dagger2 相关的所有类](https://github.com/JessYanCoding/MVPArmsTemplate)，配合查阅 [Wiki 文档](https://github.com/JessYanCoding/MVPArms/wiki) 慢慢掌握本框架，看再多文章不如早点在项目中使用它，在实践中学习总是最快的\n \n> Old Project\n>> [老项目想引入此框架，可以参考 Wiki 文档，写的非常详细](https://github.com/JessYanCoding/MVPArms/wiki)\n\n## Wiki\n[详细使用方法及扩展功能，请参照 Wiki (**开发前必看!!!**)](https://github.com/JessYanCoding/MVPArms/wiki)\n\n## Notice\n\n* [**MVPArms 官方组件化方案 ArmsComponent**](https://github.com/JessYanCoding/ArmsComponent/wiki)\n\n* [MVPArms 学习项目](https://github.com/JessYanCoding/MVPArms/blob/master/CONTRIBUTING_APP.md)\n\n* [意见收集](https://github.com/JessYanCoding/MVPArms/issues/40)\n\n* [更新日志](https://github.com/JessYanCoding/MVPArms/wiki/UpdateLog)\n\n* [常见 Issues](https://github.com/JessYanCoding/MVPArms/wiki/Issues)\n\n* [我们为什么要把 Dagger2，MVP 以及 RxJava 引入项目中?](http://www.jianshu.com/p/91c2bb8e6369)\n\n* 看了上面的文章，对为什么使用这些技术应该比较了解了，使用这些技术对项目后期的维护和迭代特别是大型项目非常有帮助，但是在开发前期每写一个页面要多写很多  `MVP`、`Dagger2` 的类和接口，这对于开发前期确实比较头疼，现在本框架已经可以通过 [Template](https://github.com/JessYanCoding/MVPArmsTemplate) 自动生成一些 `MVP`，`Dagger2` 的模版代码，现在大家可以非常轻松的使用本框架.\n\n* 使用此框架自带自动屏幕适配功能 (可不使用)，请参考 [AndroidAutoSize 使用方法](https://github.com/JessYanCoding/AndroidAutoSize).\n\n* 作为通用框架，本框架不提供与 **UI** 有关的任何第三方库.\n\n## Functionality & Libraries\n1. [`Mvp` 是 Google 官方出品的 `Mvp` 架构项目，含有多个不同的架构分支(此为 Dagger 分支).](https://github.com/googlesamples/android-architecture/tree/todo-mvp-dagger/)\n2. [`Dagger2` 是 Google 根据 Square 的 Dagger1 出品的依赖注入框架，通过 Apt 编译时生成代码，性能优于使用运行时反射技术的依赖注入框架.](https://github.com/google/dagger)\n3. [`RxJava` 提供优雅的响应式 API 解决异步请求以及事件处理.](https://github.com/ReactiveX/RxJava)\n4. [`RxAndroid` 为 Android 提供响应式 API.](https://github.com/ReactiveX/RxAndroid)\n5. [`Rxlifecycle`，在 Android 上使用 `RxJava` 都知道的一个坑，就是生命周期的解除订阅，这个框架通过绑定 Activity 和 Fragment 的生命周期完美解决该问题.](https://github.com/trello/RxLifecycle)\n6. [`RxCache` 是使用注解，为 `Retrofit` 加入二级缓存 (内存，磁盘) 的缓存库.](https://github.com/VictorAlbertos/RxCache)\n7. [`RxErroHandler` 是 `RxJava` 的错误处理库，可在出现错误后重试.](https://github.com/JessYanCoding/RxErrorHandler)\n8. [`RxPermissions` 用于处理 Android 运行时权限的响应式库.](https://github.com/tbruyelle/RxPermissions)\n9. [`Retrofit` 是 Square 出品的网络请求库，极大的减少了 Http 请求的代码和步骤.](https://github.com/square/retrofit)\n10. [`Okhttp` 同样 Square 出品，不多介绍，做 Android 的都应该知道.](https://github.com/square/okhttp)\n11. [`AndroidAutoSize` 是今日头条屏幕适配方案终极版，一个极低成本的 Android 屏幕适配方案，该库没有引入到 `Arms`，所以框架使用者可自由选择屏幕适配方案.](https://github.com/JessYanCoding/AndroidAutoSize)\n12. [`Gson` 是 Google 官方的 Json Convert 框架.](https://github.com/google/gson)\n13. [`Butterknife` 是 JakeWharton 大神出品的 View 注入框架.](https://github.com/JakeWharton/butterknife)\n14. [`AndroidEventBus` 是一个轻量级的 EventBus，该库没有引入到 `Arms`，所以框架使用者可自由选择 EventBus.](https://github.com/hehonghui/AndroidEventBus)\n15. [`Timber` 是 JakeWharton 大神出品的 Log 框架容器，内部代码极少，但是思想非常不错.](https://github.com/JakeWharton/timber)\n16. [`Glide` 是本框架默认封装到扩展库 `arms-imageloader-glide` 中的图片加载库，可参照着 Wiki 更改为其他的图片加载库，`Glide` 的 API 和 `Picasso` 差不多，缓存机制比 `Picasso` 复杂，速度快，适合处理大型图片流，支持 gif 图片，`Fresco` 太大了！在 5.0 以下优势很大，5.0 以上系统默认使用的内存管理和 `Fresco` 类似.](https://github.com/bumptech/glide)\n17. [`LeakCanary` 是 Square 出品的专门用来检测 `Android` 和 `Java` 的内存泄漏，并通过通知栏提示内存泄漏信息.](https://github.com/square/leakcanary)\n\n## Who is using MVPArms?\n\n**MVPArms** 从诞生之初, 一直真诚的为开发者做着力所能及的事, 从详细的 [**Wiki**文档](https://github.com/JessYanCoding/MVPArms/wiki) 到高效的 [代码生成器](https://github.com/JessYanCoding/MVPArmsTemplate), 无一不透露着 **MVPArms** 对开发者诚挚的付出和关怀\n\n**MVPArms** 经过近两年时间殷勤的耕耘, 逐渐变得成熟, 稳定, 这不得不归功于 **MVPArms** 大家庭中每一位成员一直以来真诚的反馈和建议, 在此由衷的感谢他们为 **MVPArms** 做出的不可磨灭的贡献  \n\n但是 **MVPArms** 远不止于此, 还有更多的路要走, 还会继续成长, 变得更加强大, 现在我们诚挚的邀请您也成为咱们 **MVPArms** 大家庭中的一员  \n\n**天府通** | **小顶家装 工长端** | **小顶家装 工人端** | **小顶家装 材料端** | **小顶网** |\n:-------------------------------------------------------------------:|:----------:|:---------------:|:--------:|:--------------:|\n[<img src=\"image/tianfutong_logo.png\" width=\"80\" height=\"80\">](https://android.myapp.com/myapp/detail.htm?apkName=com.chinarainbow.tft) | [<img src=\"image/xiaoding_foreman_logo.png\" width=\"80\" height=\"80\">](http://www.dggxdjz.com) | [<img src=\"image/xiaoding_worker_logo.png\" width=\"80\" height=\"80\">](http://www.dggxdjz.com) | [<img src=\"image/xiaoding_material_logo.png\" width=\"80\" height=\"80\">](http://www.dggxdjz.com) | [<img src=\"image/top_net_work_logo.png\" width=\"80\" height=\"80\">](http://www.dgg.net/appload.htm) |\n**天天视频** | **天天直播** | **中斗通航** | **中斗祥云** | **麋鹿旅行** |\n[<img src=\"image/tiantian_video_logo.png\" width=\"80\" height=\"80\">](http://sj.qq.com/myapp/detail.htm?apkName=com.dzwh.ttys) | [<img src=\"image/tiantian_live_logo.png\" width=\"80\" height=\"80\">](http://www.25pp.com/android/detail_7611392/) | [<img src=\"image/tong_hang_logo.png\" width=\"80\" height=\"80\">](https://fir.im/3176) | <img src=\"image/xiang_yun_logo.png\" width=\"80\" height=\"80\">  | [<img src=\"image/mi_lu_logo.png\" width=\"80\" height=\"80\">](http://android.myapp.com/myapp/detail.htm?apkName=com.elk.tourist) |\n**汇财富** | **觅窝** | **晒墨宝** | **智播**  | **(Your App ...)** |\n[<img src=\"image/hui_cai_fu_logo.png\" width=\"80\" height=\"80\">](http://android.myapp.com/myapp/detail.htm?apkName=com.tahone.client) | [<img src=\"image/mi_wo_logo.png\" width=\"80\" height=\"80\">](http://miwo.ai/) | [<img src=\"image/shaimobao_logo.png\" width=\"80\" height=\"80\">](http://sj.qq.com/myapp/search.htm?kw=%E6%99%92%E5%A2%A8%E5%AE%9D)  | [<img src=\"image/zhibo_logo.png\" width=\"80\" height=\"80\">](http://www.zhibocloud.cn/) | <img src=\"image/android_logo.png\" width=\"80\" height=\"80\"> |  \n \n\n## Acknowledgements \n感谢本框架所使用到的所有三方库的 **Author** ,以及所有为 **Open Source** 做无私贡献的 **Developer** 和 **Organizations** ,使我们能更好的工作和学习,本人也会将业余时间回报给开源社区\n\n## Donate\n如果您认可 **MVPArms** 的代码质量,并使用 **MVPArms** 在实际开发中切实的提升了您的工作效率和开发能力,请您点击右上角 **Star** 支持一下谢谢!\n\n## About Me\n* **Email**: <jess.yan.effort@gmail.com>  \n* **Home**: <http://jessyan.me>\n* **掘金**: <https://juejin.im/user/57a9dbd9165abd0061714613>\n* **简书**: <https://www.jianshu.com/u/1d0c0bc634db>\n\n## License\n``` \n Copyright 2016, jessyan       \n  \n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at \n \n       http://www.apache.org/licenses/LICENSE-2.0 \n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n"
        },
        {
          "name": "MVP_generator_solution",
          "type": "blob",
          "size": 17.890625,
          "content": "MVPArms框架自动生成MVP及Dagger2相关文件解决方案\n\n第二代模版已经开源到 https://github.com/JessYanCoding/MVPArmsTemplate ,一键生成所有文件\n\n(设置)Setting -> Editor ->  File and Code Templates -> Files 然后点击左上角绿色的+号\n\n\n下面有7个Template,将分隔符上Name: 后的字符复制到Name输入框里,将分隔符里的内容复制进下面的大输入框,复制完后在继续点+\n创建下一个,重复之前的操作,一共创建7个Template,点击右下角的ok按钮,现在在对应的包下点鼠标右键New选择项里就有刚才创建的\nTemplate了,点击对应Template,在输入框中输入名字就可以创建对应的文件\n再按照Contract->Model->Presenter->Activity->Module->Component的顺序在对应包下构建这6个模版,名字必须一样,这下\n对应页面的Dagger和Mvp类即自动生成了,就可以专注写逻辑了\n以下模版可以根据需求做相应修改\n\n\n\nName: Activity\n--------------------------------------------------------------------------------------\n\n#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != \"\")package ${PACKAGE_NAME};#end\n\nimport android.content.Intent;\nimport androidx.annotation.NonNull;\nimport android.support.annotation.Nullable;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport com.jess.arms.base.BaseActivity;\nimport com.jess.arms.utils.ArmsUtils;\n\n\nimport static com.jess.arms.utils.Preconditions.checkNotNull;\n\n/**\n  * 通过Template生成对应页面的MVP和Dagger代码,请注意输入框中输入的名字必须相同\n  * 由于每个项目包结构都不一定相同,所以每生成一个文件需要自己导入import包名,可以在设置中设置自动导入包名\n  * 请在对应包下按以下顺序生成对应代码,Contract->Model->Presenter->Activity->Module->Component\n  * 因为生成Activity时,Module和Component还没生成,但是Activity中有它们的引用,所以会报错,但是不用理会\n  * 继续将Module和Component生成完后,编译一下项目再回到Activity,按提示修改一个方法名即可\n  * 如果想生成Fragment的相关文件,则将上面构建顺序中的Activity换为Fragment,并将Component中inject方法的参数改为此Fragment\n  */\n\n#parse(\"File Header.java\")\n\npublic class ${NAME}Activity extends BaseActivity<${NAME}Presenter> implements ${NAME}Contract.View {\n\n\n    @Override\n    public void setupActivityComponent(AppComponent appComponent) {\n        Dagger${NAME}Component\n                .builder()\n                .appComponent(appComponent)\n                .${NAME}Module(new ${NAME}Module(this)) //请将${NAME}Module()第一个首字母改为小写\n                .build()\n                .inject(this);\n    }\n\n    @Override\n    public int initView(Bundle savedInstanceState) {\n        return 0;\n    }\n\n    @Override\n    public void initData(Bundle savedInstanceState) {\n\n    }\n\n\n    @Override\n    public void showLoading() {\n\n    }\n\n    @Override\n    public void hideLoading() {\n\n    }\n\n    @Override\n    public void showMessage(@NonNull String message) {\n        checkNotNull(message);\n        ArmsUtils.snackbarText(message);\n    }\n\n    @Override\n    public void launchActivity(@NonNull Intent intent) {\n        checkNotNull(intent);\n        ArmsUtils.startActivity(intent);\n    }\n\n    @Override\n    public void killMyself() {\n        finish();\n    }\n\n\n}\n\n--------------------------------------------------------------------------------------\n\n\n\n\nName: Component\n--------------------------------------------------------------------------------------\n\n#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != \"\")package ${PACKAGE_NAME};#end\n\nimport com.jess.arms.di.scope.ActivityScope;\n\nimport dagger.Component;\n\n/**\n  * 通过Template生成对应页面的MVP和Dagger代码,请注意输入框中输入的名字必须相同\n  * 由于每个项目包结构都不一定相同,所以每生成一个文件需要自己导入import包名,可以在设置中设置自动导入包名\n  * 请在对应包下按以下顺序生成对应代码,Contract->Model->Presenter->Activity->Module->Component\n  * 因为生成Activity时,Module和Component还没生成,但是Activity中有它们的引用,所以会报错,但是不用理会\n  * 继续将Module和Component生成完后,编译一下项目再回到Activity,按提示修改一个方法名即可\n  * 如果想生成Fragment的相关文件,则将上面构建顺序中的Activity换为Fragment,并将Component中inject方法的参数改为此Fragment\n  */\n\n#parse(\"File Header.java\")\n\n@ActivityScope\n@Component(modules = ${NAME}Module.class,dependencies = AppComponent.class)\npublic interface ${NAME}Component {\n    void inject(${NAME}Activity activity);\n}\n--------------------------------------------------------------------------------------\n\n\n\n\nName: Contract\n--------------------------------------------------------------------------------------\n\n#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != \"\")package ${PACKAGE_NAME};#end\n\nimport com.jess.arms.mvp.IView;\nimport com.jess.arms.mvp.IModel;\n\n/**\n  * 通过Template生成对应页面的MVP和Dagger代码,请注意输入框中输入的名字必须相同\n  * 由于每个项目包结构都不一定相同,所以每生成一个文件需要自己导入import包名,可以在设置中设置自动导入包名\n  * 请在对应包下按以下顺序生成对应代码,Contract->Model->Presenter->Activity->Module->Component\n  * 因为生成Activity时,Module和Component还没生成,但是Activity中有它们的引用,所以会报错,但是不用理会\n  * 继续将Module和Component生成完后,编译一下项目再回到Activity,按提示修改一个方法名即可\n  * 如果想生成Fragment的相关文件,则将上面构建顺序中的Activity换为Fragment,并将Component中inject方法的参数改为此Fragment\n  */\n\n#parse(\"File Header.java\")\n\npublic interface ${NAME}Contract {\n    //对于经常使用的关于UI的方法可以定义到IView中,如显示隐藏进度条,和显示文字消息\n    interface View extends IView {\n\n    }\n    //Model层定义接口,外部只需关心Model返回的数据,无需关心内部细节,即是否使用缓存\n    interface Model extends IModel{\n\n    }\n}\n--------------------------------------------------------------------------------------\n\n\nName: Fragment\n--------------------------------------------------------------------------------------\n\n#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != \"\")package ${PACKAGE_NAME};#end\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport androidx.annotation.NonNull;\nimport android.support.annotation.Nullable;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport com.jess.arms.base.BaseFragment\n\nimport com.jess.arms.utils.ArmsUtils;\n\nimport butterknife.Bind;\n\nimport static com.jess.arms.utils.Preconditions.checkNotNull;\n\n/**\n  * 通过Template生成对应页面的MVP和Dagger代码,请注意输入框中输入的名字必须相同\n  * 由于每个项目包结构都不一定相同,所以每生成一个文件需要自己导入import包名,可以在设置中设置自动导入包名\n  * 请在对应包下按以下顺序生成对应代码,Contract->Model->Presenter->Activity->Module->Component\n  * 因为生成Activity时,Module和Component还没生成,但是Activity中有它们的引用,所以会报错,但是不用理会\n  * 继续将Module和Component生成完后,编译一下项目再回到Activity,按提示修改一个方法名即可\n  * 如果想生成Fragment的相关文件,则将上面构建顺序中的Activity换为Fragment,并将Component中inject方法的参数改为此Fragment\n  */\n\n#parse(\"File Header.java\")\n\npublic class ${NAME}Fragment extends BaseFragment<${NAME}Presenter> implements ${NAME}Contract.View{\n\n\n    public static ${NAME}Fragment newInstance() {\n        ${NAME}Fragment fragment = new ${NAME}Fragment();\n        return fragment;\n    }\n\n    @Override\n    public void setupFragmentComponent(AppComponent appComponent) {\n        Dagger${NAME}Component\n                .builder()\n                .appComponent(appComponent)\n                .${NAME}Module(new ${NAME}Module(this))//请将${NAME}Module()第一个首字母改为小写\n                .build()\n                .inject(this);\n    }\n\n    @Override\n    public View initView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        return inflater.inflate(layout_id, container, false);\n    }\n\n    @Override\n    public void initData(Bundle savedInstanceState) {\n\n    }\n\n    /**\n     * 此方法是让外部调用使fragment做一些操作的,比如说外部的activity想让fragment对象执行一些方法,\n     * 建议在有多个需要让外界调用的方法时,统一传Message,通过what字段,来区分不同的方法,在setData\n     * 方法中就可以switch做不同的操作,这样就可以用统一的入口方法做不同的事\n     *\n     * 使用此方法时请注意调用时fragment的生命周期,如果调用此setData方法时onCreate还没执行\n     * setData里却调用了presenter的方法时,是会报空的,因为dagger注入是在onCreated方法中执行的,然后才创建的presenter\n     * 如果要做一些初始化操作,可以不必让外部调setData,在initData中初始化就可以了\n     *\n     * @param data\n     */\n\n    @Override\n    public void setData(Object data) {\n\n    }\n\n\n    @Override\n    public void showLoading() {\n\n    }\n\n    @Override\n    public void hideLoading() {\n\n    }\n\n    @Override\n    public void showMessage(@NonNull String message) {\n        checkNotNull(message);\n        ArmsUtils.snackbarText(message);\n    }\n\n    @Override\n    public void launchActivity(@NonNull Intent intent) {\n        checkNotNull(intent);\n        ArmsUtils.startActivity(intent);\n    }\n\n    @Override\n    public void killMyself() {\n\n    }\n\n}\n--------------------------------------------------------------------------------------\n\n\nName: Model\n--------------------------------------------------------------------------------------\n\n#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != \"\")package ${PACKAGE_NAME};#end\n\nimport android.app.Application;\nimport com.google.gson.Gson;\nimport com.jess.arms.integration.IRepositoryManager;\nimport com.jess.arms.mvp.BaseModel;\n\nimport static com.jess.arms.utils.Preconditions.checkNotNull;\nimport com.jess.arms.di.scope.ActivityScope;\nimport javax.inject.Inject;\n\n/**\n  * 通过Template生成对应页面的MVP和Dagger代码,请注意输入框中输入的名字必须相同\n  * 由于每个项目包结构都不一定相同,所以每生成一个文件需要自己导入import包名,可以在设置中设置自动导入包名\n  * 请在对应包下按以下顺序生成对应代码,Contract->Model->Presenter->Activity->Module->Component\n  * 因为生成Activity时,Module和Component还没生成,但是Activity中有它们的引用,所以会报错,但是不用理会\n  * 继续将Module和Component生成完后,编译一下项目再回到Activity,按提示修改一个方法名即可\n  * 如果想生成Fragment的相关文件,则将上面构建顺序中的Activity换为Fragment,并将Component中inject方法的参数改为此Fragment\n  */\n\n#parse(\"File Header.java\")\n\n@ActivityScope\npublic class ${NAME}Model extends BaseModel implements ${NAME}Contract.Model{\n    private Gson mGson;\n    private Application mApplication;\n\n    @Inject\n    public ${NAME}Model(IRepositoryManager repositoryManager, Gson gson, Application application) {\n        super(repositoryManager);\n        this.mGson = gson;\n        this.mApplication = application;\n    }\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        this.mGson = null;\n        this.mApplication = null;\n    }\n\n}\n\n--------------------------------------------------------------------------------------\n\n\nName: Module\n--------------------------------------------------------------------------------------\n#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != \"\")package ${PACKAGE_NAME};#end\n\nimport com.google.gson.Gson;\nimport android.app.Application;\nimport com.jess.arms.di.scope.ActivityScope;\n\nimport dagger.Module;\nimport dagger.Provides;\n\n/**\n  * 通过Template生成对应页面的MVP和Dagger代码,请注意输入框中输入的名字必须相同\n  * 由于每个项目包结构都不一定相同,所以每生成一个文件需要自己导入import包名,可以在设置中设置自动导入包名\n  * 请在对应包下按以下顺序生成对应代码,Contract->Model->Presenter->Activity->Module->Component\n  * 因为生成Activity时,Module和Component还没生成,但是Activity中有它们的引用,所以会报错,但是不用理会\n  * 继续将Module和Component生成完后,编译一下项目再回到Activity,按提示修改一个方法名即可\n  * 如果想生成Fragment的相关文件,则将上面构建顺序中的Activity换为Fragment,并将Component中inject方法的参数改为此Fragment\n  */\n\n#parse(\"File Header.java\")\n\n@Module\npublic class ${NAME}Module {\n    private ${NAME}Contract.View view;\n\n    /**\n     * 构建${NAME}Module时,将View的实现类传进来,这样就可以提供View的实现类给presenter\n     * @param view\n     */\n    public ${NAME}Module(${NAME}Contract.View view) {\n        this.view = view;\n    }\n\n    @ActivityScope\n    @Provides\n    ${NAME}Contract.View provide${NAME}View(){\n        return this.view;\n    }\n\n    @ActivityScope\n    @Provides\n    ${NAME}Contract.Model provide${NAME}Model(${NAME}Model model){\n        return model;\n    }\n}\n--------------------------------------------------------------------------------------\n\n\nName: Presenter\n--------------------------------------------------------------------------------------\n\n#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != \"\")package ${PACKAGE_NAME};#end\n\nimport android.app.Application;\nimport com.jess.arms.integration.AppManager;\nimport com.jess.arms.di.scope.ActivityScope;\nimport com.jess.arms.mvp.BasePresenter;\nimport com.jess.arms.http.imageloader.ImageLoader;\nimport me.jessyan.rxerrorhandler.core.RxErrorHandler;\nimport javax.inject.Inject;\n\n\n/**\n  * 通过Template生成对应页面的MVP和Dagger代码,请注意输入框中输入的名字必须相同\n  * 由于每个项目包结构都不一定相同,所以每生成一个文件需要自己导入import包名,可以在设置中设置自动导入包名\n  * 请在对应包下按以下顺序生成对应代码,Contract->Model->Presenter->Activity->Module->Component\n  * 因为生成Activity时,Module和Component还没生成,但是Activity中有它们的引用,所以会报错,但是不用理会\n  * 继续将Module和Component生成完后,编译一下项目再回到Activity,按提示修改一个方法名即可\n  * 如果想生成Fragment的相关文件,则将上面构建顺序中的Activity换为Fragment,并将Component中inject方法的参数改为此Fragment\n  */\n\n\n\n#parse(\"File Header.java\")\n\n@ActivityScope\npublic class ${NAME}Presenter extends BasePresenter<${NAME}Contract.Model, ${NAME}Contract.View> {\n    private RxErrorHandler mErrorHandler;\n    private Application mApplication;\n    private ImageLoader mImageLoader;\n    private AppManager mAppManager;\n\n    @Inject\n    public ${NAME}Presenter (${NAME}Contract.Model model, ${NAME}Contract.View rootView\n            , RxErrorHandler handler, Application application\n            , ImageLoader imageLoader, AppManager appManager) {\n        super(model, rootView);\n        this.mErrorHandler = handler;\n        this.mApplication = application;\n        this.mImageLoader = imageLoader;\n        this.mAppManager = appManager;\n    }\n\n    @Override\n    public void onDestroy() {\n        super.onDestroy();\n        this.mErrorHandler = null;\n        this.mAppManager = null;\n        this.mImageLoader = null;\n        this.mApplication = null;\n    }\n\n}\n\n--------------------------------------------------------------------------------------\n\n\nName: AutoView\n--------------------------------------------------------------------------------------\n#if (${PACKAGE_NAME} && ${PACKAGE_NAME} != \"\")package ${PACKAGE_NAME};#end\n\nimport android.content.Context;\nimport android.support.annotation.Nullable;\nimport android.util.AttributeSet;\nimport android.view.ViewGroup;\n\nimport com.zhy.autolayout.AutoLayoutInfo;\nimport com.zhy.autolayout.utils.AutoLayoutHelper;\n\n/**\n * 此Template用于生成AutoLayout需要的的Auto系列View,如需要使ScrollView适配,使用此Template输入ScrollView,即可生成\n * AutoScrollView,使用此View即可自适应\n * Created by jess on 16/4/14.\n */\npublic class Auto${NAME} extends ${NAME} {\n    private AutoLayoutHelper mHelper = new AutoLayoutHelper(this);\n\n    public Auto${NAME}(Context context) {\n        super(context);\n    }\n\n    public Auto${NAME}(Context context, @Nullable AttributeSet attrs) {\n        super(context, attrs);\n    }\n\n    public Auto${NAME}(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec)\n    {\n        if (!isInEditMode())\n            mHelper.adjustChildren();\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n    }\n\n\n    @Override\n    protected void onLayout(boolean changed, int l, int t, int r, int b)\n    {\n        super.onLayout(changed, l, t, r, b);\n    }\n\n\n    @Override\n    public LayoutParams generateLayoutParams(AttributeSet attrs) {\n        return new LayoutParams(getContext(), attrs);\n    }\n\n\n    public static class LayoutParams extends ${NAME}.LayoutParams\n            implements AutoLayoutHelper.AutoLayoutParams\n    {\n        private AutoLayoutInfo mAutoLayoutInfo;\n\n        public LayoutParams(Context c, AttributeSet attrs)\n        {\n            super(c, attrs);\n            mAutoLayoutInfo = AutoLayoutHelper.getAutoLayoutInfo(c, attrs);\n        }\n\n        @Override\n        public AutoLayoutInfo getAutoLayoutInfo()\n        {\n            return mAutoLayoutInfo;\n        }\n\n\n        public LayoutParams(int width, int height)\n        {\n            super(width, height);\n        }\n\n\n        public LayoutParams(ViewGroup.LayoutParams source)\n        {\n            super(source);\n        }\n\n        public LayoutParams(MarginLayoutParams source)\n        {\n            super(source);\n        }\n\n    }\n}\n\n--------------------------------------------------------------------------------------\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.2724609375,
          "content": "![Logo](image/arms_banner_v1.0.jpg)\n![Official](image/official.jpeg)\n\n<p align=\"center\">\n   <a href=\"https://bintray.com/jessyancoding/maven/MVPArms/_latestVersion\">\n    <img src=\"https://img.shields.io/badge/Jcenter-v2.5.2-brightgreen.svg?style=flat-square\" alt=\"Latest Stable Version\" />\n  </a>\n  <a href=\"https://travis-ci.org/JessYanCoding/MVPArms\">\n    <img src=\"https://travis-ci.org/JessYanCoding/MVPArms.svg?branch=master\" alt=\"Build Status\" />\n  </a>\n  <a href=\"https://developer.android.com/about/versions/android-4.0.html\">\n    <img src=\"https://img.shields.io/badge/API-14%2B-blue.svg?style=flat-square\" alt=\"Min Sdk Version\" />\n  </a>\n  <a href=\"http://www.apache.org/licenses/LICENSE-2.0\">\n    <img src=\"http://img.shields.io/badge/License-Apache%202.0-blue.svg?style=flat-square\" alt=\"License\" />\n  </a>\n  <a href=\"https://www.jianshu.com/u/1d0c0bc634db\">\n    <img src=\"https://img.shields.io/badge/Author-JessYan-orange.svg?style=flat-square\" alt=\"Author\" />\n  </a>\n  <a href=\"https://shang.qq.com/wpa/qunwpa?idkey=7e59e59145e6c7c68932ace10f52790636451f01d1ecadb6a652b1df234df753\">\n    <img src=\"https://img.shields.io/badge/QQ%E7%BE%A4-455850365%20%7C%20301733278-orange.svg?style=flat-square\" alt=\"QQ Group\" />\n  </a>\n</p>\n\n<p align=\"center\">\n  <a href=\"MVPArms.md\">\n    <b>中文说明</b>\n  </a>\n</p> \n\n## A common Architecture for Android Applications developing based on MVP, integrates many Open Source Projects (like Dagger2、RxJava、Retrofit ...), to make your developing quicker and easier.\n\n## Architectural\n<img src=\"https://github.com/JessYanCoding/MVPArms/raw/master/image/Architecture.png\" width=\"80%\" height=\"80%\">\n\n## Usage\n> New Project (**The following steps are too cumbersome? Now you can use the [new feature (generate an app Module with one click)](https://github.com/JessYanCoding/MVPArms-Module-Template) in new projects, to avoid the cumbersome configuration of the project, to quickly open the world of MVPArms**)\n>> If you are building a new project, directly to the entire project **clone** (or download), as **demo** as the main **Module** (It is recommended to remove the **arms Module** and use **Gradle** to [depend](https://github.com/JessYanCoding/MVPArms/wiki#1.1) on this framework remotely for easy updates), then the package name into their own package name, **demo Module** contains the package structure can be used directly, a mainstream `MVP` +` Dagger2` + `Retrofit` +` RxJava` framework so easy to build successful, and now you refer **Mvp** Package under the **UserActivity** format, [Use Template to automatically generate MVP, Dagger2 related classes](https://github.com/JessYanCoding/MVPArmsTemplate), With access to [Wiki documents](https://github.com/JessYanCoding/MVPArms/wiki) slowly grasp the framework to see more articles as soon as possible in the project to use it, in practice, learning is the fastest\n\n> Old Project\n>> [Old projects would like to introduce this framework, you can refer to the Wiki documentation, written in great detail](https://github.com/JessYanCoding/MVPArms/wiki)\n\n## Wiki\n[Detailed usage reference Wiki (**Must see!!!**)](https://github.com/JessYanCoding/MVPArms/wiki)\n\n\n## Notice\n\n* [MVPArms Learning Project](https://github.com/JessYanCoding/MVPArms/blob/master/CONTRIBUTING_APP.md)\n\n* [Collection Box](https://github.com/JessYanCoding/MVPArms/issues/40)\n\n* [Update Log](https://github.com/JessYanCoding/MVPArms/wiki/UpdateLog)\n\n* [Common Issues](https://github.com/JessYanCoding/MVPArms/wiki/Issues)\n\n* The use of these technologies for the latter part of the project maintenance and iterative, especially large projects is very helpful, but is to develop a pre-write a page to write a lot of `MVP`,` Dagger2` class and interface, which is indeed a headache for the development of pre- Now the framework has been able to [Template](https://github.com/JessYanCoding/MVPArmsTemplate) automatically generate some `MVP`,` Dagger2` template code, and now we can very easily use the framework.\n\n* Use this frame comes with automatic screen adaptation function, please refer to [AndroidAutoSize](https://github.com/JessYanCoding/AndroidAutoSize).\n\n* This framework does not provide any third-party libraries associated with the **UI**.\n\n## Functionality & Libraries\n1. [`Mvp` Google's official` Mvp` architecture project, which contains several different schema branches (this is the Dagger branch).](https://github.com/googlesamples/android-architecture/tree/todo-mvp-dagger/)\n2. [`Dagger2`](https://github.com/google/dagger)\n3. [`RxJava`](https://github.com/ReactiveX/RxJava)\n4. [`RxAndroid`](https://github.com/ReactiveX/RxAndroid)\n5. [`Rxlifecycle`](https://github.com/trello/RxLifecycle)\n6. [`RxCache`](https://github.com/VictorAlbertos/RxCache)\n7. [`RxPermissions`](https://github.com/tbruyelle/RxPermissions)\n8. [`RxErroHandler`](https://github.com/JessYanCoding/RxErrorHandler)\n9. [`Retrofit`](https://github.com/square/retrofit)\n10. [`Okhttp`](https://github.com/square/okhttp)\n11. [`AndroidAutoSize`](https://github.com/JessYanCoding/AndroidAutoSize)\n12. [`Gson`](https://github.com/google/gson)\n13. [`Butterknife`](https://github.com/JakeWharton/butterknife)\n14. [`AndroidEventBus`](https://github.com/hehonghui/AndroidEventBus)\n15. [`Timber`](https://github.com/JakeWharton/timber)\n16. [`Glide`](https://github.com/bumptech/glide)\n17. [`LeakCanary`](https://github.com/square/leakcanary)\n\n## Who is using MVPArms?\n\n**天府通** | **小顶家装 工长端** | **小顶家装 工人端** | **小顶家装 材料端** | **小顶网** |\n:-------------------------------------------------------------------:|:----------:|:---------------:|:--------:|:--------------:|\n[<img src=\"image/tianfutong_logo.png\" width=\"80\" height=\"80\">](https://android.myapp.com/myapp/detail.htm?apkName=com.chinarainbow.tft) | [<img src=\"image/xiaoding_foreman_logo.png\" width=\"80\" height=\"80\">](http://www.dggxdjz.com) | [<img src=\"image/xiaoding_worker_logo.png\" width=\"80\" height=\"80\">](http://www.dggxdjz.com) | [<img src=\"image/xiaoding_material_logo.png\" width=\"80\" height=\"80\">](http://www.dggxdjz.com) | [<img src=\"image/top_net_work_logo.png\" width=\"80\" height=\"80\">](http://www.dgg.net/appload.htm) |\n**天天视频** | **天天直播** | **中斗通航** | **中斗祥云** | **麋鹿旅行** |\n[<img src=\"image/tiantian_video_logo.png\" width=\"80\" height=\"80\">](http://sj.qq.com/myapp/detail.htm?apkName=com.dzwh.ttys) | [<img src=\"image/tiantian_live_logo.png\" width=\"80\" height=\"80\">](http://www.25pp.com/android/detail_7611392/) | [<img src=\"image/tong_hang_logo.png\" width=\"80\" height=\"80\">](https://fir.im/3176) | <img src=\"image/xiang_yun_logo.png\" width=\"80\" height=\"80\">  | [<img src=\"image/mi_lu_logo.png\" width=\"80\" height=\"80\">](http://android.myapp.com/myapp/detail.htm?apkName=com.elk.tourist) |\n**汇财富** | **觅窝** | **晒墨宝** | **智播**  | **(Your App ...)** |\n[<img src=\"image/hui_cai_fu_logo.png\" width=\"80\" height=\"80\">](http://android.myapp.com/myapp/detail.htm?apkName=com.tahone.client) | [<img src=\"image/mi_wo_logo.png\" width=\"80\" height=\"80\">](http://miwo.ai/) | [<img src=\"image/shaimobao_logo.png\" width=\"80\" height=\"80\">](http://sj.qq.com/myapp/search.htm?kw=%E6%99%92%E5%A2%A8%E5%AE%9D)  | [<img src=\"image/zhibo_logo.png\" width=\"80\" height=\"80\">](http://www.zhibocloud.cn/) | <img src=\"image/android_logo.png\" width=\"80\" height=\"80\"> |\n\n\n## Acknowledgements \nThanks to all the three libraries used in this framework **Author**, and all for the **Open Source** selfless contributions **Developer** and **Organizations**, so that we can better work and study, I will also spare time return to the open source community\n\n## About Me\n* **Email**: <jess.yan.effort@gmail.com>  \n* **Home**: <http://jessyan.me>\n* **掘金**: <https://juejin.im/user/57a9dbd9165abd0061714613>\n* **简书**: <https://www.jianshu.com/u/1d0c0bc634db>\n\n## License\n``` \n Copyright 2016, jessyan       \n  \n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at \n \n       http://www.apache.org/licenses/LICENSE-2.0 \n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n```\n"
        },
        {
          "name": "arms-autolayout",
          "type": "tree",
          "content": null
        },
        {
          "name": "arms-imageloader-glide",
          "type": "tree",
          "content": null
        },
        {
          "name": "arms",
          "type": "tree",
          "content": null
        },
        {
          "name": "bintray.gradle",
          "type": "blob",
          "size": 3.17578125,
          "content": "apply plugin: 'com.jfrog.bintray'\napply plugin: 'com.github.dcendents.android-maven'\n\nProperties properties = new Properties()\nboolean isHasFile = false\nif (project.rootProject.findProject('local.properties') != null) {\n    isHasFile = true\n    properties.load(project.rootProject.file('local.properties').newDataInputStream())\n}\n\ndef gitUrl = 'https://github.com/JessYanCoding/MVPArms.git'   // Git仓库的url\ndef siteUrl = 'https://github.com/JessYanCoding/MVPArms'   // 项目的主页\n\nversion = rootProject.ext.android[\"versionName\"]\ngroup = \"me.jessyan\"\n\n\nbintray {\n    user = isHasFile ? properties.getProperty(\"bintray.user\") : System.getenv(\"bintray_user\")\n    key = isHasFile ? properties.getProperty(\"bintray.apikey\") : System.getenv(\"bintray_apikey\")\n\n    pkg {\n        repo = 'maven'\n        name = POM_NAME\n        licenses = [\"Apache-2.0\"]\n        websiteUrl = siteUrl\n        vcsUrl = gitUrl\n        publish = true // 是否是公开项目。\n\n        version {\n            name = rootProject.ext.android[\"versionName\"]\n            desc = 'A common Architecture for Android Applications developing based on MVP，integrates many Open Source Projects( like Dagger2,RxJava,Retrofit... ),to make your developing quicker and easier.'\n            released = new Date()\n            vcsTag = 'v' + rootProject.ext.android[\"versionName\"]\n            attributes = ['gradle-plugin': 'com.use.less:com.use.less.gradle:gradle-useless-plugin']\n        }\n    }\n    configurations = ['archives']\n}\n\n\ninstall {\n    repositories.mavenInstaller {\n        // This generates POM.xml with proper parameters\n        pom {\n            project {\n                packaging 'aar'\n                // Add your description here\n                name POM_NAME\n                description 'A common Architecture for Android Applications developing based on MVP，integrates many Open Source Projects( like Dagger2,RxJava,Retrofit... ),to make your developing quicker and easier.'\n                url siteUrl\n                // Set your license\n                licenses {\n                    license {\n                        name 'The Apache Software License, Version 2.0'\n                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'\n                    }\n                }\n                developers {\n                    developer {\n                        id 'JessYanCoding'        //填写bintray或者github的用户名\n                        name 'jessyan'         //姓名，可以是中文\n                        email 'jess.yan.effort@gmail.com'\n                    }\n                }\n                scm {\n                    connection gitUrl\n                    developerConnection gitUrl\n                    url siteUrl\n                }\n            }\n        }\n    }\n}\n\ntask sourcesJar(type: Jar) {\n    from android.sourceSets.main.java.srcDirs\n    classifier = 'sources'\n}\ntask javadoc(type: Javadoc) {\n    failOnError false\n    source = android.sourceSets.main.java.srcDirs\n    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n}\ntask javadocJar(type: Jar, dependsOn: javadoc) {\n    classifier = 'javadoc'\n    from javadoc.destinationDir\n}\nartifacts {\n    archives javadocJar\n    archives sourcesJar\n}\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.5,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\napply from: \"config.gradle\"\nbuildscript {\n    repositories {\n        google()\n        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.6.0'\n        //Gradle Android Maven plugin\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'\n        //Gradle Bintray Plugin\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.0'\n    }\n}\n\nallprojects {\n    tasks.withType(Test).configureEach {\n        maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1\n        if (!project.hasProperty(\"createReports\")) {\n            reports.html.required = false\n            reports.junitXml.required = false\n        }\n    }\n\n    repositories {\n        google()\n        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }\n        maven { url \"https://jitpack.io\" }\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\nconfigurations.all {\n    resolutionStrategy {\n        eachDependency { details ->\n            // Force all of the primary libraries to use the same version.\n            if (details.requested.name == 'appcompat'\n                    && details.requested.name == 'annotation'\n                    && details.requested.name == 'recyclerview') {\n                details.useVersion rootProject.ext.version[\"androidXSdkVersion\"]\n            }\n        }\n    }\n}"
        },
        {
          "name": "config.gradle",
          "type": "blob",
          "size": 8.1611328125,
          "content": "ext {\n\n    android = [\n            compileSdkVersion: 29,\n            buildToolsVersion: \"29.0.3\",\n            minSdkVersion    : 14,\n            targetSdkVersion : 29,\n            versionCode      : 186,\n            versionName      : \"2.5.2\"\n    ]\n\n    version = [\n            androidSupportSdkVersion: \"28.0.0\",\n            androidXSdkVersion      : \"1.1.0\",\n            retrofitSdkVersion      : \"2.7.2\",\n            dagger2SdkVersion       : \"2.26\",\n            glideSdkVersion         : \"4.11.0\",\n            butterknifeSdkVersion   : \"10.2.1\",\n            rxlifecycleSdkVersion   : \"1.0\",\n            rxlifecycle2SdkVersion  : \"2.2.2\",\n            espressoSdkVersion      : \"3.0.1\",\n            canarySdkVersion        : \"2.2\"\n    ]\n\n    dependencies = [\n            //support\n            \"appcompat-v7\"             : \"com.android.support:appcompat-v7:${version[\"androidSupportSdkVersion\"]}\",\n            \"support-design\"           : \"com.android.support:design:${version[\"androidSupportSdkVersion\"]}\",\n            \"support-v4\"               : \"com.android.support:support-v4:${version[\"androidSupportSdkVersion\"]}\",\n            \"cardview-v7\"              : \"com.android.support:cardview-v7:${version[\"androidSupportSdkVersion\"]}\",\n            \"support-annotations\"      : \"com.android.support:support-annotations:${version[\"androidSupportSdkVersion\"]}\",\n            \"recyclerview-v7\"          : \"com.android.support:recyclerview-v7:${version[\"androidSupportSdkVersion\"]}\",\n\n            //androidx\n            \"appcompat\"                : \"androidx.appcompat:appcompat:${version[\"androidXSdkVersion\"]}\",\n            \"design\"                   : \"com.google.android.material:material:${version[\"androidXSdkVersion\"]}\",\n            \"legacy-support-v4\"        : \"androidx.legacy:legacy-support-v4:1.0.0\",\n            \"cardview\"                 : \"androidx.cardview:cardview:1.0.0\",\n            \"annotations\"              : \"androidx.annotation:annotation:${version[\"androidXSdkVersion\"]}\",\n            \"recyclerview\"             : \"androidx.recyclerview:recyclerview:${version[\"androidXSdkVersion\"]}\",\n\n            //network\n            \"retrofit\"                 : \"com.squareup.retrofit2:retrofit:${version[\"retrofitSdkVersion\"]}\",\n            \"retrofit-converter-gson\"  : \"com.squareup.retrofit2:converter-gson:${version[\"retrofitSdkVersion\"]}\",\n            \"retrofit-adapter-rxjava\"  : \"com.squareup.retrofit2:adapter-rxjava:${version[\"retrofitSdkVersion\"]}\",\n            \"retrofit-adapter-rxjava2\" : \"com.squareup.retrofit2:adapter-rxjava2:${version[\"retrofitSdkVersion\"]}\",\n            \"okhttp3\"                  : \"com.squareup.okhttp3:okhttp:3.12.9\",\n            \"okhttp4\"                  : \"com.squareup.okhttp3:okhttp:4.0.0\",\n            \"okhttp-urlconnection\"     : \"com.squareup.okhttp:okhttp-urlconnection:2.0.0\",\n            \"glide\"                    : \"com.github.bumptech.glide:glide:${version[\"glideSdkVersion\"]}\",\n            \"glide-compiler\"           : \"com.github.bumptech.glide:compiler:${version[\"glideSdkVersion\"]}\",\n            \"glide-loader-okhttp3\"     : \"com.github.bumptech.glide:okhttp3-integration:${version[\"glideSdkVersion\"]}\",\n            \"picasso\"                  : \"com.squareup.picasso:picasso:2.5.2\",\n\n            //view\n            \"autolayout\"               : \"com.zhy:autolayout:1.4.5\",\n            \"butterknife\"              : \"com.jakewharton:butterknife:${version[\"butterknifeSdkVersion\"]}\",\n            \"butterknife-compiler\"     : \"com.jakewharton:butterknife-compiler:${version[\"butterknifeSdkVersion\"]}\",\n            \"pickerview\"               : \"com.contrarywind:Android-PickerView:3.2.5\",\n            \"photoview\"                : \"com.github.chrisbanes.photoview:library:1.2.3\",\n            \"numberprogressbar\"        : \"com.daimajia.numberprogressbar:library:1.2@aar\",\n            \"nineoldandroids\"          : \"com.nineoldandroids:library:2.4.0\",\n            \"paginate\"                 : \"com.github.markomilos:paginate:0.5.1\",\n            \"vlayout\"                  : \"com.alibaba.android:vlayout:1.1.0@aar\",\n            \"autosize\"                 : \"me.jessyan:autosize:1.2.1\",\n\n            //rx1\n            \"rxandroid\"                : \"io.reactivex:rxandroid:1.2.1\",\n            \"rxjava\"                   : \"io.reactivex:rxjava:1.3.0\",\n            \"rxlifecycle\"              : \"com.trello:rxlifecycle:${version[\"rxlifecycleSdkVersion\"]}\",\n            \"rxlifecycle-components\"   : \"com.trello:rxlifecycle-components:${version[\"rxlifecycleSdkVersion\"]}\",\n            \"rxcache\"                  : \"com.github.VictorAlbertos.RxCache:runtime:1.7.0-1.x\",\n            \"rxcache-jolyglot-gson\"    : \"com.github.VictorAlbertos.Jolyglot:gson:0.0.4\",\n            \"rxbinding-recyclerview-v7\": \"com.jakewharton.rxbinding:rxbinding-recyclerview-v7:1.0.1\",\n            \"rxpermissions\"            : \"com.tbruyelle.rxpermissions:rxpermissions:0.9.4@aar\",\n            \"rxerrorhandler\"           : \"me.jessyan:rxerrorhandler:1.0.1\",\n\n            //rx2\n            \"rxandroid2\"               : \"io.reactivex.rxjava2:rxandroid:2.1.1\",\n            \"rxjava2\"                  : \"io.reactivex.rxjava2:rxjava:2.2.18\",\n            \"rxlifecycle2\"             : \"com.trello.rxlifecycle2:rxlifecycle:${version[\"rxlifecycle2SdkVersion\"]}\",\n            \"rxlifecycle2-android\"     : \"com.trello.rxlifecycle2:rxlifecycle-android:${version[\"rxlifecycle2SdkVersion\"]}\",\n            \"rxlifecycle2-components\"  : \"com.trello.rxlifecycle2:rxlifecycle-components:${version[\"rxlifecycle2SdkVersion\"]}\",\n            \"rxcache2\"                 : \"com.github.VictorAlbertos.RxCache:runtime:1.8.3-2.x\",\n            \"rxpermissions2\"           : \"com.github.tbruyelle:rxpermissions:0.10.2\",\n            \"rxerrorhandler2\"          : \"me.jessyan:rxerrorhandler:2.1.1\",\n\n            //tools\n            \"dagger2\"                  : \"com.google.dagger:dagger:${version[\"dagger2SdkVersion\"]}\",\n            \"dagger2-android\"          : \"com.google.dagger:dagger-android:${version[\"dagger2SdkVersion\"]}\",\n            \"dagger2-android-support\"  : \"com.google.dagger:dagger-android-support:${version[\"dagger2SdkVersion\"]}\",\n            \"dagger2-compiler\"         : \"com.google.dagger:dagger-compiler:${version[\"dagger2SdkVersion\"]}\",\n            \"dagger2-android-processor\": \"com.google.dagger:dagger-android-processor:${version[\"dagger2SdkVersion\"]}\",\n            \"androideventbus\"          : \"org.simple:androideventbus:1.0.5.1\",\n            \"eventbus\"                 : \"org.greenrobot:eventbus:3.2.0\",\n            \"otto\"                     : \"com.squareup:otto:1.3.8\",\n            \"gson\"                     : \"com.google.code.gson:gson:2.8.6\",\n            \"multidex\"                 : \"com.android.support:multidex:1.0.3\",\n            \"javax.annotation\"         : \"javax.annotation:jsr250-api:1.0\",\n            \"arouter\"                  : \"com.alibaba:arouter-api:1.3.1\",\n            \"arouter-compiler\"         : \"com.alibaba:arouter-compiler:1.1.4\",\n            \"progressmanager\"          : \"me.jessyan:progressmanager:1.5.0\",\n            \"retrofit-url-manager\"     : \"me.jessyan:retrofit-url-manager:1.4.0\",\n            \"lifecyclemodel\"           : \"me.jessyan:lifecyclemodel:1.0.1\",\n\n            //test\n            \"junit\"                    : \"junit:junit:4.12\",\n            \"androidJUnitRunner\"       : \"androidx.test.runner.AndroidJUnitRunner\",\n            \"runner\"                   : \"com.android.support.test:runner:1.0.1\",\n            \"espresso-core\"            : \"com.android.support.test.espresso:espresso-core:${version[\"espressoSdkVersion\"]}\",\n            \"espresso-contrib\"         : \"com.android.support.test.espresso:espresso-contrib:${version[\"espressoSdkVersion\"]}\",\n            \"espresso-intents\"         : \"com.android.support.test.espresso:espresso-intents:${version[\"espressoSdkVersion\"]}\",\n            \"mockito-core\"             : \"org.mockito:mockito-core:1.+\",\n            \"timber\"                   : \"com.jakewharton.timber:timber:4.7.1\",\n            \"logger\"                   : \"com.orhanobut:logger:2.2.0\",\n            \"canary-debug\"             : \"com.squareup.leakcanary:leakcanary-android:${version[\"canarySdkVersion\"]}\",\n            \"canary-release\"           : \"com.squareup.leakcanary:leakcanary-android-no-op:1.6.3\",\n            \"umeng-analytics\"          : \"com.umeng.analytics:analytics:6.0.1\"\n    ]\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.12109375,
          "content": "## Project-wide Gradle settings.\n#\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n#\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx1024m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n#\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n#Thu May 25 20:59:18 CST 2017\norg.gradle.jvmargs=-Xmx1536m\nandroid.enableBuildCache=true\nandroid.useAndroidX=true\nandroid.enableJetifier=true\nandroid.injected.testOnly=false\nandroid.databinding.incremental=true\nandroid.lifecycleProcessor.incremental=true\nkapt.incremental.apt=true\nkapt.use.worker.api=true\nkapt.include.compile.classpath=false\norg.gradle.parallel=true\norg.gradle.caching=true\norg.gradle.configureondemand=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "image",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0703125,
          "content": "include ':demo', ':arms', ':arms-autolayout', ':arms-imageloader-glide'\n"
        }
      ]
    }
  ]
}