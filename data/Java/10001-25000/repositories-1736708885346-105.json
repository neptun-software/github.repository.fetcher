{
  "metadata": {
    "timestamp": 1736708885346,
    "page": 105,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/doris",
      "stars": 13026,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 4.83203125,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\ngithub:\n  description: Apache Doris is an easy-to-use, high performance and unified analytics database. \n  homepage: https://doris.apache.org\n  labels:\n    - real-time\n    - query-engine\n    - olap\n    - lakehouse\n    - etl\n    - elt\n    - sql\n    - snowflake\n    - redshift\n    - bigquery\n    - hive\n    - iceberg\n    - hudi\n    - delta-lake\n    - spark\n    - hadoop\n    - dbt\n    - database\n\n  enabled_merge_buttons:\n    squash:  true\n    merge:   false\n    rebase:  false\n  protected_branches:\n    master:\n      required_status_checks:\n        # if strict is true, means \"Require branches to be up to date before merging\".\n        strict: false\n        contexts:\n          - License Check\n          - Clang Formatter\n          - CheckStyle\n          - P0 Regression (Doris Regression)\n          - External Regression (Doris External Regression)\n          - cloud_p0 (Doris Cloud Regression)\n          - FE UT (Doris FE UT)\n          - BE UT (Doris BE UT)\n          - Build Broker      \n          - Build Third Party Libraries (Linux)\n          - Build Third Party Libraries (macOS)\n          - Build Third Party Libraries (macOS-arm64)\n          - COMPILE (DORIS_COMPILE)\n          - Need_2_Approval\n          - Cloud UT (Doris Cloud UT)\n          - performance (Doris Performance)\n\n      required_pull_request_reviews:\n        dismiss_stale_reviews: true\n        require_code_owner_reviews: true\n        required_approving_review_count: 1\n\n    branch-3.0:\n      required_status_checks:\n        # if strict is true, means \"Require branches to be up to date before merging\".\n        strict: false\n        contexts:\n          - License Check\n          - Clang Formatter\n          - CheckStyle\n          - Build Broker\n          - Build Third Party Libraries (Linux)\n          - Build Third Party Libraries (macOS)\n          - FE UT (Doris FE UT)\n          - BE UT (Doris BE UT)\n          - Cloud UT (Doris Cloud UT)\n          - COMPILE (DORIS_COMPILE)\n          - P0 Regression (Doris Regression)\n          - External Regression (Doris External Regression)\n          - cloud_p0 (Doris Cloud Regression)\n      #required_pull_request_reviews:\n      #  dismiss_stale_reviews: true\n      #  required_approving_review_count: 1\n\n    branch-2.1:\n      required_status_checks:\n        # strict means \"Require branches to be up to date before merging\".\n        strict: false\n        contexts:\n          - License Check\n          - Clang Formatter\n          - CheckStyle\n          - Build Broker\n          - Build Third Party Libraries (Linux)\n          - Build Third Party Libraries (macOS)\n          - COMPILE (DORIS_COMPILE)\n          - External Regression (Doris External Regression)\n          - FE UT (Doris FE UT)\n          - BE UT (Doris BE UT)\n          - P0 Regression (Doris Regression)\n\n        required_pull_request_reviews:\n          dismiss_stale_reviews: true\n          required_approving_review_count: 1\n\n    branch-2.0:\n      required_status_checks:\n      # if strict is true, means \"Require branches to be up to date before merging\".\n        strict: false\n        contexts:\n          - License Check\n          - CheckStyle\n          - P0 Regression (Doris Regression)\n          - External Regression (Doris External Regression)\n          - FE UT (Doris FE UT)\n          - BE UT (Doris BE UT)\n          - Build Broker\n          - Build Third Party Libraries (Linux)\n          - Build Third Party Libraries (macOS)\n          - COMPILE (DORIS_COMPILE)\n\n        required_pull_request_reviews:\n          dismiss_stale_reviews: true\n          required_approving_review_count: 1\n\n    branch-1.1-lts:\n      required_status_checks:\n        # if strict is true, means \"Require branches to be up to date before merging\".\n        strict: false\n        contexts:\n          - License Check\n\n      required_pull_request_reviews:\n        dismiss_stale_reviews: true\n        required_approving_review_count: 1\n\n  collaborators:\n    - LemonLiTree\n    - Yukang-Lian\n    - TangSiyang2001\n    - freemandealer\n    - shuke987\n    - wm1581066\n    - KassieZ\n    - yujun777\n    - doris-robot\n    - LiBinfeng-01\n\nnotifications:\n    pullrequests_status:  commits@doris.apache.org\n\n"
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.4609375,
          "content": "---\nLanguage: Cpp\nBasedOnStyle: Google\nAccessModifierOffset: -4\nAllowShortFunctionsOnASingleLine: Inline\nColumnLimit: 100\nConstructorInitializerIndentWidth: 8 # double of IndentWidth\nContinuationIndentWidth: 8 # double of IndentWidth\nDerivePointerAlignment: false # always use PointerAlignment\nIndentCaseLabels: false\nIndentWidth: 4\nPointerAlignment: Left\nReflowComments: false\nSortUsingDeclarations: false\nSpacesBeforeTrailingComments: 1\nSpaceBeforeCpp11BracedList: true\n"
        },
        {
          "name": ".clang-format-ignore",
          "type": "blob",
          "size": 0.2822265625,
          "content": "# Please add code that you don’t want to be formatted by clang here\n\nbe/src/apache-orc/*\nbe/src/clucene/*\nbe/src/gutil/*\nbe/src/glibc-compatibility/*\nbe/src/util/sse2neo.h\nbe/src/util/sse2neon.h\nbe/src/util/mustache/mustache.h\nbe/src/util/mustache/mustache.cc\nbe/src/util/utf8_check.cpp\n"
        },
        {
          "name": ".clang-tidy",
          "type": "blob",
          "size": 1.1064453125,
          "content": "---\nChecks: |\n  -*,\n  clang-diagnostic-*,\n  clang-analyzer-*,\n  bugprone-redundant-branch-condition,\n  bugprone-use-after-move,\n  bugprone-bool-pointer-implicit-conversion,\n  bugprone-unused-raii,\n  bugprone-fold-init-type,\n  modernize-*,\n  -modernize-use-trailing-return-type,\n  -modernize-use-nodiscard,\n  -modernize-avoid-c-arrays,\n  misc-redundant-expression,\n  misc-unused-*,\n  -misc-unused-parameters,\n  readability-*,\n  -readability-identifier-length,\n  -readability-implicit-bool-conversion,\n  -readability-magic-numbers,\n  -readability-else-after-return,\n  -readability-inconsistent-declaration-parameter-name,\n  -readability-isolate-declaration,\n  -readability-named-parameter,\n  -readability-avoid-const-params-in-decls,\n  -readability-convert-member-functions-to-static,\n  portability-simd-intrinsics,\n  performance-type-promotion-in-math-fn,\n  performance-faster-string-find,\n  performance-inefficient-algorithm,\n  performance-move-const-arg\nWarningsAsErrors: \"*\"\nCheckOptions:\n  - key: readability-function-size.LineThreshold\n    value: \"80\"\n  - key: readability-function-cognitive-complexity.Threshold\n    value: \"50\"\n"
        },
        {
          "name": ".clangd",
          "type": "blob",
          "size": 0.8876953125,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nDiagnostics:\n  UnusedIncludes: Strict\n\nIf:\n  PathMatch: be/test/.*\n\nCompileFlags:\n  CompilationDatabase: be/ut_build_ASAN/\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0498046875,
          "content": "be*\nfs_brokers*\nthirdparty*\nfe*\n.git*\nfs_brokers*\n\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.9013671875,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\n\n[*.{java,xml,py,sh}]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.36328125,
          "content": "# Use whitelist to set text on\n# text means convert to LF when check in\n# eol=lf means convert to LF when check out\n*.cpp text eol=lf\n*.cc text eol=lf\n*.c text eol=lf\n*.h text eol=lf\n*.java text eol=lf\n*.py text eol=lf\n*.js text eol=lf\n*.md text eol=lf\n*.txt text eol=lf\n*.sh text eol=lf\n*.thrift text eol=lf\n*.proto text eol=lf\n*.conf text eol=lf\n*.out text eol=lf -diff\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.0107421875,
          "content": "# ignore file with wildcard anywhere\n*.swo\n*.swp\n*.pyc\n*.class\n*.iml\n*.jar\n*.log\n*.so.tmp\n*.flattened-pom.xml\ncore.*\n\n# ignore file with specifiy name anywhere\n.DS_Store\n.classpath\nnohup.out\n/custom_env.sh\n/custom_env_mac.sh\nderby.log\ndependency-reduced-pom.xml\nyarn.lock\nut_dir\npackage-lock.json\n__pycache__\n\n# ignore all sub `/bin` and `/build` directory\n**/build/\n**/target/\n**/node_modules/\n**/log/\n\n# ignore project file\n.cproject\n.project\n.cache\n.settings/\n**/.idea/\n!.idea/vcs.xml\n!.idea/icon.svg\n**/.vscode/\n**/.fleet/\n\n# docs\ndocs/contents/\ndocs/.temp\n\n# output, thirdparty, extension\noutput/\noutput.bak/\nrpc_data/\nmetastore_db/\nthirdparty/src*\nthirdparty/installed*\nthirdparty/doris-thirdparty*.tar.xz\n\ndocker/thirdparties/docker-compose/mysql/data\ndocker/thirdparties/docker-compose/hive/scripts/tpch1.db/\ndocker/thirdparties/docker-compose/hive/scripts/paimon1\ndocker/thirdparties/docker-compose/hive/scripts/tvf_data\n\nfe_plugins/output\nfe_plugins/**/.factorypath\n\ndocker/thirdparties/docker-compose/hive/scripts/data/*/*/data\n\nfs_brokers/apache_hdfs_broker/src/main/resources/\nfs_brokers/apache_hdfs_broker/src/main/thrift/\n\n# regression-test\nregression-test/framework/dependency-reduced-pom.xml\nregression-test/realdata/*\nregression-test/cacheData/*\nregression-test/conf/regression-conf-custom.groovy\nregression-test/framework/bin/*\nregression-test/framework/src/main/groovy/org/apache/doris/thrift\nregression-test/certificate.p12\n\nsamples/doris-demo/remote-udf-python-demo/*_pb2.py\nsamples/doris-demo/remote-udf-python-demo/*_pb2_grpc.py\nsamples/doris-demo/remote-udf-cpp-demo/*.o\nsamples/doris-demo/remote-udf-cpp-demo/*.pb.h\nsamples/doris-demo/remote-udf-cpp-demo/*.pb.cc\nsamples/doris-demo/remote-udf-cpp-demo/function_server_demo\n\n# FE\nfe/mocked/\nfe/gen/\nfe/fe-core/gen/\nfe/fe-core/src/main/resources/static/\nfe/fe-core/src/main/antlr4/org/apache/doris/nereids/DorisLexer.tokens\nfe/fe-core/src/main/antlr4/org/apache/doris/nereids/gen/\nfe/fe-common/src/main/java/org/apache/doris/thrift\nfe/fe-common/src/main/java/org/apache/parquet\nfe/fe-core/src/main/java/org/apache/parquet\n\n# BE\nbe/build*/\nbe/cmake-build*/\nbe/ut_build*/\nbe/src/gen_cpp/*.[cc, cpp, h]\nbe/src/gen_cpp/opcode\nbe/tags\nbe/test/olap/test_data/tablet_meta_test.hdr\nbe/.devcontainer/\nbe/src/apache-orc/\n\n# Cloud\ncloud/build*/\ncloud/cmake-build*/\ncloud/ut_build*/\n\n## tools\ntools/ssb-tools/ssb-data/\ntools/ssb-tools/ssb-dbgen/\ntools/**/TPC-H_Tools_v*.zip\ntools/**/TPC-H_Tools_v*/\ntools/**/tpc-h_v*.docx\ntools/**/tpc-h_v*.pdf\ntools/**/tpch-data/\ntools/tpch-tools/bin/result\ntools/single-node-cluster/fe*\ntools/tpcds-tools/TPC-DS_Tools_*.zip\ntools/tpcds-tools/bin/DSGen-software*\ntools/tpcds-tools/bin/tpcds-data/\ntools/tpcds-tools/bin/result\ntools/**/result.csv\n\n# be-ut\ndata_test\nlru_cache_test\n\n/conf/log4j2-spring.xml\n/fe/fe-core/src/test/resources/real-help-resource.zip\n/ui/dist\n\n# docker\ndocker/thirdparties/docker-compose/*/data\ndocker/thirdparties/docker-compose/*/logs\ndocker/thirdparties/docker-compose/*/*.yaml\ndocker/runtime/be/resource/apache-doris/\n\n# other\ncompile_commands.json\n.github\n\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.0791015625,
          "content": "[submodule \".github/actions/label-when-approved-action\"]\n\tpath = .github/actions/label-when-approved-action\n\turl = https://github.com/TobKed/label-when-approved-action\n[submodule \".github/actions/get-workflow-origin\"]\n\tpath = .github/actions/get-workflow-origin\n\turl = https://github.com/potiuk/get-workflow-origin.git\n[submodule \".github/actions/setup-maven\"]\n\tpath = .github/actions/setup-maven\n\turl = https://github.com/stCarolas/setup-maven.git\n[submodule \".github/actions/paths-filter\"]\n\tpath = .github/actions/paths-filter\n\turl = https://github.com/dorny/paths-filter\n[submodule \".github/actions/action-pr-title\"]\n\tpath = .github/actions/action-pr-title\n\turl = https://github.com/deepakputhraya/action-pr-title.git\n[submodule \".github/actions/ccache-action\"]\n\tpath = .github/actions/ccache-action\n\turl = https://github.com/hendrikmuhs/ccache-action\n[submodule \"be/src/apache-orc\"]\n\tpath = be/src/apache-orc\n\turl = https://github.com/apache/doris-thirdparty.git\n\tbranch = orc\n[submodule \"be/src/clucene\"]\n\tpath = be/src/clucene\n\turl = https://github.com/apache/doris-thirdparty.git\n\tbranch = clucene\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".licenserc.yaml",
          "type": "blob",
          "size": 2.9853515625,
          "content": "header:\n  license:\n    spdx-id: Apache-2.0\n    copyright-owner: Apache Software Foundation\n\n  paths-ignore:\n    - \"dist\"\n    - \"licenses\"\n    - \"**/*.md\"\n    - \"LICENSE\"\n    - \"NOTICE\"\n    - \"doap_Doris.rdf\"\n    - \".clang-format\"\n    - \".clang-format-ignore\"\n    - \".clang-tidy\"\n    - \".gitattributes\"\n    - \".gitignore\"\n    - \".gitmodules\"\n    - \".licenserc.yaml\"\n    - \".rat-excludes\"\n    - \".github/**\"\n    - \".dockerignore\"\n    - \"be/src/common/status.cpp\"\n    - \"be/src/common/status.h\"\n    - \"be/src/env/env.h\"\n    - \"be/src/env/env_posix.cpp\"\n    - \"**/clucene/**\"\n    - \"**/apache-orc/**\"\n    - \"**/glibc-compatibility/**\"\n    - \"**/gutil/**\"\n    - \"**/test_data/**\"\n    - \"**/jmockit/**\"\n    - \"**/*.json\"\n    - \"**/*.csv\"\n    - \"**/*.dat\"\n    - \"**/*.svg\"\n    - \"**/*.md5\"\n    - \"**/*.patch\"\n    - \"**/*.log\"\n    - \"**/*.sql\"\n    - \"**/*.lock\"\n    - \"**/*.out\"\n    - \"**/*.parquet\"\n    - \"docs/.markdownlintignore\"\n    - \"fe/fe-core/src/test/resources/data/net_snmp_normal\"\n    - \"fe/fe-core/src/main/antlr4/org/apache/doris/nereids/JavaLexer.g4\"\n    - \"fe/fe-core/src/main/antlr4/org/apache/doris/nereids/JavaParser.g4\"\n    - \"be/src/common/signal_handler.h\"\n    - \"be/src/olap/lru_cache.cpp\"\n    - \"be/src/olap/lru_cache.h\"\n    - \"be/src/olap/skiplist.h\"\n    - \"be/src/runtime/string_search.hpp\"\n    - \"be/src/util/coding.cpp\"\n    - \"be/src/util/coding.h\"\n    - \"be/src/util/condition_variable.cpp\"\n    - \"be/src/util/condition_variable.h\"\n    - \"be/src/util/jsonb_document.h\"\n    - \"be/src/util/jsonb_error.h\"\n    - \"be/src/util/jsonb_parser.h\"\n    - \"be/src/util/jsonb_parser_simd.h\"\n    - \"be/src/util/jsonb_stream.h\"\n    - \"be/src/util/jsonb_updater.h\"\n    - \"be/src/util/jsonb_utils.h\"\n    - \"be/src/util/jsonb_writer.h\"\n    - \"be/src/util/murmur_hash3.cpp\"\n    - \"be/src/util/murmur_hash3.h\"\n    - \"be/src/util/mustache/mustache.cc\"\n    - \"be/src/util/mustache/mustache.h\"\n    - \"be/src/util/sse2neo.h\"\n    - \"be/src/util/sse2neon.h\"\n    - \"be/src/util/utf8_check.cpp\"\n    - \"be/src/pch/*\"\n    - \"build-support/run_clang_format.py\"\n    - \"regression-test/data\"\n    - \"docs/.vuepress/public/css/animate.min.css\"\n    - \"docs/.vuepress/public/js/jquery.min.js\"\n    - \"docs/.vuepress/public/js/wow.min.js\"\n    - \"docs/package-lock.json\"\n    - \"regression-test/script/README\"\n    - \"regression-test/suites/load_p0/stream_load/data\"\n    - \"docker/thirdparties/docker-compose/hive/scripts/**\"\n    - \"docker/thirdparties/docker-compose/iceberg/spark-defaults.conf.tpl\"\n    - \"conf/mysql_ssl_default_certificate/*\"\n    - \"conf/mysql_ssl_default_certificate/client_certificate/ca.pem\"\n    - \"conf/mysql_ssl_default_certificate/client_certificate/client-cert.pem\"\n    - \"conf/mysql_ssl_default_certificate/client_certificate/client-key.pem\"\n    - \"regression-test/ssl_default_certificate/*\"\n    - \"regression-test/pipeline/**\"\n    - \"extension/beats/go.mod\"\n    - \"extension/beats/go.sum\"\n    - \"pytest/hdfs\"\n    - \"pytest/qe\"\n    - \"pytest/sys/data\"\n    - \"pytest/deploy/*.conf\"\n    - \"tools/jeprof\"\n    - \"tools/FlameGraph/*\"\n  comment: on-failure\n"
        },
        {
          "name": ".rat-excludes",
          "type": "blob",
          "size": 0.427734375,
          "content": ".*json\n.*rst\n.*svg\n.*xml\n.*zip\n.clang-format\n.gitattributes\n.gitignore\n.rat-excludes\nDISCLAIMER-WIP\nLICENSE\nNOTICE\ngutil/*\nglibc-compatibility/*\napache-orc/*\nclucene/*\nmanifest\npatches/*\ndata/*\ntest_data/*\ntest.zip\ntest.zip.md5\nwebroot/*\nnet_snmp_normal\n.*log\nlru_cache.*\njmockit/*\nstatus.*\nenv*\nlru*\nsignal_handler.h\nskiplist.h\nstring_search.hpp\ncoding.*\ncondition_variable.*\nmurmur_hash3.*\nutf8_check.cpp\n.markdownlintignore\nsse2neon.h\n"
        },
        {
          "name": ".shellcheckrc",
          "type": "blob",
          "size": 0.9267578125,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nsource-path=SCRIPTDIR\nsource-path=SCRIPTDIR/..\nsource-path=SCRIPTDIR/../..\nsource-path=thirdparty\n\nexternal-sources=true\n\nenable=all\ndisable=SC2310\ndisable=SC2312\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.345703125,
          "content": "# Code of Conduct\n\nThis is a project of the [Apache Software Foundation](https://apache.org)\nand follows the ASF [Code of Conduct](https://www.apache.org/foundation/policies/conduct).\n\nIf you observe behavior that violates those rules please follow the [ASF reporting guidelines](https://www.apache.org/foundation/policies/conduct#reporting-guidelines).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.5947265625,
          "content": "<!-- \nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n-->\n\n# Contribute to Doris\n\nThank you very much for your interest in the Doris project. We welcome your suggestions, comments (including criticisms), comments and contributions to the Doris project.\n\nYour suggestions, comments and comments on Doris can be made directly through GitHub's [Issues](https://github.com/apache/doris/issues/new/choose).\n\nThere are many ways to participate in and contribute to Doris projects: code implementation, test writing, process tool improvement, document improvement, and so on. Any contribution will be welcomed and you will be added to the list of contributors. Further, with sufficient contributions, you will have the opportunity to become a Committer of Apache with Apache mailbox and be included in the list of [Apache Committers](http://people.apache.org/committer-index.html).\n\nAny questions, you can contact us to get timely answers, including dev mail list or Slack.\n\n## Initial contact\n\nFor the first time in Doris community, you can:\n\n* Follow [Doris GitHub](https://github.com/apache/doris)\n* Subscribe to our [mailing list](./docs/en/community/subscribe-mail-list.md);\n* Join Doris [Slack](https://join.slack.com/t/apachedoriscommunity/shared_invite/zt-11jb8gesh-7IukzSrdea6mqoG0HB4gZg)\n\nLearn the development trends of Doris project in time and give your opinions on the topics you are concerned about.\n\n## Doris's code and documentation\n\nAs you can see from [GitHub](https://github.com/apache/doris), Apache Doris code base mainly consists of three parts: Frontend (FE), Backend (BE) and Broker (to support file reading on external storage systems such as HDFS). Documents are mainly the wiki on Doris website and GitHub, as well as the online help manual when running Doris. Details of these components can be found in the following table:\n\n| Component Name                                                    | Component Description                                      | Related Language |\n|-------------------------------------------------------------------|------------------------------------------------------------|------------------|\n| [Frontend daemon (FE)](https://github.com/apache/doris) | consists of a query coordinator and a metadata manager     | Java             |\n| [Backend daemon (BE)](https://github.com/apache/doris)  | Responsible for storing data and executing query fragments | C++              |\n| [Broker](https://github.com/apache/doris)               | Read HDFS data to Doris                                    | Java             |\n| [Website](https://github.com/apache/doris-website)      | Doris Website                                              | Markdown         |\n| [Github Wiki](https://github.com/apache/doris/wiki)     | Doris Github Wiki                                          | Markdown         |\n| Doris Runtime Help Document                                       | Online Help Manual at Doris Runtime                        | Markdown         |\n\n## Improving documentation\n\nDocumentation is the most important way for you to understand Apache Doris, and it's where we need help most!\n\nBrowse the document, you can deepen your understanding of Doris, can also help you understand Doris's function and technical details, if you find that the document has problems, please contact us in time;\n\nIf you are interested in improving the quality of documents, whether it is revising the address of a page, correcting a link, and writing a better introductory document, we are very welcome!\n\nMost of our documents are written in Markdown format, and you can modify and submit document changes directly through `docs/` in [GitHub](https://github.com/apache/doris). If you submit code changes, you can refer to [Pull Request](./docs/en/community/how-to-contribute/pull-request.md).\n\n## If a Bug or problem is found\n\nIf a Bug or problem is found, you can directly raise a new Issue through GitHub's [Issues](https://github.com/apache/doris/issues/new/choose), and we will have someone deal with it regularly.\n\nYou can also fix it yourself by reading the analysis code (of course, it's better to talk to us before that, maybe someone has fixed the same problem) and submit a [Pull Request](./docs/en/community/how-to-contribute/pull-request.md).\n\n## Modify the code and submit PR (Pull Request)\n\nYou can download the code, compile and install it, deploy and run it for a try (refer to the [compilation document](./docs/en/installing/compilation.md)) to see if it works as you expected. If you have problems, you can contact us directly, ask questions or fix them by reading and analyzing the source code.\n\nWhether it's fixing Bugs or adding Features, we're all very welcome. If you want to submit code to Doris, you need to create a new branch for your submitted code from the fork code library on GitHub to your project space, add the source project upstream, and submit PR.\n\nAbout how to submit a PR refer to [Pull Request](./docs/en/community/how-to-contribute/pull-request.md).\n"
        },
        {
          "name": "CONTRIBUTING_CN.md",
          "type": "blob",
          "size": 4.9189453125,
          "content": "<!--\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n-->\n\n# 为 Doris 做贡献\n\n非常感谢您对 Doris 项目感兴趣，我们非常欢迎您对 Doris 项目的各种建议、意见（包括批评）、评论和贡献。\n\n您对 Doris 的各种建议、意见、评论可以直接通过 GitHub 的 [Issues](https://github.com/apache/doris/issues/new/choose) 提出。\n\n参与 Doris 项目并为其作出贡献的方法有很多：代码实现、测试编写、流程工具改进、文档完善等等。任何贡献我们都会非常欢迎，并将您加入贡献者列表，进一步，有了足够的贡献后，您还可以有机会成为 Apache 的 Committer，拥有 Apache 邮箱，并被收录到 [Apache Committer 列表中](http://people.apache.org/committer-index.html)。\n\n任何问题，您都可以联系我们得到及时解答，联系方式包括 dev 邮件组，Slack 等。\n\n## 初次接触\n\n初次来到 Doris 社区，您可以：\n\n* 关注 Doris [GitHub 代码库](https://github.com/apache/doris)\n* 订阅我们的 [邮件列表](./docs/zh-CN/community/subscribe-mail-list.md)；\n* 加入 Doris 的 [Slack](https://join.slack.com/t/apachedoriscommunity/shared_invite/zt-11jb8gesh-7IukzSrdea6mqoG0HB4gZg)\n\n通过以上方式及时了解 Doris 项目的开发动态并为您关注的话题发表意见。\n\n## Doris 的代码和文档\n\n正如您在 [GitHub](https://github.com/apache/doris) 上看到的，Apache Doris 的代码库主要包括三部分：Frontend (FE), Backend (BE) 和 Broker (为了支持 HDFS 等外部存储系统上的文件读取)。文档主要是 Doris 网站和 GitHub 上的 wiki，还有运行 Doris 的时候的在线帮助手册。这些组件的详细情况参见下表：\n\n| 组件名称 | 组件描述 | 相关语言 |\n|--------|----------------------------|----------|\n| [Frontend daemon (FE)](https://github.com/apache/doris)| 由“查询协调器”和“元数据管理器”组成 | Java|\n| [Backend daemon (BE)](https://github.com/apache/doris) | 负责存储数据和执行查询片段 | C++|\n| [Broker](https://github.com/apache/doris) | 读取 HDFS 数据到 Doris | Java |\n| [Website](https://github.com/apache/doris-website) | Doris 网站 | Markdown |\n| [GitHub Wiki](https://github.com/apache/doris/wiki) | Doris GitHub Wiki | Markdown |\n| Doris 运行时 help 文档 | 运行 Doris 的时候的在线帮助手册 | Markdown |\n\n## 改进文档\n\n文档是您了解 Apache Doris 的最主要的方式，也是我们最需要帮助的地方！\n\n浏览文档，可以加深您对 Doris 的了解，也可以帮助您理解 Doris 的功能和技术细节，如果您发现文档有问题，请及时联系我们；\n\n如果您对改进文档的质量感兴趣，不论是修订一个页面的地址、更正一个链接、以及写一篇更优秀的入门文档，我们都非常欢迎！\n\n我们的文档大多数是使用 Markdown 格式编写的，您可以直接通过在 [GitHub](https://github.com/apache/doris) 中的 `docs/` 中修改并提交文档变更。如果提交代码变更，可以参阅 [Pull Request](./docs/zh-CN/community/how-to-contribute/pull-request.md)。\n\n## 如果发现了一个 Bug 或问题\n\n如果发现了一个 Bug 或问题，您可以直接通过 GitHub 的 [Issues](https://github.com/apache/doris/issues/new/choose) 提一个新的 Issue，我们会有人定期处理。\n\n您也可以通过阅读分析代码自己修复（当然在这之前最好能和我们交流下，或许已经有人在修复同样的问题了），然后提交一个 [Pull Request](./docs/zh-CN/community/how-to-contribute/pull-request.md)。\n\n## 修改代码和提交PR（Pull Request）\n\n您可以下载代码，编译安装，部署运行试一试（可以参考 [编译文档](./docs/zh-CN/installing/compilation.md)），看看是否与您预想的一样工作。如果有问题，您可以直接联系我们，提 Issue 或者通过阅读和分析源代码自己修复。\n\n无论是修复 Bug 还是增加 Feature，我们都非常欢迎。如果您希望给 Doris 提交代码，您需要从 GitHub 上 fork 代码库至您的项目空间下，为您提交的代码创建一个新的分支，添加源项目为upstream，并提交PR。\n提交PR的方式可以参考文档 [Pull Request](./docs/zh-CN/community/how-to-contribute/pull-request.md)。\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 36.484375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n--------------------------------------------------------------------------------\n\nbe/src/common/status.* : BSD-style license\n\n  Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n  Use of this source code is governed by a BSD-style license that can be\n  found in the LICENSE file. See the AUTHORS file for names of contributors.\n\n--------------------------------------------------------------------------------\n\nbe/src/gutil/atomicops-internals-x86.h : Apache 2.0 License\n\nCopyright 2003 Google Inc.\n\n--------------------------------------------------------------------------------\n\nbe/src/gutil/atomicops-internals-x86.cc : Apache 2.0 License\n\nCopyright 2007 Google Inc.\n\n--------------------------------------------------------------------------------\n\nbe/src/gutil/arm_instruction_set_select.h : Apache 2.0 License\n\nCopyright 2011 Google Inc.\n\n--------------------------------------------------------------------------------\n\nbe/src/gutil/stl_util.h : Apache 2.0 License\n\nCopyright 2007 Google Inc.\n\n--------------------------------------------------------------------------------\n\nbe/src/gutil/utf/*: licensed under the following terms:\n\n  UTF-8 Library\n\n  The authors of this software are Rob Pike and Ken Thompson.\n      Copyright (c) 1998-2002 by Lucent Technologies.\n\n  Permission to use, copy, modify, and distribute this software for any purpose without\n  fee is hereby granted, provided that this entire notice is included in all copies of any\n  software which is or includes a copy or modification of this software and in all copies\n  of the supporting documentation for such software.  THIS SOFTWARE IS BEING PROVIDED \"AS\n  IS\", WITHOUT ANY EXPRESS OR IMPLIED WARRANTY.  IN PARTICULAR, NEITHER THE AUTHORS NOR\n  LUCENT TECHNOLOGIES MAKE ANY REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE\n  MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR PURPOSE.\n\n--------------------------------------------------------------------------------\n\nbe/src/gutil: 3-clause BSD\n\nExcept above files in this module, other files of this module are derived from code in\nthe Chromium project, copyright (c) Google inc and (c) The Chromium Authors and \nlicensed under the 3-clause BSD license:\n\n  Copyright (c) 2013 The Chromium Authors. All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without modification, are\n  permitted provided that the following conditions are met:\n\n     * Redistributions of source code must retain the above copyright\n       notice, this list of conditions and the following disclaimer.\n\n     * Redistributions in binary form must reproduce the above copyright notice, this list\n       of conditions and the following disclaimer in the documentation and/or other\n       materials provided with the distribution.  \n       \n     * Neither the name of Google Inc. nor the names of its contributors may be used to \n       endorse or promote products derived from this software without specific prior \n       written permission.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\n  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL\n  THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT\n  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nParts of be/src/runtime/string_search.hpp: Python Software License V2\n\n  Copyright (c) 2001 - 2016 Python Software Foundation; All Rights Reserved\n\n  PYTHON SOFTWARE FOUNDATION LICENSE VERSION 2\n  --------------------------------------------\n\n  1. This LICENSE AGREEMENT is between the Python Software Foundation (\"PSF\"), and the\n  Individual or Organization (\"Licensee\") accessing and otherwise using this software\n  (\"Python\") in source or binary form and its associated documentation.\n\n  2. Subject to the terms and conditions of this License Agreement, PSF hereby grants\n  Licensee a nonexclusive, royalty-free, world-wide license to reproduce, analyze, test,\n  perform and/or display publicly, prepare derivative works, distribute, and otherwise use\n  Python alone or in any derivative version, provided, however, that PSF's License\n  Agreement and PSF's notice of copyright, i.e., \"Copyright (c) 2001, 2002, 2003, 2004,\n  2005, 2006 Python Software Foundation; All Rights Reserved\" are retained in Python alone\n  or in any derivative version prepared by Licensee.\n\n  3. In the event Licensee prepares a derivative work that is based on or incorporates\n  Python or any part thereof, and wants to make the derivative work available to others as\n  provided herein, then Licensee hereby agrees to include in any such work a brief summary\n  of the changes made to Python.\n\n  4. PSF is making Python available to Licensee on an \"AS IS\" basis. PSF MAKES NO\n  REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED. BY WAY OF EXAMPLE, BUT NOT\n  LIMITATION, PSF MAKES NO AND DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY\n  OR FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON WILL NOT INFRINGE ANY\n  THIRD PARTY RIGHTS.\n\n  5. PSF SHALL NOT BE LIABLE TO LICENSEE OR ANY OTHER USERS OF PYTHON FOR ANY INCIDENTAL,\n  SPECIAL, OR CONSEQUENTIAL DAMAGES OR LOSS AS A RESULT OF MODIFYING, DISTRIBUTING, OR\n  OTHERWISE USING PYTHON, OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY\n  THEREOF.\n\n  6. This License Agreement will automatically terminate upon a material breach of its\n  terms and conditions.\n\n  7. Nothing in this License Agreement shall be deemed to create any relationship of\n  agency, partnership, or joint venture between PSF and Licensee. This License Agreement\n  does not grant permission to use PSF trademarks or trade name in a trademark sense to\n  endorse or promote products or services of Licensee, or any third party.\n\n  8. By copying, installing or otherwise using Python, Licensee agrees to be bound by the\n  terms and conditions of this License Agreement.\n\n--------------------------------------------------------------------------------\n\nbe/src/env (some portions): 3-clause BSD\n\nSome portions of this module are derived from code from RocksDB\n( https://github.com/facebook/rocksdb ). RocksDB is dual-licensed\n under both the GPLv2 and Apache 2.0 License. We select Apache 2.0\nLicense.\n\n--------------------------------------------------------------------------------\n\nbe/src/util/coding.*: this code is licensed under both GPLv2 and Apache 2.0 License.\n                      Doris chooses Apache 2.0 License.\n\n  Copyright (c) 2011-present, Facebook, Inc.  All rights reserved.\n  This source code is licensed under both the GPLv2 (found in the\n  COPYING file in the root directory) and Apache 2.0 License\n  (found in the LICENSE.Apache file in the root directory).\n  \n  Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n  Use of this source code is governed by a BSD-style license that can be\n  found in the LICENSE file. See the AUTHORS file for names of contributors.\n\n--------------------------------------------------------------------------------\n\nbe/src/olap/lru_cache.h : BSD-style license\nbe/src/olap/lru_cache.cpp : BSD-style license\n\n  Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n  Use of this source code is governed by a BSD-style license that can be\n  found in the LICENSE file. See the AUTHORS file for names of contributors.\n\n--------------------------------------------------------------------------------\n\nbe/src/olap/skiplist.h : BSD-style license\n\n  Copyright (c) 2011 The LevelDB Authors. All rights reserved.\n  Use of this source code is governed by a BSD-style license that can be\n  found in the LICENSE file. See the AUTHORS file for names of contributors.\n\n--------------------------------------------------------------------------------\n\nbe/src/util/murmur_hash3.h\nbe/src/util/murmur_hash3.cpp\n\n  licensed under the following terms:\n\n  MurmurHash3 was written by Austin Appleby, and is placed in the public\n  domain. The author hereby disclaims copyright to this source code.\n\n--------------------------------------------------------------------------------\n\nfe/fe-common/src/main/java/org/apache/doris/common/jmockit/*: MIT license\n\nCopyright (c) 2006 JMockit developers\n\nPermission is hereby granted, free of charge, to any person obtaining \na copy of this software and associated documentation files (the \n\"Software\"), to deal in the Software without restriction, including \nwithout limitation the rights to use, copy, modify, merge, publish, \ndistribute, sublicense, and/or sell copies of the Software, and to \npermit persons to whom the Software is furnished to do so, subject to \nthe following conditions:\n\nThe above copyright notice and this permission notice shall be \nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF \nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY \nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, \nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n-------------------------------------------------------------------------------\n\nbe/src/util/utf8_check.cpp: MIT license\n\n  MIT License\n  \n  Copyright (c) 2019 Yibo Cai\n  \n  Permission is hereby granted, free of charge, to any person obtaining a copy\n  of this software and associated documentation files (the \"Software\"), to deal\n  in the Software without restriction, including without limitation the rights\n  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  copies of the Software, and to permit persons to whom the Software is\n  furnished to do so, subject to the following conditions:\n  \n  The above copyright notice and this permission notice shall be included in all\n  copies or substantial portions of the Software.\n  \n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nbe/src/util/condition_variable* : BSD-style license\n\nCopyright (c) 2011 The Chromium Authors. All rights reserved.\nUse of this source code is governed by a BSD-style license that can be\nfound in the LICENSE file.\n\n--------------------------------------------------------------------------------\n\ndocs/.vuepress/* The MIT License (MIT)\n\nCopyright (c) 2018-present, Yuxi (Evan) You\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n--------------------------------------------------------------------------------\n\nbe/src/util/sse2neon.h: MIT license\n\nThis header file provides a simple API translation layer\nbetween SSE intrinsics to their corresponding Arm/Aarch64 NEON versions\n\nThis header file does not yet translate all of the SSE intrinsics.\n\nContributors to this work are:\n  John W. Ratcliff <jratcliffscarab@gmail.com>\n  Brandon Rowlett <browlett@nvidia.com>\n  Ken Fast <kfast@gdeb.com>\n  Eric van Beurden <evanbeurden@nvidia.com>\n  Alexander Potylitsin <apotylitsin@nvidia.com>\n  Hasindu Gamaarachchi <hasindu2008@gmail.com>\n  Jim Huang <jserv@biilabs.io>\n  Mark Cheng <marktwtn@biilabs.io>\n  Malcolm James MacLeod <malcolm@gulden.com>\n  Devin Hussey (easyaspi314) <husseydevin@gmail.com>\n\nThe MIT license:\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n--------------------------------------------------------------------------------\n\nbuild-support/run_clang_format.py: MIT license\n\nThis script is copied from:\nhttps://github.com/DoozyX/clang-format-lint-action/blob/master/run-clang-format.py\n\nwhich is a wrapper script around clang-format, suitable for linting multiple files\nand to use for continuous integration.\n\nMIT License\n\nCopyright (c) 2019 Slobodan Kletnikov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n--------------------------------------------------------------------------------\n\nbe/src/common/signal_handler.h:\n\nCopyright (c) 2008, Google Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n    * Neither the name of Google Inc. nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nfe/fe-core/src/main/antlr4/org/apache/doris/nereids/JavaLexer.g4: BSD licence\n\n[The \"BSD licence\"]\n Copyright (c) 2013 Terence Parr, Sam Harwell\n Copyright (c) 2017 Ivan Kochurkin (upgrade to Java 8)\n Copyright (c) 2021 Michał Lorek (upgrade to Java 11)\n Copyright (c) 2022 Michał Lorek (upgrade to Java 17)\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n 1. Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n 3. The name of the author may not be used to endorse or promote products\n    derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n--------------------------------------------------------------------------------\n\nfe/fe-core/src/main/antlr4/org/apache/doris/nereids/JavaParser.g4: BSD licence\n\n [The \"BSD licence\"]\n Copyright (c) 2013 Terence Parr, Sam Harwell\n Copyright (c) 2017 Ivan Kochurkin (upgrade to Java 8)\n Copyright (c) 2021 Michał Lorek (upgrade to Java 11)\n Copyright (c) 2022 Michał Lorek (upgrade to Java 17)\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions\n are met:\n 1. Redistributions of source code must retain the above copyright\n    notice, this list of conditions and the following disclaimer.\n 2. Redistributions in binary form must reproduce the above copyright\n    notice, this list of conditions and the following disclaimer in the\n    documentation and/or other materials provided with the distribution.\n 3. The name of the author may not be used to endorse or promote products\n    derived from this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n ----------------------------------------------------------------------------------\n\n docs/.vuepress/public/js/jquery.min.js: \n\n jQuery v2.1.4 | (c) 2005, 2015 jQuery Foundation, Inc. | jquery.org/license\n\n----------------------------------------------------------------------------------\n\n docs/.vuepress/public/css/animate.min.css: MIT license\n\nAnimate.css - http://daneden.me/animate\nLicensed under the MIT license\n\nCopyright (c) 2013 Daniel Eden\n\nPermission is hereby granted, free of charge, to any person obtaining \na copy of this software and associated documentation files (the \"Software\"), \nto deal in the Software without restriction, including without limitation \nthe rights to use, copy, modify, merge, publish, distribute, sublicense, \nand/or sell copies of the Software, and to permit persons to whom the Software \nis furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included \nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. \nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, \nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, \nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE \nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n----------------------------------------------------------------------------------\ndocs/.vuepress/public/js/wow.min.js: \n\nThe MIT License (MIT)\n\nCopyright (c) 2016 Thomas Grainger.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n\nPortions of this wow.js Software may utilize the following copyrighted material, the use of which is hereby acknowledged.\n\nWOW: https://github.com/matthieua/WOW/tree/20848c410fe32d161c2330e1d261b59512094f81\n\nCopyright (C) 2014; Matthieu Aussaguel\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n----------------------------------------------------------------------------------\n\nbe/src/util/jsonb*: BSD-style license\n\nCopyright (c) 2014, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.\n\n----------------------------------------------------------------------------------\n\nme.bechberger.ap-loader-all: Apache 2.0 license\n\nApache 2.0, Copyright 2023 SAP SE or an SAP affiliate company, Johannes Bechberger and ap-loader contributors\n\nThis project is maintained by the SapMachine team at SAP SE\n\n----------------------------------------------------------------------------------\n\nbe/tools/FlameGraph/*.pl: COMMON DEVELOPMENT AND DISTRIBUTION LICENSE Version 1.0\n\nUnless otherwise noted, all files in this distribution are released\nunder the Common Development and Distribution License (CDDL).\nExceptions are noted within the associated source files.\n\n----------------------------------------------------------------------------------\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 1.90234375,
          "content": "Apache Doris\nCopyright 2018-2024 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nBased on source code originally developed by\nBaidu (http://www.baidu.com/).\n\n--------------------------------------------------------------------------------\n\nThis product includes code from Apache Impala, which includes the following in\nits NOTICE file:\n\n    Apache Impala\n    Copyright 2019 The Apache Software Foundation\n\n    This product includes software developed at\n    The Apache Software Foundation (http://www.apache.org/).\n\n    Portions of this software were developed at\n    Cloudera, Inc (http://www.cloudera.com/).\n\n    This product includes software developed by the OpenSSL\n    Project for use in the OpenSSL Toolkit (http://www.openssl.org/)\n\n    This product includes cryptographic software written by Eric Young\n    (eay@cryptsoft.com).  This product includes software written by Tim\n    Hudson (tjh@cryptsoft.com).\n\n    This product includes software developed by the University of Chicago,\n    as Operator of Argonne National Laboratory.\n    Copyright (C) 1999 University of Chicago. All rights reserved.\n\n--------------------------------------------------------------------------------\n\nThis product includes code from Apache Kudu, which includes the following in\nits NOTICE file:\n\n    Apache Kudu\n    Copyright 2016 The Apache Software Foundation\n\n    This product includes software developed at\n    The Apache Software Foundation (http://www.apache.org/).\n\n    Portions of this software were developed at\n    Cloudera, Inc (http://www.cloudera.com/).\n\n    This product includes software developed by the OpenSSL\n    Project for use in the OpenSSL Toolkit (http://www.openssl.org/)\n\n    This product includes cryptographic software written by Eric Young\n    (eay@cryptsoft.com).  This product includes software written by Tim\n    Hudson (tjh@cryptsoft.com).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.802734375,
          "content": "<!--\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n-->\n\n<div align=\"center\">\n\n# Apache Doris\n\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![GitHub release](https://img.shields.io/github/release/apache/doris.svg)](https://github.com/apache/doris/releases)\n[![OSSRank](https://shields.io/endpoint?url=https://ossrank.com/shield/516)](https://ossrank.com/p/516)\n[![Commit activity](https://img.shields.io/github/commit-activity/m/apache/doris)](https://github.com/apache/doris/commits/master/)\n[![EN doc](https://img.shields.io/badge/Docs-English-blue.svg)](https://doris.apache.org/docs/get-starting/quick-start)\n[![CN doc](https://img.shields.io/badge/文档-中文版-blue.svg)](https://doris.apache.org/zh-CN/docs/get-starting/quick-start/)\n\n<div>\n\n[![Official Website](<https://img.shields.io/badge/-Visit%20the%20Official%20Website%20%E2%86%92-rgb(15,214,106)?style=for-the-badge>)](https://doris.apache.org/)\n[![Quick Download](<https://img.shields.io/badge/-Quick%20%20Download%20%E2%86%92-rgb(66,56,255)?style=for-the-badge>)](https://doris.apache.org/download)\n\n\n</div>\n\n\n<div>\n    <a href=\"https://twitter.com/doris_apache\"><img src=\"https://img.shields.io/badge/- @Doris_Apache -424549?style=social&logo=x\" height=25></a>\n    &nbsp;\n    <a href=\"https://github.com/apache/doris/discussions\"><img src=\"https://img.shields.io/badge/- Discussion -red?style=social&logo=discourse\" height=25></a>\n    &nbsp;\n    <a href=\"https://apachedoriscommunity.slack.com/join/shared_invite/zt-2kl08hzc0-SPJe4VWmL_qzrFd2u2XYQA\"><img src=\"https://img.shields.io/badge/-Slack-red?style=social&logo=slack\" height=25></a>\n    &nbsp;\n    <a href=\"https://medium.com/@ApacheDoris\"><img src=\"https://img.shields.io/badge/-Medium-red?style=social&logo=medium\" height=25></a>\n\n</div>\n\n</div>\n\n---\n\n\n\n\nApache Doris is an easy-to-use, high-performance and real-time analytical database based on MPP architecture, known for its extreme speed and ease of use. It only requires a sub-second response time to return query results under massive data and can support not only high-concurrent point query scenarios but also high-throughput complex analysis scenarios.\n\nAll this makes Apache Doris an ideal tool for scenarios including report analysis, ad-hoc query, unified data warehouse, and data lake query acceleration. On Apache Doris, users can build various applications, such as user behavior analysis, AB test platform, log retrieval analysis, user portrait analysis, and order analysis.\n\n🎉 Check out the 🔗[All releases](https://doris.apache.org/docs/releasenotes/all-release), where you'll find a chronological summary of Apache Doris versions released over the past year.\n\n👀 Explore the 🔗[Official Website](https://doris.apache.org/) to discover Apache Doris's core features, blogs, and user cases in detail.\n\n## 📈 Usage Scenarios\n\nAs shown in the figure below, after various data integration and processing, the data sources are usually stored in the real-time data warehouse Apache Doris and the offline data lake or data warehouse (in Apache Hive, Apache Iceberg or Apache Hudi).\n\n<br />\n\n<img src=\"https://cdn.selectdb.com/static/What_is_Apache_Doris_3_a61692c2ce.png\" />\n\n<br />\n\nApache Doris is widely used in the following scenarios:\n\n- Reporting Analysis\n\n    - Real-time dashboards\n    - Reports for in-house analysts and managers\n    - Highly concurrent user-oriented or customer-oriented report analysis: such as website analysis and ad reporting that usually require thousands of QPS and quick response times measured in milliseconds. A successful user case is that Doris has been used by the Chinese e-commerce giant JD.com in ad reporting, where it receives 10 billion rows of data per day, handles over 10,000 QPS, and delivers a 99 percentile query latency of 150 ms.\n\n- Ad-Hoc Query. Analyst-oriented self-service analytics with irregular query patterns and high throughput requirements. XiaoMi has built a growth analytics platform (Growth Analytics, GA) based on Doris, using user behavior data for business growth analysis, with an average query latency of 10 seconds and a 95th percentile query latency of 30 seconds or less, and tens of thousands of SQL queries per day.\n\n- Unified Data Warehouse Construction. Apache Doris allows users to build a unified data warehouse via one single platform and save the trouble of handling complicated software stacks. Chinese hot pot chain Haidilao has built a unified data warehouse with Doris to replace its old complex architecture consisting of Apache Spark, Apache Hive, Apache Kudu, Apache HBase, and Apache Phoenix.\n\n- Data Lake Query. Apache Doris avoids data copying by federating the data in Apache Hive, Apache Iceberg, and Apache Hudi using external tables, and thus achieves outstanding query performance.\n\n## 🖥️ Core Concepts\n\n### 📂 Architecture of Apache Doris\n\nThe overall architecture of Apache Doris is shown in the following figure. The Doris architecture is very simple, with only two types of processes.\n\n- Frontend (FE): user request access, query parsing and planning, metadata management, node management, etc.\n\n- Backend (BE): data storage and query plan execution\n\nBoth types of processes are horizontally scalable, and a single cluster can support up to hundreds of machines and tens of petabytes of storage capacity. And these two types of processes guarantee high availability of services and high reliability of data through consistency protocols. This highly integrated architecture design greatly reduces the operation and maintenance cost of a distributed system.\n\n<br />\n\n![The overall architecture of Apache Doris](https://cdn.selectdb.com/static/What_is_Apache_Doris_adb26397e2.png)\n\n<br />\n\nIn terms of interfaces, Apache Doris adopts MySQL protocol, supports standard SQL, and is highly compatible with MySQL dialect. Users can access Doris through various client tools and it supports seamless connection with BI tools.\n\n### 💾 Storage Engine\n\nDoris uses a columnar storage engine, which encodes, compresses, and reads data by column. This enables a very high compression ratio and largely reduces irrelavant data scans, thus making more efficient use of IO and CPU resources. Doris supports various index structures to minimize data scans:\n\n- Sorted Compound Key Index: Users can specify three columns at most to form a compound sort key. This can effectively prune data to better support highly concurrent reporting scenarios.\n- MIN/MAX Indexing: This enables effective filtering of equivalence and range queries for numeric types.\n- Bloom Filter: very effective in equivalence filtering and pruning of high cardinality columns\n- Invert Index: This enables fast search for any field.\n\n\n### 💿 Storage Models\n\nDoris supports a variety of storage models and has optimized them for different scenarios:\n\n- Aggregate Key Model: able to merge the value columns with the same keys and significantly improve performance\n\n- Unique Key Model: Keys are unique in this model and data with the same key will be overwritten to achieve row-level data updates.\n\n- Duplicate Key Model: This is a detailed data model capable of detailed storage of fact tables.\n\nDoris also supports strongly consistent materialized views. Materialized views are automatically selected and updated, which greatly reduces maintenance costs for users.\n\n### 🔍 Query Engine\n\nDoris adopts the MPP model in its query engine to realize parallel execution between and within nodes. It also supports distributed shuffle join for multiple large tables so as to handle complex queries.\n\n<br />\n\n![Query Engine](https://cdn.selectdb.com/static/What_is_Apache_Doris_1_c6f5ba2af9.png)\n\n<br />\n\nThe Doris query engine is vectorized, with all memory structures laid out in a columnar format. This can largely reduce virtual function calls, improve cache hit rates, and make efficient use of SIMD instructions. Doris delivers a 5–10 times higher performance in wide table aggregation scenarios than non-vectorized engines.\n\n<br />\n\n![Doris query engine](https://cdn.selectdb.com/static/What_is_Apache_Doris_2_29cf58cc6b.png)\n\n<br />\n\nApache Doris uses Adaptive Query Execution technology to dynamically adjust the execution plan based on runtime statistics. For example, it can generate runtime filter, push it to the probe side, and automatically penetrate it to the Scan node at the bottom, which drastically reduces the amount of data in the probe and increases join performance. The runtime filter in Doris supports In/Min/Max/Bloom filter.\n\n### 🚅 Query Optimizer\n\nIn terms of optimizers, Doris uses a combination of CBO and RBO. RBO supports constant folding, subquery rewriting, predicate pushdown and CBO supports Join Reorder. The Doris CBO is under continuous optimization for more accurate statistical information collection and derivation, and more accurate cost model prediction.\n\n\n**Technical Overview**: 🔗[Introduction to Apache Doris](https://doris.apache.org/docs/dev/summary/basic-summary)\n\n## 🎆 Why choose Apache Doris?\n\n- 🎯 **Easy to Use:** Two processes, no other dependencies; online cluster scaling, automatic replica recovery; compatible with MySQL protocol, and using standard SQL.\n\n- 🚀 **High Performance:** Extremely fast performance for low-latency and high-throughput queries with columnar storage engine, modern MPP architecture, vectorized query engine, pre-aggregated materialized view and data index.\n\n- 🖥️ **Single Unified:** A single system can support real-time data serving, interactive data analysis and offline data processing scenarios.\n\n- ⚛️ **Federated Querying:** Supports federated querying of data lakes such as Hive, Iceberg, Hudi, and databases such as MySQL and Elasticsearch.\n\n- ⏩ **Various Data Import Methods:** Supports batch import from HDFS/S3 and stream import from MySQL Binlog/Kafka; supports micro-batch writing through HTTP interface and real-time writing using Insert in JDBC.\n\n- 🚙 **Rich Ecology:** Spark uses Spark-Doris-Connector to read and write Doris; Flink-Doris-Connector enables Flink CDC to implement exactly-once data writing to Doris; DBT Doris Adapter is provided to transform data in Doris with DBT.\n\n## 🙌 Contributors\n\n**Apache Doris has graduated from Apache incubator successfully and become a Top-Level Project in June 2022**. \n\nWe deeply appreciate 🔗[community contributors](https://github.com/apache/doris/graphs/contributors) for their contribution to Apache Doris.\n\n[![contrib graph](https://contrib.rocks/image?repo=apache/doris)](https://github.com/apache/doris/graphs/contributors)\n\n## 👨‍👩‍👧‍👦 Users\n\nApache Doris now has a wide user base in China and around the world, and as of today, **Apache Doris is used in production environments in thousands of companies worldwide.** More than 80% of the top 50 Internet companies in China in terms of market capitalization or valuation have been using Apache Doris for a long time, including Baidu, Meituan, Xiaomi, Jingdong, Bytedance, Tencent, NetEase, Kwai, Sina, 360, Mihoyo, and Ke Holdings. It is also widely used in some traditional industries such as finance, energy, manufacturing, and telecommunications.\n\nThe users of Apache Doris: 🔗[Users](https://doris.apache.org/users)\n\nAdd your company logo at Apache Doris Website: 🔗[Add Your Company](https://github.com/apache/doris/discussions/27683)\n \n## 👣 Get Started\n\n### 📚 Docs\n\nAll Documentation   🔗[Docs](https://doris.apache.org/docs/get-starting/quick-start)  \n\n### ⬇️ Download \n\nAll release and binary version 🔗[Download](https://doris.apache.org/download) \n\n### 🗄️ Compile\n\nSee how to compile  🔗[Compilation](https://doris.apache.org/docs/dev/install/source-install/compilation-general)\n\n### 📮 Install\n\nSee how to install and deploy 🔗[Installation and deployment](https://doris.apache.org/docs/dev/install/cluster-deployment/standard-deployment) \n\n## 🧩 Components\n\n### 📝 Doris Connector\n\nDoris provides support for Spark/Flink to read data stored in Doris through Connector, and also supports to write data to Doris through Connector.\n\n🔗[apache/doris-flink-connector](https://github.com/apache/doris-flink-connector)\n\n🔗[apache/doris-spark-connector](https://github.com/apache/doris-spark-connector)\n\n\n## 🌈 Community and Support\n\n### 📤 Subscribe Mailing Lists\n\nMail List is the most recognized form of communication in Apache community. See how to 🔗[Subscribe Mailing Lists](https://doris.apache.org/community/subscribe-mail-list)\n\n### 🙋 Report Issues or Submit Pull Request\n\nIf you meet any questions, feel free to file a 🔗[GitHub Issue](https://github.com/apache/doris/issues) or post it in 🔗[GitHub Discussion](https://github.com/apache/doris/discussions) and fix it by submitting a 🔗[Pull Request](https://github.com/apache/doris/pulls) \n\n### 🍻 How to Contribute\n\nWe welcome your suggestions, comments (including criticisms), comments and contributions. See 🔗[How to Contribute](https://doris.apache.org/community/how-to-contribute/) and 🔗[Code Submission Guide](https://doris.apache.org/community/how-to-contribute/pull-request/)\n\n### ⌨️ Doris Improvement Proposals (DSIP)\n\n🔗[Doris Improvement Proposal (DSIP)](https://cwiki.apache.org/confluence/display/DORIS/Doris+Improvement+Proposals) can be thought of as **A Collection of Design Documents for all Major Feature Updates or Improvements**.\n\n### 🔑 Backend C++ Coding Specification\n🔗 [Backend C++ Coding Specification](https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=240883637) should be strictly followed, which will help us achieve better code quality.\n\n## 💬 Contact Us\n\nContact us through the following mailing list.\n\n| Name                                                                          | Scope                           |                                                                 |                                                                     |                                                                              |\n|:------------------------------------------------------------------------------|:--------------------------------|:----------------------------------------------------------------|:--------------------------------------------------------------------|:-----------------------------------------------------------------------------|\n| [dev@doris.apache.org](mailto:dev@doris.apache.org)     | Development-related discussions | [Subscribe](mailto:dev-subscribe@doris.apache.org)   | [Unsubscribe](mailto:dev-unsubscribe@doris.apache.org)   | [Archives](http://mail-archives.apache.org/mod_mbox/doris-dev/)   |\n\n## 🧰 Links\n\n* Apache Doris Official Website - [Site](https://doris.apache.org)\n* Developer Mailing list - <dev@doris.apache.org>. Mail to <dev-subscribe@doris.apache.org>, follow the reply to subscribe the mail list.\n* Slack channel - [Join the Slack](https://join.slack.com/t/apachedoriscommunity/shared_invite/zt-28il1o2wk-DD6LsLOz3v4aD92Mu0S0aQ)\n* Twitter - [Follow @doris_apache](https://twitter.com/doris_apache)\n\n\n## 📜 License\n\n[Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0)\n\n> **Note**\n> Some licenses of the third-party dependencies are not compatible with Apache 2.0 License. So you need to disable\nsome Doris features to be complied with Apache 2.0 License. For details, refer to the `thirdparty/LICENSE.txt`\n\n\n\n"
        },
        {
          "name": "be",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-for-release.sh",
          "type": "blob",
          "size": 3.974609375,
          "content": "#!/usr/bin/env bash\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n##############################################################\n# This script is used to build for Apache Doris Release\n##############################################################\n\nset -eo pipefail\n\nROOT=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &>/dev/null && pwd)\"\n\nexport DORIS_HOME=\"${ROOT}\"\n\n# Check args\nusage() {\n    echo \"\nUsage: $0 --version version <options>\n  Optional options:\n     [no option]        build with avx2\n     --noavx2           build without avx2\n     --tar              pack the output\n\n  Eg.\n    $0 --version 1.2.0                      build with avx2\n    $0 --noavx2 --version 1.2.0             build without avx2\n    $0 --version 1.2.0 --tar                build with avx2 and pack the output\n  \"\n    exit 1\n}\n\nif ! OPTS=\"$(getopt \\\n    -n \"$0\" \\\n    -o '' \\\n    -l 'noavx2' \\\n    -l 'tar' \\\n    -l 'version:' \\\n    -l 'help' \\\n    -- \"$@\")\"; then\n    usage\nfi\n\neval set -- \"${OPTS}\"\n\n_USE_AVX2=1\nTAR=0\nHELP=0\nVERSION=\nif [[ \"$#\" == 1 ]]; then\n    _USE_AVX2=1\nelse\n    while true; do\n        case \"$1\" in\n        --noavx2)\n            _USE_AVX2=0\n            shift\n            ;;\n        --tar)\n            TAR=1\n            shift\n            ;;\n        --version)\n            VERSION=\"$2\"\n            shift 2\n            ;;\n        --help)\n            HELP=1\n            shift\n            ;;\n        --)\n            shift\n            break\n            ;;\n        *)\n            echo \"Internal error\"\n            exit 1\n            ;;\n        esac\n    done\nfi\n\nif [[ \"${HELP}\" -eq 1 ]]; then\n    usage\nfi\n\nif [[ -z ${VERSION} ]]; then\n    echo \"Must specify version\"\n    usage\nfi\n\necho \"Get params:\n    VERSION         -- ${VERSION}\n    USE_AVX2        -- ${_USE_AVX2}\n    TAR             -- ${TAR}\n\"\n\nARCH=\"$(uname -m)\"\n\nif [[ \"${ARCH}\" == \"aarch64\" ]]; then\n    ARCH=\"arm64\"\nelif [[ \"${ARCH}\" == \"x86_64\" ]]; then\n    ARCH=\"x64\"\nelse\n    echo \"Unknown arch: ${ARCH}\"\n    exit 1\nfi\n\necho \"ARCH: ${ARCH}\"\n\nORI_OUTPUT=\"${ROOT}/output\"\nrm -rf \"${ORI_OUTPUT}\"\n\nFE=\"fe\"\nBE=\"be\"\nCLOUD=\"ms\"\nEXT=\"extensions\"\nTOOLS=\"tools\"\nPACKAGE=\"apache-doris-${VERSION}-bin-${ARCH}\"\n\nif [[ \"${_USE_AVX2}\" == \"0\" ]]; then\n    PACKAGE=\"${PACKAGE}-noavx2\"\nfi\n\nOUTPUT=\"${ORI_OUTPUT}/${PACKAGE}\"\nOUTPUT_FE=\"${OUTPUT}/${FE}\"\nOUTPUT_EXT=\"${OUTPUT}/${EXT}\"\nOUTPUT_BE=\"${OUTPUT}/${BE}\"\nOUTPUT_CLOUD=\"${OUTPUT}/${CLOUD}\"\nOUTPUT_TOOLS=\"${OUTPUT}/${TOOLS}\"\n\necho \"Package Name:\"\necho \"FE:    ${OUTPUT_FE}\"\necho \"BE:    ${OUTPUT_BE}\"\necho \"CLOUD: ${OUTPUT_CLOUD}\"\necho \"JAR:   ${OUTPUT_EXT}\"\n\nsh build.sh --clean &&\n    USE_AVX2=\"${_USE_AVX2}\" sh build.sh &&\n    USE_AVX2=\"${_USE_AVX2}\" sh build.sh --be --meta-tool --be-extension-ignore avro-scanner\n\necho \"Begin to pack\"\nrm -rf \"${OUTPUT}\"\nmkdir -p \"${OUTPUT_FE}\" \"${OUTPUT_BE}\" \"${OUTPUT_EXT}\" \"${OUTPUT_CLOUD}\" \"${OUTPUT_TOOLS}\"\n\n# FE\ncp -R \"${ORI_OUTPUT}\"/fe/* \"${OUTPUT_FE}\"/\n\n# EXT\ncp -R \"${ORI_OUTPUT}\"/apache_hdfs_broker \"${OUTPUT_EXT}\"/apache_hdfs_broker\n\n# BE\ncp -R \"${ORI_OUTPUT}\"/be/* \"${OUTPUT_BE}\"/\n\n# CLOUD\ncp -R \"${ORI_OUTPUT}\"/ms/* \"${OUTPUT_CLOUD}\"/\n\nif [[ \"${TAR}\" -eq 1 ]]; then\n    echo \"Begin to compress\"\n    cd \"${ORI_OUTPUT}\"\n    tar -cf - \"${PACKAGE}\" | xz -T0 -z - >\"${PACKAGE}\".tar.xz\n    cd -\nfi\n\n# TOOL\ncp -R \"${ORI_OUTPUT}\"/tools/* \"${OUTPUT_TOOLS}\"/\n\necho \"Output dir: ${OUTPUT}\"\nexit 0\n"
        },
        {
          "name": "build-plugin.sh",
          "type": "blob",
          "size": 2.9501953125,
          "content": "#!/usr/bin/env bash\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nset -eo pipefail\n\nROOT=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &>/dev/null && pwd)\"\n\nexport DORIS_HOME=\"${ROOT}\"\n\n. \"${DORIS_HOME}/env.sh\"\n\n# Check args\nusage() {\n    echo \"\nUsage: $0 <options>\n  Optional options:\n     --plugin           build special plugin\n  Eg.\n    $0 --plugin xxx     build xxx plugin\n    $0                  build all plugins\n  \"\n    exit 1\n}\n\nif ! OPTS=\"$(getopt \\\n    -n \"$0\" \\\n    -o '' \\\n    -o 'h' \\\n    -l 'plugin' \\\n    -l 'clean' \\\n    -l 'help' \\\n    -- \"$@\")\"; then\n    usage\nfi\n\neval set -- \"${OPTS}\"\n\nALL_PLUGIN=1\nCLEAN=0\nHELP=0\nif [[ \"$#\" == 1 ]]; then\n    # defuat\n    ALL_PLUGIN=1\n    CLEAN=0\nelse\n    while true; do\n        case \"$1\" in\n        --plugin)\n            ALL_PLUGIN=0\n            shift\n            ;;\n        --clean)\n            CLEAN=1\n            shift\n            ;;\n        -h)\n            HELP=1\n            shift\n            ;;\n        --help)\n            HELP=1\n            shift\n            ;;\n        --)\n            shift\n            break\n            ;;\n        *)\n            echo \"Internal error\"\n            exit 1\n            ;;\n        esac\n    done\nfi\n\nif [[ \"${HELP}\" -eq 1 ]]; then\n    usage\nfi\n\necho \"Get params:\n    BUILD_ALL_PLUGIN       -- ${ALL_PLUGIN}\n    CLEAN                  -- ${CLEAN}\n\"\n\ncd \"${DORIS_HOME}\"\nPLUGIN_MODULE=''\nif [[ \"${ALL_PLUGIN}\" -eq 1 ]]; then\n    cd \"${DORIS_HOME}/fe_plugins\"\n    if [[ \"${CLEAN}\" -eq 1 ]]; then\n        \"${MVN_CMD}\" clean\n    fi\n    echo \"build all plugins\"\n    \"${MVN_CMD}\" package -DskipTests\nelse\n    PLUGIN_MODULE=\"$1\"\n    cd \"${DORIS_HOME}/fe_plugins/${PLUGIN_MODULE}\"\n    if [[ \"${CLEAN}\" -eq 1 ]]; then\n        \"${MVN_CMD}\" clean\n    fi\n    echo \"build plugin ${PLUGIN_MODULE}\"\n    \"${MVN_CMD}\" package -DskipTests\nfi\n\ncd \"${DORIS_HOME}\"\n# Clean and prepare output dir\nDORIS_OUTPUT=\"${DORIS_HOME}/fe_plugins/output\"\nmkdir -p \"${DORIS_OUTPUT}\"\n\nif [[ \"${ALL_PLUGIN}\" -eq 1 ]]; then\n    cp -p \"${DORIS_HOME}/fe_plugins\"/*/target/*.zip \"${DORIS_OUTPUT}\"/\nelse\n    cp -p \"${DORIS_HOME}/fe_plugins/${PLUGIN_MODULE}/target\"/*.zip \"${DORIS_OUTPUT}\"/\nfi\n\necho \"***************************************\"\necho \"Successfully build Doris FE Plugin\"\necho \"***************************************\"\n\nexit 0\n"
        },
        {
          "name": "build-support",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 31.376953125,
          "content": "#!/usr/bin/env bash\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n##############################################################\n# This script is used to compile Apache Doris\n# Usage:\n#    sh build.sh --help\n#\n# You need to make sure all thirdparty libraries have been\n# compiled and installed correctly.\n##############################################################\n\nset -eo pipefail\n\nROOT=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &>/dev/null && pwd)\"\n\nexport DORIS_HOME=\"${ROOT}\"\nif [[ -z \"${DORIS_THIRDPARTY}\" ]]; then\n    export DORIS_THIRDPARTY=\"${DORIS_HOME}/thirdparty\"\nfi\nexport TP_INCLUDE_DIR=\"${DORIS_THIRDPARTY}/installed/include\"\nexport TP_LIB_DIR=\"${DORIS_THIRDPARTY}/installed/lib\"\n\n. \"${DORIS_HOME}/env.sh\"\n\n# Check args\nusage() {\n    echo \"\nUsage: $0 <options>\n  Optional options:\n     [no option]            build all components\n     --fe                   build Frontend and Spark DPP application. Default ON.\n     --be                   build Backend. Default ON.\n     --meta-tool            build Backend meta tool. Default OFF.\n     --cloud                build Cloud. Default OFF.\n     --index-tool           build Backend inverted index tool. Default OFF.\n     --benchmark            build Google Benchmark. Default OFF.\n     --broker               build Broker. Default ON.\n     --spark-dpp            build Spark DPP application. Default ON.\n     --hive-udf             build Hive UDF library for Spark Load. Default ON.\n     --be-java-extensions   build Backend java extensions. Default ON.\n     --be-extension-ignore  build be-java-extensions package, choose which modules to ignore. Multiple modules separated by commas.\n     --clean                clean and build target\n     --output               specify the output directory\n     -j                     build Backend parallel\n\n  Environment variables:\n    USE_AVX2                    If the CPU does not support AVX2 instruction set, please set USE_AVX2=0. Default is ON.\n    STRIP_DEBUG_INFO            If set STRIP_DEBUG_INFO=ON, the debug information in the compiled binaries will be stored separately in the 'be/lib/debug_info' directory. Default is OFF.\n    DISABLE_BE_JAVA_EXTENSIONS  If set DISABLE_BE_JAVA_EXTENSIONS=ON, we will do not build binary with java-udf,hudi-scanner,jdbc-scanner and so on Default is OFF.\n    DISABLE_JAVA_CHECK_STYLE    If set DISABLE_JAVA_CHECK_STYLE=ON, it will skip style check of java code in FE.\n    DISABLE_BUILD_AZURE         If set DISABLE_BUILD_AZURE=ON, it will not build azure into BE.\n\n  Eg.\n    $0                                      build all\n    $0 --be                                 build Backend\n    $0 --meta-tool                          build Backend meta tool\n    $0 --cloud                              build Cloud\n    $0 --index-tool                         build Backend inverted index tool\n    $0 --benchmark                          build Google Benchmark of Backend\n    $0 --fe --clean                         clean and build Frontend and Spark Dpp application\n    $0 --fe --be --clean                    clean and build Frontend, Spark Dpp application and Backend\n    $0 --spark-dpp                          build Spark DPP application alone\n    $0 --broker                             build Broker\n    $0 --be --fe                            build Backend, Frontend, Spark Dpp application and Java UDF library\n    $0 --be --coverage                      build Backend with coverage enabled\n    $0 --be --output PATH                   build Backend, the result will be output to PATH(relative paths are available)\n    $0 --be-extension-ignore avro-scanner   build be-java-extensions, choose which modules to ignore. Multiple modules separated by commas, like --be-extension-ignore avro-scanner,hudi-scanner\n\n    USE_AVX2=0 $0 --be                      build Backend and not using AVX2 instruction.\n    USE_AVX2=0 STRIP_DEBUG_INFO=ON $0       build all and not using AVX2 instruction, and strip the debug info for Backend\n  \"\n    exit 1\n}\n\nclean_gensrc() {\n    pushd \"${DORIS_HOME}/gensrc\"\n    make clean\n    rm -rf \"${DORIS_HOME}/gensrc/build\"\n    rm -rf \"${DORIS_HOME}/fe/fe-common/target\"\n    rm -rf \"${DORIS_HOME}/fe/fe-core/target\"\n    popd\n}\n\nclean_be() {\n    pushd \"${DORIS_HOME}\"\n\n    # \"build.sh --clean\" just cleans and exits, however CMAKE_BUILD_DIR is set\n    # while building be.\n    CMAKE_BUILD_TYPE=\"${BUILD_TYPE:-Release}\"\n    CMAKE_BUILD_DIR=\"${DORIS_HOME}/be/build_${CMAKE_BUILD_TYPE}\"\n\n    rm -rf \"${CMAKE_BUILD_DIR}\"\n    rm -rf \"${DORIS_HOME}/be/output\"\n    popd\n}\n\nclean_fe() {\n    pushd \"${DORIS_HOME}/fe\"\n    \"${MVN_CMD}\" clean\n    popd\n}\n\n# Copy the common files like licenses, notice.txt to output folder\nfunction copy_common_files() {\n    cp -r -p \"${DORIS_HOME}/NOTICE.txt\" \"$1/\"\n    cp -r -p \"${DORIS_HOME}/dist/LICENSE-dist.txt\" \"$1/\"\n    cp -r -p \"${DORIS_HOME}/dist/licenses\" \"$1/\"\n}\n\nif ! OPTS=\"$(getopt \\\n    -n \"$0\" \\\n    -o '' \\\n    -l 'fe' \\\n    -l 'be' \\\n    -l 'cloud' \\\n    -l 'broker' \\\n    -l 'meta-tool' \\\n    -l 'index-tool' \\\n    -l 'benchmark' \\\n    -l 'spark-dpp' \\\n    -l 'hive-udf' \\\n    -l 'be-java-extensions' \\\n    -l 'be-extension-ignore:' \\\n    -l 'clean' \\\n    -l 'coverage' \\\n    -l 'help' \\\n    -l 'output:' \\\n    -o 'hj:' \\\n    -- \"$@\")\"; then\n    usage\nfi\n\neval set -- \"${OPTS}\"\n\nPARALLEL=\"$(($(nproc) / 4 + 1))\"\nBUILD_FE=0\nBUILD_BE=0\nBUILD_CLOUD=0\nBUILD_BROKER=0\nBUILD_META_TOOL='OFF'\nBUILD_INDEX_TOOL='OFF'\nBUILD_BENCHMARK='OFF'\nBUILD_SPARK_DPP=0\nBUILD_BE_JAVA_EXTENSIONS=0\nBUILD_HIVE_UDF=0\nCLEAN=0\nHELP=0\nPARAMETER_COUNT=\"$#\"\nPARAMETER_FLAG=0\nDENABLE_CLANG_COVERAGE='OFF'\nBUILD_AZURE='ON'\nBUILD_UI=1\nif [[ \"$#\" == 1 ]]; then\n    # default\n    BUILD_FE=1\n    BUILD_BE=1\n    BUILD_CLOUD=1\n\n    BUILD_BROKER=1\n    BUILD_META_TOOL='OFF'\n    BUILD_INDEX_TOOL='OFF'\n    BUILD_BENCHMARK='OFF'\n    BUILD_SPARK_DPP=1\n    BUILD_HIVE_UDF=1\n    BUILD_BE_JAVA_EXTENSIONS=1\n    CLEAN=0\nelse\n    while true; do\n        case \"$1\" in\n        --fe)\n            BUILD_FE=1\n            BUILD_SPARK_DPP=1\n            BUILD_HIVE_UDF=1\n            BUILD_BE_JAVA_EXTENSIONS=1\n            shift\n            ;;\n        --be)\n            BUILD_BE=1\n            BUILD_BE_JAVA_EXTENSIONS=1\n            shift\n            ;;\n        --cloud)\n            BUILD_CLOUD=1\n            shift\n            ;;\n        --broker)\n            BUILD_BROKER=1\n            shift\n            ;;\n        --meta-tool)\n            BUILD_META_TOOL='ON'\n            shift\n            ;;\n        --index-tool)\n            BUILD_INDEX_TOOL='ON'\n            shift\n            ;;\n        --benchmark)\n            BUILD_BENCHMARK='ON'\n            BUILD_BE=1 # go into BE cmake building, but benchmark instead of doris_be\n            shift\n            ;;\n        --spark-dpp)\n            BUILD_SPARK_DPP=1\n            shift\n            ;;\n        --hive-udf)\n            BUILD_HIVE_UDF=1\n            shift\n            ;;\n        --be-java-extensions)\n            BUILD_BE_JAVA_EXTENSIONS=1\n            shift\n            ;;\n        --clean)\n            CLEAN=1\n            shift\n            ;;\n        --coverage)\n            DENABLE_CLANG_COVERAGE='ON'\n            shift\n            ;;\n        -h)\n            HELP=1\n            shift\n            ;;\n        --help)\n            HELP=1\n            shift\n            ;;\n        -j)\n            PARALLEL=\"$2\"\n            PARAMETER_FLAG=1\n            shift 2\n            ;;\n        --output)\n            DORIS_OUTPUT=\"$2\"\n            shift 2\n            ;;\n        --be-extension-ignore)\n            BE_EXTENSION_IGNORE=\"$2\"\n            shift 2\n            ;;\n        --)\n            shift\n            break\n            ;;\n        *)\n            echo \"Internal error\"\n            exit 1\n            ;;\n        esac\n    done\n    #only ./build.sh -j xx then build all\n    if [[ \"${PARAMETER_COUNT}\" -eq 3 ]] && [[ \"${PARAMETER_FLAG}\" -eq 1 ]]; then\n        BUILD_FE=1\n        BUILD_BE=1\n        BUILD_CLOUD=1\n        BUILD_BROKER=1\n        BUILD_META_TOOL='ON'\n        BUILD_INDEX_TOOL='ON'\n        BUILD_SPARK_DPP=1\n        BUILD_HIVE_UDF=1\n        BUILD_BE_JAVA_EXTENSIONS=1\n        CLEAN=0\n    fi\nfi\n\nif [[ \"${HELP}\" -eq 1 ]]; then\n    usage\nfi\n# build thirdparty libraries if necessary\nif [[ ! -f \"${DORIS_THIRDPARTY}/installed/lib/libbacktrace.a\" ]]; then\n    echo \"Thirdparty libraries need to be build ...\"\n    # need remove all installed pkgs because some lib like lz4 will throw error if its lib alreay exists\n    rm -rf \"${DORIS_THIRDPARTY}/installed\"\n\n    if [[ \"${CLEAN}\" -eq 0 ]]; then\n        \"${DORIS_THIRDPARTY}/build-thirdparty.sh\" -j \"${PARALLEL}\"\n    else\n        \"${DORIS_THIRDPARTY}/build-thirdparty.sh\" -j \"${PARALLEL}\" --clean\n    fi\nfi\n\nupdate_submodule() {\n    local submodule_path=$1\n    local submodule_name=$2\n    local archive_url=$3\n\n    set +e\n    cd \"${DORIS_HOME}\"\n    echo \"Update ${submodule_name} submodule ...\"\n    git submodule update --init --recursive \"${submodule_path}\"\n    exit_code=$?\n    if [[ \"${exit_code}\" -eq 0 ]]; then\n        cd \"${submodule_path}\"\n        submodule_commit_id=$(git rev-parse HEAD)\n        cd -\n        expect_submodule_commit_id=$(git ls-tree HEAD \"${submodule_path}\" | awk '{print $3}')\n        echo \"Current commit ID of ${submodule_name} submodule: ${submodule_commit_id}, expected is ${expect_submodule_commit_id}\"\n    fi\n    set -e\n    if [[ \"${exit_code}\" -ne 0 ]]; then\n        set +e\n        # try to get submodule's current commit\n        submodule_commit=$(git ls-tree HEAD \"${submodule_path}\" | awk '{print $3}')\n        exit_code=$?\n        if [[ \"${exit_code}\" = \"0\" ]]; then\n            commit_specific_url=$(echo \"${archive_url}\" | sed \"s/refs\\/heads/${submodule_commit}/\")\n        else\n            commit_specific_url=\"${archive_url}\"\n        fi\n        set -e\n        echo \"Update ${submodule_name} submodule failed, start to download and extract ${commit_specific_url}\"\n\n        mkdir -p \"${DORIS_HOME}/${submodule_path}\"\n        curl -L \"${commit_specific_url}\" | tar -xz -C \"${DORIS_HOME}/${submodule_path}\" --strip-components=1\n    fi\n}\n\nif [[ \"${CLEAN}\" -eq 1 && \"${BUILD_BE}\" -eq 0 && \"${BUILD_FE}\" -eq 0 && \"${BUILD_SPARK_DPP}\" -eq 0 && ${BUILD_CLOUD} -eq 0 ]]; then\n    clean_gensrc\n    clean_be\n    clean_fe\n    exit 0\nfi\n\nif [[ -z \"${WITH_MYSQL}\" ]]; then\n    WITH_MYSQL='OFF'\nfi\nif [[ -z \"${GLIBC_COMPATIBILITY}\" ]]; then\n    if [[ \"$(uname -s)\" != 'Darwin' ]]; then\n        GLIBC_COMPATIBILITY='ON'\n    else\n        GLIBC_COMPATIBILITY='OFF'\n    fi\nfi\nif [[ -z \"${USE_AVX2}\" ]]; then\n    USE_AVX2='ON'\nfi\nif [[ -z \"${USE_LIBCPP}\" ]]; then\n    if [[ \"$(uname -s)\" != 'Darwin' ]]; then\n        USE_LIBCPP='OFF'\n    else\n        USE_LIBCPP='ON'\n    fi\nfi\nif [[ -z \"${STRIP_DEBUG_INFO}\" ]]; then\n    STRIP_DEBUG_INFO='OFF'\nfi\nif [[ -z \"${USE_MEM_TRACKER}\" ]]; then\n    if [[ \"$(uname -s)\" != 'Darwin' ]]; then\n        USE_MEM_TRACKER='ON'\n    else\n        USE_MEM_TRACKER='OFF'\n    fi\nfi\nBUILD_TYPE_LOWWER=$(echo \"${BUILD_TYPE}\" | tr '[:upper:]' '[:lower:]')\nif [[ \"${BUILD_TYPE_LOWWER}\" == \"asan\" ]]; then\n    USE_JEMALLOC='OFF'\nelif [[ -z \"${USE_JEMALLOC}\" ]]; then\n    if [[ \"$(uname -s)\" != 'Darwin' ]]; then\n        USE_JEMALLOC='ON'\n    else\n        USE_JEMALLOC='OFF'\n    fi\nfi\nif [[ -f \"${TP_INCLUDE_DIR}/jemalloc/jemalloc_doris_with_prefix.h\" ]]; then\n    # compatible with old thirdparty\n    rm -rf \"${TP_INCLUDE_DIR}/jemalloc/jemalloc.h\"\n    rm -rf \"${TP_LIB_DIR}/libjemalloc_doris.a\"\n    rm -rf \"${TP_LIB_DIR}/libjemalloc_doris_pic.a\"\n    rm -rf \"${TP_INCLUDE_DIR}/rocksdb\"\n    rm -rf \"${TP_LIB_DIR}/librocksdb.a\"\n\n    mv \"${TP_INCLUDE_DIR}/jemalloc/jemalloc_doris_with_prefix.h\" \"${TP_INCLUDE_DIR}/jemalloc/jemalloc.h\"\n    mv \"${TP_LIB_DIR}/libjemalloc_doris_with_prefix.a\" \"${TP_LIB_DIR}/libjemalloc_doris.a\"\n    mv \"${TP_LIB_DIR}/libjemalloc_doris_with_prefix_pic.a\" \"${TP_LIB_DIR}/libjemalloc_doris_pic.a\"\n    mv \"${TP_LIB_DIR}/librocksdb_jemalloc_with_prefix.a\" \"${TP_LIB_DIR}/librocksdb.a\"\n    mv -f \"${TP_INCLUDE_DIR}/rocksdb_jemalloc_with_prefix\" \"${TP_INCLUDE_DIR}/rocksdb\"\nfi\nif [[ -z \"${USE_BTHREAD_SCANNER}\" ]]; then\n    USE_BTHREAD_SCANNER='OFF'\nfi\n\nif [[ -z \"${USE_DWARF}\" ]]; then\n    USE_DWARF='OFF'\nfi\n\nif [[ -z \"${USE_UNWIND}\" ]]; then\n    if [[ \"$(uname -s)\" != 'Darwin' ]]; then\n        USE_UNWIND='ON'\n    else\n        USE_UNWIND='OFF'\n    fi\nfi\n\nif [[ -z \"${DISPLAY_BUILD_TIME}\" ]]; then\n    DISPLAY_BUILD_TIME='OFF'\nfi\n\nif [[ -z \"${OUTPUT_BE_BINARY}\" ]]; then\n    OUTPUT_BE_BINARY=${BUILD_BE}\nfi\n\nif [[ -n \"${DISABLE_BE_JAVA_EXTENSIONS}\" ]]; then\n    if [[ \"${DISABLE_BE_JAVA_EXTENSIONS}\" == \"ON\" ]]; then\n        BUILD_BE_JAVA_EXTENSIONS=0\n    else\n        BUILD_BE_JAVA_EXTENSIONS=1\n    fi\nfi\n\nif [[ -n \"${DISABLE_BUILD_UI}\" ]]; then\n    if [[ \"${DISABLE_BUILD_UI}\" == \"ON\" ]]; then\n        BUILD_UI=0\n    fi\nfi\n\nif [[ -n \"${DISABLE_BUILD_SPARK_DPP}\" ]]; then\n    if [[ \"${DISABLE_BUILD_SPARK_DPP}\" == \"ON\" ]]; then\n        BUILD_SPARK_DPP=0\n    fi\nfi\n\nif [[ -n \"${DISABLE_BUILD_HIVE_UDF}\" ]]; then\n    if [[ \"${DISABLE_BUILD_HIVE_UDF}\" == \"ON\" ]]; then\n        BUILD_HIVE_UDF=0\n    fi\nfi\n\nif [[ -z \"${DISABLE_JAVA_CHECK_STYLE}\" ]]; then\n    DISABLE_JAVA_CHECK_STYLE='OFF'\nfi\n\nif [[ -n \"${DISABLE_BUILD_AZURE}\" ]]; then\n    BUILD_AZURE='OFF'\nfi\n\nif [[ -z \"${ENABLE_INJECTION_POINT}\" ]]; then\n    ENABLE_INJECTION_POINT='OFF'\nfi\n\nif [[ -z \"${ENABLE_CACHE_LOCK_DEBUG}\" ]]; then\n    ENABLE_CACHE_LOCK_DEBUG='OFF'\nfi\n\nif [[ -z \"${BUILD_BENCHMARK}\" ]]; then\n    BUILD_BENCHMARK='OFF'\nfi\n\nif [[ -z \"${RECORD_COMPILER_SWITCHES}\" ]]; then\n    RECORD_COMPILER_SWITCHES='OFF'\nfi\n\nif [[ \"${BUILD_BE_JAVA_EXTENSIONS}\" -eq 1 && \"$(uname -s)\" == 'Darwin' ]]; then\n    if [[ -z \"${JAVA_HOME}\" ]]; then\n        CAUSE='the environment variable JAVA_HOME is not set'\n    else\n        LIBJVM=\"$(find -L \"${JAVA_HOME}/\" -name 'libjvm.dylib')\"\n        if [[ -z \"${LIBJVM}\" ]]; then\n            CAUSE=\"the library libjvm.dylib is missing\"\n        elif [[ \"$(file \"${LIBJVM}\" | awk '{print $NF}')\" != \"$(uname -m)\" ]]; then\n            CAUSE='the architecture which the library libjvm.dylib is built for does not match'\n        fi\n    fi\n\n    if [[ -n \"${CAUSE}\" ]]; then\n        echo -e \"\\033[33;1mWARNNING: \\033[37;1mSkip building with BE Java extensions due to ${CAUSE}.\\033[0m\"\n        BUILD_BE_JAVA_EXTENSIONS=0\n        BUILD_BE_JAVA_EXTENSIONS_FALSE_IN_CONF=1\n    fi\nfi\n\necho \"Get params:\n    BUILD_FE                    -- ${BUILD_FE}\n    BUILD_BE                    -- ${BUILD_BE}\n    BUILD_CLOUD                 -- ${BUILD_CLOUD}\n    BUILD_BROKER                -- ${BUILD_BROKER}\n    BUILD_META_TOOL             -- ${BUILD_META_TOOL}\n    BUILD_INDEX_TOOL            -- ${BUILD_INDEX_TOOL}\n    BUILD_BENCHMARK             -- ${BUILD_BENCHMARK}\n    BUILD_SPARK_DPP             -- ${BUILD_SPARK_DPP}\n    BUILD_BE_JAVA_EXTENSIONS    -- ${BUILD_BE_JAVA_EXTENSIONS}\n    BUILD_HIVE_UDF              -- ${BUILD_HIVE_UDF}\n    PARALLEL                    -- ${PARALLEL}\n    CLEAN                       -- ${CLEAN}\n    WITH_MYSQL                  -- ${WITH_MYSQL}\n    GLIBC_COMPATIBILITY         -- ${GLIBC_COMPATIBILITY}\n    USE_AVX2                    -- ${USE_AVX2}\n    USE_LIBCPP                  -- ${USE_LIBCPP}\n    USE_DWARF                   -- ${USE_DWARF}\n    USE_UNWIND                  -- ${USE_UNWIND}\n    STRIP_DEBUG_INFO            -- ${STRIP_DEBUG_INFO}\n    USE_MEM_TRACKER             -- ${USE_MEM_TRACKER}\n    USE_JEMALLOC                -- ${USE_JEMALLOC}\n    USE_BTHREAD_SCANNER         -- ${USE_BTHREAD_SCANNER}\n    ENABLE_INJECTION_POINT      -- ${ENABLE_INJECTION_POINT}\n    ENABLE_CACHE_LOCK_DEBUG     -- ${ENABLE_CACHE_LOCK_DEBUG}\n    DENABLE_CLANG_COVERAGE      -- ${DENABLE_CLANG_COVERAGE}\n    DISPLAY_BUILD_TIME          -- ${DISPLAY_BUILD_TIME}\n    ENABLE_PCH                  -- ${ENABLE_PCH}\n\"\n\n# Clean and build generated code\nif [[ \"${CLEAN}\" -eq 1 ]]; then\n    clean_gensrc\nfi\n\"${DORIS_HOME}\"/generated-source.sh noclean\n\n# Assesmble FE modules\nFE_MODULES=''\nmodules=(\"\")\nif [[ \"${BUILD_FE}\" -eq 1 ]]; then\n    modules+=(\"fe-common\")\n    modules+=(\"fe-core\")\nfi\nif [[ \"${BUILD_SPARK_DPP}\" -eq 1 ]]; then\n    modules+=(\"fe-common\")\n    modules+=(\"spark-dpp\")\nfi\nif [[ \"${BUILD_HIVE_UDF}\" -eq 1 ]]; then\n    modules+=(\"fe-common\")\n    modules+=(\"hive-udf\")\nfi\nif [[ \"${BUILD_BE_JAVA_EXTENSIONS}\" -eq 1 ]]; then\n    modules+=(\"fe-common\")\n    modules+=(\"be-java-extensions/hudi-scanner\")\n    modules+=(\"be-java-extensions/hadoop-hudi-scanner\")\n    modules+=(\"be-java-extensions/java-common\")\n    modules+=(\"be-java-extensions/java-udf\")\n    modules+=(\"be-java-extensions/jdbc-scanner\")\n    modules+=(\"be-java-extensions/paimon-scanner\")\n    modules+=(\"be-java-extensions/trino-connector-scanner\")\n    modules+=(\"be-java-extensions/max-compute-scanner\")\n    modules+=(\"be-java-extensions/avro-scanner\")\n    modules+=(\"be-java-extensions/lakesoul-scanner\")\n    modules+=(\"be-java-extensions/preload-extensions\")\n\n    # If the BE_EXTENSION_IGNORE variable is not empty, remove the modules that need to be ignored from FE_MODULES\n    if [[ -n \"${BE_EXTENSION_IGNORE}\" ]]; then\n        IFS=',' read -r -a ignore_modules <<<\"${BE_EXTENSION_IGNORE}\"\n        for module in \"${ignore_modules[@]}\"; do\n            modules=(\"${modules[@]/be-java-extensions\\/${module}/}\")\n        done\n    fi\nfi\nFE_MODULES=\"$(\n    IFS=','\n    echo \"${modules[*]}\"\n)\"\n\n# Clean and build Backend\nif [[ \"${BUILD_BE}\" -eq 1 ]]; then\n    update_submodule \"be/src/apache-orc\" \"apache-orc\" \"https://github.com/apache/doris-thirdparty/archive/refs/heads/orc.tar.gz\"\n    update_submodule \"be/src/clucene\" \"clucene\" \"https://github.com/apache/doris-thirdparty/archive/refs/heads/clucene.tar.gz\"\n    if [[ -e \"${DORIS_HOME}/gensrc/build/gen_cpp/version.h\" ]]; then\n        rm -f \"${DORIS_HOME}/gensrc/build/gen_cpp/version.h\"\n    fi\n    CMAKE_BUILD_TYPE=\"${BUILD_TYPE:-Release}\"\n    echo \"Build Backend: ${CMAKE_BUILD_TYPE}\"\n    CMAKE_BUILD_DIR=\"${DORIS_HOME}/be/build_${CMAKE_BUILD_TYPE}\"\n    if [[ \"${CLEAN}\" -eq 1 ]]; then\n        clean_be\n    fi\n    MAKE_PROGRAM=\"$(command -v \"${BUILD_SYSTEM}\")\"\n\n    if [[ -z \"${BUILD_FS_BENCHMARK}\" ]]; then\n        BUILD_FS_BENCHMARK=OFF\n    fi\n\n    echo \"-- Make program: ${MAKE_PROGRAM}\"\n    echo \"-- Use ccache: ${CMAKE_USE_CCACHE}\"\n    echo \"-- Extra cxx flags: ${EXTRA_CXX_FLAGS:-}\"\n    echo \"-- Build fs benchmark tool: ${BUILD_FS_BENCHMARK}\"\n\n    mkdir -p \"${CMAKE_BUILD_DIR}\"\n    cd \"${CMAKE_BUILD_DIR}\"\n    \"${CMAKE_CMD}\" -G \"${GENERATOR}\" \\\n        -DCMAKE_MAKE_PROGRAM=\"${MAKE_PROGRAM}\" \\\n        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\\n        -DCMAKE_BUILD_TYPE=\"${CMAKE_BUILD_TYPE}\" \\\n        -DENABLE_INJECTION_POINT=\"${ENABLE_INJECTION_POINT}\" \\\n        -DENABLE_CACHE_LOCK_DEBUG=\"${ENABLE_CACHE_LOCK_DEBUG}\" \\\n        -DMAKE_TEST=OFF \\\n        -DBUILD_BENCHMARK=\"${BUILD_BENCHMARK}\" \\\n        -DBUILD_FS_BENCHMARK=\"${BUILD_FS_BENCHMARK}\" \\\n        ${CMAKE_USE_CCACHE:+${CMAKE_USE_CCACHE}} \\\n        -DWITH_MYSQL=\"${WITH_MYSQL}\" \\\n        -DUSE_LIBCPP=\"${USE_LIBCPP}\" \\\n        -DBUILD_META_TOOL=\"${BUILD_META_TOOL}\" \\\n        -DBUILD_INDEX_TOOL=\"${BUILD_INDEX_TOOL}\" \\\n        -DSTRIP_DEBUG_INFO=\"${STRIP_DEBUG_INFO}\" \\\n        -DUSE_DWARF=\"${USE_DWARF}\" \\\n        -DUSE_UNWIND=\"${USE_UNWIND}\" \\\n        -DDISPLAY_BUILD_TIME=\"${DISPLAY_BUILD_TIME}\" \\\n        -DENABLE_PCH=\"${ENABLE_PCH}\" \\\n        -DUSE_MEM_TRACKER=\"${USE_MEM_TRACKER}\" \\\n        -DUSE_JEMALLOC=\"${USE_JEMALLOC}\" \\\n        -DUSE_AVX2=\"${USE_AVX2}\" \\\n        -DGLIBC_COMPATIBILITY=\"${GLIBC_COMPATIBILITY}\" \\\n        -DEXTRA_CXX_FLAGS=\"${EXTRA_CXX_FLAGS}\" \\\n        -DENABLE_CLANG_COVERAGE=\"${DENABLE_CLANG_COVERAGE}\" \\\n        -DDORIS_JAVA_HOME=\"${JAVA_HOME}\" \\\n        -DBUILD_AZURE=\"${BUILD_AZURE}\" \\\n        \"${DORIS_HOME}/be\"\n\n    if [[ \"${OUTPUT_BE_BINARY}\" -eq 1 ]]; then\n        \"${BUILD_SYSTEM}\" -j \"${PARALLEL}\"\n        \"${BUILD_SYSTEM}\" install\n    fi\n\n    cd \"${DORIS_HOME}\"\nfi\n\n# Clean and build cloud\nif [[ \"${BUILD_CLOUD}\" -eq 1 ]]; then\n    if [[ -e \"${DORIS_HOME}/gensrc/build/gen_cpp/cloud_version.h\" ]]; then\n        rm -f \"${DORIS_HOME}/gensrc/build/gen_cpp/cloud_version.h\"\n    fi\n    CMAKE_BUILD_TYPE=\"${BUILD_TYPE:-Release}\"\n    echo \"Build Cloud: ${CMAKE_BUILD_TYPE}\"\n    CMAKE_BUILD_DIR=\"${DORIS_HOME}/cloud/build_${CMAKE_BUILD_TYPE}\"\n    if [[ \"${CLEAN}\" -eq 1 ]]; then\n        rm -rf \"${CMAKE_BUILD_DIR}\"\n        echo \"clean cloud\"\n    fi\n    MAKE_PROGRAM=\"$(command -v \"${BUILD_SYSTEM}\")\"\n    echo \"-- Make program: ${MAKE_PROGRAM}\"\n    echo \"-- Extra cxx flags: ${EXTRA_CXX_FLAGS:-}\"\n    mkdir -p \"${CMAKE_BUILD_DIR}\"\n    cd \"${CMAKE_BUILD_DIR}\"\n    \"${CMAKE_CMD}\" -G \"${GENERATOR}\" \\\n        -DCMAKE_MAKE_PROGRAM=\"${MAKE_PROGRAM}\" \\\n        -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\\n        -DCMAKE_BUILD_TYPE=\"${CMAKE_BUILD_TYPE}\" \\\n        -DENABLE_INJECTION_POINT=\"${ENABLE_INJECTION_POINT}\" \\\n        -DMAKE_TEST=OFF \\\n        \"${CMAKE_USE_CCACHE}\" \\\n        -DUSE_LIBCPP=\"${USE_LIBCPP}\" \\\n        -DSTRIP_DEBUG_INFO=\"${STRIP_DEBUG_INFO}\" \\\n        -DUSE_DWARF=\"${USE_DWARF}\" \\\n        -DUSE_JEMALLOC=\"${USE_JEMALLOC}\" \\\n        -DEXTRA_CXX_FLAGS=\"${EXTRA_CXX_FLAGS}\" \\\n        -DBUILD_AZURE=\"${BUILD_AZURE}\" \\\n        -DBUILD_CHECK_META=\"${BUILD_CHECK_META:-OFF}\" \\\n        \"${DORIS_HOME}/cloud/\"\n    \"${BUILD_SYSTEM}\" -j \"${PARALLEL}\"\n    \"${BUILD_SYSTEM}\" install\n    cd \"${DORIS_HOME}\"\n    echo \"Build cloud done\"\nfi\n\nfunction build_ui() {\n    NPM='npm'\n    if ! ${NPM} --version; then\n        echo \"Error: npm is not found\"\n        exit 1\n    fi\n    if [[ -n \"${CUSTOM_NPM_REGISTRY}\" ]]; then\n        \"${NPM}\" config set registry \"${CUSTOM_NPM_REGISTRY}\"\n        npm_reg=\"$(\"${NPM}\" get registry)\"\n        echo \"NPM registry: ${npm_reg}\"\n    fi\n\n    echo \"Build Frontend UI\"\n    ui_dist=\"${DORIS_HOME}/ui/dist\"\n    if [[ -n \"${CUSTOM_UI_DIST}\" ]]; then\n        ui_dist=\"${CUSTOM_UI_DIST}\"\n    else\n        cd \"${DORIS_HOME}/ui\"\n        \"${NPM}\" cache clean --force\n        \"${NPM}\" install --legacy-peer-deps\n        \"${NPM}\" run build\n    fi\n    echo \"ui dist: ${ui_dist}\"\n    rm -rf \"${DORIS_HOME}/fe/fe-core/src/main/resources/static\"\n    mkdir -p \"${DORIS_HOME}/fe/fe-core/src/main/resources/static\"\n    cp -r \"${ui_dist}\"/* \"${DORIS_HOME}/fe/fe-core/src/main/resources/static\"/\n}\n\n# FE UI must be built before building FE\nif [[ \"${BUILD_FE}\" -eq 1 ]]; then\n    if [[ \"${BUILD_UI}\" -eq 1 ]]; then\n        build_ui\n    fi\nfi\n\n# Clean and build Frontend\nif [[ \"${FE_MODULES}\" != '' ]]; then\n    echo \"Build Frontend Modules: ${FE_MODULES}\"\n    cd \"${DORIS_HOME}/fe\"\n    if [[ \"${CLEAN}\" -eq 1 ]]; then\n        clean_fe\n    fi\n    if [[ \"${DISABLE_JAVA_CHECK_STYLE}\" = \"ON\" ]]; then\n        # Allowed user customer set env param USER_SETTINGS_MVN_REPO means settings.xml file path\n        if [[ -n ${USER_SETTINGS_MVN_REPO} && -f ${USER_SETTINGS_MVN_REPO} ]]; then\n            \"${MVN_CMD}\" package -pl ${FE_MODULES:+${FE_MODULES}} -Dskip.doc=true -DskipTests -Dcheckstyle.skip=true ${MVN_OPT:+${MVN_OPT}} -gs \"${USER_SETTINGS_MVN_REPO}\" -T 1C\n        else\n            \"${MVN_CMD}\" package -pl ${FE_MODULES:+${FE_MODULES}} -Dskip.doc=true -DskipTests -Dcheckstyle.skip=true ${MVN_OPT:+${MVN_OPT}} -T 1C\n        fi\n    else\n        if [[ -n ${USER_SETTINGS_MVN_REPO} && -f ${USER_SETTINGS_MVN_REPO} ]]; then\n            \"${MVN_CMD}\" package -pl ${FE_MODULES:+${FE_MODULES}} -Dskip.doc=true -DskipTests ${MVN_OPT:+${MVN_OPT}} -gs \"${USER_SETTINGS_MVN_REPO}\" -T 1C\n        else\n            \"${MVN_CMD}\" package -pl ${FE_MODULES:+${FE_MODULES}} -Dskip.doc=true -DskipTests ${MVN_OPT:+${MVN_OPT}} -T 1C\n        fi\n    fi\n    cd \"${DORIS_HOME}\"\nfi\n\n# Clean and prepare output dir\nDORIS_OUTPUT=${DORIS_OUTPUT:=\"${DORIS_HOME}/output/\"}\necho \"OUTPUT DIR=${DORIS_OUTPUT}\"\nmkdir -p \"${DORIS_OUTPUT}\"\n\n# Copy Frontend and Backend\nif [[ \"${BUILD_FE}\" -eq 1 ]]; then\n    install -d \"${DORIS_OUTPUT}/fe/bin\" \"${DORIS_OUTPUT}/fe/conf\" \\\n        \"${DORIS_OUTPUT}/fe/webroot\" \"${DORIS_OUTPUT}/fe/lib\"\n\n    cp -r -p \"${DORIS_HOME}/bin\"/*_fe.sh \"${DORIS_OUTPUT}/fe/bin\"/\n    cp -r -p \"${DORIS_HOME}/conf/fe.conf\" \"${DORIS_OUTPUT}/fe/conf\"/\n    cp -r -p \"${DORIS_HOME}/conf/ldap.conf\" \"${DORIS_OUTPUT}/fe/conf\"/\n    cp -r -p \"${DORIS_HOME}/conf/mysql_ssl_default_certificate\" \"${DORIS_OUTPUT}/fe/\"/\n    rm -rf \"${DORIS_OUTPUT}/fe/lib\"/*\n    cp -r -p \"${DORIS_HOME}/fe/fe-core/target/lib\"/* \"${DORIS_OUTPUT}/fe/lib\"/\n    cp -r -p \"${DORIS_HOME}/fe/fe-core/target/doris-fe.jar\" \"${DORIS_OUTPUT}/fe/lib\"/\n    #cp -r -p \"${DORIS_HOME}/docs/build/help-resource.zip\" \"${DORIS_OUTPUT}/fe/lib\"/\n    cp -r -p \"${DORIS_HOME}/minidump\" \"${DORIS_OUTPUT}/fe\"/\n    cp -r -p \"${DORIS_HOME}/webroot/static\" \"${DORIS_OUTPUT}/fe/webroot\"/\n\n    cp -r -p \"${DORIS_THIRDPARTY}/installed/webroot\"/* \"${DORIS_OUTPUT}/fe/webroot/static\"/\n    copy_common_files \"${DORIS_OUTPUT}/fe/\"\n    mkdir -p \"${DORIS_OUTPUT}/fe/log\"\n    mkdir -p \"${DORIS_OUTPUT}/fe/doris-meta\"\n    mkdir -p \"${DORIS_OUTPUT}/fe/conf/ssl\"\n    mkdir -p \"${DORIS_OUTPUT}/fe/connectors\"\nfi\n\nif [[ \"${BUILD_SPARK_DPP}\" -eq 1 ]]; then\n    install -d \"${DORIS_OUTPUT}/fe/spark-dpp\"\n    rm -rf \"${DORIS_OUTPUT}/fe/spark-dpp\"/*\n    cp -r -p \"${DORIS_HOME}/fe/spark-dpp/target\"/spark-dpp-*-jar-with-dependencies.jar \"${DORIS_OUTPUT}/fe/spark-dpp\"/\nfi\n\nif [[ \"${OUTPUT_BE_BINARY}\" -eq 1 ]]; then\n    # need remove old version hadoop jars if $DORIS_OUTPUT been used multiple times, otherwise will cause jar conflict\n    rm -rf \"${DORIS_OUTPUT}/be/lib/hadoop_hdfs\"\n    install -d \"${DORIS_OUTPUT}/be/bin\" \\\n        \"${DORIS_OUTPUT}/be/conf\" \\\n        \"${DORIS_OUTPUT}/be/lib\" \\\n        \"${DORIS_OUTPUT}/be/www\" \\\n        \"${DORIS_OUTPUT}/be/tools/FlameGraph\"\n\n    cp -r -p \"${DORIS_HOME}/be/output/bin\"/* \"${DORIS_OUTPUT}/be/bin\"/\n    cp -r -p \"${DORIS_HOME}/be/output/conf\"/* \"${DORIS_OUTPUT}/be/conf\"/\n    cp -r -p \"${DORIS_HOME}/be/output/dict\" \"${DORIS_OUTPUT}/be/\"\n\n    if [[ -d \"${DORIS_THIRDPARTY}/installed/lib/hadoop_hdfs/\" ]]; then\n        cp -r -p \"${DORIS_THIRDPARTY}/installed/lib/hadoop_hdfs/\" \"${DORIS_OUTPUT}/be/lib/\"\n    fi\n\n    if [[ -f \"${DORIS_THIRDPARTY}/installed/lib/libz.so\" ]]; then\n        cp -r -p \"${DORIS_THIRDPARTY}/installed/lib/libz.so\"* \"${DORIS_OUTPUT}/be/lib/\"\n    fi\n\n    if [[ \"${BUILD_BE_JAVA_EXTENSIONS_FALSE_IN_CONF}\" -eq 1 ]]; then\n        echo -e \"\\033[33;1mWARNNING: \\033[37;1mDisable Java UDF support in be.conf due to the BE was built without Java UDF.\\033[0m\"\n        cat >>\"${DORIS_OUTPUT}/be/conf/be.conf\" <<EOF\n\n# Java UDF and BE-JAVA-EXTENSION support\nenable_java_support = false\nEOF\n    fi\n\n    # Fix Killed: 9 error on MacOS (arm64).\n    # See: https://stackoverflow.com/questions/67378106/mac-m1-cping-binary-over-another-results-in-crash\n    if [[ -f \"${DORIS_HOME}/be/output/lib/doris_be\" ]]; then\n        rm -f \"${DORIS_OUTPUT}/be/lib/doris_be\"\n        cp -r -p \"${DORIS_HOME}/be/output/lib/doris_be\" \"${DORIS_OUTPUT}/be/lib\"/\n    fi\n    if [[ -d \"${DORIS_HOME}/be/output/lib/doris_be.dSYM\" ]]; then\n        rm -rf \"${DORIS_OUTPUT}/be/lib/doris_be.dSYM\"\n        cp -r \"${DORIS_HOME}/be/output/lib/doris_be.dSYM\" \"${DORIS_OUTPUT}/be/lib\"/\n    fi\n    if [[ -f \"${DORIS_HOME}/be/output/lib/fs_benchmark_tool\" ]]; then\n        cp -r -p \"${DORIS_HOME}/be/output/lib/fs_benchmark_tool\" \"${DORIS_OUTPUT}/be/lib\"/\n    fi\n\n    if [[ \"${BUILD_META_TOOL}\" = \"ON\" ]]; then\n        cp -r -p \"${DORIS_HOME}/be/output/lib/meta_tool\" \"${DORIS_OUTPUT}/be/lib\"/\n    fi\n\n    if [[ \"${BUILD_INDEX_TOOL}\" = \"ON\" ]]; then\n        cp -r -p \"${DORIS_HOME}/be/output/lib/index_tool\" \"${DORIS_OUTPUT}/be/lib\"/\n    fi\n\n    cp -r -p \"${DORIS_HOME}/webroot/be\"/* \"${DORIS_OUTPUT}/be/www\"/\n    cp -r -p \"${DORIS_HOME}/tools/FlameGraph\"/* \"${DORIS_OUTPUT}/be/tools/FlameGraph\"/\n    if [[ \"${STRIP_DEBUG_INFO}\" = \"ON\" ]]; then\n        cp -r -p \"${DORIS_HOME}/be/output/lib/debug_info\" \"${DORIS_OUTPUT}/be/lib\"/\n    fi\n\n    if [[ \"${BUILD_BENCHMARK}\" = \"ON\" ]]; then\n        cp -r -p \"${DORIS_HOME}/be/output/lib/benchmark_test\" \"${DORIS_OUTPUT}/be/lib/\"/\n    fi\n\n    if [[ \"${BUILD_FS_BENCHMARK}\" = \"ON\" ]]; then\n        cp -r -p \"${DORIS_HOME}/bin/run-fs-benchmark.sh\" \"${DORIS_OUTPUT}/be/bin/\"/\n    fi\n\n    extensions_modules=(\"java-udf\")\n    extensions_modules+=(\"jdbc-scanner\")\n    extensions_modules+=(\"hudi-scanner\")\n    extensions_modules+=(\"hadoop-hudi-scanner\")\n    extensions_modules+=(\"paimon-scanner\")\n    extensions_modules+=(\"trino-connector-scanner\")\n    extensions_modules+=(\"max-compute-scanner\")\n    extensions_modules+=(\"avro-scanner\")\n    extensions_modules+=(\"lakesoul-scanner\")\n    extensions_modules+=(\"preload-extensions\")\n\n    if [[ -n \"${BE_EXTENSION_IGNORE}\" ]]; then\n        IFS=',' read -r -a ignore_modules <<<\"${BE_EXTENSION_IGNORE}\"\n        new_modules=()\n        for module in \"${extensions_modules[@]}\"; do\n            module=${module// /}\n            if [[ -n \"${module}\" ]]; then\n                ignore=0\n                for ignore_module in \"${ignore_modules[@]}\"; do\n                    if [[ \"${module}\" == \"${ignore_module}\" ]]; then\n                        ignore=1\n                        break\n                    fi\n                done\n                if [[ \"${ignore}\" -eq 0 ]]; then\n                    new_modules+=(\"${module}\")\n                fi\n            fi\n        done\n        extensions_modules=(\"${new_modules[@]}\")\n    fi\n\n    BE_JAVA_EXTENSIONS_DIR=\"${DORIS_OUTPUT}/be/lib/java_extensions/\"\n    rm -rf \"${BE_JAVA_EXTENSIONS_DIR}\"\n    mkdir \"${BE_JAVA_EXTENSIONS_DIR}\"\n    for extensions_module in \"${extensions_modules[@]}\"; do\n        module_jar=\"${DORIS_HOME}/fe/be-java-extensions/${extensions_module}/target/${extensions_module}-jar-with-dependencies.jar\"\n        module_proj_jar=\"${DORIS_HOME}/fe/be-java-extensions/${extensions_module}/target/${extensions_module}-project.jar\"\n        mkdir \"${BE_JAVA_EXTENSIONS_DIR}\"/\"${extensions_module}\"\n        if [[ -f \"${module_jar}\" ]]; then\n            cp \"${module_jar}\" \"${BE_JAVA_EXTENSIONS_DIR}\"/\"${extensions_module}\"\n        fi\n        if [[ -f \"${module_proj_jar}\" ]]; then\n            cp \"${module_proj_jar}\" \"${BE_JAVA_EXTENSIONS_DIR}\"/\"${extensions_module}\"\n        fi\n    done\n\n    cp -r -p \"${DORIS_THIRDPARTY}/installed/webroot\"/* \"${DORIS_OUTPUT}/be/www\"/\n    copy_common_files \"${DORIS_OUTPUT}/be/\"\n    mkdir -p \"${DORIS_OUTPUT}/be/log\"\n    mkdir -p \"${DORIS_OUTPUT}/be/log/pipe_tracing\"\n    mkdir -p \"${DORIS_OUTPUT}/be/storage\"\n    mkdir -p \"${DORIS_OUTPUT}/be/connectors\"\nfi\n\nif [[ \"${BUILD_BROKER}\" -eq 1 ]]; then\n    install -d \"${DORIS_OUTPUT}/apache_hdfs_broker\"\n\n    cd \"${DORIS_HOME}/fs_brokers/apache_hdfs_broker\"\n    ./build.sh\n    rm -rf \"${DORIS_OUTPUT}/apache_hdfs_broker\"/*\n    cp -r -p \"${DORIS_HOME}/fs_brokers/apache_hdfs_broker/output/apache_hdfs_broker\"/* \"${DORIS_OUTPUT}/apache_hdfs_broker\"/\n    copy_common_files \"${DORIS_OUTPUT}/apache_hdfs_broker/\"\n    cd \"${DORIS_HOME}\"\nfi\n\nif [[ ${BUILD_CLOUD} -eq 1 ]]; then\n    rm -rf \"${DORIS_HOME}/output/ms\"\n    rm -rf \"${DORIS_HOME}/cloud/output/lib/hadoop_hdfs\"\n    if [[ -d \"${DORIS_THIRDPARTY}/installed/lib/hadoop_hdfs/\" ]]; then\n        cp -r -p \"${DORIS_THIRDPARTY}/installed/lib/hadoop_hdfs/\" \"${DORIS_HOME}/cloud/output/lib\"\n    fi\n    cp -r -p \"${DORIS_HOME}/cloud/output\" \"${DORIS_HOME}/output/ms\"\nfi\n\nmkdir -p \"${DORIS_HOME}/output/tools\"\ncp -r -p tools/fdb \"${DORIS_HOME}/output/tools\"\n\necho \"***************************************\"\necho \"Successfully build Doris\"\necho \"***************************************\"\n\nif [[ -n \"${DORIS_POST_BUILD_HOOK}\" ]]; then\n    eval \"${DORIS_POST_BUILD_HOOK}\"\nfi\n\nexit 0\n"
        },
        {
          "name": "cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "doap_Doris.rdf",
          "type": "blob",
          "size": 2.89453125,
          "content": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\"?>\n<rdf:RDF xml:lang=\"en\"\n         xmlns=\"http://usefulinc.com/ns/doap#\"\n         xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n         xmlns:asfext=\"http://projects.apache.org/ns/asfext#\"\n         xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n<!--\n    Licensed to the Apache Software Foundation (ASF) under one or more\n    contributor license agreements.  See the NOTICE file distributed with\n    this work for additional information regarding copyright ownership.\n    The ASF licenses this file to You under the Apache License, Version 2.0\n    (the \"License\"); you may not use this file except in compliance with\n    the License.  You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n-->\n  <Project rdf:about=\"https://doris.apache.org/\">\n    <created>2018-07-08</created>\n    <license rdf:resource=\"http://usefulinc.com/doap/licenses/asl20\" />\n    <name>Apache Doris</name>\n    <homepage rdf:resource=\"https://doris.apache.org/\" />\n    <asfext:pmc rdf:resource=\"https://doris.apache.org\" />\n    <shortdesc>Apache Doris is a new-generation open-source real-time data warehouse based on MPP architecture, with easier use and higher performance for big data analytics.</shortdesc>\n    <description>Apache Doris is an easy-to-use, high-performance and real-time analytical database based on MPP architecture, known for its extreme speed and ease of use. It only requires a sub-second response time to return query results under massive data and can support not only high-concurrent point query scenarios but also high-throughput complex analysis scenarios.\n                 All this makes Apache Doris an ideal tool for scenarios including report analysis, ad-hoc query, unified data warehouse, and data lake query acceleration. On Apache Doris, users can build various applications, such as user behavior analysis, AB test platform, log retrieval analysis, user portrait analysis, and order analysis.</description>\n    <bug-database rdf:resource=\"https://github.com/apache/doris/issues\" />\n    <mailing-list rdf:resource=\"https://lists.apache.org/list.html?dev@doris.apache.org\" />\n    <download-page rdf:resource=\"https://doris.apache.org/download\" />\n    <programming-language>C++,Java</programming-language>\n    <category rdf:resource=\"http://projects.apache.org/category/database\" />\n    <repository>\n      <SVNRepository>\n        <location rdf:resource=\"https://gitbox.apache.org/repos/asf/doris.git\"/>\n        <browse rdf:resource=\"https://github.com/apache/doris\"/>\n      </SVNRepository>\n    </repository>\n  </Project>\n</rdf:RDF>\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "env.sh",
          "type": "blob",
          "size": 10.05859375,
          "content": "#!/usr/bin/env bash\n\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# check DORIS_HOME\nexport LC_ALL=C\n\nif [[ -z \"${DORIS_HOME}\" ]]; then\n    echo \"Error: DORIS_HOME is not set\"\n    exit 1\nfi\n\n# check OS type\nif [[ -n \"${OSTYPE}\" ]]; then\n    if [[ \"${OSTYPE}\" != \"linux-gnu\" ]] && [[ \"${OSTYPE:0:6}\" != \"darwin\" ]]; then\n        echo \"Error: Unsupported OS type: ${OSTYPE}\"\n        exit 1\n    fi\nfi\n\nif [[ \"$(uname -s)\" == 'Darwin' ]]; then\n    if ! command -v brew &>/dev/null; then\n        echo \"Error: Homebrew is missing. Please install it first due to we use Homebrew to manage the tools which are needed to build the project.\"\n        exit 1\n    fi\n\n    cat >\"${DORIS_HOME}/custom_env_mac.sh\" <<EOF\n# This file is generated automatically. PLEASE DO NOT MODIFY IT.\n\nHOMEBREW_REPO_PREFIX=\"$(brew --prefix)\"\nCELLARS=(\n    automake\n    autoconf\n    libtool\n    pkg-config\n    texinfo\n    coreutils\n    gnu-getopt\n    python@3\n    cmake\n    ninja\n    ccache\n    bison\n    byacc\n    gettext\n    wget\n    pcre\n    maven\n    llvm@16\n    m4\n)\nfor cellar in \"\\${CELLARS[@]}\"; do\n    EXPORT_CELLARS=\"\\${HOMEBREW_REPO_PREFIX}/opt/\\${cellar}/bin:\\${EXPORT_CELLARS}\"\ndone\nexport PATH=\"\\${EXPORT_CELLARS}:/usr/bin:\\${PATH}\"\n\nexport DORIS_BUILD_PYTHON_VERSION='python3'\n\nexport NODE_OPTIONS='--openssl-legacy-provider'\nEOF\n\n    DORIS_HOME_ABSOLUATE_PATH=\"$(\n        set -e\n        cd \"${DORIS_HOME}\"\n        pwd\n    )\"\n    SOURCE_MAC_ENV_CONTENT=\"source '${DORIS_HOME_ABSOLUATE_PATH}/custom_env_mac.sh'\"\n    if [[ ! -f \"${DORIS_HOME}/custom_env.sh\" ]] ||\n        ! grep \"${SOURCE_MAC_ENV_CONTENT}\" \"${DORIS_HOME}/custom_env.sh\" &>/dev/null; then\n        echo \"${SOURCE_MAC_ENV_CONTENT}\" >>\"${DORIS_HOME}/custom_env.sh\"\n    fi\nfi\n\n# include custom environment variables\nif [[ -f \"${DORIS_HOME}/custom_env.sh\" ]]; then\n    # shellcheck disable=1091\n    . \"${DORIS_HOME}/custom_env.sh\"\nfi\n\n# set DORIS_THIRDPARTY\nif [[ -z \"${DORIS_THIRDPARTY}\" ]]; then\n    export DORIS_THIRDPARTY=\"${DORIS_HOME}/thirdparty\"\nfi\n\n# check python\nif [[ -z \"${DORIS_BUILD_PYTHON_VERSION}\" ]]; then\n    DORIS_BUILD_PYTHON_VERSION=\"python\"\nfi\n\nexport PYTHON=\"${DORIS_BUILD_PYTHON_VERSION}\"\n\nif ! ${PYTHON} --version; then\n    echo \"Error: ${PYTHON} is not found, maybe you should set DORIS_BUILD_PYTHON_VERSION.\"\n    exit 1\nfi\n\nif [[ -z \"${DORIS_TOOLCHAIN}\" ]]; then\n    if [[ \"$(uname -s)\" == 'Darwin' ]]; then\n        DORIS_TOOLCHAIN=clang\n    else\n        DORIS_TOOLCHAIN=clang\n    fi\nfi\n\nif [[ \"${DORIS_TOOLCHAIN}\" == \"gcc\" ]]; then\n    # set GCC HOME\n    if [[ -z \"${DORIS_GCC_HOME}\" ]]; then\n        DORIS_GCC_HOME=\"$(dirname \"$(command -v gcc)\")\"/..\n        export DORIS_GCC_HOME\n    fi\n\n    export CC=\"${DORIS_GCC_HOME}/bin/gcc\"\n    export CXX=\"${DORIS_GCC_HOME}/bin/g++\"\n    if test -x \"${DORIS_GCC_HOME}/bin/ld\"; then\n        export DORIS_BIN_UTILS=\"${DORIS_GCC_HOME}/bin/\"\n    fi\n    ENABLE_PCH='OFF'\nelif [[ \"${DORIS_TOOLCHAIN}\" == \"clang\" ]]; then\n    # set CLANG HOME\n    if [[ -z \"${DORIS_CLANG_HOME}\" ]]; then\n        DORIS_CLANG_HOME=\"$(dirname \"$(command -v clang)\")\"/..\n        export DORIS_CLANG_HOME\n    fi\n\n    export CC=\"${DORIS_CLANG_HOME}/bin/clang\"\n    export CXX=\"${DORIS_CLANG_HOME}/bin/clang++\"\n    if test -x \"${DORIS_CLANG_HOME}/bin/ld.lld\"; then\n        export DORIS_BIN_UTILS=\"${DORIS_CLANG_HOME}/bin/\"\n    fi\n    if [[ -f \"${DORIS_CLANG_HOME}/bin/llvm-symbolizer\" ]]; then\n        export ASAN_SYMBOLIZER_PATH=\"${DORIS_CLANG_HOME}/bin/llvm-symbolizer\"\n    fi\n\n    covs=()\n    while IFS='' read -r line; do covs+=(\"${line}\"); done <<<\"$(find \"${DORIS_CLANG_HOME}\" -name \"llvm-cov*\")\"\n    if [[ ${#covs[@]} -ge 1 ]]; then\n        LLVM_COV=\"${covs[0]}\"\n    else\n        LLVM_COV=\"$(command -v llvm-cov)\"\n    fi\n    export LLVM_COV\n\n    profdatas=()\n    while IFS='' read -r line; do profdatas+=(\"${line}\"); done <<<\"$(find \"${DORIS_CLANG_HOME}\" -name \"llvm-profdata*\")\"\n    if [[ ${#profdatas[@]} -ge 1 ]]; then\n        LLVM_PROFDATA=\"${profdatas[0]}\"\n    else\n        LLVM_PROFDATA=\"$(command -v llvm-profdata)\"\n    fi\n    export LLVM_PROFDATA\n\n    if [[ -z \"${ENABLE_PCH}\" ]]; then\n        ENABLE_PCH='ON'\n    fi\nelse\n    echo \"Error: unknown DORIS_TOOLCHAIN=${DORIS_TOOLCHAIN}, currently only 'gcc' and 'clang' are supported\"\n    exit 1\nfi\n\nexport CCACHE_COMPILERCHECK=content\nif [[ \"${ENABLE_PCH}\" == \"ON\" ]]; then\n    export CCACHE_PCH_EXTSUM=true\n    export CCACHE_SLOPPINESS=\"pch_defines,time_macros\"\nelse\n    export CCACHE_NOPCH_EXTSUM=true\n    export CCACHE_SLOPPINESS=\"default\"\nfi\n\nif [[ -z \"${DORIS_BIN_UTILS}\" ]]; then\n    export DORIS_BIN_UTILS='/usr/bin/'\nfi\n\nif [[ -z \"${DORIS_GCC_HOME}\" ]]; then\n    DORIS_GCC_HOME=\"$(dirname \"$(command -v gcc)\")/..\"\n    export DORIS_GCC_HOME\nfi\n\nif [[ ! -f \"${DORIS_GCC_HOME}/bin/gcc\" ]]; then\n    echo \"Error: wrong directory DORIS_GCC_HOME=${DORIS_GCC_HOME}\"\n    exit 1\nfi\n\n# export CLANG COMPATIBLE FLAGS\nCLANG_COMPATIBLE_FLAGS=\"$(echo | \"${DORIS_GCC_HOME}/bin/gcc\" -Wp,-v -xc++ - -fsyntax-only 2>&1 |\n    grep -E '^\\s+/' | awk '{print \"-I\" $1}' | tr '\\n' ' ')\"\nexport CLANG_COMPATIBLE_FLAGS\n\n# get jdk version, return version as an Integer.\n# 1.8 => 8, 13.0 => 13\nfunction jdk_version() {\n    local java_cmd=\"${1}\"\n    local result\n    local IFS=$'\\n'\n\n    if [[ -z \"${java_cmd}\" ]]; then\n        result=no_java\n        return 1\n    else\n        local version\n        # remove \\r for Cygwin\n        version=\"$(\"${java_cmd}\" -Xms32M -Xmx32M -version 2>&1 | tr '\\r' '\\n' | grep version | awk '{print $3}')\"\n        version=\"${version//\\\"/}\"\n        if [[ \"${version}\" =~ ^1\\. ]]; then\n            result=\"$(echo \"${version}\" | awk -F '.' '{print $2}')\"\n        else\n            result=\"$(echo \"${version}\" | awk -F '.' '{print $1}')\"\n        fi\n    fi\n    echo \"${result}\"\n    return 0\n}\n\n# check java version\n# must use jdk_17\nfunction check_jdk_version() {\n    if [[ ! -x \"${JAVA}\" ]]; then\n        echo \"The JAVA_HOME environment variable is not defined correctly\"\n        echo \"This environment variable is needed to run this program\"\n        echo \"NB: JAVA_HOME should point to a JDK not a JRE\"\n        exit 1\n    fi\n\n    echo \"Check JAVA version\"\n    java_version=\"$(\n        set -e\n        jdk_version \"${JAVA}\"\n    )\"\n    if [[ \"${java_version}\" -ne 17 ]]; then\n        echo \"ERROR: The JAVA version is ${java_version}, it must be JDK-17.\"\n        exit 1\n    fi\n    return 0\n}\n\n# if is called from build-thirdparty.sh, no need to check these tools\nif test -z \"${DO_NOT_CHECK_JAVA_ENV:-}\"; then\n    # register keyword is forbidden to use in C++17\n    # the C++ code generated by flex that remove register keyword after version 2.6.0\n    # so we need check flex version here to avoid compilation failed\n    flex_ver=\"$(flex --version | awk '{print $2}')\"\n    required_ver=\"2.6.0\"\n    if [[ ! \"$(printf '%s\\n' \"${required_ver}\" \"${flex_ver}\" | sort -V | head -n1)\" = \"${required_ver}\" ]]; then\n        echo \"Error: flex version (${flex_ver}) must be greater than or equal to ${required_ver}\"\n        exit 1\n    fi\n\n    # check java home\n    if [[ -z \"${JAVA_HOME}\" ]]; then\n        if [[ -n \"${JDK_17}\" ]]; then\n            echo \"Use JDK_17 = ${JDK_17}\"\n            JAVA=\"${JDK_17}/bin/java\"\n            JAVAP=\"${JDK_17}/bin/javap\"\n            export JAVA_HOME=\"${JDK_17}\"\n        else\n            JAVA=\"$(command -v java)\"\n            JAVAP=\"$(command -v javap)\"\n        fi\n        check_jdk_version\n    else\n        JAVA=\"${JAVA_HOME}/bin/java\"\n        JAVAP=\"${JAVA_HOME}/bin/javap\"\n\n        echo \"Check JAVA_HOME version\"\n        java_version=\"$(\n            set -e\n            jdk_version \"${JAVA}\"\n        )\"\n        if [[ \"${java_version}\" -ne 17 ]]; then\n            echo \"JAVA_HOME=${JAVA_HOME}. It does not point to JDK-17.\"\n            if [[ -n \"${JDK_17}\" ]]; then\n                echo \"Use JDK_17=${JDK_17}.\"\n                JAVA=\"${JDK_17}/bin/java\"\n                JAVAP=\"${JDK_17}/bin/javap\"\n                export JAVA_HOME=\"${JDK_17}\"\n                check_jdk_version\n            else\n                echo \"The 'JDK_17' environment variable is not set.\"\n                echo \"ERROR: The JAVA version is ${java_version}, it must be JDK-17.\"\n                exit 1\n            fi\n        fi\n    fi\n    export JAVA\n\n    JAVA_VER=\"$(\"${JAVAP}\" -verbose java.lang.String | grep \"major version\" | cut -d \" \" -f5)\"\n    if [[ \"${JAVA_VER}\" -lt 52 ]]; then\n        echo \"Error: require JAVA with JDK version at least 1.8\"\n        exit 1\n    fi\n\n    # check maven\n    MVN_CMD='mvn'\n    if [[ -n \"${CUSTOM_MVN}\" ]]; then\n        MVN_CMD=\"${CUSTOM_MVN}\"\n    fi\n    if ! \"${MVN_CMD}\" --version; then\n        echo \"Error: mvn is not found\"\n        exit 1\n    fi\n    export MVN_CMD\nfi\n\nif [[ \"$(uname -s)\" == 'Darwin' ]]; then\n    if ! command -v libtoolize &>/dev/null && command -v glibtoolize &>/dev/null; then\n        shopt -s expand_aliases\n        alias libtoolize='glibtoolize'\n    fi\nfi\n\nCMAKE_CMD='cmake'\nif [[ -n \"${CUSTOM_CMAKE}\" ]]; then\n    CMAKE_CMD=\"${CUSTOM_CMAKE}\"\nfi\nif ! \"${CMAKE_CMD}\" --version; then\n    echo \"Error: cmake is not found\"\n    exit 1\nfi\nexport CMAKE_CMD\n\nGENERATOR=\"Unix Makefiles\"\nBUILD_SYSTEM=\"make\"\nif NINJA_VERSION=\"$(ninja --version 2>/dev/null)\"; then\n    echo \"ninja ${NINJA_VERSION}\"\n    GENERATOR=\"Ninja\"\n    BUILD_SYSTEM=\"ninja\"\nfi\n\nif CCACHE_VERSION=\"$(ccache --version 2>/dev/null)\"; then\n    echo \"${CCACHE_VERSION}\" | head -n 1\n    # shellcheck disable=2034\n    CMAKE_USE_CCACHE=\"-DCMAKE_CXX_COMPILER_LAUNCHER=ccache\"\nfi\n\nexport GENERATOR\nexport BUILD_SYSTEM\n\nexport PKG_CONFIG_PATH=\"${DORIS_HOME}/thirdparty/installed/lib64/pkgconfig:${PKG_CONFIG_PATH}\"\n"
        },
        {
          "name": "extension",
          "type": "tree",
          "content": null
        },
        {
          "name": "fe",
          "type": "tree",
          "content": null
        },
        {
          "name": "fe_plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "fs_brokers",
          "type": "tree",
          "content": null
        },
        {
          "name": "generated-source.sh",
          "type": "blob",
          "size": 1.9814453125,
          "content": "#!/usr/bin/env bash\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n##############################################################\n# This script is used to generate generated source code\n##############################################################\n\nset -eo pipefail\n\nROOT=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &>/dev/null && pwd)\"\n\nexport DORIS_HOME=\"${ROOT}\"\n\n. \"${DORIS_HOME}/env.sh\"\n\necho \"Build generated code\"\ncd \"${DORIS_HOME}/gensrc\"\n\n# if calling from build.sh, no need to clean build/ dir.\n# it will be removed by using `build.sh --clean`.\n# when run this script along, it will always remove the build/ dir.\nif [[ \"$#\" == 0 ]]; then\n    echo \"rm -rf ${DORIS_HOME}/gensrc/build\"\n    rm -rf \"${DORIS_HOME}/gensrc/build\"\nfi\n\n# DO NOT using parallel make(-j) for gensrc\nmake\nrm -rf \"${DORIS_HOME}/fe/fe-common/src/main/java/org/apache/doris/thrift ${DORIS_HOME}/fe/fe-common/src/main/java/org/apache/parquet\"\nrm -rf \"${DORIS_HOME}/fe/fe-core/src/main/java/org/apache/doris/thrift ${DORIS_HOME}/fe/fe-core/src/main/java/org/apache/parquet\"\n\ncp -r \"build/gen_java/org/apache/doris/thrift\" \"${DORIS_HOME}/fe/fe-common/src/main/java/org/apache/doris\"\ncp -r \"build/gen_java/org/apache/parquet\" \"${DORIS_HOME}/fe/fe-common/src/main/java/org/apache/\"\ncd \"${DORIS_HOME}/\"\necho \"Done\"\nexit 0\n"
        },
        {
          "name": "gensrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "minidump",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest",
          "type": "tree",
          "content": null
        },
        {
          "name": "regression-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "run-be-ut.sh",
          "type": "blob",
          "size": 15.388671875,
          "content": "#!/usr/bin/env bash\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n#####################################################################\n# This script is used to run unit test of Doris Backend\n# Usage: $0 <options>\n#  Optional options:\n#     --clean            clean and build ut\n#     --run              build and run all ut\n#     --run --filter=xx  build and run specified ut\n#     -j                 build parallel\n#     -h                 print this help message\n#\n# All BE tests must use \"_test\" as the file suffix, and add the file\n# to be/test/CMakeLists.txt.\n#\n# GTest result xml files will be in \"be/ut_build_ASAN/gtest_output/\"\n#####################################################################\n\nset -eo pipefail\nset +o posix\n\nROOT=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &>/dev/null && pwd)\"\n\nexport DORIS_HOME=\"${ROOT}\"\n\n. \"${DORIS_HOME}/env.sh\"\n\n# Check args\nusage() {\n    echo \"\nUsage: $0 <options>\n  Optional options:\n     --benchmark        build benchmark-tool\n     --clean            clean and build ut\n     --run              build and run all ut\n     --run --filter=xx  build and run specified ut\n     --coverage         coverage after run ut\n     -j                 build parallel\n     -h                 print this help message\n\n  Eg.\n    $0                                                              build tests\n    $0 --run                                                        build and run all tests\n    $0 --run --filter=*                                             also runs everything\n    $0 --run --filter=FooTest.*                                     runs everything in test suite FooTest\n    $0 --run --filter=*Null*:*Constructor*                          runs any test whose full name contains either 'Null' or 'Constructor'\n    $0 --run --filter=-*DeathTest.*                                 runs all non-death tests\n    $0 --run --filter=FooTest.*-FooTest.Bar                         runs everything in test suite FooTest except FooTest.Bar\n    $0 --run --filter=FooTest.*:BarTest.*-FooTest.Bar:BarTest.Foo   runs everything in test suite FooTest except FooTest.Bar and everything in test suite BarTest except BarTest.Foo\n    $0 --clean                                                      clean and build tests\n    $0 --clean --run                                                clean, build and run all tests\n    $0 --clean --run --coverage                                     clean, build, run all tests and coverage\n  \"\n    exit 1\n}\n\nif ! OPTS=\"$(getopt -n \"$0\" -o vhj:f: -l coverage,benchmark,run,clean,filter: -- \"$@\")\"; then\n    usage\nfi\n\neval set -- \"${OPTS}\"\n\nCLEAN=0\nRUN=0\nBUILD_BENCHMARK_TOOL='OFF'\nDENABLE_CLANG_COVERAGE='OFF'\nBUILD_AZURE='ON'\nFILTER=\"\"\nif [[ \"$#\" != 1 ]]; then\n    while true; do\n        case \"$1\" in\n        --clean)\n            CLEAN=1\n            shift\n            ;;\n        --run)\n            RUN=1\n            shift\n            ;;\n        --benchmark)\n            BUILD_BENCHMARK_TOOL='ON'\n            shift\n            ;;\n        --coverage)\n            DENABLE_CLANG_COVERAGE='ON'\n            shift\n            ;;\n        -f | --filter)\n            FILTER=\"--gtest_filter=$2\"\n            shift 2\n            ;;\n        -j)\n            PARALLEL=\"$2\"\n            shift 2\n            ;;\n        --)\n            shift\n            break\n            ;;\n        *)\n            usage\n            ;;\n        esac\n    done\nfi\n\nif [[ -z \"${PARALLEL}\" ]]; then\n    PARALLEL=\"$(($(nproc) / 5 + 1))\"\nfi\n\nCMAKE_BUILD_TYPE=\"${BUILD_TYPE_UT:-ASAN}\"\nCMAKE_BUILD_TYPE=\"$(echo \"${CMAKE_BUILD_TYPE}\" | awk '{ print(toupper($0)) }')\"\n\necho \"Get params:\n    PARALLEL            -- ${PARALLEL}\n    CLEAN               -- ${CLEAN}\n    ENABLE_PCH          -- ${ENABLE_PCH}\n\"\necho \"Build Backend UT\"\n\nupdate_submodule() {\n    local submodule_path=$1\n    local submodule_name=$2\n    local archive_url=$3\n\n    set +e\n    cd \"${DORIS_HOME}\"\n    echo \"Update ${submodule_name} submodule ...\"\n    git submodule update --init --recursive \"${submodule_path}\"\n    exit_code=$?\n    set -e\n    if [[ \"${exit_code}\" -ne 0 ]]; then\n        # try to get submodule's current commit\n        submodule_commit=$(git ls-tree HEAD \"${submodule_path}\" | awk '{print $3}')\n\n        commit_specific_url=$(echo \"${archive_url}\" | sed \"s/refs\\/heads/${submodule_commit}/\")\n        echo \"Update ${submodule_name} submodule failed, start to download and extract ${commit_specific_url}\"\n\n        mkdir -p \"${DORIS_HOME}/${submodule_path}\"\n        curl -L \"${commit_specific_url}\" | tar -xz -C \"${DORIS_HOME}/${submodule_path}\" --strip-components=1\n    fi\n}\n\nupdate_submodule \"be/src/apache-orc\" \"apache-orc\" \"https://github.com/apache/doris-thirdparty/archive/refs/heads/orc.tar.gz\"\nupdate_submodule \"be/src/clucene\" \"clucene\" \"https://github.com/apache/doris-thirdparty/archive/refs/heads/clucene.tar.gz\"\n\nif [[ \"_${DENABLE_CLANG_COVERAGE}\" == \"_ON\" ]]; then\n    echo \"export DORIS_TOOLCHAIN=clang\" >>custom_env.sh\nfi\n\nif [[ -n \"${DISABLE_BUILD_AZURE}\" ]]; then\n    BUILD_AZURE='OFF'\nfi\n\nif [[ -z ${CMAKE_BUILD_DIR} ]]; then\n    CMAKE_BUILD_DIR=\"${DORIS_HOME}/be/ut_build_${CMAKE_BUILD_TYPE}\"\nfi\nif [[ \"${CLEAN}\" -eq 1 ]]; then\n    pushd \"${DORIS_HOME}/gensrc\"\n    make clean\n    popd\n\n    rm -rf \"${CMAKE_BUILD_DIR}\"\n    rm -rf \"${DORIS_HOME}/be/output\"\nfi\n\nif [[ ! -d \"${CMAKE_BUILD_DIR}\" ]]; then\n    mkdir -p \"${CMAKE_BUILD_DIR}\"\nfi\n\nif [[ -z \"${GLIBC_COMPATIBILITY}\" ]]; then\n    if [[ \"$(uname -s)\" != 'Darwin' ]]; then\n        GLIBC_COMPATIBILITY='ON'\n    else\n        GLIBC_COMPATIBILITY='OFF'\n    fi\nfi\n\nif [[ -z \"${USE_LIBCPP}\" ]]; then\n    if [[ \"$(uname -s)\" != 'Darwin' ]]; then\n        USE_LIBCPP='OFF'\n    else\n        USE_LIBCPP='ON'\n    fi\nfi\n\nif [[ -z \"${USE_MEM_TRACKER}\" ]]; then\n    if [[ \"$(uname -s)\" != 'Darwin' ]]; then\n        USE_MEM_TRACKER='ON'\n    else\n        USE_MEM_TRACKER='OFF'\n    fi\nfi\n\nif [[ -z \"${USE_DWARF}\" ]]; then\n    USE_DWARF='OFF'\nfi\n\nif [[ -z \"${USE_UNWIND}\" ]]; then\n    if [[ \"$(uname -s)\" != 'Darwin' ]]; then\n        USE_UNWIND='ON'\n    else\n        USE_UNWIND='OFF'\n    fi\nfi\n\nMAKE_PROGRAM=\"$(command -v \"${BUILD_SYSTEM}\")\"\necho \"-- Make program: ${MAKE_PROGRAM}\"\necho \"-- Use ccache: ${CMAKE_USE_CCACHE}\"\necho \"-- Extra cxx flags: ${EXTRA_CXX_FLAGS:-}\"\n\nif [[ \"${CMAKE_BUILD_TYPE}\" = \"ASAN\" ]]; then\n    BUILD_TYPE=\"ASAN_UT\"\nelse\n    BUILD_TYPE=\"${CMAKE_BUILD_TYPE}\"\nfi\n\ncd \"${CMAKE_BUILD_DIR}\"\n\"${CMAKE_CMD}\" -G \"${GENERATOR}\" \\\n    -DCMAKE_MAKE_PROGRAM=\"${MAKE_PROGRAM}\" \\\n    -DCMAKE_BUILD_TYPE=\"${BUILD_TYPE}\" \\\n    -DMAKE_TEST=ON \\\n    -DGLIBC_COMPATIBILITY=\"${GLIBC_COMPATIBILITY}\" \\\n    -DUSE_LIBCPP=\"${USE_LIBCPP}\" \\\n    -DBUILD_META_TOOL=OFF \\\n    -DBUILD_BENCHMARK_TOOL=\"${BUILD_BENCHMARK_TOOL}\" \\\n    -DWITH_MYSQL=ON \\\n    -DUSE_DWARF=\"${USE_DWARF}\" \\\n    -DUSE_UNWIND=\"${USE_UNWIND}\" \\\n    -DUSE_MEM_TRACKER=\"${USE_MEM_TRACKER}\" \\\n    -DUSE_JEMALLOC=OFF \\\n    -DEXTRA_CXX_FLAGS=\"${EXTRA_CXX_FLAGS}\" \\\n    -DENABLE_CLANG_COVERAGE=\"${DENABLE_CLANG_COVERAGE}\" \\\n    ${CMAKE_USE_CCACHE:+${CMAKE_USE_CCACHE}} \\\n    -DENABLE_PCH=\"${ENABLE_PCH}\" \\\n    -DDORIS_JAVA_HOME=\"${JAVA_HOME}\" \\\n    -DBUILD_AZURE=\"${BUILD_AZURE}\" \\\n    \"${DORIS_HOME}/be\"\n\"${BUILD_SYSTEM}\" -j \"${PARALLEL}\"\n\nif [[ \"${RUN}\" -ne 1 ]]; then\n    echo \"Finished\"\n    exit 0\nfi\n\necho \"******************************\"\necho \"   Running Backend Unit Test  \"\necho \"******************************\"\n\n# build running dir env\ncd \"${DORIS_HOME}\"\nexport DORIS_TEST_BINARY_DIR=\"${CMAKE_BUILD_DIR}/test/\"\n\n# prepare conf dir\nCONF_DIR=\"${DORIS_TEST_BINARY_DIR}/conf\"\nrm -rf \"${CONF_DIR}\"\nmkdir \"${CONF_DIR}\"\ncp \"${DORIS_HOME}/conf/be.conf\" \"${CONF_DIR}\"/\n\nexport TERM=\"xterm\"\nexport UDF_RUNTIME_DIR=\"${DORIS_TEST_BINARY_DIR}/lib/udf-runtime\"\nexport LOG_DIR=\"${DORIS_TEST_BINARY_DIR}/log\"\nwhile read -r variable; do\n    eval \"export ${variable}\"\ndone < <(sed 's/[[:space:]]*\\(=\\)[[:space:]]*/\\1/' \"${DORIS_TEST_BINARY_DIR}/conf/be.conf\" | grep -E \"^[[:upper:]]([[:upper:]]|_|[[:digit:]])*=\")\n\n# prepare log dir\nmkdir -p \"${LOG_DIR}\"\nmkdir -p \"${UDF_RUNTIME_DIR}\"\nrm -f \"${UDF_RUNTIME_DIR}\"/*\n\n# clean all gcda file\nwhile read -r gcda_file; do\n    rm \"${gcda_file}\"\ndone < <(find \"${CMAKE_BUILD_DIR}\" -name \"*gcda\")\n\nsetup_java_env() {\n    local java_version\n\n    echo \"JAVA_HOME: ${JAVA_HOME}\"\n    if [[ -z \"${JAVA_HOME}\" ]]; then\n        return 1\n    fi\n\n    local jvm_arch='amd64'\n    if [[ \"$(uname -m)\" == 'aarch64' ]]; then\n        jvm_arch='aarch64'\n    fi\n    java_version=\"$(\n        set -e\n        jdk_version \"${JAVA_HOME}/bin/java\"\n    )\"\n    if [[ \"${java_version}\" -gt 8 ]]; then\n        export LD_LIBRARY_PATH=\"${JAVA_HOME}/lib/server:${JAVA_HOME}/lib:${LD_LIBRARY_PATH}\"\n        # JAVA_HOME is jdk\n    elif [[ -d \"${JAVA_HOME}/jre\" ]]; then\n        export LD_LIBRARY_PATH=\"${JAVA_HOME}/jre/lib/${jvm_arch}/server:${JAVA_HOME}/jre/lib/${jvm_arch}:${LD_LIBRARY_PATH}\"\n        # JAVA_HOME is jre\n    else\n        export LD_LIBRARY_PATH=\"${JAVA_HOME}/lib/${jvm_arch}/server:${JAVA_HOME}/lib/${jvm_arch}:${LD_LIBRARY_PATH}\"\n    fi\n\n    if [[ \"$(uname -s)\" == 'Darwin' ]]; then\n        export DYLD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:${DYLD_LIBRARY_PATH}\"\n    fi\n}\n\n# prepare jvm if needed\nsetup_java_env || true\n\n# prepare gtest output dir\nGTEST_OUTPUT_DIR=\"${CMAKE_BUILD_DIR}/gtest_output\"\nrm -rf \"${GTEST_OUTPUT_DIR}\"\nmkdir \"${GTEST_OUTPUT_DIR}\"\n\n# prepare util test_data\nmkdir -p \"${DORIS_TEST_BINARY_DIR}/util\"\nif [[ -d \"${DORIS_TEST_BINARY_DIR}/util/test_data\" ]]; then\n    rm -rf \"${DORIS_TEST_BINARY_DIR}/util/test_data\"\nfi\ncp -r \"${DORIS_HOME}/be/test/util/test_data\" \"${DORIS_TEST_BINARY_DIR}/util\"/\n\n# prepare ut temp dir\nUT_TMP_DIR=\"${DORIS_HOME}/ut_dir\"\nrm -rf \"${UT_TMP_DIR}\"\nmkdir \"${UT_TMP_DIR}\"\ntouch \"${UT_TMP_DIR}/tmp_file\"\n\n# prepare java jars\nLIB_DIR=\"${DORIS_TEST_BINARY_DIR}/lib/\"\nrm -rf \"${LIB_DIR}\"\nmkdir \"${LIB_DIR}\"\nif [[ -d \"${DORIS_THIRDPARTY}/installed/lib/hadoop_hdfs/\" ]]; then\n    cp -r \"${DORIS_THIRDPARTY}/installed/lib/hadoop_hdfs/\" \"${LIB_DIR}\"\nfi\nif [[ -f \"${DORIS_HOME}/output/be/lib/java-udf-jar-with-dependencies.jar\" ]]; then\n    cp \"${DORIS_HOME}/output/be/lib/java-udf-jar-with-dependencies.jar\" \"${LIB_DIR}/\"\nfi\n\n# add java libs\nfor f in \"${LIB_DIR}\"/*.jar; do\n    if [[ -z \"${DORIS_CLASSPATH}\" ]]; then\n        export DORIS_CLASSPATH=\"${f}\"\n    else\n        export DORIS_CLASSPATH=\"${f}:${DORIS_CLASSPATH}\"\n    fi\ndone\n\nif [[ -d \"${LIB_DIR}/hadoop_hdfs/\" ]]; then\n    # add hadoop libs\n    for f in \"${LIB_DIR}/hadoop_hdfs/common\"/*.jar; do\n        DORIS_CLASSPATH=\"${f}:${DORIS_CLASSPATH}\"\n    done\n    for f in \"${LIB_DIR}/hadoop_hdfs/common/lib\"/*.jar; do\n        DORIS_CLASSPATH=\"${f}:${DORIS_CLASSPATH}\"\n    done\n    for f in \"${LIB_DIR}/hadoop_hdfs/hdfs\"/*.jar; do\n        DORIS_CLASSPATH=\"${f}:${DORIS_CLASSPATH}\"\n    done\n    for f in \"${LIB_DIR}/hadoop_hdfs/hdfs/lib\"/*.jar; do\n        DORIS_CLASSPATH=\"${f}:${DORIS_CLASSPATH}\"\n    done\nfi\n\n# the CLASSPATH and LIBHDFS_OPTS is used for hadoop libhdfs\n# and conf/ dir so that hadoop libhdfs can read .xml config file in conf/\nexport CLASSPATH=\"${DORIS_CLASSPATH}\"\n# DORIS_CLASSPATH is for self-managed jni\nexport DORIS_CLASSPATH=\"-Djava.class.path=${DORIS_CLASSPATH}\"\n\njdk_version() {\n    local java_cmd=\"${1}\"\n    local result\n    local IFS=$'\\n'\n\n    if [[ -z \"${java_cmd}\" ]]; then\n        result=no_java\n        return 1\n    else\n        local version\n        # remove \\r for Cygwin\n        version=\"$(\"${java_cmd}\" -Xms32M -Xmx32M -version 2>&1 | tr '\\r' '\\n' | grep version | awk '{print $3}')\"\n        version=\"${version//\\\"/}\"\n        if [[ \"${version}\" =~ ^1\\. ]]; then\n            result=\"$(echo \"${version}\" | awk -F '.' '{print $2}')\"\n        else\n            result=\"$(echo \"${version}\" | awk -F '.' '{print $1}')\"\n        fi\n    fi\n    echo \"${result}\"\n    return 0\n}\n\n# check java version and choose correct JAVA_OPTS\njava_version=\"$(\n    set -e\n    jdk_version \"${JAVA_HOME}/bin/java\"\n)\"\n\nCUR_DATE=$(date +%Y%m%d-%H%M%S)\nLOG_PATH=\"-DlogPath=${DORIS_TEST_BINARY_DIR}/log/jni.log\"\nCOMMON_OPTS=\"-Dsun.java.command=DorisBETEST -XX:-CriticalJNINatives\"\nJDBC_OPTS=\"-DJDBC_MIN_POOL=1 -DJDBC_MAX_POOL=100 -DJDBC_MAX_IDLE_TIME=300000\"\n\nif [[ \"${java_version}\" -gt 8 ]]; then\n    if [[ -z ${JAVA_OPTS} ]]; then\n        JAVA_OPTS=\"-Xmx1024m ${LOG_PATH} -Xloggc:${DORIS_TEST_BINARY_DIR}/log/be.gc.log.${CUR_DATE} ${COMMON_OPTS} ${JDBC_OPTS}\"\n    fi\n    final_java_opt=\"${JAVA_OPTS}\"\nelse\n    if [[ -z ${JAVA_OPTS_FOR_JDK_9} ]]; then\n        JAVA_OPTS_FOR_JDK_9=\"-Xmx1024m ${LOG_PATH} -Xlog:gc:${DORIS_TEST_BINARY_DIR}/log/be.gc.log.${CUR_DATE} ${COMMON_OPTS} ${JDBC_OPTS}\"\n    fi\n    final_java_opt=\"${JAVA_OPTS_FOR_JDK_9}\"\nfi\n\nMACHINE_OS=$(uname -s)\nif [[ \"${MACHINE_OS}\" == \"Darwin\" ]]; then\n    max_fd_limit='-XX:-MaxFDLimit'\n\n    if ! echo \"${final_java_opt}\" | grep \"${max_fd_limit/-/\\\\-}\" >/dev/null; then\n        final_java_opt=\"${final_java_opt} ${max_fd_limit}\"\n    fi\n\n    if [[ -n \"${JAVA_OPTS}\" ]] && ! echo \"${JAVA_OPTS}\" | grep \"${max_fd_limit/-/\\\\-}\" >/dev/null; then\n        JAVA_OPTS=\"${JAVA_OPTS} ${max_fd_limit}\"\n    fi\nfi\n\n# set LIBHDFS_OPTS for hadoop libhdfs\nexport LIBHDFS_OPTS=\"${final_java_opt}\"\n\n# set ORC_EXAMPLE_DIR for orc unit tests\nexport ORC_EXAMPLE_DIR=\"${DORIS_HOME}/be/src/apache-orc/examples\"\n\n# set asan and ubsan env to generate core file\nexport DORIS_HOME=\"${DORIS_TEST_BINARY_DIR}/\"\n## detect_container_overflow=0, https://github.com/google/sanitizers/issues/193\nexport ASAN_OPTIONS=symbolize=1:abort_on_error=1:disable_coredump=0:unmap_shadow_on_exit=1:detect_container_overflow=0:check_malloc_usable_size=0\nexport UBSAN_OPTIONS=print_stacktrace=1\nexport JAVA_OPTS=\"-Xmx1024m -DlogPath=${DORIS_HOME}/log/jni.log -Xloggc:${DORIS_HOME}/log/be.gc.log.${CUR_DATE} -Dsun.java.command=DorisBE -XX:-CriticalJNINatives -DJDBC_MIN_POOL=1 -DJDBC_MAX_POOL=100 -DJDBC_MAX_IDLE_TIME=300000\"\n\n# find all executable test files\ntest=\"${DORIS_TEST_BINARY_DIR}/doris_be_test\"\nprofraw=${DORIS_TEST_BINARY_DIR}/doris_be_test.profraw\nprofdata=${DORIS_TEST_BINARY_DIR}/doris_be_test.profdata\n\nfile_name=\"${test##*/}\"\nif [[ -f \"${test}\" ]]; then\n    if [[ \"_${DENABLE_CLANG_COVERAGE}\" == \"_ON\" ]]; then\n        LLVM_PROFILE_FILE=\"${profraw}\" \"${test}\" --gtest_output=\"xml:${GTEST_OUTPUT_DIR}/${file_name}.xml\" --gtest_print_time=true \"${FILTER}\"\n        if [[ -d \"${DORIS_TEST_BINARY_DIR}\"/report ]]; then\n            rm -rf \"${DORIS_TEST_BINARY_DIR}\"/report\n        fi\n        cmd1=\"${LLVM_PROFDATA} merge -o ${profdata} ${profraw}\"\n        echo \"${cmd1}\"\n        eval \"${cmd1}\"\n        cmd2=\"${LLVM_COV} show -output-dir=${DORIS_TEST_BINARY_DIR}/report -format=html \\\n            -ignore-filename-regex='(.*gensrc/.*)|(.*_test\\.cpp$)|(.*be/test.*)|(.*apache-orc/.*)|(.*clucene/.*)' \\\n            -instr-profile=${profdata} \\\n            -object=${test}\"\n        echo \"${cmd2}\"\n        eval \"${cmd2}\"\n    else\n        \"${test}\" --gtest_output=\"xml:${GTEST_OUTPUT_DIR}/${file_name}.xml\" --gtest_print_time=true \"${FILTER}\"\n    fi\n    echo \"=== Finished. Gtest output: ${GTEST_OUTPUT_DIR}\"\nelse\n    echo \"unit test file: ${test} does not exist.\"\nfi\n"
        },
        {
          "name": "run-cloud-ut.sh",
          "type": "blob",
          "size": 7.5322265625,
          "content": "#!/usr/bin/env bash\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n#####################################################################\n# This script is used to run unit test of Doris Backend\n# Usage: $0 <options>\n#  Optional options:\n#     --clean            clean and build ut\n#     --run              build and run all ut\n#     --run --filter=xx  build and run specified ut\n#     -j                 build parallel\n#     -h                 print this help message\n#\n# All BE tests must use \"_test\" as the file suffix, and add the file\n# to cloud/test/CMakeLists.txt.\n#\n# GTest result xml files will be in \"cloud/ut_build_ASAN/gtest_output/\"\n#####################################################################\n\nROOT=$(dirname \"$0\")\nROOT=$(\n    cd \"${ROOT}\"\n    pwd\n)\n\nexport DORIS_HOME=\"${ROOT}\"\n\n# Check args\nusage() {\n    echo \"\nUsage: $0 <options>\n  Optional options:\n     --clean            clean and build ut\n     --run              build and run all ut\n     --coverage         coverage after run ut\n     --run --filter=x   build and run specified ut, filter x format is <binary_name>:<gtest_filter>,\n                        a <binary_name> is the name of a cpp file without '.cpp' suffix.\n                        e.g. binary_name of xxx_test.cpp is xxx_test\n     --fdb              run with a specific fdb connection string, e.g fdb_cluster0:cluster0@192.168.1.100:4500\n     -j                 build parallel\n     -h                 print this help message\n\n  Eg.\n    $0                                                                          build tests\n    $0 --run                                                                    build and run all tests\n    $0 --run --filter=recycler_test:FooTest.*                                   runs everying of test suite FooTest in recycler_test.cpp\n    $0 --run --filter=recycler_test:*Null*:*Constructor*                        runs any test whose full name contains either 'Null' or 'Constructor' in recycler_test.cpp\n    $0 --run --filter=recycler_test:-*DeathTest.*                               runs all non-death tests in recycler_test.cpp\n    $0 --run --filter=recycler_test:FooTest.*-FooTest.Bar                       runs everything in test suite FooTest except FooTest.Bar in recycler_test.cpp\n    $0 --run --filter=recycler_test:FooTest.*:BarTest.*-FooTest.Bar:BarTest.Foo runs everything in test suite FooTest except FooTest.Bar and everything in test suite BarTest except BarTest.Foo in recycler_test.cpp\n    $0 --run --fdb=fdb_cluster0:cluster0@192.168.1.100:4500                     run with specific fdb\n    $0 --run --coverage                                                         run with coverage report\n    $0 --clean                                                                  clean and build tests\n    $0 --clean --run                                                            clean, build and run all tests\n    \"\n    exit 1\n}\n\nif ! OPTS=$(getopt -n \"$0\" -o vhj:f: -l run,clean,filter:,fdb:,coverage -- \"$@\"); then\n    usage\nfi\n\nset -eo pipefail\n\neval set -- \"${OPTS}\"\n\nPARALLEL=$(($(nproc) / 5 + 1))\n\nCLEAN=0\nRUN=0\nFILTER=\"\"\nFDB=\"\"\nENABLE_CLANG_COVERAGE=OFF\nBUILD_AZURE=\"ON\"\n\necho \"===================== filter: ${FILTER}\"\nif [[ $# != 1 ]]; then\n    while true; do\n        case \"$1\" in\n        --clean)\n            CLEAN=1\n            shift\n            ;;\n        --run)\n            RUN=1\n            shift\n            ;;\n        --coverage)\n            ENABLE_CLANG_COVERAGE=\"ON\"\n            shift\n            ;;\n        --fdb)\n            FDB=\"$2\"\n            shift 2\n            ;;\n        -f | --filter)\n            FILTER=\"$2\"\n            shift 2\n            ;;\n        -j)\n            PARALLEL=$2\n            shift 2\n            ;;\n        --)\n            shift\n            break\n            ;;\n        *)\n            usage\n            ;;\n        esac\n    done\nfi\n\necho \"===================== filter: ${FILTER}\"\n\nCMAKE_BUILD_TYPE=${BUILD_TYPE:-ASAN}\nCMAKE_BUILD_TYPE=\"${CMAKE_BUILD_TYPE^^}\"\n\necho \"Get params:\n    PARALLEL            -- ${PARALLEL}\n    CLEAN               -- ${CLEAN}\n    FILTER              -- ${FILTER}\n    COVERAGE            -- ${ENABLE_CLANG_COVERAGE}\n    FDB                 -- ${FDB}\n\"\necho \"Build Doris Cloud UT\"\n\nif [[ \"_${ENABLE_CLANG_COVERAGE}\" == \"_ON\" ]]; then\n    sed -i \"s/DORIS_TOOLCHAIN=gcc/DORIS_TOOLCHAIN=clang/g\" env.sh\n    echo \"export DORIS_TOOLCHAIN=clang\" >>custom_env.sh\nfi\n\n. \"${DORIS_HOME}/env.sh\"\n\nCMAKE_BUILD_DIR=\"${DORIS_HOME}/cloud/ut_build_${CMAKE_BUILD_TYPE}\"\nif [[ \"${CLEAN}\" -eq 1 ]]; then\n    rm \"${CMAKE_BUILD_DIR}\" -rf\n    rm \"${DORIS_HOME}/cloud/output/\" -rf\nfi\n\nif [[ ! -d \"${CMAKE_BUILD_DIR}\" ]]; then\n    mkdir -p \"${CMAKE_BUILD_DIR}\"\nfi\n\nif [[ -z \"${GLIBC_COMPATIBILITY}\" ]]; then\n    GLIBC_COMPATIBILITY=ON\nfi\n\nif [[ -z \"${USE_LIBCPP}\" ]]; then\n    if [[ \"$(uname -s)\" != 'Darwin' ]]; then\n        USE_LIBCPP='OFF'\n    else\n        USE_LIBCPP='ON'\n    fi\nfi\n\nif [[ -z \"${USE_DWARF}\" ]]; then\n    USE_DWARF=OFF\nfi\n\nif [[ -n \"${DISABLE_BUILD_AZURE}\" ]]; then\n    BUILD_AZURE='OFF'\nfi\n\nMAKE_PROGRAM=\"$(command -v \"${BUILD_SYSTEM}\")\"\necho \"-- Make program: ${MAKE_PROGRAM}\"\n\ncd \"${CMAKE_BUILD_DIR}\"\nfind . -name \"*.gcda\" -exec rm {} \\;\n\n\"${CMAKE_CMD}\" -G \"${GENERATOR}\" \\\n    -DCMAKE_MAKE_PROGRAM=\"${MAKE_PROGRAM}\" \\\n    -DCMAKE_BUILD_TYPE=\"${CMAKE_BUILD_TYPE}\" \\\n    -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \\\n    -DMAKE_TEST=ON \\\n    -DGLIBC_COMPATIBILITY=\"${GLIBC_COMPATIBILITY}\" \\\n    -DUSE_LIBCPP=\"${USE_LIBCPP}\" \\\n    -DUSE_DWARF=\"${USE_DWARF}\" \\\n    -DUSE_MEM_TRACKER=ON \\\n    -DUSE_JEMALLOC=OFF \\\n    -DSTRICT_MEMORY_USE=OFF \\\n    -DENABLE_CLANG_COVERAGE=\"${ENABLE_CLANG_COVERAGE}\" \\\n    \"${CMAKE_USE_CCACHE}\" \\\n    -DBUILD_AZURE=\"${BUILD_AZURE}\" \\\n    \"${DORIS_HOME}/cloud/\"\n\"${BUILD_SYSTEM}\" -j \"${PARALLEL}\"\n\"${BUILD_SYSTEM}\" install\n\nmkdir -p \"${CMAKE_BUILD_DIR}/test/log\"\n\n# prepare java jars\nLIB_DIR=\"${CMAKE_BUILD_DIR}/test/lib\"\nrm -rf \"${LIB_DIR}\"\nmkdir \"${LIB_DIR}\"\nif [[ -d \"${DORIS_THIRDPARTY}/installed/lib/hadoop_hdfs/\" ]]; then\n    cp -r \"${DORIS_THIRDPARTY}/installed/lib/hadoop_hdfs/\" \"${LIB_DIR}\"\nfi\n\nif [[ \"${RUN}\" -ne 1 ]]; then\n    echo \"Finished\"\n    exit 0\nfi\n\necho \"**********************************\"\necho \"   Running MetaService Unit Test  \"\necho \"**********************************\"\n\nexport ASAN_OPTIONS=detect_container_overflow=0\n\n# test binary output dir\ncd test\n# FILTER: binary_name:gtest_filter\n# FILTER: meta_service_test:DetachSchemaKVTest.*\n# ./run_all_tests.sh --test \"\\\"$(echo \"${FILTER}\" | awk -F: '{print $1}')\\\"\" --filter \"\\\"$(echo \"${FILTER}\" | awk -F: '{print $2}')\\\"\" --fdb \"\\\"${FDB}\\\"\"\nset -euo pipefail\nif [[ \"_${ENABLE_CLANG_COVERAGE}\" == \"_ON\" ]]; then\n    bash -x ./run_all_tests.sh --coverage --test \"$(echo \"${FILTER}\" | awk -F: '{print $1}')\" --filter \"$(echo \"${FILTER}\" | awk -F: '{print $2}')\" --fdb \"${FDB}\"\nelse\n    bash ./run_all_tests.sh --test \"$(echo \"${FILTER}\" | awk -F: '{print $1}')\" --filter \"$(echo \"${FILTER}\" | awk -F: '{print $2}')\" --fdb \"${FDB}\"\nfi\n"
        },
        {
          "name": "run-fe-ut.sh",
          "type": "blob",
          "size": 3.4462890625,
          "content": "#!/usr/bin/env bash\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nset -eo pipefail\n\nROOT=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &>/dev/null && pwd)\"\n\nexport DORIS_HOME=\"${ROOT}\"\n\n. \"${DORIS_HOME}/env.sh\"\n\n# Check args\nusage() {\n    echo \"\nUsage: $0 <options>\n  Optional options:\n     --coverage           build and run coverage statistic\n     --run                build and run ut\n\n  Eg.\n    $0                                                                      build and run ut\n    $0 --coverage                                                           build and run coverage statistic\n    $0 --run org.apache.doris.utframe.Demo                                  build and run the test named Demo\n    $0 --run org.apache.doris.utframe.Demo#testCreateDbAndTable+test2       build and run testCreateDbAndTable in Demo test\n    $0 --run org.apache.doris.Demo,org.apache.doris.Demo2                   build and run Demo and Demo2 test\n  \"\n    exit 1\n}\n\nif ! OPTS=\"$(getopt \\\n    -n \"$0\" \\\n    -o '' \\\n    -l 'coverage' \\\n    -l 'run' \\\n    -- \"$@\")\"; then\n    usage\nfi\n\neval set -- \"${OPTS}\"\n\nRUN=0\nCOVERAGE=0\nif [[ \"$#\" == 1 ]]; then\n    #default\n    RUN=0\n    COVERAGE=0\nelse\n    RUN=0\n    COVERAGE=0\n    while true; do\n        case \"$1\" in\n        --coverage)\n            COVERAGE=1\n            shift\n            ;;\n        --run)\n            RUN=1\n            shift\n            ;;\n        --)\n            shift\n            break\n            ;;\n        *)\n            echo \"Internal error\"\n            exit 1\n            ;;\n        esac\n    done\nfi\n\necho \"Build Frontend UT\"\n\necho \"******************************\"\necho \"    Runing DorisFe Unittest    \"\necho \"******************************\"\n\n#echo \"Build docs\"\n#cd \"${DORIS_HOME}/docs\"\n#./build_help_zip.sh\n#cp build/help-resource.zip \"${DORIS_HOME}\"/fe/fe-core/src/test/resources/real-help-resource.zip\n#cd \"${DORIS_HOME}\"\n\n\"${DORIS_HOME}\"/generated-source.sh\n\ncd \"${DORIS_HOME}/fe\"\nmkdir -p build/compile\n\nif [[ -z \"${FE_UT_PARALLEL}\" ]]; then\n    # the default fe unit test parallel is 1\n    export FE_UT_PARALLEL=1\nfi\necho \"Unit test parallel is: ${FE_UT_PARALLEL}\"\n\nif [[ \"${RUN}\" -eq 1 ]]; then\n    echo \"Run the specified class: $1\"\n    # eg:\n    # sh run-fe-ut.sh --run org.apache.doris.utframe.DemoTest\n    # sh run-fe-ut.sh --run org.apache.doris.utframe.DemoTest#testCreateDbAndTable+test2\n\n    if [[ \"${COVERAGE}\" -eq 1 ]]; then\n        \"${MVN_CMD}\" test jacoco:report -DfailIfNoTests=false -Dtest=\"$1\"\n    else\n        \"${MVN_CMD}\" test -Dcheckstyle.skip=true -DfailIfNoTests=false -Dtest=\"$1\"\n    fi\nelse\n    echo \"Run Frontend UT\"\n    if [[ \"${COVERAGE}\" -eq 1 ]]; then\n        \"${MVN_CMD}\" test jacoco:report -DfailIfNoTests=false\n    else\n        \"${MVN_CMD}\" test -Dcheckstyle.skip=true -DfailIfNoTests=false\n    fi\nfi\n"
        },
        {
          "name": "run-regression-test.sh",
          "type": "blob",
          "size": 7.7919921875,
          "content": "#!/usr/bin/env bash\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nset -eo pipefail\n#set -x\n\nROOT=\"$(cd \"$(dirname \"${BASH_SOURCE[0]}\")\" &>/dev/null && pwd)\"\n\nDORIS_HOME=\"${ROOT}\"\n\n# Check args\nusage() {\n    echo \"\nUsage: $0 <shell_options> <framework_options>\n  Optional shell_options:\n     --clean    clean output of regression test framework\n     --teamcity print teamcity service messages\n     --run      run regression test. build framework if necessary\n\n  Optional framework_options:\n     -s                                run a specified suite\n     -g                                run a specified group\n     -d                                run a specified directory\n     -h                                **print all framework options usage**\n     -xs                               exclude the specified suite\n     -xg                               exclude the specified group\n     -xd                               exclude the specified directory\n     -genOut                           generate .out file if not exist\n     -forceGenOut                      delete and generate .out file\n     -parallel                         run tests using specified threads\n     -dockerSuiteParallel              run docker tests using specified threads\n     -randomOrder                      run tests in a random order\n     -noKillDocker                     don't kill container when finish docker suites\n     -runMode                          if run docker suites, no need to setup external doris clusters.\n                                       user may specify run mode: cloud or not_cloud.\n     -times                            rum tests {times} times\n\n  Eg.\n    $0                                        build regression test framework and run all suite which in default group\n    $0 --run test_select                      run a suite which named as test_select\n    $0 --compile                              only compile regression framework\n    $0 --run -s test_select                   run a suite which named as test_select\n    $0 --run test_select -genOut              generate output file for test_select if not exist\n    $0 --run -g default                       run all suite in the group which named as default\n    $0 --run -d demo,correctness/tmp          run all suite in the directories which named as demo and correctness/tmp\n    $0 --run -d regression-test/suites/demo   specify the suite directories path from repo root\n    $0 --clean                                clean output of regression test framework\n    $0 --clean --run test_select              clean output and build regression test framework and run a suite which named as test_select\n    $0 --run -h                               print framework options\n    $0 --teamcity --run test_select           print teamcity service messages and build regression test framework and run test_select\n\nLog path: \\${DORIS_HOME}/output/regression-test/log\nDefault config file: \\${DORIS_HOME}/regression-test/conf/regression-conf.groovy\n  \"\n    exit 1\n}\nONLY_COMPILE=0\nCLEAN=0\nWRONG_CMD=0\nTEAMCITY=0\nRUN=0\nif [[ \"$#\" == 0 ]]; then\n    #default\n    CLEAN=0\n    WRONG_CMD=0\n    TEAMCITY=0\n    RUN=1\nelse\n    CLEAN=0\n    RUN=0\n    TEAMCITY=0\n    WRONG_CMD=0\n    while true; do\n        case \"$1\" in\n        --clean)\n            CLEAN=1\n            shift\n            ;;\n        --teamcity)\n            TEAMCITY=1\n            shift\n            ;;\n        --conf)\n            CUSTOM_CONFIG_FILE=\"$2\"\n            shift\n            shift\n            ;;\n        --compile)\n            RUN=1\n            ONLY_COMPILE=1\n            shift\n            ;;\n        --run)\n            RUN=1\n            shift\n            ;;\n        *)\n            if [[ \"${RUN}\" -eq 0 ]] && [[ \"${CLEAN}\" -eq 0 ]]; then\n                WRONG_CMD=1\n            fi\n            break\n            ;;\n        esac\n    done\nfi\n\nif [[ ${WRONG_CMD} -eq 1 ]]; then\n    usage\nfi\n\n# set maven\nMVN_CMD='mvn'\nif [[ -n \"${CUSTOM_MVN}\" ]]; then\n    MVN_CMD=\"${CUSTOM_MVN}\"\nfi\nif ! \"${MVN_CMD}\" --version; then\n    echo \"Error: mvn is not found\"\n    exit 1\nfi\nexport MVN_CMD\n\nCONF_DIR=\"${DORIS_HOME}/regression-test/conf\"\nif [[ -n \"${CUSTOM_CONFIG_FILE}\" ]] && [[ -f \"${CUSTOM_CONFIG_FILE}\" ]]; then\n    CONFIG_FILE=\"${CUSTOM_CONFIG_FILE}\"\n    echo \"Using custom config file ${CONFIG_FILE}\"\nelse\n    CONFIG_FILE=\"${CONF_DIR}/regression-conf.groovy\"\nfi\nLOG_CONFIG_FILE=\"${CONF_DIR}/logback.xml\"\n\nFRAMEWORK_SOURCE_DIR=\"${DORIS_HOME}/regression-test/framework\"\nREGRESSION_TEST_BUILD_DIR=\"${FRAMEWORK_SOURCE_DIR}/target\"\nFRAMEWORK_APACHE_DIR=\"${FRAMEWORK_SOURCE_DIR}/src/main/groovy/org/apache\"\n\nOUTPUT_DIR=\"${DORIS_HOME}/output/regression-test\"\nLOG_OUTPUT_FILE=\"${OUTPUT_DIR}/log\"\nRUN_JAR=\"${OUTPUT_DIR}/lib/regression-test-*.jar\"\nif [[ -z \"${DORIS_THIRDPARTY}\" ]]; then\n    export DORIS_THIRDPARTY=\"${DORIS_HOME}/thirdparty\"\nfi\n\nrm -rf \"${FRAMEWORK_APACHE_DIR}/doris/thrift\"\n\nif [[ \"${CLEAN}\" -eq 1 ]]; then\n    rm -rf \"${REGRESSION_TEST_BUILD_DIR}\"\n    rm -rf \"${OUTPUT_DIR}\"\nfi\n\nif [[ \"${RUN}\" -ne 1 ]]; then\n    echo \"Finished\"\n    exit 0\nfi\n\nif ! test -f ${RUN_JAR:+${RUN_JAR}}; then\n    echo \"===== Build Regression Test Framework =====\"\n\n    # echo \"Build generated code\"\n    cd \"${DORIS_HOME}/gensrc/thrift\"\n    make\n\n    cp -rf \"${DORIS_HOME}/gensrc/build/gen_java/org/apache/doris/thrift\" \"${FRAMEWORK_APACHE_DIR}/doris/\"\n\n    cd \"${DORIS_HOME}/regression-test/framework\"\n    \"${MVN_CMD}\" package\n    cd \"${DORIS_HOME}\"\n\n    mkdir -p \"${OUTPUT_DIR}\"/{lib,log}\n    cp -r \"${REGRESSION_TEST_BUILD_DIR}\"/regression-test-*.jar \"${OUTPUT_DIR}/lib\"\n\n    echo \"===== BUILD JAVA_UDF_SRC TO GENERATE JAR =====\"\n    mkdir -p \"${DORIS_HOME}\"/regression-test/suites/javaudf_p0/jars\n    cd \"${DORIS_HOME}\"/regression-test/java-udf-src\n    \"${MVN_CMD}\" package\n    cp target/java-udf-case-jar-with-dependencies.jar \"${DORIS_HOME}\"/regression-test/suites/javaudf_p0/jars/\n    # be and fe dir is compiled output\n    mkdir -p \"${DORIS_HOME}\"/output/fe/custom_lib/\n    mkdir -p \"${DORIS_HOME}\"/output/be/custom_lib/\n    cp target/java-udf-case-jar-with-dependencies.jar \"${DORIS_HOME}\"/output/fe/custom_lib/\n    cp target/java-udf-case-jar-with-dependencies.jar \"${DORIS_HOME}\"/output/be/custom_lib/\n    cd \"${DORIS_HOME}\"\nfi\n\n# check java home\nif [[ -z \"${JAVA_HOME}\" ]]; then\n    echo \"Error: JAVA_HOME is not set\"\n    exit 1\nfi\n\n# check java version\nexport JAVA=\"${JAVA_HOME}/bin/java\"\n\nREGRESSION_OPTIONS_PREFIX=''\n\n# contains framework options and not start with -\n# it should be suite name\nif [[ \"$#\" -ne 0 ]] && [[ \"$1\" =~ ^[^-].* ]]; then\n    # specify suiteName\n    REGRESSION_OPTIONS_PREFIX='-s'\nfi\n\necho \"===== Run Regression Test =====\"\n\n# if use jdk17, add java option \"--add-opens=java.base/java.nio=ALL-UNNAMED\"\nif [[ \"${TEAMCITY}\" -eq 1 ]]; then\n    JAVA_OPTS=\"${JAVA_OPTS} -DstdoutAppenderType=teamcity -Xmx2048m\"\nfi\n\nif [[ \"${ONLY_COMPILE}\" -eq 0 ]]; then\n    \"${JAVA}\" -DDORIS_HOME=\"${DORIS_HOME}\" \\\n        -DLOG_PATH=\"${LOG_OUTPUT_FILE}\" \\\n        -Dfile.encoding=\"UTF-8\" \\\n        -Dlogback.configurationFile=\"${LOG_CONFIG_FILE}\" \\\n        ${JAVA_OPTS:+${JAVA_OPTS}} \\\n        -jar ${RUN_JAR:+${RUN_JAR}} \\\n        -cf \"${CONFIG_FILE}\" \\\n        ${REGRESSION_OPTIONS_PREFIX:+${REGRESSION_OPTIONS_PREFIX}} \"$@\"\nfi\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "sonar-project.properties",
          "type": "blob",
          "size": 0.833984375,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\nsonar.projectKey=apache_incubator-doris\nsonar.organization=apache\n"
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "webroot",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}