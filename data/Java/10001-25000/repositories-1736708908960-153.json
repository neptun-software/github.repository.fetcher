{
  "metadata": {
    "timestamp": 1736708908960,
    "page": 153,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alibaba/vlayout",
      "stars": 10789,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.529296875,
          "content": "# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n.classpath\n.project\n.settings/\n\n# Proguard folder generated by Eclipse\nproguard/\n\n#Log Files\n*.log\n\n# OS X\n.DS_Store\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.war\n*.ear\n*.iml\n\n# IDEA Files\n.idea/\nout/\n\n# MAVEN COMPILE Files\ntarget/\nlint.xml\n\ndeploy.gradle\n#jcenterDeploy.gradle\n#jcenterInstall.gradle"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.416015625,
          "content": "# Contributing Guide\n\nThank you for your attention to this project. Any bug, doc, examples and suggestion is appreciated. Here are some suggestions for you to create Pull Requests or open Issues.\n\n## Branch Management\n\n```\nmaster\n ↑\ndevelop         <--- PR(bugfix/typo/3rd-PR)\n ↑ PR\n{type}/{description}\n```  \nBranches\n\n* `master` branch\n    * `master` is the latest (pre-)release branch.\n* `develop` branch\n    * `develop` is the stable developing branch. [Github Release](https://help.github.com/articles/creating-releases/) is used to publish a (pre-)release version to `master` branch.\n    * ***It's RECOMMENDED to commit bugfix or feature PR to `develop`***.\n* `{action}/{description}` branch\n    * The branch for a developing or bugfix\n    *. **DO NOT commit any PR to such a branch**.\n\n## Branch Name\n\n```\n{action}/{description}\n```\n\n* `{action}`:\n\t* `feature`: used for developing a new feature.\n\t* `bugfix`: used for fixing bugs.\n* for example: `feature/add_flex_layouthelper`\n\n## Commit Log\n\n\n```\n{action} {description}\n```\n\n* `{action}`\n    * `add`\n    * `update` or `bugfix`\n    * `remove`\n    * ...\n* `{description}`\n    * It's ***RECOMMENDED*** to close issue with syntax `#123`, see [the doc](https://help.github.com/articles/closing-issues-via-commit-messages/) for more detail. It's useful for responding issues and release flow.\n\nfor example:\n\n* `add new layout helper`\n* `fix #123, make compatible to recyclervew 25.2.0`\n* `remove abc`\n\n## Issue\n\n* Please apply a proper label to an issue.\n* Suggested to use English.\n* Provide sufficient instructions to be able to reproduce the issue and make the issues clear. Such as phone model, system version, sdk version, crash logs and screen captures. \n\n## Pull Request And Contributor License Agreement\n\n\n[Create Pull Requests](https://github.com/alibaba/vlayout/compare) here.\n\nIn order to contribute code to vlayout, you (or the legal entity you represent) must sign the Contributor License Agreement (CLA).\n\nYou can read and sign the [Alibaba CLA](https://cla-assistant.io/alibaba/vlayout) online.\n\nFor CLA assistant service works properly, please make sure you have added email address that your commits linked to GitHub account.\n\n## Code Style Guide\n\n### Java & Android \n\n* Use [Google Java Style](https://google.github.io/styleguide/javaguide.html) as basic guidelines of java code.\n* Follow [AOSP Code Style](https://source.android.com/source/code-style.html) for rest of android related code style.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2016 Alibaba Group\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README-ch.md",
          "type": "blob",
          "size": 7.3095703125,
          "content": "# 注意，该项目停止维护！！！\n\n# vlayout\n\n[English Document](README.md)\n\n## Tangram 相关开源库\n\n### Android\n\n+ [Tangram-Android](https://github.com/alibaba/Tangram-Android)\n+ [Virtualview-Android](https://github.com/alibaba/Virtualview-Android)\n+ [vlayout](https://github.com/alibaba/vlayout)\n+ [UltraViewPager](https://github.com/alibaba/UltraViewPager)\n\n### iOS\n\n+ [Tangram-iOS](https://github.com/alibaba/Tangram-iOS)\n+ [Virtualview-iOS](https://github.com/alibaba/VirtualView-iOS)\n+ [LazyScrollView](https://github.com/alibaba/lazyscrollview)\n\nVirtualLayout是一个针对RecyclerView的LayoutManager扩展, 主要提供一整套布局方案和布局间的组件复用的问题。\n\n## 设计思路\n\n通过定制化的LayoutManager，接管整个RecyclerView的布局逻辑；LayoutManager管理了一系列LayoutHelper，LayoutHelper负责具体布局逻辑实现的地方；每一个LayoutHelper负责页面某一个范围内的组件布局；不同的LayoutHelper可以做不同的布局逻辑，因此可以在一个RecyclerView页面里提供异构的布局结构，这就能比系统自带的LinearLayoutManager、GridLayoutManager等提供更加丰富的能力。同时支持扩展LayoutHelper来提供更多的布局能力。\n\n## 主要功能\n\n * 默认通用布局实现，解耦所有的View和布局之间的关系: Linear, Grid, 吸顶, 浮动, 固定位置等。\n\t* LinearLayoutHelper: 线性布局\n\t* GridLayoutHelper:  Grid布局， 支持横向的colspan\n\t* FixLayoutHelper: 固定布局，始终在屏幕固定位置显示\n\t* ScrollFixLayoutHelper: 固定布局，但之后当页面滑动到该图片区域才显示, 可以用来做返回顶部或其他书签等\n\t* FloatLayoutHelper: 浮动布局，可以固定显示在屏幕上，但用户可以拖拽其位置\n\t* ColumnLayoutHelper: 栏格布局，都布局在一排，可以配置不同列之间的宽度比值\n\t* SingleLayoutHelper: 通栏布局，只会显示一个组件View\n\t* OnePlusNLayoutHelper: 一拖N布局，可以配置1-5个子元素\n\t* StickyLayoutHelper: stikcy布局， 可以配置吸顶或者吸底\n\t* StaggeredGridLayoutHelper: 瀑布流布局，可配置间隔高度/宽度\n * 上述默认实现里可以大致分为两类：一是非fix类型布局，像线性、Grid、栏格等，它们的特点是布局在整个页面流里，随页面滚动而滚动；另一类就是fix类型的布局，它们的子节点往往不随页面滚动而滚动。\n * 所有除布局外的组件复用，VirtualLayout将用来管理大的模块布局组合，扩展了RecyclerView，使得同一RecyclerView内的组件可以复用，减少View的创建和销毁过程。\n\n\n## 使用\n\n**虽然 vlayout 布局灵活，然而 API 相对原始，手工维护数据及 LayoutHelper 比较麻烦，强烈建议大家使用 [Tangram-Android](https://github.com/alibaba/Tangram-Android) 来间接使用 vlayout，Tangram 具备 vlayout 里所有的功能，且隐藏了细节，通过数据配置即可搭建页面，能避免绝大多数 Issue 里提到的问题，而且重大更新维护主要基于 Tangram，包括局部刷新、响应式接口等。**\n\n版本请参考 [release 说明](https://github.com/alibaba/vlayout/releases)里的最新版本，最新的 aar 都会发布到 jcenter 和 MavenCentral 上，确保配置了这两个仓库源，然后引入aar依赖：\n\n``` gradle \ncompile ('com.alibaba.android:vlayout:1.2.8@aar') {\n\ttransitive = true\n}\n```\n\n或者maven:  \npom.xml\n``` xml\n<dependency>\n  <groupId>com.alibaba.android</groupId>\n  <artifactId>vlayout</artifactId>\n  <version>1.2.8</version>\n  <type>aar</type>\n</dependency>\n```\n\n\n初始化```LayoutManager```\n\n``` java\nfinal RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);\nfinal VirtualLayoutManager layoutManager = new VirtualLayoutManager(this);\n\nrecyclerView.setLayoutManager(layoutManager);\n```\n\n设置回收复用池大小，（如果一屏内相同类型的 View 个数比较多，需要设置一个合适的大小，防止来回滚动时重新创建 View）：\n\n``` java\nRecyclerView.RecycledViewPool viewPool = new RecyclerView.RecycledViewPool();\nrecyclerView.setRecycledViewPool(viewPool);\nviewPool.setMaxRecycledViews(0, 10);\n\n```\n\n**注意：上述示例代码里只针对type=0的item设置了复用池的大小，如果你的页面有多种type，需要为每一种类型的分别调整复用池大小参数。**\n\n加载数据时有两种方式:\n\n* 一种是使用 ```DelegateAdapter```, 可以像平常一样写继承自```DelegateAdapter.Adapter```的Adapter, 只比之前的Adapter需要多重载```onCreateLayoutHelper```方法。\n其他的和默认Adapter一样。\n\n``` java\nDelegateAdapter delegateAdapter = new DelegateAdapter(layoutManager, hasConsistItemType);\nrecycler.setAdapter(delegateAdapter);\n\n// 之后可以通过 setAdapters 或 addAdapter方法添加DelegateAdapter.Adapter\n\ndelegateAdapter.setAdapters(adapters);\n\n// or\nCustomAdapter adapter = new CustomAdapter(data, new GridLayoutHelper());\ndelegateAdapter.addAdapter(adapter);\n\n// 如果数据有变化，调用自定义 adapter 的 notifyDataSetChanged()\nadapter.notifyDataSetChanged();\n```\n**注意：当hasConsistItemType=true的时候，不论是不是属于同一个子adapter，相同类型的item都能复用。表示它们共享一个类型。\n当hasConsistItemType=false的时候，不同子adapter之间的类型不共享**\n\n* 另一种是当业务有自定义的复杂需求的时候, 可以继承自```VirtualLayoutAdapter```, 实现自己的Adapter\n\n``` java\npublic class MyAdapter extends VirtualLayoutAdapter {\n   ......\n}\n\nMyAdapter myAdapter = new MyAdapter(layoutManager);\n\n//构造 layoutHelper 列表\nList<LayoutHelper> helpers = new LinkedList<>();\nGridLayoutHelper gridLayoutHelper = new GridLayoutHelper(4);\ngridLayoutHelper.setItemCount(25);\nhelpers.add(gridLayoutHelper);\n\nGridLayoutHelper gridLayoutHelper2 = new GridLayoutHelper(2);\ngridLayoutHelper2.setItemCount(25);\nhelpers.add(gridLayoutHelper2);\n\n//将 layoutHelper 列表传递给 adapter\nmyAdapter.setLayoutHelpers(helpers);\n\n//将 adapter 设置给 recyclerView\nrecycler.setAdapter(myAdapter);\n\n```\n\n在这种情况下，需要使用者注意在当```LayoutHelpers```的结构或者数据数量等会影响到布局的元素变化时，需要主动调用```setLayoutHelpers```去更新布局模式。\n\n另外如果你的应用有混淆配置，请为vlayout添加一下防混淆配置：\n\n```\n-keepattributes InnerClasses\n-keep class com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx { *; }\n-keep class android.support.v7.widget.RecyclerView$LayoutParams { *; }\n-keep class android.support.v7.widget.RecyclerView$ViewHolder { *; }\n-keep class android.support.v7.widget.ChildHelper { *; }\n-keep class android.support.v7.widget.ChildHelper$Bucket { *; }\n-keep class android.support.v7.widget.RecyclerView$LayoutManager { *; }\n```\n\n# Demo\n\n![](http://img3.tbcdn.cn/L1/461/1/1b9bfb42009047f75cee08ae741505de2c74ac0a)\n\n[Demo工程](https://github.com/alibaba/vlayout/tree/master/examples)\n\n# FAQ\n\n使用之前或者碰到问题的时候，建议先看看其他[FAQ](docs/VLayoutFAQ.md)。\n\n# 布局属性\n\n每一种layoutHelper都有自己的布局属性来控制布局样式，详情请参考[文档](docs/ATTRIBUTES-ch.md)。\n\n# 贡献代码\n\n在提 Issue 或者 PR 之前，建议先阅读[Contributing Guide](CONTRIBUTING.md)。按照规范提建议。\n\n# 开源许可证\n\nvlayout遵循MIT开源许可证协议。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.8359375,
          "content": "# Attention. This project is not maintained any more !!!\n\n# vlayout\n\n[中文文档](README-ch.md)\n\n## Projects of Tangram\n\n### Android\n\n+ [Tangram-Android](https://github.com/alibaba/Tangram-Android)\n+ [Virtualview-Android](https://github.com/alibaba/Virtualview-Android)\n+ [vlayout](https://github.com/alibaba/vlayout)\n+ [UltraViewPager](https://github.com/alibaba/UltraViewPager)\n\n### iOS\n\n+ [Tangram-iOS](https://github.com/alibaba/Tangram-iOS)\n+ [Virtualview-iOS](https://github.com/alibaba/VirtualView-iOS)\n+ [LazyScrollView](https://github.com/alibaba/lazyscrollview)\n\nProject `vlayout` is a powerful LayoutManager extension for RecyclerView, it provides a group of layouts for RecyclerView. Make it able to handle a complicate situation when grid, list and other layouts in the same recyclerview.\n\n## Design\n\nBy providing a custom LayoutManager to RecyclerView, VirtualLayout is able to layout child views with different style at single view elegantly. The custom LayoutManager manages a serial of layoutHelpers where each one implements the specific layout logic for a certain position range items. By the way, implementing your custom layoutHelper and provding it to the framework is also supported.\n\n## Main Feature\n* Provide default common layout implementation, decouple the View and Layout. Default layout implementations are:\n\t* LinearLayoutHelper: provide linear layout as LinearLayoutManager.\n\t* GridLayoutHelper: provide grid layout as GridLayoutManager, but with more feature.\n\t* FixLayoutHelper: fix the view at certain position of screen, the view does not scroll with whole page.\n\t* ScrollFixLayoutHelper: fix the view at certain position of screen, but the view does not show until it scrolls to it position.\n\t* FloatLayoutHelper: float the view on top of page, user can drag and drop it.\n\t* ColumnLayoutHelper: perform like GridLayoutHelper but layouts all child views in one line.\n\t* SingleLayoutHelper: contain only one child view.\n\t* OnePlusNLayoutHelper: a custom layout with one child view layouted at left and the others at right, you may not need this.\n\t* StickyLayoutHelper: scroll the view when its position is inside the screen, but fix the view at start or end when its position is outside the screen.\n\t* StaggeredGridLayoutHelper: provide waterfall like layout as StaggeredGridLayoutManager.\n* LayoutHelpers provided by default can be generally divided into two categories. One is non-fix LayoutHelper such as LinearLayoutHelper, GridLayoutHelper, etc which means the children of these LayoutHelper will be layouted in the flow of parent container and will be scrolled with the container scrolling. While the other is fix LayoutHelper which means the child of these is always fix in parent container.\n\n\n## Usage\n\n### Import Library\n\nPlease find the latest version in [release notes](https://github.com/alibaba/vlayout/releases). The newest version has been upload to jcenter and MavenCentral, make sure you have added at least one of these repositories. As follow:\n\nFor gradle:\n``` gradle\ncompile ('com.alibaba.android:vlayout:1.2.8@aar') {\n\ttransitive = true\n}\n```\n\nOr in maven:  \npom.xml\n``` xml\n<dependency>\n  <groupId>com.alibaba.android</groupId>\n  <artifactId>vlayout</artifactId>\n  <version>1.2.8</version>\n  <type>aar</type>\n</dependency>\n```\n\n### Initialize LayoutManager\n``` java\nfinal RecyclerView recyclerView = (RecyclerView) findViewById(R.id.recycler_view);\nfinal VirtualLayoutManager layoutManager = new VirtualLayoutManager(this);\n\nrecyclerView.setLayoutManager(layoutManager);\n```\n\n### Initialize recycled pool's size\nProvide a reasonable recycled pool's size to your recyclerView, since the default value may not meet your situation and cause re-create views when scrolling.\n\n``` java\nRecyclerView.RecycledViewPool viewPool = new RecyclerView.RecycledViewPool();\nrecyclerView.setRecycledViewPool(viewPool);\nviewPool.setMaxRecycledViews(0, 10);\n```\n\n**Attention: the demo code above only modify the recycle pool size of item with type = 0, it you has more than one type in your adapter, you should update recycle pool size for each type.**\n\n### Set Adapters\n\n* You can use `DelegateAdapter` for as a root adapter to make combination of your own adapters. Just make it extend ```DelegateAdapter.Adapter``` and overrides ```onCreateLayoutHelper``` method.\n\n``` java\nDelegateAdapter delegateAdapter = new DelegateAdapter(layoutManager, hasConsistItemType);\nrecycler.setAdapter(delegateAdapter);\n\n// Then you can set sub- adapters\n\ndelegateAdapter.setAdapters(adapters);\n\n// or\nCustomAdapter adapter = new CustomAdapter(data, new GridLayoutHelper());\ndelegateAdapter.addAdapter(adapter);\n\n// call notify change when data changes\nadapter.notifyDataSetChanged();\n\n```\n\n**Attention: When `hasConsistItemType = true`, items with same type value in different sub-adapters share the same type, their view would be reused during scroll. When `hasConsistItemType = false`, items with same type value in different sub-adapters do not share the same type internally.**\n\n* The other way to set adapter is extending ```VirtualLayoutAdapter``` and implementing it to make deep combination to your business code.\n\n``` java\npublic class MyAdapter extends VirtualLayoutAdapter {\n   ......\n}\n\nMyAdapter myAdapter = new MyAdapter(layoutManager);\n\n//create layoutHelper list\nList<LayoutHelper> helpers = new LinkedList<>();\nGridLayoutHelper gridLayoutHelper = new GridLayoutHelper(4);\ngridLayoutHelper.setItemCount(25);\nhelpers.add(gridLayoutHelper);\n\nGridLayoutHelper gridLayoutHelper2 = new GridLayoutHelper(2);\ngridLayoutHelper2.setItemCount(25);\nhelpers.add(gridLayoutHelper2);\n\n//set layoutHelper list to adapter\nmyAdapter.setLayoutHelpers(helpers);\n\n//set adapter to recyclerView\nrecycler.setAdapter(myAdapter);\n\n```\n\nIn this way, one thing you should note is that you should call ```setLayoutHelpers``` when the data of Adapter changes.\n\n### Config proguard\n\nAdd following configs in your proguard file if your app is released with proguard.\n\n```\n-keepattributes InnerClasses\n-keep class com.alibaba.android.vlayout.ExposeLinearLayoutManagerEx { *; }\n-keep class android.support.v7.widget.RecyclerView$LayoutParams { *; }\n-keep class android.support.v7.widget.RecyclerView$ViewHolder { *; }\n-keep class android.support.v7.widget.ChildHelper { *; }\n-keep class android.support.v7.widget.ChildHelper$Bucket { *; }\n-keep class android.support.v7.widget.RecyclerView$LayoutManager { *; }\n```\n\n# Demo\n\n![](http://img3.tbcdn.cn/L1/461/1/1b9bfb42009047f75cee08ae741505de2c74ac0a)\n\n[Demo Project](https://github.com/alibaba/vlayout/tree/master/examples)\n\n# FAQ\n\nRead FAQ(In Chinese language only now) before submitting issue: [FAQ](docs/VLayoutFAQ.md)。\n\n# Layout Attributes\n\nEach layoutHelper has a few attributes to control its layout style. See [this](docs/ATTRIBUTES.md) to read more.\n\n# Contributing\n\nBefore you open an issue or create a pull request, please read [Contributing Guide](CONTRIBUTING.md) first.\n\n# LICENSE\n\nVlayout is available under the MIT license.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 2.0283203125,
          "content": "/*\n * MIT License\n *\n * Copyright (c) 2016 Alibaba Group\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }\n        maven { url \"http://oss.jfrog.org/oss-snapshot-local/\" }\n        mavenCentral()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.2'\n        classpath 'com.github.xfumihiro.view-inspector:view-inspector-plugin:0.1.1'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'\n        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'\n    }\n}\n\nallprojects {\n    repositories {\n        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }\n        maven { url \"http://oss.jfrog.org/oss-snapshot-local/\" }\n        jcenter()\n        mavenLocal()\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 2.1357421875,
          "content": "#\n# MIT License\n#\n# Copyright (c) 2016 Alibaba Group\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n#\n\n# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\nGROUP=com.alibaba.android\nARTIFACT=vlayout\nVERSION=1\nVERSION_NAME=1.2.39\nPACKAGING_TYPE=aar\nuseNewSupportLibrary=true\nsystemProp.compileSdkVersion=26\nsystemProp.targetSdkVersion=26\nsystemProp.buildToolsVersion=26.0.2\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "jcenterDeploy.gradle",
          "type": "blob",
          "size": 6.0908203125,
          "content": "/*\n * MIT License\n *\n * Copyright (c) 2017 Alibaba Group\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\napply plugin: 'com.jfrog.bintray'\napply plugin: 'com.jfrog.artifactory'\n\nversion = libraryVersion\n\nif (project.hasProperty('deployVersion')) {\n    version = project.getProperty('deployVersion')\n}\n\nif (project.hasProperty(\"android\")) { // Android libraries\n    task sourcesJar(type: Jar) {\n        classifier = 'sources'\n        from android.sourceSets.main.java.srcDirs\n    }\n\n//    task javadoc(type: Javadoc) {\n//        source = android.sourceSets.main.java.srcDirs\n//        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n\n//        android.libraryVariants.all { variant ->\n//            println variant.javaCompile.classpath.files\n//            if(variant.name == 'release') { //我们只需 release 的 javadoc\n//                task(\"generate${variant.name.capitalize()}Javadoc\", type: Javadoc) {\n//                    // title = ''\n//                    // description = ''\n//                    source = variant.javaCompile.source\n//                    classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())\n//                    options {\n//                        encoding \"utf-8\"\n//                        links \"http://docs.oracle.com/javase/7/docs/api/\"\n//                        linksOffline \"http://d.android.com/reference\", \"${android.sdkDirectory}/docs/reference\"\n//                    }\n//                    exclude '**/BuildConfig.java'\n//                    exclude '**/R.java'\n//                }\n//                task(\"javadoc${variant.name.capitalize()}Jar\", type: Jar, dependsOn: \"generate${variant.name.capitalize()}Javadoc\") {\n//                    classifier = 'javadoc'\n//                    from tasks.getByName(\"generate${variant.name.capitalize()}Javadoc\").destinationDir\n//                }\n//                artifacts {\n//                    archives tasks.getByName(\"javadoc${variant.name.capitalize()}Jar\")\n//                }\n//            }\n//        }\n//\n//    }\n} else { // Java libraries\n    task sourcesJar(type: Jar, dependsOn: classes) {\n        classifier = 'sources'\n        from sourceSets.main.allSource\n    }\n}\n\n//task javadocJar(type: Jar, dependsOn: javadoc) {\n//    classifier = 'javadoc'\n//    from javadoc.destinationDir\n//}\n\nartifacts {\n//    archives javadocJar\n    archives sourcesJar\n}\n\n// Bintray\nProperties properties = new Properties()\nFile localProperties = project.rootProject.file('local.properties')\nif (localProperties.exists()) {\n    properties.load(project.rootProject.file('local.properties').newDataInputStream())\n}\n\nbintray {\n    user = properties.getProperty(\"bintray.user\")\n    key = properties.getProperty(\"bintray.apikey\")\n    if (!user) {\n        user = project.hasProperty('bintrayUser') ? project.getProperty('bintrayUser') : \"\"\n    }\n    if (!key) {\n        key = project.hasProperty('bintrayApikey') ? project.getProperty('bintrayApikey') : \"\"\n    }\n\n    configurations = ['archives']\n    pkg {\n        repo = bintrayRepo\n        name = bintrayName\n        desc = libraryDescription\n        websiteUrl = siteUrl\n        vcsUrl = gitUrl\n        licenses = allLicenses\n        publish = true\n        publicDownloadNumbers = true\n        version {\n            desc = libraryDescription\n            gpg {\n                sign = true //Determines whether to GPG sign the files. The default is false\n                passphrase = properties.getProperty(\"bintray.gpg.password\")\n                if (!passphrase) {\n                    passphrase = project.hasProperty('bintrayGPG') ? project.getProperty('bintrayGPG') : \"\"\n                }\n                //Optional. The passphrase for GPG signing'\n            }\n\n            mavenCentralSync {\n                sync = true\n                user = properties.getProperty('bintray.oss.user')\n                if (!user) {\n                    user = project.hasProperty('bintray.oss.user') ? project.getProperty('bintray.oss.user') : \"\"\n                }\n                password = properties.getProperty('bintray.oss.password')\n                if (!password) {\n                    password = project.hasProperty('bintray.oss.password') ? project.getProperty('bintray.oss.password') : \"\"\n                }\n                close = '1'\n            }\n        }\n    }\n}\n\nartifactory {\n    contextUrl = 'http://oss.jfrog.org/artifactory' //The base Artifactory URL if not overridden by the publisher/resolver\n    resolve {\n        repository {\n            repoKey = 'libs-release'\n        }\n    }\n    publish {\n        repository {\n            repoKey = 'oss-snapshot-local' //The Artifactory repository key to publish to\n            username = bintray.user\n            password = bintray.key\n            maven = true\n        }\n        defaults {\n//            the name is the same with that defined in bintray.configurations\n            publishConfigs('archives')\n        }\n    }\n}\n\nbintrayUpload.onlyIf {\n    !version.endsWith(\"-SNAPSHOT\")\n}\n\nartifactoryPublish.onlyIf {\n    version.endsWith(\"-SNAPSHOT\")\n}\n\ntask deploy(dependsOn: ['install', 'bintrayUpload', 'artifactoryPublish']) << {\n    println \"deploy ....\"\n}"
        },
        {
          "name": "jcenterInstall.gradle",
          "type": "blob",
          "size": 2.1826171875,
          "content": "/*\n * MIT License\n *\n * Copyright (c) 2017 Alibaba Group\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\napply plugin: 'com.github.dcendents.android-maven'\n\ngroup = GROUP\n\ninstall {\n    repositories.mavenInstaller {\n        // This generates POM.xml with proper parameters\n        pom {\n            project {\n                packaging 'aar'\n                groupId publishedGroupId\n                artifactId artifact\n\n                // Add your description here\n                name libraryName\n                description libraryDescription\n                url siteUrl\n\n                // Set your license\n                licenses {\n                    license {\n                        name licenseName\n                        url licenseUrl\n                    }\n                }\n                developers {\n                    developer {\n                        id developerId\n                        name developerName\n                        email developerEmail\n                    }\n                }\n                scm {\n                    connection gitUrl\n                    developerConnection gitUrl\n                    url siteUrl\n\n                }\n            }\n        }\n    }\n}"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 1.1484375,
          "content": "/*\n * MIT License\n *\n * Copyright (c) 2016 Alibaba Group\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\ninclude ':vlayout'\ninclude ':examples'\n"
        },
        {
          "name": "vlayout",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}