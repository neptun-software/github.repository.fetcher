{
  "metadata": {
    "timestamp": 1736708858126,
    "page": 61,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "prestodb/presto",
      "stars": 16151,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.5244140625,
          "content": "---\nAccessModifierOffset: -1\nAlignAfterOpenBracket: AlwaysBreak\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlinesLeft: true\nAlignOperands:   false\nAlignTrailingComments: false\nAllowAllParametersOfDeclarationOnNextLine: false\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortIfStatementsOnASingleLine: false\nAllowShortLoopsOnASingleLine: false\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nBreakAfterJavaFieldAnnotations: false\nBreakStringLiterals: false\nColumnLimit:     80\nCommentPragmas:  '^ IWYU pragma:'\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: false\nDisableFormat:   false\nForEachMacros:   [ FOR_EACH, FOR_EACH_ENUMERATE, FOR_EACH_KV, FOR_EACH_R, FOR_EACH_RANGE, ]\nIncludeCategories:\n  - Regex:           '^<.*\\.h(pp)?>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIndentCaseLabels: true\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Left\nReflowComments:  true\nSortIncludes:    true\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Cpp11\nTabWidth:        8\nUseTab:          Never\n...\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.029296875,
          "content": "dist/ linguist-generated=true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.009765625,
          "content": "*.iml\n*.ipr\n*.iws\ntarget\n/var\n/*/var/\n/presto-product-tests/**/var/\npom.xml.versionsBackup\ndependency-reduced-pom.xml\ntest-output/\ntest-reports/\n/atlassian-ide-plugin.xml\n.idea/*\n*/.idea\n!.idea/icon.png\n.run\n.vscode\n.DS_Store\n.classpath\n.settings\n.project\ntemp-testng-customsuite.xml\ntest-output\n.externalToolBuilders\n*~\nbenchmark_outputs\n*.pyc\n*.class\n.checkstyle\n.mvn/timing.properties\n.editorconfig\nnode_modules\npresto-docs-venv/\n\n#==============================================================================#\n# presto-native-execution\n#==============================================================================#\n_build/\ncmake-build-*/\n*.swp\n*~\na.out\npresto-native-execution/deps-download\npresto-native-execution/deps-install\n\n# Compiled Object files\n*.slo\n*.lo\n*.o\n*.cuo\n\n# Compiled Dynamic libraries\n*.so\n*.dylib\n\n# Compiled Static libraries\n*.lai\n*.la\n*.a\n\n# Compiled protocol buffers\n*.pb.h\n*.pb.cc\n*_pb2.py\n\n# Compiled executables used for docker build\n/docker/presto-cli-*-executable.jar\n/docker/presto-server-*.tar.gz\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1328125,
          "content": "[submodule \"presto-native-execution/velox\"]\n\tpath = presto-native-execution/velox\n\turl = https://github.com/facebookincubator/velox.git\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.21484375,
          "content": "<akpall@fb.com> <iosakshay@gmail.com>\n<atavory@fb.com> <atavory@gmail.com>\n<andriirosa@fb.com> <andriyrosa@gmail.com>\n<hluo@twitter.com> <luohao@users.noreply.github.com>\n<grzegorz@starburstdata.com> <kokosing@users.noreply.github.com>\n<karol.sobczak@karolsobczak.com> <napewnotrafi@gmail.com>\n<ke1024@fb.com> <50636602+kewang1024@users.noreply.github.com>\n<piotr.findeisen@gmail.com> <findepi@users.noreply.github.com>\n<rschlussel@fb.com> <34256034+rschlussel2@users.noreply.github.com>\n<rschlussel@fb.com> <34256034+rschlussel@users.noreply.github.com>\n<rongrong@fb.com> <rongrong100@gmail.com>\n<shengpei@fb.com> <szhang29@ncsu.edu>\n<tdm@fb.com> <tim@timdmeehan.com>\n<vgajjala@fb.com> <varungajjala@users.noreply.github.com>\n<vzhang@fb.com> <6372365+viczhang861@users.noreply.github.com>\n<vzhang@fb.com> <picrinite@users.noreply.github.com>\n<wxie@fb.com> <wenlei.xie@gmail.com>\n<wxie@fb.com> <wenleix@users.noreply.github.com>\n<heyi@fb.com> <hellium01@users.noreply.github.com>\n<zluo@twitter.com> <rooservelt.luo@gmail.com>\n<ccayiroglu@fb.com> <cayiroglu@gmail.com>\n<yingsu@fb.com> <33299678+yingsu00@users.noreply.github.com>\n<ggreg@fb.com> <ggregl@gmail.com>\n<rongrong@fb.com> <rongrong100@gmail.com>\n<aweisberg@fb.com> <ariel@weisberg.ws>\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "ARCHITECTURE.md",
          "type": "blob",
          "size": 5.4443359375,
          "content": "# PrestoDB: Mission and Architecture\n\n## Introduction\n\nPrestoDB is an open-source distributed SQL query engine designed for fast analytic queries against data sources of all sizes, ranging from gigabytes to petabytes. It was originally developed by Facebook and later made available to the broader community. It is governed by the Presto Foundation, a member of the Linux Foundation.\n\n## Mission\n\n### For users\n\nThe primary mission of PrestoDB is to enable efficient and high-speed data processing for analytics and batch at scale. It aims to provide a single, unified query system that can access and process data stored in various formats and storage systems. Key aspects of its mission include:\n\n1. **High Performance:** Presto aims to be a single unified query engine suitable for low latency interactive workloads, adhoc and exploratory analytics, and large scale batch workloads. To achieve this, Presto works to achieve vertical integration over modular portions of the stack.\n2. **Scalability:** Presto is used to access large amounts of data from data lakes. As such, it aims for high degrees of scalability.\n3. **Connectivity and Integration:** Presto is designed to be flexible and adaptable to changes in infrastructure. This includes a highly customizable plugin infrastructure, including pluggable storage connectors.\n4. **User-Friendly:** Presto strives to be simple enough for a user to spin up and quickly test out, using familiar ANSI style SQL syntax, sensible default values and an optimizer that produces efficient query plans.\n\n### For developers\n\nPresto aims to accomplish the above goals for users by creating a broad, powerful, and collaborative open source community that strives for high standards in database engineering and design.\n\n1. **Open Source:** Develop and maintain an open-source project, encouraging community contributions and collaboration.\n2. **Broad and open community:** Foster a large and active community to drive the project’s adoption and direction.  We believe that Presto should survive any single individual or company, and strive to make the project as diverse as possible among committers and their respective employers.\n3. **Composability**: Presto is designed for lakes and lakehouses. As such, it is engineered to fit cohesively in an ecosystem of other tools, and strives to integrate with industry standard specifications and libraries that help accomplish the user goals above.\n4. **Coding excellence**: Presto strives to maintain a high bar for contributions through good design, good abstractions, rigorous tests, and quality documentation.\n\n## Presto Community\n\nThe Presto project believes that, while excellence in the code is table stakes for the project, of even greater importance is *how* the project develops the code.  For more information, see [Presto Community](https://github.com/prestodb/presto/blob/master/CONTRIBUTING.md#presto-community).\n\n## Presto Technical Architecture\n\nPresto follows a distributed system model with a coordinator and multiple worker nodes. [See Presto Concepts for more information.](https://prestodb.io/docs/current/overview/concepts.html#server-types)\n\nLong term initiatives in Presto [have corresponding project boards](https://github.com/prestodb/presto/projects?query=is%3Aopen). Current progress can be roughly understood by looking at the project boards.\n\n## Long Term Vision\n\n### Vertical integration in data lakes\n\nPresto aims to be the top performing system for data lakes. The top priority for the project is to move fully onto a native evaluation engine, particularly [Velox](https://velox-lib.io/), with the same expectations outlined in the vision for users, emphasizing user-friendliness and connectivity.\n\nMotivations for this effort are numerous:\n\n1. It is expected to be too difficult to achieve data warehouse performance using a Java evaluation engine. Some optimizations, such as vectorized execution in particular, require flexibility and precision which is difficult to achieve in Java.\n2. The Presto community delegates evaluation to a different community to focus our efforts on improved usability. We believe that shared components can offer network benefits that closed systems may find difficult to achieve, and such a division of efforts will result in a faster and more robust system overall.\n\n### State-of-the-art Optimizer\n\nPresto’s optimizer can learn from long established techniques in more mature systems to provide better plans for users. We are working on bringing these mature optimization techniques into Presto.\n\n### Modularity\n\nOriginally, the way that Presto interacted with other systems was unique and proprietary.  Today, libraries like Velox and DataFusion are standardizing execution, Ibis is standardizing data frames, Substrait is standardizing an intermediate representation of plans, and Arrow is standardizing data exchange. These standardizations point to a future that emphasizes interoperability with other data infrastructure. We believe that if Presto does not adapt to this future, it could be left behind.  \n\nIn principle and design, we favor the direction of interoperability. We are first movers in this area with our early usage of Velox. We believe that interoperability can be both a differentiator for the project, and allow the project to focus on features that make users happy.\n\n### Reliability\n\nPresto is used at some of the largest data lakes in the world. To support this mission, it must be extremely reliable. This means that investments in testing infrastructure must always be made when required.\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 6.0361328125,
          "content": "#####################################################################\n### Presto code owners                                            ###\n#####################################################################\n\n#####################################################################\n# Fallback to committers group for areas that do not have active code owners\n/** @prestodb/committers\n\n#####################################################################\n# The below projects do not have a dedicated code owner for the entire module\n/presto-accumulo @prestodb/committers\n/presto-analyzer @prestodb/committers\n/presto-atop @prestodb/committers\n/presto-base-jdbc @prestodb/committers\n/presto-benchmark @prestodb/committers\n/presto-benchmark-driver @prestodb/committers\n/presto-benchmark-runner @prestodb/committers\n/presto-benchto-benchmarks @prestodb/committers\n/presto-bigquery @prestodb/committers\n/presto-blackhole @prestodb/committers\n/presto-bytecode @prestodb/committers\n/presto-cache @prestodb/committers\n/presto-cassandra @prestodb/committers\n/presto-cli @prestodb/committers\n/presto-clickhouse @prestodb/committers\n/presto-client @prestodb/committers\n/presto-cluster-ttl-providers @prestodb/committers\n/presto-common @prestodb/committers\n/presto-delta @prestodb/committers\n/presto-druid @prestodb/committers\n/presto-elasticsearch @prestodb/committers\n/presto-example-http @prestodb/committers\n/presto-expressions @prestodb/committers\n/presto-function-namespace-managers @prestodb/committers\n/presto-geospatial-toolkit @prestodb/committers\n/presto-google-sheets @prestodb/committers\n/presto-grpc-api @prestodb/committers\n/presto-grpc-testing-udf-server @prestodb/committers\n/presto-hana @prestodb/committers\n/presto-hive @prestodb/committers\n/presto-hive-common @prestodb/committers\n/presto-hive-function-namespace @prestodb/committers\n/presto-hive-hadoop2 @prestodb/committers\n/presto-hive-metastore @prestodb/committers\n/presto-i18n-functions @prestodb/committers\n/presto-jdbc @prestodb/committers\n/presto-jmx @prestodb/committers\n/presto-kafka @prestodb/committers\n/presto-kudu @prestodb/committers\n/presto-lark-sheets @prestodb/committers\n/presto-local-file @prestodb/committers\n/presto-main @prestodb/committers\n/presto-matching @prestodb/committers\n/presto-memory @prestodb/committers\n/presto-memory-context @prestodb/committers\n/presto-ml @prestodb/committers\n/presto-mongodb @prestodb/committers\n/presto-mysql @prestodb/committers\n/presto-node-ttl-fetchers @prestodb/committers\n/presto-open-telemetry @prestodb/committers\n/presto-oracle @prestodb/committers\n/presto-parser @prestodb/committers\n/presto-password-authenticators @prestodb/committers\n/presto-pinot @prestodb/committers\n/presto-pinot-toolkit @prestodb/committers\n/presto-plugin-toolkit @prestodb/committers\n/presto-postgresql @prestodb/committers\n/presto-product-tests @prestodb/committers\n/presto-prometheus @prestodb/committers\n/presto-proxy @prestodb/committers\n/presto-rcfile @prestodb/committers\n/presto-record-decoder @prestodb/committers\n/presto-redis @prestodb/committers\n/presto-redshift @prestodb/committers\n/presto-resource-group-managers @prestodb/committers\n/presto-router @prestodb/committers\n/presto-server @prestodb/committers\n/presto-session-property-managers @prestodb/committers\n/presto-singlestore @prestodb/committers\n/presto-spi @prestodb/committers\n/presto-sqlserver @prestodb/committers\n/presto-teradata-functions @prestodb/committers\n/presto-test-coverage @prestodb/committers\n/presto-testing-docker @prestodb/committers\n/presto-testing-server-launcher @prestodb/committers\n/presto-testng-services @prestodb/committers\n/presto-thrift-api @prestodb/committers\n/presto-thrift-connector @prestodb/committers\n/presto-thrift-spec @prestodb/committers\n/presto-thrift-testing-server @prestodb/committers\n/presto-thrift-testing-udf-server @prestodb/committers\n/presto-tpcds @prestodb/committers\n/presto-tpch @prestodb/committers\n/presto-verifier @prestodb/committers\n\n# TSC may approve changes to this list\nCODEOWNERS @prestodb/team-tsc\n\n#####################################################################\n# Presto core\n\n# Presto analyzer and optimizer\n/presto-main/src/*/java/com/facebook/presto/sql @jaystarshot @feilong-liu @ClarenceThreepwood @prestodb/committers\n\n# Presto cost based optimizer framework\n/presto-main/src/*/java/com/facebook/presto/cost @jaystarshot @feilong-liu @ClarenceThreepwood @prestodb/committers\n\n# Testing module\n# Note: all code owners in Presto core should be included here as well\n/presto-tests @jaystarshot @feilong-liu @elharo @ClarenceThreepwood @prestodb/committers\n\n#####################################################################\n# Prestissimo module\n/presto-native-execution @prestodb/team-velox\n\n#####################################################################\n# Presto on Spark module\n/presto-spark* @shrinidhijoshi @prestodb/committers\n\n#####################################################################\n# Presto connectors and plugins\n\n# Hudi connector\n/presto-hudi @vinothchandar @7c00 @prestodb/committers\n\n# Iceberg connector\n/presto-iceberg @hantangwangd @ZacBlanco @prestodb/committers\n\n# Ranger Hive plugin\n/presto-hive/**/com/facebook/presto/hive/security/ranger @agrawalreetika @prestodb/committers\n\n# Redis history based optimizer plugin\n/redis-hbo-provider @jaystarshot @prestodb/committers\n\n#####################################################################\n# Presto modules and libraries\n\n# Parquet reader module\n/presto-parquet @shangxinli @prestodb/committers\n\n# ORC reader module\n/presto-orc @sdruzkin @prestodb/committers\n/presto-hive/src/*/java/com/facebook/presto/hive/orc @sdruzkin @prestodb/committers\n\n# Presto common module\n/presto-common @elharo @prestodb/committers\n\n#####################################################################\n# Presto Console UI\n/presto-ui @yhwang @prestodb/committers\n\n#####################################################################\n# Presto documentation\n/presto-docs @steveburnett @elharo @prestodb/committers\n/**/*.md @steveburnett @prestodb/committers\n/presto-docs/src/**/connector/iceberg.rst @steveburnett @elharo @hantangwangd @ZacBlanco @prestodb/committers\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1328125,
          "content": "# Code of Conduct\nPlease refer to our [Presto Community Code of Conduct](https://github.com/prestodb/tsc/blob/master/CODE_OF_CONDUCT.md)"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 31.3203125,
          "content": "# Contributing to Presto\n\nThanks for your interest in Presto. Our goal is to build a fast, scalable, and reliable distributed SQL query engine for running low latency interactive and batch analytic queries against data sources of all sizes ranging from gigabytes to petabytes.\n\n# What Would You Like to Do?\n\n| Area             | Information                                                                                                                                                                                                                                                                                                                                    |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| Getting Started  | 1. [Build Presto](README.md#user-content-building-presto) <br/>2. Look for [good first issue](https://github.com/prestodb/presto/labels/good%20first%20issue) tickets. <br/> 3. Reference [project boards](https://github.com/prestodb/presto/projects?query=is%3Aopen) for open work.                                                         |\n| Report Bug       | To report a bug, visit Presto's [open issues](https://github.com/prestodb/presto/issues).                                                                                                                                                                                                                                                      |\n| Contributions    | Please read the [contributions](#contributions) section to learn about how you can contribute to Presto, including the submission process, minimum expectations, and guidelines for designing your code.  Ready to open a pull request? Be sure to review the [Pull Request guidelines](#pullrequests).                                        |\n| Contributor License Agreement (\"CLA\") | First-time contributors must sign a CLA. For more information see [Contributor License Agreement (\"CLA\")](#cla).                                                                                                                                                                                                                               |\n| Supporting Users | Reply to questions on the [Slack channel](https://join.slack.com/t/prestodb/shared_invite/enQtNTQ3NjU2MTYyNDA2LTYyOTg3MzUyMWE1YTI3Njc5YjgxZjNiYTgxODAzYjI5YWMwYWE0MTZjYWFhNGMwNjczYjI3N2JhM2ExMGJlMWM), check Presto's [open issues](https://github.com/prestodb/presto/issues) for user questions, or help with [code reviews](#codereviews). \n| Need help?       | For community support, [ask for help in Slack](https://join.slack.com/t/prestodb/shared_invite/enQtNTQ3NjU2MTYyNDA2LTYyOTg3MzUyMWE1YTI3Njc5YjgxZjNiYTgxODAzYjI5YWMwYWE0MTZjYWFhNGMwNjczYjI3N2JhM2ExMGJlMWM).                                                                                                                                   |\n\n## <a id=\"requirements\">Requirements</a>\n\n## Presto Community\n\nThe Presto community values:\n\n* Politeness and professionalism in all public forums such as GitHub, Slack, and mailing lists.\n* Helping those who come to the project with questions, issues, or code.\n* Collaboration and teamwork.\n\nWe strive to be a welcoming and inclusive community. We believe that a diverse community is a stronger community, and we welcome all who wish to contribute to the project.\n\n## Mission and Architecture\n\nSee [PrestoDB: Mission and Architecture](https://github.com/prestodb/presto/blob/master/ARCHITECTURE.md).\n\n## Getting Started\n\nRead Presto's [open issues](https://github.com/prestodb/presto/issues). Tag issues that would make a good first pull request for new contributors with a [good first issue](https://github.com/prestodb/presto/labels/good%20first%20issue) tag. An easy way to start helping the project is to [open an issue](https://github.com/prestodb/presto/issues/new/choose). Issues can include bugs, new features, or outdated documentation. \nFor community support, [ask for help in Slack](https://join.slack.com/t/prestodb/shared_invite/enQtNTQ3NjU2MTYyNDA2LTYyOTg3MzUyMWE1YTI3Njc5YjgxZjNiYTgxODAzYjI5YWMwYWE0MTZjYWFhNGMwNjczYjI3N2JhM2ExMGJlMWM).\n\n## <a id=contributions>Contributions</a>\n\nPresto welcomes contributions from everyone.\n\nContributions to Presto should be made in the form of GitHub pull request (PR) submissions and reviews.\n\nFor a PR to be eligible to be merged, a committer for the appropriate code must review and approve the code. Once approved by a committer, the PR may be merged by anyone.\n\nPull request reviews are encouraged for anyone in the community who would like to contribute to Presto, and are\nexpected from contributors and committers in at least equal proportion to their code contributions.\n\nContributions should have an associated GitHub issue.\n* Large changes should have an [RFC](https://github.com/prestodb/rfcs). The [RFC](https://github.com/prestodb/rfcs) should be reviewed before patches are submitted.\n* Medium size changes should have an issue. Work from RFCs can be broken down into smaller issues, and those smaller issues should link to the RFC.\n* Smaller changes, such as minor bug fixes and code formatting, may not need an issue and can submit a PR without one.\n* New SQL functions should follow the [Presto function guidelines](https://github.com/prestodb/presto/blob/master/FUNCTIONS.md). \n\n## Minimum Expectations for Contributing to Presto\nTo commit code, you should:\n* Work through the [Getting Started](https://prestodb.io/getting-started/) materials\n* [Read and agree to the Code of Conduct](https://github.com/prestodb/tsc/blob/master/CODE_OF_CONDUCT.md)\n* [Sign the Presto CLA](https://github.com/prestodb/presto/blob/master/CONTRIBUTING.md#contributor-license-agreement-cla)\n* [Join the Presto Slack](https://communityinviter.com/apps/prestodb/prestodb)\n* [File an issue](https://github.com/prestodb/presto/issues/new/choose)\n* Self-verify new code matches [codestyle](#code-style) for Presto\n* Follow the [commit standards](#commit-standards)\n* Add or modify existing tests related to code changes being submitted\n* Run and ensure that local tests pass before submitting a merge request\n\n## Designing Your Code\n* Consider your code through 3 axes\n    1. Code Quality and Maintainability, for example:\n        1. Code Style\n           * Does the code in this PR follow existing coding conventions as outlined in this doc and elsewhere in the code?\n        1. Maintainability\n           * Is the feature added in a hacky way? If we did everything this way, would the\n             code base become hard to use?\n           * Is the feature implemented in a clean way with appropriate interfaces that fits\n             in with the rest of Presto's design and keeps our code base maintainable?\n    1. Code Safety\n        1. Adequate testing\n        1. Feature flags to enable or disable features that might be risky\n        1. Thread safe\n        1. No data structures that can grow without bounds; Memory usage is accounted for\n        1. Not introducing expensive calls in a performance sensitive area\n    1. User friendliness\n        1. Config options have names and descriptions that can be understood by someone configuring Presto\n        1. All new language features, new functions, session and config properties, and major features have documentation added\n        1. When adding a new method to [Plugin.java](https://github.com/prestodb/presto/blob/master/presto-spi/src/main/java/com/facebook/presto/spi/Plugin.java), include documentation for the new method in the [Presto Developer Guide](https://prestodb.io/docs/current/develop.html). \n        1. Release notes following the [Release Note Guidelines](https://github.com/prestodb/presto/wiki/Release-Notes-Guidelines) are added for user visible changes\n* For large features, discuss your design with relevant code owners before you start implementing it.\n\n\n## Code Style\n\nWe recommend you use IntelliJ as your IDE. The code style template for the project can be found in the [codestyle](https://github.com/airlift/codestyle) repository along with our general programming and Java guidelines. In addition to those you should also adhere to the following:\n\n* **Naming**\n    * Avoid abbreviations, for example, `positionCount` instead of `positionCnt`\n    * Line width and spacing\n      * Lines should be no more than 180 chars. Intellij “Reformat code” does NOT enforce the line width, so you must adjust it yourself.\n      * Function declarations greater than 180 characters shall be broken down into multiple lines, one argument or parameter per line. A good example is like:\n\n      ```java\n          public ParquetPageSource(\n                  ParquetReader parquetReader,\n                  List<Type> types,\n                  List<Optional<Field>> fields,\n                  List<String> columnNames,\n                  RuntimeStats runtimeStats)\n      \n      ```\n\n        * Do not put the first parameter on the same line as the function name, or move the parentheses to different lines. Bad example:\n\n      ```java\n          public ParquetPageSource(ParquetReader parquetReader,\n                  List<Type> types,\n                  List<Optional<Field>> fields,\n                  List<String> columnNames,\n                  RuntimeStats runtimeStats)\n      \n      ```\n\n        * Group lines of logical units together, and use a single empty line to space out the sections.\n\n      ```java\n      public ParquetPageSource(\n                ParquetReader parquetReader,\n                List<Type> types,\n                List<Optional<Field>> fields,\n                List<Boolean> rowIndexLocations,\n                List<String> columnNames,\n                RuntimeStats runtimeStats)\n        {\n            this.parquetReader = requireNonNull(parquetReader, \"parquetReader is null\");\n            this.types = ImmutableList.copyOf(requireNonNull(types, \"types is null\"));\n            this.fields = ImmutableList.copyOf(requireNonNull(fields, \"fields is null\"));\n            this.rowIndexLocations = requireNonNull(rowIndexLocations, \"rowIndexLocations is null\");\n            this.columnNames = ImmutableList.copyOf(requireNonNull(columnNames, \"columnNames is null\"));\n            this.runtimeStats = requireNonNull(runtimeStats, \"runtimeStats is null\");\n      \n            checkArgument(\n                    types.size() == rowIndexLocations.size() && types.size() == fields.size(),\n                    \"types, rowIndexLocations, and fields must correspond one-to-one-to-one\");\n      \n            Streams.forEachPair(\n                    rowIndexLocations.stream(),\n                    fields.stream(),\n                    (isIndexColumn, field) -> checkArgument(\n                            !(isIndexColumn && field.isPresent()),\n                            \"Field info for row index column must be empty Optional\"));\n        }\n      ```\n\n* **Ordering of class members**\n    * Fields are in front of methods.\n    * Group and order the fields and methods in the order of their access levels in descending order:\n        1. public\n        1. protected\n        1. package private\n        1. private\n    * Group and order the fields in descending order:\n        1. static final\n        1. final\n        1. normal\n    * Order the methods with the same access level in the order they’re called.\n* **Encourage proper encapsulation**\n    * Do not use public class fields for non-constants. Use less visible access levels as much as possible. Exceptions may apply for performance critical paths. In that case, discuss your design first with relevant code owners.\n    * Make a method access level as low as possible\n    * If a class is only used by one caller and the usage is local, consider making it a nested class.\n* **Immutable and thread safe classes**\n    * Whenever possible, class fields should be final.\n    * When it's not possible, ensure that accesses to the non-final fields are thread safe by whatever methods are appropriate for the circumstance (concurrent collections, synchronized access, etc.) if they are in a code path that is multi-threaded.\n\n* **Static imports**\n  For example, in your code, do not use something like\n\n    ```java\n    String.format(\"%s\", rule.getClass().getSimpleName())\n    ```\n\n  * Instead, static import this method and use “format()”\n\n  ```java\n  import static java.lang.String.format;\n  ...\n  format(\"%s\", rule.getClass().getSimpleName()) \n  ```\n    \n  * Similarly, do NOT use\n    \n  ```java\n  time0Bto100KB.add(nanos, TimeUnit.NANOSECONDS);\n  ```\n    \n  * But static import it and use NANOSECONDS in the code.\n    \n  ```java\n  import static java.util.concurrent.TimeUnit.NANOSECONDS;\n  ...\n  time0Bto100KB.add(nanos, NANOSECONDS);\n  ```\n    \n  * Prefer Immutable collections in Guava when possible. For example, instead of using\n    \n  ```java\n  expressions.stream()\n             .map(OriginalExpressionUtils::castToExpression)\n             .collect(Collectors.toList())\n  ```\n    \n  * Use ```toImmutableList()```\n    \n  ```java\n  import com.google.common.collect.ImmutableList;\n  ...\n  import static com.google.common.collect.ImmutableList.toImmutableList;\n  ...\n  expressions.stream()\n             .map(OriginalExpressionUtils::castToExpression)\n             .collect(toImmutableList())\n  ```\n\n* **Method argument validation**\n    * Usually needed for constructors\n\n      ```java\n      protected SqlScalarFunction(Signature signature)\n      {\n          this.signature = requireNonNull(signature, \"signature is null\");\n          checkArgument(signature.getKind() == SCALAR, \"function kind must be SCALAR\");\n      }\n      ```\n\n* **Use proper annotations**\n    * @Nullable\n    * @VisibleForTesting\n    * @Override\n    * @Experimental\n* **Use of Optional instead of bare metal nullable objects when appropriate**\n    * public method parameters\n    * Performance NON-CRITICAL path\n    * Creating Optional objects is not free. If the function call is in a critical loop, do NOT use Optional parameters.\n* **Alphabetize**\n    * Sections in documentation\n    * Methods\n    * Variables\n    * Sections\n* **Comment styles**\n    * Add the “/** */” (Javadoc) style comments to all interface methods, with explanation of the parameters and returns. For example:\n\n      ```java\n          interface Transformation<T, R>\n          {\n              /**\n               * Processes input elements and returns current transformation state.\n               *\n               * @param elementOptional an element to be transformed. Will be empty\n               * when there are no more elements. In such case transformation should\n               * finish processing and flush any remaining data.\n               * @return the current transformation state, optionally bearing a result\n               * @see TransformationState#needsMoreData()\n               * @see TransformationState#blocked(ListenableFuture)\n               * @see TransformationState#yield()\n               * @see TransformationState#ofResult(Object)\n               * @see TransformationState#ofResult(Object, boolean)\n               * @see TransformationState#finished()\n               */\n              TransformationState<R> process(Optional<T> elementOptional);\n          }\n      ```\n\n    * Add the “/** */” style comments to important or difficult public methods, with explanation of the parameters and returns.\n    * Within the method body, use “//” style comments on separate lines for difficult parts.\n    * Use “//” style comments for class fields if it helps to clarify the code. Can be on the same line or separate lines in front.\n* **Code succinctness**\n    * Inline function calls when appropriate. For example, if a function is only called once, we don’t need to create a variable for it.\n    * Use reference operator in lambda expressions where possible. For example, instead of doing this:\n\n      ```java\n      Iterables.getOnlyElement(argumentSets).stream()\n      .map((rowExpression) -> OriginalExpressionUtils.castToExpression(rowExpression))\n      ```\n      Do this:\n      ```java\n      Iterables.getOnlyElement(argumentSets).stream()\n      .map(OriginalExpressionUtils::castToExpression)\n      ```\n\n* When appropriate use Java 8 Stream API\n* Categorize errors when throwing an exception\n* **Tests**\n    * Avoid adding `Thread.sleep` in tests--these can fail due to environmental conditions, such as garbage collection or noisy neighbors in the CI environment.\n    * Do not use random values in tests. All tests should be reproducible.\n    * Be careful when storing test data in fields because doing so is\n      only appropriate for constant, immutable values. Presto tests\n      run with TestNG which, unlike JUnit, does not create a new object for\n      each test. Shared instance fields can make tests tightly coupled,\n      order dependent, and flaky. If you do use instance fields, \n      reinitialize them before each test in a `@BeforeMethod` method,\n      and annotate the class with `@Test(singleThreaded = true)`.\n\n\n## Commit Standards\n* ### Commit Size\n    * Recommended lines of code should be no more than +1000 lines, and should focus on one single major topic.\\\n      If your commit is more than 1000 lines, consider breaking it down into multiple commits, each handling a specific small topic.\n* ### Commit Message Style\n    * **Separate subject from body with a blank line**\n    * **Subject**\n        * Limit the subject line to 10 words or 50 characters\n        * If you cannot make the subject short, you may be committing too many changes at once\n        * Capitalize the subject line\n        * Do not end the subject line with a period\n        * Use the imperative mood in the subject line\n    * **Body**\n        * Wrap the body at 72 characters\n        * Use the body to explain what and why versus how\n        * Use the indicative mood in the body\\\n          For example, “If applied, this commit will ___________”\n        * Communicate only context (why) for the commit in the subject line\n        * Use the body for What and Why\n          * If your commit is complex or dense, share some of the How context\n        * Assume someone may need to revert your change during an emergency\n    * **Content**\n        * **Aim for smaller commits for easier review and simpler code maintenance**\n        * All bug fixes and new features must have associated tests\n        * Commits should pass tests on their own, not be dependent on other commits\n        * The following is recommended:\n            * Describe why a change is being made.\n            * How does it address the issue?\n            * What effects does the patch have?\n            * Do not assume the reviewer understands what the original problem was.\n            * Do not assume the code is self-evident or self-documenting.\n            * Read the commit message to see if it hints at improved code structure.\n            * The first commit line is the most important.\n            * Describe any limitations of the current code.\n            * Do not include patch set-specific comments.\n\nDetails for each point and good commit message examples can be found on https://wiki.openstack.org/wiki/GitCommitMessages#Information_in_commit_messages\n\n* **Metadata**\n    * If the commit was to solve a Github issue, refer to it at the end of a commit message in a rfc822 header line format.\\\n      For example,\\\n      Resolves: #1234\\\n      See also: #1235, #1236\n\n* **Backport Commits**\n    * Must refer to original commit ID (refer to the PR link in the PR message) or link and author in the commit message\n      ```bash\n      Fix OOM caused by foo in bar\n      \n      Foo was pack ratting ByteBuffers causing OOM.\n      \n      Cherry-pick of https://github.com/prestodb/presto/pull/18424/commits/30e36dae0cdb9debd991931370b86301cd17e261 \n      Co-authored-by: Foo Bar <foo@bar.com>\n      ```\n    * Try to follow the original PR and commits structure. Do not mingle multiple original commits or reorder them.\n    * Do not add big modifications in the same backported commit, unless it’s the minimum required to resolve conflicts.\n    * If needed, add new separate commits following the backport commit for necessary changes.\n\n\n\n## Committers\n\nPresto has two levels of committers: module committers and project committers.  Presto committers are defined as [code owners](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners) and documented in the project's [`CODEOWNERS`](CODEOWNERS) file, and are either directly referenced in the file, or through a Github team. Each line in the `CODEOWNERS` file defines a module or submodule that the committer or team has the rights to approve.  New modules and submodules for [`CODEOWNERS`](CODEOWNERS)  may be added as needed.\n\n### Baseline expectations from committers\n\nBoth module and project committers must demonstrate technical mastery of at least their core areas. They must also show evidence that they are aligned with the project’s community and growth, including the goals outlined in [PrestoDB: Mission and Architecture](ARCHITECTURE.md), and demonstrate kindness and professionalism, help others in the project, and work collaboratively as a team.\n\n### Module committers\n#### What is a module committer?\n\nA module committer is a committer who has an entry associated with a module or folder in the project’s [`CODEOWNERS`](CODEOWNERS)  file.\n\nSee [`CODEOWNERS`](CODEOWNERS) for modules, connectors, and libraries that lack active module committership. If you have interest in contributing to one of these, work toward becoming a committer for that area.\n\n#### Expectations of a module committer\n\nModule committers have demonstrated mastery in one particular area of the project.  Some examples include:\n\n* A connector or plugin;\n* A part of the Presto codebase, such as the optimizer;\n* An external component, such as the Java client, or UI.\n\nIn addition to technical mastery, they have demonstrated the values of the project through code reviews, design reviews, or responses to questions.  Examples should include many of the following:\n\n* The applicant is known to frequently review pull requests corresponding to the module they are applying for.\n* The applicant helps to maintain the module they are applying for when appropriate, such as fixing test cases, adding documentation, fixing bugs, and mentoring others.\n* The applicant is known to answer questions on Slack periodically.\n* The applicant has provided high quality feedback on Github issues and RFCs.\n\n### Project committers\n\n#### What is a project committer?\n\nA project committer is a committer who has access to approve code across the whole project by membership in the [committers](https://github.com/orgs/prestodb/teams/committers) Github team.\n\n#### Expectations of a project committer\n\nIn addition to demonstrating mastery of at least one area of the codebase by becoming a module committer, they have also demonstrated the following:\n\n* They have contributed at least one non-trivial change to the project outside of their core area;\n* They exercise great judgment (including deferring to others when appropriate);\n* They have experience with reviewing code and making code changes outside of their core area of expertise;\n* They set a high bar for their own contributions and those of others during code reviews, including avoiding hacks and temporary workarounds;\n* They go above and beyond a module committer in helping maintain the project by regularly reviewing code outside of their area of expertise, or helping users of the project in public channels such as Slack, GitHub, or helping review designs outside of their area of expertise such as providing guidance on Github Issues or RFCs.\n\nExamples should include many of the following:\n\n* The applicant is known to frequently review pull requests outside of the module they maintain.\n* The applicant helps to maintain the project, such as by fixing test cases, adding documentation, fixing bugs, and mentoring others.\n* The applicant is known to answer questions on Slack periodically.\n* The applicant has provided high quality feedback on Github issues and RFCs outside of the module they maintain.\n\n### Voting for committers\n\nNew project and module committers are approved by majority vote of the TSC ([see TSC charter](https://github.com/prestodb/tsc/blob/master/CHARTER.md)).  To become a committer, reach out to an [existing TSC member](https://github.com/prestodb/tsc#members), or send an email to operations@prestodb.io, and ask for feedback on your eligibility.  Note: to expedite the process, consider creating a document that outlines your Github stats, such as the number of reviews, lines of code added, number of PRs, and outlines particularly outstanding code and review contributions.  If a TSC member believes you are eligible, they will submit your nomination to a vote by the TSC.  If you receive a majority approval from the vote in the TSC then a pull request will be raised that adds your Github handle to the  [`CODEOWNERS`](CODEOWNERS) file.  The process is complete once the PR is merged.\n\n## <a id=\"pullrequests\">Pull Requests</a>\n* #### PR size and structure\n    * A PR can consist of multiple small commits, preferably not more than 20.\n    * The total number of lines modified in a single PR shall not exceed 5000. An exception to this rule is for changes that include checked in code generated files (such as [presto_protocol.cpp](https://github.com/prestodb/presto/blob/master/presto-native-execution/presto_cpp/presto_protocol/presto_protocol.cpp)).\n    * The commits sequence shall be in the dependencies order, not in date created/modified order\n    * Every commit in the PR shall pass all the tests\n      Example: https://github.com/prestodb/presto/pull/12991/commits\n\n* #### Follow the PR template provided\n* #### Backport PR\n    * Must refer to the original PR and provide link in the PR message.\n    * Must refer to original authors in the PR message.\n    * Do NOT change titles or messages of the original commits.\n    * If the original PR contains multiple commits, follow the same structure.\n\n\n## Pull Request Checklist\n\nIf you are not an official committer, you must fork from Master and then submit a Pull Request to contribute as an individual.\n\nTo make a contribution:\n\nWe use the [Fork and Pull model](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/getting-started/about-collaborative-development-models#fork-and-pull-model)\n- Fork from the master branch\n- If needed, rebase to the current master\n  branch before submitting your pull request\n- If it doesn't merge cleanly with\n  master you may be asked to rebase your changes.\n- If your pull request does not have a reviewer assigned to it after 4 days, [ask for a review in the #dev channel in Slack](https://join.slack.com/t/prestodb/shared_invite/enQtNTQ3NjU2MTYyNDA2LTYyOTg3MzUyMWE1YTI3Njc5YjgxZjNiYTgxODAzYjI5YWMwYWE0MTZjYWFhNGMwNjczYjI3N2JhM2ExMGJlMWM).\n\n- Tests are expected for all bug fixes and new features.\n\n- Make sure your code follows the [code style guidelines](https://github.com/prestodb/presto/blob/master/CONTRIBUTING.md#code-style), [development guidelines](https://github.com/prestodb/presto/wiki/Presto-Development-Guidelines#development) and [formatting guidelines](https://github.com/prestodb/presto/wiki/Presto-Development-Guidelines#formatting)\n\n- Make sure you follow the [review and commit guidelines](https://github.com/prestodb/presto/wiki/Review-and-Commit-guidelines), in particular:\n\n    - Ensure that each commit is correct independently. Each commit should compile and pass tests.\n    - When possible, reduce the size of the commit for ease of review. Consider breaking a large PR into multiple commits, with each one addressing a particular issue. For example, if you are introducing a new feature that requires certain refactor, making a separate refactor commit before the real change helps the reviewer to isolate the changes.\n    - Do not send commits like addressing comments or fixing tests for previous commits in the same PR. Squash such commits to its corresponding base commit before the PR is rebased and merged.\n    - Make sure commit messages [follow these guidelines](https://chris.beams.io/posts/git-commit/).  In particular (from the guidelines):\n\n        * Separate subject from body with a blank line\n        * Limit the subject line to 50 characters\n        * Capitalize the subject line\n        * Do not end the subject line with a period\n        * Use the imperative mood in the subject line\n        * Wrap the body at 72 characters\n        * Use the body to explain what and why vs. how\n- Ensure all code is peer reviewed within your own organization or peers before submitting\n- Implement and address existing feedback before requesting further review\n- Make a good faith effort to locate example or referential code before requesting someone else direct you towards it\n- If you see a lack of documentation, create a separate commit with draft documentation to fill the gap\n        * This documentation can be iterated on same as any code commit, demonstrate in real time that you are learning the code section\n- Implement or modify relevant tests, otherwise provide clear explanation why test updates were not necessary\n- Tag your PR with affected code areas as best as you can, it’s okay to tag too many, better to cut down irrelevant tags than miss getting input from relevant subject matter experts\n- All tests shall pass before requesting a code review. If there are test failures, even it's from unrelated problems, try to address them by either sending a PR to fix it or creating a Github issue so it can be triaged and fixed soon.\n\n### What not to do for Pull Requests\n* Submit before getting peer review in your own organization\n* Request review without addressing or implementing previous feedback\n* Ask reviewers to provide examples or code references without trying to find them on your own\n* Protest lack of documentation for a code section\n    * Instead, review the related code, then draft initial documentation as a separate commit\n* Use AI tools to generate documentation\n* Submit without test cases or clear justification for lack thereof\n* Request review when there are tests failing\n\n### Comments in Pull Requests\nComments should help move the PR toward completion. \n\nPresto PRs - especially those written by people new to open source or new to Presto - can have a surprisingly high number of comments. This is a general tendency of open source projects and is because members of the Presto community want to help you succeed with your PR and also maintain the quality, and follow the existing standards of, the Presto project.\n\nDo not take the presence of many comments as a sign that the PR, or the work in it, is bad. \n\n## <a id=\"codereviews\">Code Reviews</a>\n#### What to do\n* Provide explicit feedback on what is needed or what would be better\n* Review code with the objective of helping someone land their changes\n#### What not to do\n* Treat reviews as purely a hunt for mistakes\n\n## Conduct\n\nPlease refer to our [Code of Conduct](https://github.com/prestodb/tsc/blob/master/CODE_OF_CONDUCT.md).\n\n## <a id=\"cla\">Contributor License Agreement (\"CLA\")</a>\n\nTo accept your pull request, you must submit a CLA. You only need to do this once, so if you've done this for one repository in the [prestodb](https://github.com/prestodb) organization, you're good to go. When you submit a pull request for the first time, the communitybridge-easycla bot notifies you if you haven't signed, and provides you with a link. If you are contributing on behalf of a company, you might want to let the person who manages your corporate CLA whitelist know they will be receiving a request from you.\n"
        },
        {
          "name": "FUNCTIONS.md",
          "type": "blob",
          "size": 4.4912109375,
          "content": "# Presto Function Guidelines\n\nPresto includes a large library of built-in SQL functions such as AVG and CONCAT that are available in every deployment.\n\nPresto also supports plugins that provide extension functions that are not available by default but can be installed in particular deployments. Examples include the [I18nMyanmarFunctions](https://github.com/prestodb/presto/blob/master/presto-i18n-functions/src/main/java/com/facebook/presto/i18n/functions/I18nMyanmarFunctions.java) for working with Zawgyi encoded text. If Burmese text is present in your data store, these can be important, but more Presto installations don't need this than do.\n\nFinally, Presto allows users to write user defined functions (UDFs) in either Java or SQL that are not stored in this GitHub repository. This is done through the [Plugin SPI](https://prestodb.io/docs/current/develop/functions.html).\n\nThis document lays out some guidelines for which category is right for which functions. \n\nFunctions defined in [ANSI SQL](https://jakewheat.github.io/sql-overview/) should be built-in functions in this repository.\n\nNon-standard functions that are commonly available in multiple other SQL dialects such as MySQL and Postgres can also be written as built-in functions in this library.\n\nFunctions that are provided in order to mirror the syntax and semantics of particular other SQL dialects (MySQL, Postgres, Oracle, etc.) should be extension functions so they can be turned on by users who need compatibility with that dialect while everyone else can safely ignore them. This helps avoid conflicts where two existing dialects are incompatible. The [Teradata plugin](https://github.com/prestodb/presto/tree/master/presto-teradata-functions/src/main/java/com/facebook/presto/teradata) is a good example of this.\n\nFunctions that alias or closely resemble existing built-in functions should not be built-in functions and usually should not be extension functions either. For example, because Presto already has an AVG function, it should not also have a MEAN or an AVERAGE function, even if the semantics or arguments are slightly different. However, extension functions whose purpose is to mirror other SQL dialects may occasionally alias functions. For instance, the Teradata plugin provides an index() function that is an alias for Presto's built-in strpos() function. This is purely for compatibility with existing Teradata SQL and should be invisible to users who have not deliberately chosen to install the Teradata plugin.\n\nBuilt-in functions should be broadly applicable to many users in different areas. For example,\nfunctions that work with pre-decimalization English currency — pounds, shillings, pence, etc. —  would be unlikely to be needed by many users, and thus should be extension functions or UDFs.\n\nBuilt-in functions should be purely computational. That is, they do not make network connections or perform I/O outside the database. (Date/time functions like NOW() are an exception.) For example, a function that talks to a remote server to check the current temperature or a stock price should not be a built-in function. This should be a user defined function maintained outside the Presto GitHub repository.\n\nBuilt-in and extension functions should be able to be maintained by Presto committers without support from the original contributors. That is, they should not require specialized or expert knowledge beyond what Presto maintenance already requires. For instance, most cryptographic functions should not be included in this repository because it is not reasonable to expect that Presto committers are also cryptography experts.\n\nBuilt-in functions that extend Presto into new domains should have a detailed plan and ideally an implementation for a library of functions that cover the domain. For instance, a function that only added US dollars would not be accepted. However, a general library for working with currency data along the lines of [Joda-Money](https://www.joda.org/joda-money/) could be considered. It can be helpful to prototype complex functionality like this in UDFs before writing an RFC and submitting it to the Presto project.\n\nBuilt-in and extension functions bundled with Presto must be freely available without fee and compatible with the Apache License Version 2.0. Functions using algorithms that are in any way restricted by copyright, patent, trademark, field of use, or other reasons will not be included in this repository. For instance, a patented video CODEC cannot be used. Functions that include trademarked names should be UDFs outside this repository.\n\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 13.6015625,
          "content": "AGENT_MAVEN = '''\n    apiVersion: v1\n    kind: Pod\n    spec:\n        containers:\n        - name: maven\n          image: maven:3.8.6-openjdk-8-slim\n          env:\n          - name: MAVEN_OPTS\n            value: \"-Xmx8000m -Xms8000m\"\n          resources:\n            requests:\n              memory: \"16Gi\"\n              cpu: \"4000m\"\n            limits:\n              memory: \"16Gi\"\n              cpu: \"4000m\"\n          tty: true\n          command:\n          - cat\n'''\n\nAGENT_DIND = '''\n    apiVersion: v1\n    kind: Pod\n    spec:\n        containers:\n        - name: dind\n          image: docker:20.10.16-dind-alpine3.15\n          securityContext:\n            privileged: true\n          tty: true\n          resources:\n            requests:\n              memory: \"29Gi\"\n              cpu: \"7500m\"\n            limits:\n              memory: \"29Gi\"\n              cpu: \"7500m\"\n'''\n\npipeline {\n\n    agent none\n\n    environment {\n        AWS_CREDENTIAL_ID  = 'oss-presto-aws'\n        AWS_DEFAULT_REGION = 'us-east-1'\n        AWS_ECR            = 'public.ecr.aws/oss-presto'\n        AWS_S3_PREFIX      = 's3://oss-prestodb/presto'\n        IMG_NAME           = 'presto'\n    }\n\n    options {\n        buildDiscarder(logRotator(numToKeepStr: '100'))\n        disableConcurrentBuilds()\n        disableResume()\n        overrideIndexTriggers(false)\n        timeout(time: 3, unit: 'HOURS')\n        timestamps()\n    }\n\n    parameters {\n        booleanParam(name: 'PUBLISH_ARTIFACTS_ON_CURRENT_BRANCH',\n                     defaultValue: false,\n                     description: 'whether to publish tar and docker image even if current branch is not master')\n        booleanParam(name: 'BUILD_PRESTISSIMO_DEPENDENCY',\n                     defaultValue: false,\n                     description: 'Check to build a new native dependency image because of the build dependency updates')\n    }\n\n    stages {\n        stage('Maven Build') {\n            agent {\n                kubernetes {\n                    defaultContainer 'maven'\n                    yaml AGENT_MAVEN\n                }\n            }\n\n            stages {\n                stage('Maven Agent Setup') {\n                    steps {\n                        sh 'apt update && apt install -y awscli git tree'\n                        sh 'git config --global --add safe.directory ${WORKSPACE}'\n                        script {\n                            env.PRESTO_COMMIT_SHA = sh(script: \"git rev-parse HEAD\", returnStdout: true).trim()\n                        }\n                        echo \"${PRESTO_COMMIT_SHA}\"\n                    }\n                }\n\n                stage('PR Update') {\n                    when { changeRequest() }\n                    steps {\n                        echo 'get PR head commit sha'\n                        sh 'git config --global --add safe.directory ${WORKSPACE}/presto-pr-${CHANGE_ID}'\n                        script {\n                            checkout $class: 'GitSCM',\n                                    branches: [[name: 'FETCH_HEAD']],\n                                    doGenerateSubmoduleConfigurations: false,\n                                    extensions: [\n                                        [\n                                            $class: 'RelativeTargetDirectory',\n                                            relativeTargetDir: \"presto-pr-${env.CHANGE_ID}\"\n                                        ], [\n                                            $class: 'CloneOption',\n                                            shallow: true,\n                                            noTags:  true,\n                                            depth:   1,\n                                            timeout: 100\n                                        ], [\n                                            $class: 'LocalBranch'\n                                        ]\n                                    ],\n                                    submoduleCfg: [],\n                                    userRemoteConfigs: [[\n                                        refspec: \"+refs/pull/${env.CHANGE_ID}/head:refs/remotes/origin/PR-${env.CHANGE_ID}\",\n                                        url: 'https://github.com/prestodb/presto'\n                                    ]]\n                            env.PRESTO_COMMIT_SHA = sh(script: \"cd presto-pr-${env.CHANGE_ID} && git rev-parse HEAD\", returnStdout: true).trim()\n                        }\n                        echo \"${PRESTO_COMMIT_SHA}\"\n                    }\n                }\n\n                stage('Maven') {\n                    steps {\n                        sh 'unset MAVEN_CONFIG && ./mvnw versions:set -DremoveSnapshot'\n                        script {\n                            env.PRESTO_VERSION = sh(\n                                script: 'unset MAVEN_CONFIG && ./mvnw org.apache.maven.plugins:maven-help-plugin:3.2.0:evaluate -Dexpression=project.version -q -DforceStdout',\n                                returnStdout: true).trim()\n                            env.PRESTO_PKG = \"presto-server-${PRESTO_VERSION}.tar.gz\"\n                            env.PRESTO_CLI_JAR = \"presto-cli-${PRESTO_VERSION}-executable.jar\"\n                            env.PRESTO_BUILD_VERSION = env.PRESTO_VERSION + '-' +\n                                sh(script: \"git show -s --format=%cd --date=format:'%Y%m%d%H%M%S'\", returnStdout: true).trim() + \"-\" +\n                                env.PRESTO_COMMIT_SHA.substring(0, 7)\n                            env.DOCKER_IMAGE = env.AWS_ECR + \"/${IMG_NAME}:${PRESTO_BUILD_VERSION}\"\n                            env.NATIVE_DOCKER_IMAGE_DEPENDENCY = env.AWS_ECR + \"/presto-native-dependency:${PRESTO_BUILD_VERSION}\"\n                            env.NATIVE_DOCKER_IMAGE = env.AWS_ECR + \"/presto-native:${PRESTO_BUILD_VERSION}\"\n                        }\n                        sh 'printenv | sort'\n\n                        echo \"build prestodb source code with build version ${PRESTO_BUILD_VERSION}\"\n                        retry (5) {\n                            sh '''\n                                unset MAVEN_CONFIG && ./mvnw install -DskipTests -B -T 1C -P ci -pl '!presto-docs'\n                                tree /root/.m2/repository/com/facebook/presto/\n                            '''\n                        }\n\n                        echo 'Publish Maven tarball'\n                        withCredentials([[\n                                $class:            'AmazonWebServicesCredentialsBinding',\n                                credentialsId:     \"${AWS_CREDENTIAL_ID}\",\n                                accessKeyVariable: 'AWS_ACCESS_KEY_ID',\n                                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {\n                            sh '''\n                                echo \"${PRESTO_BUILD_VERSION}\" > index.txt\n                                git log -n 10 >> index.txt\n                                aws s3 cp index.txt ${AWS_S3_PREFIX}/${PRESTO_BUILD_VERSION}/ --no-progress\n                                aws s3 cp presto-server/target/${PRESTO_PKG}  ${AWS_S3_PREFIX}/${PRESTO_BUILD_VERSION}/ --no-progress\n                                aws s3 cp presto-cli/target/${PRESTO_CLI_JAR} ${AWS_S3_PREFIX}/${PRESTO_BUILD_VERSION}/ --no-progress\n                            '''\n                        }\n                    }\n                }\n            }\n        }\n\n        stage('Docker Build') {\n            agent {\n                kubernetes {\n                    defaultContainer 'dind'\n                    yaml AGENT_DIND\n                }\n            }\n\n            stages {\n                stage('Docker Agent Setup') {\n                    steps {\n                        sh 'apk update && apk add aws-cli bash git make'\n                        sh 'git config --global --add safe.directory ${WORKSPACE}'\n                        sh 'git config --global --add safe.directory ${WORKSPACE}/presto-native-execution/velox'\n                        sh '''\n                            docker run --privileged --rm tonistiigi/binfmt --install all\n                            docker context ls\n                            docker buildx create --name=\"container\" --driver=docker-container --bootstrap\n                            docker buildx ls\n                            docker buildx inspect container\n                        '''\n                    }\n                }\n\n                stage('Docker Java') {\n                    steps {\n                        echo 'build docker image'\n                        withCredentials([[\n                                $class:            'AmazonWebServicesCredentialsBinding',\n                                credentialsId:     \"${AWS_CREDENTIAL_ID}\",\n                                accessKeyVariable: 'AWS_ACCESS_KEY_ID',\n                                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {\n                            sh '''#!/bin/bash -ex\n                                cd docker/\n                                aws s3 cp ${AWS_S3_PREFIX}/${PRESTO_BUILD_VERSION}/${PRESTO_PKG}     . --no-progress\n                                aws s3 cp ${AWS_S3_PREFIX}/${PRESTO_BUILD_VERSION}/${PRESTO_CLI_JAR} . --no-progress\n\n                                echo \"Building ${DOCKER_IMAGE}\"\n                                REG_ORG=${AWS_ECR} IMAGE_NAME=${IMG_NAME} TAG=${PRESTO_BUILD_VERSION} ./build.sh ${PRESTO_VERSION}\n                            '''\n                        }\n                    }\n                }\n\n                stage('Publish Docker Java') {\n                    when {\n                        anyOf {\n                            expression { params.PUBLISH_ARTIFACTS_ON_CURRENT_BRANCH }\n                            branch \"master\"\n                        }\n                    }\n\n                    steps {\n                        echo 'Publish docker image'\n                        withCredentials([[\n                                $class:            'AmazonWebServicesCredentialsBinding',\n                                credentialsId:     \"${AWS_CREDENTIAL_ID}\",\n                                accessKeyVariable: 'AWS_ACCESS_KEY_ID',\n                                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {\n                            sh '''\n                                cd docker/\n                                aws s3 ls ${AWS_S3_PREFIX}/${PRESTO_BUILD_VERSION}/\n                                aws ecr-public get-login-password | docker login --username AWS --password-stdin ${AWS_ECR}\n                                PUBLISH=true REG_ORG=${AWS_ECR} IMAGE_NAME=${IMG_NAME} TAG=${PRESTO_BUILD_VERSION} ./build.sh ${PRESTO_VERSION}\n                            '''\n                        }\n                    }\n                }\n\n                stage ('Build Docker Native Dependency') {\n                    when {\n                        environment name: 'BUILD_PRESTISSIMO_DEPENDENCY', value: 'true'\n                    }\n                    steps {\n                        sh '''\n                            cd presto-native-execution/\n                            make submodules\n                            docker buildx build --load --platform \"linux/amd64\" \\\n                                    -t \"${NATIVE_DOCKER_IMAGE_DEPENDENCY}\" \\\n                                    -f scripts/dockerfiles/centos-dependency.dockerfile \\\n                                    .\n                            docker tag \"${NATIVE_DOCKER_IMAGE_DEPENDENCY}\" \"${AWS_ECR}/presto-native-dependency:latest\"\n                            docker image ls\n                        '''\n                    }\n                }\n\n                stage ('Build Docker Native') {\n                    steps {\n                        sh '''\n                            cd presto-native-execution/\n                            make submodules\n                            docker buildx build --load --platform \"linux/amd64\" \\\n                                    -t \"${NATIVE_DOCKER_IMAGE}\" \\\n                                    --build-arg BUILD_TYPE=Release \\\n                                    --build-arg DEPENDENCY_IMAGE=${AWS_ECR}/presto-native-dependency:latest \\\n                                    --build-arg \"EXTRA_CMAKE_FLAGS=-DPRESTO_ENABLE_TESTING=OFF -DPRESTO_ENABLE_PARQUET=ON -DPRESTO_ENABLE_S3=ON\" \\\n                                    -f scripts/dockerfiles/prestissimo-runtime.dockerfile \\\n                                    .\n                            docker image ls\n                        '''\n                    }\n                }\n\n                stage('Publish Docker Native') {\n                    when {\n                        anyOf {\n                            expression { params.PUBLISH_ARTIFACTS_ON_CURRENT_BRANCH }\n                            branch \"master\"\n                        }\n                    }\n\n                    steps {\n                        echo 'Publish docker image'\n                        withCredentials([[\n                                $class:            'AmazonWebServicesCredentialsBinding',\n                                credentialsId:     \"${AWS_CREDENTIAL_ID}\",\n                                accessKeyVariable: 'AWS_ACCESS_KEY_ID',\n                                secretKeyVariable: 'AWS_SECRET_ACCESS_KEY']]) {\n                            sh '''\n                                aws ecr-public get-login-password | docker login --username AWS --password-stdin ${AWS_ECR}\n                                if ${BUILD_PRESTISSIMO_DEPENDENCY}\n                                then\n                                    docker push \"${NATIVE_DOCKER_IMAGE_DEPENDENCY}\"\n                                    docker push \"${AWS_ECR}/presto-native-dependency:latest\"\n                                fi\n                                docker push \"${NATIVE_DOCKER_IMAGE}\"\n                            '''\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICES",
          "type": "blob",
          "size": 0.1474609375,
          "content": "The code for the t-digest was originally authored by Ted Dunning\n\nAdrien Grand contributed the heart of the AVLTreeDigest (https://github.com/jpountz)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.4287109375,
          "content": "# Presto\n\nPresto is a distributed SQL query engine for big data.\n\nSee the [Presto installation documentation](https://prestodb.io/docs/current/installation.html) for deployment instructions.\n\nSee the [Presto documentation](https://prestodb.io/docs/current/) for general documentation.\n\n\n## Mission and Architecture\n\nSee [PrestoDB: Mission and Architecture](ARCHITECTURE.md). \n\n## Requirements\n\n* Mac OS X or Linux\n* Java 8 Update 151 or higher (8u151+), 64-bit. Both Oracle JDK and OpenJDK are supported.\n* Maven 3.6.3+ (for building)\n* Python 2.4+ (for running with the launcher script)\n\n<details> <!-- from: https://github.com/prestodb/presto/blob/master/README.md -->\n  <summary><a id=\"building-presto\"><h2>Building Presto</h2></a></summary>\n\n### Overview (Java)\n\nPresto is a standard Maven project. Simply run the following command from the project root directory:\n\n    ./mvnw clean install\n\nOn the first build, Maven will download all the dependencies from the internet and cache them in the local repository (`~/.m2/repository`), which can take a considerable amount of time. Subsequent builds will be faster.\n\nPresto has a comprehensive set of unit tests that can take several minutes to run. You can disable the tests when building:\n\n    ./mvnw clean install -DskipTests\n\nAfter building Presto for the first time, you can load the project into your IDE and run the server. We recommend using [IntelliJ IDEA](http://www.jetbrains.com/idea/). Because Presto is a standard Maven project, you can import it into your IDE using the root `pom.xml` file. In IntelliJ, choose Open Project from the Quick Start box or choose Open from the File menu and select the root `pom.xml` file.\n\nAfter opening the project in IntelliJ, double check that the Java SDK is properly configured for the project:\n\n* Open the File menu and select Project Structure\n* In the SDKs section, ensure that a 1.8 JDK is selected (create one if none exist)\n* In the Project section, ensure the Project language level is set to 8.0 as Presto makes use of several Java 8 language features\n\nPresto comes with sample configuration that should work out-of-the-box for development. Use the following options to create a run configuration:\n\n* Main Class: `com.facebook.presto.server.PrestoServer`\n* VM Options: `-ea -XX:+UseG1GC -XX:G1HeapRegionSize=32M -XX:+UseGCOverheadLimit -XX:+ExplicitGCInvokesConcurrent -Xmx2G -Dconfig=etc/config.properties -Dlog.levels-file=etc/log.properties`\n* Working directory: `$MODULE_WORKING_DIR$` or `$MODULE_DIR$`(Depends your version of IntelliJ)\n* Use classpath of module: `presto-main`\n\nThe working directory should be the `presto-main` subdirectory. In IntelliJ, using `$MODULE_DIR$` accomplishes this automatically.\n\nAdditionally, the Hive plugin must be configured with location of your Hive metastore Thrift service. Add the following to the list of VM options, replacing `localhost:9083` with the correct host and port (or use the below value if you do not have a Hive metastore):\n\n    -Dhive.metastore.uri=thrift://localhost:9083\n\n### Using SOCKS for Hive or HDFS\n\nIf your Hive metastore or HDFS cluster is not directly accessible to your local machine, you can use SSH port forwarding to access it. Setup a dynamic SOCKS proxy with SSH listening on local port 1080:\n\n    ssh -v -N -D 1080 server\n\nThen add the following to the list of VM options:\n\n    -Dhive.metastore.thrift.client.socks-proxy=localhost:1080\n\n### Running the CLI\n\nStart the CLI to connect to the server and run SQL queries:\n\n    presto-cli/target/presto-cli-*-executable.jar\n\nRun a query to see the nodes in the cluster:\n\n    SELECT * FROM system.runtime.nodes;\n\nIn the sample configuration, the Hive connector is mounted in the `hive` catalog, so you can run the following queries to show the tables in the Hive database `default`:\n\n    SHOW TABLES FROM hive.default;\n\n### Building the Documentation\n\nTo build the Presto docs, see the [docs README](presto-docs/README.md).\n\n### Building the Presto Console\n\nThe Presto Console is composed of several React components and is written in JSX and ES6. This\nsource code is stored in the `presto-ui/` module. The compilation process generates\nbrowser-compatible javascript which is added as JAR resources during the maven build. When the\nresource JAR is included on the classpath of Presto coordinator, it will be able to serve the\nresources.\n\nNone of the Java code relies on the Presto UI project being compiled, so it is possible to exclude\nthis UI when building Presto. Add the property `-DskipUI` to the maven command to disable building\nthe `ui` maven module.\n\n    ./mvnw clean install -DskipUI\n\nYou must have [Node.js](https://nodejs.org/en/download/) and [Yarn](https://yarnpkg.com/en/) installed to build the UI. When using  Maven to build\nthe project, Node and yarn are installed in the `presto-ui/target` folder. Add the node and yarn\nexecutables to the `PATH` environment variable.\n\nTo update Presto Console after making changes, run:\n\n    yarn --cwd presto-ui/src install\n\nIf no JavaScript dependencies have changed (i.e., no changes to `package.json`), it is faster to run:\n\n    yarn --cwd presto-ui/src run package\n\nTo simplify iteration, you can also run in `watch` mode, which automatically re-compiles when\nchanges to source files are detected:\n\n    yarn --cwd presto-ui/src run watch\n\nTo iterate quickly, simply re-build the project in IntelliJ after packaging is complete. Project\nresources will be hot-reloaded and changes are reflected on browser refresh.\n\n## Presto native and Velox\n\n[Presto native](https://github.com/prestodb/presto/tree/master/presto-native-execution) is a C++ rewrite of Presto worker. [Presto native](https://github.com/prestodb/presto/tree/master/presto-native-execution) uses [Velox](https://github.com/facebookincubator/velox) as its primary engine to run presto workloads.\n\n[Velox](https://github.com/facebookincubator/velox) is a C++ database library which provides reusable, extensible, and high-performance data processing components.\n\nCheck out [building instructions](https://github.com/prestodb/presto/tree/master/presto-native-execution#build-from-source) to get started.\n\n\n<hr>\n</details>\n\n\n## Contributing!\n\nPlease refer to the [contribution guidelines](https://github.com/prestodb/presto/blob/master/CONTRIBUTING.md) to get started.\n\n## Questions?\n\n[Please join our Slack channel and ask in `#dev`](https://communityinviter.com/apps/prestodb/prestodb).\n\n## License\n\nBy contributing to Presto, you agree that your contributions will be licensed under the [Apache License Version 2.0 (APLv2)](LICENSE).\n\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "license.header",
          "type": "blob",
          "size": 0.5205078125,
          "content": " Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n"
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 11.0244140625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.2.0\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"$(uname)\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        JAVA_HOME=\"$(/usr/libexec/java_home)\"; export JAVA_HOME\n      else\n        JAVA_HOME=\"/Library/Java/Home\"; export JAVA_HOME\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=$(java-config --jre-home)\n  fi\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=$(cygpath --unix \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=$(cygpath --path --unix \"$CLASSPATH\")\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$JAVA_HOME\" ] && [ -d \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"$(cd \"$JAVA_HOME\" || (echo \"cannot cd into $JAVA_HOME.\"; exit 1); pwd)\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"$(which javac)\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"$(expr \"\\\"$javaExecutable\\\"\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=$(which readlink)\n    if [ ! \"$(expr \"$readLink\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"$(dirname \"\\\"$javaExecutable\\\"\")\"\n        javaExecutable=\"$(cd \"\\\"$javaHome\\\"\" && pwd -P)/javac\"\n      else\n        javaExecutable=\"$(readlink -f \"\\\"$javaExecutable\\\"\")\"\n      fi\n      javaHome=\"$(dirname \"\\\"$javaExecutable\\\"\")\"\n      javaHome=$(expr \"$javaHome\" : '\\(.*\\)/bin')\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"$(\\unset -f command 2>/dev/null; \\command -v java)\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=$(cd \"$wdir/..\" || exit 1; pwd)\n    fi\n    # end of workaround\n  done\n  printf '%s' \"$(cd \"$basedir\" || exit 1; pwd)\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    # Remove \\r in case we run on Windows within Git Bash\n    # and check out the repository with auto CRLF management\n    # enabled. Otherwise, we may read lines that are delimited with\n    # \\r\\n and produce $'-Xarg\\r' rather than -Xarg due to word\n    # splitting rules.\n    tr -s '\\r\\n' ' ' < \"$1\"\n  fi\n}\n\nlog() {\n  if [ \"$MVNW_VERBOSE\" = true ]; then\n    printf '%s\\n' \"$1\"\n  fi\n}\n\nBASE_DIR=$(find_maven_basedir \"$(dirname \"$0\")\")\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\nMAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}; export MAVEN_PROJECTBASEDIR\nlog \"$MAVEN_PROJECTBASEDIR\"\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nwrapperJarPath=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\"\nif [ -r \"$wrapperJarPath\" ]; then\n    log \"Found $wrapperJarPath\"\nelse\n    log \"Couldn't find $wrapperJarPath, downloading it ...\"\n\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      wrapperUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    else\n      wrapperUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    fi\n    while IFS=\"=\" read -r key value; do\n      # Remove '\\r' from value to allow usage on windows as IFS does not consider '\\r' as a separator ( considers space, tab, new line ('\\n'), and custom '=' )\n      safeValue=$(echo \"$value\" | tr -d '\\r')\n      case \"$key\" in (wrapperUrl) wrapperUrl=\"$safeValue\"; break ;;\n      esac\n    done < \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\n    log \"Downloading from: $wrapperUrl\"\n\n    if $cygwin; then\n      wrapperJarPath=$(cygpath --path --windows \"$wrapperJarPath\")\n    fi\n\n    if command -v wget > /dev/null; then\n        log \"Found wget ... using wget\"\n        [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--quiet\"\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget $QUIET \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        else\n            wget $QUIET --http-user=\"$MVNW_USERNAME\" --http-password=\"$MVNW_PASSWORD\" \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        log \"Found curl ... using curl\"\n        [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--silent\"\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl $QUIET -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n        else\n            curl $QUIET --user \"$MVNW_USERNAME:$MVNW_PASSWORD\" -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n        fi\n    else\n        log \"Falling back to using Java to download\"\n        javaSource=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        javaClass=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.class\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaSource=$(cygpath --path --windows \"$javaSource\")\n          javaClass=$(cygpath --path --windows \"$javaClass\")\n        fi\n        if [ -e \"$javaSource\" ]; then\n            if [ ! -e \"$javaClass\" ]; then\n                log \" - Compiling MavenWrapperDownloader.java ...\"\n                (\"$JAVA_HOME/bin/javac\" \"$javaSource\")\n            fi\n            if [ -e \"$javaClass\" ]; then\n                log \" - Running MavenWrapperDownloader.java ...\"\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$wrapperUrl\" \"$wrapperJarPath\") || rm -f \"$wrapperJarPath\"\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\n# If specified, validate the SHA-256 sum of the Maven wrapper jar file\nwrapperSha256Sum=\"\"\nwhile IFS=\"=\" read -r key value; do\n  case \"$key\" in (wrapperSha256Sum) wrapperSha256Sum=$value; break ;;\n  esac\ndone < \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\nif [ -n \"$wrapperSha256Sum\" ]; then\n  wrapperSha256Result=false\n  if command -v sha256sum > /dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | sha256sum -c > /dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  elif command -v shasum > /dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | shasum -a 256 -c > /dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\"\n    echo \"Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties.\"\n    exit 1\n  fi\n  if [ $wrapperSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.\" >&2\n    echo \"Investigate or delete $wrapperJarPath to attempt a clean download.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified wrapperSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=$(cygpath --path --windows \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=$(cygpath --path --windows \"$CLASSPATH\")\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\")\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $*\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\n# shellcheck disable=SC2086 # safe args\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 7.61328125,
          "content": "@REM ----------------------------------------------------------------------------\r\n@REM Licensed to the Apache Software Foundation (ASF) under one\r\n@REM or more contributor license agreements.  See the NOTICE file\r\n@REM distributed with this work for additional information\r\n@REM regarding copyright ownership.  The ASF licenses this file\r\n@REM to you under the Apache License, Version 2.0 (the\r\n@REM \"License\"); you may not use this file except in compliance\r\n@REM with the License.  You may obtain a copy of the License at\r\n@REM\r\n@REM    http://www.apache.org/licenses/LICENSE-2.0\r\n@REM\r\n@REM Unless required by applicable law or agreed to in writing,\r\n@REM software distributed under the License is distributed on an\r\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n@REM KIND, either express or implied.  See the License for the\r\n@REM specific language governing permissions and limitations\r\n@REM under the License.\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@REM ----------------------------------------------------------------------------\r\n@REM Apache Maven Wrapper startup batch script, version 3.2.0\r\n@REM\r\n@REM Required ENV vars:\r\n@REM JAVA_HOME - location of a JDK home dir\r\n@REM\r\n@REM Optional ENV vars\r\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\r\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\r\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\r\n@REM     e.g. to debug Maven itself, use\r\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\r\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\r\n@echo off\r\n@REM set title of command window\r\ntitle %0\r\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\r\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\r\n\r\n@REM set %HOME% to equivalent of $HOME\r\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\r\n\r\n@REM Execute a user defined script before this one\r\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\r\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\r\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\r\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\r\n:skipRcPre\r\n\r\n@setlocal\r\n\r\nset ERROR_CODE=0\r\n\r\n@REM To isolate internal variables from possible post scripts, we use another setlocal\r\n@setlocal\r\n\r\n@REM ==== START VALIDATION ====\r\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\r\n\r\necho.\r\necho Error: JAVA_HOME not found in your environment. >&2\r\necho Please set the JAVA_HOME variable in your environment to match the >&2\r\necho location of your Java installation. >&2\r\necho.\r\ngoto error\r\n\r\n:OkJHome\r\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\r\n\r\necho.\r\necho Error: JAVA_HOME is set to an invalid directory. >&2\r\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\r\necho Please set the JAVA_HOME variable in your environment to match the >&2\r\necho location of your Java installation. >&2\r\necho.\r\ngoto error\r\n\r\n@REM ==== END VALIDATION ====\r\n\r\n:init\r\n\r\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\r\n@REM Fallback to current working directory if not found.\r\n\r\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\r\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\r\n\r\nset EXEC_DIR=%CD%\r\nset WDIR=%EXEC_DIR%\r\n:findBaseDir\r\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\r\ncd ..\r\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\r\nset WDIR=%CD%\r\ngoto findBaseDir\r\n\r\n:baseDirFound\r\nset MAVEN_PROJECTBASEDIR=%WDIR%\r\ncd \"%EXEC_DIR%\"\r\ngoto endDetectBaseDir\r\n\r\n:baseDirNotFound\r\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\r\ncd \"%EXEC_DIR%\"\r\n\r\n:endDetectBaseDir\r\n\r\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\r\n\r\n@setlocal EnableExtensions EnableDelayedExpansion\r\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\r\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\r\n\r\n:endReadAdditionalConfig\r\n\r\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\r\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\r\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\r\n\r\nset WRAPPER_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\r\n\r\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\r\n    IF \"%%A\"==\"wrapperUrl\" SET WRAPPER_URL=%%B\r\n)\r\n\r\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\r\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\r\nif exist %WRAPPER_JAR% (\r\n    if \"%MVNW_VERBOSE%\" == \"true\" (\r\n        echo Found %WRAPPER_JAR%\r\n    )\r\n) else (\r\n    if not \"%MVNW_REPOURL%\" == \"\" (\r\n        SET WRAPPER_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\r\n    )\r\n    if \"%MVNW_VERBOSE%\" == \"true\" (\r\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\r\n        echo Downloading from: %WRAPPER_URL%\r\n    )\r\n\r\n    powershell -Command \"&{\"^\r\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\r\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\r\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\r\n\t\t\"}\"^\r\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')\"^\r\n\t\t\"}\"\r\n    if \"%MVNW_VERBOSE%\" == \"true\" (\r\n        echo Finished downloading %WRAPPER_JAR%\r\n    )\r\n)\r\n@REM End of extension\r\n\r\n@REM If specified, validate the SHA-256 sum of the Maven wrapper jar file\r\nSET WRAPPER_SHA_256_SUM=\"\"\r\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\r\n    IF \"%%A\"==\"wrapperSha256Sum\" SET WRAPPER_SHA_256_SUM=%%B\r\n)\r\nIF NOT %WRAPPER_SHA_256_SUM%==\"\" (\r\n    powershell -Command \"&{\"^\r\n       \"$hash = (Get-FileHash \\\"%WRAPPER_JAR%\\\" -Algorithm SHA256).Hash.ToLower();\"^\r\n       \"If('%WRAPPER_SHA_256_SUM%' -ne $hash){\"^\r\n       \"  Write-Output 'Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.';\"^\r\n       \"  Write-Output 'Investigate or delete %WRAPPER_JAR% to attempt a clean download.';\"^\r\n       \"  Write-Output 'If you updated your Maven version, you need to update the specified wrapperSha256Sum property.';\"^\r\n       \"  exit 1;\"^\r\n       \"}\"^\r\n       \"}\"\r\n    if ERRORLEVEL 1 goto error\r\n)\r\n\r\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\r\n@REM work with both Windows and non-Windows executions.\r\nset MAVEN_CMD_LINE_ARGS=%*\r\n\r\n%MAVEN_JAVA_EXE% ^\r\n  %JVM_CONFIG_MAVEN_PROPS% ^\r\n  %MAVEN_OPTS% ^\r\n  %MAVEN_DEBUG_OPTS% ^\r\n  -classpath %WRAPPER_JAR% ^\r\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\r\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\r\nif ERRORLEVEL 1 goto error\r\ngoto end\r\n\r\n:error\r\nset ERROR_CODE=1\r\n\r\n:end\r\n@endlocal & set ERROR_CODE=%ERROR_CODE%\r\n\r\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\r\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\r\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\r\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\r\n:skipRcPost\r\n\r\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\r\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\r\n\r\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\r\n\r\ncmd /C exit /B %ERROR_CODE%\r\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 106.6728515625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>com.facebook.airlift</groupId>\n        <artifactId>airbase</artifactId>\n        <version>102</version>\n    </parent>\n\n    <groupId>com.facebook.presto</groupId>\n    <artifactId>presto-root</artifactId>\n    <version>0.291-SNAPSHOT</version>\n    <packaging>pom</packaging>\n\n    <name>presto-root</name>\n    <description>Presto</description>\n    <url>https://github.com/prestodb/presto</url>\n\n    <inceptionYear>2012</inceptionYear>\n\n    <licenses>\n        <license>\n            <name>Apache License 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <scm>\n        <connection>scm:git:git://github.com/prestodb/presto.git</connection>\n        <url>https://github.com/prestodb/presto</url>\n        <tag>HEAD</tag>\n    </scm>\n\n    <properties>\n        <air.main.basedir>${project.basedir}</air.main.basedir>\n\n        <air.check.skip-spotbugs>true</air.check.skip-spotbugs>\n        <air.check.skip-pmd>true</air.check.skip-pmd>\n        <air.checkstyle.config-file>src/checkstyle/presto-checks.xml</air.checkstyle.config-file>\n\n        <air.java.version>1.8.0-151</air.java.version>\n        <air.maven.version>3.3.9</air.maven.version>\n\n        <dep.antlr.version>4.7.1</dep.antlr.version>\n        <dep.airlift.version>0.216</dep.airlift.version>\n        <dep.packaging.version>${dep.airlift.version}</dep.packaging.version>\n        <dep.slice.version>0.38</dep.slice.version>\n        <dep.testing-mysql-server-5.version>0.6</dep.testing-mysql-server-5.version>\n        <dep.aws-sdk.version>1.12.560</dep.aws-sdk.version>\n        <dep.okhttp.version>3.9.0</dep.okhttp.version>\n        <dep.jdbi3.version>3.4.0</dep.jdbi3.version>\n        <dep.oracle.version>19.3.0.0</dep.oracle.version>\n        <dep.drift.version>1.38</dep.drift.version>\n        <!-- Changing joda version changes tzdata which must match deployed JVM tzdata\n             Do not change this without also making sure it matches -->\n        <dep.joda.version>2.12.7</dep.joda.version>\n        <dep.tempto.version>1.53</dep.tempto.version>\n        <dep.testng.version>7.5</dep.testng.version>\n        <dep.lucene.version>8.10.0</dep.lucene.version>\n        <dep.assertj-core.version>3.8.0</dep.assertj-core.version>\n        <dep.logback.version>1.2.13</dep.logback.version>\n        <dep.parquet.version>1.13.1</dep.parquet.version>\n        <dep.nexus-staging-plugin.version>1.6.8</dep.nexus-staging-plugin.version>\n        <dep.asm.version>9.2</dep.asm.version>\n        <dep.gcs.version>1.9.17</dep.gcs.version>\n        <dep.alluxio.version>313</dep.alluxio.version>\n        <dep.slf4j.version>1.7.32</dep.slf4j.version>\n        <dep.kafka.version>2.3.1</dep.kafka.version>\n        <dep.pinot.version>0.11.0</dep.pinot.version>\n        <dep.druid.version>30.0.1</dep.druid.version>\n        <dep.jaxb.version>2.3.1</dep.jaxb.version>\n        <dep.hudi.version>0.14.0</dep.hudi.version>\n        <dep.testcontainers.version>1.18.3</dep.testcontainers.version>\n        <dep.docker-java.version>3.3.0</dep.docker-java.version>\n        <dep.jayway.version>2.9.0</dep.jayway.version>\n        <dep.ratis.version>2.2.0</dep.ratis.version>\n        <dep.errorprone.version>2.18.0</dep.errorprone.version>\n        <dep.guava.version>32.1.0-jre</dep.guava.version>\n        <dep.jackson.version>2.15.4</dep.jackson.version>\n        <dep.j2objc.version>2.8</dep.j2objc.version>\n        <dep.avro.version>1.11.4</dep.avro.version>\n        <dep.commons.compress.version>1.26.2</dep.commons.compress.version>\n        <dep.protobuf-java.version>3.25.5</dep.protobuf-java.version>\n        <dep.netty.version>4.1.115.Final</dep.netty.version>\n        <dep.snakeyaml.version>2.0</dep.snakeyaml.version>\n        <dep.jetty.version>9.4.56.v20240826</dep.jetty.version>\n\n        <!--\n          America/Bahia_Banderas has:\n           - offset change since 1970 (offset Jan 1970: -08:00, offset Jan 2018: -06:00)\n           - DST (e.g. at 2017-04-02 02:00:00 clocks turned forward 1 hour; 2017-10-29 02:00:00 clocks turned backward 1 hour)\n           - has forward offset change on first day of epoch (1970-01-01 00:00:00 clocks turned forward 1 hour)\n           - had forward change at midnight (1970-01-01 00:00:00 clocks turned forward 1 hour)\n          -->\n        <air.test.timezone>America/Bahia_Banderas</air.test.timezone>\n        <air.test.parallel>methods</air.test.parallel>\n        <air.test.thread-count>2</air.test.thread-count>\n        <air.test.jvmsize>4g</air.test.jvmsize>\n        <grpc.version>1.68.0</grpc.version>\n\n        <air.javadoc.lint>-missing</air.javadoc.lint>\n    </properties>\n\n    <modules>\n        <module>presto-atop</module>\n        <module>presto-spi</module>\n        <module>presto-analyzer</module>\n        <module>presto-cache</module>\n        <module>presto-jmx</module>\n        <module>presto-record-decoder</module>\n        <module>presto-kafka</module>\n        <module>presto-redis</module>\n        <module>presto-accumulo</module>\n        <module>presto-cassandra</module>\n        <module>presto-bigquery</module>\n        <module>presto-blackhole</module>\n        <module>presto-memory</module>\n        <module>presto-orc</module>\n        <module>presto-parquet</module>\n        <module>presto-rcfile</module>\n        <module>presto-hive</module>\n        <module>presto-hdfs-core</module>\n        <module>presto-hive-common</module>\n        <module>presto-hive-hadoop2</module>\n        <module>presto-hive-metastore</module>\n        <module>presto-iceberg</module>\n        <module>presto-i18n-functions</module>\n        <module>presto-teradata-functions</module>\n        <module>presto-example-http</module>\n        <module>presto-local-file</module>\n        <module>presto-tpch</module>\n        <module>presto-tpcds</module>\n        <module>presto-base-jdbc</module>\n        <module>presto-testing-docker</module>\n        <module>presto-mysql</module>\n        <module>presto-oracle</module>\n        <module>presto-postgresql</module>\n        <module>presto-prometheus</module>\n        <module>presto-redshift</module>\n        <module>presto-sqlserver</module>\n        <module>presto-mongodb</module>\n        <module>presto-bytecode</module>\n        <module>presto-client</module>\n        <module>presto-parser</module>\n        <module>presto-main</module>\n        <module>presto-ml</module>\n        <module>presto-geospatial-toolkit</module>\n        <module>presto-benchmark</module>\n        <module>presto-tests</module>\n        <module>presto-product-tests</module>\n        <module>presto-jdbc</module>\n        <module>presto-pinot</module>\n        <module>presto-pinot-toolkit</module>\n        <module>presto-cli</module>\n        <module>presto-benchmark-driver</module>\n        <module>presto-server</module>\n        <module>presto-docs</module>\n        <module>presto-verifier</module>\n        <module>presto-testing-server-launcher</module>\n        <module>presto-plugin-toolkit</module>\n        <module>presto-resource-group-managers</module>\n        <module>presto-password-authenticators</module>\n        <module>presto-session-property-managers</module>\n        <module>presto-benchto-benchmarks</module>\n        <module>presto-thrift-api</module>\n        <module>presto-thrift-testing-server</module>\n        <module>presto-thrift-connector</module>\n        <module>presto-matching</module>\n        <module>presto-memory-context</module>\n        <module>presto-proxy</module>\n        <module>presto-kudu</module>\n        <module>presto-elasticsearch</module>\n        <module>presto-function-namespace-managers</module>\n        <module>presto-expressions</module>\n        <module>presto-benchmark-runner</module>\n        <module>presto-spark-classloader-interface</module>\n        <module>presto-spark-base</module>\n        <module>presto-spark-common</module>\n        <module>presto-spark</module>\n        <module>presto-spark-package</module>\n        <module>presto-spark-launcher</module>\n        <module>presto-spark-testing</module>\n        <module>presto-druid</module>\n        <module>presto-common</module>\n        <module>presto-thrift-testing-udf-server</module>\n        <module>presto-thrift-spec</module>\n        <module>presto-testng-services</module>\n        <module>presto-node-ttl-fetchers</module>\n        <module>presto-cluster-ttl-providers</module>\n        <module>presto-google-sheets</module>\n        <module>presto-clickhouse</module>\n        <module>presto-hive-function-namespace</module>\n        <module>presto-delta</module>\n        <module>presto-grpc-api</module>\n        <module>presto-grpc-testing-udf-server</module>\n        <module>presto-lark-sheets</module>\n        <module>presto-test-coverage</module>\n        <module>presto-hudi</module>\n        <module>presto-native-execution</module>\n        <module>presto-router</module>\n        <module>presto-open-telemetry</module>\n        <module>redis-hbo-provider</module>\n        <module>presto-singlestore</module>\n        <module>presto-hana</module>\n        <module>presto-openapi</module>\n        <module>presto-native-sidecar-plugin</module>\n    </modules>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-bom</artifactId>\n                <version>${dep.jetty.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-bom</artifactId>\n                <version>${dep.netty.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-testing-docker</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-spi</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-spi</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-analyzer</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-common</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-common</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-resource-group-managers</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-resource-group-managers</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-password-authenticators</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-session-property-managers</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-node-ttl-fetchers</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-cluster-ttl-providers</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-hive-function-namespace</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-plugin-toolkit</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-record-decoder</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-orc</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>commons-io</groupId>\n                <artifactId>commons-io</artifactId>\n                <version>2.16.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-parquet</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-rcfile</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-hive</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-hdfs-core</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-hive-common</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-hive-hadoop2</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-iceberg</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>javax.annotation</groupId>\n                <artifactId>javax.annotation-api</artifactId>\n                <version>1.3.2</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-example-http</artifactId>\n                <version>${project.version}</version>\n                <type>zip</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-local-file</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-hive</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-iceberg</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.teradata</groupId>\n                <artifactId>re2j-td</artifactId>\n                <version>1.4</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-tpch</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-tpcds</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-blackhole</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-memory</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-base-jdbc</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-pinot</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-pinot-toolkit</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-mysql</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-singlestore</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-hana</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-session-property-providers</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-bigquery</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-oracle</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-prometheus</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.grpc</groupId>\n                <artifactId>grpc-protobuf</artifactId>\n                <version>${grpc.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.google.guava</groupId>\n                        <artifactId>guava</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.google.errorprone</groupId>\n                        <artifactId>error_prone_annotations</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>animal-sniffer-annotations</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>io.grpc</groupId>\n                <artifactId>grpc-stub</artifactId>\n                <version>${grpc.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.google.guava</groupId>\n                        <artifactId>guava</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.google.errorprone</groupId>\n                        <artifactId>error_prone_annotations</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>animal-sniffer-annotations</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>io.grpc</groupId>\n                <artifactId>grpc-api</artifactId>\n                <version>${grpc.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.google.guava</groupId>\n                        <artifactId>guava</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.google.errorprone</groupId>\n                        <artifactId>error_prone_annotations</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>animal-sniffer-annotations</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>io.grpc</groupId>\n                <artifactId>grpc-netty-shaded</artifactId>\n                <version>${grpc.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.google.guava</groupId>\n                        <artifactId>guava</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.google.errorprone</groupId>\n                        <artifactId>error_prone_annotations</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>animal-sniffer-annotations</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>io.grpc</groupId>\n                <artifactId>grpc-core</artifactId>\n                <version>${grpc.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.protobuf</groupId>\n                <artifactId>protobuf-java</artifactId>\n                <version>${dep.protobuf-java.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.protobuf</groupId>\n                <artifactId>protobuf-java-util</artifactId>\n                <version>${dep.protobuf-java.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>testcontainers-bom</artifactId>\n                <version>${dep.testcontainers.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.testcontainers</groupId>\n                <artifactId>testcontainers</artifactId>\n                <version>${dep.testcontainers.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.github.docker-java</groupId>\n                <artifactId>docker-java-api</artifactId>\n                <version>${dep.docker-java.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-geospatial-toolkit</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-cache</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-cli</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-bytecode</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-client</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-parser</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-parser</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-jmx</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-main</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-main</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-hive-metastore</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-hive-metastore</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-matching</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-memory-context</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-elasticsearch</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-expressions</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-jdbc</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-server</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-server</artifactId>\n                <version>${project.version}</version>\n                <type>tar.gz</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-tests</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-benchmark</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-benchto-benchmarks</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-product-tests</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-sqlserver</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-spark-classloader-interface</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-spark</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-spark-common</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-spark-base</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-spark-base</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-spark-launcher</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-spark-package</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.module</groupId>\n                <artifactId>jackson-module-afterburner</artifactId>\n                <version>${dep.jackson.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-core</artifactId>\n                <version>${dep.jackson.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-annotations</artifactId>\n                <version>${dep.jackson.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.dataformat</groupId>\n                <artifactId>jackson-dataformat-smile</artifactId>\n                <version>${dep.jackson.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.dataformat</groupId>\n                <artifactId>jackson-dataformat-yaml</artifactId>\n                <version>${dep.jackson.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n                <version>${dep.jackson.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.jayway.jsonpath</groupId>\n                <artifactId>json-path</artifactId>\n                <version>${dep.jayway.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.ow2.asm</groupId>\n                        <artifactId>asm</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto.hadoop</groupId>\n                <artifactId>hadoop-apache2</artifactId>\n                <version>2.7.4-12</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto.hive</groupId>\n                <artifactId>hive-apache</artifactId>\n                <version>3.0.0-10</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.hive</groupId>\n                <artifactId>hive-llap-common</artifactId>\n                <version>2.3.4</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.apache.hive</groupId>\n                        <artifactId>hive-common</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.hive</groupId>\n                        <artifactId>hive-serde</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto.orc</groupId>\n                <artifactId>orc-protobuf</artifactId>\n                <version>13</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-thrift-api</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-thrift-api</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-thrift-testing-server</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-thrift-connector</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-thrift-connector</artifactId>\n                <version>${project.version}</version>\n                <type>zip</type>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-thrift-testing-udf-server</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-function-namespace-managers</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-grpc-api</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-grpc-testing-udf-server</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-testng-services</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-open-telemetry</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.hive</groupId>\n                <artifactId>hive-dwrf</artifactId>\n                <version>0.8.5</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.airlift</groupId>\n                <artifactId>aircompressor</artifactId>\n                <version>0.27</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>log</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>log-manager</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>json</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>security</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.airlift</groupId>\n                <artifactId>units</artifactId>\n                <version>1.3</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>concurrent</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>configuration</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>discovery</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>testing</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>node</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>bootstrap</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>event</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>http-server</artifactId>\n                <version>${dep.airlift.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>io.jsonwebtoken</groupId>\n                        <artifactId>jjwt</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>jaxrs</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>jaxrs-testing</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>jmx</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>trace-token</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>dbpool</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>jmx-http</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>http-client</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>stats</artifactId>\n                <version>${dep.airlift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.airlift</groupId>\n                <artifactId>joni</artifactId>\n                <version>2.1.5.3</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.drift</groupId>\n                <artifactId>drift-api</artifactId>\n                <version>${dep.drift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.drift</groupId>\n                <artifactId>drift-client</artifactId>\n                <version>${dep.drift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.drift</groupId>\n                <artifactId>drift-codec</artifactId>\n                <version>${dep.drift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.drift</groupId>\n                <artifactId>drift-protocol</artifactId>\n                <version>${dep.drift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.drift</groupId>\n                <artifactId>drift-server</artifactId>\n                <version>${dep.drift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.drift</groupId>\n                <artifactId>drift-transport-netty</artifactId>\n                <version>${dep.drift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.drift</groupId>\n                <artifactId>drift-transport-spi</artifactId>\n                <version>${dep.drift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.drift</groupId>\n                <artifactId>drift-codec-utils</artifactId>\n                <version>${dep.drift.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.airlift.tpch</groupId>\n                <artifactId>tpch</artifactId>\n                <version>0.10</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.teradata.tpcds</groupId>\n                <artifactId>tpcds</artifactId>\n                <version>1.2</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.google.code.findbugs</groupId>\n                        <artifactId>annotations</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-i18n-functions</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>javax.xml.bind</groupId>\n                <artifactId>jaxb-api</artifactId>\n                <version>${dep.jaxb.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.glassfish.jaxb</groupId>\n                <artifactId>jaxb-runtime</artifactId>\n                <version>${dep.jaxb.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.ow2.asm</groupId>\n                <artifactId>asm</artifactId>\n                <version>${dep.asm.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.ow2.asm</groupId>\n                <artifactId>asm-tree</artifactId>\n                <version>${dep.asm.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.ow2.asm</groupId>\n                <artifactId>asm-util</artifactId>\n                <version>${dep.asm.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.ow2.asm</groupId>\n                <artifactId>asm-analysis</artifactId>\n                <version>${dep.asm.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.h2database</groupId>\n                <artifactId>h2</artifactId>\n                <version>1.4.199</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.sonatype.aether</groupId>\n                <artifactId>aether-api</artifactId>\n                <version>1.13.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.airlift.resolver</groupId>\n                <artifactId>resolver</artifactId>\n                <version>1.4</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.airlift</groupId>\n                <artifactId>airline</artifactId>\n                <version>0.8</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.openjdk.jol</groupId>\n                <artifactId>jol-core</artifactId>\n                <version>0.2</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jetbrains</groupId>\n                <artifactId>annotations</artifactId>\n                <version>19.0.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>it.unimi.dsi</groupId>\n                <artifactId>fastutil</artifactId>\n                <version>8.5.2</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.thirdparty</groupId>\n                <artifactId>libsvm</artifactId>\n                <version>3.18.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.sap.cloud.db.jdbc</groupId>\n                <artifactId>ngdbc</artifactId>\n                <version>2.17.12</version>\n            </dependency>\n\n            <dependency>\n                <groupId>mysql</groupId>\n                <artifactId>mysql-connector-java</artifactId>\n                <version>5.1.48</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.singlestore</groupId>\n                <artifactId>singlestore-jdbc-client</artifactId>\n                <version>1.1.9</version>\n            </dependency>\n\n            <dependency>\n                <!-- org.testcontainers:testcontainer's dependencies pull two different versions of this artifact and this is to negotiate the version -->\n                <groupId>net.java.dev.jna</groupId>\n                <artifactId>jna</artifactId>\n                <version>5.13.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.postgresql</groupId>\n                <artifactId>postgresql</artifactId>\n                <version>42.6.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.pcollections</groupId>\n                <artifactId>pcollections</artifactId>\n                <version>2.1.2</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.antlr</groupId>\n                <artifactId>antlr4-runtime</artifactId>\n                <version>${dep.antlr.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.microsoft.sqlserver</groupId>\n                <artifactId>mssql-jdbc</artifactId>\n                <version>7.0.0.jre8</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.fusesource.jansi</groupId>\n                <artifactId>jansi</artifactId>\n                <version>1.18</version>\n            </dependency>\n\n            <dependency>\n                <groupId>jline</groupId>\n                <artifactId>jline</artifactId>\n                <version>2.14.6</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.fusesource.jansi</groupId>\n                        <artifactId>jansi</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jdbi</groupId>\n                <artifactId>jdbi</artifactId>\n                <version>2.78</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jdbi</groupId>\n                <artifactId>jdbi3-core</artifactId>\n                <version>${dep.jdbi3.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jdbi</groupId>\n                <artifactId>jdbi3-sqlobject</artifactId>\n                <version>${dep.jdbi3.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.squareup.okhttp3</groupId>\n                <artifactId>okhttp</artifactId>\n                <version>${dep.okhttp.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.squareup.okhttp3</groupId>\n                <artifactId>okhttp-urlconnection</artifactId>\n                <version>${dep.okhttp.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.squareup.okhttp3</groupId>\n                <artifactId>mockwebserver</artifactId>\n                <version>${dep.okhttp.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.jsonwebtoken</groupId>\n                <artifactId>jjwt-api</artifactId>\n                <version>0.11.5</version>\n            </dependency>\n            <dependency>\n                <groupId>io.jsonwebtoken</groupId>\n                <artifactId>jjwt-impl</artifactId>\n                <version>0.11.5</version>\n                <scope>runtime</scope>\n            </dependency>\n            <dependency>\n                <groupId>io.jsonwebtoken</groupId>\n                <artifactId>jjwt-jackson</artifactId>\n                <version>0.11.5</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.thrift</groupId>\n                <artifactId>libthrift</artifactId>\n                <version>0.9.3</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.apache.httpcomponents</groupId>\n                        <artifactId>httpcore</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.httpcomponents</groupId>\n                        <artifactId>httpclient</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <!-- Start dependencies for querying Hudi table-->\n            <dependency>\n                <groupId>org.apache.hudi</groupId>\n                <artifactId>hudi-presto-bundle</artifactId>\n                <version>${dep.hudi.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.google.protobuf</groupId>\n                        <artifactId>protobuf-java</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>commons-lang</groupId>\n                        <artifactId>commons-lang</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.hudi</groupId>\n                        <artifactId>hudi-common</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.hudi</groupId>\n                        <artifactId>hudi-hadoop-mr-bundle</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.parquet</groupId>\n                        <artifactId>parquet-avro</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.avro</groupId>\n                        <artifactId>avro</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.objenesis</groupId>\n                        <artifactId>objenesis</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <!-- End dependencies for querying Hudi table-->\n\n            <dependency>\n                <groupId>net.sf.opencsv</groupId>\n                <artifactId>opencsv</artifactId>\n                <version>2.3</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-math3</artifactId>\n                <version>3.6.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-text</artifactId>\n                <version>1.10.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift.discovery</groupId>\n                <artifactId>discovery-server</artifactId>\n                <version>1.33</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.alluxio</groupId>\n                <artifactId>alluxio-shaded-client</artifactId>\n                <version>${dep.alluxio.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-log4j12</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>log4j</groupId>\n                        <artifactId>log4j</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.amazonaws</groupId>\n                <artifactId>aws-java-sdk-core</artifactId>\n                <version>${dep.aws-sdk.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>joda-time</groupId>\n                        <artifactId>joda-time</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.httpcomponents</groupId>\n                        <artifactId>httpclient</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.amazonaws</groupId>\n                <artifactId>aws-java-sdk-glue</artifactId>\n                <version>${dep.aws-sdk.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>joda-time</groupId>\n                        <artifactId>joda-time</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.amazonaws</groupId>\n                <artifactId>aws-java-sdk-s3</artifactId>\n                <version>${dep.aws-sdk.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>joda-time</groupId>\n                        <artifactId>joda-time</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.auth</groupId>\n                <artifactId>google-auth-library-oauth2-http</artifactId>\n                <version>0.12.0</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.cloud.bigdataoss</groupId>\n                <artifactId>util</artifactId>\n                <version>${dep.gcs.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.google.guava</groupId>\n                        <artifactId>guava</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-core</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <artifactId>commons-logging</artifactId>\n                        <groupId>commons-logging</groupId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.cloud.bigdataoss</groupId>\n                <artifactId>gcsio</artifactId>\n                <version>${dep.gcs.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.google.guava</groupId>\n                        <artifactId>guava</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-core</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.cloud.bigdataoss</groupId>\n                <artifactId>util-hadoop</artifactId>\n                <version>hadoop2-${dep.gcs.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.google.guava</groupId>\n                        <artifactId>guava</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-core</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.druid</groupId>\n                <artifactId>druid-processing</artifactId>\n                <version>${dep.druid.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-annotations</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-core</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-databind</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.datatype</groupId>\n                        <artifactId>jackson-datatype-guava</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.datatype</groupId>\n                        <artifactId>jackson-datatype-joda</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.dataformat</groupId>\n                        <artifactId>jackson-dataformat-smile</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>it.unimi.dsi</groupId>\n                        <artifactId>fastutil</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>joda-time</groupId>\n                        <artifactId>joda-time</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.commons</groupId>\n                        <artifactId>commons-lang3</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.logging.log4j</groupId>\n                        <artifactId>log4j-slf4j-impl</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.logging.log4j</groupId>\n                        <artifactId>log4j-1.2-api</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.checkerframework</groupId>\n                        <artifactId>checker-qual</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.glassfish</groupId>\n                        <artifactId>javax.el</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.objenesis</groupId>\n                        <artifactId>objenesis</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.ow2.asm</groupId>\n                        <artifactId>asm-commons</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.roaringbitmap</groupId>\n                        <artifactId>RoaringBitmap</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpclient</artifactId>\n                <version>4.5.5</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpcore</artifactId>\n                <version>4.4.9</version>\n            </dependency>\n\n            <dependency>\n                <groupId>commons-codec</groupId>\n                <artifactId>commons-codec</artifactId>\n                <version>1.17.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.cloud.bigdataoss</groupId>\n                <artifactId>gcs-connector</artifactId>\n                <version>hadoop2-${dep.gcs.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <artifactId>log4j</artifactId>\n                        <groupId>log4j</groupId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-log4j12</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-core</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.google.guava</groupId>\n                        <artifactId>guava</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.amazonaws</groupId>\n                <artifactId>aws-java-sdk-sts</artifactId>\n                <version>${dep.aws-sdk.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>joda-time</groupId>\n                        <artifactId>joda-time</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>testing-mysql-server-5</artifactId>\n                <version>${dep.testing-mysql-server-5.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>testing-mysql-server-base</artifactId>\n                <version>${dep.testing-mysql-server-5.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.airlift</groupId>\n                <artifactId>testing-postgresql-server</artifactId>\n                <version>9.6.3-4</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.kafka</groupId>\n                <artifactId>kafka_2.12</artifactId>\n                <version>${dep.kafka.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>log4j</groupId>\n                        <artifactId>log4j</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-log4j12</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.xerial.snappy</groupId>\n                        <artifactId>snappy-java</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-annotations</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-core</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-databind</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.datatype</groupId>\n                        <artifactId>jackson-datatype-jdk8</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.thoughtworks.paranamer</groupId>\n                        <artifactId>paranamer</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.scala-lang</groupId>\n                        <artifactId>scala-library</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.101tec</groupId>\n                        <artifactId>zkclient</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.apache.zookeeper</groupId>\n                        <artifactId>zookeeper</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.ratis</groupId>\n                <artifactId>ratis-server</artifactId>\n                <version>${dep.ratis.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.ratis</groupId>\n                <artifactId>ratis-grpc</artifactId>\n                <version>${dep.ratis.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.ratis</groupId>\n                <artifactId>ratis-server-api</artifactId>\n                <version>${dep.ratis.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.ratis</groupId>\n                <artifactId>ratis-common</artifactId>\n                <version>${dep.ratis.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.ratis</groupId>\n                <artifactId>ratis-client</artifactId>\n                <version>${dep.ratis.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.kafka</groupId>\n                <artifactId>kafka-clients</artifactId>\n                <version>${dep.kafka.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.xerial.snappy</groupId>\n                        <artifactId>snappy-java</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.github.luben</groupId>\n                        <artifactId>zstd-jni</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.pinot</groupId>\n                <artifactId>presto-pinot-driver</artifactId>\n                <version>${dep.pinot.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.xerial.snappy</groupId>\n                <artifactId>snappy-java</artifactId>\n                <version>1.1.10.4</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.github.luben</groupId>\n                <artifactId>zstd-jni</artifactId>\n                <version>1.5.2-3</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.roaringbitmap</groupId>\n                <artifactId>RoaringBitmap</artifactId>\n                <version>0.9.3</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.zookeeper</groupId>\n                <artifactId>zookeeper</artifactId>\n                <version>3.4.14</version>\n                <exclusions>\n                    <exclusion>\n                        <artifactId>jline</artifactId>\n                        <groupId>jline</groupId>\n                    </exclusion>\n                    <exclusion>\n                        <artifactId>log4j</artifactId>\n                        <groupId>log4j</groupId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-log4j12</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.checkerframework</groupId>\n                <artifactId>checker-qual</artifactId>\n                <version>3.37.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jgrapht</groupId>\n                <artifactId>jgrapht-core</artifactId>\n                <version>1.3.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>redis.clients</groupId>\n                <artifactId>jedis</artifactId>\n                <version>2.6.2</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.orange.redis-embedded</groupId>\n                <artifactId>embedded-redis</artifactId>\n                <version>0.6</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.prestodb.tempto</groupId>\n                <artifactId>tempto-core</artifactId>\n                <version>${dep.tempto.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.datastax.cassandra</groupId>\n                        <artifactId>cassandra-driver-core</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.google.code.findbugs</groupId>\n                        <artifactId>annotations</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>io.prestodb.tempto</groupId>\n                <artifactId>tempto-ldap</artifactId>\n                <version>${dep.tempto.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.datastax.cassandra</groupId>\n                        <artifactId>cassandra-driver-core</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>io.prestodb.tempto</groupId>\n                <artifactId>tempto-kafka</artifactId>\n                <version>${dep.tempto.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.datastax.cassandra</groupId>\n                        <artifactId>cassandra-driver-core</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-log4j12</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>io.prestodb.tempto</groupId>\n                <artifactId>tempto-runner</artifactId>\n                <version>${dep.tempto.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.datastax.cassandra</groupId>\n                        <artifactId>cassandra-driver-core</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto.hive</groupId>\n                <artifactId>hive-apache-jdbc</artifactId>\n                <version>0.13.1-5</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.esri.geometry</groupId>\n                <artifactId>esri-geometry-api</artifactId>\n                <version>2.2.4</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.fasterxml.jackson.core</groupId>\n                        <artifactId>jackson-core</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.lucene</groupId>\n                <artifactId>lucene-analyzers-common</artifactId>\n                <version>${dep.lucene.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.lucene</groupId>\n                <artifactId>lucene-queryparser</artifactId>\n                <version>${dep.lucene.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.locationtech.jts</groupId>\n                <artifactId>jts-core</artifactId>\n                <version>1.19.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.locationtech.jts.io</groupId>\n                <artifactId>jts-io-common</artifactId>\n                <version>1.19.0</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>junit</groupId>\n                        <artifactId>junit</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.anarres.lzo</groupId>\n                <artifactId>lzo-hadoop</artifactId>\n                <version>1.0.5</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.apache.hadoop</groupId>\n                        <artifactId>hadoop-core</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.google.code.findbugs</groupId>\n                        <artifactId>annotations</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.myanmartools</groupId>\n                <artifactId>myanmar-tools</artifactId>\n                <version>1.1.3</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-delta</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto.ranger</groupId>\n                <artifactId>ranger-apache</artifactId>\n                <version>2.1.0-3</version>\n            </dependency>\n\n            <!-- force newer version to be used for dependencies -->\n            <dependency>\n                <groupId>org.javassist</groupId>\n                <artifactId>javassist</artifactId>\n                <version>3.22.0-GA</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.starburstdata</groupId>\n                <artifactId>starburst-spotify-docker-client</artifactId>\n                <version>8.11.7-0.6</version>\n            </dependency>\n\n            <dependency>\n                <groupId>net.jodah</groupId>\n                <artifactId>failsafe</artifactId>\n                <version>2.0.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.presto.spark</groupId>\n                <artifactId>spark-core</artifactId>\n                <version>2.0.2-6</version>\n                <scope>provided</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>com.clearspring.analytics</groupId>\n                <artifactId>stream</artifactId>\n                <version>2.9.5</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-api</artifactId>\n                <version>1.19.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-context</artifactId>\n                <version>1.19.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-exporter-otlp</artifactId>\n                <version>1.19.0</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.squareup.okhttp3</groupId>\n                        <artifactId>okhttp</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-extension-trace-propagators</artifactId>\n                <version>1.19.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-sdk</artifactId>\n                <version>1.19.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-sdk-common</artifactId>\n                <version>1.19.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-sdk-trace</artifactId>\n                <version>1.19.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-semconv</artifactId>\n                <version>1.19.0-alpha</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.datasketches</groupId>\n                <artifactId>datasketches-memory</artifactId>\n                <version>2.2.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.datasketches</groupId>\n                <artifactId>datasketches-java</artifactId>\n                <version>5.0.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.errorprone</groupId>\n                <artifactId>error_prone_annotations</artifactId>\n                <version>${dep.errorprone.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.j2objc</groupId>\n                <artifactId>j2objc-annotations</artifactId>\n                <version>${dep.j2objc.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.avro</groupId>\n                <artifactId>avro</artifactId>\n                <version>${dep.avro.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-compress</artifactId>\n                <version>${dep.commons.compress.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.datastax.cassandra</groupId>\n                <artifactId>cassandra-driver-core</artifactId>\n                <version>3.11.5</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.yaml</groupId>\n                <artifactId>snakeyaml</artifactId>\n                <version>${dep.snakeyaml.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-dbcp2</artifactId>\n                <version>2.12.0</version>\n            </dependency>\n\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.antlr</groupId>\n                    <artifactId>antlr4-maven-plugin</artifactId>\n                    <version>${dep.antlr.version}</version>\n                    <executions>\n                        <execution>\n                            <goals>\n                                <goal>antlr4</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <configuration>\n                        <visitor>true</visitor>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-shade-plugin</artifactId>\n                    <version>3.6.0</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.skife.maven</groupId>\n                    <artifactId>really-executable-jar-maven-plugin</artifactId>\n                    <version>2.1.1</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-antrun-plugin</artifactId>\n                    <version>1.8</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>exec-maven-plugin</artifactId>\n                    <version>1.6.0</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>com.facebook.drift</groupId>\n                    <artifactId>drift-maven-plugin</artifactId>\n                    <version>${dep.drift.version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.gaul</groupId>\n                    <artifactId>modernizer-maven-plugin</artifactId>\n                    <configuration>\n                        <violationsFiles>\n                            <violationsFile>${air.main.basedir}/src/modernizer/violations.xml</violationsFile>\n                        </violationsFiles>\n                        <exclusionPatterns>\n                            <exclusionPattern>org/joda/time/.*</exclusionPattern>\n                        </exclusionPatterns>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-enforcer-plugin</artifactId>\n                    <version>3.3.0</version>\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.codehaus.mojo</groupId>\n                            <artifactId>extra-enforcer-rules</artifactId>\n                            <version>1.6.2</version>\n                        </dependency>\n                    </dependencies>\n                    <configuration>\n                        <rules>\n                            <requireUpperBoundDeps>\n                                <excludes combine.children=\"append\">\n                                    <!-- TODO: fix this in Airlift resolver -->\n                                    <exclude>org.alluxio:alluxio-shaded-client</exclude>\n                                    <exclude>org.codehaus.plexus:plexus-utils</exclude>\n                                    <exclude>com.google.guava:guava</exclude>\n                                    <exclude>com.fasterxml.jackson.core:jackson-annotations</exclude>\n                                    <exclude>com.fasterxml.jackson.core:jackson-core</exclude>\n                                    <exclude>com.fasterxml.jackson.core:jackson-databind</exclude>\n                                </excludes>\n                            </requireUpperBoundDeps>\n                        </rules>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.basepom.maven</groupId>\n                    <artifactId>duplicate-finder-maven-plugin</artifactId>\n                    <configuration>\n                        <ignoredClassPatterns combine.children=\"append\">\n                            <!-- Duplicate class is being brought in by commons-io & log4j-api -->\n                            <ignoredClassPattern>META-INF.versions.9.module-info</ignoredClassPattern>\n                            <!-- Duplicate class is being brought in by several netty dependencies-->\n                            <ignoredClassPattern>META-INF.versions.11.module-info</ignoredClassPattern>\n                            <!-- Ignore duplicate classes related to lucene-core and ranger-apache -->\n                            <ignoredClassPattern>META-INF.versions.9.org.apache.lucene.*</ignoredClassPattern>\n                        </ignoredClassPatterns>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-release-plugin</artifactId>\n                    <configuration>\n                        <preparationGoals>clean verify -DskipTests</preparationGoals>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.sonatype.plugins</groupId>\n                    <artifactId>nexus-staging-maven-plugin</artifactId>\n                    <version>${dep.nexus-staging-plugin.version}</version>\n                    <!-- This plugin is not registered as an extension because it will fail to activate\n                         concurrently with the Maven Provisio plugin, as that has its own deployment lifecycle -->\n                    <configuration>\n                        <serverId>ossrh</serverId>\n                        <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>com.facebook.presto</groupId>\n                    <artifactId>presto-maven-plugin</artifactId>\n                    <version>0.4</version>\n                    <extensions>true</extensions>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.xolstice.maven.plugins</groupId>\n                    <artifactId>protobuf-maven-plugin</artifactId>\n                    <version>0.5.1</version>\n                </plugin>\n\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <groupId>com.facebook.presto</groupId>\n                <artifactId>presto-maven-plugin</artifactId>\n            </plugin>\n\n            <plugin>\n                <groupId>ca.vanzyl.provisio.maven.plugins</groupId>\n                <artifactId>provisio-maven-plugin</artifactId>\n                <version>1.0.18</version>\n                <extensions>true</extensions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration combine.children=\"append\">\n                    <fork>false</fork>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>3.0.0-M7</version>\n                <configuration combine.children=\"append\">\n                    <includes>\n                        <include>**/Test*.java</include>\n                        <include>**/Benchmark*.java</include>\n                    </includes>\n                    <excludes>\n                        <exclude>**/*jmhTest*.java</exclude>\n                        <exclude>**/*jmhType*.java</exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n\n            <!-- Always build a jar with the test classes -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <configuration>\n                    <!-- do not build an empty jar if the project is\n                         e.g. a pom project -->\n                    <skipIfEmpty>true</skipIfEmpty>\n                    <archive>\n                        <manifest>\n                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n                            <addClasspath>false</addClasspath>\n                        </manifest>\n                        <manifestEntries>\n                            <!-- This is actually the time when the build was done -->\n                            <Build-Time>${git.build.time}</Build-Time>\n                            <Git-Commit-Id>${git.commit.id}</Git-Commit-Id>\n                            <Implementation-Version>${project.version}-${git.commit.id.abbrev}</Implementation-Version>\n                        </manifestEntries>\n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>de.qaware.maven</groupId>\n                <artifactId>go-offline-maven-plugin</artifactId>\n                <version>1.2.8</version>\n                <configuration>\n                    <dynamicDependencies>\n                        <DynamicDependency>\n                            <groupId>org.apache.maven.surefire</groupId>\n                            <artifactId>surefire-testng</artifactId>\n                            <version>3.0.0-M7</version>\n                            <repositoryType>PLUGIN</repositoryType>\n                        </DynamicDependency>\n                        <DynamicDependency>\n                            <groupId>org.apache.maven.surefire</groupId>\n                            <artifactId>surefire-junit4</artifactId>\n                            <version>3.0.0-M7</version>\n                            <repositoryType>PLUGIN</repositoryType>\n                        </DynamicDependency>\n                        <DynamicDependency>\n                            <groupId>com.google.protobuf</groupId>\n                            <artifactId>protoc</artifactId>\n                            <version>3.0.0</version>\n                            <classifier>${os.detected.classifier}</classifier>\n                            <type>exe</type>\n                            <repositoryType>PLUGIN</repositoryType>\n                        </DynamicDependency>\n                        <DynamicDependency>\n                            <groupId>io.grpc</groupId>\n                            <artifactId>protoc-gen-grpc-java</artifactId>\n                            <version>1.0.0</version>\n                            <classifier>${os.detected.classifier}</classifier>\n                            <type>exe</type>\n                            <repositoryType>PLUGIN</repositoryType>\n                        </DynamicDependency>\n                        <DynamicDependency>\n                            <groupId>com.querydsl</groupId>\n                            <artifactId>querydsl-apt</artifactId>\n                            <version>4.2.1</version>\n                            <classifier>jpa</classifier>\n                            <repositoryType>MAIN</repositoryType>\n                        </DynamicDependency>\n                        <DynamicDependency>\n                            <groupId>org.flywaydb</groupId>\n                            <artifactId>flyway-commandline</artifactId>\n                            <version>4.0.3</version>\n                            <type>zip</type>\n                            <repositoryType>MAIN</repositoryType>\n                        </DynamicDependency>\n                    </dynamicDependencies>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.7</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>ui</id>\n            <activation>\n                <property>\n                    <name>!skipUI</name>\n                </property>\n            </activation>\n            <modules>\n                <module>presto-ui</module>\n            </modules>\n            <dependencyManagement>\n                <dependencies>\n                    <dependency>\n                        <groupId>com.facebook.presto</groupId>\n                        <artifactId>presto-ui</artifactId>\n                        <version>${project.version}</version>\n                        <scope>runtime</scope>\n                    </dependency>\n                </dependencies>\n            </dependencyManagement>\n        </profile>\n        <profile>\n            <id>tests-with-dependencies</id>\n            <!--\n                Assembles an uber (fat) jar that includes the entire \"test\" scope classpath for a module.\n\n                For example after running:\n\n                ./mvnw clean install -P tests-with-dependencies -pl presto-geospatial\n\n                The uber jar that contains the entire \"test\" scope class path of the \"presto-geospatial\"\n                is created and placed to that modules target directory:\n\n                ./presto-geospatial/target/presto-geospatial-0.197-SNAPSHOT-tests-with-dependencies.jar\n\n                Now using this jar we can easily run any benchmark from that module via command line:\n\n                java \\\n                  -cp ./presto-geospatial/target/presto-geospatial-*-tests-with-dependencies.jar \\\n                  com.facebook.presto.geospatial.BenchmarkSTIntersects\n            -->\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-assembly-plugin</artifactId>\n                        <configuration>\n                            <descriptor>${air.main.basedir}/src/assembly/tests-with-dependencies.xml</descriptor>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>make-assembly</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>single</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>deploy-to-ossrh</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-deploy-plugin</artifactId>\n                        <configuration>\n                            <skip>true</skip>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.sonatype.plugins</groupId>\n                        <artifactId>nexus-staging-maven-plugin</artifactId>\n                        <!-- This plugin must be configured manually (\"Maven 2\" style in the docs) due to the usage of the\n                             Maven Provisio plugin, which includes its own deployment lifecycle -->\n                        <executions>\n                            <execution>\n                                <id>default-deploy</id>\n                                <phase>deploy</phase>\n                                <goals>\n                                    <goal>deploy</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <serverId>ossrh</serverId>\n                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>3.2.4</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                                <configuration>\n                                    <gpgArguments>\n                                        <arg>--pinentry-mode</arg>\n                                        <arg>loopback</arg>\n                                    </gpgArguments>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>out-of-tree-build</id>\n            <activation>\n                <activeByDefault>false</activeByDefault>\n                <property>\n                    <name>out-of-tree-build-root</name>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>exec-maven-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>unlink-out-of-tree-build-directory</id>\n                                <goals><goal>exec</goal></goals>\n                                <phase>pre-clean</phase>\n                                <configuration>\n                                    <executable>rm</executable>\n                                    <arguments>\n                                        <argument>-rf</argument>\n                                        <argument>${project.build.directory}</argument>\n                                    </arguments>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>remove-out-of-tree-build-directory</id>\n                                <goals><goal>exec</goal></goals>\n                                <phase>pre-clean</phase>\n                                <configuration>\n                                    <executable>rm</executable>\n                                    <arguments>\n                                        <argument>-rf</argument>\n                                        <argument>${out-of-tree-build-root}/${project.groupId}:${project.artifactId}</argument>\n                                    </arguments>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>create-out-of-tree-build-directory</id>\n                                <goals><goal>exec</goal></goals>\n                                <phase>validate</phase>\n                                <configuration>\n                                    <executable>mkdir</executable>\n                                    <arguments>\n                                        <argument>-p</argument>\n                                        <argument>${out-of-tree-build-root}/${project.groupId}:${project.artifactId}</argument>\n                                    </arguments>\n                                </configuration>\n                            </execution>\n                            <execution>\n                                <id>link-out-of-tree-build-directory</id>\n                                <goals><goal>exec</goal></goals>\n                                <phase>validate</phase>\n                                <configuration>\n                                    <executable>ln</executable>\n                                    <arguments>\n                                        <argument>-sfT</argument>\n                                        <argument>${out-of-tree-build-root}/${project.groupId}:${project.artifactId}</argument>\n                                        <argument>${project.build.directory}</argument>\n                                    </arguments>\n                                </configuration>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <longModulepath>false</longModulepath>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-checkstyle-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>checkstyle</id>\n                                <configuration>\n                                    <cacheFile>${out-of-tree-build-root}/${project.groupId}:${project.artifactId}/checkstyle-cachefile</cacheFile>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "presto-accumulo",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-analyzer",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-atop",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-base-jdbc",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-benchmark-driver",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-benchmark-runner",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-benchto-benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-bigquery",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-blackhole",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-bytecode",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-cassandra",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-clickhouse",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-cluster-ttl-providers",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-delta",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-druid",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-elasticsearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-example-http",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-expressions",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-function-namespace-managers",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-geospatial-toolkit",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-google-sheets",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-grpc-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-grpc-testing-udf-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-hana",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-hdfs-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-hive-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-hive-function-namespace",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-hive-hadoop2",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-hive-metastore",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-hive",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-hudi",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-i18n-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-iceberg",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-jdbc",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-jmx",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-kafka",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-kudu",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-lark-sheets",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-local-file",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-main",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-matching",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-memory-context",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-memory",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-ml",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-mongodb",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-mysql",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-native-execution",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-native-sidecar-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-node-ttl-fetchers",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-open-telemetry",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-openapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-oracle",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-orc",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-parquet",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-parser",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-password-authenticators",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-pinot-toolkit",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-pinot",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-plugin-toolkit",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-postgresql",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-product-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-prometheus",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-proxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-rcfile",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-record-decoder",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-redis",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-redshift",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-resource-group-managers",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-router",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-session-property-managers",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-singlestore",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-spark-base",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-spark-classloader-interface",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-spark-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-spark-launcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-spark-package",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-spark-testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-spark",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-spi",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-sqlserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-teradata-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-test-coverage",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-testing-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-testing-server-launcher",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-testng-services",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-thrift-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-thrift-connector",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-thrift-spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-thrift-testing-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-thrift-testing-udf-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-tpcds",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-tpch",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "presto-verifier",
          "type": "tree",
          "content": null
        },
        {
          "name": "pull_request_template.md",
          "type": "blob",
          "size": 1.53515625,
          "content": "## Description\n<!---Describe your changes in detail-->\n\n## Motivation and Context\n<!---Why is this change required? What problem does it solve?-->\n<!---If it fixes an open issue, please link to the issue here.-->\n\n## Impact\n<!---Describe any public API or user-facing feature change or any performance impact-->\n\n## Test Plan\n<!---Please fill in how you tested your change-->\n\n## Contributor checklist\n\n- [ ] Please make sure your submission complies with our [contributing guide](https://github.com/prestodb/presto/blob/master/CONTRIBUTING.md), in particular [code style](https://github.com/prestodb/presto/blob/master/CONTRIBUTING.md#code-style) and [commit standards](https://github.com/prestodb/presto/blob/master/CONTRIBUTING.md#commit-standards).\n- [ ] PR description addresses the issue accurately and concisely.  If the change is non-trivial, a GitHub Issue is referenced.\n- [ ] Documented new properties (with its default value), SQL syntax, functions, or other functionality.\n- [ ] If release notes are required, they follow the [release notes guidelines](https://github.com/prestodb/presto/wiki/Release-Notes-Guidelines).\n- [ ] Adequate tests were added if applicable.\n- [ ] CI passed.\n\n## Release Notes\nPlease follow [release notes guidelines](https://github.com/prestodb/presto/wiki/Release-Notes-Guidelines) and fill in the release notes below.\n\n```\n== RELEASE NOTES ==\n\nGeneral Changes\n* ... :pr:`12345`\n* ... :pr:`12345`\n\nHive Connector Changes\n* ... :pr:`12345`\n* ... :pr:`12345`\n```\n\nIf release note is NOT required, use:\n\n```\n== NO RELEASE NOTE ==\n```\n\n"
        },
        {
          "name": "redis-hbo-provider",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}