{
  "metadata": {
    "timestamp": 1736708880834,
    "page": 99,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Bigkoo/Android-PickerView",
      "stars": 13460,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3310546875,
          "content": "# built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated files\nbin/\ngen/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Eclipse project files\n.classpath\n.project\n\n# Android Studio\n.idea/\n.gradle\n/*/local.properties\n/*/out\nbuild\n/*/*/production\n*.iml\n*.iws\n*.ipr\n*~\n*.swp"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README-en.md",
          "type": "blob",
          "size": 9.9375,
          "content": "\n# Android-PickerView\n\n\n\n[![API](https://img.shields.io/badge/API-9%2B-brightgreen.svg)](https://android-arsenal.com/api?level=9) \n[![license](https://img.shields.io/hexpm/l/plug.svg)](http://www.apache.org/licenses/LICENSE-2.0)\n\n#### Show some :heart: and :stars: the repo to support the project\n[![GitHub stars](https://img.shields.io/github/stars/Bigkoo/Android-PickerView.svg?style=social)](https://github.com/Bigkoo/Android-PickerView/stargazers) [![GitHub forks](https://img.shields.io/github/forks/Bigkoo/Android-PickerView.svg?style=social)](https://github.com/Bigkoo/Android-PickerView/network) [![GitHub watchers](https://img.shields.io/github/watchers/Bigkoo/Android-PickerView.svg?style=social)](https://github.com/Bigkoo/Android-PickerView/watchers)\n\n#### [中文文档](https://github.com/Bigkoo/Android-PickerView/blob/master/README.md)\n\n## Introduction\n\nThis is a library for android to pick date or options like IOS system WheelView widget.\nand support for the linkage, dialog . It's very easy to use ,  you also can customize layout, which make it very customizable.\n\n\n* there are two options called OptionsPickerView and TimePickerView\n\n* OptionsPickerView supports three levels of linkage\n\n* TimePickerView support selection date range\n\n* support \"year, month, day, hour, minute, second\", \"provincial, city, district\" and other options of the unit (label) show or hide and customize label.\n\n* supports custom text, color, text size, etc.\n\n* If Item text length is too long, it will be adapted to the length of the Item to avoid the problem of incomplete display\n\n\n\n# How to use\n\n\n## 1.Add the dependency：\n\n### Gradle\n\n```java\ncompile 'com.contrarywind:Android-PickerView:4.1.9'\n```\n\n### Maven\n\n```\n<dependency>\n<groupId>com.contrarywind</groupId>\n<artifactId>Android-PickerView</artifactId>\n<version>4.1.8</version>\n<type>pom</type>\n</dependency>\n```\n\n## 2.Add the following code in your Activity：\n\n```java\n//TimePicker\n pvTime = new TimePickerBuilder(this, new OnTimeSelectListener() {\n            @Override\n            public void onTimeSelect(Date date,View v) {//Callback\n                tvTime.setText(getTime(date));\n            }\n        })\n             .build();\n pvTime.show();\n```\n\n```java\n//OptionsPicker\n pvOptions = new OptionsPickerBuilder(this, new OnOptionsSelectListener() {\n            @Override\n            public void onOptionsSelect(int options1, int option2, int options3 ,View v) {\n                ////Callback\n                String tx = options1Items.get(options1).getPickerViewText()\n                        + options2Items.get(options1).get(option2)\n                        + options3Items.get(options1).get(option2).get(options3).getPickerViewText();\n                tvOptions.setText(tx);\n            }\n        }).build();\n\n //pvOptions.setPicker(options1Items);\n pvOptions.setPicker(options1Items, options2Items);\n //pvOptions.setPicker(options1Items, options2Items, options3Items);\n pvOptions.show();\n```\n## Just so easy ~\n\n\n### Notes（2017-7-10）\n- when we start setting the date, we need to pay special attention.\n\n- reason: the internal component of the Calendar adds 1 processing, which made the month's number of  count reduced one.\n- error usage case:\n\n>StartDate.set (2013,1,1);\n\n>EndDate.set (2020,12,31);\n\n- correct use case:\n\n>StartDate.set (2013,0,1);\n\n>EndDate.set (2020,11,31);\n</br>\n\n\nIf the default style does not meet your expectations, You can also customize attributes to apply\n\n## Customize Useage：\n```java\n Calendar selectedDate = Calendar.getInstance();\n Calendar startDate = Calendar.getInstance();\n startDate.set(2013,0,1);\n Calendar endDate = Calendar.getInstance();\n endDate.set(2020,11,1);\n\n pvTime = new TimePickerBuilder(this, new OnTimeSelectListener() {\n            @Override\n            public void onTimeSelect(Date date,View v) {//callback\n                tvTime.setText(getTime(date));\n            }\n        })\n                .setType(new boolean[]{false, false, false, true, true, false})// type of date \n                .setCancelText(\"Cancel\")\n                .setSubmitText(\"Sure\")\n                .setContentSize(18)\n                .setTitleSize(20)\n                .setTitleText(\"Title\")\n                .setOutSideCancelable(false)// default is true\n                .isCyclic(true)// default is false\n                .setTitleColor(Color.BLACK)\n                .setSubmitColor(Color.BLUE)\n                .setCancelColor(Color.BLUE)\n                .setTitleBgColor(0xFF666666)//night mode\n                .setBgColor(0xFF333333)//night mode\n                .setRangDate(startDate,endDate)\n                .setLabel(\"year\",\"month\",\"day\",\"hours\",\"mins\",\"seconds\")\n                .build();\n```\n\n```java\npvOptions = new OptionsPickerBuilder(this, new OnOptionsSelectListener() {\n            @Override\n            public void onOptionsSelect(int options1, int option2, int options3 ,View v) {\n                ////Callback\n                String tx = options1Items.get(options1).getPickerViewText()\n                        + options2Items.get(options1).get(option2)\n                        + options3Items.get(options1).get(option2).get(options3).getPickerViewText();\n                tvOptions.setText(tx);\n            }\n        })\n                .setSubmitText(\"sure\")\n                .setCancelText(\"cancel\")\n                .setTitleText(\"title\")\n                .setSubCalSize(18)\n                .setTitleSize(20)\n                .setTitleColor(Color.BLACK)\n                .setSubmitColor(Color.BLUE)\n                .setCancelColor(Color.BLUE)\n                .setTitleBgColor(0xFF666666)//night mode\n                .setBgColor(0xFF444444)//night mode\n                .setContentTextSize(18)\n                .setLinkage(false)\n                .isCenterLabel(false) //default is true , if you choose false , the label text will add to all item ContentText right\n                .setLabels(\"province\", \"city\", \"district\")\n                .setCyclic(false, false, false)\n                .setSelectOptions(0, 0, 0)  //default options\n                .setOutSideCancelable(false)//dismiss， default is true\n                .isRestoreItem(true)// restore option with first item when select changed。\n                .build();\n\n        pvOptions.setPicker(options1Items, options2Items, options3Items);\n```\n## Customize Layout：\n```java\n  private void initCustomTimePicker() {\n        // be careful：In the custom layout， the layout of the ID for optionspicker\n        // or TimePicker and its child widget must not be modified,\n        // otherwise  will be reported NullPointerException\n        // For more details， Please refer to the two custom layouts in demo\n\n        Calendar selectedDate = Calendar.getInstance();//System current time\n        Calendar startDate = Calendar.getInstance();\n        startDate.set(2013,1,23);\n        Calendar endDate = Calendar.getInstance();\n        endDate.set(2019,2,28);\n\n        pvCustomTime = new TimePickerBuilder(this, new OnTimeSelectListener() {\n            @Override\n            public void onTimeSelect(Date date, View v) {//call back\n                btn_CustomTime.setText(getTime(date));\n            }\n        })       .setType(new boolean[]{true, true, true, false, false, false})// year - month - day\n                .setDate(selectedDate)\n                .setRangDate(startDate,endDate)\n                .setLayoutRes(R.layout.pickerview_custom_time, new CustomListener() {\n\n                    @Override\n                    public void customLayout(View v) {\n                        final TextView tvSubmit = (TextView) v.findViewById(R.id.tv_finish);\n                        ImageView ivCancel = (ImageView) v.findViewById(R.id.iv_cancel);\n                        tvSubmit.setOnClickListener(new View.OnClickListener() {\n                            @Override\n                            public void onClick(View v) {\n                                pvCustomTime.returnData(tvSubmit);\n                            }\n                        });\n                        ivCancel.setOnClickListener(new View.OnClickListener() {\n                            @Override\n                            public void onClick(View v) {\n                                pvCustomTime.dismiss();\n                            }\n                        });\n                    }\n                })\n                .setDividerColor(Color.BLACK)\n                .build();\n\n    }\n```\n\n## If you need to set the non-linkage data：\n\n```java\npvNoLinkOptions = new OptionsPickerBuilder(this, new OnOptionsSelectListener() {\n\n            @Override\n            public void onOptionsSelect(int options1, int options2, int options3, View v) {\n\n                String str = \"food:\"+food.get(options1)\n                        +\"\\nclothes:\"+clothes.get(options2)\n                        +\"\\ncomputer:\"+computer.get(options3);\n\n                Toast.makeText(MainActivity.this,str,Toast.LENGTH_SHORT).show();\n            }\n        }).build();\n        pvNoLinkOptions.setNPicker(food,clothes,computer);\n        pvNoLinkOptions.show();\n```\n\n## For more detail, please refer to the Demo code, If there is still doubt about you, please [New Issue](https://github.com/Bigkoo/Android-PickerView/issues) \n\n###  [Here is demo code](https://github.com/Bigkoo/Android-PickerView/blob/master/app/src/main/java/com/bigkoo/pickerviewdemo/MainActivity.java)\n\n###  [Methods-and-parameters](https://github.com/Bigkoo/Android-PickerView/wiki/Methods-and-parameters)\n\n\n## Thanks\n\n- [WheelView](https://github.com/venshine/WheelView)\n- [androidWheelView](https://github.com/weidongjian/androidWheelView/)\n\n# License\n\n```\nCopyright 2014 Bigkoo\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.2236328125,
          "content": "## 注意⚠️：已停止更新，原有版本jcenter库可以继续使用。建议直接下载源码引入 module 到自己项目改造。\n\n## Android-PickerView\n[![API](https://img.shields.io/badge/API-9%2B-brightgreen.svg)](https://android-arsenal.com/api?level=9) \n[![License](https://img.shields.io/badge/license-Apache%202-green.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n[![Download](https://api.bintray.com/packages/contrarywind/maven/Android-PickerView/images/download.svg) ](https://bintray.com/contrarywind/maven/Android-PickerView/_latestVersion)\n\n[![GitHub stars](https://img.shields.io/github/stars/Bigkoo/Android-PickerView.svg?style=social)](https://github.com/Bigkoo/Android-PickerView/stargazers) [![GitHub forks](https://img.shields.io/github/forks/Bigkoo/Android-PickerView.svg?style=social)](https://github.com/Bigkoo/Android-PickerView/network) [![GitHub watchers](https://img.shields.io/github/watchers/Bigkoo/Android-PickerView.svg?style=social)](https://github.com/Bigkoo/Android-PickerView/watchers)\n\n### [English Document](https://github.com/Bigkoo/Android-PickerView/blob/master/README-en.md)\n\n### 注意事项、详请使用方式、更新日志等，请查看 [Wiki文档](https://github.com/Bigkoo/Android-PickerView/wiki)\n**Wiki文档，Wiki文档，Wiki文档 !~ 重要的事情说三遍**\n\n#### 对于使用上有任何疑问或优化建议等，欢迎加入QQ群讨论交流技术问题。\n\n交流群1： 387051294（已满）\n\n交流群2： 219962328（已满）\n\n## 介绍\n\n这是一款仿iOS的PickerView控件，有时间选择器和选项选择器，新版本的详细特性如下：\n \n——TimePickerView  时间选择器，支持年月日时分，年月日，年月，时分等格式。   \n——OptionsPickerView  选项选择器，支持一，二，三级选项选择，并且可以设置是否联动 。\n\n* 支持三级联动\n* 设置是否联动 \n* 设置循环模式\n* 支持自定义布局。\n* 支持item的分隔线设置。\n* 支持item间距设置。\n* 时间选择器支持起始和终止日期设定。\n* 支持“年，月，日，时，分，秒”，“省，市，区”等选项的单位（label）显示、隐藏和自定义。\n* 支持自定义文字、颜色、文字大小等属性\n* Item的文字长度过长时，文字会自适应缩放到Item的长度，避免显示不完全的问题\n* 支持Dialog 模式。\n* 支持自定义设置容器。\n* 实时回调。\n\n\n![TimePicker.gif](https://github.com/Bigkoo/Android-PickerView/blob/master/preview/timepicker.gif)\n![TimePickerNight.gif](https://github.com/Bigkoo/Android-PickerView/blob/master/preview/timepicker_night.gif)\n![lunar.gif](https://github.com/Bigkoo/Android-PickerView/blob/master/preview/lunar.gif)\n![XOffset.png](https://github.com/Bigkoo/Android-PickerView/blob/master/preview/Screen%20Shot%202017-11-09%20at%204.25.02%20PM.png)\n![Province.gif](https://github.com/Bigkoo/Android-PickerView/blob/master/preview/JsonData.gif)\n![CustomLayout.gif](https://github.com/Bigkoo/Android-PickerView/blob/master/preview/CustomLayout.gif)\n\n\n### 有兴趣研究3D滚轮效果的实现机制，希望把源码研究透彻的可以看看这篇博客：\n### [Android-PickerView系列之源码解析篇（二）](http://blog.csdn.net/qq_22393017/article/details/59488906)\n\n### 使用注意事项\n* 注意：当我们进行设置时间的启始位置时，需要特别注意月份的设定\n* 原因：Calendar组件内部的月份，是从0开始的，即0-11代表1-12月份\n* 错误使用案例： \n  startDate.set(2013,1,1);\n  endDate.set(2020,12,1);\n* 正确使用案例：\n  startDate.set(2013,0,1);\n  endDate.set(2020,11,1);\n\n #### V4.1.9 版本更新说明（2019-10-20）\n   - 修复: 农历 day 偶现越界的问题。\n   - 优化: 显示布局中英文默认大写问题。\n   - 新增: 最大可见项的数目提供API给开发者设置。(setItemVisibleCount())\n   - 新增: 滚轮从中间到两边透明度渐变，提供开关API设置。（isAlphaGradient(true)）\n   - 新增: 选中项圆形分割线样式。（DividerType.CIRCLE）\n\n #### V4.1.8 版本更新说明（2019-4-24）\n -  更新gradle版本， wheelview基础库由 compile 改为 api 依赖，避免gradle 5.0+版本无法引入。\n -  修复 setTextXOffset 赋值问题。\n  \n #### V4.1.7 版本更新说明（2019-1-10）\n -  修复 WheelView在初始化时，数据为空导致height=0，造成一直显示不出来的问题。\n -  新增取消按钮的点击事件监听入口。\n -  参数注解添加，规范数据类型。\n -  废弃setBackgroundId方法， 更新方法命名为 setOutSideColor。\n\n\n#### 更多历史版本详情，请查阅：[更新日志（4.x版本）](https://github.com/Bigkoo/Android-PickerView/wiki/更新日志（4.x版本）) \n\n#### 方法名与参数请查阅：[方法名与参数说明文档](https://github.com/Bigkoo/Android-PickerView/wiki/%E6%96%B9%E6%B3%95%E5%90%8D%E4%B8%8E%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E%EF%BC%883.x%E7%89%88%E6%9C%AC%EF%BC%89)\n\n</br>\n\n### **如何使用：**\n\n#### Android-PickerView 库使用示例：\n\n#### 1.添加Jcenter仓库 Gradle依赖：\n```java\ncompile 'com.contrarywind:Android-PickerView:4.1.9'\n```\n或者\n\n#### Maven\n```\n<dependency>\n<groupId>com.contrarywind</groupId>\n<artifactId>Android-PickerView</artifactId>\n<version>4.1.9</version>\n<type>pom</type>\n</dependency>\n```\n\n#### 2.在项目中添加如下代码：\n\n```java\n//时间选择器\nTimePickerView pvTime = new TimePickerBuilder(MainActivity.this, new OnTimeSelectListener() {\n                           @Override\n                           public void onTimeSelect(Date date, View v) {\n                               Toast.makeText(MainActivity.this, getTime(date), Toast.LENGTH_SHORT).show();\n                           }\n                       }).build();\n```\n\n```java\n//条件选择器\n OptionsPickerView pvOptions = new OptionsPickerBuilder(MainActivity.this, new OnOptionsSelectListener() {\n            @Override\n            public void onOptionsSelect(int options1, int option2, int options3 ,View v) {\n                //返回的分别是三个级别的选中位置\n                String tx = options1Items.get(options1).getPickerViewText()\n                        + options2Items.get(options1).get(option2)\n                        + options3Items.get(options1).get(option2).get(options3).getPickerViewText();\n                tvOptions.setText(tx);\n            }\n        }).build();\n pvOptions.setPicker(options1Items, options2Items, options3Items);\n pvOptions.show(); \n```\n#### 大功告成~\n\n#### 3.如果默认样式不符合你的口味，可以自定义各种属性：\n```java\n Calendar selectedDate = Calendar.getInstance();\n Calendar startDate = Calendar.getInstance();\n //startDate.set(2013,1,1);\n Calendar endDate = Calendar.getInstance();\n //endDate.set(2020,1,1);\n \n  //正确设置方式 原因：注意事项有说明\n  startDate.set(2013,0,1);\n  endDate.set(2020,11,31);\n\n pvTime = new TimePickerBuilder(this, new OnTimeSelectListener() {\n            @Override\n            public void onTimeSelect(Date date,View v) {//选中事件回调\n                tvTime.setText(getTime(date));\n            }\n        })\n                .setType(new boolean[]{true, true, true, true, true, true})// 默认全部显示\n                .setCancelText(\"Cancel\")//取消按钮文字\n                .setSubmitText(\"Sure\")//确认按钮文字\n                .setContentSize(18)//滚轮文字大小\n                .setTitleSize(20)//标题文字大小\n                .setTitleText(\"Title\")//标题文字\n                .setOutSideCancelable(false)//点击屏幕，点在控件外部范围时，是否取消显示\n                .isCyclic(true)//是否循环滚动\n                .setTitleColor(Color.BLACK)//标题文字颜色\n                .setSubmitColor(Color.BLUE)//确定按钮文字颜色\n                .setCancelColor(Color.BLUE)//取消按钮文字颜色\n                .setTitleBgColor(0xFF666666)//标题背景颜色 Night mode\n                .setBgColor(0xFF333333)//滚轮背景颜色 Night mode\n                .setDate(selectedDate)// 如果不设置的话，默认是系统时间*/\n                .setRangDate(startDate,endDate)//起始终止年月日设定\n                .setLabel(\"年\",\"月\",\"日\",\"时\",\"分\",\"秒\")//默认设置为年月日时分秒\n                .isCenterLabel(false) //是否只显示中间选中项的label文字，false则每项item全部都带有label。\n                .isDialog(true)//是否显示为对话框样式\n                .build();\n```\n\n```java\npvOptions = new  OptionsPickerBuilder(this, new OptionsPickerView.OnOptionsSelectListener() {\n            @Override\n            public void onOptionsSelect(int options1, int option2, int options3 ,View v) {\n                //返回的分别是三个级别的选中位置\n                String tx = options1Items.get(options1).getPickerViewText()\n                        + options2Items.get(options1).get(option2)\n                        + options3Items.get(options1).get(option2).get(options3).getPickerViewText();\n                tvOptions.setText(tx);\n            }\n        }) .setOptionsSelectChangeListener(new OnOptionsSelectChangeListener() {\n                              @Override\n                              public void onOptionsSelectChanged(int options1, int options2, int options3) {\n                                  String str = \"options1: \" + options1 + \"\\noptions2: \" + options2 + \"\\noptions3: \" + options3;\n                                  Toast.makeText(MainActivity.this, str, Toast.LENGTH_SHORT).show();\n                              }\n                          })\n                .setSubmitText(\"确定\")//确定按钮文字\n                .setCancelText(\"取消\")//取消按钮文字\n                .setTitleText(\"城市选择\")//标题\n                .setSubCalSize(18)//确定和取消文字大小\n                .setTitleSize(20)//标题文字大小\n                .setTitleColor(Color.BLACK)//标题文字颜色\n                .setSubmitColor(Color.BLUE)//确定按钮文字颜色\n                .setCancelColor(Color.BLUE)//取消按钮文字颜色\n                .setTitleBgColor(0xFF333333)//标题背景颜色 Night mode\n                .setBgColor(0xFF000000)//滚轮背景颜色 Night mode\n                .setContentTextSize(18)//滚轮文字大小\n                .setLinkage(false)//设置是否联动，默认true\n                .setLabels(\"省\", \"市\", \"区\")//设置选择的三级单位\n                .isCenterLabel(false) //是否只显示中间选中项的label文字，false则每项item全部都带有label。\n                .setCyclic(false, false, false)//循环与否\n                .setSelectOptions(1, 1, 1)  //设置默认选中项\n                .setOutSideCancelable(false)//点击外部dismiss default true\n                .isDialog(true)//是否显示为对话框样式\n                .isRestoreItem(true)//切换时是否还原，设置默认选中第一项。\n                .build();\n\n        pvOptions.setPicker(options1Items, options2Items, options3Items);//添加数据源\n```\n#### 4.如果需要自定义布局：\n\n```java\n        // 注意：自定义布局中，id为 optionspicker 或者 timepicker 的布局以及其子控件必须要有，否则会报空指针\n        // 具体可参考demo 里面的两个自定义布局\n        pvCustomOptions = new OptionsPickerBuilder(this, new OptionsPickerView.OnOptionsSelectListener() {\n            @Override\n            public void onOptionsSelect(int options1, int option2, int options3, View v) {\n                //返回的分别是三个级别的选中位置\n                String tx = cardItem.get(options1).getPickerViewText();\n                btn_CustomOptions.setText(tx);\n            }\n        })\n                .setLayoutRes(R.layout.pickerview_custom_options, new CustomListener() {\n                    @Override\n                    public void customLayout(View v) {\n                        //自定义布局中的控件初始化及事件处理\n                        final TextView tvSubmit = (TextView) v.findViewById(R.id.tv_finish);\n                        final TextView tvAdd = (TextView) v.findViewById(R.id.tv_add);\n                        ImageView ivCancel = (ImageView) v.findViewById(R.id.iv_cancel);\n                        tvSubmit.setOnClickListener(new View.OnClickListener() {\n                            @Override\n                            public void onClick(View v) {\n                                pvCustomOptions.returnData(tvSubmit);\n                            }\n                        });\n                        ivCancel.setOnClickListener(new View.OnClickListener() {\n                            @Override\n                            public void onClick(View v) {\n                                pvCustomOptions.dismiss();\n                            }\n                        });\n\n                        tvAdd.setOnClickListener(new View.OnClickListener() {\n                            @Override\n                            public void onClick(View v) {\n                                getData();\n                                pvCustomOptions.setPicker(cardItem);\n                            }\n                        });\n\n                    }\n                })\n                .build();\n        pvCustomOptions.setPicker(cardItem);//添加数据\n```\n\n#### 5.对使用还有疑问的话，可参考demo代码\n[请戳我查看demo代码](https://github.com/Bigkoo/Android-PickerView/blob/master/app/src/main/java/com/bigkoo/pickerviewdemo/MainActivity.java)\n\n\n\n#### 6.若只需要WheelView基础控件自行扩展实现逻辑，可直接添加基础控件库，Gradle 依赖：\n \n```java\ncompile 'com.contrarywind:wheelview:4.1.0'\n```\n\n#### WheelView 使用代码示例：\n\nxml布局：\n```xml\n <com.contrarywind.view.WheelView\n            android:id=\"@+id/wheelview\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\" />\n```\n\nJava 代码：\n```java\nWheelView wheelView = findViewById(R.id.wheelview);\n\n        wheelView.setCyclic(false);\n\n        final List<String> mOptionsItems = new ArrayList<>();\n        mOptionsItems.add(\"item0\");\n        mOptionsItems.add(\"item1\");\n        mOptionsItems.add(\"item2\");\n  \n        wheelView.setAdapter(new ArrayWheelAdapter(mOptionsItems));\n        wheelView.setOnItemSelectedListener(new OnItemSelectedListener() {\n            @Override\n            public void onItemSelected(int index) {\n                Toast.makeText(MainActivity.this, \"\" + mOptionsItems.get(index), Toast.LENGTH_SHORT).show();\n            }\n        });\n```\n\n\n### 效果图（招行信用卡的“掌上生活”里面条件选择器他们用的就是我这个库，大家可以当实际项目参考）\n![](https://github.com/saiwu-bigkoo/Android-PickerView/blob/master/preview/pickerdemo_zhangshangshenghuo.gif)\n\n\n### Thanks\n\n- WheelView\n- [androidWheelView](https://github.com/weidongjian/androidWheelView/)\n\n## License\n\n```\nCopyright 2014 Bigkoo\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.796875,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        maven {\n            url 'https://maven.google.com/'\n            name 'Google'\n        }\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.5.1'\n//        classpath \"com.novoda:bintray-release:0.9.1\"\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        maven {\n            url 'https://maven.google.com/'\n            name 'Google'\n        }\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8349609375,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "pickerview",
          "type": "tree",
          "content": null
        },
        {
          "name": "preview",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.04296875,
          "content": "include ':app', ':pickerview', ':wheelview'\n"
        },
        {
          "name": "wheelview",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}