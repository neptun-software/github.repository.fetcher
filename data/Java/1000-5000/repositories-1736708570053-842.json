{
  "metadata": {
    "timestamp": 1736708570053,
    "page": 842,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Azure/azure-sdk-for-java",
      "stars": 2428,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".config",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0078125,
          "content": "**/.idea"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.60546875,
          "content": "# EditorConfig helps developers define and maintain consistent coding styles between different editors and IDEs\n# editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 4\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nmax_line_length = 120\n\n[*.json]\nindent_size = 2\n\n# From https://maven.apache.org/developers/conventions/code.html\n[*.xml]\nindent_size = 2\ncontinuation_indent_size = 4\nmax_line_length = 240\n\n# From https://maven.apache.org/developers/conventions/code.html\n[*.java]\ncontinuation_indent_size = 4\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.7275390625,
          "content": "# Handle line endings automatically for files detected as text\n# and leave all files detected as binary untouched.\n* text=auto\n\n# These files are text and should be normalized (Convert crlf => lf)\n*.css           text\n*.htm           text\n*.html          text\n*.java          text\n*.js            text\n*.json          text\n*.jsp           text\n*.jspf          text\n*.jspx          text\n*.properties    text\n*.sh            text\n*.txt           text\n*.xml           text\n*.yml           text\n\n# These files are binary and should be left untouched\n# (binary is a macro for -text -diff)\n*.class         binary\n*.dll           binary\n*.ear           binary\n*.ico           binary\n*.jar           binary\n*.so            binary\n*.war           binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3623046875,
          "content": "# Default Assets restore directory\n.assets\ntest-proxy.log\n\n*.class\n\n#Javadoc files\ndist/\n.publish/\noutput/\ntemp/\n\n# Spring\n**/*packageOutputDirectory*\n\n# Sensitive files\n*.json.env\n.env\n\n#javadoc overview files generated from README.md\nreadme_overview.html\n**/javadocTemp/**\n**/sourceTemp/**\n\n#External libs\nextlib/\n\n# Auth files\n*.auth\n*.azureauth\n\n# Local checkstyle\n*.checkstyle\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.ear\n\n# Azure Tooling #\nnode_modules\npackages\n__pycache__\n\n# Eclipse #\n*.pydevproject\n.project\n.metadata\nbin/**\ntmp/**\ntmp/**/*\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.classpath\n.settings/\n.loadpath\n\n# Other Tooling #\n.classpath\n.project\ntarget\n.idea\n*.iml\n\n# Mac OS #\n.DS_Store\n.DS_Store?\n\n# Windows #\nThumbs.db\n\n# reduced pom files should not be included\ndependency-reduced-pom.xml\npackage-lock.json\n\n# VS Code\n.vscode/\n.factorypath\njacoco.exec\n.vs/\n\n# Generated client pom file\nClientAggregatePom.xml\nClientFromSourcePom.xml\n\n# Generated aggregate coverage reports pom file\naggregate-pom.xml\n\n# Anaconda virtual env\nvenv\n.venv\n\n# NetBeans\nnbproject\nnb-configuration.xml\n\n# Scala Stylecheck\nscalastyle-output.xml\n\n# Emacs #\n\n#changebundle.txt#\n\n# Flatten-pom\n.flattened-pom.xml\nflatter.pom\n/.vs/\n\n\n# stress-tests\nChart.lock\ngeneratedValues.yaml\nstress-test-resources.json\nstress-test-addons*\n\n# Temp typespec files\nTempTypeSpecFiles/\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.171875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, \ndisability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at [Azure SDK](mailto:azjavasdkhelp@microsoft.com). All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [https://contributor-covenant.org/version/1/4][version]\n\n[homepage]: https://contributor-covenant.org\n[version]: https://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 22.478515625,
          "content": "Azure SDK for Java Contributing Guide\n-------------------------------------\n\nThank you for your interest in contributing to Azure SDK for Java.\n\n- For reporting bugs, requesting features, or asking for support, please file an issue in the [issues](https://github.com/Azure/azure-sdk-for-java/issues) section of the project.\n\n- If you would like to become an active contributor to this project please follow the instructions provided in [Microsoft Azure Projects Contribution Guidelines](https://opensource.microsoft.com/collaborate).\n\n- To make code changes, or contribute something new, please follow the [GitHub Forks / Pull requests model](https://help.github.com/articles/fork-a-repo/): Fork the repo, make the change and propose it back by submitting a pull request.\n\n- Refer to the [wiki](https://github.com/Azure/azure-sdk-for-java/wiki/Building#testing-for-spotbugs-and-checkstyle-issues) to learn about how Azure SDK for java generates CheckStyle, SpotBugs, Jacoco, and JavaDoc reports.\n\n- There are two Maven projects in the repo. Refer to the [wiki](https://github.com/Azure/azure-sdk-for-java/wiki/Building#pomclientxml-vs-pomdataxml) to learn about project structure for each.\n\nPull Requests\n-------------\n\n* **DO** submit all code changes via pull requests (PRs) rather than through a direct commit. PRs will be reviewed and potentially merged by the repo maintainers after a peer review that includes at least one maintainer.\n* **DO NOT** submit \"work in progress\" PRs.  A PR should only be submitted when it is considered ready for review and subsequent merging by the contributor.\n* **DO** give PRs short-but-descriptive names (e.g. \"Improve code coverage for Azure.Core by 10%\", not \"Fix #1234\")\n* **DO** refer to any relevant issues, and include [keywords](https://help.github.com/articles/closing-issues-via-commit-messages/) that automatically close issues when the PR is merged.\n* **DO** tag any users that should know about and/or review the change.\n* **DO** ensure each commit successfully builds.  The entire PR must pass all tests in the Continuous Integration (CI) system before it'll be merged.\n* **DO** address PR feedback in an additional commit(s) rather than amending the existing commits, and only rebase/squash them when necessary.  This makes it easier for reviewers to track changes.\n* **DO** assume that [\"Squash and Merge\"](https://github.com/blog/2141-squash-your-commits) will be used to merge your commit unless you request otherwise in the PR.\n* **DO NOT** fix merge conflicts using a merge commit. Prefer `git rebase`.\n* **DO NOT** mix independent, unrelated changes in one PR. Separate real product/test code changes from larger code formatting/dead code removal changes. Separate unrelated fixes into separate PRs, especially if they are in different assemblies.\n\nMerging Pull Requests (for project contributors with write access)\n----------------------------------------------------------\n\n* **DO** use [\"Squash and Merge\"](https://github.com/blog/2141-squash-your-commits) by default for individual contributions unless requested by the PR author.\n  Do so, even if the PR contains only one commit. It creates a simpler history than \"Create a Merge Commit\".\n  Reasons that PR authors may request \"Merge and Commit\" may include (but are not limited to):\n\n  - The change is easier to understand as a series of focused commits. Each commit in the series must be buildable so as not to break `git bisect`.\n  - Contributor is using an e-mail address other than the primary GitHub address and wants that preserved in the history. Contributor must be willing to squash\n    the commits manually before acceptance.\n\n\n\n## Developer Guide\n\n### Pre-requisites\n\n- Install Java Development Kit 8 or 11\n  - add `JAVA_HOME` to environment variables\n- Install [Maven](https://maven.apache.org/download.cgi)\n  - add `MAVEN_HOME` to environment variables\n\n>**Note:** If you ran into \"long path\" issue on `Windows`, enable paths longer than 260 characters by: <br><br>\n1.- Run this as Administrator on a command prompt:<br>\n`REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\FileSystem /v LongPathsEnabled /t REG_DWORD /d 1`<br>*(might need to type `yes` to override key if it already exists)*<br><br>\n2.- Set up `git` by running:<br> `git config --system core.longpaths true`\n\n### Building and Unit Testing\n\nRefer to the [build wiki](https://github.com/Azure/azure-sdk-for-java/wiki/Building) for learning how to build Java SDKs\nand the [unit testing wiki](https://github.com/Azure/azure-sdk-for-java/wiki/Unit-Testing) for guidelines on unit\ntesting.\n\n### Live testing\n\nLive tests assume a live resource has been created and appropriate environment\nvariables have been set for the test process. To automate setting up live\nresources we use created a script called `New-TestResources.ps1` that deploys\nresources for a given service.\n\nTo see what resources will be deployed for a live service, check the\n`test-resources.json` ARM template files in the service you wish to deploy for\ntesting, for example `sdk\\keyvault\\test-resources.json`.\n\nTo deploy live resources for testing use the steps documented in [`Example 1 of New-TestResources.ps1`](https://github.com/Azure/azure-sdk-for-java/blob/main/eng/common/TestResources/New-TestResources.ps1.md#example-1)\nto set up a service principal and deploy live testing resources.\n\nThe script will provide instructions for setting environment variables before\nrunning live tests.\n\nTo run live tests against a service after deploying live resources:\n\n```\nmvn -f sdk/keyvault/pom.xml -Dmaven.wagon.http.pool=false --batch-mode --fail-at-end --settings eng/settings.xml test\n```\n\nSome live tests may have additional steps for setting up live testing resources.\nSee the CONTRIBUTING.md file for the service you wish to test for additional\ninformation or instructions.\n\n### Workaround for Checkstyle error\n\nWhen building locally you might run into a Checkstyle such as the following:\n\n```\nExecution default of goal org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0:check failed:\nPlugin org.apache.maven.plugins:maven-checkstyle-plugin:3.1.0 or one of its dependencies could not be resolved:\nCould not find artifact com.azure:sdk-build-tools:jar:1.0.0 in ossrh (https://oss.sonatype.org/content/repositories/snapshots/)\n```\n\nThis is because the `sdk-build-tools` project isn't released to Maven. To resolve this issue you'll need to copy the `eng` folder locally then install `sdk-build-tools`.\n\n`mvn clean install -f eng/code-quality-reports/pom.xml`\n\nAll code in the Azure SDKs for Java repository must pass Checkstyle before being merged. The `sdk-build-tools` is updated periodically, so if a new branch fails Checkstyle you'll need to reinstall.\n\n## Versions and versioning\n\nTooling has been introduced to centralize versioning and help ease the pain of updating artifact versions in POM and README files. Under the eng\\versioning directory there exists version text files, one for client ([version_client.txt](https://github.com/Azure/azure-sdk-for-java/blob/main/eng/versioning/version_client.txt)) and one for data ([version_data.txt](https://github.com/Azure/azure-sdk-for-java/blob/main/eng/versioning/version_data.txt)). The format of the version files is as follows:\n\n`groupId:artifactId;dependency-version;current-version`\n\nThe dependency-version should be set to the most recent released version and the current-version is set to the next version to be released. For example:\n\n`com.azure:azure-identity;1.0.0-beta.4;1.0.0-beta.5`\n\nNote: In the case of a new artifact both versions will be the same. In the case of a released artifact, the dependecny version should be the latest released version.\n\n### Supported GroupIds and publishing\n\nWe no longer publish directly to Maven Central, any publishing is done through ESRP. Libraries published need to conform to one of the groupIds that we can publish to. Here is the list of accepted groupdIs:\n\n- \"com.microsoft\"\n- \"com.azure.*\"\n- \"com.azure\"\n- \"com.microsoft.azure\"\n- \"com.microsoft.azure.cognitiveservices\"\n- \"com.microsoft.azure.functions\"\n- \"com.microsoft.azure.kusto\"\n- \"com.microsoft.azure.sdk.iot\"\n- \"com.microsoft.azure.sdk.iot.provisioning\"\n- \"com.microsoft.commondatamodel\"\n- \"com.windowsazure\"\n- \"com.microsoft.sqlserver\"\n- \"com.microsoft.spring\"\n- \"com.microsoft.servicefabric\"\n- \"com.microsoft.rest\"\n- \"io.clientcore\"\n\nNote: This list will be replaced with a link to a page created by ESRP providing a UI where GroupIds can be cheked and new ones requested if needed.\n\n### Libraries vs External Dependencies\n\nLibraries refer to things that are built and released as part of the Azure SDK. Libraries have a current version and a dependency version.\n\nExternal Dependencies refer to dependencies for things that are not built and released as part of the Azure SDK regardless of the source. External Dependencies will only ever have a dependency version.\n\n### Current version, Dependency version, Unreleased Dependency version and Released Beta Dependency version\n\n**Current version** - This is the version we should be using when defining a component in its POM file and also when dependent components are built within the same pipeline. The current version is the version currently in development.\n\n**Dependency version** - This is the version we should be using when a given library is a dependency outside of a particular area. This should be the latest released version of the package whenever possible.\n\n**Unreleased Dependency version** – Whenever possible, libraries should be using the latest released version for dependencies but there is the case where active development in one library is going to be needed by another library or libraries that are built in separate pipelines. These types of changes are specifically additive and not breaking. Once a library has GA’d, nothing short of breaking changes should ever force the dependency versions across the repo to an unreleased version. The reason for this is that it would prevent other libraries, that don’t need this change, from releasing. Unreleased dependcies of scope test will not prevent a library from being released.\n\n**Released Beta Dependency version** – This is for when a library, which has already GA'd, is being released as a Beta version and we need to keep the dependency version to the latest GA. This particular tag will be used to allow other libraries to depend on the released Beta version. Libraries with released Beta dependencies can only be released as Beta, themselves, as a library cannot GA with Beta dependencies. An exception to the previous rule would be if the Beta dependency has a scope of test as this will not prevent a library from being released as GA.\n\n**An example of Current vs Dependency versions:** `com.azure:azure-storage-blob-batch` has dependencies on `com.azure:azure-core`, `com.azure:azure-core-http-netty` and `com.azure:azure-storage-blob`. Because `com.azure:azure-core` and `com.azure:azure-core-http-netty` are both built outside of azure-storage pipeline we should be using the released or *Dependency* versions of these when they're dependencies of another library. Similarly, libraries built as part of the same pipeline, that have interdependencies, should be using the Current version. Since `com.azure:azure-storage-blob-batch` and `com.azure:azure-storage-blob` are both built part of the azure-batch pipeline when `com.azure:azure-storage-blob` is declared as a dependency of `com.azure:azure-storage-blob-batch` it should be the *Current* version.\n\n**An example of an Unreleased Dependency version:** Additive, not breaking, API changes have been made to `com.azure:azure-core`. `com.azure:azure-storage-blob` has a dependency on `com.azure:azure-core` and requires the additive API change that has not yet been released. An unreleased entry needs to be created in [version_client.txt](https://github.com/Azure/azure-sdk-for-java/blob/main/eng/versioning/version_client.txt), under the unreleased section, with the following format: `unreleased_<groupId>:<artifactId>;dependency-version`, in this example that would be `unreleased_com.azure:azure-core;1.2.0` (this should match the 'current' version of core). The dependency update tags in the pom files that required this dependency would now reference `{x-version-update;unreleased_com.azure:azure-core;dependency}`. Once the updated library has been released the unreleased dependency version should be removed and the POM file update tags should be referencing the released version.\n\n### Tooling, version files and marker tags\n\nAll of the tooling lives under the **eng\\versioning** directory.\n\n- version_client.txt - Contains the Client library and versions\n- version_data.txt - Contains Data library and versions\n- external_dependencies.txt - Contains the external dependency versions\n- update_versions.py - This is just a basic python script that will climb through the source tree and update POM and README files. The script utilizes tags within the files to do replacements and the tags are slightly different between the POM and README files.\n- set_versions.py - This script should only be used by the build system when we start producing nightly ops builds.\n\nIn POM files this is done by inserting a specifically formatted comment on the same line as the version element.\n\n```xml\n  <groupId>MyGroup</groupId>\n  <artifactId>MyArtifact</artifactId>\n  <version>1.0.0-beta.1</version> <!-- {x-version-update;MyGroup:MyArtifact;[current|dependency]} -->\n```\n\nThe last element of the tag would be current or dependency depending on the criteria previously explained.\n\nIn README files this ends up being slightly different. Because the version tag is inside an XML element that we're explicitly telling a user to copy/paste into their product the comment tag really didn't make sense here. Instead there are tags before and after the XML element tags which effectively says \"there's a version somewhere in between these two tags, when you find the line that matches replace it with the appropriate version of the group:artifact defined in the tag.\"\n\n    [//]: # ({x-version-update-start;MyGroup:MyArtifact;dependency})\n    ```xml\n      <groupId>MyGroup</groupId>\n      <artifactId>MyArtifact</artifactId>\n      <version>1.0.0-beta.1</version>\n    ```\n    [//]: # ({x-version-update-end})\n\n### What does the process look like?\n\nLet's say we've GA'd and I need to tick up the version of azure-storage libraries how would I do it? Guidelines for incrementing versions after release can be found [here](https://github.com/Azure/azure-sdk/blob/main/docs/policies/releases.md#incrementing-after-release).\n\n1. I'd open up eng\\versioning\\version_client.txt and update the current-versions of the libraries that are built and released as part of the azure storage pipeline. This list can be found in pom.service.xml under the sdk/storage directory. It's worth noting that any module entry starting with \"../\" are external module dependencies and not something that's released as part of the pipeline. Dependencies for library components outside of a given area would be downloading the appropriate dependency from Maven like we do for external dependencies.\n2. Execute the update_versions python script from the root of the enlistment. The exact syntax and commands will vary based upon what is being changed and some examples can be found in the use cases in the [update_versions.py](https://github.com/Azure/azure-sdk-for-java/blob/main/eng/versioning/update_versions.py#L6) file.\n3. Review and submit a PR with the modified files.\n\n### Next steps: Management plane\n\n- Management plane. Management is in the process of being moved to service pipeline builds. The versioning work needs to wait until that work is finished.\n\n### Making changes to an already GA'd library that require other libraries to depend on the unreleased version\n\nThis is where the `unreleased_` dependency tags come into play. Using the Unreleased Dependency example above, where `com.azure:azure-storage-blob` has a dependency on an unreleased `com.azure:azure-core`:\n\n- [ ] Make the additive changes to `com.azure:azure-core`\n- [ ] In [version_client.txt](https://github.com/Azure/azure-sdk-for-java/blob/main/eng/versioning/version_client.txt) add the entry for the unreleased azure core in the unreleased section at the bottom of the file. The entry would look like `unreleased_com.azure:azure-core;<version>`.\n      Note: The version of the library referenced in the unreleased version tag should match the current version of that library.\n- [ ] In the pom.xml file for `com.azure:azure-storage-blob`, the dependency tag for `com.azure:azure-core` which was originally `{x-version-update;com.azure:azure-core-test;dependency}` would now become `{x-version-update;unreleased_com.azure:azure-core-test;dependency}`\nAfter the unreleased version of `com.azure:azure-core` was released but before `com.azure:azure-storage-blob` has been released.\n- [ ] In [version_client.txt](https://github.com/Azure/azure-sdk-for-java/blob/main/eng/versioning/version_client.txt) the the dependency version of `com.azure:azure-core` would become the released version and the \"unreleased_\" entry, at this time, would be removed.\n- [ ] In the pom.xml file for `com.azure:azure-storage-blob`, the dependency tag for `com.azure:azure-core` would get changed back to `{x-version-update;com.azure:azure-core-test;dependency}`\n\n## Packaging Versioning\n\nFor general packaging versioning policies see [Package Versioning](https://azure.github.io/azure-sdk/policies_releases.html#package-versioning) and see [Java](https://azure.github.io/azure-sdk/policies_releases.html#java) for specific rules used in this repo.\n\nWhile some Java projects use SNAPSHOT versions for nightly builds, we have opted not to use that convention because it has proven to be very unreliable in our scenarios. For example, if we use SNAPSHOT versions in our pom.xml files that usually ends up becoming viral throughout our entire repo and we want to more tightly control our versioning, especially our dependency versioning. On top of the viral nature, we have experienced a lot of network reliability issues when consuming SNAPSHOT versions from Maven central so we want to avoid this reliability issue in our build pipelines.\n\nGiven we don't use SNAPSHOT versions in our pom.xml files we generally have the version currently under development committed to the repo in the pom.xml file. This means if you are looking at our active development code for the version you will see a version that is not yet published to Maven central. If you want to try out our packages under development, you should look for our latest alpha build (see Dev Feed section below).\n\n### Dev Feed\n\nEvery day our engineering system produces a set of packages for each component of the SDK. These can be used by other projects to test updated builds of our libraries prior to their release. The packages are published to an Azure Artifacts public feed hosted at the following URL:\n\n> [https://dev.azure.com/azure-sdk/public/_packaging?_a=feed&feed=azure-sdk-for-java](https://dev.azure.com/azure-sdk/public/_packaging?_a=feed&feed=azure-sdk-for-java)\n\nFor developers working within the repo, refer to the instructions above for updating versions numbers correctly. The parent POM for the Azure SDK already contains a repository reference to the daily feed and can download the packages.\n\nFor developers wishing to use the daily packages for other purposes, refer to the [connect to feed instructions](https://dev.azure.com/azure-sdk/public/_packaging?_a=connect&feed=azure-sdk-for-java) in Azure Artifacts.\n\nNote: the daily package feed is considered volatile and taking dependencies on a daily package should be considered a temporary arrangement. We reserve the right to remove packages from this feed at any point in time.\n\n## Samples\n\n### Third-party dependencies\n\nThird party libraries should only be included in samples when necessary to demonstrate usage of an Azure SDK package; they should not be suggested or endorsed as alternatives to the Azure SDK.\n\nWhen code samples take dependencies, readers should be able to use the material without significant license burden or research on terms. This goal requires restricting dependencies to certain types of open source or commercial licenses.\n\nSamples may take the following categories of dependencies:\n\n- **Open-source** : Open source offerings that use an [Open Source Initiative (OSI) approved license](https://opensource.org/licenses). Any component whose license isn't OSI-approved is considered a commercial offering. Prefer OSS projects that are members of any of the [OSS foundations that Microsoft is part of](https://opensource.microsoft.com/ecosystem/). Prefer permissive licenses for libraries, like [MIT](https://opensource.org/licenses/MIT) and [Apache 2](https://opensource.org/licenses/Apache-2.0). Copy-left licenses like [GPL](https://opensource.org/licenses/gpl-license) are acceptable for tools, and OSs. [Kubernetes](https://github.com/kubernetes/kubernetes), [Linux](https://github.com/torvalds/linux), and [Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json) are examples of this license type. Links to open source components should be to where the source is hosted, including any applicable license, such as a GitHub repository (or similar).\n\n- **Commercial**: Commercial offerings that enable readers to learn from our content without unnecessary extra costs. Typically, the offering has some form of a community edition, or a free trial sufficient for its use in content. A commercial license may be a form of dual-license, or tiered license. Links to commercial components should be to the commercial site for the software, even if the source software is hosted publicly on GitHub (or similar).\n\n- **Dual licensed**: Commercial offerings that enable readers to choose either license based on their needs. For example, if the offering has an OSS and commercial license, readers can  choose between them. [MySql](https://github.com/mysql/mysql-server) is an example of this license type.\n\n- **Tiered licensed**: Offerings that enable readers to use the license tier that corresponds to their characteristics. For example, tiers may be available for students, hobbyists, or companies with defined revenue  thresholds. For offerings with tiered licenses, strive to limit our use in tutorials to the features available in the lowest tier. This policy enables the widest audience for the article. [Docker](https://www.docker.com/), [IdentityServer](https://duendesoftware.com/products/identityserver), [ImageSharp](https://sixlabors.com/products/imagesharp/), and [Visual Studio](https://visualstudio.com) are examples of this license type.\n\nIn general, we prefer taking dependencies on licensed components in the order of the listed categories. In cases where the category may not be well known, we'll document the category so that readers understand the choice that they're making by using that dependency.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0498046875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Microsoft\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 29.5732421875,
          "content": "NOTICES AND INFORMATION\nDo Not Translate or Localize\n\nThis software incorporates material from third parties. Microsoft makes certain\nopen source code available at https://3rdpartysource.microsoft.com, or you may\nsend a check or money order for US $5.00, including the product name, the open\nsource component name, and version number, to:\n\nSource Code Compliance Team\nMicrosoft Corporation\nOne Microsoft Way\nRedmond, WA 98052\nUSA\n\nNotwithstanding any other terms, you may reverse engineer this software to the\nextent required to debug changes to any libraries licensed under the GNU Lesser\nGeneral Public License.\n\n------------------------------------------------------------------------------\n\nAzure SDK for Java uses third-party libraries or other resources that may be\ndistributed under licenses different than the Azure SDK for Java software.\n\nIn the event that we accidentally failed to list a required notice, please\nbring it to our attention. Post an issue or email us:\n\n           azjavasdkhelp@microsoft.com\n\nThe attached notices are provided for information only.\n\nLicense notice for Hamcrest\n------------------------------------------------------------------------------\n\nThe 3-Clause BSD License\n\nCopyright (c) 2000-2015 www.hamcrest.org\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of\nconditions and the following disclaimer. Redistributions in binary form must reproduce\nthe above copyright notice, this list of conditions and the following disclaimer in\nthe documentation and/or other materials provided with the distribution.\n\nNeither the name of Hamcrest nor the names of its contributors may be used to endorse\nor promote products derived from this software without specific prior written\npermission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\nSHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\nTO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\nBUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\nWAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGE.\n\nLicense notice for Slf4j API\n------------------------------------------------------------------------------\n\n Copyright (c) 2004-2017 QOS.ch\n All rights reserved.\n\n Permission is hereby granted, free  of charge, to any person obtaining\n a  copy  of this  software  and  associated  documentation files  (the\n \"Software\"), to  deal in  the Software without  restriction, including\n without limitation  the rights to  use, copy, modify,  merge, publish,\n distribute,  sublicense, and/or sell  copies of  the Software,  and to\n permit persons to whom the Software  is furnished to do so, subject to\n the following conditions:\n\n The  above  copyright  notice  and  this permission  notice  shall  be\n included in all copies or substantial portions of the Software.\n\n THE  SOFTWARE IS  PROVIDED  \"AS  IS\", WITHOUT  WARRANTY  OF ANY  KIND,\n EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF\n MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION\n WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense notice for Slf4j Simple\n------------------------------------------------------------------------------\n\n Copyright (c) 2004-2017 QOS.ch\n All rights reserved.\n\n Permission is hereby granted, free  of charge, to any person obtaining\n a  copy  of this  software  and  associated  documentation files  (the\n \"Software\"), to  deal in  the Software without  restriction, including\n without limitation  the rights to  use, copy, modify,  merge, publish,\n distribute,  sublicense, and/or sell  copies of  the Software,  and to\n permit persons to whom the Software  is furnished to do so, subject to\n the following conditions:\n\n The  above  copyright  notice  and  this permission  notice  shall  be\n included in all copies or substantial portions of the Software.\n\n THE  SOFTWARE IS  PROVIDED  \"AS  IS\", WITHOUT  WARRANTY  OF ANY  KIND,\n EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF\n MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION\n WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense notice for Guava (https://github.com/google/guava)\n------------------------------------------------------------------------------\n\nCopyright (C) 2010 The Guava Authors\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\nin compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License\nis distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\nor implied. See the License for the specific language governing permissions and limitations under\nthe License.\n\nLicense notice for Netty\n------------------------------------------------------------------------------\n\nCopyright 2014 The Netty Project\n\nThe Netty Project licenses this file to you under the Apache License,\nversion 2.0 (the \"License\"); you may not use this file except in compliance\nwith the License. You may obtain a copy of the License at:\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\nLicense for the specific language governing permissions and limitations\nunder the License.\n\nLicense notice for JUG Java Uuid Generator\n------------------------------------------------------------------------------\n\nJUG Java Uuid Generator\n\nCopyright (c) 2002- Tatu Saloranta, tatu.saloranta@iki.fi\n\nLicensed under the License specified in the file LICENSE which is\nincluded with the source code.\nYou may not use this file except in compliance with the License.\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\nLicense notice for Jackson\n------------------------------------------------------------------------------\n\nCopyright (c) 2007 Jackson Project\n\nJackson-annotations (http://github.com/FasterXML/jackson\nJackson-core (https://github.com/FasterXML/jackson-core\njackson-databind (http://github.com/FasterXML/jackson\nJackson-dataformat-XML (https://github.com/FasterXML/jackson-dataformat-xml)\nJackson datatype: JSR310 (https://github.com/FasterXML/jackson-modules-java8/jackson-datatype-jsr310)\nJackson module: Afterburner (https://github.com/FasterXML/jackson-modules-base)\nJackson module: JAXB Annotations (https://github.com/FasterXML/jackson-modules-base)\nWoodstox (https://github.com/FasterXML/woodstox)\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\nin compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License\nis distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\nor implied. See the License for the specific language governing permissions and limitations under\nthe License.\n\n\nLicense notice for Metrics Core\n------------------------------------------------------------------------------\n\nCopyright (c) 2010-2013 Coda Hale, Yammer.com, 2014-2020 Dropwizard Team\n\nMetrics Core (https://github.com/dropwizard/metrics)\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\nin compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License\nis distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\nor implied. See the License for the specific language governing permissions and limitations under\nthe License.\n\nLicense notice for micrometer-core\n------------------------------------------------------------------------------\n\nCopyright (c) 2017-Present VMware, Inc. All Rights Reserved.\n\nmicrometer-core (https://github.com/micrometer-metrics/micrometer)\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\nin compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License\nis distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\nor implied. See the License for the specific language governing permissions and limitations under\nthe License.\n\n\nLicense notice for project Reactor\n------------------------------------------------------------------------------\n\nCopyright (c) 2011-2017 Pivotal Software Inc, All Rights Reserved.\n\nNon-Blocking Reactive Foundation for the JVM (https://github.com/reactor/reactor-core)\nreactor-scala-extensions (https://github.com/reactor/reactor-scala-extensions)\nReactive Streams Netty driver (https://github.com/reactor/reactor-netty)\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\nin compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License\nis distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\nor implied. See the License for the specific language governing permissions and limitations under\nthe License.\n\n\nLicense notice for JavaBeans Activation Framework API\n------------------------------------------------------------------------------\n\nJavaBeans Activation Framework API jar (https://github.com/eclipse-ee4j/jaf/jakarta.activation-api)\n\nEclipse Distribution License - v 1.0\nCopyright (c) 2007, Eclipse Foundation, Inc. and its licensors.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation and/or other materials\nprovided with the distribution.\nNeither the name of the Eclipse Foundation, Inc. nor the names of its contributors may be used to\nendorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\nIN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nLicense notice for jakarta.xml.bind-api\n------------------------------------------------------------------------------\n\njakarta.xml.bind-api (https://github.com/eclipse-ee4j/jaxb-api/jakarta.xml.bind-api)\n\nEclipse Distribution License - v 1.0\nCopyright (c) 2007, Eclipse Foundation, Inc. and its licensors.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\nRedistributions in binary form must reproduce the above copyright notice,\nthis list of conditions and the following disclaimer in the documentation and/or other materials\nprovided with the distribution.\nNeither the name of the Eclipse Foundation, Inc. nor the names of its contributors may be used to\nendorse or promote products derived from this software without specific prior written permission.\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\nIN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nLicense notice for jakarta.xml.bind-api\n------------------------------------------------------------------------------\n\nStax2 API (http://github.com/FasterXML/stax2-api)\nCopyright (c) 2008 FasterXML LLC info@fasterxml.com\n\nThis source code is licensed under standard BSD license, which is compatible with all Free and Open Software (OSS) licenses.\n\n\nLicense notice for HdrHistogrami\n------------------------------------------------------------------------------\nHdrHistogram (http://hdrhistogram.github.io/HdrHistogram/)\n\nThe code in this repository code was Written by Gil Tene, Michael Barker,\nand Matt Warren, and released to the public domain, as explained at\nhttp://creativecommons.org/publicdomain/zero/1.0/\n\nFor users of this code who wish to consume it under the \"BSD\" license\nrather than under the public domain or CC0 contribution text mentioned\nabove, the code found under this directory is *also* provided under the\nfollowing license (commonly referred to as the BSD 2-Clause License). This\nlicense does not detract from the above stated release of the code into\nthe public domain, and simply represents an additional license granted by\nthe Author.\n\n-----------------------------------------------------------------------------\n** Beginning of \"BSD 2-Clause License\" text. **\n\n Copyright (c) 2012, 2013, 2014, 2015, 2016 Gil Tene\n Copyright (c) 2014 Michael Barker\n Copyright (c) 2014 Matt Warren\n All rights reserved.\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are met:\n\n 1. Redistributions of source code must retain the above copyright notice,\n    this list of conditions and the following disclaimer.\n\n 2. Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation\n    and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n THE POSSIBILITY OF SUCH DAMAGE.\n\n\nLicense notice for LatencyUtils\n------------------------------------------------------------------------------\n\nLatencyUtils (http://latencyutils.github.io/LatencyUtils/)\n\n  * This code was Written by Gil Tene of Azul Systems, and released to the\n  * public domain, as explained at http://creativecommons.org/publicdomain/zero/1.0/\n\n For users of this code who wish to consume it under the \"BSD\" license\n rather than under the public domain or CC0 contribution text mentioned\n above, the code found under this directory is *also* provided under the\n following license (commonly referred to as the BSD 2-Clause License). This\n license does not detract from the above stated release of the code into\n the public domain, and simply represents an additional license granted by\n the Author.\n\n -----------------------------------------------------------------------------\n ** Beginning of \"BSD 2-Clause License\" text. **\n\n  Copyright (c) 2012, 2013, 2014 Gil Tene\n  All rights reserved.\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n  1. Redistributions of source code must retain the above copyright notice,\n     this list of conditions and the following disclaimer.\n\n  2. Redistributions in binary form must reproduce the above copyright notice,\n     this list of conditions and the following disclaimer in the documentation\n     and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n  THE POSSIBILITY OF SUCH DAMAGE.\n\n\nLicense notice for reactive-streams\n------------------------------------------------------------------------------\n\nreactive-streams (http://www.reactive-streams.org/)\n\nCopyright Statement for Contributions to the Reactive Streams Project\n=====================================================================\n\nI hereby represent that all present, past and future contributions I make to\nthe Reactive Streams project (which includes all repositories owned by the\n“reactive-streams” github organization) are governed by the Creative Commons\nZero 1.0 Universal copyright statement, placing my contributions in the public\ndomain. This entails that to the extent possible under law I waive all\ncopyright and related or neighboring rights to the code or documents I\ncontribute. I also represent that I have the authority to perform the above\nwaiver with respect to the entirety of my contributions.\n\nThe text of the copyright statement is included in the COPYING file at the root\nof the reactive-streams repository at\nhttps://github.com/reactive-streams/reactive-streams-jvm/blob/master/COPYING.\n\nUnderwriting parties:\n\ngithub name    | Real Name, Email Address used for git commits, Company\n---------------+----------------------------------------------------------------------------\nrkuhn          | Roland Kuhn, rk@rkuhn.info, Typesafe Inc.\nbenjchristensen| Ben Christensen, benjchristensen@gmail.com, Netflix Inc.\nviktorklang    | Viktor Klang, viktor.klang@gmail.com, Typesafe Inc.\nsmaldini       | Stephane Maldini, stephane.maldini@gmail.com, Pivotal Software Inc.\nsavulchik      | Stanislav Savulchik, s.savulchik@gmail.com\nktoso          | Konrad Malawski, konrad.malawski@project13.pl, Typesafe Inc.\nouertani       | Slim Ouertani, ouertani@gmail.com\n2m             | Martynas Mickevičius, mmartynas@gmail.com, Typesafe Inc.\nldaley         | Luke Daley, luke.daley@gradleware.com, Gradleware Inc.\ncolinrgodsey   | Colin Godsey, crgodsey@gmail.com, MediaMath Inc.\ndavidmoten     | Dave Moten, davidmoten@gmail.com\nbriantopping   | Brian Topping, brian.topping@gmail.com, Mauswerks LLC\nrstoyanchev    | Rossen Stoyanchev, rstoyanchev@pivotal.io, Pivotal\nBjornHamels    | Björn Hamels, bjorn@hamels.nl\nJakeWharton    | Jake Wharton, jakewharton@gmail.com\nanthonyvdotbe  | Anthony Vanelverdinghe, anthonyv.be@outlook.com\nseratch        | Kazuhiro Sera, seratch@gmail.com, SmartNews, Inc.\nakarnokd       | David Karnok, akarnokd@gmail.com\negetman        | Evgeniy Getman, getman.eugene@gmail.com\npatriknw       | Patrik Nordwall, patrik.nordwall@gmail.com, Lightbend Inc\nangelsanz      | Ángel Sanz, angelsanz@users.noreply.github.com\nshenghaiyang   | 盛海洋, shenghaiyang@aliyun.com\nkiiadi         | Kyle Thomson, kylthoms@amazon.com, Amazon.com\njroper         | James Roper, james@jazzy.id.au, Lightbend Inc.\nolegdokuka     | Oleh Dokuka, shadowgun@.i.ua, Netifi Inc.\nScottmitch     | Scott Mitchell, scott_mitchell@apple.com, Apple Inc.\nretronym       | Jason Zaugg, jzaugg@gmail.com, Lightbend Inc.\n\nLicensed under Public Domain (CC0)\n\nTo the extent possible under law, the person who associated CC0 with\nthis code has waived all copyright and related or neighboring\nrights to this code.\n\nYou should have received a copy of the CC0 legalcode along with this\nwork. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.\n\nLicense notice for Bouncy Castle\n------------------------------------------------------------------------------\n\nCopyright (c) 2000 - 2024 The Legion of the Bouncy Castle Inc. (https://www.bouncycastle.org)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\ndocumentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\nthe rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\nto permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS\nOR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nLicense notice for Apache Commons\n------------------------------------------------------------------------------\n\nCopyright 2002-2019 The Apache Software Foundation\n\ncommons-codec (https://github.com/apache/commons-codec)\ncommons-text (https://github.com/apache/commons-text)\ncommons-lang (https://github.com/apache/commons-lang)\ncommons-collections (https://github.com/apache/commons-collections)\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\nin compliance with the License. You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License\nis distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and limitations under the License.\n\n-------------------------------------------------------------------------------------------------\n\nLicense notice for GraalVM\n------------------------------------------------------------------------------\norg.graalvm.sdk:graal-sdk - https://github.com/graalvm/native-build-tools/blob/master/common/junit-platform-native/LICENSE\nThe Universal Permissive License (UPL), Version 1.0\n\nSubject to the condition set forth below, permission is hereby granted to any person obtaining a copy of this software,\nassociated documentation and/or data (collectively the \"Software\"), free of charge and under any and all copyright rights\nin the Software, and any and all patent rights owned or freely licensable by each licensor hereunder covering either\n(i) the unmodified Software as contributed to or provided by such licensor, or (ii) the Larger Works (as defined below),\nto deal in both\n\n(a) the Software, and\n\n(b) any piece of software and/or hardware listed in the lrgrwrks.txt file if one is included with the Software each a\n\"Larger Work\" to which the Software is contributed by such licensors), without restriction, including without limitation\nthe rights to copy, create derivative works of, display, perform, and distribute the Software and make, use, sell, offer\nfor sale, import, export, have made, and have sold the Software and the Larger Work(s), and to sublicense the foregoing\nrights on either these or other terms.\n\nThis license is subject to the following condition:\n\nThe above copyright notice and either this complete permission notice or at a minimum a reference to the UPL must be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE\nWARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\nARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n-------------------------------------------------------------------------------------------------\n\nLicense notice for JUnit platform native plugin\n------------------------------------------------------------------------------\norg.graalvm.buildtools:junit-platform-native - https://github.com/graalvm/native-build-tools/blob/master/common/junit-platform-native/LICENSE\n\nCopyright (c) 2020, 2021, Oracle and/or its affiliates. All rights reserved.\nDO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.\n\nThe Universal Permissive License (UPL), Version 1.0\n\nSubject to the condition set forth below, permission is hereby granted to any\nperson obtaining a copy of this software, associated documentation and/or\ndata (collectively the \"Software\"), free of charge and under any and all\ncopyright rights in the Software, and any and all patent rights owned or\nfreely licensable by each licensor hereunder covering either (i) the\nunmodified Software as contributed to or provided by such licensor, or (ii)\nthe Larger Works (as defined below), to deal in both\n\n(a) the Software, and\n\n(b) any piece of software and/or hardware listed in the lrgrwrks.txt file if\none is included with the Software each a \"Larger Work\" to which the Software\nis contributed by such licensors),\n\nwithout restriction, including without limitation the rights to copy, create\nderivative works of, display, perform, and distribute the Software and make,\nuse, sell, offer for sale, import, export, have made, and have sold the\nSoftware and the Larger Work(s), and to sublicense the foregoing rights on\neither these or other terms.\n\nThis license is subject to the following condition:\n\nThe above copyright notice and either this complete permission notice or at a\nminimum a reference to the UPL must be included in all copies or substantial\nportions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n-------------------------------------------------------------------------------------------------\n\nLicense notice for OpenTelemetry Java instrumentation\nhttps://github.com/open-telemetry/opentelemetry-java-instrumentation/\n------------------------------------------------------------------------------\n\nCopyright [2023] [OpenTelemetry]\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.58984375,
          "content": "\n# Azure SDK for Java\n\n[![Packages](https://img.shields.io/badge/packages-latest-blue.svg)](https://azure.github.io/azure-sdk/releases/latest/java.html) [![Build Documentation](https://img.shields.io/badge/documentation-published-blue.svg)](https://azure.github.io/azure-sdk-for-java)\n\nThis repository is for active development of the Azure SDK for Java. For consumers of the SDK we recommend visiting our [public developer docs](https://docs.microsoft.com/azure/developer/java/sdk/) or our versioned [developer docs](https://azure.github.io/azure-sdk-for-java).\n\n## Getting started\n\nTo get started with a specific service library, see the **README.md** file located in the library's project folder. You can find service libraries in the `/sdk` directory. For a list of all the services we support access our [list of all existing libraries](https://azure.github.io/azure-sdk/releases/latest/all/java.html).\n\nFor tutorials, samples, quick starts and other documentation, visit [Azure for Java Developers](https://docs.microsoft.com/java/azure/).\n\n### Prerequisites\n\nAll libraries are baselined on Java 8, with testing and forward support up until the latest Java long-term support release (currently Java 17).\n\n## Available packages\n\nEach service can have both 'client' and 'management' libraries. 'Client' libraries are used to consume the service, whereas 'management' libraries are used to configure and manage the service.\n\n### Client Libraries\n\nOur client libraries follow the [Azure SDK Design Guidelines for Java](https://azure.github.io/azure-sdk/java/guidelines/), and share a number of core features such as HTTP retries, logging, transport protocols, authentication protocols, etc., so that once you learn how to use these features in one client library, you will know how to use them in other client libraries. You can learn about these shared features [here](https://docs.microsoft.com/azure/developer/java/sdk/overview).\nThese libraries can be easily identified by folder, package, and namespaces names starting with `azure-`, e.g. `azure-keyvault`.\n\nYou can find the **[most up to date list of all of the new packages on our page](https://azure.github.io/azure-sdk/releases/latest/index.html#java)**. This list includes the most recent releases: both stable and beta.\n\n> NOTE: If you need to ensure your code is ready for production use one of the stable, non-beta libraries.\n\n### Management Libraries\n\nSimilar to our client libraries, the management libraries follow the [Azure SDK Design Guidelines for Java](https://azure.github.io/azure-sdk/java/guidelines/). These libraries provide a high-level, object-oriented API for _managing_ Azure resources, that are optimized for ease of use, succinctness, and consistency. You can find the list of management libraries **[on this page](https://azure.github.io/azure-sdk/releases/latest/mgmt/java.html)**.\n\n**For general documentation on how to use the new libraries for Azure Resource Management, please [visit here](https://aka.ms/azsdk/java/mgmt)**. We have also prepared **[plenty of code samples](https://github.com/Azure/azure-sdk-for-java/blob/main/sdk/resourcemanager/docs/SAMPLE.md)** as well as **[migration guide](https://github.com/Azure/azure-sdk-for-java/blob/main/sdk/resourcemanager/docs/MIGRATION_GUIDE.md)** in case you are upgrading from previous versions.\n\nThe management libraries can be identified by namespaces that start with `azure-resourcemanager`, e.g. `azure-resourcemanager-compute`.\n\n### Historical Releases\n\nNote that the latest libraries from Microsoft are in the `com.azure` Maven group ID, and have the package naming pattern of beginning with `com.azure`. If you're using libraries that are in `com.microsoft.azure` Maven group ID, or have this as the package structure, please consider migrating to the latest libraries. You can find a mapping table from these historical releases to their equivalent [here](https://azure.github.io/azure-sdk/releases/deprecated/index.html#java).\n\n## Need help?\n\n- For reference documentation visit the [Azure SDK for Java documentation](https://aka.ms/java-docs).\n- For tutorials, samples, quick starts and other documentation, visit [Azure for Java Developers](https://docs.microsoft.com/java/azure/).\n- For build reports on code quality, test coverage, etc, visit [Azure Java SDK](https://azuresdkartifacts.blob.core.windows.net/azure-sdk-for-java/index.html).\n- File an issue via [Github Issues](https://github.com/Azure/azure-sdk-for-java/issues/new/choose).\n- Check [previous questions](https://stackoverflow.com/questions/tagged/azure-java-sdk) or ask new ones on StackOverflow using `azure-java-sdk` tag.\n\n## Navigating the repository\n\n### Main branch\n\nThe main branch has the most recent code with new features and bug fixes. It does **not** represent latest released **stable** SDK.\n\n### Release branches (Release tagging)\n\nFor each package we release there will be a unique git tag created that contains the name and the version of the package to mark the commit of the code that produced the package. This tag will be used for servicing via hotfix branches as well as debugging the code for a particular beta or stable release version.\nFormat of the release tags are `<package-name>_<package-version>`. For more information please see [our branching strategy](https://github.com/Azure/azure-sdk/blob/main/docs/policies/repobranching.md#release-tagging).\n\n## Contributing\n\nFor details on contributing to this repository, see the [contributing guide](https://github.com/Azure/azure-sdk-for-java/blob/main/CONTRIBUTING.md).\n\nThis project welcomes contributions and suggestions. Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, view [Microsoft's CLA](https://cla.microsoft.com).\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repositories using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n### Additional Helpful Links for Contributors\n\nMany people all over the world have helped make this project better.  You'll want to check out:\n\n- [What are some good first issues for new contributors to the repo?](https://github.com/azure/azure-sdk-for-java/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22)\n- [How to build and test your change](https://github.com/Azure/azure-sdk-for-java/blob/main/CONTRIBUTING.md#developer-guide)\n- [How you can make a change happen!](https://github.com/Azure/azure-sdk-for-java/blob/main/CONTRIBUTING.md#pull-requests)\n- Frequently Asked Questions (FAQ) and Conceptual Topics in the detailed [Azure SDK for Java wiki](https://github.com/azure/azure-sdk-for-java/wiki).\n\n### Reporting security issues and security bugs\n\nSecurity issues and bugs should be reported privately, via email, to the Microsoft Security Response Center (MSRC) <secure@microsoft.com>. You should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Further information, including the MSRC PGP key, can be found in the [Security TechCenter](https://www.microsoft.com/msrc/faqs-report-an-issue).\n\n### License\n\nAzure SDK for Java is licensed under the [MIT](https://github.com/Azure/azure-sdk-for-java/blob/main/LICENSE.txt) license.\n\n<!-- Links -->\n[java_guidelines]: https://azure.github.io/azure-sdk/java_introduction.html\n[latest_release_page]: https://azure.github.io/azure-sdk/releases/2020-03/java.html\n[feb_20_release_page]: https://azure.github.io/azure-sdk/releases/2020-02/java.html\n[jan_20_release_page]: https://azure.github.io/azure-sdk/releases/2020-01/java.html\n[dec_19_release_page]: https://azure.github.io/azure-sdk/releases/2019-12/java.html\n[nov_19_release_page]: https://azure.github.io/azure-sdk/releases/2019-11/java.html\n[oct_19_release_page]: https://azure.github.io/azure-sdk/releases/2019-10-11/java.html\n[sep_19_release_page]: https://azure.github.io/azure-sdk/releases/2019-09-17/java.html\n[aug_19_release_page]: https://azure.github.io/azure-sdk/releases/2019-08-06/java.html\n[jul_19_release_page]: https://azure.github.io/azure-sdk/releases/2019-07-10/java.html\n\n![Impressions](https://azure-sdk-impressions.azurewebsites.net/api/impressions/azure-sdk-for-java%2FREADME.png)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.6982421875,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.5 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://docs.microsoft.com/previous-versions/tn-archive/cc751383(v=technet.10)), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://msrc.microsoft.com/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://www.microsoft.com/msrc/pgp-key-msrc).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://microsoft.com/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://www.microsoft.com/msrc/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "SUPPORT.md",
          "type": "blob",
          "size": 2.376953125,
          "content": "# Support\n\n## How to file issues and get help  \n\n### Azure support tickets\n\nCustomers with an [Azure support plan](https://azure.microsoft.com/support/options/) can open an [Azure support ticket](https://azure.microsoft.com/support/create-ticket/).\n**We recommend this option if your problem requires immediate attention.**\n\n### GitHub issues\n\nWe use [GitHub Issues](https://github.com/Azure/azure-sdk-for-java/issues/new/choose) to track bugs, questions, and feature requests.\nGitHub issues are free, but **response time is not guaranteed.** See [GitHub issues support process](https://devblogs.microsoft.com/azure-sdk/github-issue-support-process/) for more details.\n\nTo ensure the relevance and manageability of our issue queue, we have an automated process that will close issues that are over two years old and have not been updated in the last 30 days. This measure is designed to help us respond to and resolve current issues more efficiently. We appreciate your understanding and cooperation in maintaining a focused and up-to-date issue tracking system.\n\n### Community resources\n- Take a look at the [Azure SDK blog](https://devblogs.microsoft.com/azure-sdk/).\n- Search for similar issues in [our GitHub repository](https://github.com/Azure/azure-sdk-for-java/issues)\n- Chat with other community members on [gitter](https://gitter.im/Azure/azure-sdk-for-java?source=orgpage)\n- Ask a question on [StackOverflow](https://stackoverflow.com/questions/tagged/azure-sdk-for-java) and tag it with azure-sdk-for-java\n- Share or upvote feature requests on [Feedback Page](https://feedback.azure.com/forums/34192--general-feedback).\n- Ask a question on [Twitter](https://twitter.com/AzureSDK)\n- Ask a question at [Microsoft Q&A](https://docs.microsoft.com/answers/products/azure?WT.mc_id=Portal-Microsoft_Azure_Support&product=all)\n- Ask a question at [Microsoft Tech Community](https://techcommunity.microsoft.com/t5/azure/ct-p/Azure)\n\n### Security bugs\nSecurity issues and bugs should be reported privately, via email, to the Microsoft Security Response Center(secure@microsoft.com). \nYou should receive a response within 24 hours. \nFurther information, including the MSRC PGP key, can be found in the [Security TechCenter](https://www.microsoft.com/msrc/faqs-report-an-issue?rtc=1)\n\n# Microsoft Support Policy\n\nPlease refer to [Azure SDK Support and Lifecycle information](https://azure.github.io/azure-sdk/policies_support.html)\n"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "eng",
          "type": "tree",
          "content": null
        },
        {
          "name": "jetty.xml",
          "type": "blob",
          "size": 1.4208984375,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE Configure PUBLIC \"-//Jetty//Configure//EN\" \"http://www.eclipse.org/jetty/configure_9_3.dtd\">\n<Configure id=\"Server\" class=\"org.eclipse.jetty.server.Server\">\n    <Call name=\"addConnector\">\n        <Arg>\n            <New class=\"org.eclipse.jetty.server.ServerConnector\">\n                <Arg name=\"server\">\n                    <Ref refid=\"Server\" />\n                </Arg>\n                <Arg name=\"factories\">\n                    <Array type=\"org.eclipse.jetty.server.ConnectionFactory\">\n                        <Item>\n                            <New class=\"org.eclipse.jetty.server.HttpConnectionFactory\"/>\n                        </Item>\n                    </Array>\n                </Arg>\n                <Set name=\"port\">11080</Set>\n            </New>\n        </Arg>\n    </Call>\n    <Call name=\"addConnector\">\n        <Arg>\n            <New class=\"org.eclipse.jetty.server.ServerConnector\">\n                <Arg name=\"server\">\n                    <Ref refid=\"Server\" />\n                </Arg>\n                <Arg name=\"factories\">\n                    <Array type=\"org.eclipse.jetty.server.ConnectionFactory\">\n                        <Item>\n                            <New class=\"org.eclipse.jetty.server.HttpConnectionFactory\"/>\n                        </Item>\n                    </Array>\n                </Arg>\n                <Set name=\"port\">11081</Set>\n            </New>\n        </Arg>\n    </Call>\n</Configure>"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 9.0615234375,
          "content": "<!-- Copyright (c) Microsoft Corporation. All rights reserved.\n     Licensed under the MIT License. -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.azure</groupId>\n  <artifactId>azure-sdk-all</artifactId>\n  <packaging>pom</packaging>\n  <version>1.0.0</version><!-- Need not change for every release-->\n\n  <modules>\n    <module>common/perf-test-core</module>\n    <module>eng/code-quality-reports</module>\n    <module>sdk/advisor</module>\n    <module>sdk/agrifood</module>\n    <module>sdk/ai</module>\n    <module>sdk/alertsmanagement</module>\n    <module>sdk/anomalydetector</module>\n    <module>sdk/aot</module>\n    <module>sdk/apicenter</module>\n    <module>sdk/apimanagement</module>\n    <module>sdk/appcomplianceautomation</module>\n    <module>sdk/appconfiguration</module>\n    <module>sdk/appcontainers</module>\n    <module>sdk/applicationinsights</module>\n    <module>sdk/astro</module>\n    <module>sdk/attestation</module>\n    <module>sdk/automanage</module>\n    <module>sdk/automation</module>\n    <module>sdk/avs</module>\n    <module>sdk/azureadexternalidentities</module>\n    <module>sdk/azurearcdata</module>\n    <module>sdk/azurestack</module>\n    <module>sdk/azurestackhci</module>\n    <module>sdk/baremetalinfrastructure</module>\n    <module>sdk/batch</module>\n    <module>sdk/batchai</module>\n    <module>sdk/billing</module>\n    <module>sdk/billingbenefits</module>\n    <module>sdk/boms</module>\n    <module>sdk/botservice</module>\n    <module>sdk/changeanalysis</module>\n    <module>sdk/chaos</module>\n    <module>sdk/clientcore</module>\n    <module>sdk/cognitiveservices</module>\n    <module>sdk/commerce</module>\n    <module>sdk/communication</module>\n    <module>sdk/computefleet</module>\n    <module>sdk/computeschedule</module>\n    <module>sdk/confidentialledger</module>\n    <module>sdk/confluent</module>\n    <module>sdk/connectedcache</module>\n    <module>sdk/connectedvmware</module>\n    <module>sdk/consumption</module>\n    <module>sdk/containerorchestratorruntime</module>\n    <module>sdk/containerregistry</module>\n    <module>sdk/containerservicefleet</module>\n    <module>sdk/contentsafety</module>\n    <module>sdk/core</module>\n    <module>sdk/cosmos</module>\n    <module>sdk/cosmosdbforpostgresql</module>\n    <module>sdk/costmanagement</module>\n    <module>sdk/customerinsights</module>\n    <module>sdk/dashboard</module>\n    <module>sdk/databox</module>\n    <module>sdk/databoxedge</module>\n    <module>sdk/databricks</module>\n    <module>sdk/datadog</module>\n    <module>sdk/datafactory</module>\n    <module>sdk/datalakeanalytics</module>\n    <module>sdk/datalakestore</module>\n    <module>sdk/datamigration</module>\n    <module>sdk/dataprotection</module>\n    <module>sdk/defendereasm</module>\n    <module>sdk/delegatednetwork</module>\n    <module>sdk/deploymentmanager</module>\n    <module>sdk/desktopvirtualization</module>\n    <module>sdk/devcenter</module>\n    <module>sdk/devhub</module>\n    <module>sdk/deviceprovisioningservices</module>\n    <module>sdk/deviceregistry</module>\n    <module>sdk/deviceupdate</module>\n    <module>sdk/devopsinfrastructure</module>\n    <module>sdk/devspaces</module>\n    <module>sdk/devtestlabs</module>\n    <module>sdk/digitaltwins</module>\n    <module>sdk/dnsresolver</module>\n    <module>sdk/documentintelligence</module>\n    <module>sdk/dynatrace</module>\n    <module>sdk/easm</module>\n    <module>sdk/edgeorder</module>\n    <module>sdk/edgezones</module>\n    <module>sdk/education</module>\n    <module>sdk/elastic</module>\n    <module>sdk/elasticsan</module>\n    <module>sdk/eventgrid</module>\n    <module>sdk/eventhubs</module>\n    <module>sdk/extendedlocation</module>\n    <module>sdk/fabric</module>\n    <module>sdk/face</module>\n    <module>sdk/fluidrelay</module>\n    <module>sdk/formrecognizer</module>\n    <module>sdk/frontdoor</module>\n    <module>sdk/graphservices</module>\n    <module>sdk/hanaonazure</module>\n    <module>sdk/hardwaresecuritymodules</module>\n    <module>sdk/hdinsight</module>\n    <module>sdk/healthbot</module>\n    <module>sdk/healthcareapis</module>\n    <module>sdk/healthdataaiservices</module>\n    <module>sdk/healthinsights</module>\n    <module>sdk/hybridcompute</module>\n    <module>sdk/hybridconnectivity</module>\n    <module>sdk/hybridcontainerservice</module>\n    <module>sdk/hybridkubernetes</module>\n    <module>sdk/hybridnetwork</module>\n    <module>sdk/identity</module>\n    <module>sdk/imagebuilder</module>\n    <module>sdk/informaticadatamanagement</module>\n    <module>sdk/iotcentral</module>\n    <module>sdk/iotfirmwaredefense</module>\n    <module>sdk/iothub</module>\n    <module>sdk/iotoperations</module>\n    <module>sdk/keyvault</module>\n    <module>sdk/kubernetesconfiguration</module>\n    <module>sdk/kusto</module>\n    <module>sdk/labservices</module>\n    <module>sdk/largeinstance</module>\n    <module>sdk/loadtesting</module>\n    <module>sdk/loganalytics</module>\n    <module>sdk/logic</module>\n    <module>sdk/logz</module>\n    <module>sdk/machinelearning</module>\n    <module>sdk/machinelearningservices</module>\n    <module>sdk/maintenance</module>\n    <module>sdk/managedapplications</module>\n    <module>sdk/managednetworkfabric</module>\n    <module>sdk/managementgroups</module>\n    <module>sdk/maps</module>\n    <module>sdk/mariadb</module>\n    <module>sdk/marketplaceordering</module>\n    <module>sdk/mediaservices</module>\n    <module>sdk/metricsadvisor</module>\n    <module>sdk/migrationdiscoverysap</module>\n    <module>sdk/mixedreality</module>\n    <module>sdk/mobilenetwork</module>\n    <module>sdk/modelsrepository</module>\n    <module>sdk/mongocluster</module>\n    <module>sdk/monitor</module>\n    <module>sdk/mysql</module>\n    <module>sdk/mysqlflexibleserver</module>\n    <module>sdk/neonpostgres</module>\n    <module>sdk/netapp</module>\n    <module>sdk/networkanalytics</module>\n    <module>sdk/networkcloud</module>\n    <module>sdk/networkfunction</module>\n    <module>sdk/newrelicobservability</module>\n    <module>sdk/nginx</module>\n    <module>sdk/notificationhubs</module>\n    <module>sdk/oep</module>\n    <module>sdk/openai</module>\n    <module>sdk/operationsmanagement</module>\n    <module>sdk/oracledatabase</module>\n    <module>sdk/orbital</module>\n    <module>sdk/paloaltonetworks</module>\n    <module>sdk/parents</module>\n    <module>sdk/peering</module>\n    <module>sdk/personalizer</module>\n    <module>sdk/playwrighttesting</module>\n    <module>sdk/policyinsights</module>\n    <module>sdk/postgresql</module>\n    <module>sdk/postgresqlflexibleserver</module>\n    <module>sdk/powerbidedicated</module>\n    <module>sdk/providerhub</module>\n    <module>sdk/purview</module>\n    <module>sdk/quantum</module>\n    <module>sdk/qumulo</module>\n    <module>sdk/quota</module>\n    <module>sdk/recoveryservices</module>\n    <module>sdk/recoveryservicesbackup</module>\n    <module>sdk/recoveryservicesdatareplication</module>\n    <module>sdk/recoveryservicessiterecovery</module>\n    <module>sdk/redhatopenshift</module>\n    <module>sdk/redisenterprise</module>\n    <module>sdk/relay</module>\n    <module>sdk/remoterendering</module>\n    <module>sdk/reservations</module>\n    <module>sdk/resourceconnector</module>\n    <module>sdk/resourcegraph</module>\n    <module>sdk/resourcehealth</module>\n    <module>sdk/resourcemanager</module>\n    <module>sdk/resourcemover</module>\n    <module>sdk/schemaregistry</module>\n    <module>sdk/scvmm</module>\n    <module>sdk/search</module>\n    <module>sdk/security</module>\n    <module>sdk/securitydevops</module>\n    <module>sdk/securityinsights</module>\n    <module>sdk/selfhelp</module>\n    <module>sdk/serialization</module>\n    <module>sdk/servicebus</module>\n    <module>sdk/servicefabric</module>\n    <module>sdk/servicefabricmanagedclusters</module>\n    <module>sdk/servicelinker</module>\n    <module>sdk/servicenetworking</module>\n    <module>sdk/signalr</module>\n    <module>sdk/sphere</module>\n    <module>sdk/spring</module>\n    <module>sdk/spring-experimental</module>\n    <module>sdk/springappdiscovery</module>\n    <module>sdk/sqlvirtualmachine</module>\n    <module>sdk/standbypool</module>\n    <module>sdk/storage</module>\n    <module>sdk/storageactions</module>\n    <module>sdk/storagecache</module>\n    <module>sdk/storageimportexport</module>\n    <module>sdk/storagemover</module>\n    <module>sdk/storagepool</module>\n    <module>sdk/streamanalytics</module>\n    <module>sdk/subscription</module>\n    <module>sdk/support</module>\n    <module>sdk/synapse</module>\n    <module>sdk/tables</module>\n    <module>sdk/template</module>\n    <module>sdk/terraform</module>\n    <module>sdk/textanalytics</module>\n    <module>sdk/timeseriesinsights</module>\n    <module>sdk/tools</module>\n    <module>sdk/translation</module>\n    <module>sdk/trustedsigning</module>\n    <module>sdk/videoanalyzer</module>\n    <module>sdk/vision</module>\n    <module>sdk/vmwarecloudsimple</module>\n    <module>sdk/voiceservices</module>\n    <module>sdk/webpubsub</module>\n    <module>sdk/workloads</module>\n    <module>sdk/workloadssapvirtualinstance</module>\n  </modules>\n</project>\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "sdk",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}