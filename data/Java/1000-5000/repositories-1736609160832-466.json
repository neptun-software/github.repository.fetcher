{
  "metadata": {
    "timestamp": 1736609160832,
    "page": 466,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "yangfuhai/afinal",
      "stars": 3152,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.6142578125,
          "content": "#afinal交流平台\n* QQ群：192341294（群1，2000未满）    246710918（群2，1000未满）\n##作者个人微信\n![mahua](http://7xi3g2.com1.z0.glb.clouddn.com/grwx.png?imageView2/1/w/250/h/250/q/87)\n\n\n----\n# ![mahua](http://code.google.com/p/afinal/logo?cct=1351516535) Afinal简介 \n* Afinal 是一个android的sqlite orm 和 ioc 框架。同时封装了android中的http框架，使其更加简单易用；\n* 使用finalBitmap，无需考虑bitmap在android中加载的时候oom的问题和快速滑动的时候图片加载位置错位等问题。\n* Afinal的宗旨是简洁，快速。约定大于配置的方式。尽量一行代码完成所有事情。\n\n\n##目前Afinal主要有四大模块：\n\n* FinalDB模块：android中的orm框架，一行代码就可以进行增删改查。支持一对多，多对一等查询。\n\n* FinalActivity模块：android中的ioc框架，完全注解方式就可以进行UI绑定和事件绑定。无需findViewById和setClickListener等。\n\n* FinalHttp模块：通过httpclient进行封装http数据请求，支持ajax方式加载。\n\n* FinalBitmap模块：通过FinalBitmap，imageview加载bitmap的时候无需考虑bitmap加载过程中出现的oom和android容器快速滑动时候出现的图片错位等现象。FinalBitmap可以配置线程加载线程数量，缓存大小，缓存路径，加载显示动画等。FinalBitmap的内存管理使用lru算法，没有使用弱引用（android2.3以后google已经不建议使用弱引用，android2.3后强行回收软引用和弱引用，详情查看android官方文档），更好的管理bitmap内存。FinalBitmap可以自定义下载器，用来扩展其他协议显示网络图片，比如ftp等。同时可以自定义bitmap显示器，在imageview显示图片的时候播放动画等（默认是渐变动画显示）。\n\n\n---\n## 使用afinal快速开发框架需要有以下权限：\n\n```xml\n<uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n```\n* 第一个是访问网络\n* 第二个是访问sdcard\n* 访问网络是请求网络图片的时候需要或者是http数据请求时候需要，访问sdcard是图片缓存的需要。\n\n----\n##FinalDB使用方法：\n关于finalDb的更多介绍，请点击[这里](http://my.oschina.net/yangfuhai/blog/87459)\n\n```java\nFinalDb db = FinalDb.create(this);\nUser user = new User(); //这里需要注意的是User对象必须有id属性，或者有通过@ID注解的属性\nuser.setEmail(\"mail@tsz.net\");\nuser.setName(\"michael yang\");\ndb.save(user);\n```\n\n----\n##FinalDB OneToMany懒加载使用方法：\n模型定义：\n```java\npublic class Parent{\n    private int id;\n    @OneToMany(manyColumn = \"parentId\")\n    private OneToManyLazyLoader<Parent ,Child> children;\n    /*....*/\n}\npublic class Child{\n    private int id;\n    private String text;\n    @ManyToOne(column = \"parentId\")\n    private  Parent  parent;\n    /*....*/\n}\n```\n使用：\n```java\nList<Parent> all = db.findAll(Parent.class);\n        for( Parent  item : all){\n            if(item.getChildren ().getList().size()>0)\n                Toast.makeText(this,item.getText() + item.getChildren().getList().get(0).getText(),Toast.LENGTH_LONG).show();\n        }\n```\n----\n##FinalActivity使用方法：\n* 完全注解方式就可以进行UI绑定和事件绑定\n* 无需findViewById和setClickListener等\n\n```java\npublic class AfinalDemoActivity extends FinalActivity {\n\n    //无需调用findViewById和setOnclickListener等\n    @ViewInject(id=R.id.button,click=\"btnClick\") Button button;\n    @ViewInject(id=R.id.textView) TextView textView;\n\n    public void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n       setContentView(R.layout.main);\n    }\n    \n    public void btnClick(View v){\n       textView.setText(\"text set form button\");\n    }\n}\n```\n*在其他侵入式框架下使用（如ActionBarShelock）\n```java\n     protected void onCreate(Bundle savedInstanceState) {\n       super.onCreate(savedInstanceState);\n        setContentView(view);\n        FinalActivity.initInjectedView(this);\n     }\n```\n*在Fragment中使用\n```java\n     public View onCreateView(LayoutInflater inflater, ViewGroup container,\n          Bundle savedInstanceState) {\n       View viewRoot = inflater.inflate(R.layout.map_frame, container, false);\n       FinalActivity.initInjectedView(this,viewRoot);\n    }\n```\n##FinalHttp使用方法：\n###普通get方法\n\n```java\nFinalHttp fh = new FinalHttp();\nfh.get(\"http://www.yangfuhai.com\", new AjaxCallBack(){\n\n    @Override\n    public void onLoading(long count, long current) { //每1秒钟自动被回调一次\n        \ttextView.setText(current+\"/\"+count);\n\t}\n\n\t@Override\n\tpublic void onSuccess(String t) {\n\t\t\ttextView.setText(t==null?\"null\":t);\n\t}\n\n\t@Override\n\tpublic void onStart() {\n\t\t//开始http请求的时候回调\n\t}\n\n\t@Override\n\tpublic void onFailure(Throwable t, String strMsg) {\n\t\t//加载失败的时候回调\n\t}\n});\n```\n\n### 使用FinalHttp上传文件 或者 提交数据 到服务器（post方法）\n文件上传到服务器，服务器如何接收，请查看[这里](http://www.oschina.net/question/105836_85825)\n\n```java\n  AjaxParams params = new AjaxParams();\n  params.put(\"username\", \"michael yang\");\n  params.put(\"password\", \"123456\");\n  params.put(\"email\", \"test@tsz.net\");\n  params.put(\"profile_picture\", new File(\"/mnt/sdcard/pic.jpg\")); // 上传文件\n  params.put(\"profile_picture2\", inputStream); // 上传数据流\n  params.put(\"profile_picture3\", new ByteArrayInputStream(bytes)); // 提交字节流\n \n  FinalHttp fh = new FinalHttp();\n  fh.post(\"http://www.yangfuhai.com\", params, new AjaxCallBack(){\n  \t\t@Override\n \t\tpublic void onLoading(long count, long current) {\n \t\t\t\ttextView.setText(current+\"/\"+count);\n \t\t}\n \n \t\t@Override\n \t\tpublic void onSuccess(String t) {\n \t\t\ttextView.setText(t==null?\"null\":t);\n \t\t}\n  });\n```\n\n\n----\n\n###使用FinalHttp下载文件：\n* 支持断点续传，随时停止下载任务 或者 开始任务\n\n```java\n    FinalHttp fh = new FinalHttp();  \n    //调用download方法开始下载\n    HttpHandler handler = fh.download(\"http://www.xxx.com/下载路径/xxx.apk\", //这里是下载的路径\n    true,//true:断点续传 false:不断点续传（全新下载）\n    \"/mnt/sdcard/testapk.apk\", //这是保存到本地的路径\n    new AjaxCallBack() {  \n                @Override  \n                public void onLoading(long count, long current) {  \n                     textView.setText(\"下载进度：\"+current+\"/\"+count);  \n                }  \n  \n                @Override  \n                public void onSuccess(File t) {  \n                    textView.setText(t==null?\"null\":t.getAbsoluteFile().toString());  \n                }  \n  \n            });  \n\n\t\n   //调用stop()方法停止下载\n   handler.stop();\n\n   \n```\n\n\n##FinalBitmap 使用方法 \n加载网络图片就一行代码 fb.display(imageView,url) ,更多的display重载请看[帮助文档](https://github.com/yangfuhai/afinal/tree/master/doc)\n\n```java\nprivate GridView gridView;\n\tprivate FinalBitmap fb;\n\t@Override\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.images);\n\t\t\n\t\tgridView = (GridView) findViewById(R.id.gridView);\n\t\tgridView.setAdapter(mAdapter);\n\t\t\n\t\tfb = FinalBitmap.create(this);//初始化FinalBitmap模块\n\t\tfb.configLoadingImage(R.drawable.downloading);\n\t\t//这里可以进行其他十几项的配置，也可以不用配置，配置之后必须调用init()函数,才生效\n\t\t//fb.configBitmapLoadThreadSize(int size)\n\t\t//fb.configBitmapMaxHeight(bitmapHeight)\n\t}\n\n\n///////////////////////////adapter getView////////////////////////////////////////////\n\npublic View getView(int position, View convertView, ViewGroup parent) {\n\tImageView iv;\n\tif(convertView == null){\n\t    convertView = View.inflate(BitmapCacheActivity.this,R.layout.image_item, null);\n\t    iv = (ImageView) convertView.findViewById(R.id.imageView);\n\t    iv.setScaleType(ScaleType.CENTER_CROP);\n\t    convertView.setTag(iv);\n\t}else{\n\t    iv = (ImageView) convertView.getTag();\n\t}\n\t//bitmap加载就这一行代码，display还有其他重载，详情查看源码\n\tfb.display(iv,Images.imageUrls[position]);\n```\n\n\n---\n**>>> Add by fantouch**\n\n#### 配置成Android Library Project\n*解决需求:有多个项目依赖afinal,并且想修改afinal源码*\n>  \n* clone到本地\n* 添加AndroidManifest.xml文件:\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"net.tsz.afinal\" >\n    <uses-sdk\n        android:minSdkVersion=\"5\"\n        android:targetSdkVersion=\"7\" />\n</manifest>\n```\n>  \n* 导入到 Eclipse:  \n`Import => Android => Existing Android Code Into Workspace`\n* 工程上按右键 => Properties => Android => √ Is Library\n* 完成,你的项目可以引用这个afinal Library了.\n\n#### 排除不需要Git管理的文件\n*解决需求:想修改源码,但不想让Eclipse把工程弄脏*\n>  \n* 忽略已经被Git管理的`./bin`目录:  \n导入Eclipse前执行:  ` git update-index --assume-unchanged ./bin/* `\n>  \n* 忽略未被Git管理的文件和目录: 添加`/.gitignore` 文件:  \n```\n/gen\n/assets\n/bin\n/res\n/.classpath\n/.project\n/AndroidManifest.xml\n/project.properties\n/.gitignore\n```  \n* 导入到Eclipse,`git status`可见Repository依旧干净.\n  \n**<<< Add by fantouch**\n\n---\n\n#关于作者michael\n* 个人博客：[http://www.yangfuhai.com](http://www.yangfuhai.com)\n* afinal捐助：[http://me.alipay.com/yangfuhai](http://me.alipay.com/yangfuhai) （为了感谢捐助者，michael将会把捐助者将公布在afinal官方网站上,不让公布的同学说明下）\n* afinal交流QQ群 ： 192341294\n#个人微信\n![mahua](http://7xi3g2.com1.z0.glb.clouddn.com/grwx.png?imageView2/1/w/250/h/250/q/87)\n\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "src_version_list",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}