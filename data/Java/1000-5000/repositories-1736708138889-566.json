{
  "metadata": {
    "timestamp": 1736708138889,
    "page": 566,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "igniterealtime/Openfire",
      "stars": 2890,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dependency-check-suppressions.xml",
          "type": "blob",
          "size": 4.703125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<suppressions xmlns=\"https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd\">\n   <suppress>\n      <notes><![CDATA[\n      Ignore Openfire for the search jar, else dependency-check picks up every Openfire CVE since Openfire v1.7.2\n        file name: search.jar: search-1.7.2.jar\n   ]]>      </notes>\n      <packageUrl regex=\"true\">^pkg:maven/org\\.igniterealtime\\.openfire\\.plugins/search@.*$</packageUrl>\n      <cpe>cpe:/a:igniterealtime:openfire</cpe>\n   </suppress>\n   <suppress>\n      <notes><![CDATA[\n      Ignore Openfire for the search jar, else dependency-check picks up every Openfire CVE since Openfire v1.7.2\n   file name: search.jar: search-1.7.2.jar\n   ]]>      </notes>\n      <packageUrl regex=\"true\">^pkg:maven/org\\.igniterealtime\\.openfire\\.plugins/search@.*$</packageUrl>\n      <cpe>cpe:/a:ignite_realtime:openfire</cpe>\n   </suppress>\n   <suppress>\n      <notes><![CDATA[\n      Ignore tag_project:tag - it's an MP3 tagging tool, and nothing to do with Apache Taglibs.\n   file name: taglibs-standard-impl-1.2.5.jar\n   ]]>      </notes>\n      <packageUrl regex=\"true\">^pkg:maven/org\\.apache\\.taglibs/taglibs\\-standard\\-impl@.*$</packageUrl>\n      <cpe>cpe:/a:tag_project:tag</cpe>\n   </suppress>\n    <suppress>\n        <notes><![CDATA[\n       Ignore an old CVE related to permissions when calling com.google.common.io.Files.createTempDir - we don't use this method\n   ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/com\\.google\\.guava/guava@.*$</packageUrl>\n        <vulnerabilityName>CVE-2020-8908</vulnerabilityName>\n    </suppress>\n    <suppress>\n        <notes><![CDATA[\n        Ignore a CVE related only to Jetty's CGI servlet, which isn't used in Openfire.\n   ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.eclipse\\.jetty/jetty\\-servlets@.*$</packageUrl>\n        <vulnerabilityName>CVE-2023-36479</vulnerabilityName>\n    </suppress>\n    <suppress>\n        <notes><![CDATA[\n        Ignore a withdrawn CVE (see https://github.com/joker-xiaoyan/XXE-SAXReader/issues/1 and https://github.com/dom4j/dom4j/issues/171#issuecomment-1781547256)\n   ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.dom4j/dom4j@.*$</packageUrl>\n        <cve>CVE-2023-45960</cve>\n    </suppress>\n    <suppress>\n        <notes><![CDATA[\n        Suppress eclipse:jetty issues for jetty-servlet-api@4.0.x since it's incorrectly pulling in all Jetty issues after Jetty v4, whereas jetty-servlet-api v4 is included in Jetty v10.\n   ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.eclipse\\.jetty\\.toolchain/jetty\\-servlet\\-api@4\\.0\\..*$</packageUrl>\n        <cpe>cpe:/a:eclipse:jetty</cpe>\n    </suppress>\n    <suppress>\n        <notes><![CDATA[\n        Suppress jetty:jetty issues for jetty-servlet-api@4.0.x since it's incorrectly pulling in all Jetty issues after Jetty v4, whereas jetty-servlet-api v4 is included in Jetty v10.\n   ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.eclipse\\.jetty\\.toolchain/jetty\\-servlet\\-api@4\\.0\\..*$</packageUrl>\n        <cpe>cpe:/a:jetty:jetty</cpe>\n    </suppress>\n    <suppress>\n        <notes><![CDATA[\n        Ignore CVE about Netty defaults for hostname validation, since Openfire implements its own configurable hostname validation.\n   ]]></notes>\n        <cve>CVE-2023-4586</cve>\n    </suppress>\n    <suppress>\n        <notes><![CDATA[\n        Ignore a CVE regarding Tomcat clustering, which isn't used in Openfire.\n   ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.mortbay\\.jasper/apache\\-jsp@.*$</packageUrl>\n        <cve>CVE-2022-29885</cve>\n    </suppress>\n    <suppress>\n        <notes><![CDATA[\n        Rapid Reset was fixed in Jetty 10.0.18, which brings in this dependency.\n   ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.mortbay\\.jasper/apache\\-jsp@.*$</packageUrl>\n        <cve>CVE-2023-44487</cve>\n    </suppress>\n    <suppress>\n        <notes><![CDATA[\n        Openfire doesn't persist sessions via Tomcat FileStore (or anything else, beyond preferences)\n   ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.mortbay\\.jasper/apache\\-jsp@.*$</packageUrl>\n        <cve>CVE-2022-23181</cve>\n    </suppress>\n    <suppress>\n        <notes><![CDATA[\n        Openfire doesn't make use of the example webapp in Tomcat\n   ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.mortbay\\.jasper/apache\\-jsp@.*$</packageUrl>\n        <cve>CVE-2022-34305</cve>\n    </suppress>\n    <suppress>\n        <notes><![CDATA[\n        Openfire doesn't use the ROOT webapp. Additional testing on 2023-11-13 against 7a53b23e565cdf06a541af82560a6c49d6c9d2ae.\n   ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.mortbay\\.jasper/apache\\-jsp@.*$</packageUrl>\n        <cve>CVE-2023-41080</cve>\n    </suppress>\n</suppressions>\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.3603515625,
          "content": "# Root level stuff\n.git\n.gitignore\nDockerfile\n.github\n.idea\n.mvn\n.settings\n.vscode\n\nbuild\n!build/docker\ndocumentation\n\n# Any intermediate build stuff.\n**/target\n\n# Deeper stuff\n**/.DS_Store\n**/.classpath\n**/.factorypath\n**/.idea\n**/.project\n**/.settings\n**/*.iml\n**/*.class\n\n# Make sure mvn stuff is present though.\n!.mvn/wrapper\n!.mvn/wrapper/maven-wrapper.properties\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.35546875,
          "content": "# EditorConfig helps developers define and maintain consistent coding styles between different editors and IDEs.\n#\n# EditorConfig is awesome: http://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\nindent_style = space\nindent_size = 4\n\n[*.bat]\nend_of_line = crlf\n\n[*.yml]\nindent_size = 2\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.498046875,
          "content": "target/\nwork/\n*.class\n\n# Ignore Intellij Idea project files\n*.iml\n*.ipr\n.idea\natlassian-ide-plugin.xml\nout/\n\n# _allow_ Intellij shared resources\n!.idea/icon.svg\n\n# Ignore Eclipse project files\n.settings\n.project\n.classpath\n.factorypath\n\n# Ignore MacOSX files\n.DS_Store\n\n# Ignore Netbeans project files\nnbproject/\nnbbuild/\n/bin/\n\n# Microsoft Visual Studio Code\n.vscode/\n\n#Xcode noise\nbuild/osx/openfirePrefPane/build\nxcuserdata/\n\n# build temp folders\nrpmbuild/\ndebian/\ndistribution/build/osx/\n\n.gradle\n\naioxmpp\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".transifex.yml",
          "type": "blob",
          "size": 0.2490234375,
          "content": "git:\n  filters:\n  - filter_type: file\n    source_file: i18n/src/main/resources/openfire_i18n.properties\n    file_format: UNICODEPROPERTIES\n    translation_files_expression: 'i18n/src/main/resources/openfire_i18n_<lang>.properties'\n    source_language: en\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.9716796875,
          "content": "# This stage extracts all the pom.xml files.\n# It'll get rebuilt with any source change, but that's OK.\n# It doesn't matter what image we're using, really, so we may as well use one of the same images as elsewhere.\nFROM eclipse-temurin:17-jre AS poms\nWORKDIR /usr/src\nCOPY . .\n# Wipe any files not called pom.xml or *.jar\nRUN find . -type f -and \\! -name pom.xml -and \\! -name '*.jar' -delete\n# Clear up any (now) empty diretories\nRUN find . -type d -empty -delete\n\n# Now we build:\nFROM eclipse-temurin:17 AS build\nWORKDIR /tmp/\nRUN mkdir /tmp/m2_repo\nWORKDIR /usr/src\nCOPY mvnw ./\nRUN chmod +x mvnw\nRUN mkdir -p .mvn\nCOPY .mvn/wrapper .mvn/wrapper\n\n# First, copy in just the pom.xml files and fetch the dependencies:\nCOPY --from=poms /usr/src/ .\n# I don't know why we need all three either.\nRUN ./mvnw -e -B dependency:resolve-plugins -Dmaven.test.skip -Dmaven.repo.local=/tmp/m2_repo\nRUN ./mvnw -e -B dependency:go-offline -Dmaven.test.skip -Dmaven.repo.local=/tmp/m2_repo\nRUN ./mvnw -e -B de.qaware.maven:go-offline-maven-plugin:resolve-dependencies -Dmaven.repo.local=/tmp/m2_repo\n\n# Above here is only affected by the pom.xml files, so the cache is stable.\n\n# Now, copy in all the source, and actually build it, skipping the tests.\nCOPY . .\nRUN ./mvnw -o -e -B package -Dmaven.test.skip -Dmaven.repo.local=/tmp/m2_repo\n# In case of Windows, break glass.\nRUN sed -i 's/\\r//g' /usr/src/distribution/target/distribution-base/bin/openfire.sh\n\n# Might as well create the user in a different stage if only to eliminate\n# the ugly && chaining and increase parallelization\nFROM eclipse-temurin:17-jre AS skeleton-runtime\n\nENV OPENFIRE_USER=openfire \\\n    OPENFIRE_DIR=/usr/local/openfire \\\n    OPENFIRE_DATA_DIR=/var/lib/openfire \\\n    OPENFIRE_LOG_DIR=/var/log/openfire\n\nRUN apt-get update -qq\nRUN apt-get install -yyq adduser\nRUN adduser --disabled-password --quiet --system --home $OPENFIRE_DATA_DIR --gecos \"Openfire XMPP server\" --group $OPENFIRE_USER\n\n# Final stage, build the runtime container:\nFROM eclipse-temurin:17-jre AS runtime\n\nENV OPENFIRE_USER=openfire \\\n    OPENFIRE_DIR=/usr/local/openfire \\\n    OPENFIRE_DATA_DIR=/var/lib/openfire \\\n    OPENFIRE_LOG_DIR=/var/log/openfire\n\nCOPY --from=skeleton-runtime /etc/passwd /etc/shadow /etc/group /etc/\nCOPY --chown=openfire::openfire --from=skeleton-runtime $OPENFIRE_DATA_DIR $OPENFIRE_DATA_DIR\nCOPY --chmod=0755 --from=build /usr/src/build/docker/entrypoint.sh /sbin/entrypoint.sh\nCOPY --chown=openfire:openfire --from=build /usr/src/distribution/target/distribution-base /usr/local/openfire\nRUN mv ${OPENFIRE_DIR}/conf ${OPENFIRE_DIR}/conf_org \\\n    && mv ${OPENFIRE_DIR}/plugins ${OPENFIRE_DIR}/plugins_org \\\n    && mv ${OPENFIRE_DIR}/resources/security ${OPENFIRE_DIR}/resources/security_org\n\nLABEL org.opencontainers.image.authors=\"dave@cridland.net,dan@caseley.me.uk\"\nWORKDIR /usr/local/openfire\n\nEXPOSE 3478 3479 5005 5222 5223 5229 5262 5263 5275 5276 7070 7443 7777 9090 9091\nVOLUME [\"${OPENFIRE_DATA_DIR}\"]\nVOLUME [\"${OPENFIRE_LOG_DIR}\"]\nENTRYPOINT [ \"/sbin/entrypoint.sh\" ]\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.5458984375,
          "content": ".PHONY: all clean dbkg eclipse\n\nall: build-openfire\n\n# Can not use 'build' as target name, because there is a\n# directory called build\nbuild-openfire:\n\t./mvnw package --batch-mode --no-transfer-progress\n\nclean:\n\t./mvnw clean\n\ndist:\n\t./mvnw package --batch-mode --no-transfer-progress -DskipTests=true\n\nplugins:\n\t./mvnw package --batch-mode --no-transfer-progress\n\neclipse: .settings .classpath .project\n\n.settings:\n\tln -s build/eclipse/settings .settings\n\n.classpath:\n\tln -s build/eclipse/classpath .classpath\n\n.project:\n\tln -s build/eclipse/project .project\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.0224609375,
          "content": "Openfire ![alt tag](https://raw.githubusercontent.com/igniterealtime/IgniteRealtime-Website/main/src/main/webapp/images/logo_openfire.gif)\n========\n[![Openfire CI](https://github.com/igniterealtime/Openfire/workflows/Openfire%20CI/badge.svg?branch=main)](https://github.com/igniterealtime/Openfire/actions?query=workflow%3A%22Openfire+CI%22+branch%3Amain)  [![Project Stats](https://www.openhub.net/p/Openfire/widgets/project_thin_badge.gif)](https://www.openhub.net/p/Openfire)\n\nAbout\n-----\n[Openfire] is a real time collaboration (RTC) server licensed under the Open Source Apache License.\nIt uses the only widely adopted open protocol for instant messaging, XMPP (also called Jabber).\nOpenfire is incredibly easy to set up and administer, but offers rock-solid security and performance.\n\n[Openfire] is an XMPP server licensed under the Open Source Apache License.\n\n[Openfire] - an [Ignite Realtime] community project.\n\nBug Reporting\n-------------\n\nOnly a few users have access for filling bugs in the tracker. New\nusers should:\n\n1. Create a Discourse account\n2. Login to a Discourse account\n3. Click on the New Topic button\n4. Choose the [Openfire Dev category](https://discourse.igniterealtime.org/c/openfire/openfire-dev) and provide a detailed description of the bug.\n\nPlease search for your issues in the bug tracker before reporting.\n\nResources\n---------\n\n- Documentation: https://www.igniterealtime.org/projects/openfire/documentation.jsp\n- Community: https://discourse.igniterealtime.org/c/openfire\n- Bug Tracker: https://igniterealtime.atlassian.net/browse/OF\n- Nightly Builds: https://www.igniterealtime.org/downloads/nightly_openfire.jsp\n- Translations: https://explore.transifex.com/search/?q=openfire\n\nIgnite Realtime\n===============\n\n[Ignite Realtime] is an Open Source community composed of end-users and developers around the world who \nare interested in applying innovative, open-standards-based Real Time Collaboration to their businesses and organizations. \nWe're aimed at disrupting proprietary, non-open standards-based systems and invite you to participate in what's already one \nof the biggest and most active Open Source communities.\n\n[Openfire]: https://www.igniterealtime.org/projects/openfire/\n[Ignite Realtime]: https://www.igniterealtime.org\n[XMPP (Jabber)]: https://xmpp.org/\n\nMaking changes\n==============\nThe project uses [Maven](https://maven.apache.org/) and as such should import straight in to your favourite Java IDE.\nThe directory structure is fairly straightforward. The main code is contained in:\n\n* `Openfire/xmppserver` - a Maven module representing the core code for Openfire itself\n\nOther folders are:  \n* `Openfire/build` - various files use to create installers for different platforms\n* `Openfire/distribution` - a Maven module used to bring all the parts together\n* `Openfire/documentation` - the documentation hosted at [igniterealtime.org](https://www.igniterealtime.org/projects/openfire/documentation.jsp)\n* `Openfire/i18n` - files used for internationalisation of the admin interface\n* `Openfire/plugins` - Maven configuration files to allow the various [plugins](https://www.igniterealtime.org/projects/openfire/plugins.jsp) available to be built\n* `Openfire/starter` - a small module that allows Openfire to start in a consistent manner on different platforms\n\nTo build the complete project including plugins, run the command\n```\n./mvnw verify\n```  \n\nHowever much of the time it is only necessary to make changes to the core XMPP server itself in which case the command\n```\n./mvnw verify -pl distribution -am \n```  \nwill compile the core server and any dependencies, and then assemble it in to something that can be run. \n\nTesting your changes\n--------------------\n\n#### IntelliJ IDEA:\n\n1. Run -> Edit Configurations... -> Add Application\n2. fill in following values\n    1. Name: Openfire\n    2. Use classpath of module: starter\n    3. Main class: `org.jivesoftware.openfire.starter.ServerStarter`\n    4. VM options (adapt accordingly):\n        ````\n        -DopenfireHome=\"-absolute path to your project folder-\\distribution\\target\\distribution-base\" \n        -Xverify:none\n        -server\n        -Dlog4j.configurationFile=\"-absolute path to your project folder-\\distribution\\target\\distribution-base\\lib\\log4j2.xml\"\n        -Dopenfire.lib.dir=\"-absolute path to your project folder-\\distribution\\target\\distribution-base\\lib\"\n        -Dfile.encoding=UTF-8\n       ````\n   5. Working directory: -absolute path to your project folder-\n3. apply\n\nYou need to execute `mvnw verify` before you can launch openfire.\n\n#### Other IDE's:\n\nAlthough your IDE will happily compile the project, unfortunately it's not possible to run Openfire from within the \nIDE - it must be done at the command line. After building the project using Maven, simply run the shell script or \nbatch file to start Openfire;\n```\n./distribution/target/distribution-base/bin/openfire.sh\n```\nor\n```\n.\\distribution\\target\\distribution-base\\bin\\openfire.bat\n```\n\nAdding `-debug` as the first parameter to the script will start the server in debug mode, and your IDE should be able\nto attach a remote debugger if necessary.\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "distribution",
          "type": "tree",
          "content": null
        },
        {
          "name": "documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "i18n",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.91015625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.3.2\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ]; then\n\n  if [ -f /usr/local/etc/mavenrc ]; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ]; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ]; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false\ndarwin=false\nmingw=false\ncase \"$(uname)\" in\nCYGWIN*) cygwin=true ;;\nMINGW*) mingw=true ;;\nDarwin*)\n  darwin=true\n  # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n  # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n  if [ -z \"$JAVA_HOME\" ]; then\n    if [ -x \"/usr/libexec/java_home\" ]; then\n      JAVA_HOME=\"$(/usr/libexec/java_home)\"\n      export JAVA_HOME\n    else\n      JAVA_HOME=\"/Library/Java/Home\"\n      export JAVA_HOME\n    fi\n  fi\n  ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ]; then\n  if [ -r /etc/gentoo-release ]; then\n    JAVA_HOME=$(java-config --jre-home)\n  fi\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] \\\n    && JAVA_HOME=$(cygpath --unix \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] \\\n    && CLASSPATH=$(cygpath --path --unix \"$CLASSPATH\")\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw; then\n  [ -n \"$JAVA_HOME\" ] && [ -d \"$JAVA_HOME\" ] \\\n    && JAVA_HOME=\"$(\n      cd \"$JAVA_HOME\" || (\n        echo \"cannot cd into $JAVA_HOME.\" >&2\n        exit 1\n      )\n      pwd\n    )\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"$(which javac)\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"$(expr \"$javaExecutable\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=$(which readlink)\n    if [ ! \"$(expr \"$readLink\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n      if $darwin; then\n        javaHome=\"$(dirname \"$javaExecutable\")\"\n        javaExecutable=\"$(cd \"$javaHome\" && pwd -P)/javac\"\n      else\n        javaExecutable=\"$(readlink -f \"$javaExecutable\")\"\n      fi\n      javaHome=\"$(dirname \"$javaExecutable\")\"\n      javaHome=$(expr \"$javaHome\" : '\\(.*\\)/bin')\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ]; then\n  if [ -n \"$JAVA_HOME\" ]; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"$(\n      \\unset -f command 2>/dev/null\n      \\command -v java\n    )\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ]; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\" >&2\nfi\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n  if [ -z \"$1\" ]; then\n    echo \"Path not specified to find_maven_basedir\" >&2\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ]; do\n    if [ -d \"$wdir\"/.mvn ]; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=$(\n        cd \"$wdir/..\" || exit 1\n        pwd\n      )\n    fi\n    # end of workaround\n  done\n  printf '%s' \"$(\n    cd \"$basedir\" || exit 1\n    pwd\n  )\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    # Remove \\r in case we run on Windows within Git Bash\n    # and check out the repository with auto CRLF management\n    # enabled. Otherwise, we may read lines that are delimited with\n    # \\r\\n and produce $'-Xarg\\r' rather than -Xarg due to word\n    # splitting rules.\n    tr -s '\\r\\n' ' ' <\"$1\"\n  fi\n}\n\nlog() {\n  if [ \"$MVNW_VERBOSE\" = true ]; then\n    printf '%s\\n' \"$1\"\n  fi\n}\n\nBASE_DIR=$(find_maven_basedir \"$(dirname \"$0\")\")\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1\nfi\n\nMAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nexport MAVEN_PROJECTBASEDIR\nlog \"$MAVEN_PROJECTBASEDIR\"\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nwrapperJarPath=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\"\nif [ -r \"$wrapperJarPath\" ]; then\n  log \"Found $wrapperJarPath\"\nelse\n  log \"Couldn't find $wrapperJarPath, downloading it ...\"\n\n  if [ -n \"$MVNW_REPOURL\" ]; then\n    wrapperUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.3.2/maven-wrapper-3.3.2.jar\"\n  else\n    wrapperUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.3.2/maven-wrapper-3.3.2.jar\"\n  fi\n  while IFS=\"=\" read -r key value; do\n    # Remove '\\r' from value to allow usage on windows as IFS does not consider '\\r' as a separator ( considers space, tab, new line ('\\n'), and custom '=' )\n    safeValue=$(echo \"$value\" | tr -d '\\r')\n    case \"$key\" in wrapperUrl)\n      wrapperUrl=\"$safeValue\"\n      break\n      ;;\n    esac\n  done <\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\n  log \"Downloading from: $wrapperUrl\"\n\n  if $cygwin; then\n    wrapperJarPath=$(cygpath --path --windows \"$wrapperJarPath\")\n  fi\n\n  if command -v wget >/dev/null; then\n    log \"Found wget ... using wget\"\n    [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--quiet\"\n    if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n      wget $QUIET \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n    else\n      wget $QUIET --http-user=\"$MVNW_USERNAME\" --http-password=\"$MVNW_PASSWORD\" \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n    fi\n  elif command -v curl >/dev/null; then\n    log \"Found curl ... using curl\"\n    [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--silent\"\n    if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n      curl $QUIET -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n    else\n      curl $QUIET --user \"$MVNW_USERNAME:$MVNW_PASSWORD\" -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n    fi\n  else\n    log \"Falling back to using Java to download\"\n    javaSource=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n    javaClass=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.class\"\n    # For Cygwin, switch paths to Windows format before running javac\n    if $cygwin; then\n      javaSource=$(cygpath --path --windows \"$javaSource\")\n      javaClass=$(cygpath --path --windows \"$javaClass\")\n    fi\n    if [ -e \"$javaSource\" ]; then\n      if [ ! -e \"$javaClass\" ]; then\n        log \" - Compiling MavenWrapperDownloader.java ...\"\n        (\"$JAVA_HOME/bin/javac\" \"$javaSource\")\n      fi\n      if [ -e \"$javaClass\" ]; then\n        log \" - Running MavenWrapperDownloader.java ...\"\n        (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$wrapperUrl\" \"$wrapperJarPath\") || rm -f \"$wrapperJarPath\"\n      fi\n    fi\n  fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\n# If specified, validate the SHA-256 sum of the Maven wrapper jar file\nwrapperSha256Sum=\"\"\nwhile IFS=\"=\" read -r key value; do\n  case \"$key\" in wrapperSha256Sum)\n    wrapperSha256Sum=$value\n    break\n    ;;\n  esac\ndone <\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\nif [ -n \"$wrapperSha256Sum\" ]; then\n  wrapperSha256Result=false\n  if command -v sha256sum >/dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | sha256sum -c >/dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  elif command -v shasum >/dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | shasum -a 256 -c >/dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n    echo \"Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  fi\n  if [ $wrapperSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.\" >&2\n    echo \"Investigate or delete $wrapperJarPath to attempt a clean download.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified wrapperSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] \\\n    && JAVA_HOME=$(cygpath --path --windows \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] \\\n    && CLASSPATH=$(cygpath --path --windows \"$CLASSPATH\")\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] \\\n    && MAVEN_PROJECTBASEDIR=$(cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\")\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $*\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\n# shellcheck disable=SC2086 # safe args\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 7.7177734375,
          "content": "@REM ----------------------------------------------------------------------------\r\n@REM Licensed to the Apache Software Foundation (ASF) under one\r\n@REM or more contributor license agreements.  See the NOTICE file\r\n@REM distributed with this work for additional information\r\n@REM regarding copyright ownership.  The ASF licenses this file\r\n@REM to you under the Apache License, Version 2.0 (the\r\n@REM \"License\"); you may not use this file except in compliance\r\n@REM with the License.  You may obtain a copy of the License at\r\n@REM\r\n@REM    http://www.apache.org/licenses/LICENSE-2.0\r\n@REM\r\n@REM Unless required by applicable law or agreed to in writing,\r\n@REM software distributed under the License is distributed on an\r\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n@REM KIND, either express or implied.  See the License for the\r\n@REM specific language governing permissions and limitations\r\n@REM under the License.\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@REM ----------------------------------------------------------------------------\r\n@REM Apache Maven Wrapper startup batch script, version 3.3.2\r\n@REM\r\n@REM Required ENV vars:\r\n@REM JAVA_HOME - location of a JDK home dir\r\n@REM\r\n@REM Optional ENV vars\r\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\r\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\r\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\r\n@REM     e.g. to debug Maven itself, use\r\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\r\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\r\n@echo off\r\n@REM set title of command window\r\ntitle %0\r\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\r\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\r\n\r\n@REM set %HOME% to equivalent of $HOME\r\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\r\n\r\n@REM Execute a user defined script before this one\r\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\r\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\r\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\r\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\r\n:skipRcPre\r\n\r\n@setlocal\r\n\r\nset ERROR_CODE=0\r\n\r\n@REM To isolate internal variables from possible post scripts, we use another setlocal\r\n@setlocal\r\n\r\n@REM ==== START VALIDATION ====\r\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\r\n\r\necho. >&2\r\necho Error: JAVA_HOME not found in your environment. >&2\r\necho Please set the JAVA_HOME variable in your environment to match the >&2\r\necho location of your Java installation. >&2\r\necho. >&2\r\ngoto error\r\n\r\n:OkJHome\r\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\r\n\r\necho. >&2\r\necho Error: JAVA_HOME is set to an invalid directory. >&2\r\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\r\necho Please set the JAVA_HOME variable in your environment to match the >&2\r\necho location of your Java installation. >&2\r\necho. >&2\r\ngoto error\r\n\r\n@REM ==== END VALIDATION ====\r\n\r\n:init\r\n\r\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\r\n@REM Fallback to current working directory if not found.\r\n\r\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\r\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\r\n\r\nset EXEC_DIR=%CD%\r\nset WDIR=%EXEC_DIR%\r\n:findBaseDir\r\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\r\ncd ..\r\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\r\nset WDIR=%CD%\r\ngoto findBaseDir\r\n\r\n:baseDirFound\r\nset MAVEN_PROJECTBASEDIR=%WDIR%\r\ncd \"%EXEC_DIR%\"\r\ngoto endDetectBaseDir\r\n\r\n:baseDirNotFound\r\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\r\ncd \"%EXEC_DIR%\"\r\n\r\n:endDetectBaseDir\r\n\r\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\r\n\r\n@setlocal EnableExtensions EnableDelayedExpansion\r\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\r\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\r\n\r\n:endReadAdditionalConfig\r\n\r\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\r\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\r\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\r\n\r\nset WRAPPER_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.3.2/maven-wrapper-3.3.2.jar\"\r\n\r\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\r\n    IF \"%%A\"==\"wrapperUrl\" SET WRAPPER_URL=%%B\r\n)\r\n\r\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\r\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\r\nif exist %WRAPPER_JAR% (\r\n    if \"%MVNW_VERBOSE%\" == \"true\" (\r\n        echo Found %WRAPPER_JAR%\r\n    )\r\n) else (\r\n    if not \"%MVNW_REPOURL%\" == \"\" (\r\n        SET WRAPPER_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.3.2/maven-wrapper-3.3.2.jar\"\r\n    )\r\n    if \"%MVNW_VERBOSE%\" == \"true\" (\r\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\r\n        echo Downloading from: %WRAPPER_URL%\r\n    )\r\n\r\n    powershell -Command \"&{\"^\r\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\r\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\r\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\r\n\t\t\"}\"^\r\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')\"^\r\n\t\t\"}\"\r\n    if \"%MVNW_VERBOSE%\" == \"true\" (\r\n        echo Finished downloading %WRAPPER_JAR%\r\n    )\r\n)\r\n@REM End of extension\r\n\r\n@REM If specified, validate the SHA-256 sum of the Maven wrapper jar file\r\nSET WRAPPER_SHA_256_SUM=\"\"\r\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\r\n    IF \"%%A\"==\"wrapperSha256Sum\" SET WRAPPER_SHA_256_SUM=%%B\r\n)\r\nIF NOT %WRAPPER_SHA_256_SUM%==\"\" (\r\n    powershell -Command \"&{\"^\r\n       \"Import-Module $PSHOME\\Modules\\Microsoft.PowerShell.Utility -Function Get-FileHash;\"^\r\n       \"$hash = (Get-FileHash \\\"%WRAPPER_JAR%\\\" -Algorithm SHA256).Hash.ToLower();\"^\r\n       \"If('%WRAPPER_SHA_256_SUM%' -ne $hash){\"^\r\n       \"  Write-Error 'Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.';\"^\r\n       \"  Write-Error 'Investigate or delete %WRAPPER_JAR% to attempt a clean download.';\"^\r\n       \"  Write-Error 'If you updated your Maven version, you need to update the specified wrapperSha256Sum property.';\"^\r\n       \"  exit 1;\"^\r\n       \"}\"^\r\n       \"}\"\r\n    if ERRORLEVEL 1 goto error\r\n)\r\n\r\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\r\n@REM work with both Windows and non-Windows executions.\r\nset MAVEN_CMD_LINE_ARGS=%*\r\n\r\n%MAVEN_JAVA_EXE% ^\r\n  %JVM_CONFIG_MAVEN_PROPS% ^\r\n  %MAVEN_OPTS% ^\r\n  %MAVEN_DEBUG_OPTS% ^\r\n  -classpath %WRAPPER_JAR% ^\r\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\r\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\r\nif ERRORLEVEL 1 goto error\r\ngoto end\r\n\r\n:error\r\nset ERROR_CODE=1\r\n\r\n:end\r\n@endlocal & set ERROR_CODE=%ERROR_CODE%\r\n\r\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\r\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\r\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\r\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\r\n:skipRcPost\r\n\r\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\r\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\r\n\r\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\r\n\r\ncmd /C exit /B %ERROR_CODE%\r\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 17.560546875,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.igniterealtime.openfire</groupId>\n    <artifactId>parent</artifactId>\n    <version>5.0.0-SNAPSHOT</version>\n    <name>Parent</name>\n    <packaging>pom</packaging>\n\n    <description>Openfire is a cross-platform real-time collaboration server based on the XMPP (Jabber) protocol.</description>\n\n    <modules>\n        <module>i18n</module>\n        <module>xmppserver</module>\n        <module>starter</module>\n        <module>plugins</module>\n        <module>distribution</module>\n    </modules>\n\n    <organization>\n        <name>Ignite Realtime</name>\n        <url>https://www.igniterealtime.org</url>\n    </organization>\n    <url>https://www.igniterealtime.org/projects/openfire/</url>\n\n    <inceptionYear>2003</inceptionYear>\n\n    <licenses>\n        <license>\n            <name>Apache License, Version 2.0</name>\n            <url>https://www.apache.org/licenses/LICENSE-2.0</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <issueManagement>\n        <system>jira</system>\n        <url>https://igniterealtime.atlassian.net/browse/OF</url>\n    </issueManagement>\n\n    <scm>\n        <connection>scm:git:https://github.com/igniterealtime/Openfire.git</connection>\n        <developerConnection>scm:git:git@github.com:igniterealtime/Openfire.git</developerConnection>\n        <url>https://github.com/igniterealtime/Openfire/tree/main</url>\n    </scm>\n\n    <developers>\n        <developer>\n            <name>Guus der Kinderen</name>\n            <roles>\n                <role>Lead Developer</role>\n            </roles>\n            <email>guus.der.kinderen@gmail.com</email>\n            <timezone>+1</timezone>\n            <organization>Ignite Realtime</organization>\n            <organizationUrl>https://www.igniterealtime.org</organizationUrl>\n        </developer>\n        <developer>\n            <name>Robin Collier</name>\n            <roles>\n                <role>Developer</role>\n            </roles>\n            <email>robincollier@hotmail.com</email>\n            <timezone>-5</timezone>\n            <organization>Ignite Realtime</organization>\n            <organizationUrl>https://www.igniterealtime.org</organizationUrl>\n        </developer>\n        <developer>\n            <name>Matt Tucker</name>\n            <roles>\n                <role>Original Author</role>\n                <role>Developer (inactive)</role>\n            </roles>\n            <email>matt@jivesoftware.com</email>\n            <organization>Jive Software</organization>\n            <organizationUrl>http://www.jivesoftware.com</organizationUrl>\n            <timezone>-8</timezone>\n        </developer>\n        <developer>\n            <name>Gaston Dombiak</name>\n            <roles>\n                <role>Original Author</role>\n                <role>Lead Developer (inactive)</role>\n            </roles>\n            <email>gaston@jivesoftware.com</email>\n            <organization>Jive Software</organization>\n            <organizationUrl>http://www.jivesoftware.com</organizationUrl>\n            <timezone>-8</timezone>\n        </developer>\n        <developer>\n            <name>Daniel Henninger</name>\n            <roles>\n                <role>Developer (inactive)</role>\n            </roles>\n            <email>daniel@vorpalcloud.org</email>\n            <timezone>-5</timezone>\n            <organization>Ignite Realtime</organization>\n            <organizationUrl>https://www.igniterealtime.org</organizationUrl>\n        </developer>\n    </developers>\n\n    <contributors>\n        <contributor>\n            <name>Daryl Herzmann</name>\n            <roles>\n                <role>Community Organizer</role>\n            </roles>\n            <email>akrherz@iastate.edu</email>\n            <organization>Iowa State University</organization>\n            <organizationUrl>https://mesonet.agron.iastate.edu</organizationUrl>\n            <timezone>-6</timezone>\n        </contributor>\n    </contributors>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <!-- Use static build timestamp for reproducible builds -->\n        <project.build.outputTimestamp>1980-02-01T00:00:00Z</project.build.outputTimestamp>\n\n        <!-- Versions -->\n        <!-- Note; the following jetty.version should be identical to the jetty.version in plugins/pom.xml -->\n        <jetty.version>12.0.14</jetty.version>\n        <standard-taglib.version>1.2.5</standard-taglib.version>\n        <netty.version>4.1.115.Final</netty.version>\n        <bouncycastle.version>1.78.1</bouncycastle.version>\n        <slf4j.version>2.0.9</slf4j.version>\n        <log4j.version>2.20.0</log4j.version>\n    </properties>\n\n    <profiles>\n\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>1.6</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>ci</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>3.0.1</version>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>3.5.0</version>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <quiet>true</quiet>\n                            <doclint>none</doclint>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>deps</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.owasp</groupId>\n                        <artifactId>dependency-check-maven</artifactId>\n                        <version>8.4.2</version>\n                        <configuration>\n                            <suppressionFiles>\n                                <suppressionFile>.dependency-check-suppressions.xml</suppressionFile>\n                            </suppressionFiles>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>aggregate</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n    </profiles>\n\n    <build>\n\n        <pluginManagement>\n\n            <plugins>\n\n                <plugin>\n                    <groupId>de.qaware.maven</groupId>\n                    <artifactId>go-offline-maven-plugin</artifactId>\n                    <version>1.2.8</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.4.2</version>\n                    <configuration>\n                        <archive>\n                            <manifest>\n                                <addClasspath>false</addClasspath>\n                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                                <!-- Don't add Created-By and Build-Jdk-Spec fields to manifest for reproducible builds -->\n                                <addDefaultEntries>false</addDefaultEntries>\n                            </manifest>\n                            <manifestEntries>\n                                <Built-By>Jive Software (www.igniterealtime.org)</Built-By>\n                                <MavenGroupId>${project.groupId}</MavenGroupId>\n                                <MavenArtifactId>${project.artifactId}</MavenArtifactId>\n                                <MavenVersion>${project.version}</MavenVersion>\n                                <MavenParentGroupId>${project.parent.groupId}</MavenParentGroupId>\n                                <MavenParentArtifactId>${project.parent.artifactId}</MavenParentArtifactId>\n                                <MavenParentVersion>${project.parent.version}</MavenParentVersion>\n                            </manifestEntries>\n                        </archive>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-war-plugin</artifactId>\n                    <version>3.2.2</version>\n                    <configuration>\n                        <archive>\n                            <manifest>\n                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n                            </manifest>\n                            <manifestEntries>\n                                <MavenGroupId>${project.groupId}</MavenGroupId>\n                                <MavenArtifactId>${project.artifactId}</MavenArtifactId>\n                                <MavenVersion>${project.version}</MavenVersion>\n                                <MavenParentGroupId>${project.parent.groupId}</MavenParentGroupId>\n                                <MavenParentArtifactId>${project.parent.artifactId}</MavenParentArtifactId>\n                                <MavenParentVersion>${project.parent.version}</MavenParentVersion>\n                            </manifestEntries>\n                        </archive>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.0</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-assembly-plugin</artifactId>\n                    <version>3.1.1</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>3.1.0</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-dependency-plugin</artifactId>\n                    <version>3.1.1</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>versions-maven-plugin</artifactId>\n                    <version>2.7</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.owasp</groupId>\n                    <artifactId>dependency-check-maven</artifactId>\n                    <version>6.0.4</version>\n                </plugin>\n\n            </plugins>\n\n        </pluginManagement>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <source>17</source>\n                    <target>17</target>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>3.0.0-M2</version>\n                <executions>\n                    <execution>\n                        <id>enforce-no-snapshots</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <requireMavenVersion>\n                                    <version>3.5.0</version>\n                                </requireMavenVersion>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n                <configuration>\n                    <rules>\n                        <requireReleaseDeps>\n                            <message>No Snapshots Allowed!</message>\n                            <onlyWhenRelease>true</onlyWhenRelease>\n                        </requireReleaseDeps>\n                    </rules>\n                    <fail>true</fail>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>xmppserver</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>webadmin</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-api</artifactId>\n                <version>${log4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-core</artifactId>\n                <version>${log4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-slf4j2-impl</artifactId>\n                <version>${log4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.directwebremoting</groupId>\n                <artifactId>dwr</artifactId>\n                <version>3.0.2-RELEASE</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>bsf</groupId>\n                        <artifactId>bsf</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>dom4j</groupId>\n                        <artifactId>dom4j</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>jdom</groupId>\n                        <artifactId>jdom</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>xom</groupId>\n                        <artifactId>xom</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <distributionManagement>\n        <!-- Repository in which we deploy this project, when desired. -->\n        <repository>\n            <id>igniterealtime</id>\n            <name>Ignite Realtime Repository</name>\n            <url>https://igniterealtime.org/archiva/repository/maven/</url>\n        </repository>\n    </distributionManagement>\n\n    <repositories>\n        <!-- Where we obtain dependencies. -->\n        <repository>\n            <id>igniterealtime</id>\n            <name>Ignite Realtime Repository</name>\n            <url>https://igniterealtime.org/archiva/repository/maven/</url>\n        </repository>\n    </repositories>\n\n    <pluginRepositories>\n        <!-- Typically used to retrieve Maven plugins used by this project from. This\n             apparently is also used to obtain the dependencies _used by_ plugins\n             (eg: openfire-plugin-assembly-descriptor) -->\n        <pluginRepository>\n            <id>igniterealtime</id>\n            <name>Ignite Realtime Repository</name>\n            <url>https://igniterealtime.org/archiva/repository/maven/</url>\n        </pluginRepository>\n    </pluginRepositories>\n\n</project>\n"
        },
        {
          "name": "starter",
          "type": "tree",
          "content": null
        },
        {
          "name": "xmppserver",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}