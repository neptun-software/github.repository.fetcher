{
  "metadata": {
    "timestamp": 1736708116566,
    "page": 526,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Guardsquare/proguard",
      "stars": 2969,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.03125,
          "content": "gradlew -text\ngradlew.bat -text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.07421875,
          "content": ".gradle\n.hg/**\n.hgtags\n.idea\nbuild\nlocal.properties\n/lib/\ndocs/html\n.kotlin\n"
        },
        {
          "name": ".hgignore",
          "type": "blob",
          "size": 0.01953125,
          "content": "syntax: glob\n.git/*\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.892578125,
          "content": "# Contributing to ProGuard\n\nThank you for contributing!\n\n- You can report issues on our [issue tracker](issues) on GitHub. Please be\n  concise and complete. If we can't reproduce an issue, we most likely can't\n  fix it.\n\n- You can also clone the [source code](.) yourself and create [pull\n  requests](pulls) on GitHub.\n\nThese are a few guidelines for our code and documentation.\n\n## Basic principle\n\nAbove all, code should be consistent. Study, respect, and follow the style of\nthe existing code.\n\n## Code design\n\nThe code generally defines many short classes, as the building blocks for\nclasses that contain the real logic. This is sometimes taken to the extreme:\neven loops and conditional statements can often be implemented as separate\nclasses. Even though these classes are verbose and repetitive, the resulting\nmain code becomes much more compact, flexible, and robust.\n\n### Data classes\n\nBasic data classes define the data structures, with just a minimum number of\noperations: Java bytecode classes, Dex bytecode classes, XML data, native\nlibraries, etc. They typically reflect their respective specifications\nliterally. The data classes have one or more `accept` methods to let the\nvisitor classes below operate on them.\n\n### Visitors\n\nThe code relies a lot on the visitor pattern. Visitor classes define the\noperations on the data: reading, writing, editing, transforming, etc. The\nvisitor classes have one or more `visit` methods to operate on data classes of\nthe same basic type.\n\nFor example, a Java bytecode class contains a constant pool with constants of\ndifferent types: integer constants, float constants, string constants, etc.\nThe data classes IntegerConstant, FloatConstant, StringConstant, etc. all\nimplement the basic type Constant. The visitor interface ConstantVisitor\ncontains methods 'visitIntegerConstant', 'visitFloatConstant',\n'visitStringConstant', etc. Implementations of this visitor interface can\nperform all kinds of operations on the constants.\n\nThe reasoning behind this pattern is that the data classes are very stable,\nbecause they are directly based on the specifications (class files, dex files,\nbinary XML files, ELF files, etc). The operations are more dynamic. They are\nchanged and extended all the time. It is practically impossible to add all\npossible operations in the data classes, but it is easy to add another\nimplementation of a visitor interface. Implementing an interface in practice\nhelps a lot to think of all possible cases.\n\nThe visitor pattern uses visitor interfaces to operate on the similar elements\nof a data structure. Each interface often has many implementations. A great\ndisadvantage at this time is that visitor methods can invoke one another\n(directly or indirectly), but they can't communicate easily. Since the\nimplementations can't add their own parameters or return values, they often\nhave to rely on fields to pass values back and forth. This is more\nerror-prone. Still, the advantages of the visitor pattern outweigh the\ndisadvantages.\n\nWe prefer (visitor) interfaces with many classes that implement them, so the\nimplementations can be used as building blocks.\n\n### Facade classes\n\nWith many small visitor classes available as building blocks, the important\ncode chains these visitors together. The main ProGuard packages contain a\nnumber of facade classes that construct and run these chains. Notably:\n\n- `ProGuard` is the main entry point, with a long linear sequence of\n  operations that it delegates to the facade classes.\n\n- `InputReader` reads the code and resources.\n\n- `Initializer` initializes links between the code and resources, to traverse\n  the data structures more easily.\n\n- `Marker` marks code and resources to be kept etc. based on the configuration.\n\n- `Backporter` backports code to older versions of Java.\n\n- `ConfigurationLoggingAdder` instruments code to give feedback about\n  potentially missing configuration.\n\n- `Shrinker` removes unused code and resources.\n\n- `Optimizer` optimizes the code and resources.\n\n- `Obfuscator` obfuscates the code and resources.\n\n- `Preverifier` adds preverification metadata to code for Java 6 and higher.\n\n### Data flow\n\nAt a high level, the flow of data inside ProGuard is as follows:\n\n- Traverse the input data, to parse any useful data structures.\n\n- Process the data structures in a number of steps (mainly shrinking, optimization,\n  obfuscation).\n\n- Traverse the input data again, this time to write to the output, by copying,\n  transforming, replacing, or removing data entries. The transformations can\n  be small (e.g. replacing class names in properties files) or large (e.g.\n  replacing all classes and resources by obfuscated counterparts).\n\nImportant interfaces for this flow:\n\n- `DataEntryReader` uses a push mechanism. It typically traverses data entries\n  (files and nested zip entries) in the input and pushes them to data entry\n  visitors. The visitors can access the actual data through input streams.\n\n- `DataEntryWriter` uses a pull mechanism. It can return output streams for\n  data entries.\n\nThe first traversal and parsing of the input data is based on implementations\nof DataEntryReader.\n\nThe second traversal of the input data is based on the same implementations of\nDataEntryReader, with additional implementations that use implementations of\nDataEntryWriter to transform and write the output data.\n\n### Dependency injection\n\nWe heavily use **constructor-based dependency injection**, to create immutable\nobjects. Notably the visitors are often like commands that are combined in an\nimmutable structure, via constructors. The commands are then executed by\napplying the visitors to the classes or other data structures.\n\n### Getters and setters\n\nWe try to **avoid getters and setters** outside of pure data classes.\nGenerally, getters and setters break data encapsulation -- \"Tell, don't ask\".\nIn our architecture, visitors often delegate to a chain of other visitors,\nwith the final visitor applying actual changes to the data structures.\nVisitors that change the data classes often access fields directly, since they\nconceptually have the same purpose as methods inside the data classes.\n\n## Code style\n\nOver time, we've adopted a few guidelines:\n\n- Historically, ProGuard hasn't used generics, enums, iterable loops, variable\n  arguments, or closures. More recent code can use the features of Java 8, but\n  be consistent.\n\n- Prefer **arrays** over lists, if their sizes are relatively static. The\n  resulting code is easier to read, without casts or generics.\n\n- Prefer **short classes** over long classes, although long classes that simply\n  implement the many methods of their interfaces are okay.\n\n- Prefer **short methods**, although long methods with a linear flow are okay.\n\n- **Declare and initialize** fields and variables at the same time, when\n  possible.\n\n- Make fields **final**, when possible:\n    ```\n    private final CodeAttributeComposer composer = new CodeAttributeComposer();\n    ```\n\n- We generally don't make local variables final, to avoid cluttering the code\n  too much.\n\n- Maintain a **consistent order** for fields, methods (e.g.. getters and\n  setters), case statements, etc. A good basic rule for new classes is that\n  their contents should be in chronological order or respecting the natural\n  hierarchical order of the data -- Which fields are accessed first? Which\n  methods are accessed first? Which data comes first in the data structures?\n  For classes that implement or resemble other classes, the contents should\n  respect the same order.\n\n## Documentation\n\nAll classes must have main javadoc:\n\n    /**\n     * This {@link ClassVisitor} collects the names of the classes that it\n     * visits in the given collection.\n     *\n     * @author Eric Lafortune\n     */\n\nMethods should have javadoc:\n\n    /**\n     * Returns the number of parameters of the given internal method descriptor.\n     * @param internalMethodDescriptor the internal method descriptor,\n     *                                 e.g. \"<code>(ID)Z</code>\".\n     * @param isStatic                 specifies whether the method is static,\n     *                                 e.g. false.\n     * @return the number of parameters,\n     *                                 e.g. 3.\n     */\n\nIn practice, fields rarely have javadoc (this is debatable...)\n\nMethods that implement interfaces generally don't have javadoc, since they\nsimply implement the behavior specified by the interfaces. Instead, a group of\nmethods that implements an interface is documented with:\n\n    // Implementations for SomeInterface.\n\nMost code has comments for each block of statements. The idea is to make the\ncode readable by just glancing over the comments (which works well if they are\ncolored in an IDE).\n\nComments are generally short sentences, starting with a capital and ending\nwith a period:\n\n    // This is a comment.\n\nFor the manual (written as markdown), you should follow the excellent advice\nof the [Google Developer Documentation Style\nGuide](https://developers.google.com/style/).\n\n## Code format\n\nWe strive for code that is super-aligned. Ideally, the code should look like a\nset of tables, for variable declarations, parameter declarations, ternary\noperators, etc.\n\n- The basic indentation is 4 spaces (never tabs).\n\n- Curly braces are on separate lines.\n\n- The ideal maximum line length is 120 characters. Documentation and comments\n  should stick to this limit. Code that has a nice table-like structure can\n  exceed it.\n\n- Imports of multiple classes in the same package are specified with a\n  wildcard '*'.\n\n- Try to preserve a logical, consistent order in fields, getters/setters,\n  methods, variables.\n\n- Whenever overriding a method, add the @Override annotation.\n\nIn practice, an IDE can help to obtain a clean indentation and structure, but\nit is often not sufficient. Be careful to never upset a cleanly formatted\nsource file by automatically reformatting it.\n\n### Naming Conventions\n\n- Names (class names, field names, etc) should be descriptive.\n\n- We generally don't abbreviate names, not even index variables:\n    ```\n    for (int index = 0; index < count; index++)\n    ```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.8564453125,
          "content": "<p align=\"center\">\n  <br />\n  <br />\n  <a href=\"https://www.guardsquare.com/proguard\">\n    <img\n      src=\"https://www.guardsquare.com/hubfs/Logos/ProGuard-Logo-Email.png\"\n      alt=\"ProGuard\" width=\"400\">\n  </a>\n</p>\n\n<!-- Badges -->\n<p align=\"center\">\n  <!-- CI -->\n  <a href=\"https://github.com/Guardsquare/proguard/actions?query=workflow%3A%22Continuous+Integration%22\">\n    <img src=\"https://github.com/Guardsquare/proguard/workflows/Continuous%20Integration/badge.svg\">\n  </a>\n  \n  <!-- Github version -->\n  <!--\n  <a href=\"releases\">\n    <img src=\"https://img.shields.io/github/v/release/guardsquare/proguard\">\n  </a>\n  -->\n    \n  <!-- Maven -->\n  <a href=\"https://search.maven.org/search?q=g:com.guardsquare\">\n    <img src=\"https://img.shields.io/maven-central/v/com.guardsquare/proguard-base\">\n  </a>\n  \n  <!-- License -->\n  <a href=\"LICENSE\">\n    <img src=\"https://img.shields.io/github/license/guardsquare/proguard\">\n  </a>\n\n  <!-- Twitter -->\n  <a href=\"https://twitter.com/Guardsquare\">\n    <img src=\"https://img.shields.io/twitter/follow/guardsquare?style=social\">\n  </a>\n</p>\n\n<br />\n<p align=\"center\">\n  <a href=\"#-quick-start\"><b>Quick Start</b></a> •\n  <a href=\"#-features\"><b>Features</b></a> •\n  <a href=\"#-contributing\"><b>Contributing</b></a> •\n  <a href=\"#-license\"><b>License</b></a>\n</p>\n<br />\n\nProGuard is a free shrinker, optimizer, obfuscator, and preverifier for Java\nbytecode:\n\n* It detects and removes unused classes, fields, methods, and attributes.\n\n* It optimizes bytecode and removes unused instructions.\n\n* It renames the remaining classes, fields, and methods using short\n  meaningless names.\n\nThe resulting applications and libraries are smaller and faster.\n\n## ❓ Getting Help\nPlease use <a href=\"https://github.com/guardsquare/proguard/issues\">**the issue tracker**</a> to report actual **bugs 🐛, crashes**, etc.\n<br />\n<br />\n\n## 🚀 Quick Start\n\n### Command line\n\nFirst, download the latest release from [GitHub releases](https://github.com/Guardsquare/proguard/releases).\n\nTo run ProGuard, on Linux/MacOS, just type:\n\n```bash\nbin/proguard.sh <options...>\n```\n\nor on Windows:\n\n```\nbin\\proguard.bat <options...>\n```\n\nTypically, you'll put most options in a configuration file (say,\n`myconfig.pro`), and just call\n\n```bash\nbin/proguard.sh @myconfig.pro\n```\nor on Windows:\n\n```\nbin\\proguard.bat @myconfig.pro\n```\n\nAll available options are described in the [configuration section of the manual](https://www.guardsquare.com/manual/configuration/usage).\n\n### Gradle Task\n\nProGuard can be run as a task in Gradle. Before you can use the proguard task, you have to make sure Gradle can\nfind it in its class path at build time. One way is to add the following\nline to your **`build.gradle`** file which will download ProGuard from Maven Central:\n\n```Groovy\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.guardsquare:proguard-gradle:7.6.1'\n    }\n}\n```\n\nYou can then define a task with configuration:\n\n```Groovy\ntasks.register('proguard', ProGuardTask) {\n    configuration file('proguard.pro')\n\n    injars(tasks.named('jar', Jar).flatMap { it.archiveFile })\n\n    // Automatically handle the Java version of this build.\n    if (System.getProperty('java.version').startsWith('1.')) {\n        // Before Java 9, the runtime classes were packaged in a single jar file.\n        libraryjars \"${System.getProperty('java.home')}/lib/rt.jar\"\n    } else {\n        // As of Java 9, the runtime classes are packaged in modular jmod files.\n        libraryjars \"${System.getProperty('java.home')}/jmods/java.base.jmod\", jarfilter: '!**.jar', filter: '!module-info.class'\n        //libraryjars \"${System.getProperty('java.home')}/jmods/.....\"\n    }\n\n    verbose\n\n    outjars(layout.buildDirectory.file(\"libs/${baseCoordinates}-minified.jar\"))\n}\n```\n\nThe embedded configuration is much like a standard ProGuard\nconfiguration. You can find more details on the [Gradle setup page](https://www.guardsquare.com/manual/setup/gradle).\n\n## ✨ Features\n\nProGuard works like an advanced optimizing compiler, removing unused classes,\nfields, methods, and attributes, shortening identifiers, merging classes,\ninlining methods, propagating constants, removing unused parameters, etc.\n\n* The optimizations typically reduce the size of an application by anything\n  between 20% and 90%. The reduction mostly depends on the size of external\n  libraries that ProGuard can remove in whole or in part.\n\n* The optimizations may also improve the performance of the application, by up\n  to 20%. For Java virtual machines on servers and desktops, the difference\n  generally isn't noticeable.\n\n* ProGuard can also remove logging code, from applications and their\n  libraries, without needing to change the source code &mdash; in fact,\n  without needing the source code at all!\n\nThe manual pages ([markdown](docs/md),\n[html](https://www.guardsquare.com/proguard/manual)) cover the features and usage of\nProGuard in detail.\n\n## 💻 Building ProGuard\n\nBuilding ProGuard is easy - you'll just need a Java 8 JDK installed. \nTo build from source, clone a copy of the ProGuard repository and run the following command:\n\n```bash\n./gradlew assemble\n```\n\nThe artifacts will be generated in the `lib` directory. You can then execute ProGuard using the\nscripts in `bin`, for example:\n\n```bash\nbin/proguard.sh\n```\n\nYou can publish the artifacts to your local Maven repository using:\n\n```bash\n./gradlew publishToMavenLocal\n```\n\n## 🤝 Contributing\n\nContributions, issues and feature requests are welcome in both projects.\nFeel free to check the [issues](https://github.com/Guardsquare/proguard/issues) page and the [contributing\nguide](CONTRIBUTING.md) if you would like to contribute.\n\n## 📝 License\n\nCopyright (c) 2002-2023 [Guardsquare NV](https://www.guardsquare.com/).\nProGuard is released under the [GNU General Public License, version\n2](LICENSE), with [exceptions granted to a number of\nprojects](docs/md/manual/license/gplexception.md).\n"
        },
        {
          "name": "annotations",
          "type": "tree",
          "content": null
        },
        {
          "name": "ant",
          "type": "tree",
          "content": null
        },
        {
          "name": "base",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 6.17578125,
          "content": "plugins {\n    id 'distribution'\n    id 'io.github.gradle-nexus.publish-plugin'\n    id 'signing'\n    id \"org.jetbrains.kotlin.jvm\" version \"$kotlinVersion\" apply false\n}\n\nallprojects {\n    group = 'com.guardsquare'\n    version = proguardVersion\n    repositories {\n        mavenLocal()\n    }\n}\n\ntask buildDocumentation(type: Exec) {\n    inputs.dir 'docs/md'\n    inputs.file 'docs/mkdocs.yml'\n    outputs.dir 'docs/html'\n    executable 'sh'\n    args '-c', \"docker run --volume $rootDir/docs:/docs --rm squidfunk/mkdocs-material:5.2.2 build\"\n}\n\nnexusPublishing {\n    repositories {\n        sonatype {\n            username = findProperty('PROGUARD_STAGING_USERNAME')\n            password = findProperty('PROGUARD_STAGING_PASSWORD')\n        }\n    }\n}\n\n// Add Maven repositories\nallprojects { Project project ->\n    afterEvaluate {\n        if (pluginManager.hasPlugin('maven-publish')) {\n            configure(project) {\n                publishing {\n                    repositories {\n                        maven {\n                            name = 'Github'\n                            url = uri('https://maven.pkg.github.com/guardsquare/proguard')\n                            credentials {\n                                username = project.findProperty('PROGUARD_GITHUB_USERNAME')\n                                password = project.findProperty('PROGUARD_GITHUB_TOKEN')\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Add publication\nallprojects { Project project ->\n    afterEvaluate {\n        if (pluginManager.hasPlugin('maven-publish')) {\n            configure(project) {\n                publishing {\n                    publications {\n                        create(project.name, MavenPublication) {\n                            pom {\n                                artifactId = \"proguard-$project.name\"\n                                name = \"$group:$artifactId\"\n                                url = 'https://www.guardsquare.com/proguard'\n                                licenses {\n                                    license {\n                                        name = 'GNU General Public License, Version 2'\n                                        url = 'https://www.gnu.org/licenses/gpl-2.0.txt'\n                                        distribution = 'repo'\n                                    }\n                                }\n                                issueManagement {\n                                    system = 'Github Tracker'\n                                    url = 'https://github.com/Guardsquare/proguard/issues'\n                                }\n                                scm {\n                                    url = 'https://github.com/Guardsquare/proguard.git'\n                                    connection = 'scm:git:https://github.com/Guardsquare/proguard.git'\n                                }\n                                developers {\n                                    developer {\n                                        id = 'lafortune'\n                                        name = 'Eric Lafortune'\n                                        organization = 'Guardsquare'\n                                        organizationUrl = 'https://www.guardsquare.com/'\n                                        roles = ['Project Administrator', 'Developer']\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Configure default publication (all Java projects)\nallprojects { Project project ->\n    afterEvaluate {\n        if  (pluginManager.hasPlugin('maven-publish') && pluginManager.hasPlugin('java')) {\n            configure(project) {\n                javadoc {\n                    options.addStringOption('Xdoclint:none', '-quiet')\n                }\n                java {\n                    toolchain {\n                        languageVersion.set(JavaLanguageVersion.of(8))\n                    }\n                    withJavadocJar()\n                    withSourcesJar()\n                }\n                publishing {\n                    publications {\n                        getByName(project.name) {\n                            from components.java\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Configure signing\nallprojects { Project project ->\n    afterEvaluate {\n        if (pluginManager.hasPlugin('maven-publish')) {\n            configure(project) {\n                if (project.hasProperty('PROGUARD_SIGNING_KEY')) {\n                    // We use in-memory ascii-armored keys\n                    // See https://docs.gradle.org/current/userguide/signing_plugin.html#sec:in-memory-keys\n                    signing {\n                        String key = project.findProperty('PROGUARD_SIGNING_KEY')\n                        String password = project.findProperty('PROGUARD_SIGNING_PASSWORD')\n                        useInMemoryPgpKeys(key, password)\n                        sign publishing.publications.getByName(project.name)\n                    }\n                }\n            }\n        }\n    }\n}\n\ndistributions {\n    main {\n        distributionBaseName.set('proguard')\n        contents {\n            into('lib') {\n                from tasks.getByPath(':proguard-app:fatJar').outputs\n                from tasks.getByPath(':gui:fatJar').outputs\n                from tasks.getByPath(':retrace:fatJar').outputs\n                from tasks.getByPath(':ant:fatJar').outputs\n            }\n            into('docs') {\n                from('docs/md') {\n                    includeEmptyDirs = false\n                    include '**/*.md'\n                }\n            }\n            from(rootDir) {\n                include 'bin/'\n                include 'examples/'\n                exclude 'examples/*/build'\n                exclude 'examples/*/.gradle'\n                include 'LICENSE'\n                include 'LICENSE_exception.md'\n            }\n        }\n    }\n}\n\ndistTar {\n    compression = Compression.GZIP\n    archiveExtension.set('tar.gz')\n}\n\nclean {\n    delete file(\"$rootDir/lib\")\n// TODO docker runs as root, so cannot clean the HTML yet\n//    delete buildDocumentation.outputs\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.33984375,
          "content": "proguardVersion = 7.6.2\n\n# The version of ProGuardCORE that sub-projects are built with\nproguardCoreVersion = 9.1.7\ngsonVersion = 2.11.0\nkotlinVersion = 2.1.0\ntarget = 1.8\n\n# Optionally compile the WTK plugin.\nwtkDir = /usr/local/java/wtk2.1\nwtkHome = /usr/local/java/wtk\n\norg.gradle.vfs.watch=true\norg.gradle.parallel=true\norg.gradle.caching=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.556640625,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.896484375,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n@rem SPDX-License-Identifier: Apache-2.0\r\n@rem\r\n\r\n@if \"%DEBUG%\"==\"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n@rem This is normally unused\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif %ERRORLEVEL% equ 0 goto execute\r\n\r\necho. 1>&2\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\r\necho. 1>&2\r\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\r\necho location of your Java installation. 1>&2\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho. 1>&2\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\r\necho. 1>&2\r\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\r\necho location of your Java installation. 1>&2\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif %ERRORLEVEL% equ 0 goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nset EXIT_CODE=%ERRORLEVEL%\r\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\r\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\r\nexit /b %EXIT_CODE%\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "gui",
          "type": "tree",
          "content": null
        },
        {
          "name": "proguard-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "retrace",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.6083984375,
          "content": "pluginManagement {\n    resolutionStrategy {\n        eachPlugin {\n            if (requested.id.id == 'com.github.johnrengelman.shadow') {\n                useVersion '8.1.1'\n            }\n            if (requested.id.id == 'io.github.gradle-nexus.publish-plugin') {\n                useVersion '1.1.0'\n            }\n        }\n    }\n}\n\nplugins {\n    id 'org.gradle.toolchains.foojay-resolver-convention' version '0.8.0'\n}\n\nrootProject.name = 'proguard'\n\ninclude 'base'\ninclude 'proguard-app'\ninclude 'retrace'\ninclude 'gui'\ninclude 'gradle-plugin'\ninclude 'ant'\ninclude 'annotations'\n\nproject(':gradle-plugin').name = 'gradle'\n"
        }
      ]
    }
  ]
}