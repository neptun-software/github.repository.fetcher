{
  "metadata": {
    "timestamp": 1736609059489,
    "page": 310,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dingjikerbo/Android-BluetoothKit",
      "stars": 3605,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.064453125,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea\n.DS_Store\n/build\n/captures\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.2939453125,
          "content": "BluetoothKit---Android Bluetooth Framework\n===========================\n\n这个库用于Android蓝牙BLE设备通信，支持设备扫描，连接，读写，通知。\n\n\n## 这套框架存在的意义\n\n一、统一解决Android蓝牙通信过程中的兼容性问题\n\n二、提供尽可能简单易用的接口，屏蔽蓝牙通信中的技术细节，只开放连接，读写，通知等语义。\n\n三、实现串行化任务队列，统一处理蓝牙通信中的失败以及超时，支持可配置的容错处理\n\n四、统一管理连接句柄，避免句柄泄露\n\n五、方便监控各设备连接状态，在尽可能维持连接的情况下，将最不活跃的设备自动断开。\n\n六、便于多进程APP架构下蓝牙连接的统一管理\n\n七、支持拦截所有对蓝牙原生接口的调用\n\n\n## 本框架源码讲解，可参考 **[Android BLE蓝牙通信教程](https://study.163.com/course/introduction/1006381079.htm)**\n\n# **用法**\n\n1、在Android Studio的build.gradle中，在dependencies里添加一行:\n\n```groovy\ncompile 'com.inuker.bluetooth:library:1.4.0'\n```\n\n如果是Eclipse，可以导入bluetoothkit.jar，在AndroidManifest.xml中添加如下：\n```\n<uses-permission android:name=\"android.permission.BLUETOOTH\" />\n<uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n<uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n\n<uses-feature\n    android:name=\"android.hardware.bluetooth_le\"\n    android:required=\"true\" />\n\n<application\n    android:label=\"@string/app_name\">\n\n    <service\n        android:name=\"com.inuker.bluetooth.library.BluetoothService\" />\n</application>\n```\n\n2、创建一个BluetoothClient，建议作为一个全局单例，管理所有BLE设备的连接。 \n\n```Java\nBluetoothClient mClient = new BluetoothClient(context);\n```\n\n所有接口都通过BluetoothClient调用，涉及的常量如回调的错误码都在Constants类中。\n\n## **设备扫描** \n\n支持经典蓝牙和BLE设备混合扫描，可自定义扫描策略。每次扫描都要创建新的SearchRequest，不能复用。\n\n```Java\nSearchRequest request = new SearchRequest.Builder()\n        .searchBluetoothLeDevice(3000, 3)   // 先扫BLE设备3次，每次3s\n        .searchBluetoothClassicDevice(5000) // 再扫经典蓝牙5s\n        .searchBluetoothLeDevice(2000)      // 再扫BLE设备2s\n        .build();\n\nmClient.search(request, new SearchResponse() {\n    @Override\n    public void onSearchStarted() {\n\n    }\n\n    @Override\n    public void onDeviceFounded(SearchResult device) {\n        Beacon beacon = new Beacon(device.scanRecord);\n        BluetoothLog.v(String.format(\"beacon for %s\\n%s\", device.getAddress(), beacon.toString()));\n    }\n\n    @Override\n    public void onSearchStopped() {\n\n    }\n\n    @Override\n    public void onSearchCanceled() {\n\n    }\n});\n```\n\n如果扫描不出来，可将targetSdk调到低于6.0.\n\n可以随时停止扫描:\n\n```Java\nmClient.stopSearch();\n```\n\n## **蓝牙开关**\n\n打开关闭蓝牙：\n\n```\nmClient.openBluetooth();\nmClient.closeBluetooth();\n```\n\n判断蓝牙是否打开：\n\n```\nmClient.isBluetoothOpened();\n```\n\n蓝牙打开或关闭需要一段时间，可以注册回调监听状态，回调的参数如果是true表示蓝牙已打开，false表示蓝牙关闭\n\n```\nmClient.registerBluetoothStateListener(mBluetoothStateListener);\n\nprivate final BluetoothStateListener mBluetoothStateListener = new BluetoothStateListener() {\n    @Override\n    public void onBluetoothStateChanged(boolean openOrClosed) {\n        \n    }\n\n};\n\nmClient.unregisterBluetoothStateListener(mBluetoothStateListener);\n```\n\n## **设备配对**\n\n监听设备配对状态变化\n\n```\nprivate final BluetoothBondListener mBluetoothBondListener = new BluetoothBondListener() {\n    @Override\n    public void onBondStateChanged(String mac, int bondState) {\n        // bondState = Constants.BOND_NONE, BOND_BONDING, BOND_BONDED\n    }\n};\n\nmClient.registerBluetoothBondListener(mBluetoothBondListener);\nmClient.unregisterBluetoothBondListener(mBluetoothBondListener);\n```\n\n## **Beacon解析**\n\n可以在广播中携带设备的自定义数据，用于设备识别，数据广播，事件通知等，这样手机端无需连接设备就可以获取设备推送的数据。\n\n扫描到的beacon数据为byte[]，在SearchResult的scanRecord中，按如下形式生成Beacon对象，\n\n```\nBeacon beacon = new Beacon(device.scanRecord);\n```\n\nBeacon数据结构如下:\n\n```\npublic class Beacon {\n\n    public byte[] mBytes;\n\n    public List<BeaconItem> mItems;\n}\n```\n\nBeaconItem是按type来区分的，\n\n```\npublic class BeaconItem {\n    /**\n     * 广播中声明的长度\n     */\n    public int len;\n\n    /**\n     * 广播中声明的type\n     */\n    public int type;\n\n    /**\n     * 广播中的数据部分\n     */\n    public byte[] bytes;\n}\n```\n\n然后根据自定义的协议，解析对应的BeaconItem中的bytes，首先创建一个BeaconParser，传入对应的BeaconItem，然后根据协议不断读取数据，\n如果协议中某个字段占1个字节，则调用readByte，若占用两个字节则调用readShort，如果要取某个字节的某个bit则调用getBit。注意parser\n每读一次数据，指针就会相应向后移动，可以调用setPosition设置当前指针的位置。\n\n```\nBeaconItem beaconItem; // 设置成beacon中对应的item\nBeaconParser beaconParser = new BeaconParser(beaconItem);\nint firstByte = beaconParser.readByte(); // 读取第1个字节\nint secondByte = beaconParser.readByte(); // 读取第2个字节\nint productId = beaconParser.readShort(); // 读取第3,4个字节\nboolean bit1 = beaconParser.getBit(firstByte, 0); // 获取第1字节的第1bit\nboolean bit2 = beaconParser.getBit(firstByte, 1); // 获取第1字节的第2bit\nbeaconParser.setPosition(0); // 将读取起点设置到第1字节处\n```\n\n## **BLE设备通信** \n### **● 连接**\n\n连接过程包括了普通的连接(connectGatt)和发现服务(discoverServices)，这里收到回调时表明服务发现已完成。回调参数BleGattProfile包括了所有的service和characteristic的uuid。返回的code表示操作状态，包括成功，失败或超时等，所有常量都在Constants类中。\n\n```Java\nmClient.connect(MAC, new BleConnectResponse() {\n    @Override\n    public void onResponse(int code, BleGattProfile profile) {\n        if (code == REQUEST_SUCCESS) {\n        \n        }\n    }\n});\n```\n\n可以配置连接参数如下，\n\n```\nBleConnectOptions options = new BleConnectOptions.Builder()\n        .setConnectRetry(3)   // 连接如果失败重试3次\n        .setConnectTimeout(30000)   // 连接超时30s\n        .setServiceDiscoverRetry(3)  // 发现服务如果失败重试3次\n        .setServiceDiscoverTimeout(20000)  // 发现服务超时20s\n        .build();\n\nmClient.connect(MAC, options, new BleConnectResponse() {\n    @Override\n    public void onResponse(int code, BleGattProfile data) {\n\n    }\n});\n```\n\n### **● 连接状态**\n\n如果要监听蓝牙连接状态可以注册回调，只有两个状态：连接和断开。\n\n```\nmClient.registerConnectStatusListener(MAC, mBleConnectStatusListener);\n\nprivate final BleConnectStatusListener mBleConnectStatusListener = new BleConnectStatusListener() {\n\n    @Override\n    public void onConnectStatusChanged(String mac, int status) {\n        if (status == STATUS_CONNECTED) {\n\n        } else if (status == STATUS_DISCONNECTED) {\n\n        }\n    }\n};\n\nmClient.unregisterConnectStatusListener(MAC, mBleConnectStatusListener);\n```\n\n也可以主动获取连接状态：\n\n```\nint status = mClient.getConnectStatus(MAC);\n// Constants.STATUS_UNKNOWN\n// Constants.STATUS_DEVICE_CONNECTED\n// Constants.STATUS_DEVICE_CONNECTING\n// Constants.STATUS_DEVICE_DISCONNECTING\n// Constants.STATUS_DEVICE_DISCONNECTED\n```\n\n### **● 断开连接**\n```Java\nmClient.disconnect(MAC);\n```\n\n### **● 读Characteristic**\n```Java\nmClient.read(MAC, serviceUUID, characterUUID, new BleReadResponse() {\n    @Override\n    public void onResponse(int code, byte[] data) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● 写Characteristic**\n\n要注意这里写的byte[]不能超过20字节，如果超过了需要自己分成几次写。建议的办法是第一个byte放剩余要写的字节的长度。\n\n```Java\nmClient.write(MAC, serviceUUID, characterUUID, bytes, new BleWriteResponse() {\n    @Override\n    public void onResponse(int code) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n这个写是带了WRITE_TYPE_NO_RESPONSE标志的，实践中发现比普通的write快2~3倍，建议用于固件升级。\n\n```Java\nmClient.writeNoRsp(MAC, serviceUUID, characterUUID, bytes, new BleWriteResponse() {\n    @Override\n    public void onResponse(int code) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● 读Descriptor**\n\n```Java\nmClient.readDescriptor(MAC, serviceUUID, characterUUID, descriptorUUID, new BleReadResponse() {\n    @Override\n    public void onResponse(int code, byte[] data) {\n\n    }\n});\n```\n\n### **● 写Descriptor**\n\n```Java\nmClient.writeDescriptor(MAC, serviceUUID, characterUUID, descriptorUUID, bytes, new BleWriteResponse() {\n    @Override\n    public void onResponse(int code) {\n\n    }\n});\n```\n\n### **● 打开Notify**\n\n这里有两个回调，onNotify是接收通知的。\n\n```Java\nmClient.notify(MAC, serviceUUID, characterUUID, new BleNotifyResponse() {\n    @Override\n    public void onNotify(UUID service, UUID character, byte[] value) {\n        \n    }\n\n    @Override\n    public void onResponse(int code) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● 关闭Notify**\n```Java\nmClient.unnotify(MAC, serviceUUID, characterUUID, new BleUnnotifyResponse() {\n    @Override\n    public void onResponse(int code) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● 打开Indicate**\n\n和Notify类似，\n\n```Java\nmClient.indicate(MAC, serviceUUID, characterUUID, new BleNotifyResponse() {\n    @Override\n    public void onNotify(UUID service, UUID character, byte[] value) {\n        \n    }\n\n    @Override\n    public void onResponse(int code) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● 关闭Indicate**\n\n```Java\nmClient.unindicate(MAC, serviceUUID, characterUUID, new BleUnnotifyResponse() {\n    @Override\n    public void onResponse(int code) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● 读Rssi**\n```Java\nmClient.readRssi(MAC, new BleReadRssiResponse() {\n    @Override\n    public void onResponse(int code, Integer rssi) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● 清理请求队列**\n\n如果发送给设备的请求设备来不及处理，则这些请求会保存到队列中，如果在某些场景下需要清除这些请求，可以调用\n\n```\nmClient.clearRequest(MAC, clearType);\n// Constants.REQUEST_READ，所有读请求\n// Constants.REQUEST_WRITE，所有写请求\n// Constants.REQUEST_NOTIFY，所有通知相关的请求\n// Constants.REQUEST_RSSI，所有读信号强度的请求\n```\n\nclearType表示要清除的请求类型，如果要清除多种请求，可以将多种类型取或，如果要清除所有请求，则传入0。\n\n### **● 刷新缓存**\n\n```\nmClient.refreshCache(MAC);\n```\n\n---\n有问题或建议可以给我邮件，到我的博客留言，或者加QQ群\n\n - Email: dingjikerbo@gmail.com\n\n - Blog: http://blog.csdn.net/dingjikerbo\n\n - QQ群: 112408886"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 4.6337890625,
          "content": "BluetoothKit---Android Bluetooth Framework\n===========================\n\nThis library allows for easy access to Bluetooth device scan and connection, support customizing scan policy and solved many android bluetooth inherent compatibility and stability problems refer to [Android 4.3 Bluetooth Low Energy unstable](http://stackoverflow.com/questions/17870189/android-4-3-bluetooth-low-energy-unstable)\n\n# **Requirements**\n\n - minSdkVersion should be not less than 18\n\n - Permission in AndroidManifest.xml\n```\n<uses-permission android:name=\"android.permission.BLUETOOTH\" />\n<uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n<uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n\n<uses-feature\n    android:name=\"android.hardware.bluetooth_le\"\n    android:required=\"true\" />\n```\n\n# **Usage**\n\n1、If you are building with Gradle, simply add the following line to the `dependencies` section of your `build.gradle` file:\n\n```groovy\ncompile 'com.inuker.bluetooth:library:1.1.4'\n```\n\n2、Create a BluetoothClient as below: \n\n```Java\nBluetoothClient mClient = new BluetoothClient(context);\n```\n\n## **Scan Device** \n\nThis library support both Bluetooth LE device scan and Classic device scan, you could customize the scan policy as below:\n\n```Java\nSearchRequest request = new SearchRequest.Builder()\n        .searchBluetoothLeDevice(3000, 3)   // scan Bluetooth LE device for 3000ms, 3 times\n        .searchBluetoothClassicDevice(5000) // then scan Bluetooth Classic device for 5000ms, 1 time\n        .searchBluetoothLeDevice(2000)      // at last scan Bluetooth LE device for 2000ms\n        .build();\n\nmClient.search(request, new SearchResponse() {\n    @Override\n    public void onSearchStarted() {\n\n    }\n\n    @Override\n    public void onDeviceFounded(SearchResult device) {\n\n    }\n\n    @Override\n    public void onSearchStopped() {\n\n    }\n\n    @Override\n    public void onSearchCanceled() {\n\n    }\n});\n```\n\nYou could stop the whole scan by just one line:\n\n```Java\nmClient.stopSearch();\n```\n\n## **Bluetooth LE Connection** \n\n### **● Connect**\n\nBleGattProfile contains all service and characteristic uuid.\n\n```Java\nmClient.connect(MAC, new BleConnectResponse() {\n    @Override\n    public void onResponse(int code, BleGattProfile profile) {\n        if (code == REQUEST_SUCCESS) {\n        \n        }\n    }\n});\n```\n\n### **● Connect Status**\n\n```\nmClient.registerConnectStatusListener(MAC, mBleConnectStatusListener);\n\nprivate final BleConnectStatusListener mBleConnectStatusListener = new BleConnectStatusListener() {\n\n    @Override\n    public void onConnectStatusChanged(int status) {\n        if (status == STATUS_CONNECTED) {\n\n        } else if (status == STATUS_DISCONNECTED) {\n\n        }\n    }\n};\n\nmClient.unregisterConnectStatusListener(MAC, mBleConnectStatusListener);\n```\n\n### **● Disconnect**\n```Java\nmClient.disconnect(MAC);\n```\n\n### **● Read Characteristic**\n```Java\nmClient.read(MAC, serviceUUID, characterUUID, new BleReadResponse() {\n    @Override\n    public void onResponse(int code, byte[] data) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● Write Characteristic**\n\nThe data to write should be no more than 20 bytes.\n\n```Java\nmClient.write(MAC, serviceUUID, characterUUID, bytes, new BleWriteResponse() {\n    @Override\n    public void onResponse(int code) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n\n// with WRITE_TYPE_NO_RESPONSE\nmClient.writeNoRsp(MAC, serviceUUID, characterUUID, bytes, new BleWriteResponse() {\n    @Override\n    public void onResponse(int code) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● Open Notify**\n\n```Java\nmClient.notify(MAC, serviceUUID, characterUUID, new BleNotifyResponse() {\n    @Override\n    public void onNotify(UUID service, UUID character, byte[] value) {\n        \n    }\n\n    @Override\n    public void onResponse(int code) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● Close Notify**\n```Java\nmClient.unnotify(MAC, serviceUUID, characterUUID, new BleUnnotifyResponse() {\n    @Override\n    public void onResponse(int code) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● Read Rssi**\n```Java\nmClient.readRssi(MAC, new BleReadRssiResponse() {\n    @Override\n    public void onResponse(int code, Integer rssi) {\n        if (code == REQUEST_SUCCESS) {\n\n        }\n    }\n});\n```\n\n### **● Refresh Cache**\n\nRefresh cache at the beginning of next connection.\n\n```Java\nmClient.refreshCache(MAC);\n```\n<br/>\n# **Author**\n - Email: dingjikerbo@gmail.com\n - Blog: http://blog.csdn.net/dingjikerbo\n - Welcome to contact me with any suggestions or ideas.\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 1.1826171875,
          "content": "# 待办\n去了facebook如果工作涉及到蓝牙的，就好好优化一下这个框架，做成世界上最好用的蓝牙框架\n\n1，去掉service，纯粹的蓝牙通信框架，这样gatt也能回调，但是要避免close了外面还操作\n2，增加对新接口的支持，包括扫描，mesh?\n3，任务队列抽出来\n4，多设备连接管理，活跃度监测，LRUCache队列\n5，完善demo，增加分包发送\n6，增加GattServer部分\n7，Log的问题，增加开关，release版里不要带上日志\n8，支持普通蓝牙连接\n9，兼容性问题，比如高sdk版本接口\n10，失败的提示，以打印出异常栈的形式，动态代理异常的就直接抛出，不要catch住\n11，错误不要用constant int，别人在日志里看不懂\n12，读写的时候失败，如果是没打开属性，就只打印warning，别直接失败。或者如果UUID不对，就提示\n13，动态权限申请\n14，支持广播的xml配置，动态生成解析类\n15，支持notify打开失败的workaround\n16，支持断线重连\n17，支持classic蓝牙的连接\n\n比如UUID不对，\n\n参考别的开源框架，吸取精华，包括看有什么功能要完善的\n看Issues里大家提出的问题"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.025390625,
          "content": "theme: jekyll-theme-cayman"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "bluetoothkit.jar",
          "type": "blob",
          "size": 174.1015625,
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.62890625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.3.0'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.765625,
          "content": "## Project-wide Gradle settings.\n#\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n#\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n#\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n#Sat Aug 27 20:18:40 CST 2016\nandroid.useDeprecatedNdk=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "rules.md",
          "type": "blob",
          "size": 0.3828125,
          "content": "发版规则：\n\n1、版本号类似于a.b.c，a是主版本号，b是次版本号，c是子版本号，大版本变动时改主版本号，\n小版本累积到稳定了升级次版本号，每次小改动升级子版本号。\n\n2、每个对外开放的接口都要慎重，发布后就不得变动了\n\n3、每次发布之前都先内测，内测版本为a.b.c.d，不带d的为稳定版本。"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0263671875,
          "content": "include ':app', ':library'\n"
        }
      ]
    }
  ]
}