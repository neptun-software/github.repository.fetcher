{
  "metadata": {
    "timestamp": 1736609146863,
    "page": 441,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tencent/spring-cloud-tencent",
      "stars": 3214,
      "defaultBranch": "2022",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.36328125,
          "content": "root = true\n\n[*.java]\nindent_style = tab\nindent_size = 4\ncontinuation_indent_size = 8\n\n[*.groovy]\nindent_style = tab\nindent_size = 4\ncontinuation_indent_size = 8\n\n[*.xml]\nindent_style = tab\nindent_size = 4\ncontinuation_indent_size = 8\n\n[*.yml]\nindent_style = space\nindent_size = 2\n\n[*.yaml]\nindent_style = space\nindent_size = 2\n\n[*.sh]\nindent_style = space\nindent_size = 4"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.63671875,
          "content": "# Eclipse project files\n.project\n.classpath\n.settings\n\n# IntelliJ IDEA project files and directories\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# Build targets\n/target\n*/target\ntarget\n/applog\n*/applog\napplog\n\n# Mac-specific directory that no other operating system needs.\n.DS_Store\n\n# JVM crash logs\nhs_err_pid*.log\n\ndependency-reduced-pom.xml\n\n*/.unison.*\n\n# exclude docker-sync stuff\n.docker-sync\n*/.docker-sync\n\n# exclude vscode files\n.vscode/\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n*.factorypath\n\n# misc\n*classes\n*.class\n.svn\nlogs/\nlib/\napplog/\n\n# Maven ignore\n.flattened-pom.xml\n\n# Polaris\n*/backup\n/backup\nbackup\n"
        },
        {
          "name": ".licenserc.yaml",
          "type": "blob",
          "size": 0.853515625,
          "content": "header:\n  license:\n    content: |\n      Tencent is pleased to support the open source community by making spring-cloud-tencent available.\n\n      Copyright (C) 2021 THL A29 Limited, a Tencent company. All rights reserved.\n\n      Licensed under the BSD 3-Clause License (the \"License\");\n      you may not use this file except in compliance with the License.\n      You may obtain a copy of the License at\n\n      https://opensource.org/licenses/BSD-3-Clause\n\n      Unless required by applicable law or agreed to in writing, software distributed\n      under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n      CONDITIONS OF ANY KIND, either express or implied. See the License for the\n      specific language governing permissions and limitations under the License.\n  paths:\n    - \"**/tencent/**\"\n  language:\n    Java:\n      extensions:\n        - \".java\"\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.369140625,
          "content": "# Change Log\n---\n\n- [feat:support 2022.0.5.](https://github.com/Tencent/spring-cloud-tencent/pull/1236)\n- [feat:upgrade jackson version.](https://github.com/Tencent/spring-cloud-tencent/pull/1261)\n- [fix: fix RouterLabelRestTemplateInterceptor add response headers exception with httpclient5.](https://github.com/Tencent/spring-cloud-tencent/pull/1267)\n- [feat: support lossless online and offline](https://github.com/Tencent/spring-cloud-tencent/pull/1268)\n- [feat: support lane router](https://github.com/Tencent/spring-cloud-tencent/pull/1269)\n- [feat: add lane router examples](https://github.com/Tencent/spring-cloud-tencent/pull/1270)\n- [fix: fix the lossless provider override in multiple registries scenario](https://github.com/Tencent/spring-cloud-tencent/pull/1271)\n- [fix:fix nearby router properties loading bug.](https://github.com/Tencent/spring-cloud-tencent/pull/1273)\n- [refactor:let the configuration SDK context stand alone.](https://github.com/Tencent/spring-cloud-tencent/pull/1275)\n- [fix: fix grammar issues for lane router example & optimize the gateway dependency](https://github.com/Tencent/spring-cloud-tencent/pull/1276)\n- [feat:add zero protection.](https://github.com/Tencent/spring-cloud-tencent/pull/1278)\n- [fix: fix lossless deregister failed when no healthcheck configured](https://github.com/Tencent/spring-cloud-tencent/pull/1281)\n- [fix:fix ApplicationContextAwareUtils NPE bug.](https://github.com/Tencent/spring-cloud-tencent/pull/1293)\n- [feat:upgrade jacoco version.](https://github.com/Tencent/spring-cloud-tencent/pull/1309)\n- [fix:fix no registry when lossless is disabled.](https://github.com/Tencent/spring-cloud-tencent/pull/1311)\n- [fix:fix the ratelimit bug for 2022](https://github.com/Tencent/spring-cloud-tencent/pull/1314)\n- [feat:add Tencent Cloud TSF support.](https://github.com/Tencent/spring-cloud-tencent/pull/1317)\n- [feat:support consul config.](https://github.com/Tencent/spring-cloud-tencent/pull/1319)\n- [feat:add trace report support.](https://github.com/Tencent/spring-cloud-tencent/pull/1322)\n- [fix: fix lossless test case unstable issues.](https://github.com/Tencent/spring-cloud-tencent/pull/1324)\n- [feat:support consul service update task.](https://github.com/Tencent/spring-cloud-tencent/pull/1329)\n- [fix:fix app starting failed when user using custom OpenAPI bean.](https://github.com/Tencent/spring-cloud-tencent/pull/1330)\n- [feat:support consul config data.](https://github.com/Tencent/spring-cloud-tencent/pull/1331)\n- [fix: move ConditionalOnTsfEnabled to spring-cloud-tencent-commons and fix PolarisInetUtilsAutoConfiguration.](https://github.com/Tencent/spring-cloud-tencent/pull/1354)\n- [fix: memory cost too many when using wildcard feign calls](https://github.com/Tencent/spring-cloud-tencent/pull/1356)\n- [feat: support otel trace](https://github.com/Tencent/spring-cloud-tencent/pull/1363)\n- [feat:support TSF router.](https://github.com/Tencent/spring-cloud-tencent/pull/1368)\n- [feat:upgrade nearby router and add namespace nearby router.](https://github.com/Tencent/spring-cloud-tencent/pull/1371)\n- [fix:fix contract reporting bug when using TSF.](https://github.com/Tencent/spring-cloud-tencent/pull/1373)\n- [fix: fix TSF context bootstrap configuration](https://github.com/Tencent/spring-cloud-tencent/pull/1395)\n- [fix: fix PolarisCircuitBreakerConfiguration not clear when gateway invoke by wildcard apis](https://github.com/Tencent/spring-cloud-tencent/pull/1418)\n- [fix:fix actuator name warning from #1428 .](https://github.com/Tencent/spring-cloud-tencent/pull/1429)\n- [feat:upgrade api circuit breaker.](https://github.com/Tencent/spring-cloud-tencent/pull/1438)\n- [feat: support lossless config from console & support warmup.](https://github.com/Tencent/spring-cloud-tencent/pull/1435)\n- [feat:add admin http handler.](https://github.com/Tencent/spring-cloud-tencent/pull/1448)\n- [feat:support concurrency rate limit.](https://github.com/Tencent/spring-cloud-tencent/pull/1454)\n- [feat:support auth.](https://github.com/Tencent/spring-cloud-tencent/pull/1459)\n- [feat:upgrade trace plugin.](https://github.com/Tencent/spring-cloud-tencent/pull/1470)\n- [feat:support smooth upgrade from tsf.](https://github.com/Tencent/spring-cloud-tencent/pull/1474)\n- [fix:fix caller disposable metadata handle when using tracing.](https://github.com/Tencent/spring-cloud-tencent/pull/1478)\n- [refactor:update registry status.](https://github.com/Tencent/spring-cloud-tencent/pull/1485)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.6650390625,
          "content": "# Contributing\n---\nIf you have good comments or suggestions, welcome to create [Issues](https://github.com/Tencent/spring-cloud-tencent/issues) or [Pull Requests](https://github.com/Tencent/spring-cloud-tencent/pulls), contribute to the Spring Cloud Tencent open source community. Spring Cloud Tencent continues to recruit contributors, even if it is answering questions in the issue, or doing some simple bugfixes, it will be of great help to Spring Cloud Tencent.\n\n[Tencent Open Source Incentive Program](https://opensource.tencent.com/contribution) Encourage developers to participate and contribute, and look forward to your joining.\n\n## Issue\n#### For contributors\n\nPlease ensure that the following conditions are met before submitting an issue:\n\n* Must be a bug or new feature\n* Have searched in the issue, and did not find a similar issue or solution\n* When creating a new issue, please provide a detailed description, screenshot or short video to help us locate the problem\n\n## Pull Request\nWe welcome everyone to contribute code to make our product more powerful. The code team will monitor all pull requests, and we will do the corresponding code inspection and testing. After the test passes, we will accept the PR, but will not immediately merge into the master branch.\n\nPlease confirm before completing a PR:\n\n1. Fork your own branch from the master branch.\n2. Please modify the corresponding documents and comments after modifying the code.\n3. Please add License and Copyright declarations in the newly created file.\n4. Ensure a consistent code style.\n5. Do adequate testing.\n6. Add this pull request info to [CHANGELOG](./CHANGELOG.md).\n7. Then, you can submit your code to the dev branch.\n"
        },
        {
          "name": "Code-of-Conduct.md",
          "type": "blob",
          "size": 0.357421875,
          "content": "# Spring Cloud Tencent Community Code of Conduct\n\nSpring Cloud Tencent follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).\n\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the Spring Cloud Tencent Code of Conduct Committee via email: SpringCloudTencent@tencent.com"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.3955078125,
          "content": "Tencent is pleased to support the open source community by making spring-cloud-tencent available.\n\nCopyright (C) 2021 THL A29 Limited, a Tencent company.  All rights reserved.\n\nA spring-cloud-tencent is licensed under the BSD 3-Clause License. A copy of the BSD 3-Clause License is included in this file.\n\n\nTerms of  BSD 3-Clause License\n---------------------------------------------------\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\nOther dependencies and licenses:\n\n\nOpen Source Software Licensed under the Apache License Version 2.0:\n--------------------------------------------------------------------\n1. spring-boot\nCopyright (c) spring-boot authors and contributors.\n\n2. spring-framework\nCopyright (c) spring-framework authors and contributors.\n\n3. spring-cloud-netflix\nCopyright (c) spring-cloud-netflix authors and contributors.\n\n4. spring-cloud-config\nCopyright (c) spring-cloud-config authors and contributors.\n\n5. guava\nCopyright (c) guava authors and contributors.\n\n6. reactor\nCopyright (c) reactor authors and contributors.\n\n\nTerms of the Apache v2.0 License:\n--------------------------------------------------------------------\nApache License\n\nVersion 2.0, January 2004\n\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n1. Definitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n\nYou must give any other recipients of the Work or Derivative Works a copy of this License; and\n\nYou must cause any modified files to carry prominent notices stating that You changed the files; and\n\nYou must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\n\nIf the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License.\n\nYou may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "README-zh.md",
          "type": "blob",
          "size": 4.0478515625,
          "content": "# Spring Cloud Tencent\n\n[![Wiki](https://badgen.net/badge/icon/wiki?icon=wiki&label)](https://github.com/Tencent/spring-cloud-tencent/wiki)\n[![Maven Central](https://img.shields.io/maven-central/v/com.tencent.cloud/spring-cloud-tencent?label=Maven%20Central)](https://search.maven.org/search?q=g:com.tencent.cloud%20AND%20a:spring-cloud-tencent)\n[![Contributors](https://img.shields.io/github/contributors/Tencent/spring-cloud-tencent)](https://github.com/Tencent/spring-cloud-tencent/graphs/contributors)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\n[![Test with Junit](https://github.com/Tencent/spring-cloud-tencent/actions/workflows/junit_test17.yml/badge.svg?branch=2022)](https://github.com/Tencent/spring-cloud-tencent/actions/workflows/junit_test17.yml)\n[![codecov.io](https://codecov.io/gh/Tencent/spring-cloud-tencent/branch/2022/graph/badge.svg)](https://codecov.io/gh/Tencent/spring-cloud-tencent?branch=2022)\n\n[English](./README.md) | 简体中文\n\nREADME:\n\n- [介绍](#介绍)\n- [如何构建](#如何构建)\n- [如何使用](#如何使用)\n- [使用示例](#使用示例)\n\n更多文档请查看[Wiki](https://github.com/Tencent/spring-cloud-tencent/wiki)\n\n## 介绍\n\nSpring Cloud Tencent 是基于 Spring Cloud SPI 实现的一站式微服务解决方案。通过集成 Spring Cloud\n和腾讯中间件，让分布式服务和微服务的开发、测试、发布和运维变得更加简单。\n\n<img src=\"https://user-images.githubusercontent.com/4991116/170412323-ecaf544c-1d7b-45db-9cf0-591544e50c64.png\" width=\"80%\" />\n\n**服务发现和治理**\n\nSpring Cloud Tencent 集成 Spring Cloud 和北极星。北极星是一个支持多语言和多框架的服务发现和治理平台。\n\n- [北极星 Github](https://github.com/polarismesh/polaris)\n\nSpring Cloud 集成北极星可以解决以下问题：\n\n- 服务管理：服务发现、服务注册、健康检查\n- 流量控制：可自定义的流量路由、负载均衡、限频限流、访问控制\n- 故障容错：服务和接口熔断和降级、实例熔断和切换\n- 配置管理：版本管理、灰度发布、动态更新\n\n## 如何构建\n\n运行以下命令进行构建。\n\n**Linux and Mac**\n\n```\n./mvnw clean package\n```\n\n**Windows**\n\n```\n.\\mvnw.cmd clean package\n```\n\n## 如何使用\n\nSpring Cloud Tencent 所有组件都已上传到 Maven 中央仓库，只需要引入依赖即可。\n\n> 注意：\n>\n> 支持Spring Cloud 版本：2023, 2022、2021、2020、Hoxton。\n>\n> Spring Cloud Tencent\n> 的版本列表可以查看\n> [Spring Cloud Tencent 版本管理](https://github.com/Tencent/spring-cloud-tencent/wiki/Spring-Cloud-Tencent-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86)\n> 。\n\n例如：\n\n```` xml  \n<!-- add spring-cloud-tencent bom  -->\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>com.tencent.cloud</groupId>\n            <artifactId>spring-cloud-tencent-dependencies</artifactId>\n            <version>${LATEST_VERSION_FROM_VERSION_MANAGEMENT_IN_WIKI}</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>    \n                 \n<!-- add spring-cloud-starter-tencent-polaris-discovery dependency  -->\n<dependencies>\n    <dependency>\n        <groupId>com.tencent.cloud</groupId>\n        <artifactId>spring-cloud-starter-tencent-polaris-discovery</artifactId>\n    </dependency>\n</dependencies>\n\n````\n\n## 使用示例\n\n北极星为开发者提供体验环境：\n\n- [北极星控制台](http://119.91.66.223:80)\n- 北极星服务端地址：`grpc://119.91.66.223:8091`\n\n在 spring-cloud-tencent-example 项目里，北极星服务端地址默认配置为`grpc://119.91.66.223:8091`。\n\n## 交流群\n\n请扫描下方二维码添加微信，并发送“Spring Cloud Tencent”申请加群。\n\n<img src=\"https://github.com/Tencent/spring-cloud-tencent/assets/24446200/77912670-aa7b-44ec-a312-42a05d59b109\" width=20% height=20%>\n\n## Stargazers over time\n\n[![](https://starchart.cc/Tencent/spring-cloud-tencent.svg)](https://starchart.cc/Tencent/spring-cloud-tencent)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.23828125,
          "content": "# Spring Cloud Tencent\n\n[![Wiki](https://badgen.net/badge/icon/wiki?icon=wiki&label)](https://github.com/Tencent/spring-cloud-tencent/wiki)\n[![Maven Central](https://img.shields.io/maven-central/v/com.tencent.cloud/spring-cloud-tencent?label=Maven%20Central)](https://search.maven.org/search?q=g:com.tencent.cloud%20AND%20a:spring-cloud-tencent)\n[![Contributors](https://img.shields.io/github/contributors/Tencent/spring-cloud-tencent)](https://github.com/Tencent/spring-cloud-tencent/graphs/contributors)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\n[![Test with Junit](https://github.com/Tencent/spring-cloud-tencent/actions/workflows/junit_test17.yml/badge.svg?branch=2022)](https://github.com/Tencent/spring-cloud-tencent/actions/workflows/junit_test17.yml)\n[![codecov.io](https://codecov.io/gh/Tencent/spring-cloud-tencent/branch/2022/graph/badge.svg)](https://codecov.io/gh/Tencent/spring-cloud-tencent?branch=2022)\n\nEnglish | [简体中文](./README-zh.md)\n\nREADME:\n\n- [Introduction](#introduction)\n- [How to build](#how-to-build)\n- [How to use](#how-to-use)\n- [Examples](#examples)\n\nVisit [Wiki](https://github.com/Tencent/spring-cloud-tencent/wiki) to learn more\n\n## Introduction\n\nSpring Cloud Tencent is an one-stop microservice solution which implements the standard Spring Cloud SPI. It integrates\nSpring Cloud with Tencent middlewares and makes it easy to develop microservice.\n\n<img src=\"https://user-images.githubusercontent.com/4991116/170412596-692f8dae-42f7-495f-a451-01396e381eb0.png\" width=\"80%\" />\n\n**Service discovery and governance**\n\nSpring Cloud Tencent integrates Spring Cloud with Polaris which is an open source system for service discovery and\ngovernance.\n\n- [Polaris Github](https://github.com/polarismesh/polaris)\n\nSpring Cloud with Polaris can solve these problem:\n\n- service management: service discovery, service registry and health check\n- traffic control: customizable routing, load balance, rate limiting and access control\n- fault tolerance: circuit breaker for service, interface and instance\n- config management: config version control, grayscale release and dynamic update\n\n## How to build\n\nRun these commands to build this project as follow.\n\n**Linux and Mac**\n\n```\n./mvnw clean package\n```\n\n**Windows**\n\n```\n.\\mvnw.cmd clean package\n```\n\n## How to use\n\nAll the components of Spring Cloud Tencent have been uploaded to the Maven central repository, just need to introduce\ndependencies.\n\n> Notice:\n>\n> Support Spring Cloud 2023, 2022, 2021, 2020, Hoxton.\n>\n> The version list of Spring Cloud Tencent can be found\n> in\n> [Spring Cloud Tencent Version Management](https://github.com/Tencent/spring-cloud-tencent/wiki/Spring-Cloud-Tencent-%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86)\n> .\n\nFor example:\n\n```` xml  \n<!-- add spring-cloud-tencent bom  -->\n<dependencyManagement>\n    <dependencies>\n        <dependency>\n            <groupId>com.tencent.cloud</groupId>\n            <artifactId>spring-cloud-tencent-dependencies</artifactId>\n            <version>${LATEST_VERSION_FROM_VERSION_MANAGEMENT_IN_WIKI}</version>\n            <type>pom</type>\n            <scope>import</scope>\n        </dependency>\n    </dependencies>\n</dependencyManagement>    \n                 \n<!-- add spring-cloud-starter-tencent-polaris-discovery dependency  -->\n<dependencies>\n    <dependency>\n        <groupId>com.tencent.cloud</groupId>\n        <artifactId>spring-cloud-starter-tencent-polaris-discovery</artifactId>\n    </dependency>\n</dependencies>\n\n````\n\n## Examples\n\nThe experience environment of Polaris is provided for developers:\n\n- [Polaris Console](http://119.91.66.223:80)\n- Polaris Server Address: `grpc://119.91.66.223:8091`\n\nThe address of Polaris server in spring-cloud-tencent-example is `grpc://119.91.66.223:8091` by default.\n\n## Chat Group\n\nPlease scan the QR code to add WeChat, and send \"Spring Cloud Tencent\" to apply for joining the group.\n\n<img src=\"https://github.com/Tencent/spring-cloud-tencent/assets/24446200/77912670-aa7b-44ec-a312-42a05d59b109\" width=20% height=20%>\n\n## Stargazers over time\n\nIf you are interested in Spring Cloud Tencent, please follow our project, thank you very much.\n\n[![Stargazers over time](https://starchart.cc/Tencent/spring-cloud-tencent.svg)](https://starchart.cc/Tencent/spring-cloud-tencent)\n"
        },
        {
          "name": "changes",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.033203125,
          "content": "coverage:\n  status:\n    patch: off"
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.04296875,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n      else\n        export JAVA_HOME=\"/Library/Java/Home\"\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`\\\\unset -f command; \\\\command -v java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=`find_maven_basedir \"$(pwd)\"`\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nif [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n    fi\nelse\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n    fi\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      jarUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    else\n      jarUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    fi\n    while IFS=\"=\" read key value; do\n      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n      esac\n    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Downloading from: $jarUrl\"\n    fi\n    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n    if $cygwin; then\n      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n    fi\n\n    if command -v wget > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found wget ... using wget\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        else\n            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found curl ... using curl\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        else\n            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        fi\n\n    else\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Falling back to using Java to download\"\n        fi\n        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaClass=`cygpath --path --windows \"$javaClass\"`\n        fi\n        if [ -e \"$javaClass\" ]; then\n            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n                fi\n                # Compiling the Java class\n                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n            fi\n            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                # Running the downloader\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Running MavenWrapperDownloader.java ...\"\n                fi\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\nexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nif [ \"$MVNW_VERBOSE\" = true ]; then\n  echo $MAVEN_PROJECTBASEDIR\nfi\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.576171875,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    https://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Maven Start Up Batch script\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM M2_HOME - location of maven2's installed home dir\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %DOWNLOAD_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% ^\n  %JVM_CONFIG_MAVEN_PROPS% ^\n  %MAVEN_OPTS% ^\n  %MAVEN_DEBUG_OPTS% ^\n  -classpath %WRAPPER_JAR% ^\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n\ncmd /C exit /B %ERROR_CODE%\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 9.2451171875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\t xmlns=\"http://maven.apache.org/POM/4.0.0\"\n\t\t xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<parent>\n\t\t<groupId>org.springframework.cloud</groupId>\n\t\t<artifactId>spring-cloud-build</artifactId>\n\t\t<version>4.0.5</version>\n\t\t<relativePath/>\n\t</parent>\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>com.tencent.cloud</groupId>\n\t<artifactId>spring-cloud-tencent</artifactId>\n\t<packaging>pom</packaging>\n\t<version>${revision}</version>\n\t<name>Spring Cloud Tencent</name>\n\t<description>Spring Cloud Tencent</description>\n\t<url>https://github.com/Tencent/spring-cloud-tencent/tree/2022</url>\n\n\t<organization>\n\t\t<name>Tencent</name>\n\t\t<url>https://opensource.tencent.com/</url>\n\t</organization>\n\n\t<licenses>\n\t\t<license>\n\t\t\t<name>The BSD 3-Clause License (BSD3)</name>\n\t\t\t<url>https://raw.githubusercontent.com/Tencent/spring-cloud-tencent/2022/LICENSE</url>\n\t\t\t<distribution>repo</distribution>\n\t\t</license>\n\t</licenses>\n\n\t<scm>\n\t\t<url>https://github.com/Tencent/spring-cloud-tencent</url>\n\t\t<connection>scm:git:git@github.com:Tencent/spring-cloud-tencent.git</connection>\n\t\t<developerConnection>scm:git:git@github.com:Tencent/spring-cloud-tencent.git</developerConnection>\n\t</scm>\n\n\t<modules>\n\t\t<module>spring-cloud-tencent-commons</module>\n\t\t<module>spring-cloud-tencent-polaris-context</module>\n\t\t<module>spring-cloud-tencent-rpc-enhancement</module>\n\t\t<module>spring-cloud-starter-tencent-metadata-transfer</module>\n\t\t<module>spring-cloud-starter-tencent-polaris-config</module>\n\t\t<module>spring-cloud-starter-tencent-polaris-discovery</module>\n\t\t<module>spring-cloud-starter-tencent-polaris-ratelimit</module>\n\t\t<module>spring-cloud-starter-tencent-polaris-circuitbreaker</module>\n\t\t<module>spring-cloud-starter-tencent-polaris-router</module>\n\t\t<module>spring-cloud-starter-tencent-polaris-contract</module>\n\t\t<module>spring-cloud-starter-tencent-polaris-auth</module>\n\t\t<module>spring-cloud-tencent-plugin-starters</module>\n\t\t<module>spring-cloud-tencent-dependencies</module>\n\t\t<module>spring-cloud-starter-tencent-all</module>\n\t\t<module>spring-cloud-tencent-examples</module>\n\t\t<module>spring-cloud-tencent-coverage</module>\n\t</modules>\n\n\t<developers>\n\t\t<developer>\n\t\t\t<id>SkyeBeFreeman</id>\n\t\t\t<name>Haotian Zhang</name>\n\t\t\t<email>928016560@qq.com</email>\n\t\t\t<organization>Tencent</organization>\n\t\t\t<url>https://github.com/SkyeBeFreeman/</url>\n\t\t</developer>\n\n\t\t<developer>\n\t\t\t<id>lepdou</id>\n\t\t\t<name>lepdou</name>\n\t\t\t<email>lepdou@126.com</email>\n\t\t\t<organization>Tencent</organization>\n\t\t\t<url>https://github.com/lepdou</url>\n\t\t</developer>\n\n\t\t<developer>\n\t\t\t<name>Andrew Shan</name>\n\t\t\t<email>samshan08@126.com</email>\n\t\t\t<organization>Tencent</organization>\n\t\t</developer>\n\n\t\t<developer>\n\t\t\t<id>xiaoyao1999hn</id>\n\t\t\t<name>Jie Cheng</name>\n\t\t\t<email>348893717@qq.com</email>\n\t\t\t<organization>Tencent</organization>\n\t\t\t<url>https://github.com/xiaoyao1999hn/</url>\n\t\t</developer>\n\t</developers>\n\n\t<properties>\n\t\t<!-- Project revision -->\n\t\t<revision>2.0.0.0-2022.0.5</revision>\n\n\t\t<!-- Spring Framework -->\n\t\t<spring.framework.version>6.0.22</spring.framework.version>\n\n\t\t<!-- Spring Boot -->\n\t\t<spring.boot.version>3.1.12</spring.boot.version>\n\n\t\t<!-- Spring Cloud -->\n\t\t<spring.cloud.version>2022.0.5</spring.cloud.version>\n\n\t\t<!-- Maven Plugin Versions -->\n\t\t<jacoco.version>0.8.12</jacoco.version>\n\t\t<flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>\n\n\t\t<!--  Checkstyle      -->\n\t\t<maven-checkstyle-plugin.failsOnError>true</maven-checkstyle-plugin.failsOnError>\n\t\t<maven-checkstyle-plugin.failsOnViolation>true</maven-checkstyle-plugin.failsOnViolation>\n\t\t<maven-checkstyle-plugin.includeTestSourceDirectory>true\n\t\t</maven-checkstyle-plugin.includeTestSourceDirectory>\n\t</properties>\n\n\t<dependencyManagement>\n\t\t<dependencies>\n\t\t\t<!-- Spring Cloud Tencent Dependencies -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>com.tencent.cloud</groupId>\n\t\t\t\t<artifactId>spring-cloud-tencent-dependencies</artifactId>\n\t\t\t\t<version>${revision}</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\n\t\t\t<!-- Spring Framework Dependencies -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.springframework</groupId>\n\t\t\t\t<artifactId>spring-framework-bom</artifactId>\n\t\t\t\t<version>${spring.framework.version}</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\n\t\t\t<!-- Spring Boot Dependencies -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.springframework.boot</groupId>\n\t\t\t\t<artifactId>spring-boot-dependencies</artifactId>\n\t\t\t\t<version>${spring.boot.version}</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\n\t\t\t<!-- Spring Cloud Dependencies -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.springframework.cloud</groupId>\n\t\t\t\t<artifactId>spring-cloud-dependencies</artifactId>\n\t\t\t\t<version>${spring.cloud.version}</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\t\t</dependencies>\n\t</dependencyManagement>\n\n\t<build>\n\t\t<pluginManagement>\n\t\t\t<plugins>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.jacoco</groupId>\n\t\t\t\t\t<artifactId>jacoco-maven-plugin</artifactId>\n\t\t\t\t\t<version>${jacoco.version}</version>\n\t\t\t\t</plugin>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-shade-plugin</artifactId>\n\t\t\t\t\t<version>${maven-shade-plugin.version}</version>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</pluginManagement>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-checkstyle-plugin</artifactId>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t<inherited>true</inherited>\n\t\t\t\t<configuration>\n\t\t\t\t\t<release>17</release>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.jacoco</groupId>\n\t\t\t\t<artifactId>jacoco-maven-plugin</artifactId>\n\t\t\t\t<version>${jacoco.version}</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>jacoco-initialize</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>prepare-agent</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>jacoco-site</id>\n\t\t\t\t\t\t<phase>test</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>report</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n\t\t\t\t<inherited>true</inherited>\n\t\t\t\t<configuration>\n\t\t\t\t\t<forkCount>1</forkCount>\n\t\t\t\t\t<reuseForks>false</reuseForks>\n\t\t\t\t\t<argLine>${argLine}</argLine>\n\t\t\t\t</configuration>\n\t\t\t</plugin>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.codehaus.mojo</groupId>\n\t\t\t\t<artifactId>flatten-maven-plugin</artifactId>\n\t\t\t\t<version>${flatten-maven-plugin.version}</version>\n\t\t\t\t<configuration>\n\t\t\t\t\t<updatePomFile>true</updatePomFile>\n\t\t\t\t\t<flattenMode>resolveCiFriendliesOnly</flattenMode>\n\t\t\t\t</configuration>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>flatten</id>\n\t\t\t\t\t\t<phase>process-resources</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>flatten</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>flatten.clean</id>\n\t\t\t\t\t\t<phase>clean</phase>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>clean</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</build>\n\n\t<reporting>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-checkstyle-plugin</artifactId>\n\t\t\t</plugin>\n\t\t</plugins>\n\t</reporting>\n\n\t<profiles>\n\t\t<profile>\n\t\t\t<id>release</id>\n\t\t\t<build>\n\t\t\t\t<plugins>\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>attach-javadocs</id>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>jar</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t</plugin>\n\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-source-plugin</artifactId>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<phase>package</phase>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>jar-no-fork</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t</plugin>\n\n\t\t\t\t\t<plugin>\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t\t<artifactId>maven-gpg-plugin</artifactId>\n\t\t\t\t\t\t<executions>\n\t\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t\t<id>sign-artifacts</id>\n\t\t\t\t\t\t\t\t<phase>verify</phase>\n\t\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t\t<goal>sign</goal>\n\t\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t</execution>\n\t\t\t\t\t\t</executions>\n\t\t\t\t\t</plugin>\n\t\t\t\t</plugins>\n\t\t\t</build>\n\t\t</profile>\n\t\t<profile>\n\t\t\t<id>sonatype</id>\n\t\t\t<repositories>\n\t\t\t\t<repository>\n\t\t\t\t\t<id>nexus-snapshots</id>\n\t\t\t\t\t<url>https://oss.sonatype.org/content/repositories/snapshots</url>\n\t\t\t\t\t<releases>\n\t\t\t\t\t\t<enabled>false</enabled>\n\t\t\t\t\t</releases>\n\t\t\t\t\t<snapshots>\n\t\t\t\t\t\t<enabled>true</enabled>\n\t\t\t\t\t\t<updatePolicy>always</updatePolicy>\n\t\t\t\t\t</snapshots>\n\t\t\t\t</repository>\n\t\t\t\t<repository>\n\t\t\t\t\t<id>nexus-releases</id>\n\t\t\t\t\t<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>\n\t\t\t\t\t<releases>\n\t\t\t\t\t\t<enabled>true</enabled>\n\t\t\t\t\t</releases>\n\t\t\t\t\t<snapshots>\n\t\t\t\t\t\t<enabled>false</enabled>\n\t\t\t\t\t</snapshots>\n\t\t\t\t</repository>\n\t\t\t</repositories>\n\t\t</profile>\n\t</profiles>\n\n\t<distributionManagement>\n\t\t<snapshotRepository>\n\t\t\t<id>nexus-snapshots</id>\n\t\t\t<url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n\t\t</snapshotRepository>\n\t\t<repository>\n\t\t\t<id>nexus-releases</id>\n\t\t\t<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n\t\t</repository>\n\t</distributionManagement>\n</project>\n"
        },
        {
          "name": "spring-cloud-starter-tencent-all",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-starter-tencent-metadata-transfer",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-starter-tencent-polaris-auth",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-starter-tencent-polaris-circuitbreaker",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-starter-tencent-polaris-config",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-starter-tencent-polaris-contract",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-starter-tencent-polaris-discovery",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-starter-tencent-polaris-ratelimit",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-starter-tencent-polaris-router",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-tencent-commons",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-tencent-coverage",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-tencent-dependencies",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-tencent-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-tencent-plugin-starters",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-tencent-polaris-context",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-cloud-tencent-rpc-enhancement",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}