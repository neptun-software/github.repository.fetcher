{
  "metadata": {
    "timestamp": 1736608981000,
    "page": 189,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alibaba/Tangram-Android",
      "stars": 4116,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5703125,
          "content": "# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n.classpath\n.project\n.settings/\n\n# Proguard folder generated by Eclipse\nproguard/\n\n#Log Files\n*.log\n\n# OS X\n.DS_Store\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.war\n*.ear\n*.iml\n\n# IDEA Files\n.idea/\nout/\n\n# MAVEN COMPILE Files\ntarget/\nlint.xml\n.idea/misc.xml\n\ncaptures/\n\nconfig.gradle\n\ndeploy.gradle\n\n#jcenterDeploy.gradle\n#jcenterInstall.gradle"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.4345703125,
          "content": "# Contributing Guide\n\nThank you for your attention to this project. Any bug, doc, examples and suggestion is appriciated. Here are some suggestions for you to create Pull Requests or open Issues.\n\n## Branch Management\n\n```\nmaster\n ↑\ndevelop         <--- PR(bugfix/typo/3rd-PR)\n ↑ PR\n{type}/{description}\n```  \nBranches\n\n* `master` branch\n    * `master` is the latest (pre-)release branch.\n* `develop` branch\n    * `develop` is the stable developing branch. [Github Release](https://help.github.com/articles/creating-releases/) is used to publish a (pre-)release version to `master` branch.\n    * ***It's RECOMMENDED to commit bugfix or feature PR to `develop`***.\n* `{action}/{description}` branch\n    * The branch for a developing or bugfix\n    *. **DO NOT commit any PR to such a branch**.\n\n## Branch Name\n\n```\n{action}/{description}\n```\n\n* `{action}`:\n\t* `feature`: used for developing a new feature.\n\t* `bugfix`: used for fixing bugs.\n* for example: `feature/add_flex_layouthelper`\n\n## Commit Log\n\n\n```\n{action} {description}\n```\n\n* `{action}`\n    * `add`\n    * `update` or `bugfix`\n    * `remove`\n    * ...\n* `{description}`\n    * It's ***RECOMMENDED*** to close issue with syntax `#123`, see [the doc](https://help.github.com/articles/closing-issues-via-commit-messages/) for more detail. It's useful for responding issues and release flow.\n\nfor example:``\n\n* `add new layout helper`\n* `fix #123, make compatible to recyclervew 25.2.0`\n* `remove abc`\n\n## Issue\n\n* Please apply a propper label to an issue.\n* Suggested to use English.\n* Provide sufficient instructions to be able to reproduce the issue and make the issues clear. Such as phone model, system version, sdk version, crash logs and screen captures. \n\n## Pull Request And Contributor License Agreement\n\n\n[Create Pull Requests](https://github.com/alibaba/Tangram-Android/compare) here.\n\nIn order to contribute code to vlayout, you (or the legal entity you represent) must sign the Contributor License Agreement (CLA).\n\nYou can read and sign the [Alibaba CLA](https://cla-assistant.io/alibaba/Tangram-Android) online.\n\nFor CLA assistant service works properly, please make sure you have added email address that your commits linked to GitHub account.\n\n## Code Style Guide\n\n### Java & Android \n\n* Use [Google Java Style](https://google.github.io/styleguide/javaguide.html) as basic guidelines of java code.\n* Follow [AOSP Code Style](https://source.android.com/source/code-style.html) for rest of android related code style.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2017 Alibaba Group\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README-ch.md",
          "type": "blob",
          "size": 2.5322265625,
          "content": "# 注意，该项目停止维护！！！\n\n# Tangram for Android\n\n[English Document](README.md)\n\n## Tangram 相关开源库\n\n### Android\n\n+ [Tangram-Android](https://github.com/alibaba/Tangram-Android)\n+ [Virtualview-Android](https://github.com/alibaba/Virtualview-Android)\n+ [vlayout](https://github.com/alibaba/vlayout)\n+ [UltraViewPager](https://github.com/alibaba/UltraViewPager)\n\n### iOS\n\n+ [Tangram-iOS](https://github.com/alibaba/Tangram-iOS)\n+ [Virtualview-iOS](https://github.com/alibaba/VirtualView-iOS)\n+ [LazyScrollView](https://github.com/alibaba/lazyscrollview)\n\nTangram是一套动态化构建 Native 页面的框架，它包含 Tangram Android、Tangram iOS，管理后台等一些列基础设施。本工程是 Tangram Android 的sdk 项目地址，底层依赖于[vlayout](https://github.com/alibaba/vlayout) 和 [UltraViewPager](https://github.com/alibaba/UltraViewPager)。\n\n# 特点\n清注意勿使用tangram3 package下的类！Tangram3.0 正在开发中，为保持兼容，保留了原tangram的package，并新增了tangram3的package，tangram3正在密集开发中，可能会有频繁的接口调整，不推荐用于线上正式App开发！\n\n- Android iOS 双平台支持，iOS 版本参考开源库 [Tangram-iOS](https://github.com/alibaba/Tangram-iOS)。\n- 通过 json 创建页面视图，并提供了默认的解析器。\n- 可轻松实现页面视图的回收与复用。\n- 框架提供多种默认的布局方式。\n- 通过 json 数据或代码支持自定义布局样式。\n- 高性能，基于[vlayout](https://github.com/alibaba/vlayout)\n- 支持扩展功能模块\n\n# 示例\n\n![](docs/images/tangramdemo.gif)\n\n# 基本概念\n+ 卡片：同一区块的组件集合，负责对组件进行布局。\n+ 组件：最小业务单元，好比 RecyclelrView 的 Item。\n\n# 默认卡片\n\n* 通用流式布局卡片（网格）\n* 线性布局卡片\n* 固定位置布局卡片\n* 滑动固定布局卡片\n* 滑动吸顶/吸底布局卡片\n* 一拖N布局卡片\n* 轮播布局卡片\n* 瀑布流布局卡片\n* 悬浮拖动布局卡片\n\n# 接入教程\n详情见[上手教程](docs/Tutorial-ch.md)。\n\n# Tangram 文档\n\n详细的介绍文档参考[这里](http://tangram.pingguohe.net/)。\n\n# 贡献代码\n\n在提 Issue 或者 PR 之前，建议先阅读[Contributing Guide](CONTRIBUTING.md)。按照规范提建议。\n\n# 开源许可证\nTangram 遵循MIT开源许可证协议。\n\n# 微信群\n\n![](https://img.alicdn.com/tfs/TB11_2_kbSYBuNjSspiXXXNzpXa-167-167.png)\n\n搜索 `tangram_` 或者扫描以上二维码添加 Tangram 为好友，以便我们邀请你入群。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.3134765625,
          "content": "# Attention. This project is not maintained any more !!!\n\n# Tangram for Android\n\n[中文文档](README-ch.md)\n\n## Projects of Tangram\n\n### Android\n\n+ [Tangram-Android](https://github.com/alibaba/Tangram-Android)\n+ [Virtualview-Android](https://github.com/alibaba/Virtualview-Android)\n+ [vlayout](https://github.com/alibaba/vlayout)\n+ [UltraViewPager](https://github.com/alibaba/UltraViewPager)\n\n### iOS\n\n+ [Tangram-iOS](https://github.com/alibaba/Tangram-iOS)\n+ [Virtualview-iOS](https://github.com/alibaba/VirtualView-iOS)\n+ [LazyScrollView](https://github.com/alibaba/lazyscrollview)\n\nTangram is a modular UI solution for building native page dynamically including Tangram for Android, Tangram for iOS and even backend CMS. This project provides the sdk on Android which is based on [vlayout](https://github.com/alibaba/vlayout) and [UltraViewPager](https://github.com/alibaba/UltraViewPager).\n\n# Features\nWarning please not use class under tangram3 package!\nTangram 3.0 is developing, we add tangram3 package and reserve tangram package for compatible. Tangram3 is on beta and use on official app is not recommend.\n\n- Two platform support (iOS & Android, See [Tangram-iOS](https://github.com/alibaba/Tangram-iOS) in Github for iOS Version)\n- Fast Generate View by JSON Data , provide default parser.\n- Easily control the reuseability of views\n- Provide multiple Built-in layouts\n- Custom layout style (by JSON Data or code)\n- High performance (Base on [vlayout](https://github.com/alibaba/vlayout))\n- Extendable API\n\n# demo\n\n![](docs/images/tangramdemo.gif)\n\n# Basic Concepts\n+ Card, a group of cells, is responsible for layouting child cells.\n+ Cell, smallest business UI element, like an item in RecyclerView.\n\n# Default cards\n* Flow Card（like grid）\n* Linear Card\n* Fix Card\n* Scroll Fix Card\n* Sticky Card\n* One drag N Card\n* Page Scroll Card\n* Water Flow Card\n* Dragable Card\n\n# Get started\nSee details at [Tutorial](docs/Tutorial.md).\n\n# Tangram Documents\n\nSee complete [documents](http://tangram.pingguohe.net/) here.\n\n# Contributing\n\nBefore you open an issue or create a pull request, please read [Contributing Guide](CONTRIBUTING.md) first.\n\n# LICENSE\nTangram is available under the MIT license.\n\n# WeChatGroup\n\n![](https://img.alicdn.com/tfs/TB11_2_kbSYBuNjSspiXXXNzpXa-167-167.png)\n\nSearch `tangram_` or scan the QR code above to be invited in WeChat.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 2.220703125,
          "content": "/*\n * MIT License\n *\n * Copyright (c) 2017 Alibaba Group\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }\n//        maven { url \"http://oss.jfrog.org/oss-snapshot-local/\" }\n        mavenCentral()\n        jcenter()\n        maven {\n            url 'https://maven.google.com/'\n            name 'Google'\n        }\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.2'\n        classpath 'com.github.xfumihiro.view-inspector:view-inspector-plugin:0.1.1'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'\n        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'\n    }\n}\n\nallprojects {\n    repositories {\n        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }\n//        maven { url \"http://oss.jfrog.org/oss-snapshot-local/\" }\n        jcenter()\n        mavenLocal()\n        maven {\n            url 'https://maven.google.com/'\n            name 'Google'\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 2.1416015625,
          "content": "#\n# MIT License\n#\n# Copyright (c) 2017 Alibaba Group\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n#\n\n# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\norg.gradle.jvmargs=-Xmx1536M\n\nGROUP=com.alibaba.android\nARTIFACT=tangram3\nVERSION=1\nVERSION_NAME=3.5.9.8\nPACKAGING_TYPE=aar\nsystemProp.compileSdkVersion=26\nsystemProp.targetSdkVersion=26\nsystemProp.buildToolsVersion=26.0.2\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "jcenterDeploy.gradle",
          "type": "blob",
          "size": 6.0908203125,
          "content": "/*\n * MIT License\n *\n * Copyright (c) 2017 Alibaba Group\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\napply plugin: 'com.jfrog.bintray'\napply plugin: 'com.jfrog.artifactory'\n\nversion = libraryVersion\n\nif (project.hasProperty('deployVersion')) {\n    version = project.getProperty('deployVersion')\n}\n\nif (project.hasProperty(\"android\")) { // Android libraries\n    task sourcesJar(type: Jar) {\n        classifier = 'sources'\n        from android.sourceSets.main.java.srcDirs\n    }\n\n//    task javadoc(type: Javadoc) {\n//        source = android.sourceSets.main.java.srcDirs\n//        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n\n//        android.libraryVariants.all { variant ->\n//            println variant.javaCompile.classpath.files\n//            if(variant.name == 'release') { //我们只需 release 的 javadoc\n//                task(\"generate${variant.name.capitalize()}Javadoc\", type: Javadoc) {\n//                    // title = ''\n//                    // description = ''\n//                    source = variant.javaCompile.source\n//                    classpath = files(variant.javaCompile.classpath.files, project.android.getBootClasspath())\n//                    options {\n//                        encoding \"utf-8\"\n//                        links \"http://docs.oracle.com/javase/7/docs/api/\"\n//                        linksOffline \"http://d.android.com/reference\", \"${android.sdkDirectory}/docs/reference\"\n//                    }\n//                    exclude '**/BuildConfig.java'\n//                    exclude '**/R.java'\n//                }\n//                task(\"javadoc${variant.name.capitalize()}Jar\", type: Jar, dependsOn: \"generate${variant.name.capitalize()}Javadoc\") {\n//                    classifier = 'javadoc'\n//                    from tasks.getByName(\"generate${variant.name.capitalize()}Javadoc\").destinationDir\n//                }\n//                artifacts {\n//                    archives tasks.getByName(\"javadoc${variant.name.capitalize()}Jar\")\n//                }\n//            }\n//        }\n//\n//    }\n} else { // Java libraries\n    task sourcesJar(type: Jar, dependsOn: classes) {\n        classifier = 'sources'\n        from sourceSets.main.allSource\n    }\n}\n\n//task javadocJar(type: Jar, dependsOn: javadoc) {\n//    classifier = 'javadoc'\n//    from javadoc.destinationDir\n//}\n\nartifacts {\n//    archives javadocJar\n    archives sourcesJar\n}\n\n// Bintray\nProperties properties = new Properties()\nFile localProperties = project.rootProject.file('local.properties')\nif (localProperties.exists()) {\n    properties.load(project.rootProject.file('local.properties').newDataInputStream())\n}\n\nbintray {\n    user = properties.getProperty(\"bintray.user\")\n    key = properties.getProperty(\"bintray.apikey\")\n    if (!user) {\n        user = project.hasProperty('bintrayUser') ? project.getProperty('bintrayUser') : \"\"\n    }\n    if (!key) {\n        key = project.hasProperty('bintrayApikey') ? project.getProperty('bintrayApikey') : \"\"\n    }\n\n    configurations = ['archives']\n    pkg {\n        repo = bintrayRepo\n        name = bintrayName\n        desc = libraryDescription\n        websiteUrl = siteUrl\n        vcsUrl = gitUrl\n        licenses = allLicenses\n        publish = true\n        publicDownloadNumbers = true\n        version {\n            desc = libraryDescription\n            gpg {\n                sign = true //Determines whether to GPG sign the files. The default is false\n                passphrase = properties.getProperty(\"bintray.gpg.password\")\n                if (!passphrase) {\n                    passphrase = project.hasProperty('bintrayGPG') ? project.getProperty('bintrayGPG') : \"\"\n                }\n                //Optional. The passphrase for GPG signing'\n            }\n\n            mavenCentralSync {\n                sync = true\n                user = properties.getProperty('bintray.oss.user')\n                if (!user) {\n                    user = project.hasProperty('bintray.oss.user') ? project.getProperty('bintray.oss.user') : \"\"\n                }\n                password = properties.getProperty('bintray.oss.password')\n                if (!password) {\n                    password = project.hasProperty('bintray.oss.password') ? project.getProperty('bintray.oss.password') : \"\"\n                }\n                close = '1'\n            }\n        }\n    }\n}\n\nartifactory {\n    contextUrl = 'http://oss.jfrog.org/artifactory' //The base Artifactory URL if not overridden by the publisher/resolver\n    resolve {\n        repository {\n            repoKey = 'libs-release'\n        }\n    }\n    publish {\n        repository {\n            repoKey = 'oss-snapshot-local' //The Artifactory repository key to publish to\n            username = bintray.user\n            password = bintray.key\n            maven = true\n        }\n        defaults {\n            //the name is the same with that defined in bintray.configurations\n            publishConfigs('archives')\n        }\n    }\n}\n\nbintrayUpload.onlyIf {\n    !version.endsWith(\"-SNAPSHOT\")\n}\n\nartifactoryPublish.onlyIf {\n    version.endsWith(\"-SNAPSHOT\")\n}\n\ntask deploy(dependsOn: ['install', 'bintrayUpload', 'artifactoryPublish']) << {\n    println \"deploy ....\"\n}"
        },
        {
          "name": "jcenterInstall.gradle",
          "type": "blob",
          "size": 2.1826171875,
          "content": "/*\n * MIT License\n *\n * Copyright (c) 2017 Alibaba Group\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\napply plugin: 'com.github.dcendents.android-maven'\n\ngroup = GROUP\n\ninstall {\n    repositories.mavenInstaller {\n        // This generates POM.xml with proper parameters\n        pom {\n            project {\n                packaging 'aar'\n                groupId publishedGroupId\n                artifactId artifact\n\n                // Add your description here\n                name libraryName\n                description libraryDescription\n                url siteUrl\n\n                // Set your license\n                licenses {\n                    license {\n                        name licenseName\n                        url licenseUrl\n                    }\n                }\n                developers {\n                    developer {\n                        id developerId\n                        name developerName\n                        email developerEmail\n                    }\n                }\n                scm {\n                    connection gitUrl\n                    developerConnection gitUrl\n                    url siteUrl\n\n                }\n            }\n        }\n    }\n}"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 1.2705078125,
          "content": "/*\n * MIT License\n *\n * Copyright (c) 2017 Alibaba Group\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\ninclude ':tangram'\ninclude ':tangram3'\ninclude ':examples'\n\nFile configFile = file('./config.gradle')\nif (configFile.exists()) {\n    apply from: './config.gradle'\n}"
        },
        {
          "name": "tangram",
          "type": "tree",
          "content": null
        },
        {
          "name": "tangram3",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}