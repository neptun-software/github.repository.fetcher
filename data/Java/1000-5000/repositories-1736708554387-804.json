{
  "metadata": {
    "timestamp": 1736708554387,
    "page": 804,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "eclipse-collections/eclipse-collections",
      "stars": 2477,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.48046875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n*.md text\n*.java text\n*.scala text\n*.properties text\n*.xml text\n*.txt text\n*.sh text\n*.iml text\n*.classpath text\n*.project text\n*.yml text\n*.header text\n*.properties text\n*.prefs text\n*.stg text\n*.sh text\n*.sed text\n*.bat text\n\n# These files are binary and should be left untouched\n# (binary is a macro for -text -diff)\n*.class         binary\n*.jar           binary\n*.zip           binary\n\n/.idea/** linguist-generated=false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.5458984375,
          "content": "# maven\ntarget/\n.maven/\n.m2/\ndependency-reduced-pom.xml\npom.xml.versionsBackup\n.mvn/wrapper/\nmvnw\nmvnw.cmd\njmh-scala-tests/.cache-main\nscala-unit-tests/.cache-tests\ntest-coverage/**\n\n# https://raw.githubusercontent.com/github/gitignore/master/Global/JetBrains.gitignore\n\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n.idea/jarRepositories.xml\n.idea/markdown-navigator.xml\n.idea/markdown-navigator/profiles_settings.xml\n.idea/checkstyle-idea.xml\n\n# Maven\n.idea/**/libraries\n.idea/jarRepositories.xml\n\n# Other IntelliJ plugins\n.idea/scala_compiler.xml\n.idea/**/mongoSettings.xml\n.idea/checkstyle-idea.xml\n.idea/markdown-navigator.xml\n.idea/markdown-navigator/profiles_settings.xml\n\n# CMake\ncmake-build-*/\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Eclipse\n.project\n.settings/\n.classpath\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.197265625,
          "content": "Contributor License\n-------------------\n\nIf this is your first time contributing to an Eclipse Foundation project, you'll need to sign the [Eclipse Contributor Agreement][ECA].\n\n- [Create an account](https://dev.eclipse.org/site_login/createaccount.php) on dev.eclipse.org\n- Open your [Account Settings tab](https://dev.eclipse.org/site_login/myaccount.php#open_tab_accountsettings), enter your GitHub ID and click Update Account\n- Read and [sign the ECA](https://dev.eclipse.org/site_login/myaccount.php#open_tab_cla)\n- Use the exact same email address for your Eclipse account and your commit author.\n\nIssues\n------\n\nSearch the [issue tracker](https://github.com/eclipse/eclipse-collections/issues) for a relevant issue or create a new one.\n\nMaking changes\n--------------\n\nFork the repository in GitHub and make changes in your fork.\n\nPlease add a description of your changes to the [draft release notes](RELEASE_NOTE_DRAFT.md).\n\nFinally, submit a pull request.\n\nDetails on [working with GitHub for Eclipse Collections](https://github.com/eclipse/eclipse-collections/wiki/Working-with-GitHub) is located at the Wiki.\n\nContact us\n----------\n\n[Join the mailing list][mailing-list] and email the community at collections-dev@eclipse.org to discuss your ideas and get help.\n\nBuild\n-----\nThe Eclipse Collections build requires below as dependencies.\n\n- Java 11+ \n- Maven 3.1.0+\n\nThe Eclipse Collections build performs code generation to create primitive collections. Run the full build once before opening your IDE.\n\n```bash\nmvn install -DskipTests=true\n```\n\nNow you can open the project in your IDE and it won't complain about missing files. You'll be able to use the IDE to perform incremental builds and run tests. You should rarely need to run the maven build, except when:\n\n- you want to force a clean build\n- you work on [JMH][jmh] tests\n- your changes affect code generation\n- you want to see if your changes will pass [the same builds that GitHub Actions runs][github]\n\nSemantic Versioning\n-------------------\n\nEclipse Collections version numbers follow [Semantic Versioning][semver]. This means we increment the major version when we make incompatible API changes. This includes any changes which\n\n- break binary compatibility\n- break source compatibility\n- break serialization compatibility\n\nNormally, collections will have the same serialized form across major releases, indefinitely. But if we have to break serialization for some reason, it will be in a major release. Eclipse Collections includes a suite of serialization tests to prevent accidental changes.\n\nWhile preparing a minor release, the master branch won't contain any compatibility breaking changes. Feel free to work on major, compatibility-breaking changes whenever you'd like. However, if you submit a pull request to master while we're preparing a minor release, you'll have to be patient and you'll need to rebase your changes once the release is complete.\n\nCoding Style\n------------\n\nEclipse Collections follows a coding style that is similar to [Google's Style Guide for Java][style-guide], but with curly braces on their own lines. Many aspects of the style guide are enforced by CheckStyle, but not all, so please take care.\n\n```bash\nmvn clean install checkstyle:check --projects \"!scala-unit-tests,!jmh-scala-tests,!jmh-tests\" -DskipTests=true\n```\n\nAvoid changing whitespace on lines that are unrelated to your pull request. This helps preserve the accuracy of the git blame view, and makes code reviews easier.\n\nCommit messages\n---------------\n\n- [Use the imperative mood][imperative-mood] as in \"Fix bug\" or \"Add feature\" rather than \"Fixed bug\" or \"Added feature\"\n- [Mention the GitHub issue][github-issue] when relevant\n- It's a good idea to follow the [advice in Pro Git](https://git-scm.com/book/ch5-2.html)\n\nPull requests\n-------------\n\nExcessive branching and merging can make git history confusing. With that in mind\n\n- Squash your commits down to a few commits, or one commit, before submitting a pull request\n- [Rebase your pull request changes on top of the current master][rebase]. Pull requests shouldn't include merge commits.\n\nSubmit your pull request when ready. Three checks will be kicked off automatically.\n\n- IP Validation: Checks that all committers signed the Eclipse CLA and signed their commits.\n- Continuous integration: [GitHub Actions][github] that run JUnit tests, CheckStyle, and FindBugs.\n- The standard GitHub check that the pull request has no conflicts with the base branch.\n\nMake sure all the checks pass. One of the committers will take a look and provide feedback or merge your contribution.\n\nThat's it! Thanks for contributing to Eclipse Collections!\n\n[ECA]:             https://www.eclipse.org/legal/ECA.php\n[jmh]:             http://openjdk.java.net/projects/code-tools/jmh/\n[semver]:          http://semver.org/\n[style-guide]:     https://google.github.io/styleguide/javaguide.html\n[rebase]:          https://github.com/edx/edx-platform/wiki/How-to-Rebase-a-Pull-Request\n[github]:          https://github.com/eclipse/eclipse-collections/actions\n[imperative-mood]: https://github.com/git/git/blob/master/Documentation/SubmittingPatches\n[github-issue]:    https://help.github.com/articles/closing-issues-via-commit-messages/\n[mailing-list]:    https://dev.eclipse.org/mailman/listinfo/collections-dev\n"
        },
        {
          "name": "LICENSE-EDL-1.0.txt",
          "type": "blob",
          "size": 1.5244140625,
          "content": "Eclipse Distribution License - v 1.0\n\nCopyright (c) 2007, Eclipse Foundation, Inc. and its licensors.\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n    Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n    Neither the name of the Eclipse Foundation, Inc. nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "LICENSE-EPL-1.0.txt",
          "type": "blob",
          "size": 10.96875,
          "content": "Eclipse Public License - v 1.0\n\nTHE ACCOMPANYING PROGRAM IS PROVIDED UNDER THE TERMS OF THIS ECLIPSE PUBLIC LICENSE (\"AGREEMENT\"). ANY USE, REPRODUCTION OR DISTRIBUTION OF THE PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE OF THIS AGREEMENT.\n\n1. DEFINITIONS\n\n\"Contribution\" means:\n\na) in the case of the initial Contributor, the initial code and documentation distributed under this Agreement, and\nb) in the case of each subsequent Contributor:\ni) changes to the Program, and\nii) additions to the Program;\nwhere such changes and/or additions to the Program originate from and are distributed by that particular Contributor. A Contribution 'originates' from a Contributor if it was added to the Program by such Contributor itself or anyone acting on such Contributor's behalf. Contributions do not include additions to the Program which: (i) are separate modules of software distributed in conjunction with the Program under their own license agreement, and (ii) are not derivative works of the Program.\n\"Contributor\" means any person or entity that distributes the Program.\n\n\"Licensed Patents\" mean patent claims licensable by a Contributor which are necessarily infringed by the use or sale of its Contribution alone or when combined with the Program.\n\n\"Program\" means the Contributions distributed in accordance with this Agreement.\n\n\"Recipient\" means anyone who receives the Program under this Agreement, including all Contributors.\n\n2. GRANT OF RIGHTS\n\na) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free copyright license to reproduce, prepare derivative works of, publicly display, publicly perform, distribute and sublicense the Contribution of such Contributor, if any, and such derivative works, in source code and object code form.\nb) Subject to the terms of this Agreement, each Contributor hereby grants Recipient a non-exclusive, worldwide, royalty-free patent license under Licensed Patents to make, use, sell, offer to sell, import and otherwise transfer the Contribution of such Contributor, if any, in source code and object code form. This patent license shall apply to the combination of the Contribution and the Program if, at the time the Contribution is added by the Contributor, such addition of the Contribution causes such combination to be covered by the Licensed Patents. The patent license shall not apply to any other combinations which include the Contribution. No hardware per se is licensed hereunder.\nc) Recipient understands that although each Contributor grants the licenses to its Contributions set forth herein, no assurances are provided by any Contributor that the Program does not infringe the patent or other intellectual property rights of any other entity. Each Contributor disclaims any liability to Recipient for claims brought by any other entity based on infringement of intellectual property rights or otherwise. As a condition to exercising the rights and licenses granted hereunder, each Recipient hereby assumes sole responsibility to secure any other intellectual property rights needed, if any. For example, if a third party patent license is required to allow Recipient to distribute the Program, it is Recipient's responsibility to acquire that license before distributing the Program.\nd) Each Contributor represents that to its knowledge it has sufficient copyright rights in its Contribution, if any, to grant the copyright license set forth in this Agreement.\n3. REQUIREMENTS\n\nA Contributor may choose to distribute the Program in object code form under its own license agreement, provided that:\n\na) it complies with the terms and conditions of this Agreement; and\nb) its license agreement:\ni) effectively disclaims on behalf of all Contributors all warranties and conditions, express and implied, including warranties or conditions of title and non-infringement, and implied warranties or conditions of merchantability and fitness for a particular purpose;\nii) effectively excludes on behalf of all Contributors all liability for damages, including direct, indirect, special, incidental and consequential damages, such as lost profits;\niii) states that any provisions which differ from this Agreement are offered by that Contributor alone and not by any other party; and\niv) states that source code for the Program is available from such Contributor, and informs licensees how to obtain it in a reasonable manner on or through a medium customarily used for software exchange.\nWhen the Program is made available in source code form:\n\na) it must be made available under this Agreement; and\nb) a copy of this Agreement must be included with each copy of the Program.\nContributors may not remove or alter any copyright notices contained within the Program.\n\nEach Contributor must identify itself as the originator of its Contribution, if any, in a manner that reasonably allows subsequent Recipients to identify the originator of the Contribution.\n\n4. COMMERCIAL DISTRIBUTION\n\nCommercial distributors of software may accept certain responsibilities with respect to end users, business partners and the like. While this license is intended to facilitate the commercial use of the Program, the Contributor who includes the Program in a commercial product offering should do so in a manner which does not create potential liability for other Contributors. Therefore, if a Contributor includes the Program in a commercial product offering, such Contributor (\"Commercial Contributor\") hereby agrees to defend and indemnify every other Contributor (\"Indemnified Contributor\") against any losses, damages and costs (collectively \"Losses\") arising from claims, lawsuits and other legal actions brought by a third party against the Indemnified Contributor to the extent caused by the acts or omissions of such Commercial Contributor in connection with its distribution of the Program in a commercial product offering. The obligations in this section do not apply to any claims or Losses relating to any actual or alleged intellectual property infringement. In order to qualify, an Indemnified Contributor must: a) promptly notify the Commercial Contributor in writing of such claim, and b) allow the Commercial Contributor to control, and cooperate with the Commercial Contributor in, the defense and any related settlement negotiations. The Indemnified Contributor may participate in any such claim at its own expense.\n\nFor example, a Contributor might include the Program in a commercial product offering, Product X. That Contributor is then a Commercial Contributor. If that Commercial Contributor then makes performance claims, or offers warranties related to Product X, those performance claims and warranties are such Commercial Contributor's responsibility alone. Under this section, the Commercial Contributor would have to defend claims against the other Contributors related to those performance claims and warranties, and if a court requires any other Contributor to pay any damages as a result, the Commercial Contributor must pay those damages.\n\n5. NO WARRANTY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, THE PROGRAM IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is solely responsible for determining the appropriateness of using and distributing the Program and assumes all risks associated with its exercise of rights under this Agreement , including but not limited to the risks and costs of program errors, compliance with applicable laws, damage to or loss of data, programs or equipment, and unavailability or interruption of operations.\n\n6. DISCLAIMER OF LIABILITY\n\nEXCEPT AS EXPRESSLY SET FORTH IN THIS AGREEMENT, NEITHER RECIPIENT NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n7. GENERAL\n\nIf any provision of this Agreement is invalid or unenforceable under applicable law, it shall not affect the validity or enforceability of the remainder of the terms of this Agreement, and without further action by the parties hereto, such provision shall be reformed to the minimum extent necessary to make such provision valid and enforceable.\n\nIf Recipient institutes patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Program itself (excluding combinations of the Program with other software or hardware) infringes such Recipient's patent(s), then such Recipient's rights granted under Section 2(b) shall terminate as of the date such litigation is filed.\n\nAll Recipient's rights under this Agreement shall terminate if it fails to comply with any of the material terms or conditions of this Agreement and does not cure such failure in a reasonable period of time after becoming aware of such noncompliance. If all Recipient's rights under this Agreement terminate, Recipient agrees to cease use and distribution of the Program as soon as reasonably practicable. However, Recipient's obligations under this Agreement and any licenses granted by Recipient relating to the Program shall continue and survive.\n\nEveryone is permitted to copy and distribute copies of this Agreement, but in order to avoid inconsistency the Agreement is copyrighted and may only be modified in the following manner. The Agreement Steward reserves the right to publish new versions (including revisions) of this Agreement from time to time. No one other than the Agreement Steward has the right to modify this Agreement. The Eclipse Foundation is the initial Agreement Steward. The Eclipse Foundation may assign the responsibility to serve as the Agreement Steward to a suitable separate entity. Each new version of the Agreement will be given a distinguishing version number. The Program (including Contributions) may always be distributed subject to the version of the Agreement under which it was received. In addition, after a new version of the Agreement is published, Contributor may elect to distribute the Program (including its Contributions) under the new version. Except as expressly stated in Sections 2(a) and 2(b) above, Recipient receives no rights or licenses to the intellectual property of any Contributor under this Agreement, whether expressly, by implication, estoppel or otherwise. All rights in the Program not expressly granted under this Agreement are reserved.\n\nThis Agreement is governed by the laws of the State of New York and the intellectual property laws of the United States of America. No party to this Agreement will bring a legal action under this Agreement more than one year after the cause of action arose. Each party waives its rights to a jury trial in any resulting litigation.\n"
        },
        {
          "name": "NOTICE.md",
          "type": "blob",
          "size": 1.3818359375,
          "content": "# Notices for Eclipse Collections\n\nThis content is produced and maintained by the Project Leads and Committers of the Eclipse Collections project.\n\n* Project home: https://projects.eclipse.org/projects/technology.collections\n* Project Leads / Committers: https://projects.eclipse.org/projects/technology.collections/who\n\n## Trademarks\n\nEclipse Collections is a trademark of the Eclipse Foundation. Eclipse, and the Eclipse Logo are registered trademarks of the Eclipse Foundation.\n\n## Copyright\n\nAll content is the property of the respective authors or their employers. For more information regarding authorship of content, please consult the listed source code repository logs.\n\n## Declared Project Licenses\n\nThis project is made available under the terms of the Eclipse Public License (EPL) v. 1.0 or Eclipse Distribution License (EDL) v. 1.0 which are available at the following locations.\n\n* EPL 1.0: https://www.eclipse.org/legal/epl-v10.html\n* EDL 1.0: https://www.eclipse.org/org/documents/edl-v10.html\n\nSPDX-License-Identifier: EPL-1.0 OR BSD-3-Clause\n\n## Source Code\n\nThe project maintains the following source code repositories:\n\n* https://github.com/eclipse/eclipse-collections.git\n* https://github.com/eclipse/eclipse-collections-kata.git\n* https://github.com/eclipse/gsc-ec-converter.git\n* https://github.com/eclipse/www.eclipse.org-collections.git\n* https://github.com/eclipse/collections-website.git\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.908203125,
          "content": "<!--\n  ~ Copyright (c) 2022 Goldman Sachs and others.\n  ~ All rights reserved. This program and the accompanying materials\n  ~ are made available under the terms of the Eclipse Public License v1.0\n  ~ and Eclipse Distribution License v. 1.0 which accompany this distribution.\n  ~ The Eclipse Public License is available at https://www.eclipse.org/legal/epl-v10.html\n  ~ and the Eclipse Distribution License is available at\n  ~ https://www.eclipse.org/org/documents/edl-v10.php.\n  -->\n[![][maven img]][maven]\n[![][release img]][release]\n[![][javadoc api img]][javadoc api]\n[![][javadoc impl img]][javadoc impl]\n\n[![][license-epl img]][license-epl]\n[![][license-edl img]][license-edl]\n[![][snyk-badge img]][snyk-badge]\n\n[![][actions unit-tests img]][actions unit-tests]\n[![][actions acceptance-tests img]][actions acceptance-tests]\n[![][actions performance-tests img]][actions performance-tests]\n[![][actions checkstyle img]][actions checkstyle]\n[![][actions javadoc img]][actions javadoc]\n\n<a href=\"https://eclipse.dev/collections/\"><img src=\"https://github.com/eclipse/eclipse-collections/blob/master/artwork/eclipse-collections-logo.png\" height=\"50%\" width=\"50%\"></a>\n\n#### [English](https://eclipse.dev/collections/) | [Deutsch](https://eclipse.dev/collections/de/index.html) | [Ελληνικά](https://eclipse.dev/collections/el/index.html) | [Español](https://eclipse.dev/collections/es/index.html) | [中文](https://eclipse.dev/collections/cn/index.html) | [Français](https://eclipse.dev/collections/fr/index.html) | [日本語](https://eclipse.dev/collections/ja/index.html) | [Norsk (bokmål)](https://eclipse.dev/collections/no-nb/index.html) | [Português-Brasil](https://eclipse.dev/collections/pt-br/index.html) | [Русский](https://eclipse.dev/collections/ru/index.html) | [हिंदी](https://eclipse.dev/collections/hi/index.html) | [Srpski (latinica)](https://eclipse.dev/collections/sr-rs-latn/index.html)\nEclipse Collections is a comprehensive collections library for Java. The library enables productivity and performance by delivering an expressive and efficient set of APIs and types. The iteration protocol was inspired by the Smalltalk collection framework, and the collections are compatible with the Java Collection Framework types.\n\nEclipse Collections is compatible with Java 8+. Eclipse Collections is a part of the OpenJDK [Quality Outreach](https://wiki.openjdk.java.net/display/quality/Quality+Outreach) program, and it is validated for different versions of the OpenJDK.\n\n## Why Eclipse Collections?\n\n* Productivity\n  * Supports _eager_, _lazy_, _serial_ and _parallel_ iteration patterns\n  * [Rich][RichIterable], functional, and fluent APIs with eager methods available directly on collection types\n  * Provides [`List`][ListIterable], [`Set`][SetIterable], [`Bag`][Bag], [`Stack`][StackIterable], [`Map`][MapIterable], [`Multimap`][Multimap], [`BiMap`][BiMap], [`Interval`][Interval] object container types\n  * [Readable][RichIterable], [`Mutable`][MutableCollection], and [`Immutable`][ImmutableCollection] interfaces for each collection type with covariant return types\n    * [Blog: Rich, Lazy, Mutable, Immutable interfaces in Eclipse collections][BlogRichLazyMutableImmutable] \n  * Mutable and Immutable Collection [Factories][Factories]\n    * [Blog series: As a matter of Factory][BlogAsAMatterOfFactory] \n  * [Adapters][Adapters] and [Utility][Utilities] classes for JCF Types\n    * [Blog: Iterate over any Iterable in Java][BlogIterateOverAnyIterableInJava] \n* Performance\n    * Memory Efficient Containers\n      * [Blog: UnifiedMap: How it works?][BlogUnifiedMapHowItWorks]\n      * [Blog: UnifiedSet - The Memory Saver][BlogUnifiedSetTheMemorySaver]\n    * Optimized Eager, [`Lazy`][LazyIterable] and [`Parallel`][ParallelIterable] APIs\n      * [Blog: The unparalleled design of Eclipse Collections][BlogUnparalleledDesignOfEclipseCollections] \n    * [Primitive][PrimitiveIterable] Collections for all primitive types\n      * Provides `List`, `Set`, `Bag`, `Stack`, `Map`, `Interval` primitive container types\n* Maturity\n    * Eclipse Collections has been actively developed and used in financial services applications since 2004\n    * Eclipse Collections existed for a decade before concise lambda expressions were added in Java 8\n      * [Blog: My ten-year quest for concise lambda expressions in Java][BlogLambdaExpressionsInJava] \n\n## Learn Eclipse Collections\n\n* Blog Series: [Getting Started with Eclipse Collections][BlogGettingStartedWithEclipseCollections]\n* Blog Series: [The missing Java data structures no one ever told you about][BlogTheMissingJavaDataStructures]\n* Blog: [Java has Streams. Do we need third-party collections?][BlogJavaHasStreamsDoWeNeedCollections]\n* [Some Quick Code Examples](./README_EXAMPLES.md)\n* [Eclipse Collections Katas](https://github.com/eclipse/eclipse-collections-kata), a fun way to help you learn idiomatic Eclipse Collections usage.\n    * Start Here - [Pet Kata](https://eclipse.github.io/eclipse-collections-kata/pet-kata/#/)\n    * Continue Here - [Company Kata](https://eclipse.github.io/eclipse-collections-kata/company-kata/#/)\n* [Eclipse Collections Reference Guide](https://github.com/eclipse/eclipse-collections/blob/master/docs/0-RefGuide.adoc) and [Javadoc](https://eclipse.dev/collections/javadoc/11.1.0/index.html)\n* [Serializing Eclipse Collections with Jackson](./docs/jackson.md)\n* [Articles](https://github.com/eclipse/eclipse-collections/wiki/Articles) and [Blogs](https://medium.com/tag/eclipse-collections/latest)\n* Some OSS projects that use Eclipse Collections\n  * [Neo4J](https://github.com/neo4j/neo4j), [FINOS Legend](https://github.com/finos/legend-pure), [Reladomo](https://github.com/goldmansachs/reladomo), [Liftwizard](https://github.com/motlin/liftwizard), [Exchange Core](https://github.com/mzheravin/exchange-core), [Dataframe EC](https://github.com/vmzakharov/dataframe-ec), [MapDB](https://github.com/jankotek/mapdb), [Code Browser](https://github.com/yawkat/code-browser), [Obevo](https://github.com/goldmansachs/obevo), [BNY Mellon Code Katas](https://github.com/BNYMellon/CodeKatas), [Eclipse Nebula NatTable](https://www.eclipse.org/nattable/index.php), [Eclipse VIATRA](https://github.com/viatra/org.eclipse.viatra), [Jackson Datatypes Collections](https://github.com/FasterXML/jackson-datatypes-collections)\n  * If you work on an open source project that uses Eclipse Collections, let us know!\n\n## Eclipse Collections and JDK Compatibility Matrix\n\n| EC     | JDK 5 - 7 | JDK 8   | JDK 9 - 10 | JDK 11 - 14 | JDK 15 - 21 |\n|--------|-----------|---------|------------|-------------|-------------|\n| 7.x.x  | &check;   | &check; |            |             |             |\n| 8.x.x  |           | &check; |            |             |             |\n| 9.x.x  |           | &check; | &check;    | &check;     |             |\n| 10.x.x |           | &check; | &check;    | &check;     |             |\n| 10.4.0 |           | &check; | &check;    | &check;     | &check;     |\n| 11.x.x |           | &check; | &check;    | &check;     | &check;     |\n| 12.x.x |           |         |            | &check;     | &check;     |\n\n**Note:** Eclipse Collections 12.x will be compatible with Java 11+. EC 12.0 has not been released as GA yet, but there are a few milestone releases available to test with.  \n\n## Acquiring Eclipse Collections\n\n### Maven\n```xml\n<dependency>\n  <groupId>org.eclipse.collections</groupId>\n  <artifactId>eclipse-collections-api</artifactId>\n  <version>11.1.0</version>\n</dependency>\n\n<dependency>\n  <groupId>org.eclipse.collections</groupId>\n  <artifactId>eclipse-collections</artifactId>\n  <version>11.1.0</version>\n</dependency>\n```\n\n### Gradle\n\n```groovy\nimplementation 'org.eclipse.collections:eclipse-collections-api:11.1.0'\nimplementation 'org.eclipse.collections:eclipse-collections:11.1.0'\n```\n\n### OSGi Bundle\nEclipse software repository location: https://download.eclipse.org/collections/11.1.0/repository\n\n\n## How to Contribute\n\nWe welcome contributions! We accept contributions via pull requests here in GitHub. Please see [How To Contribute](CONTRIBUTING.md) to get started.\n\n\n## Additional information\n\n* Project Website: https://eclipse.dev/collections\n* Eclipse PMI: https://projects.eclipse.org/projects/technology.collections\n* StackOverflow: https://stackoverflow.com/questions/tagged/eclipse-collections\n* Mailing lists: https://dev.eclipse.org/mailman/listinfo/collections-dev\n* Forum: https://www.eclipse.org/forums/index.php?t=thread&frm_id=329\n* Working with GitHub: https://github.com/eclipse/eclipse-collections/wiki/Working-with-GitHub\n\n[actions acceptance-tests]:https://github.com/eclipse/eclipse-collections/actions?query=workflow%3A%22Acceptance+Tests%22\n[actions acceptance-tests img]:https://github.com/eclipse/eclipse-collections/workflows/Acceptance%20Tests/badge.svg?branch=master\n\n[actions unit-tests]:https://github.com/eclipse/eclipse-collections/actions?query=workflow%3A%22Unit+tests%22\n[actions unit-tests img]:https://github.com/eclipse/eclipse-collections/workflows/Unit%20tests/badge.svg?branch=master\n\n[actions performance-tests]:https://github.com/eclipse/eclipse-collections/actions?query=workflow%3A%22Performance+Tests%22\n[actions performance-tests img]:https://github.com/eclipse/eclipse-collections/workflows/Performance%20Tests/badge.svg?branch=master\n\n[actions checkstyle]:https://github.com/eclipse/eclipse-collections/actions?query=workflow%3A%22Checkstyle%22\n[actions checkstyle img]:https://github.com/eclipse/eclipse-collections/workflows/Checkstyle/badge.svg?branch=master\n\n[actions javadoc]:https://github.com/eclipse/eclipse-collections/actions?query=workflow%3A%22JavaDoc%22\n[actions javadoc img]:https://github.com/eclipse/eclipse-collections/workflows/JavaDoc/badge.svg?branch=master\n\n[maven]:https://search.maven.org/#search|gav|1|g:\"org.eclipse.collections\"%20AND%20a:\"eclipse-collections\"\n[maven img]:https://maven-badges.herokuapp.com/maven-central/org.eclipse.collections/eclipse-collections/badge.svg\n\n[release]:https://github.com/eclipse/eclipse-collections/releases\n[release img]:https://img.shields.io/github/release/eclipse/eclipse-collections.svg\n\n[javadoc api]:https://javadoc.io/doc/org.eclipse.collections/eclipse-collections-api\n[javadoc api img]:https://javadoc.io/badge2/org.eclipse.collections/eclipse-collections-api/javadoc_eclipse_collections_api.svg\n\n[javadoc impl]:https://javadoc.io/doc/org.eclipse.collections/eclipse-collections\n[javadoc impl img]:https://javadoc.io/badge2/org.eclipse.collections/eclipse-collections/javadoc_eclipse_collections.svg\n\n[license-epl]:LICENSE-EPL-1.0.txt\n[license-epl img]:https://img.shields.io/badge/License-EPL-blue.svg\n\n[license-edl]:LICENSE-EDL-1.0.txt\n[license-edl img]:https://img.shields.io/badge/License-EDL-blue.svg\n\n[snyk-badge]:https://snyk.io/vuln/maven:org.eclipse.collections:eclipse-collections@11.1.0?utm_medium=referral&utm_source=badge&utm_campaign=snyk-widget\n[snyk-badge img]:https://snyk-widget.herokuapp.com/badge/mvn/org.eclipse.collections/eclipse-collections/11.1.0/badge.svg\n\n[RichIterable]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/RichIterable.html\n[ListIterable]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/list/ListIterable.html\n[SetIterable]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/set/SetIterable.html\n[Bag]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/bag/Bag.html\n[StackIterable]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/stack/StackIterable.html\n[MapIterable]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/map/MapIterable.html\n[Multimap]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/multimap/Multimap.html\n[BiMap]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/bimap/BiMap.html\n[Interval]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/impl/list/Interval.html\n[MutableCollection]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/MutableCollection.html\n[ImmutableCollection]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/ImmutableCollection.html\n[LazyIterable]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/LazyIterable.html\n[ParallelIterable]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/ParallelIterable.html\n[PrimitiveIterable]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/api/PrimitiveIterable.html\n[Utilities]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/impl/utility/package-summary.html\n[Adapters]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/impl/collection/mutable/AbstractCollectionAdapter.html\n[BlogRichLazyMutableImmutable]: https://betterprogramming.pub/rich-lazy-mutable-and-immutable-interfaces-in-eclipse-collections-ce64a31b5936?source=friends_link&sk=8056191cec086d565643c8c7b9bd3c1c\n[BlogLambdaExpressionsInJava]: https://betterprogramming.pub/my-ten-year-quest-for-concise-lambda-expressions-in-java-39fde576b950?source=friends_link&sk=843d797af3f58f893ebdee5e13ce0115\n[BlogGettingStartedWithEclipseCollections]: https://donraab.medium.com/blog-series-getting-started-with-eclipse-collections-5634dc39b9e6?source=friends_link&sk=92d8eba8a56167fa840cf9c9ada07326\n[BlogTheMissingJavaDataStructures]: https://medium.com/javarevisited/blog-series-the-missing-java-data-structures-no-one-ever-told-you-about-17f34cc4b7e2?source=friends_link&sk=9403ae8464ae3477bfc1e52119c1576d\n[BlogUnifiedMapHowItWorks]: https://medium.com/oracledevs/unifiedmap-how-it-works-48af0b80cb37\n[BlogUnifiedSetTheMemorySaver]: https://medium.com/oracledevs/unifiedset-the-memory-saver-25b830745959\n[BlogUnparalleledDesignOfEclipseCollections]: https://medium.com/javarevisited/the-unparalleled-design-of-eclipse-collections-e4340b00f79f?source=friends_link&sk=629e6384171b18233a167a499b46408c\n[BlogIterateOverAnyIterableInJava]: https://medium.com/javarevisited/iterate-over-any-iterable-in-java-bec78eeeb452?source=friends_link&sk=7d460d1494cb76ce6bc9a5543785224a\n[BlogAsAMatterOfFactory]: https://medium.com/oracledevs/as-a-matter-of-factory-factories-matter-482d8adff094?source=friends_link&sk=96a4cd8fbc42e309c39a917449e6bff2\n[BlogJavaHasStreamsDoWeNeedCollections]: https://motlin.medium.com/java-has-streams-do-we-need-third-party-collections-dd12f473d105\n\n[Factories]: https://eclipse.dev/collections/javadoc/11.1.0/org/eclipse/collections/impl/factory/package-summary.html\n[10-0-Release]: https://github.com/eclipse/eclipse-collections/releases/tag/10.0.0\n[10-1-Release]: https://github.com/eclipse/eclipse-collections/releases/tag/10.1.0\n[10-2-Release]: https://github.com/eclipse/eclipse-collections/releases/tag/10.2.0\n[10-3-Release]: https://github.com/eclipse/eclipse-collections/releases/tag/10.3.0\n[10-4-Release]: https://github.com/eclipse/eclipse-collections/releases/tag/10.4.0\n[11-0-Release]: https://github.com/eclipse/eclipse-collections/releases/tag/11.0.0\n[11-1-Release]: https://github.com/eclipse/eclipse-collections/releases/tag/11.1.0\n"
        },
        {
          "name": "README_EXAMPLES.md",
          "type": "blob",
          "size": 5.5849609375,
          "content": "<!--\n  ~ Copyright (c) 2022 Goldman Sachs and others.\n  ~ All rights reserved. This program and the accompanying materials\n  ~ are made available under the terms of the Eclipse Public License v1.0\n  ~ and Eclipse Distribution License v. 1.0 which accompany this distribution.\n  ~ The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n  ~ and the Eclipse Distribution License is available at\n  ~ http://www.eclipse.org/org/documents/edl-v10.php.\n  -->\n<a href=\"https://www.eclipse.org/collections/\"><img src=\"https://github.com/eclipse/eclipse-collections/blob/master/artwork/eclipse-collections-logo.png\" height=\"50%\" width=\"50%\"></a>\n\n## Some Quick Code Examples\n\nEclipse Collections puts iteration methods directly on the container types. Here's several code examples that demonstrate the simple and flexible style of programming with Eclipse Collections.\n\nFirst, we will define a simple class named `Person` with a first and last name, getters and a constructor.\n\n```java\npublic class Person\n{\n    private final String firstName, lastName;\n    ...\n    public boolean lastNameEquals(String name)\n    {\n        return name.equals(this.lastName);\n    }\n}\n```\n\n#### Example 1: `Collect` (aka `map`, `transform`)\nFirst we will create a `MutableList` with three instances of the `Person` class. \n```java\nMutableList<Person> people = Lists.mutable.with(\n        new Person(\"Sally\", \"Smith\"),\n        new Person(\"Ted\", \"Watson\"),\n        new Person(\"Mary\", \"Williams\"));\n```\nThen we will `collect` their last names into a new `MutableList`, and finally output the names to a comma delimited String using `makeString`. \n```java\nMutableList<String> lastNames = people.collect(person -> person.getLastName());\nAssert.assertEquals(\"Smith, Watson, Williams\", lastNames.makeString());\n```\nThe lambda in the example above can also be replaced with a method reference.\n\n```java\nMutableList<String> lastNames = people.collect(Person::getLastName);\n```\nEclipse Collections has support for both [Mutable][MutableCollection] and [Immutable][ImmutableCollection] collections, and the return types of methods are covariant.  Here we use the same [Lists][Lists] factory to create an `ImmutableList`.\n```java\nImmutableList<Person> people = Lists.immutable.with(\n        new Person(\"Sally\", \"Smith\"),\n        new Person(\"Ted\", \"Watson\"),\n        new Person(\"Mary\", \"Williams\"));\n```\nWhile the `collect` method on a `MutableList` returned a `MutableList`, the `collect` method on an `ImmutableList` will return an `ImmutableList`.  \n```java\nImmutableList<String> lastNames = people.collect(Person::getLastName);\nAssert.assertEquals(\"Smith, Watson, Williams\", lastNames.makeString());\n```\n\nEclipse Collections has a [lazy API][LazyIterable] as well, which is available by calling the method `asLazy`.  The method `collect` will now return a [`LazyIterable`][LazyIterable].  The `LazyIterable` that is returned does not evaluate anything until the call to a terminal method is made.  In this case, the call to `makeString` will force the `LazyIterable` to collect the last names.\n\n```java\nLazyIterable<String> lastNames = people.asLazy().collect(Person::getLastName);\nAssert.assertEquals(\"Smith, Watson, Williams\", lastNames.makeString());\n```\n#### Example 2: `Select` / `Reject` (aka `filter` / `!filter`)\nWe can find all of the people with the last name \"Smith\" using the method named `select`.\n```java\nMutableList<Person> people = Lists.mutable.with(\n        new Person(\"Sally\", \"Smith\"),\n        new Person(\"Ted\", \"Watson\"),\n        new Person(\"Mary\", \"Williams\"));\n\nMutableList<Person> smiths = people.select(person -> person.lastNameEquals(\"Smith\"));\nAssert.assertEquals(\"Smith\", smiths.collect(Person::getLastName).makeString());\n```\nIf we want to use a method reference, we can use the method `selectWith`.\n```java\nMutableList<Person> smiths = people.selectWith(Person::lastNameEquals, \"Smith\");\nAssert.assertEquals(\"Smith\", smiths.collect(Person::getLastName).makeString());\n```\nWe can find all the people who do not have a last name of \"Smith\" using the method named `reject`.\n```java\nMutableList<Person> notSmiths = people.reject(person -> person.lastNameEquals(\"Smith\"));\nAssert.assertEquals(\"Watson, Williams\", notSmiths.collect(Person::getLastName).makeString());\n```\nIf we want to use a method reference, we can use the method `rejectWith`.\n```java\nMutableList<Person> notSmiths = people.rejectWith(Person::lastNameEquals, \"Smith\");\nAssert.assertEquals(\"Watson, Williams\", notSmiths.collect(Person::getLastName).makeString());\n```\n\n#### Example 3: `Any` / `All` / `None`\nWe can test whether any, all or none of the elements of a collection satisfy a given condition.\n```java\n// Any\nAssert.assertTrue(people.anySatisfy(person -> person.lastNameEquals(\"Smith\"));\nAssert.assertTrue(people.anySatisfyWith(Person::lastNameEquals, \"Smith\"));\n\n// All\nAssert.assertFalse(people.allSatisfy(person -> person.lastNameEquals(\"Smith\"));\nAssert.assertFalse(people.allSatisfyWith(Person::lastNameEquals, \"Smith\"));\n\n// None\nAssert.assertFalse(people.noneSatisfy(person -> person.lastNameEquals(\"Smith\"));\nAssert.assertFalse(people.noneSatisfyWith(Person::lastNameEquals, \"Smith\"));\n```\n\n## [Back to README](./README.md)\n\n[MutableCollection]: https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/MutableCollection.html\n[ImmutableCollection]: https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/collection/ImmutableCollection.html\n[LazyIterable]: https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/LazyIterable.html\n[Lists]: https://www.eclipse.org/collections/javadoc/11.1.0/org/eclipse/collections/api/factory/Lists.html\n"
        },
        {
          "name": "RELEASE_NOTE_DRAFT.md",
          "type": "blob",
          "size": 5.607421875,
          "content": "11.1.0\n====================\n\nThis is the 11.1.0 minor release.\n\nCentral theme of this release is addition of new APIs, features as requested by the community and decrease Tech Debt.\n\nThe Eclipse Collections team gives a huge thank you to everyone who participated in this release.\n\n# New Functionality\n-----------------\n* Added Bag.distinctView(). \n* Added Bags.mutable.withInitialCapacity.\n* Added forEachInBoth to Primitive Lists.\n* Added MultiReader to Bags factory in API module.\n* Added MultiReader to Lists factory in API module.\n* Added MultiReader to Sets factory in API module.\n* Added Primitive Bag factories in API module.\n* Added Primitive Set factories in API module.\n* Added Primitive Stack factories in API module.\n* Added factory for ObjectPrimitiveHashMapWithHashingStrategy.\n* Added withInitialCapacity api in mutableObjectPrimitiveHashingStrategyMapFactory.\n* Added ability to create Hashing Strategy Sets, Maps and Bags using Function.\n* Added injectInto for primitive types to primitive iterables.\n* Added injectIntoKeyValue to MapIterable.\n* Added injectIntoKeyValue to objectPrimitiveMap.\n* Added injectIntoKeyValue to primitiveObjectMap.\n* Added injectIntoKeyValue to primitivePrimitiveMap.\n* Added mutable reduction scenario to injectIntoKeyValue test for primitive maps.\n* Added object to primitive map factory to API module.\n* Added of and with factory methods to object -> primitive map factories.\n* Added of and with factory methods to primitive -> primitive and primitive -> object map factories.\n* Added withKeyMultiValues to MutableMultimap and subtypes. \n* Added withKeyValue to MutableMultimap and subtypes.\n* Added getAndPut to mutableObjectPrimitiveMap to retrieve the value associated with the key if one exists.\n* Added peekAndPop methods in ImmutableStack.\n* Added fused method for collect + makeString.\n* Added missing implementations of toString().\n* Added selectWithIndex and rejectWithIndex to Ordered Primitive Iterables.\n* Implemented containsAny, containsNone, containsAnyIterable, containsNoneIterable on RichIterable.\n\n# Optimizations\n----------------------\n* Optimized asParallel() for immutable sets in O(1) instead of O(n).\n* Optimized some implementations of toString() that were delegating to iterators.\n* Improved equals() performance for Set implementations.\n\n# Tech Debt Reduction\n---------------------\n* Replaced implementation factories and dependencies with API factories where possible.\n* Fixed CheckStyle configuration for NewlineAtEndOfFile so that it works across operating systems.\n* Made forEach a default method on primitiveIterable.stg.\n* Made noneSatisfy a default method on primitiveIterable.stg.\n* Removed unnecessary implementations of toSortedList/Set/Bag/MapBy.\n* Disambiguate and deprecate primitive injectInto methods on RichIterable.\n* Improved code generation logic into separate goals for sources, test-sources, and resources.\n* Improved PIT mutation test coverage.\n* Improved overall test coverage by adding missing tests. \n\n# Documentation Changes\n----------------------\n* Updated reference guide and convert to AsciiDoc.\n* Updated CONTRIBUTING.md to reflect contribution guidelines around commit sign-off.\n* Updated README.md with OSS projects that use Eclipse Collections.\n\n# Build Changes\n-----------------\n* Upgraded CheckStyle from 9.1 to 10.1.\n* Upgraded actions/cache from 2.1.7 to 3.0.2.\n* Upgraded checkstyle-configuration.xml from 1.2 schema to 1.3 schema.\n* Upgraded setup-java v3.\n* Upgraded actions/cache from 2.1.6 to 2.1.7.\n* Upgraded actions/checkout from 2 to 3.\n* Upgraded actions/upload-artifact from 2.2.4 to 3.\n* Upgraded maven-plugin-api from 3.6.3 to 3.8.5.\n* Upgraded maven-shade-plugin from 3.2.2 to 3.2.4.\n* Upgraded maven-site-plugin from 3.9.0 to 3.11.0.\n* Switched to oracle-actions to download JDK for EA builds.\n* Turned on additional CheckStyle rules and IntelliJ inspections. \n* Removed FindBugs build from GitHub workflows.\n\n# Note\n-------\n_We have taken all the measures to ensure all features are captured in the release notes. \nHowever, release notes compilation is manual, so it is possible that a commit might be missed. \nFor a comprehensive list of commits please go through the commit log._\n\nAcquiring Eclipse Collections\n-----------------------------\n\n### Maven\n\n```xml\n<dependency>\n <groupId>org.eclipse.collections</groupId>\n <artifactId>eclipse-collections-api</artifactId>\n <version>11.1.0</version>\n</dependency>\n\n<dependency>\n <groupId>org.eclipse.collections</groupId>\n <artifactId>eclipse-collections</artifactId>\n <version>11.1.0</version>\n</dependency>\n\n<dependency>\n <groupId>org.eclipse.collections</groupId>\n <artifactId>eclipse-collections-testutils</artifactId>\n <version>11.1.0</version>\n <scope>test</scope>\n</dependency>\n\n<dependency>\n <groupId>org.eclipse.collections</groupId>\n <artifactId>eclipse-collections-forkjoin</artifactId>\n <version>11.1.0</version>\n</dependency>\n```\n\n### Gradle\n\n```groovy\nimplementation 'org.eclipse.collections:eclipse-collections-api:11.1.0'\nimplementation 'org.eclipse.collections:eclipse-collections:11.1.0'\ntestImplementation 'org.eclipse.collections:eclipse-collections-testutils:11.1.0'\nimplementation 'org.eclipse.collections:eclipse-collections-forkjoin:11.1.0'\n```\n\n### Ivy\n\n```xml\n<dependency org=\"org.eclipse.collections\" name=\"eclipse-collections-api\" rev=\"11.1.0\" />\n<dependency org=\"org.eclipse.collections\" name=\"eclipse-collections\" rev=\"11.1.0\" />\n<dependency org=\"org.eclipse.collections\" name=\"eclipse-collections-testutils\" rev=\"11.1.0\" />\n<dependency org=\"org.eclipse.collections\" name=\"eclipse-collections-forkjoin\" rev=\"11.1.0\"/>\n```\n\n### OSGi Bundle\n\nEclipse software repository location: http://download.eclipse.org/collections/11.1.0/repository\n"
        },
        {
          "name": "about.html",
          "type": "blob",
          "size": 2.130859375,
          "content": "<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\"\n    \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\"/>\n<title>About Eclipse Collections 7.0</title>\n</head>\n<body lang=\"EN-US\">\n<h1>Eclipse Collections 7.0</h1>\n<h2>Eclipse Collections initial release</h2>\n<p>Dec 24 2015<p>\n<h2>About</h2>\n<p><a href=\"http://www.eclipse.org/collections/\">Eclipse Collections</a> \n  is a collections framework for Java. It has JDK-compatible \n  List, Set and Map implementations with a rich API, additional types not found \n  in the JDK like Bags, Multimaps and set of utility classes that work with any \n  JDK compatible Collections, Arrays, Maps or Strings. The iteration protocol was \n  inspired by the Smalltalk collection framework. </p>\n\n<h2>License </h2>\n\n<p>The Eclipse Foundation makes available all content in this module (&quot;Content&quot;).\n    Unless otherwise indicated below, the Content is provided to you under the terms\n    and conditions of the Eclipse Public License Version 1.0 (&quot;EPL&quot;) and\n    Eclipse Distribution License Version 1.0 (“EDL”). A copy of the EPL is available at\n    <a href=\"http://www.eclipse.org/legal/epl-v10.html\"> http://www.eclipse.org/legal/epl-v10.html</a>\n    and a copy of the EDL is available at <a href=\"http://www.eclipse.org/org/documents/edl-v10.php\">\n    http://www.eclipse.org/org/documents/edl-v10.php</a>.  For purposes of the EPL, \"Program\"\n    will mean the Content.</p>\n<p>If you did not receive this Content directly from the Eclipse Foundation, the\n  Content is being redistributed by another party (&quot;Redistributor&quot;)\n  and different terms and conditions may apply to your use of any object code\n  in the Content. Check the Redistributor&#8217;s license that was provided with\n  the Content. If no such license exists, contact the Redistributor. Unless otherwise\n  indicated below, the terms and conditions of the EPL and EDL still apply to any source\n  code in the Content and such source code may be obtained at <a href=\"http://www.eclipse.org\">http://www.eclipse.org</a>.</p>\n\n"
        },
        {
          "name": "acceptance-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "artwork",
          "type": "tree",
          "content": null
        },
        {
          "name": "checkstyle-configuration.xml",
          "type": "blob",
          "size": 19.123046875,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"\n    \"https://checkstyle.org/dtds/configuration_1_3.dtd\">\n\n<!--\n  ~ Copyright (c) 2022 Goldman Sachs and others.\n  ~ All rights reserved. This program and the accompanying materials\n  ~ are made available under the terms of the Eclipse Public License v1.0\n  ~ and Eclipse Distribution License v. 1.0 which accompany this distribution.\n  ~ The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n  ~ and the Eclipse Distribution License is available at\n  ~ http://www.eclipse.org/org/documents/edl-v10.php.\n  -->\n\n<!-- Checkstyle is very configurable. Be sure to read the documentation at -->\n<!-- http://checkstyle.sf.net (or in your downloaded distribution). -->\n\n<!-- Most Checks are configurable, be sure to consult the documentation. -->\n\n<!-- To completely disable a check, just comment it out or delete it from the file. -->\n\n<module name=\"Checker\">\n    <module name=\"SuppressionFilter\">\n        <property name=\"file\" value=\"checkstyle-suppressions.xml\" />\n    </module>\n\n    <property name=\"charset\" value=\"UTF-8\" />\n\n    <property name=\"severity\" value=\"error\" />\n\n    <!-- Checks whether files end with a new line.                        -->\n    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->\n    <module name=\"NewlineAtEndOfFile\">\n        <property name=\"fileExtensions\" value=\"java, xml, stg, scala\" />\n    </module>\n\n    <module name=\"TreeWalker\">\n        <property name=\"tabWidth\" value=\"4\" />\n\n        <module name=\"RequireThis\" />\n\n        <module name=\"OuterTypeFilename\" />\n        <module name=\"IllegalTokenText\">\n            <property name=\"tokens\" value=\"STRING_LITERAL, CHAR_LITERAL\" />\n            <property name=\"format\"\n                value=\"\\\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\\\(0(10|11|12|14|15|42|47)|134)\" />\n            <property name=\"message\"\n                value=\"Consider using special escape sequence instead of octal value or Unicode escaped value.\" />\n        </module>\n        <module name=\"MissingSwitchDefault\" />\n\n        <!-- Checks for Naming Conventions.                  -->\n        <!-- See http://checkstyle.sf.net/config_naming.html -->\n\n        <module name=\"ConstantName\" />\n        <module name=\"LocalFinalVariableName\" />\n        <module name=\"LocalVariableName\" />\n        <module name=\"MemberName\" />\n        <module name=\"MethodName\">\n            <property name=\"format\" value=\"^[a-z][a-zA-Z0-9_]*$\" />\n        </module>\n        <module name=\"ClassTypeParameterName\">\n            <property name=\"format\" value=\"^[A-Z0-9]+$\" />\n        </module>\n        <module name=\"MethodTypeParameterName\">\n            <property name=\"format\" value=\"^[A-Z0-9]+$\" />\n        </module>\n\n        <module name=\"PackageName\">\n            <property name=\"format\" value=\"^[a-z]+(\\.[a-z][a-z0-9]*)*$\" />\n        </module>\n\n        <module name=\"ParameterName\" />\n        <module name=\"StaticVariableName\" />\n        <module name=\"TypeName\" />\n        <module name=\"LambdaParameterName\"/>\n\n        <module name=\"AvoidStarImport\">\n            <property name=\"allowStaticMemberImports\" value=\"true\" />\n        </module>\n\n        <module name=\"IllegalImport\" />\n        <module name=\"RedundantImport\" />\n\n        <!-- Checks for whitespace                               -->\n        <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n        <module name=\"EmptyForInitializerPad\" />\n        <module name=\"EmptyForIteratorPad\">\n            <property name=\"option\" value=\"space\" />\n        </module>\n        <module name=\"EmptyLineSeparator\">\n            <property name=\"allowNoEmptyLineBetweenFields\" value=\"true\" />\n            <property name=\"allowMultipleEmptyLinesInsideClassMembers\" value=\"false\" />\n        </module>\n        <module name=\"GenericWhitespace\" />\n        <module name=\"MethodParamPad\" />\n        <module name=\"NoLineWrap\" />\n        <module name=\"NoWhitespaceAfter\">\n            <property name=\"tokens\" value=\"ARRAY_INIT\" />\n            <property name=\"tokens\" value=\"AT\" />\n            <property name=\"tokens\" value=\"BNOT\" />\n            <property name=\"tokens\" value=\"DEC\" />\n            <property name=\"tokens\" value=\"DOT\" />\n            <property name=\"tokens\" value=\"INC\" />\n            <property name=\"tokens\" value=\"LNOT\" />\n            <property name=\"tokens\" value=\"UNARY_MINUS\" />\n            <property name=\"tokens\" value=\"UNARY_PLUS\" />\n            <property name=\"tokens\" value=\"ARRAY_DECLARATOR\" />\n            <property name=\"tokens\" value=\"INDEX_OP\" />\n            <property name=\"tokens\" value=\"METHOD_REF\" />\n        </module>\n\n        <module name=\"NoWhitespaceBefore\" />\n        <module name=\"NoWhitespaceBefore\">\n            <property name=\"tokens\" value=\"DOT\" />\n            <property name=\"tokens\" value=\"METHOD_REF\" />\n            <property name=\"allowLineBreaks\" value=\"true\" />\n        </module>\n\n        <module name=\"OperatorWrap\">\n            <property name=\"tokens\" value=\"QUESTION\" />\n            <property name=\"tokens\" value=\"COLON\" />\n            <property name=\"tokens\" value=\"EQUAL\" />\n            <property name=\"tokens\" value=\"NOT_EQUAL\" />\n            <property name=\"tokens\" value=\"DIV\" />\n            <property name=\"tokens\" value=\"PLUS\" />\n            <property name=\"tokens\" value=\"MINUS\" />\n            <property name=\"tokens\" value=\"STAR\" />\n            <property name=\"tokens\" value=\"MOD\" />\n            <property name=\"tokens\" value=\"SR\" />\n            <property name=\"tokens\" value=\"BSR\" />\n            <property name=\"tokens\" value=\"GE\" />\n            <property name=\"tokens\" value=\"GT\" />\n            <property name=\"tokens\" value=\"SL\" />\n            <property name=\"tokens\" value=\"LE\" />\n            <property name=\"tokens\" value=\"LT\" />\n            <property name=\"tokens\" value=\"BXOR\" />\n            <property name=\"tokens\" value=\"BOR\" />\n            <property name=\"tokens\" value=\"LOR\" />\n            <property name=\"tokens\" value=\"BAND\" />\n            <property name=\"tokens\" value=\"LAND\" />\n            <property name=\"tokens\" value=\"TYPE_EXTENSION_AND\" />\n            <property name=\"tokens\" value=\"LITERAL_INSTANCEOF\" />\n            <property name=\"tokens\" value=\"METHOD_REF\" />\n            <property name=\"option\" value=\"nl\" />\n        </module>\n\n        <module name=\"OperatorWrap\">\n            <property name=\"tokens\" value=\"ASSIGN\" />\n            <property name=\"tokens\" value=\"DIV_ASSIGN\" />\n            <property name=\"tokens\" value=\"PLUS_ASSIGN\" />\n            <property name=\"tokens\" value=\"MINUS_ASSIGN\" />\n            <property name=\"tokens\" value=\"STAR_ASSIGN\" />\n            <property name=\"tokens\" value=\"MOD_ASSIGN\" />\n            <property name=\"tokens\" value=\"SR_ASSIGN\" />\n            <property name=\"tokens\" value=\"BSR_ASSIGN\" />\n            <property name=\"tokens\" value=\"SL_ASSIGN\" />\n            <property name=\"tokens\" value=\"BXOR_ASSIGN\" />\n            <property name=\"tokens\" value=\"BOR_ASSIGN\" />\n            <property name=\"tokens\" value=\"BAND_ASSIGN\" />\n            <property name=\"option\" value=\"eol\" />\n        </module>\n\n        <module name=\"ParenPad\" />\n        <module name=\"SeparatorWrap\">\n            <property name=\"id\" value=\"SeparatorWrapNl\" />\n            <property name=\"tokens\" value=\"DOT\" />\n            <property name=\"tokens\" value=\"AT\" />\n            <property name=\"tokens\" value=\"METHOD_REF\" />\n            <property name=\"option\" value=\"nl\" />\n        </module>\n        <module name=\"SeparatorWrap\">\n            <property name=\"id\" value=\"SeparatorWrapEol\" />\n            <property name=\"tokens\" value=\"COMMA\" />\n            <property name=\"tokens\" value=\"RPAREN\" />\n            <property name=\"tokens\" value=\"RBRACK\" />\n            <property name=\"tokens\" value=\"ARRAY_DECLARATOR\" />\n            <property name=\"tokens\" value=\"ELLIPSIS\" />\n            <property name=\"tokens\" value=\"SEMI\" />\n            <property name=\"option\" value=\"EOL\" />\n        </module>\n        <module name=\"TypecastParenPad\" />\n\n        <module name=\"WhitespaceAfter\" />\n\n        <module name=\"WhitespaceAround\">\n            <property name=\"allowEmptyConstructors\" value=\"true\" />\n            <property name=\"allowEmptyMethods\" value=\"true\" />\n            <property name=\"allowEmptyTypes\" value=\"true\" />\n            <property name=\"allowEmptyLoops\" value=\"true\" />\n        </module>\n\n        <module name=\"Indentation\">\n            <property name=\"lineWrappingIndentation\" value=\"8\"/>\n        </module>\n        <module name=\"CommentsIndentation\" />\n\n        <module name=\"SingleSpaceSeparator\">\n            <property name=\"validateComments\" value=\"false\" />\n        </module>\n\n        <!-- Modifier Checks                                    -->\n        <!-- See http://checkstyle.sf.net/config_modifiers.html -->\n        <module name=\"ModifierOrder\" />\n        <module name=\"RedundantModifier\" />\n\n        <module name=\"LeftCurly\">\n            <property name=\"option\" value=\"nl\" />\n            <!--TODO: Remove this, to include the LAMBDA token-->\n            <property name=\"tokens\" value=\"INTERFACE_DEF, CLASS_DEF, ANNOTATION_DEF, ENUM_DEF, CTOR_DEF, METHOD_DEF, ENUM_CONSTANT_DEF, LITERAL_WHILE, LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_SYNCHRONIZED, LITERAL_SWITCH, LITERAL_DO, LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, STATIC_INIT, OBJBLOCK\"/>\n        </module>\n\n        <module name=\"NeedBraces\" />\n\n        <module name=\"RightCurly\">\n            <property name=\"tokens\" value=\"METHOD_DEF\" />\n            <property name=\"tokens\" value=\"CTOR_DEF\" />\n            <property name=\"tokens\" value=\"CLASS_DEF\" />\n            <property name=\"tokens\" value=\"INSTANCE_INIT\" />\n            <property name=\"tokens\" value=\"LITERAL_FOR\" />\n            <property name=\"tokens\" value=\"STATIC_INIT\" />\n            <property name=\"tokens\" value=\"LITERAL_WHILE\" />\n            <property name=\"tokens\" value=\"LITERAL_CATCH\" />\n            <property name=\"tokens\" value=\"LITERAL_ELSE\" />\n            <property name=\"tokens\" value=\"LITERAL_FINALLY\" />\n            <property name=\"tokens\" value=\"LITERAL_IF\" />\n            <property name=\"tokens\" value=\"LITERAL_TRY\" />\n            <property name=\"tokens\" value=\"LITERAL_DO\" />\n            <property name=\"tokens\" value=\"ANNOTATION_DEF\" />\n            <property name=\"tokens\" value=\"ENUM_DEF\" />\n            <property name=\"option\" value=\"alone\" />\n        </module>\n\n        <!-- Checks for common coding problems               -->\n        <!-- See http://checkstyle.sf.net/config_coding.html -->\n        <module name=\"EmptyStatement\" />\n        <module name=\"EmptyBlock\">\n            <property name=\"tokens\" value=\"ARRAY_INIT\"/>\n            <property name=\"tokens\" value=\"LITERAL_DEFAULT\" />\n            <property name=\"tokens\" value=\"LITERAL_CASE\" />\n            <property name=\"tokens\" value=\"INSTANCE_INIT\" />\n            <property name=\"tokens\" value=\"LITERAL_DO\" />\n            <property name=\"tokens\" value=\"LITERAL_ELSE\" />\n            <property name=\"tokens\" value=\"LITERAL_FINALLY\" />\n            <property name=\"tokens\" value=\"LITERAL_FOR\" />\n            <property name=\"tokens\" value=\"LITERAL_IF\" />\n            <property name=\"tokens\" value=\"LITERAL_SWITCH\" />\n            <property name=\"tokens\" value=\"LITERAL_SYNCHRONIZED\" />\n            <property name=\"tokens\" value=\"LITERAL_TRY\" />\n            <property name=\"tokens\" value=\"LITERAL_WHILE\" />\n            <property name=\"tokens\" value=\"STATIC_INIT\" />\n        </module>\n\n        <!-- Effective Java Item 8 - Always override hashCode when you override equals -->\n        <module name=\"EqualsHashCode\" />\n\n        <module name=\"HiddenField\">\n            <property name=\"ignoreConstructorParameter\" value=\"true\" />\n            <property name=\"ignoreSetter\" value=\"true\" />\n            <property name=\"setterCanReturnItsClass\" value=\"true\" />\n            <property name=\"severity\" value=\"warning\" />\n        </module>\n\n        <!-- Effective Java Item 4 - Avoid creating duplicate objects -->\n        <module name=\"IllegalInstantiation\">\n            <property name=\"severity\" value=\"warning\" />\n            <property name=\"classes\" value=\"java.lang.Boolean\" />\n            <property name=\"classes\" value=\"java.lang.Byte\" />\n            <property name=\"classes\" value=\"java.lang.Character\" />\n            <property name=\"classes\" value=\"java.lang.Integer\" />\n            <property name=\"classes\" value=\"java.lang.Long\" />\n            <property name=\"classes\" value=\"java.lang.Short\" />\n            <property name=\"classes\" value=\"java.lang.StringBuffer\" />\n            <property name=\"classes\" value=\"java.lang.String\" />\n            <property name=\"classes\" value=\"java.util.Timer\" />\n            <property name=\"classes\" value=\"java.util.TimerTask\" />\n        </module>\n\n        <module name=\"SimplifyBooleanExpression\" />\n\n        <module name=\"SimplifyBooleanReturn\" />\n\n        <module name=\"HideUtilityClassConstructor\" />\n\n        <!-- Effective Java Item 17 - Use interfaces only to define types -->\n        <module name=\"InterfaceIsType\">\n            <property name=\"severity\" value=\"warning\" />\n        </module>\n\n        <module name=\"ArrayTrailingComma\" />\n\n        <!-- Miscellaneous other checks.                   -->\n        <!-- See http://checkstyle.sf.net/config_misc.html -->\n        <module name=\"ArrayTypeStyle\" />\n\n        <module name=\"Regexp\">\n            <property name=\"illegalPattern\" value=\"true\" />\n            <property name=\"format\" value=\"[’“”]\" />\n            <property name=\"message\" value=\"Curly quotes aren't allowed.\" />\n        </module>\n\n        <module name=\"Regexp\">\n            <property name=\"illegalPattern\" value=\"true\" />\n            <property name=\"format\" value=\"[ ]+$\" />\n            <property name=\"message\" value=\"Line has trailing spaces.\" />\n        </module>\n\n        <module name=\"RegexpSinglelineJava\">\n            <property name=\"ignoreComments\" value=\"true\" />\n\n            <property\n                name=\"format\"\n                value=\"System\\.out\\.println\" />\n\n            <property\n                name=\"message\"\n                value=\"System.out.println.\" />\n        </module>\n\n        <module name=\"RegexpSinglelineJava\">\n            <property name=\"ignoreComments\" value=\"true\" />\n\n            <property\n                name=\"format\"\n                value=\"System\\.err\\.println\" />\n\n            <property\n                name=\"message\"\n                value=\"System.err.println.\" />\n        </module>\n\n        <module name=\"RegexpSinglelineJava\">\n            <property name=\"ignoreComments\" value=\"true\" />\n\n            <property\n                name=\"format\"\n                value=\", \\w+,\\n\" />\n\n            <property\n                name=\"message\"\n                value=\"Comma separated list should have one item per line, or be all on a single line.\" />\n        </module>\n\n        <module name=\"RegexpSinglelineJava\">\n            <property name=\"ignoreComments\" value=\"true\" />\n\n            <property\n                name=\"format\"\n                value=\"\\(\\w+,\\n\" />\n\n            <property\n                name=\"message\"\n                value=\"Comma separated list should have one item per line, or be all on a single line.\" />\n        </module>\n\n        <!-- Effective Java Item 6 - Avoid finalizers -->\n        <module name=\"NoFinalizer\" />\n\n        <module name=\"AnnotationLocation\">\n            <property name=\"id\" value=\"AnnotationLocationMostCases\" />\n            <property name=\"tokens\" value=\"CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF\" />\n        </module>\n        <module name=\"AnnotationLocation\">\n            <property name=\"id\" value=\"AnnotationLocationVariables\" />\n            <property name=\"tokens\" value=\"VARIABLE_DEF\" />\n            <property name=\"allowSamelineMultipleAnnotations\" value=\"true\" />\n        </module>\n        <module name=\"AnnotationLocation\">\n            <property name=\"tokens\" value=\"ANNOTATION_DEF\" />\n            <property name=\"tokens\" value=\"ANNOTATION_FIELD_DEF\" />\n            <property name=\"tokens\" value=\"PACKAGE_DEF\" />\n            <property name=\"tokens\" value=\"ENUM_CONSTANT_DEF\" />\n            <property name=\"tokens\" value=\"VARIABLE_DEF\" />\n            <property name=\"allowSamelineSingleParameterlessAnnotation\" value=\"false\" />\n        </module>\n        <module name=\"EmptyCatchBlock\">\n            <property name=\"exceptionVariableName\" value=\"ignored\" />\n        </module>\n\n        <module name=\"IllegalThrows\" />\n\n        <module name=\"UpperEll\" />\n\n        <module name=\"SuperFinalize\" />\n\n        <module name=\"SuperClone\">\n            <property name=\"severity\" value=\"warning\" />\n        </module>\n\n\n        <module name=\"CovariantEquals\" />\n\n        <module name=\"AvoidStaticImport\">\n            <property name=\"excludes\" value=\"org.hamcrest.MatcherAssert.*\" />\n            <property name=\"excludes\" value=\"org.hamcrest.Matchers.*\" />\n            <property name=\"excludes\" value=\"org.junit.Assert.*\" />\n            <property name=\"excludes\" value=\"org.junit.Assume.*\" />\n            <property name=\"excludes\" value=\"org.junit.jupiter.api.Assertions.*\" />\n            <property name=\"excludes\" value=\"org.assertj.core.api.Assertions.*\" />\n            <property name=\"excludes\" value=\"org.eclipse.collections.impl.test.Verify.*\" />\n            <property name=\"excludes\" value=\"org.eclipse.collections.impl.factory.Iterables.*\" />\n            <property name=\"excludes\" value=\"org.eclipse.collections.test.IterableTestCase.*\" />\n        </module>\n\n        <module name=\"MissingDeprecated\" />\n\n        <module name=\"AnnotationUseStyle\" />\n\n        <module name=\"DeclarationOrder\" />\n\n        <module name=\"DefaultComesLast\" />\n\n        <module name=\"FallThrough\" />\n\n        <module name=\"ImportOrder\">\n            <property name=\"groups\" value=\"java,javax\" />\n            <property name=\"separated\" value=\"true\" />\n            <property name=\"sortStaticImportsAlphabetically\" value=\"true\" />\n            <property name=\"option\" value=\"bottom\" />\n        </module>\n\n        <module name=\"MultipleVariableDeclarations\" />\n\n        <module name=\"MutableException\" />\n\n        <module name=\"PackageDeclaration\" />\n\n        <module name=\"MissingOverride\">\n            <property name=\"javaFiveCompatibility\" value=\"true\" />\n        </module>\n\n        <module name=\"OneTopLevelClass\" />\n\n        <module name=\"UnusedImports\">\n            <property name=\"processJavadoc\" value=\"true\" />\n        </module>\n        <module name=\"UnusedLocalVariable\" />\n\n        <module name=\"OneStatementPerLine\" />\n\n<!--Suppressing this check as in newer version of checkstyle parenthesis around expressions are getting triggered-->\n<!--        <module name=\"UnnecessaryParentheses\" />-->\n\n    </module>\n\n    <module name=\"RegexpHeader\">\n        <property name=\"headerFile\" value=\"java.header\" />\n        <property name=\"multiLines\" value=\"11, 12, 13, 15, 16\" />\n        <property name=\"fileExtensions\" value=\"java, scala\" />\n    </module>\n\n    <module name=\"FileTabCharacter\" />\n\n    <module name=\"RegexpMultiline\">\n        <property name=\"format\" value=\"\\{\\n\\n\" />\n        <property name=\"message\" value=\"First line after opening a scope may not be blank.\" />\n    </module>\n\n    <module name=\"RegexpMultiline\">\n        <property name=\"format\" value=\"\\n\\n[ ]*\\}\" />\n        <property name=\"message\" value=\"Last line before closing a scope may not be blank.\" />\n    </module>\n\n    <module name=\"RegexpMultiline\">\n        <property name=\"format\" value=\"\\n\\n\\n\" />\n        <property name=\"message\" value=\"Extra newline.\" />\n    </module>\n</module>\n"
        },
        {
          "name": "checkstyle-suppressions.xml",
          "type": "blob",
          "size": 8.1142578125,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE suppressions PUBLIC\n    \"-//Checkstyle//DTD SuppressionFilter Configuration 1.1//EN\"\n    \"https://checkstyle.org/dtds/suppressions_1_1.dtd\">\n\n<!--\n  ~ Copyright (c) 2021 Goldman Sachs.\n  ~ All rights reserved. This program and the accompanying materials\n  ~ are made available under the terms of the Eclipse Public License v1.0\n  ~ and Eclipse Distribution License v. 1.0 which accompany this distribution.\n  ~ The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n  ~ and the Eclipse Distribution License is available at\n  ~ http://www.eclipse.org/org/documents/edl-v10.php.\n  -->\n\n<suppressions>\n\n    <suppress checks=\"IllegalType\" files=\"ArrayListAdapter.java\" />\n    <suppress checks=\"IllegalType\" files=\"ArrayListIterate.java\" />\n    <suppress checks=\"IllegalType\" files=\"CompositeArrayList.java\" />\n    <suppress checks=\"IllegalType\" files=\"Interval.java\" />\n\n    <suppress checks=\"IllegalImport\" files=\"AlwaysTearDownTestCase.java\" />\n    <suppress checks=\"IllegalImport\" files=\"AlwaysTearDownUtils.java\" />\n    <suppress checks=\"IllegalImport\" files=\"AlwaysTearDownUtilsTest.java\" />\n\n    <suppress checks=\"EqualsHashCode\" files=\"VerifyTest.java\" />\n    <suppress checks=\"EqualsHashCode\" files=\"[\\\\/]Immutable.*MapKeySet.java\" />\n    <suppress checks=\"EqualsHashCode\" files=\"[\\\\/].*HashSet.java\" />\n    <suppress checks=\"EqualsHashCode\" files=\"[\\\\/]Abstract.*Set.java\" />\n\n    <suppress checks=\"RedundantThrows\" files=\"FixedSizeCollection.java\" />\n    <suppress checks=\"RedundantThrows\" files=\"FixedSizeMap.java\" />\n\n    <suppress checks=\"IllegalThrows\" files=\"AlwaysTearDownTestCase.java\" />\n    <suppress checks=\"IllegalThrows\" files=\"CollectionFactoryTest.java\" />\n\n    <suppress checks=\"DeclarationOrder\" files=\"FixedSizeListFactory.java\" />\n    <suppress checks=\"DeclarationOrder\" files=\"FixedSizeSetFactory.java\" />\n    <suppress checks=\"DeclarationOrder\" files=\"FixedSizeMapFactory.java\" />\n\n    <suppress checks=\"IllegalInstantiationCheck\" files=\"VerifyTest.java\" />\n    <suppress checks=\"IllegalInstantiationCheck\" files=\"UnifiedSetTest.java\" />\n    <suppress checks=\"IllegalInstantiationCheck\" files=\"UnifiedSetWithHashingStrategyTest.java\" />\n    <suppress checks=\"IllegalInstantiationCheck\" files=\"ArrayListIterateTest.java\" />\n    <suppress checks=\"IllegalInstantiationCheck\" files=\"IterableIterateTest.java\" />\n\n    <suppress checks=\"ConstantName\" files=\"Bags.java\" />\n    <suppress checks=\"ConstantName\" files=\"Lists.java\" />\n    <suppress checks=\"ConstantName\" files=\"Maps.java\" />\n    <suppress checks=\"ConstantName\" files=\"Sets.java\" />\n    <suppress checks=\"ConstantName\" files=\"Stacks.java\" />\n    <suppress checks=\"ConstantName\" files=\"Multimaps.java\" />\n\n    <suppress checks=\"MethodName\" files=\"EclipseCollectionsCodeGenerator.java\" />\n    <suppress files=\"[\\\\/]annotations[\\\\/]\" checks=\"[a-zA-Z0-9]*\"/>\n    <suppress files=\"[\\\\/]plugin[\\\\/]\" checks=\"[a-zA-Z0-9]*\"/>\n\n    <suppress checks=\"MethodName\" files=\"[\\\\/]unit-tests-java8[\\\\/]\" />\n\n    <suppress checks=\"IllegalImport\" files=\"ConcurrentHashMapUnsafe.java\" />\n\n    <suppress checks=\"RegexpHeader\" files=\"MemoryTestBench.java\" />\n\n    <!--suppress lambda expression-->\n    <suppress checks=\"[a-zA-Z0-0]*\" files=\"SerialParallelLazyPerformanceTest.java\" />\n\n    <suppress checks=\"ImportOrder\" files=\"((Boolean)|(Byte)|(Char)|(Double)|(Int)|(Float)|(Long)|(Short)).*.java\" />\n\n    <suppress checks=\"Regexp\" files=\"Collectors2.java\" />\n\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableBagSerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"HashBagWithHashingStrategySerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"UnmodifiableBag.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableSortedBagSerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableBiMapSerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"AbstractMutableBiMap.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"DoubletonList.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"QuadrupletonList.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"QuintupletonList.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"SextupletonList.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"SingletonList.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"TripletonList.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableBooleanArrayList.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"DoubletonMap.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"SingletonMap.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"TripletonMap.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableMapSerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableSortedMapSerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableMapWithHashingStrategySerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableBagMultimapImpl.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableSortedBagMultimapImpl.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableSetMultimapImpl.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableSortedSetMultimapImpl.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"DoubletonSet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"QuadrupletonSet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"SingletonSet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"TripletonSet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableSetSerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableSortedSetSerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableSetWithHashingStrategySerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableArrayStack.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableStackSerializationProxy.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"FlatCollectBooleanToObjectIterable.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"FlatCollectByteToObjectIterable.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"FlatCollectCharToObjectIterable.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"FlatCollectDoubleToObjectIterable.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"FlatCollectFloatToObjectIterable.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"FlatCollectIntToObjectIterable.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"FlatCollectLongToObjectIterable.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"FlatCollectShortToObjectIterable.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableBooleanArrayStack.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableByteArrayStack.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableCharArrayStack.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableDoubleArrayStack.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableFloatArrayStack.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableIntArrayStack.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableLongArrayStack.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"ImmutableShortArrayStack.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"AbstractMutableBooleanKeySet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"AbstractMutableByteKeySet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"AbstractMutableCharKeySet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"AbstractMutableDoubleKeySet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"AbstractMutableFloatKeySet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"AbstractMutableIntKeySet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"AbstractMutableShortKeySet.java\" />\n    <suppress checks=\"RedundantModifier\" files=\"AbstractMutableLongKeySet.java\" />\n\n\t<!-- Runs outside of a plugin Mojo and has no logging API on classpath -->\n\t<suppress checks=\"RegexpSinglelineJava\" files=\"JavadocUtil.java\" />\n\n</suppressions>\n"
        },
        {
          "name": "deploy.properties",
          "type": "blob",
          "size": 0.90234375,
          "content": "#\n# Copyright (c) 2021 Goldman Sachs.\n# All rights reserved. This program and the accompanying materials\n# are made available under the terms of the Eclipse Public License v1.0\n# and Eclipse Distribution License v. 1.0 which accompany this distribution.\n# The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n# and the Eclipse Distribution License is available at\n# http://www.eclipse.org/org/documents/edl-v10.php.\n#\n\n#Tue, 09 Aug 2011 09:54:18 -0400\nbuild.major=7\nbuild.minor=0\nbuild.fix=0\n\nbuild.version=${build.major}.${build.minor}.${build.fix}\n\nbuild.version.full=${build.version}${deploy.suffix}\n\nartifact.name=${ant.project.name}-${build.version.full}\njar.name=target/${artifact.name}.jar\npom.name=target/${artifact.name}.pom\nsource.jar.name=target/${artifact.name}-sources.jar\njavadoc.jar.name=target/${artifact.name}-javadoc.jar\n\n\ndeploy.development=0\ndeploy.date=2015/06/09 09\\:26\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "eclipse-collections-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "eclipse-collections-code-generator-maven-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "eclipse-collections-code-generator",
          "type": "tree",
          "content": null
        },
        {
          "name": "eclipse-collections-forkjoin",
          "type": "tree",
          "content": null
        },
        {
          "name": "eclipse-collections-parent.iml",
          "type": "blob",
          "size": 0.33984375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule=\"true\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"AdditionalModuleElements\">\n    <content url=\"file://$MODULE_DIR$\" dumb=\"true\">\n      <excludeFolder url=\"file://$MODULE_DIR$/target\" />\n    </content>\n  </component>\n</module>"
        },
        {
          "name": "eclipse-collections-testutils",
          "type": "tree",
          "content": null
        },
        {
          "name": "eclipse-collections",
          "type": "tree",
          "content": null
        },
        {
          "name": "java.header",
          "type": "blob",
          "size": 0.5283203125,
          "content": "^/\\*$\n^ \\* Copyright \\(c\\) 20(1|2)\\d .*\\.$\n^ \\* All rights reserved\\. This program and the accompanying materials$\n^ \\* are made available under the terms of the Eclipse Public License v1\\.0$\n^ \\* and Eclipse Distribution License v\\. 1\\.0 which accompany this distribution\\.$\n^ \\* The Eclipse Public License is available at http://www\\.eclipse\\.org/legal/epl-v10\\.html$\n^ \\* and the Eclipse Distribution License is available at$\n^ \\* http://www\\.eclipse\\.org/org/documents/edl-v10\\.php\\.$\n^ \\*/$\n\n^/\\*\\*\n^ \\*([^/]|$)\n^ \\*/\n^package\n\n^import\n"
        },
        {
          "name": "jcstress-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "jmh-scala-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "jmh-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "missing-dependency",
          "type": "tree",
          "content": null
        },
        {
          "name": "p2-feature",
          "type": "tree",
          "content": null
        },
        {
          "name": "p2-repository",
          "type": "tree",
          "content": null
        },
        {
          "name": "performance-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom-template",
          "type": "blob",
          "size": 2.201171875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project\n    xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>${ivy.pom.groupId}</groupId>\n    <artifactId>${ivy.pom.artifactId}</artifactId>\n    <packaging>${ivy.pom.packaging}</packaging>\n    <version>${ivy.pom.version}</version>\n    <name>${ivy.pom.name}</name>\n\n    <description>Eclipse Collections is a collections framework for Java. It has JDK-compatible List, Set and Map\n        implementations with a rich API and set of utility classes that work with any JDK compatible Collections,\n        Arrays, Maps or Strings. The iteration protocol was inspired by the Smalltalk collection framework.\n    </description>\n\n    <url>https://github.com/eclipse/eclipse-collections</url>\n\n    <inceptionYear>2004</inceptionYear>\n\n    <licenses>\n        <license>\n            <name>Eclipse Public License - v 1.0</name>\n            <url>https://www.eclipse.org/legal/epl-v10.html</url>\n            <distribution>repo</distribution>\n        </license>\n        <license>\n            <name>Eclipse Distribution License - v 1.0</name>\n            <url>https://www.eclipse.org/licenses/edl-v10.html</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <scm>\n        <url>https://github.com/eclipse/eclipse-collections</url>\n        <connection>scm:git:https://github.com/eclipse/eclipse-collections.git</connection>\n        <developerConnection>scm:git:https://github.com/eclipse/eclipse-collections.git</developerConnection>\n    </scm>\n\n    <developers>\n        <developer>\n            <name>Craig P. Motlin</name>\n        </developer>\n\n        <developer>\n            <name>Donald Raab</name>\n        </developer>\n\n        <developer>\n            <name>Mohammad A. Rezaei</name>\n        </developer>\n\n        <developer>\n            <name>Hiroshi Ito</name>\n        </developer>\n\n        <developer>\n            <name>Nikhil J. Nanivadekar</name>\n        </developer>\n\n        <developer>\n            <name>Sirisha Pratha</name>\n        </developer>\n    </developers>\n</project>\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 49.7958984375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Copyright (c) 2024 Goldman Sachs and others.\n  ~ All rights reserved. This program and the accompanying materials\n  ~ are made available under the terms of the Eclipse Public License v1.0\n  ~ and Eclipse Distribution License v. 1.0 which accompany this distribution.\n  ~ The Eclipse Public License is available at http://www.eclipse.org/legal/epl-v10.html\n  ~ and the Eclipse Distribution License is available at\n  ~ http://www.eclipse.org/org/documents/edl-v10.php.\n  -->\n\n<project\n    xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.eclipse.collections</groupId>\n    <artifactId>eclipse-collections-parent</artifactId>\n    <version>12.0.0-SNAPSHOT</version>\n\n    <packaging>pom</packaging>\n\n    <name>Eclipse Collections Parent Project</name>\n\n    <description>Eclipse Collections is a collections framework for Java. It has JDK-compatible List, Set and Map\nimplementations with a rich API and set of utility classes that work with any JDK compatible Collections,\nArrays, Maps or Strings. The iteration protocol was inspired by the Smalltalk collection framework.\n    </description>\n\n    <url>https://github.com/eclipse/eclipse-collections</url>\n\n    <inceptionYear>2004</inceptionYear>\n\n    <licenses>\n        <license>\n            <name>Eclipse Public License - v 1.0</name>\n            <url>https://www.eclipse.org/legal/epl-v10.html</url>\n            <distribution>repo</distribution>\n        </license>\n        <license>\n            <name>Eclipse Distribution License - v 1.0</name>\n            <url>https://www.eclipse.org/licenses/edl-v10.html</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <scm>\n        <url>https://github.com/eclipse/eclipse-collections</url>\n        <connection>scm:git:https://github.com/eclipse/eclipse-collections.git</connection>\n        <developerConnection>scm:git:https://github.com/eclipse/eclipse-collections.git</developerConnection>\n    </scm>\n\n    <issueManagement>\n        <system>GitHub</system>\n        <url>https://github.com/eclipse/eclipse-collections/issues</url>\n    </issueManagement>\n\n    <ciManagement>\n        <system>GitHub Actions</system>\n        <url>https://github.com/eclipse/eclipse-collections/actions</url>\n    </ciManagement>\n\n    <mailingLists>\n        <mailingList>\n            <name>collections-dev</name>\n            <subscribe>https://dev.eclipse.org/mailman/listinfo/collections-dev</subscribe>\n            <unsubscribe>https://dev.eclipse.org/mailman/listinfo/collections-dev</unsubscribe>\n            <post>collections-dev@eclipse.org</post>\n            <archive>https://dev.eclipse.org/mhonarc/lists/collections-dev</archive>\n        </mailingList>\n    </mailingLists>\n\n    <developers>\n        <developer>\n            <name>Craig P. Motlin</name>\n        </developer>\n\n        <developer>\n            <name>Donald Raab</name>\n        </developer>\n\n        <developer>\n            <name>Mohammad A. Rezaei</name>\n        </developer>\n\n        <developer>\n            <name>Hiroshi Ito</name>\n        </developer>\n\n        <developer>\n            <name>Nikhil J. Nanivadekar</name>\n        </developer>\n\n        <developer>\n            <name>Sirisha Pratha</name>\n        </developer>\n    </developers>\n\n    <modules>\n        <module>eclipse-collections-code-generator</module>\n        <module>eclipse-collections-code-generator-maven-plugin</module>\n        <module>eclipse-collections-api</module>\n        <module>eclipse-collections</module>\n        <module>eclipse-collections-testutils</module>\n        <module>eclipse-collections-forkjoin</module>\n        <module>unit-tests</module>\n        <module>serialization-tests</module>\n        <module>jcstress-tests</module>\n        <module>unit-tests-java8</module>\n        <module>test-coverage</module>\n    </modules>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\n        <slf4j.version>2.0.16</slf4j.version>\n        <clover.version>4.4.1</clover.version>\n        <scala.version>2.13.15</scala.version>\n        <guava.version>33.1.0-jre</guava.version>\n        <trove4j.version>3.1.0</trove4j.version>\n        <koloboke.version>1.0.0</koloboke.version>\n        <hppc.version>0.9.1</hppc.version>\n        <commons.lang.version>3.14.0</commons.lang.version>\n        <checkstyle.version>10.18.2</checkstyle.version>\n        <checkstyle.plugin.version>3.5.0</checkstyle.plugin.version>\n        <jacoco.plugin.version>0.8.12</jacoco.plugin.version>\n        <junit.version>4.13.2</junit.version>\n        <jmh.version>1.37</jmh.version>\n\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n        <maven.compiler.fork>true</maven.compiler.fork>\n        <maven.compiler.meminitial>2048m</maven.compiler.meminitial>\n        <maven.compiler.maxmem>2048m</maven.compiler.maxmem>\n\n        <spotless.check.skip>true</spotless.check.skip>\n\n        <argLine></argLine>\n\n        <project.previous.version>11.0.0</project.previous.version>\n    </properties>\n\n    <pluginRepositories>\n\n        <pluginRepository>\n            <id>central</id>\n            <url>https://repo1.maven.org/maven2</url>\n            <name>Maven Plugin Repository</name>\n\n            <releases>\n                <updatePolicy>never</updatePolicy>\n            </releases>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n        </pluginRepository>\n\n        <pluginRepository>\n            <id>repo.eclipse.org</id>\n            <url>https://repo.eclipse.org/content/repositories/cbi-releases/</url>\n        </pluginRepository>\n\n    </pluginRepositories>\n\n    <dependencyManagement>\n        <dependencies>\n\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>${junit.version}</version>\n                <scope>test</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter-api</artifactId>\n                <version>5.10.2</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-nop</artifactId>\n                <version>${slf4j.version}</version>\n                <scope>test</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-simple</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.scala-lang</groupId>\n                <artifactId>scala-library</artifactId>\n                <version>${scala.version}</version>\n            </dependency>\n\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <defaultGoal>clean install checkstyle:check</defaultGoal>\n\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>eu.stamp-project</groupId>\n                    <artifactId>pitmp-maven-plugin</artifactId>\n                    <version>1.3.7</version>\n                    <configuration>\n                        <verbose>false</verbose>\n                        <timestampedReports>false</timestampedReports>\n                        <targetModules>\n                            <param>unit-tests</param>\n                        </targetModules>\n                        <skippedModules>\n                            <param>eclipse-collections-code-generator</param>\n                            <param>eclipse-collections-code-generator-maven-plugin</param>\n                            <param>p2-feature</param>\n                            <param>p2-repository</param>\n                        </skippedModules>\n                        <avoidCallsTo>\n                            <avoidCallsTo>java.util.logging</avoidCallsTo>\n                            <avoidCallsTo>org.apache.log4j</avoidCallsTo>\n                            <avoidCallsTo>org.slf4j</avoidCallsTo>\n                            <avoidCallsTo>org.apache.commons.logging</avoidCallsTo>\n                        </avoidCallsTo>\n                        <maxMutationsPerClass>1</maxMutationsPerClass>\n                        <additionalClasspathElements>target/generated-sources/java/*</additionalClasspathElements>\n                        <excludedClasses>\n                            <param>org.eclipse.collections.impl.lazy.parallel*</param>\n                            <param>org.eclipse.collections.impl.parallel*</param>\n                            <param>org.eclipse.collections.impl.map.mutable.Concurrent*</param>\n                            <param>org.eclipse.collections.impl.collector.Collectors2</param>\n                            <param>java.util.stream.*</param>\n                            <param>org.eclipse.collections.impl.*Char*</param>\n                            <param>org.eclipse.collections.impl.*Float*</param>\n                            <param>org.eclipse.collections.impl.*Long*</param>\n                            <param>org.eclipse.collections.impl.*Double*</param>\n                            <param>org.eclipse.collections.impl.*Byte*</param>\n                            <param>org.eclipse.collections.impl.*Short*</param>\n                            <param>org.eclipse.collections.impl.*Iterable*</param>\n                            <param>org.eclipse.collections.impl.*Multimap*</param>\n                            <param>org.eclipse.collections.impl.*Composite*</param>\n                            <param>org.eclipse.collections.impl.*Interval*</param>\n                            <param>org.eclipse.collections.impl.*Adapter*</param>\n                            <param>org.eclipse.collections.impl.*Concurrent*</param>\n                            <param>org.eclipse.collections.impl.*Parallel*</param>\n                            <param>org.eclipse.collections.impl.*Synchronized*</param>\n                            <param>org.eclipse.collections.impl.*Unmodifiable*</param>\n                            <param>org.eclipse.collections.impl.*Immutable*</param>\n                            <param>org.eclipse.collections.impl.*MultiReader*</param>\n                            <param>org.eclipse.collections.impl.*FixedSize*</param>\n                            <param>org.eclipse.collections.impl.*Collectors*</param>\n                        </excludedClasses>\n                        <excludedTestClasses>\n                            <param>org.eclipse.collections.impl.lazy.parallel*</param>\n                            <param>org.eclipse.collections.impl.parallel*</param>\n                            <param>org.eclipse.collections.impl.*Char*</param>\n                            <param>org.eclipse.collections.impl.*Float*</param>\n                            <param>org.eclipse.collections.impl.*Long*</param>\n                            <param>org.eclipse.collections.impl.*Double*</param>\n                            <param>org.eclipse.collections.impl.*Byte*</param>\n                            <param>org.eclipse.collections.impl.*Short*</param>\n                            <param>org.eclipse.collections.impl.*Iterable*</param>\n                            <param>org.eclipse.collections.impl.*Multimap*</param>\n                            <param>org.eclipse.collections.impl.*Composite*</param>\n                            <param>org.eclipse.collections.impl.*Interval*</param>\n                            <param>org.eclipse.collections.impl.*Adapter*</param>\n                            <param>org.eclipse.collections.impl.*Concurrent*</param>\n                            <param>org.eclipse.collections.impl.*Parallel*</param>\n                            <param>org.eclipse.collections.impl.*Synchronized*</param>\n                            <param>org.eclipse.collections.impl.*Unmodifiable*</param>\n                            <param>org.eclipse.collections.impl.*Immutable*</param>\n                            <param>org.eclipse.collections.impl.*MultiReader*</param>\n                            <param>org.eclipse.collections.impl.*FixedSize*</param>\n                            <param>org.eclipse.collections.impl.*Collectors*</param>\n                        </excludedTestClasses>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-assembly-plugin</artifactId>\n                    <version>3.7.1</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>3.2.0</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.13.0</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-dependency-plugin</artifactId>\n                    <version>3.1.2</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-deploy-plugin</artifactId>\n                    <version>3.1.3</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>3.1.3</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.3.0</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <version>3.10.0</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-plugin-plugin</artifactId>\n                    <version>3.15.0</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-release-plugin</artifactId>\n                    <version>3.1.1</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>3.3.1</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>3.12.1</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-source-plugin</artifactId>\n                    <version>3.3.1</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>versions-maven-plugin</artifactId>\n                    <version>2.17.1</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>clirr-maven-plugin</artifactId>\n                    <version>2.8</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>net.alchim31.maven</groupId>\n                    <artifactId>scala-maven-plugin</artifactId>\n                    <version>4.9.2</version>\n                    <configuration>\n                        <scalaVersion>${scala.version}</scalaVersion>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <goals>\n                                <goal>compile</goal>\n                                <goal>testCompile</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>3.5.0</version>\n                    <configuration>\n                        <includes>\n                            <include>**/*Test.java</include>\n                        </includes>\n                        <argLine>-XX:-OmitStackTraceInFastThrow -Xms1024m -Xmx2048m --add-opens java.base/java.lang=ALL-UNNAMED @{argLine}</argLine>\n                        <runOrder>random</runOrder>\n                        <!--<forkCount>2C</forkCount>-->\n                        <printSummary>false</printSummary>\n                    </configuration>\n                    <!-- Configure surefire to run JUnit 4 and 5 tests -->\n                    <!-- In maven 3.9.6 and 4.x, maven is able to auto-detect JUnit and these dependencies are not required -->\n                    <!-- In maven 3.9.5, there is an internal exception inside surefire without these declared -->\n                    <!-- Even with newer versions of maven, it is advantageous to keep these declarations -->\n                    <!-- Without them, maven may only run JUnit 5 tests, in a project with both JUnit 4 and 5 -->\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.junit.jupiter</groupId>\n                            <artifactId>junit-jupiter-engine</artifactId>\n                            <version>5.10.3</version>\n                        </dependency>\n                        <dependency>\n                            <groupId>org.junit.platform</groupId>\n                            <artifactId>junit-platform-engine</artifactId>\n                            <version>1.10.3</version>\n                        </dependency>\n                        <dependency>\n                            <groupId>org.junit.vintage</groupId>\n                            <artifactId>junit-vintage-engine</artifactId>\n                            <version>5.10.3</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-project-info-reports-plugin</artifactId>\n                    <version>3.7.0</version>\n                </plugin>\n\n                <plugin>\n                    <artifactId>maven-checkstyle-plugin</artifactId>\n                    <version>${checkstyle.plugin.version}</version>\n                    <configuration>\n                        <configLocation>checkstyle-configuration.xml</configLocation>\n                        <logViolationsToConsole>true</logViolationsToConsole>\n                        <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                        <cacheFile>${basedir}/target/checkstyleCache</cacheFile>\n                        <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>\n                    </configuration>\n                    <dependencies>\n                        <dependency>\n                            <groupId>com.puppycrawl.tools</groupId>\n                            <artifactId>checkstyle</artifactId>\n                            <version>${checkstyle.version}</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.eclipse.cbi.maven.plugins</groupId>\n                    <artifactId>eclipse-jarsigner-plugin</artifactId>\n                    <version>1.3.2</version>\n                </plugin>\n                <!--This plugin's configuration is used to store Eclipse m2e\n                    settings only. It has no influence on the Maven build itself. -->\n                <plugin>\n                    <groupId>org.eclipse.m2e</groupId>\n                    <artifactId>lifecycle-mapping</artifactId>\n                    <version>1.0.0</version>\n                    <configuration>\n                        <lifecycleMappingMetadata>\n                            <pluginExecutions>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>\n                                            org.eclipse.collections\n                                        </groupId>\n                                        <artifactId>\n                                            eclipse-collections-code-generator-maven-plugin\n                                        </artifactId>\n                                        <versionRange>\n                                            [7.1.0-SNAPSHOT,)\n                                        </versionRange>\n                                        <goals>\n                                            <goal>generate</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <execute>\n                                            <runOnIncremental>false</runOnIncremental>\n                                            <runOnConfiguration>true</runOnConfiguration>\n                                        </execute>\n                                    </action>\n                                </pluginExecution>\n                            </pluginExecutions>\n                        </lifecycleMappingMetadata>\n                    </configuration>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n            </plugin>\n\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>versions-maven-plugin</artifactId>\n            </plugin>\n\n            <plugin>\n                <artifactId>maven-wrapper-plugin</artifactId>\n                <version>3.3.1</version>\n            </plugin>\n\n            <plugin>\n                <groupId>com.diffplug.spotless</groupId>\n                <artifactId>spotless-maven-plugin</artifactId>\n                <version>2.43.0</version>\n                <configuration>\n                    <upToDateChecking>\n                        <enabled>true</enabled>\n                    </upToDateChecking>\n                </configuration>\n            </plugin>\n\n        </plugins>\n\n    </build>\n\n    <reporting>\n        <plugins>\n\n            <plugin>\n                <artifactId>maven-jxr-plugin</artifactId>\n            </plugin>\n\n            <plugin>\n                <artifactId>maven-surefire-report-plugin</artifactId>\n            </plugin>\n\n            <plugin>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <configuration>\n                    <source>1.8</source>\n                    <doctitle>Eclipse Collections - ${project.version}</doctitle>\n                    <windowtitle>Eclipse Collections - ${project.version}</windowtitle>\n                    <show>public</show>\n                    <detectJavaApiLink>true</detectJavaApiLink>\n                    <links>\n                        <link>https://junit.org/junit4/javadoc/latest</link>\n                        <link>https://docs.oracle.com/en/java/javase/11/docs/api</link>\n                    </links>\n                    <destDir>${project.version}</destDir>\n                    <doclint>html,syntax,accessibility</doclint>\n                    <excludePackageNames>\n                        org.openjdk,org.eclipse.collections.impl.jmh,org.eclipse.collections.codegenerator.maven\n                    </excludePackageNames>\n                    <additionalOptions>-html5</additionalOptions>\n                </configuration>\n                <reportSets>\n                    <reportSet>\n                        <id>aggregate</id>\n                        <inherited>false</inherited>\n                        <reports>\n                            <report>aggregate</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n\n            <plugin>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <configuration>\n                    <configLocation>checkstyle-configuration.xml</configLocation>\n                    <logViolationsToConsole>true</logViolationsToConsole>\n                    <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>versions-maven-plugin</artifactId>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>dependency-updates-report</report>\n                            <report>plugin-updates-report</report>\n                            <report>property-updates-report</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n\n        </plugins>\n    </reporting>\n\n    <profiles>\n\n        <profile>\n            <id>java-8</id>\n\n            <activation>\n                <jdk>1.8</jdk>\n            </activation>\n\n            <modules>\n                <module>scala-unit-tests</module>\n                <module>jmh-scala-tests</module>\n                <module>jmh-tests</module>\n            </modules>\n        </profile>\n\n        <profile>\n            <id>all</id>\n\n            <modules>\n                <module>eclipse-collections-code-generator</module>\n                <module>eclipse-collections-code-generator-maven-plugin</module>\n                <module>eclipse-collections-api</module>\n                <module>eclipse-collections</module>\n                <module>eclipse-collections-testutils</module>\n                <module>eclipse-collections-forkjoin</module>\n                <module>unit-tests</module>\n                <module>serialization-tests</module>\n                <module>acceptance-tests</module>\n                <module>performance-tests</module>\n            </modules>\n        </profile>\n\n        <profile>\n            <id>clover-optimize</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.atlassian.maven.plugins</groupId>\n                        <artifactId>maven-clover2-plugin</artifactId>\n                        <version>${clover.version}</version>\n                        <executions>\n                            <execution>\n                                <id>setup</id>\n                                <phase>process-sources</phase>\n                                <goals>\n                                    <goal>setup</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>other</id>\n                                <goals>\n                                    <goal>optimize</goal>\n                                    <goal>snapshot</goal>\n                                    <goal>log</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>clover</id>\n\n            <modules>\n                <module>eclipse-collections-code-generator</module>\n                <module>eclipse-collections-code-generator-maven-plugin</module>\n                <module>eclipse-collections-api</module>\n                <module>eclipse-collections</module>\n                <module>eclipse-collections-testutils</module>\n                <module>unit-tests</module>\n                <module>serialization-tests</module>\n                <module>acceptance-tests</module>\n            </modules>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.atlassian.maven.plugins</groupId>\n                        <artifactId>maven-clover2-plugin</artifactId>\n                        <version>${clover.version}</version>\n                        <configuration>\n                            <licenseLocation>${clover.license}</licenseLocation>\n                            <contextFilters>@deprecated</contextFilters>\n                            <generateHistorical>true</generateHistorical>\n                            <historyDir>${user.home}/clover/${project.artifactId}</historyDir>\n                            <includesAllSourceRoots>true</includesAllSourceRoots>\n                            <instrumentLambda>block</instrumentLambda>\n                            <excludes>\n                                <exclude>**/FileUtils.java</exclude>\n                                <exclude>**/GenerateMojo.java</exclude>\n                                <exclude>**/EclipseCollectionsCodeGenerator.java</exclude>\n                                <exclude>**/Primitive.java</exclude>\n                                <exclude>**/IntegerOrStringRenderer.java</exclude>\n                                <exclude>**/jmh/**/*.java</exclude>\n                            </excludes>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>setup</id>\n                                <phase>process-test-sources</phase>\n                                <goals>\n                                    <goal>setup</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n\n        </profile>\n\n        <profile>\n            <id>release-artifacts</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.eclipse.cbi.maven.plugins</groupId>\n                        <artifactId>eclipse-jarsigner-plugin</artifactId>\n                        <version>1.3.4</version>\n                        <executions>\n                            <execution>\n                                <id>jarsign</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <!--region Phase 21: verify-->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>3.2.7</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                                <configuration>\n                                    <!-- Prevent `gpg` from using pinentry programs -->\n                                    <!-- https://github.com/samuelmeuli/action-maven-publish/issues/1 -->\n                                    <gpgArguments>\n                                        <arg>--pinentry-mode</arg>\n                                        <arg>loopback</arg>\n                                    </gpgArguments>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <!--endregion Phase 21: verify-->\n\n                    <!--region Phase 17: package-->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>3.3.1</version>\n                        <executions>\n                            <execution>\n                                <id>create source jar</id>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <!--endregion Phase 17: package-->\n                </plugins>\n            </build>\n            <distributionManagement>\n                <snapshotRepository>\n                    <id>ossrh</id>\n                    <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n                </snapshotRepository>\n                <repository>\n                    <id>ossrh</id>\n                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n                </repository>\n            </distributionManagement>\n        </profile>\n\n        <!--region Phase 1: validate-->\n        <profile>\n            <id>maven-enforcer-plugin</id>\n\n            <build>\n                <plugins>\n\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-enforcer-plugin</artifactId>\n                        <version>3.5.0</version>\n                        <dependencies>\n                            <dependency>\n                                <groupId>org.codehaus.mojo</groupId>\n                                <artifactId>extra-enforcer-rules</artifactId>\n                                <version>1.8.0</version>\n                            </dependency>\n                        </dependencies>\n                        <executions>\n                            <execution>\n                                <id>enforce</id>\n                                <configuration>\n                                    <rules>\n                                        <dependencyConvergence />\n                                        <requireJavaVersion>\n                                            <version>1.8.0</version>\n                                        </requireJavaVersion>\n                                        <requirePluginVersions>\n                                            <banLatest>true</banLatest>\n                                            <banRelease>true</banRelease>\n                                            <unCheckedPluginList>\n                                                org.eclipse.collections:eclipse-collections-code-generator-maven-plugin,\n                                                org.eclipse.ebr:ebr-maven-plugin,\n                                                org.eclipse.ebr:ebr-tycho-extras-plugin,\n                                                org.apache.maven.plugins:maven-site-plugin,\n                                                org.apache.maven.plugins:maven-deploy-plugin\n                                            </unCheckedPluginList>\n                                        </requirePluginVersions>\n                                        <banDuplicatePomDependencyVersions />\n                                        <banDuplicateClasses>\n                                            <findAllDuplicates>true</findAllDuplicates>\n                                            <ignoreWhenIdentical>true</ignoreWhenIdentical>\n                                        </banDuplicateClasses>\n                                    </rules>\n                                </configuration>\n                                <goals>\n                                    <goal>enforce</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>spotless-check</id>\n\n            <properties>\n                <spotless.check.skip>false</spotless.check.skip>\n            </properties>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.diffplug.spotless</groupId>\n                        <artifactId>spotless-maven-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>check</goal>\n                                </goals>\n                                <phase>validate</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>spotless-apply</id>\n\n            <properties>\n                <spotless.check.skip>false</spotless.check.skip>\n            </properties>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.diffplug.spotless</groupId>\n                        <artifactId>spotless-maven-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>apply</goal>\n                                </goals>\n                                <phase>verify</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>spotless-java-sort-imports</id>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.diffplug.spotless</groupId>\n                        <artifactId>spotless-maven-plugin</artifactId>\n                        <configuration>\n                            <java>\n                                <toggleOffOn>\n                                    <off>@formatter:off</off>\n                                    <on>@formatter:on</on>\n                                </toggleOffOn>\n\n                                <importOrder>\n                                    <!-- use an empty string for all the imports not specified explicitly, '|' to join group without blank line, and '\\#` prefix for static imports. -->\n                                    <order>java,javax,,\\#java|\\#javax,\\#</order>\n                                </importOrder>\n\n                                <removeUnusedImports />\n                            </java>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>spotless-java-unused-imports</id>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.diffplug.spotless</groupId>\n                        <artifactId>spotless-maven-plugin</artifactId>\n                        <configuration>\n                            <java>\n                                <toggleOffOn>\n                                    <off>@formatter:off</off>\n                                    <on>@formatter:on</on>\n                                </toggleOffOn>\n\n                                <removeUnusedImports />\n                            </java>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>spotless-java-cleanthat</id>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.diffplug.spotless</groupId>\n                        <artifactId>spotless-maven-plugin</artifactId>\n                        <configuration>\n                            <java>\n                                <toggleOffOn>\n                                    <off>@formatter:off</off>\n                                    <on>@formatter:on</on>\n                                </toggleOffOn>\n\n                                <!-- Cleanthat will refactor code, but it may break style: apply it before formatter -->\n                                <cleanthat />\n                            </java>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>spotless-pom</id>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.diffplug.spotless</groupId>\n                        <artifactId>spotless-maven-plugin</artifactId>\n                        <configuration>\n                            <pom>\n                                <toggleOffOn />\n\n                                <sortPom>\n                                    <expandEmptyElements>false</expandEmptyElements>\n                                    <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>\n                                    <keepBlankLines>true</keepBlankLines>\n                                    <nrOfIndentSpace>4</nrOfIndentSpace>\n\n                                    <!-- Sort order of elements: https://github.com/Ekryd/sortpom/wiki/PredefinedSortOrderProfiles-->\n                                    <predefinedSortOrder>recommended_2008_06</predefinedSortOrder>\n\n                                    <!-- Custom sort order of elements: https://raw.githubusercontent.com/Ekryd/sortpom/master/sorter/src/main/resources/custom_1.xml -->\n                                    <sortOrderFile />\n                                </sortPom>\n                            </pom>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>spotless-markdown</id>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.diffplug.spotless</groupId>\n                        <artifactId>spotless-maven-plugin</artifactId>\n                        <configuration>\n                            <markdown>\n                                <toggleOffOn />\n\n                                <includes>\n                                    <include>**/*.md</include>\n                                </includes>\n\n                                <excludes>\n                                    <exclude>**/target/**/*.md</exclude>\n                                </excludes>\n\n                                <flexmark />\n                            </markdown>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <id>spotless-yaml</id>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>com.diffplug.spotless</groupId>\n                        <artifactId>spotless-maven-plugin</artifactId>\n                        <configuration>\n                            <yaml>\n                                <toggleOffOn />\n\n                                <includes>\n                                    <include>**/*.yaml</include>\n                                    <include>**/*.yml</include>\n                                </includes>\n\n                                <excludes>\n                                    <exclude>**/target/**/*.yaml</exclude>\n                                    <exclude>**/target/**/*.yml</exclude>\n                                </excludes>\n\n                                <prettier>\n                                    <config>\n                                        <singleQuote>false</singleQuote>\n                                    </config>\n                                </prettier>\n                            </yaml>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <!--endregion Phase 1: validate-->\n\n        <!--region Phase 8: process-classes-->\n        <profile>\n            <id>bnd-maven-plugin</id>\n\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>biz.aQute.bnd</groupId>\n                        <artifactId>bnd-maven-plugin</artifactId>\n                        <version>7.0.0</version>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>bnd-process</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <!--endregion Phase 8: process-classes-->\n\n        <!--region Phase 16: prepare-package-->\n        <profile>\n            <id>jacoco-maven-plugin</id>\n\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <plugin>\n                            <groupId>org.jacoco</groupId>\n                            <artifactId>jacoco-maven-plugin</artifactId>\n                            <version>${jacoco.plugin.version}</version>\n                            <executions>\n                                <execution>\n                                    <goals>\n                                        <goal>prepare-agent</goal>\n                                    </goals>\n                                </execution>\n                                <execution>\n                                    <id>report</id>\n                                    <phase>prepare-package</phase>\n                                    <goals>\n                                        <goal>report</goal>\n                                    </goals>\n                                </execution>\n                            </executions>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n            </build>\n        </profile>\n        <!--endregion Phase 16: prepare-package-->\n\n        <!--region Phase 17: package-->\n        <profile>\n            <id>maven-javadoc-plugin</id>\n\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>3.10.0</version>\n                        <configuration>\n                            <source>1.8</source>\n                            <doctitle>Eclipse Collections - ${project.version}</doctitle>\n                            <windowtitle>Eclipse Collections - ${project.version}</windowtitle>\n                            <show>public</show>\n                            <detectJavaApiLink>true</detectJavaApiLink>\n                            <links>\n                                <link>https://junit.org/junit4/javadoc/latest</link>\n                                <link>https://docs.oracle.com/en/java/javase/11/docs/api</link>\n                            </links>\n                            <destDir>${project.version}</destDir>\n                            <doclint>html,syntax,accessibility</doclint>\n                            <excludePackageNames>\n                                org.openjdk,org.eclipse.collections.impl.jmh,org.eclipse.collections.codegenerator.maven\n                            </excludePackageNames>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>aggregate</id>\n                                <inherited>false</inherited>\n                                <goals>\n                                    <goal>aggregate</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <!--endregion Phase 17: package-->\n\n        <!--region Phase 21: verify-->\n        <profile>\n            <id>maven-dependency-plugin</id>\n\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <plugin>\n                            <artifactId>maven-dependency-plugin</artifactId>\n                            <version>3.1.2</version>\n                            <configuration>\n                                <failOnWarning>true</failOnWarning>\n                                <ignoredUnusedDeclaredDependencies>\n                                    <ignoredUnusedDeclaredDependency>\n                                        com.google.code.findbugs:jsr305:jar\n                                    </ignoredUnusedDeclaredDependency>\n                                    <ignoredUnusedDeclaredDependency>\n                                        ch.qos.logback:logback-classic:jar\n                                    </ignoredUnusedDeclaredDependency>\n                                    <ignoredUnusedDeclaredDependency>\n                                        org.slf4j:slf4j-nop:jar\n                                    </ignoredUnusedDeclaredDependency>\n                                    <ignoredUnusedDeclaredDependency>\n                                        org.junit.jupiter:junit-jupiter-api:jar\n                                    </ignoredUnusedDeclaredDependency>\n                                </ignoredUnusedDeclaredDependencies>\n                            </configuration>\n                            <executions>\n                                <execution>\n                                    <id>analyze</id>\n                                    <goals>\n                                        <goal>analyze-only</goal>\n                                    </goals>\n                                </execution>\n                            </executions>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-dependency-plugin</artifactId>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <!--endregion Phase 21: verify-->\n\n    </profiles>\n\n</project>\n"
        },
        {
          "name": "scala-unit-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "serialization-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-coverage",
          "type": "tree",
          "content": null
        },
        {
          "name": "unit-tests-java8",
          "type": "tree",
          "content": null
        },
        {
          "name": "unit-tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}