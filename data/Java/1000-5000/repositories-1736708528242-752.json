{
  "metadata": {
    "timestamp": 1736708528242,
    "page": 752,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "unitycatalog/unitycatalog",
      "stars": 2575,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.654296875,
          "content": "etc/db/h2db.mv.db\netc/db/h2db.trace.db\ntarget/\n\n# Intellij IDEA files\n.idea/\n*.iml\n\n.bsp/\netc/logs/\napi/.openapi-generator\nbuild/sbt-launch-*\nvenv\nuc_docs_venv\n.venv\n.DS_Store\nserver_pid.txt\nsite\npython_engine.log\n.python-version\n.java-version\n\n# Signing keys and access tokens\netc/conf/certs.json\netc/conf/*.txt\netc/conf/*.der\nconnectors/spark/etc/conf/certs.json\nconnectors/spark/etc/conf/*.txt\nconnectors/spark/etc/conf/*.der\nintegration-tests/etc/conf/certs.json\nintegration-tests/etc/conf/*.txt\nintegration-tests/etc/conf/*.der\n\n# test\n.pytest_cache/\n\n# Byte-compiled files\n__pycache__\n*.pyc\n\n# Editor files\n*.vscode\n.metals/\n\n# packaging\ndist/\n*.egg-info/\nPipfile\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".markdownlint.yaml",
          "type": "blob",
          "size": 0.6767578125,
          "content": "---\n# Unordered list indentation\nMD007:\n  # Use 4 spaces for unordered list indentation for mkdocs displaying it correctly\n  indent: 4\n\n# Line length\n# Allow lines as long as necessary due to longer links included in the documentation\n# Still, the goal is to not exceed 120 characters\nMD013: false\n\n# Multiple headings with the same content\nMD024:\n  # Only check sibling headings\n  siblings_only: true\n\n# First line in a file should be a top-level heading\n# Ignoring to allow the logo being displayed at the top of the page\nMD041: false\n\n# Code block style\n# Ignoring as we use different styles for different purposes and at some points also mkdocs is requring different\n# styles\nMD046: false\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.36328125,
          "content": "fail_fast: true\n\nexclude: |\n  (?x)(\n      ^.venv/\n      ^venv/\n  )\n\nrepos:\n  # Markdown formatter\n  - repo: https://github.com/executablebooks/mdformat\n    rev: 0.7.18\n    hooks:\n      - id: mdformat\n        args: [ --number ]\n        exclude: \".github|api|CODE_OF_CONDUCT.md\"\n        require_serial: true\n        additional_dependencies:\n          - mdformat_frontmatter\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.259765625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement denny.lee@databricks.com.\n\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n\n\n## Linux Foundation Code of Conduct\nYour use is additionally subject to the [Linux Foundation Code of Conduct](https://lfprojects.org/policies/code-of-conduct/)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.23828125,
          "content": "We happily welcome contributions to Unity Catalog. We use [GitHub Issues](https://github.com/unitycatalog/unitycatalog/issues) to track community reported issues and [GitHub Pull Requests ](https://github.com/unitycatalog/unitycatalog/pulls) for accepting changes.\n\n# Governance\n\nUnity Catalog is an independent open-source project and is also a project of the [LF AI and Data Foundation](https://lfaidata.foundation/). The project under the Linux Foundation follows [open governance](https://github.com/opengovernance/opengovernance.dev), which means that there is no one company or individual in control of a project.\n\nUnity Catalog is built on OpenAPI spec and an open source server implementation under [Apache 2.0 license](https://github.com/unitycatalog/unitycatalog/blob/main/LICENSE). It is also compatible with Apache Hive's metastore API and Apache Iceberg's REST catalog API.\nThis is a community effort and is supported by Amazon Web Services (AWS), Microsoft Azure, Google Cloud, Nvidia, Salesforce, DuckDB, LangChain, dbt Labs, Fivetran, Confluent, Unstructured, Onehouse, Immuta, Informatica and many more.\n\nWe are excited to work with the open source communities in the many years to come to realize this vision. You can join the Unity Catalog open source community at unitycatalog.io and the [Unity Catalog Community Slack](https://go.unitycatalog.io/slack).\n\n# Communication\n\n- Before starting work on a major feature, please reach out to us via [GitHub](https://github.com/unitycatalog/unitycatalog/issues), [Slack](https://unitycatalog.slack.com/), etc. We will make sure no one else is already working on it and ask you to open a GitHub issue.\n- A \"major feature\" is defined as any change that is > 100 LOC altered (not including tests), or changes any user-facing behavior.\n- We will use the GitHub issue to discuss the feature and come to agreement.\n- This is to prevent your time being wasted, as well as ours.\n- The GitHub review process for major features is also important so that organizations with commit access can come to agreement on design.\n- If it is appropriate to write a design document, the document must be hosted either in the GitHub tracking issue, or linked to from the issue and hosted in a world-readable location.\n- Specifically, if the goal is to add a new extension, please read the extension policy.\n- Small patches and bug fixes don't need prior communication. If you have identified a bug and have ways to solve it, please create an [issue](https://github.com/unitycatalog/unitycatalog/issues) or create a [pull request](https://github.com/unitycatalog/unitycatalog/pulls).\n\n# Auto-Assigning Issues\nWe have implemented a feature that allows users to comment \"**take**\" on an issue to be auto-assigned the issue without having to depend on or wait for the maintainers to assign the issue before working on it.\n\n# Coding style\n\nWe generally follow the [Apache Spark Scala Style Guide](https://spark.apache.org/contributing.html).\n\n# Sign your work\n\nThe sign-off is a simple line at the end of the explanation for the patch. Your signature certifies that you wrote the patch or otherwise have the right to pass it on as an open-source patch.\n\n```\nSigned-off-by: Jane Smith <jane.smith@email.com>\nUse your real name (sorry, no pseudonyms or anonymous contributions.)\n```\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.3974609375,
          "content": "# syntax=docker.io/docker/dockerfile:1.7-labs\nARG HOME=\"/home/unitycatalog\"\nARG ALPINE_VERSION=\"3.20\"\n\n# Build stage, using Amazon Corretto jdk 17 on alpine with arm64 support\nFROM amazoncorretto:17-alpine${ALPINE_VERSION}-jdk as base\n\n# Dependencies are installed in $HOME/.cache by sbt\nARG HOME\nENV HOME=$HOME\n\nWORKDIR $HOME\n\nCOPY --parents build/ project/ examples/ server/ api/ clients/python/ version.sbt build.sbt ./\n\nRUN apk add --no-cache bash && ./build/sbt -info clean package\n\n# Small runtime image\nFROM alpine:${ALPINE_VERSION} as runtime\n\n# Specific JAVA_HOME from Amazon Corretto\nARG JAVA_HOME=\"/usr/lib/jvm/default-jvm\"\nARG USER=\"unitycatalog\"\nARG HOME\n\n# Copy Java from base\nCOPY --from=base $JAVA_HOME $JAVA_HOME\n\nENV HOME=$HOME \\\n    JAVA_HOME=$JAVA_HOME \\\n    PATH=\"${JAVA_HOME}/bin:${PATH}\"\n\n# Copy build artifacts from base stage\nCOPY --from=base --parents \\\n    $HOME/examples/ \\\n    $HOME/server/ \\\n    $HOME/api/ \\\n    $HOME/target/ \\\n    $HOME/.cache/ \\\n    /\n\n# Create a service user with read and execute permissions and write permissions of the ./etc directory\nRUN <<EOF\napk add --no-cache bash\naddgroup -S $USER\nadduser -S -G $USER $USER\nchmod -R 550 $HOME\nmkdir -p $HOME/etc/\nchmod -R 770 $HOME/etc/\nchown -R $USER:$USER $HOME\nEOF\n\nUSER $USER\n\n# Copy remaining directories here for caching optimization\nCOPY --chown=$USER:$USER --parents bin/ etc/ $HOME/\n\nWORKDIR $HOME\n\nCMD [\"./bin/start-uc-server\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 7.1240234375,
          "content": "Copyright (2024) Databricks, Inc.\n\nThis Software includes software developed at Databricks (https://www.databricks.com/) and its use is subject to the included LICENSE file.\n—--\n\nThis Software contains code from the following open source projects, licensed under the Apache 2.0 license:\n\naws/aws-sdk-java - https://github.com/aws/aws-sdk-java/tree/master\nCopyright 2010-2014 Amazon.com, Inc. or its affiliates. All Rights Reserved.\nLicense - https://github.com/aws/aws-sdk-java/blob/master/LICENSE.txt\nNotice - https://github.com/aws/aws-sdk-java/blob/master/NOTICE.txt\n\ndatabricks/databricks-sdk-java - https://github.com/databricks/databricks-sdk-java\nCopyright (2023) Databricks, Inc.\nLicense - https://github.com/databricks/databricks-sdk-java/blob/main/LICENSE\nNotice - https://github.com/databricks/databricks-sdk-java/blob/main/NOTICE\n\nFasterXML/jackson-annotations - https://github.com/FasterXML/jackson-annotations\nCopyright jackson-annotations authors\nLicense - https://github.com/FasterXML/jackson-annotations/blob/2.18/LICENSE\n\nFasterXML/jackson -core - https://github.com/FasterXML/jackson-core\nCopyright jackson-core authors\nLicense - https://github.com/FasterXML/jackson-core/blob/2.18/LICENSE\n\nFasterXML/jackson-databind - https://github.com/FasterXML/jackson-databind\nCopyright jackson-databind authors\nLicense - https://github.com/FasterXML/jackson-databind/blob/2.18/LICENSE\n\nFasterXML/jackson-datatype-jsr310 - https://github.com/FasterXML/jackson-modules-java8\nCopyright /jackson-datatype-jsr310 authors\nLicense - https://github.com/FasterXML/jackson-modules-java8/blob/2.18/LICENSE\n\ngoogle/guava - https://github.com/google/guava\nCopyright guava authors\nLicense - https://github.com/google/guava/blob/master/LICENSE\n\nline/armeria - https://github.com/line/armeria\nCopyright 2015 LINE Corporation\nLicense - https://github.com/line/armeria/blob/main/LICENSE.txt\nNotice - https://github.com/line/armeria/blob/main/NOTICE.txt\napache/commons-cli - https://github.com/apache/commons-cli\nCopyright 2002-2024 The Apache Software Foundation\nLicense - https://github.com/apache/commons-cli/blob/master/LICENSE.txt\nNotice - https://github.com/apache/commons-cli/blob/master/NOTICE.txt\n\nvdmeer /asciitable - https://github.com/vdmeer/asciitable\nCopyright asciitable authors\nLicense - https://github.com/vdmeer/asciitable/blob/master/LICENSE\n\ndelta-io/delta - https://github.com/delta-io/delta\nCopyright (2021) The Delta Lake Project Authors.\nLicense - https://github.com/delta-io/delta/blob/master/LICENSE.txt\nNotice - https://github.com/delta-io/delta/blob/master/NOTICE.txt\n\nsbt/sbt-jupiter-interface - https://github.com/sbt/sbt-jupiter-interface/tree/main\nCopyright sbt-jupiter-interface authors\nLicense - https://github.com/sbt/sbt-jupiter-interface/blob/main/LICENSE\n\nraphw/byte-buddy - https://github.com/raphw/byte-buddy\nCopyright byte-buddy authors\nLicense - https://github.com/raphw/byte-buddy/blob/master/LICENSE\nNotice - https://github.com/raphw/byte-buddy/blob/master/NOTICE\n\napache/hadoop - https://github.com/apache/hadoop/tree/trunk\nCopyright 2006 and onwards The Apache Software Foundation.\nLicense - https://github.com/apache/hadoop/blob/trunk/LICENSE.txt\nNotice - https://github.com/apache/hadoop/blob/trunk/NOTICE.txt\n\napache/httpcomponents-client - https://github.com/apache/httpcomponents-client\nCopyright 1999-2023 The Apache Software Foundation\nLicense - https://github.com/apache/httpcomponents-client/blob/master/LICENSE.txt\nNotice - https://github.com/apache/httpcomponents-client/blob/master/NOTICE.txt\n\napache/httpcomponents-core - https://github.com/apache/httpcomponents-core\nCopyright 2005-2024 The Apache Software Foundation\nLicense - https://github.com/apache/httpcomponents-core/blob/master/LICENSE.txt\nNotice - https://github.com/apache/httpcomponents-core/blob/master/NOTICE.txt\n\nOpenAPITools/jackson-databind-nullable - https://github.com/OpenAPITools/jackson-databind-nullable\nCopyright jackson-databind-nullable authors\nLicense - https://github.com/OpenAPITools/jackson-databind-nullable/blob/master/LICENSE\n\nsnakeyaml/snakeyaml - https://github.com/snakeyaml/snakeyaml\nCopyright snakeyaml authors\nLicense - https://github.com/snakeyaml/snakeyaml/blob/master/LICENSE.txt\n—--\n\nThis Software contains code from the following open source projects, licensed under the MIT license:\n\nprojecktlombok/lombok - https://github.com/projectlombok/lombok\nCopyright (C) 2009-2021 The Project Lombok Authors.\nLicense - https://github.com/projectlombok/lombok/blob/master/LICENSE\n\nqos-ch/sl4j/sl4j-api - https://github.com/qos-ch/slf4j/tree/master/slf4j-api\nCopyright (c) 2004-2023 QOS.ch All rights reserved.\nLicense - https://github.com/qos-ch/slf4j/blob/master/slf4j-api/LICENSE.txt\n\nqos-ch/sl4j/sl4j-jdk - https://github.com/qos-ch/slf4j/tree/master/slf4j-jdk\nCopyright (c) 2004-2023 QOS.ch All rights reserved.\nLicense - https://github.com/qos-ch/slf4j/blob/master/slf4j-jdk14/LICENSE.txt\n—--\n\nThis Software contains code from the following open source projects, licensed under the BSD 2 Clause license:\n\nsbt/junit-interface - https://github.com/sbt/junit-interface\nCopyright (c) 2009-2012, Stefan Zeiger All rights reserved.\nLicense - https://github.com/sbt/junit-interface/blob/develop/LICENSE.txt\n—--\n\nThis Software contains code from the following open source projects, licensed under the BSD 3 Clause license:\n\nfindbugsproject/findbugs - https://github.com/findbugsproject/findbugs/tree/master\nCopyright findbugs-jsr305 authors\nLicense - https://github.com/findbugsproject/findbugs/blob/master/findbugs/licenses/LICENSE-jsr305.txt\n—--\n\nThis Software contains code from the following open source projects, licensed under the Eclipse Public license:\n\nH2database/h2database - https://github.com/h2database/h2database\nCopyright h2database authors\nLicense - https://github.com/h2database/h2database/blob/master/LICENSE.txt\n\njunit-team/junit5 - https://github.com/junit-team/junit5\nCopyright junit5 authors\nLicense - https://github.com/junit-team/junit5/blob/main/LICENSE.md\n\njakartaee/common-annotations-api - https://github.com/jakartaee/common-annotations-api\nCopyright Jakarta Annotations authors\nLicense - https://github.com/jakartaee/common-annotations-api/blob/master/LICENSE.md\nNotice - https://github.com/jakartaee/common-annotations-api/blob/master/NOTICE.md\n—--\n\nThis Software contains code from the following open source projects, licensed under the Common Development and Distribution license:\n\njavaee/javax.annotations - https://github.com/javaee/javax.annotation\nCopyright javax.annotations authors\nLicense -https://github.com/javaee/javax.annotation/blob/master/LICENSE\n—--\n\nThis Software contains code from the following open source projects, licensed under the BSD 3 Clause license:\n\njakartaee/jaf-api - https://github.com/jakartaee/jaf-api\nCopyright (c) 2018 Oracle and/or its affiliates. All rights reserved. \nLicense - https://github.com/jakartaee/jaf-api/blob/master/LICENSE.md\n—--\n\nThis Software contains code from the following open source projects, licensed under the GNU Lesser General Public license:\n\nhibernate-orm/hibernate-core - https://github.com/hibernate/hibernate-orm/tree/main/hibernate-core\nCopyright hibernate-core authors\nLIcense - https://github.com/hibernate/hibernate-orm/blob/main/lgpl.txt\n\n\n\n\n\n\n\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.279296875,
          "content": "<img src=\"./docs/assets/images/uc-logo.png\" width=\"600px\" />\n\n# Unity Catalog: Open, Multimodal Catalog for Data & AI\n\nUnity Catalog is the industry’s only universal catalog for data and AI.\n\n- **Multimodal interface supports any format, engine, and asset**\n  - Multi-format support: It is extensible and supports Delta Lake, Apache Iceberg and Apache Hudi via UniForm, Apache Parquet, JSON, CSV, and many others.\n  - Multi-engine support: With its open APIs, data cataloged in Unity can be read by many leading compute engines.\n  - Multimodal: It supports all your data and AI assets, including tables, files, functions, AI models.\n- **Open source API and implementation** - OpenAPI spec and OSS implementation (Apache 2.0 license). It is also compatible with Apache Hive's metastore API and Apache Iceberg's REST catalog API. Unity Catalog is currently a sandbox project with LF AI and Data Foundation (part of the Linux Foundation).\n- **Unified governance** for data and AI - Govern and secure tabular data, unstructured assets, and AI assets with a single interface.\n\nThe first release of Unity Catalog focuses on a core set of APIs for tables, unstructured data, and AI assets - with more to come soon on governance, access, and client interoperability. This is just the beginning!\n\n![UC Hero Image](./docs/assets/images/uc.png)\n\n### Vibrant ecosystem\n\nThis is a community effort. Unity Catalog is supported by\n\n- [Amazon Web Services](https://aws.amazon.com/)\n- [Confluent](https://www.confluent.io/)\n- [Daft (Eventual)](https://github.com/Eventual-Inc/Daft)\n- [dbt Labs](https://www.getdbt.com/)\n- [DuckDB](https://duckdblabs.com/)\n- [Fivetran](https://www.fivetran.com/)\n- [Google Cloud](https://cloud.google.com/)\n- [Granica](https://granica.ai/)\n- [Immuta](https://www.immuta.com/)\n- [Informatica](https://www.informatica.com/)\n- [LanceDB](https://lancedb.com/)\n- [LangChain](https://www.langchain.com/)\n- [LlamaIndex](https://www.llamaindex.ai/)\n- [Microsoft Azure](https://azure.microsoft.com)\n- [NVIDIA](https://www.nvidia.com/)\n- [Onehouse](https://www.onehouse.ai/)\n- [PuppyGraph](https://www.puppygraph.com/)\n- [Salesforce](https://www.salesforce.com/)\n- [StarRocks (CelerData)](https://celerdata.com/)\n- [Spice AI](https://github.com/spiceai/spiceai)\n- [Tecton](https://www.tecton.ai/)\n- [Unstructured](https://unstructured.io/)\n\nUnity Catalog is proud to be hosted by the LF AI & Data Foundation.\n\n<a href=\"https://lfaidata.foundation/projects\">\n  <img src=\"./docs/assets/images/lfaidata-project-badge-sandbox-color.png\" width=\"200px\" />\n</a>\n\n## Quickstart - Hello UC!\n\nLet's take Unity Catalog for spin. In this guide, we are going to do the following:\n\n- In one terminal, run the UC server.\n- In another terminal, we will explore the contents of the UC server using a CLI.\n  An example project is provided to demonstrate how to use the UC SDK for various assets\n  as well as provide a convenient way to explore the content of any UC server implementation.\n\n> If you prefer to run Unity Catalog in Docker use `docker\n> compose up`. See the [Docker Compose docs](./docs/docker_compose.md) for more details.\n\n### Prerequisites\n\nYou have to ensure that your local environment has the following:\n\n- Clone this repository.\n- Ensure the `JAVA_HOME` environment variable your terminal is configured to point to JDK17.\n- Compile the project using `build/sbt package`\n\n\n### Run the UC Server\n\nIn a terminal, in the cloned repository root directory, start the UC server.\n\n```sh\nbin/start-uc-server\n```\n\nFor the remaining steps, continue in a different terminal.\n\n### Operate on Delta tables with the CLI\n\nLet's list the tables.\n\n```sh\nbin/uc table list --catalog unity --schema default\n```\n\nYou should see a few tables. Some details are truncated because of the nested nature of the data.\nTo see all the content, you can add `--output jsonPretty` to any command.\n\nNext, let's get the metadata of one of those tables.\n\n```sh\nbin/uc table get --full_name unity.default.numbers\n```\n\nYou can see that it is a Delta table. Now, specifically for Delta tables, this CLI can\nprint a snippet of the contents of a Delta table (powered by the [Delta Kernel Java](https://delta.io/blog/delta-kernel/) project).\nLet's try that.\n\n```sh\nbin/uc table read --full_name unity.default.numbers\n```\n\n### Operate on Delta tables with DuckDB\n\nFor operating on tables with DuckDB, you will have to [install it](https://duckdb.org/docs/installation/) (version 1.0).\nLet's start DuckDB and install a couple of extensions. To start DuckDB, run the command `duckdb` in the terminal.\nThen, in the DuckDB shell, run the following commands:\n\n```sql\ninstall uc_catalog from core_nightly;\nload uc_catalog;\ninstall delta;\nload delta;\n```\n\nIf you have installed these extensions before, you may have to run `update extensions` and restart DuckDB\nfor the following steps to work.\n\nNow that we have DuckDB all set up, let's try connecting to UC by specifying a secret.\n\n```sql\nCREATE SECRET (\n      TYPE UC,\n      TOKEN 'not-used',\n      ENDPOINT 'http://127.0.0.1:8080',\n      AWS_REGION 'us-east-2'\n );\n```\n\nYou should see it print a short table saying `Success` = `true`. Then we attach the `unity` catalog to DuckDB.\n\n```sql\nATTACH 'unity' AS unity (TYPE UC_CATALOG);\n```\n\nNow we are ready to query. Try the following:\n\n```sql\nSHOW ALL TABLES;\nSELECT * from unity.default.numbers;\n```\n\nYou should see the tables listed and the contents of the `numbers` table printed.\nTo quit DuckDB, press `Ctrl`+`D` (if your platform supports it), press `Ctrl`+`C`, or use the `.exit` command in the DuckDB shell.\n\n### Interact with the Unity Catalog UI\n\n![UC UI](./docs/assets/images/uc-ui.png)\n\nTo use the Unity Catalog UI, start a new terminal and ensure you have already started the UC server (e.g., `./bin/start-uc-server`)\n\n**Prerequisites**\n* Node: https://nodejs.org/en/download/package-manager\n* Yarn: https://classic.yarnpkg.com/lang/en/docs/install\n\n**How to start the UI through yarn**\n```\ncd /ui\nyarn install\nyarn start\n```\n\n\n## CLI tutorial\n\nYou can interact with a Unity Catalog server to create and manage catalogs, schemas and tables,\noperate on volumes and functions from the CLI, and much more.\nSee the [cli usage](docs/usage/cli.md) for more details.\n\n## APIs and Compatibility\n\n- Open API specification: See the [Unity Catalog Rest API](https://docs.unitycatalog.io/swagger-docs/).\n- Compatibility and stability: The APIs are currently evolving and should not be assumed to be stable.\n\n## Building Unity Catalog\n\nUnity Catalog can be built using [sbt](https://www.scala-sbt.org/).\n\nTo build UC (incl. [Spark Integration](./connectors/spark) module), run the following command:\n\n```sh\nbuild/sbt clean package publishLocal spark/publishLocal\n```\n\nRefer to [sbt docs](https://www.scala-sbt.org/1.x/docs/) for more commands.\n\n## Deployment\n\n- To create a tarball that can be used to deploy the UC server or run the CLI, run the following:\n  ```sh\n  build/sbt createTarball\n  ```\n  This will create a tarball in the `target` directory. See the full [deployment guide](docs/deployment.md) for more details.\n\n## Compiling and testing\n\n- Install JDK 17 by whatever mechanism is appropriate for your system, and\n  set that version to be the default Java version (e.g. via the env variable `JAVA_HOME`)\n- To compile all the code without running tests, run the following:\n  ```sh\n  build/sbt clean compile\n  ```\n- To compile and execute tests, run the following:\n  ```sh\n  build/sbt -J-Xmx2G clean test\n  ```\n- To execute tests with coverage, run the following:\n  ```sh\n  build/sbt -J-Xmx2G jacoco\n  ```\n- To update the API specification, just update the `api/all.yaml` and then run the following:\n  ```sh\n  build/sbt generate\n  ```\n  This will regenerate the OpenAPI data models in the UC server and data models + APIs in the client SDK.\n- To format the code, run the following:\n  ```sh\n  build/sbt javafmtAll\n  ```\n\n## Setting up IDE\n\nIntelliJ is the recommended IDE to use when developing Unity Catalog. The below steps outline how to add the project to IntelliJ:\n\n1. Clone Unity Catalog into a local folder, such as `~/unitycatalog`.\n2. Select `File` > `New Project` > `Project from Existing Sources...` and select `~/unitycatalog`.\n3. Under `Import project from external model` select `sbt`. Click `Next`.\n4. Click `Finish`.\n\nJava code adheres to the [Google style](https://google.github.io/styleguide/javaguide.html), which is verified via `build/sbt javafmtCheckAll` during builds.\nIn order to automatically fix Java code style issues, please use `build/sbt javafmtAll`.\n\n### Configuring Code Formatter for Eclipse/IntelliJ\n\nFollow the instructions for [Eclipse](https://github.com/google/google-java-format#eclipse) or\n[IntelliJ](https://github.com/google/google-java-format#intellij-android-studio-and-other-jetbrains-ides) to install the **google-java-format** plugin (note the required manual actions for IntelliJ).\n\n### Using more recent JDKs\n\nThe build script [checks for a lower bound on the JDK](./build.sbt#L14) but the [current SBT version](./project/build.properties)\nimposes an upper bound. Please check the [JDK compatibility](https://docs.scala-lang.org/overviews/jdk-compatibility/overview.html) documentation for more information\n\n### Serving the documentation with mkdocs\n\nFor an overview of how to contribute to the documentation, please see our introduction [here](./docs/README.md).\nFor the official documentation, please take a look at [https://docs.unitycatalog.io/](https://docs.unitycatalog.io/).\n"
        },
        {
          "name": "ai",
          "type": "tree",
          "content": null
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.sbt",
          "type": "blob",
          "size": 28.2705078125,
          "content": "import java.nio.file.Files\nimport java.io.File\nimport Tarball.createTarballSettings\nimport sbt.{Attributed, util}\nimport sbt.Keys.*\nimport sbtlicensereport.license.{DepModuleInfo, LicenseCategory, LicenseInfo}\nimport ReleaseSettings.*\n\nimport scala.language.implicitConversions\n\nval orgName = \"io.unitycatalog\"\nval artifactNamePrefix = \"unitycatalog\"\n\n// Use Java 11 for two modules: clients and spark\n// for better Spark compatibility\n// until Spark 4 comes out with newer Java compatibility\nlazy val javacRelease11 = Seq(\"--release\", \"11\")\nlazy val javacRelease17 = Seq(\"--release\", \"17\")\n\nlazy val scala212 = \"2.12.15\"\nlazy val scala213 = \"2.13.14\"\n\nlazy val deltaVersion = \"3.2.1\"\nlazy val sparkVersion = \"3.5.3\"\n\nlazy val commonSettings = Seq(\n  organization := orgName,\n  // Compilation configs\n  initialize := {\n    // Assert that the JVM is at least Java 17\n    val _ = initialize.value  // ensure previous initializations are run\n    assert(\n      sys.props(\"java.specification.version\").toDouble >= 17,\n      \"Java 17 or above is required to run this project.\")\n  },\n  Compile / compile / javacOptions ++= Seq(\n    \"-Xlint:deprecation\",\n    \"-Xlint:unchecked\",\n    \"-g:source,lines,vars\",\n  ),\n  Test / javaOptions ++= Seq (\n    \"-ea\",\n  ),\n  libraryDependencies ++= Seq(\n    \"org.slf4j\" % \"slf4j-api\" % \"2.0.13\",\n    \"org.slf4j\" % \"slf4j-log4j12\" % \"2.0.13\" % Test,\n    \"org.apache.logging.log4j\" % \"log4j-slf4j2-impl\" % \"2.23.1\",\n    \"org.apache.logging.log4j\" % \"log4j-api\" % \"2.23.1\"\n  ),\n  excludeDependencies ++= Seq(\n    ExclusionRule(\"org.slf4j\", \"slf4j-reload4j\")\n  ),\n  resolvers += Resolver.mavenLocal,\n  autoScalaLibrary := false,\n  crossPaths := false,  // No scala cross building\n  assembly / assemblyMergeStrategy := {\n    case PathList(\"META-INF\", xs @ _*) => MergeStrategy.discard\n    case _ => MergeStrategy.first\n  },\n\n  // Test configs\n  Test / testOptions  := Seq(Tests.Argument(TestFrameworks.JUnit, \"-a\", \"-v\", \"-q\"), Tests.Filter(name => !(name startsWith s\"$orgName.server.base\"))),\n  Test / logLevel := util.Level.Info,\n  Test / publishArtifact := false,\n  fork := true,\n  outputStrategy := Some(StdoutOutput),\n\n  Compile / packageBin := {\n    val packageFile = (Compile / packageBin).value\n    generateClasspathFile(\n      targetDir = packageFile.getParentFile,\n      // Also include the jar being built (packageFile) in the classpath\n      // This is specifically required by the server project since the server and control models are provided dependencies\n      classpath = (Runtime / dependencyClasspath).value :+ Attributed.blank(packageFile)\n    )\n    packageFile\n  },\n\n  licenseConfigurations := Set(\"compile\"),\n  licenseOverrides := {\n    case DepModuleInfo(\"io.unitycatalog\", _, _) =>\n      LicenseInfo(LicenseCategory.Apache, \"Apache 2.0\", \"http://www.apache.org/licenses\")\n    case DepModuleInfo(\"org.hibernate.common\", \"hibernate-commons-annotations\", _) =>\n      // Apache 2.0: https://mvnrepository.com/artifact/org.hibernate.common/hibernate-commons-annotations\n      LicenseInfo(LicenseCategory.Apache, \"Apache 2.0\", \"http://www.apache.org/licenses\")\n  },\n  licenseDepExclusions := {\n    // LGPL 2.1: https://www.gnu.org/licenses/old-licenses/lgpl-2.1.html\n    // https://en.wikipedia.org/wiki/GNU_Lesser_General_Public_License\n    // We can use and distribute the, but not modify the source code\n    case DepModuleInfo(\"org.hibernate.orm\", _, _) => true\n    case DepModuleInfo(\"com.unboundid.scim2\", _, _) => true\n    case DepModuleInfo(\"com.unboundid.product.scim2\", _, _) => true\n    case DepModuleInfo(\"com.googlecode.aviator\", _, _) => true\n    // Duo license:\n    //  - Eclipse Public License 2.0\n    //  - GNU General Public License, version 2 with the GNU Classpath Exception\n    // I think we're good with the classpath exception in there.\n    case DepModuleInfo(\"jakarta.transaction\", \"jakarta.transaction-api\", _) => true\n    case DepModuleInfo(\"javax.annotation\", \"javax.annotation-api\", _) => true\n  },\n  \n  assembly / test := {}\n)\n\nenablePlugins(CoursierPlugin)\n\nuseCoursier := true\n\n// Configure resolvers\nresolvers ++= Seq(\n  \"Sonatype OSS Releases\" at \"https://oss.sonatype.org/content/repositories/releases/\",\n  \"Maven Central\" at \"https://repo1.maven.org/maven2/\",\n)\n\ndef javaCheckstyleSettings(configLocation: File) = Seq(\n  checkstyleConfigLocation := CheckstyleConfigLocation.File(configLocation.toString),\n  checkstyleSeverityLevel := Some(CheckstyleSeverityLevel.Error),\n  // (Compile / compile) := ((Compile / compile) dependsOn (Compile / checkstyle)).value,\n  // (Test / test) := ((Test / test) dependsOn (Test / checkstyle)).value,\n)\n\n// enforce java code style\ndef javafmtCheckSettings() = Seq(\n  (Compile / compile) := ((Compile / compile) dependsOn (Compile / javafmtAll)).value\n)\n\nlazy val controlApi = (project in file(\"target/control/java\"))\n  .enablePlugins(OpenApiGeneratorPlugin)\n  .disablePlugins(JavaFormatterPlugin)\n  .settings(\n    name := s\"$artifactNamePrefix-controlapi\",\n    commonSettings,\n    skipReleaseSettings,\n    libraryDependencies ++= Seq(\n      \"jakarta.annotation\" % \"jakarta.annotation-api\" % \"3.0.0\" % Provided,\n      \"com.fasterxml.jackson.core\" % \"jackson-annotations\" % jacksonVersion,\n      \"com.fasterxml.jackson.core\" % \"jackson-databind\" % jacksonVersion,\n      \"com.fasterxml.jackson.datatype\" % \"jackson-datatype-jsr310\" % jacksonVersion,\n    ),\n    (Compile / compile) := ((Compile / compile) dependsOn generate).value,\n\n    // OpenAPI generation specs\n    openApiInputSpec := (file(\".\") / \"api\" / \"control.yaml\").toString,\n    openApiGeneratorName := \"java\",\n    openApiOutputDir := (file(\"target\") / \"control\" / \"java\").toString,\n    openApiApiPackage := s\"$orgName.control.api\",\n    openApiModelPackage := s\"$orgName.control.model\",\n    openApiAdditionalProperties := Map(\n      \"library\" -> \"native\",\n      \"useJakartaEe\" -> \"true\",\n      \"hideGenerationTimestamp\" -> \"true\",\n      \"openApiNullable\" -> \"false\"),\n    openApiGenerateApiTests := SettingDisabled,\n    openApiGenerateModelTests := SettingDisabled,\n    openApiGenerateApiDocumentation := SettingDisabled,\n    openApiGenerateModelDocumentation := SettingDisabled,\n    // Define the simple generate command to generate full client codes\n    generate := {\n      val _ = openApiGenerate.value\n\n      // Delete the generated build.sbt file so that it is not used for our sbt config\n      val buildSbtFile = file(openApiOutputDir.value) / \"build.sbt\"\n      if (buildSbtFile.exists()) {\n        buildSbtFile.delete()\n      }\n    }\n  )\n\nlazy val client = (project in file(\"target/clients/java\"))\n  .enablePlugins(OpenApiGeneratorPlugin)\n  .disablePlugins(JavaFormatterPlugin)\n  .settings(\n    name := s\"$artifactNamePrefix-client\",\n    commonSettings,\n    javaOnlyReleaseSettings,\n    Compile / compile / javacOptions ++= javacRelease11,\n    libraryDependencies ++= Seq(\n      \"com.fasterxml.jackson.core\" % \"jackson-annotations\" % jacksonVersion,\n      \"com.fasterxml.jackson.core\" % \"jackson-core\" % jacksonVersion,\n      \"com.fasterxml.jackson.core\" % \"jackson-databind\" % jacksonVersion,\n      \"com.fasterxml.jackson.datatype\" % \"jackson-datatype-jsr310\" % jacksonVersion,\n      \"org.openapitools\" % \"jackson-databind-nullable\" % openApiToolsJacksonBindNullableVersion,\n      \"com.google.code.findbugs\" % \"jsr305\" % \"3.0.2\",\n      \"jakarta.annotation\" % \"jakarta.annotation-api\" % \"3.0.0\" % Provided,\n\n      // Test dependencies\n      \"org.junit.jupiter\" % \"junit-jupiter\" % \"5.10.3\" % Test,\n      \"net.aichler\" % \"jupiter-interface\" % JupiterKeys.jupiterVersion.value % Test,\n      \"org.assertj\" % \"assertj-core\" % \"3.26.3\" % Test,\n    ),\n    (Compile / compile) := ((Compile / compile) dependsOn generate).value,\n\n    // OpenAPI generation specs\n    openApiInputSpec := (file(\".\") / \"api\" / \"all.yaml\").toString,\n    openApiGeneratorName := \"java\",\n    openApiOutputDir := (file(\"target\") / \"clients\" / \"java\").toString,\n    openApiApiPackage := s\"$orgName.client.api\",\n    openApiModelPackage := s\"$orgName.client.model\",\n    openApiAdditionalProperties := Map(\n      \"library\" -> \"native\",\n      \"useJakartaEe\" -> \"true\",\n      \"hideGenerationTimestamp\" -> \"true\",\n      \"openApiNullable\" -> \"false\"),\n    openApiGenerateApiTests := SettingDisabled,\n    openApiGenerateModelTests := SettingDisabled,\n    openApiGenerateApiDocumentation := SettingDisabled,\n    openApiGenerateModelDocumentation := SettingDisabled,\n    // Define the simple generate command to generate full client codes\n    generate := {\n      val _ = openApiGenerate.value\n\n      // Delete the generated build.sbt file so that it is not used for our sbt config\n      val buildSbtFile = file(openApiOutputDir.value) / \"build.sbt\"\n      if (buildSbtFile.exists()) {\n        buildSbtFile.delete()\n      }\n    },\n    // Add VersionInfo in the same way like in server\n    Compile / sourceGenerators += Def.task {\n      val file = (Compile / sourceManaged).value / \"io\" / \"unitycatalog\" / \"cli\" / \"utils\" / \"VersionUtils.java\"\n      IO.write(file,\n        s\"\"\"package io.unitycatalog.cli.utils;\n          |\n          |public class VersionUtils {\n          |  public static String VERSION = \"${version.value}\";\n          |}\n          |\"\"\".stripMargin)\n      Seq(file)\n    }\n  )\n\nlazy val prepareGeneration = taskKey[Unit](\"Prepare the environment for OpenAPI code generation\")\n\nlazy val pythonClient = (project in file(\"clients/python\"))\n  .enablePlugins(OpenApiGeneratorPlugin)\n  .settings(\n    name := s\"$artifactNamePrefix-python-client\",\n    commonSettings,\n    skipReleaseSettings,\n    Compile / compile := (Compile / compile).dependsOn(generate).value,\n    openApiInputSpec := (baseDirectory.value.getParentFile.getParentFile / \"api\" / \"all.yaml\").getAbsolutePath,\n    openApiGeneratorName := \"python\",\n    openApiOutputDir := (baseDirectory.value / \"target\").getAbsolutePath,\n    openApiPackageName := s\"$artifactNamePrefix.client\",\n    openApiAdditionalProperties := Map(\n      \"packageVersion\" -> s\"${version.value.replace(\"-SNAPSHOT\", \".dev0\")}\",\n      \"library\"        -> \"asyncio\"\n    ),\n    openApiGenerateApiTests := SettingDisabled,\n    openApiGenerateModelTests := SettingDisabled,\n    openApiGenerateApiDocumentation := SettingDisabled,\n    openApiGenerateModelDocumentation := SettingDisabled,\n\n    prepareGeneration := PythonClientPostBuild.prepareGeneration(streams.value.log, baseDirectory.value, openApiOutputDir.value),\n\n    generate := Def.sequential(\n      prepareGeneration,\n      openApiGenerate,\n      Def.task {\n        val log = streams.value.log\n\n        PythonClientPostBuild.processGeneratedFiles(\n          log,\n          openApiOutputDir.value,\n          baseDirectory.value,\n        )\n        log.info(\"OpenAPI Python client generation completed.\")\n      }\n    ).value\n  )\n\nlazy val apiDocs = (project in file(\"api\"))\n  .enablePlugins(OpenApiGeneratorPlugin)\n  .settings(\n    name := s\"$artifactNamePrefix-docs\",\n    skipReleaseSettings,\n    // OpenAPI generation specs\n    openApiInputSpec := (file(\"api\") / \"all.yaml\").toString,\n    openApiGeneratorName := \"markdown\",\n    openApiOutputDir := (file(\"api\")).toString,\n    // Define the simple generate command to generate markdown docs\n    generate := {\n      val _ = openApiGenerate.value\n    }\n  )\n\n// Define the custom task key\nlazy val populateTestDB = taskKey[Unit](\"Run PopulateTestDatabase main class from the test folder\")\n\nlazy val server = (project in file(\"server\"))\n  .dependsOn(client % \"test->test\")\n  // Server and control models are added as provided to avoid them being added as maven dependencies\n  // This is because the server and control models are included in the server jar\n  .dependsOn(serverModels % \"provided\", controlModels % \"provided\")\n  .settings (\n    name := s\"$artifactNamePrefix-server\",\n    mainClass := Some(orgName + \".server.UnityCatalogServer\"),\n    commonSettings,\n    javaOnlyReleaseSettings,\n    javafmtCheckSettings,\n    javaCheckstyleSettings(file(\"dev\") / \"checkstyle-config.xml\"),\n    Compile / compile / javacOptions ++= Seq(\n      \"-processor\",\n      \"lombok.launch.AnnotationProcessorHider$AnnotationProcessor\"\n    ) ++ javacRelease17,\n    libraryDependencies ++= Seq(\n      \"com.linecorp.armeria\" %  \"armeria\" % \"1.28.4\",\n      // Netty dependencies\n      \"io.netty\" % \"netty-all\" % \"4.1.111.Final\",\n      \"jakarta.annotation\" % \"jakarta.annotation-api\" % \"3.0.0\" % Provided,\n      // Jackson dependencies\n      \"com.fasterxml.jackson.core\" % \"jackson-annotations\" % jacksonVersion,\n      \"com.fasterxml.jackson.core\" % \"jackson-core\" % jacksonVersion,\n      \"com.fasterxml.jackson.core\" % \"jackson-databind\" % jacksonVersion,\n      \"com.fasterxml.jackson.dataformat\" % \"jackson-dataformat-yaml\" % jacksonVersion,\n      \"com.fasterxml.jackson.datatype\" % \"jackson-datatype-jsr310\" % jacksonVersion,\n\n      \"com.google.code.findbugs\" % \"jsr305\" % \"3.0.2\",\n      \"com.h2database\" %  \"h2\" % \"2.2.224\",\n\n      \"org.hibernate.orm\" % \"hibernate-core\" % \"6.5.0.Final\",\n\n      \"jakarta.activation\" % \"jakarta.activation-api\" % \"2.1.3\",\n      \"net.bytebuddy\" % \"byte-buddy\" % \"1.14.15\",\n      \"org.projectlombok\" % \"lombok\" % \"1.18.32\" % Provided,\n\n      // For ALDS access\n      \"com.azure\" % \"azure-identity\" % \"1.13.2\",\n      \"com.azure\" % \"azure-storage-file-datalake\" % \"12.20.0\",\n\n      // For GCS Access\n      \"com.google.cloud\" % \"google-cloud-storage\" % \"2.30.1\",\n      \"com.google.auth\" % \"google-auth-library-oauth2-http\" % \"1.20.0\",\n\n      //For s3 access\n      \"com.amazonaws\" % \"aws-java-sdk-s3\" % \"1.12.728\",\n      \"software.amazon.awssdk\" % \"sso\" % \"2.27.12\",\n      \"software.amazon.awssdk\" % \"ssooidc\" % \"2.27.12\",\n\n      \"org.apache.httpcomponents\" % \"httpcore\" % \"4.4.16\",\n      \"org.apache.httpcomponents\" % \"httpclient\" % \"4.5.14\",\n\n      // Iceberg REST Catalog dependencies\n      \"org.apache.iceberg\" % \"iceberg-core\" % \"1.5.2\",\n      \"org.apache.iceberg\" % \"iceberg-aws\" % \"1.5.2\",\n      \"org.apache.iceberg\" % \"iceberg-azure\" % \"1.5.2\",\n      \"org.apache.iceberg\" % \"iceberg-gcp\" % \"1.5.2\",\n      \"software.amazon.awssdk\" % \"s3\" % \"2.24.0\",\n      \"software.amazon.awssdk\" % \"sts\" % \"2.24.0\",\n      \"io.vertx\" % \"vertx-core\" % \"4.3.5\",\n      \"io.vertx\" % \"vertx-web\" % \"4.3.5\",\n      \"io.vertx\" % \"vertx-web-client\" % \"4.3.5\",\n\n      // Auth dependencies\n      \"com.unboundid.product.scim2\" % \"scim2-sdk-common\" % \"3.1.0\",\n      \"org.casbin\" % \"jcasbin\" % \"1.55.0\",\n      \"org.casbin\" % \"jdbc-adapter\" % \"2.7.0\"\n        exclude(\"com.microsoft.sqlserver\", \"mssql-jdbc\")\n        exclude(\"com.oracle.database.jdbc\", \"ojdbc6\"),\n      \"org.springframework\" % \"spring-expression\" % \"6.1.11\",\n      \"com.auth0\" % \"java-jwt\" % \"4.4.0\",\n      \"com.auth0\" % \"jwks-rsa\" % \"0.22.1\",\n\n      // Test dependencies\n      \"org.junit.jupiter\" %  \"junit-jupiter\" % \"5.10.3\" % Test,\n      \"org.mockito\" % \"mockito-core\" % \"5.11.0\" % Test,\n      \"org.mockito\" % \"mockito-inline\" % \"5.2.0\" % Test,\n      \"org.mockito\" % \"mockito-junit-jupiter\" % \"5.12.0\" % Test,\n      \"net.aichler\" % \"jupiter-interface\" % JupiterKeys.jupiterVersion.value % Test,\n      \"com.adobe.testing\" % \"s3mock-junit5\" % \"3.9.1\" % Test\n        exclude(\"ch.qos.logback\", \"logback-classic\")\n        exclude(\"org.apache.logging.log4j\", \"log4j-to-slf4j\"),\n      \"javax.xml.bind\" % \"jaxb-api\" % \"2.3.1\" % Test,\n\n      // CLI dependencies\n      \"commons-cli\" % \"commons-cli\" % \"1.7.0\"\n    ),\n\n    Compile / sourceGenerators += Def.task {\n      val file = (Compile / sourceManaged).value / \"io\" / \"unitycatalog\" / \"server\" / \"utils\" / \"VersionUtils.java\"\n      IO.write(file,\n        s\"\"\"package io.unitycatalog.server.utils;\n           |\n           |public class VersionUtils {\n           |  public static String VERSION = \"${version.value}\";\n           |}\n           |\"\"\".stripMargin)\n      Seq(file)\n    },\n    populateTestDB := {\n      val log = streams.value.log\n      (Test / runMain).toTask(s\" io.unitycatalog.server.utils.PopulateTestDatabase\").value\n    },\n    Test / javaOptions += s\"-Duser.dir=${(ThisBuild / baseDirectory).value.getAbsolutePath}\",\n    // Include server and control models in the bin package for server\n    // This will allow us to have a single maven artifact and not 3 (server, server models, control models)\n    Compile / packageBin / mappings ++= (Compile / packageBin / mappings).value ++\n      (serverModels / Compile / packageBin / mappings).value ++\n      (controlModels / Compile / packageBin / mappings).value\n  )\n\nlazy val serverModels = (project in file(\"server\") / \"target\" / \"models\")\n  .enablePlugins(OpenApiGeneratorPlugin)\n  .disablePlugins(JavaFormatterPlugin)\n  .settings(\n    name := s\"$artifactNamePrefix-servermodels\",\n    commonSettings,\n    skipReleaseSettings,\n    (Compile / compile) := ((Compile / compile) dependsOn generate).value,\n    Compile / compile / javacOptions ++= javacRelease17,\n    libraryDependencies ++= Seq(\n      \"jakarta.annotation\" % \"jakarta.annotation-api\" % \"3.0.0\" % Provided,\n      \"com.fasterxml.jackson.core\" % \"jackson-annotations\" % jacksonVersion,\n    ),\n    // OpenAPI generation configs for generating model codes from the spec\n    openApiInputSpec := (file(\".\") / \"api\" / \"all.yaml\").toString,\n    openApiGeneratorName := \"java\",\n    openApiOutputDir := (file(\"server\") / \"target\" / \"models\").toString,\n    openApiValidateSpec := SettingEnabled,\n    openApiGenerateMetadata := SettingDisabled,\n    openApiModelPackage := s\"$orgName.server.model\",\n    openApiAdditionalProperties := Map(\n      \"library\" -> \"resteasy\", // resteasy generates the most minimal models\n      \"useJakartaEe\" -> \"true\",\n      \"hideGenerationTimestamp\" -> \"true\"\n    ),\n    openApiGlobalProperties := Map(\"models\" -> \"\"),\n    openApiGenerateApiTests := SettingDisabled,\n    openApiGenerateModelTests := SettingDisabled,\n    openApiGenerateApiDocumentation := SettingDisabled,\n    openApiGenerateModelDocumentation := SettingDisabled,\n    // Define the simple generate command to generate model codes\n    generate := {\n      val _ = openApiGenerate.value\n    }\n  )\n\nlazy val controlModels = (project in file(\"server\") / \"target\" / \"controlmodels\")\n  .enablePlugins(OpenApiGeneratorPlugin)\n  .disablePlugins(JavaFormatterPlugin)\n  .settings(\n    name := s\"$artifactNamePrefix-controlmodels\",\n    commonSettings,\n    skipReleaseSettings,\n    (Compile / compile) := ((Compile / compile) dependsOn generate).value,\n    Compile / compile / javacOptions ++= javacRelease17,\n    libraryDependencies ++= Seq(\n      \"jakarta.annotation\" % \"jakarta.annotation-api\" % \"3.0.0\" % Provided,\n      \"com.fasterxml.jackson.core\" % \"jackson-annotations\" % jacksonVersion,\n    ),\n    // OpenAPI generation configs for generating model codes from the spec\n    openApiInputSpec := (file(\".\") / \"api\" / \"control.yaml\").toString,\n    openApiGeneratorName := \"java\",\n    openApiOutputDir := (file(\"server\") / \"target\" / \"controlmodels\").toString,\n    openApiValidateSpec := SettingEnabled,\n    openApiGenerateMetadata := SettingDisabled,\n    openApiModelPackage := s\"$orgName.control.model\",\n    openApiAdditionalProperties := Map(\n      \"library\" -> \"resteasy\", // resteasy generates the most minimal models\n      \"useJakartaEe\" -> \"true\",\n      \"hideGenerationTimestamp\" -> \"true\"\n    ),\n    openApiGlobalProperties := Map(\"models\" -> \"\"),\n    openApiGenerateApiTests := SettingDisabled,\n    openApiGenerateModelTests := SettingDisabled,\n    openApiGenerateApiDocumentation := SettingDisabled,\n    openApiGenerateModelDocumentation := SettingDisabled,\n    // Define the simple generate command to generate model codes\n    generate := {\n      val _ = openApiGenerate.value\n    }\n  )\n\nlazy val cli = (project in file(\"examples\") / \"cli\")\n  .dependsOn(server % \"test->test\")\n  .dependsOn(serverModels, controlModels)\n  .dependsOn(client % \"compile->compile;test->test\")\n  .dependsOn(controlApi % \"compile->compile\")\n  .settings(\n    name := s\"$artifactNamePrefix-cli\",\n    mainClass := Some(orgName + \".cli.UnityCatalogCli\"),\n    commonSettings,\n    skipReleaseSettings,\n    javafmtCheckSettings,\n    javaCheckstyleSettings(file(\"dev\") / \"checkstyle-config.xml\"),\n    Compile / compile / javacOptions ++= javacRelease17,\n    libraryDependencies ++= Seq(\n      \"commons-cli\" % \"commons-cli\" % \"1.7.0\",\n      \"org.json\" % \"json\" % \"20240303\",\n      \"com.fasterxml.jackson.core\" % \"jackson-databind\" % jacksonVersion,\n      \"com.fasterxml.jackson.datatype\" % \"jackson-datatype-jsr310\" % jacksonVersion,\n      \"org.openapitools\" % \"jackson-databind-nullable\" % openApiToolsJacksonBindNullableVersion,\n      \"org.yaml\" % \"snakeyaml\" % \"2.2\",\n      \"io.delta\" % \"delta-kernel-api\" % deltaVersion,\n      \"io.delta\" % \"delta-kernel-defaults\" % deltaVersion,\n      \"io.delta\" % \"delta-storage\" % deltaVersion,\n      \"org.apache.hadoop\" % \"hadoop-client-api\" % \"3.4.0\",\n      \"org.apache.hadoop\" % \"hadoop-client-runtime\" % \"3.4.0\",\n      \"de.vandermeer\" % \"asciitable\" % \"0.3.2\",\n      // for s3 access\n      \"org.fusesource.jansi\" % \"jansi\" % \"2.4.1\",\n      \"com.amazonaws\" % \"aws-java-sdk-core\" % \"1.12.728\",\n      \"org.apache.hadoop\" % \"hadoop-aws\" % \"3.4.0\",\n      \"org.apache.hadoop\" % \"hadoop-azure\" % \"3.4.0\",\n      \"com.google.guava\" % \"guava\" % \"31.0.1-jre\",\n      // Test dependencies\n      \"org.junit.jupiter\" % \"junit-jupiter\" % \"5.10.3\" % Test,\n      \"net.aichler\" % \"jupiter-interface\" % JupiterKeys.jupiterVersion.value % Test,\n    ),\n    Test / javaOptions += s\"-Duser.dir=${(ThisBuild / baseDirectory).value.getAbsolutePath}\",\n  )\n\n/*\n  * This project is a combination of the server and client projects, shaded into a single JAR.\n  * It also includes the test classes from the server project.\n  * It is used for the Spark connector project(the client is required as a compile dependency,\n  * and the server(with tests) is required as a test dependency)\n  * This was necessary because Spark 3.5 has a dependency on Jackson 2.15, which conflicts with the Jackson 2.17\n */\nlazy val serverShaded = (project in file(\"server-shaded\"))\n  .dependsOn(server % \"compile->compile, test->compile\")\n  .settings(\n    name := s\"$artifactNamePrefix-server-shaded\",\n    commonSettings,\n    skipReleaseSettings,\n    Compile / packageBin := assembly.value,\n    assembly / mainClass := Some(\"io.unitycatalog.server.UnityCatalogServer\"),\n    assembly / logLevel := Level.Warn,\n    assembly / test := {},\n    assembly / assemblyShadeRules := Seq(\n      ShadeRule.rename(\"com.fasterxml.**\" -> \"shaded.@0\").inAll,\n      ShadeRule.rename(\"org.antlr.**\" -> \"shaded.@0\").inAll,\n    ),\n    assemblyPackageScala / assembleArtifact := false,\n    assembly / fullClasspath := {\n      val compileClasspath = (server / Compile / fullClasspath).value\n      val testClasses = (server / Test / products).value\n      compileClasspath ++ testClasses.map(Attributed.blank)\n    }\n  )\n\nlazy val spark = (project in file(\"connectors/spark\"))\n  .dependsOn(client)\n  .settings(\n    name := s\"$artifactNamePrefix-spark\",\n    scalaVersion := scala212,\n    crossScalaVersions := Seq(scala212, scala213),\n    commonSettings,\n    scalaReleaseSettings,\n    javaOptions ++= Seq(\n      \"--add-opens=java.base/sun.nio.ch=ALL-UNNAMED\",\n    ),\n    javaCheckstyleSettings(file(\"dev/checkstyle-config.xml\")),\n    Compile / compile / javacOptions ++= javacRelease11,\n    libraryDependencies ++= Seq(\n      \"org.apache.spark\" %% \"spark-sql\" % sparkVersion % Provided,\n      \"com.fasterxml.jackson.core\" % \"jackson-databind\" % \"2.15.0\",\n      \"com.fasterxml.jackson.module\" %% \"jackson-module-scala\" % \"2.15.0\",\n      \"com.fasterxml.jackson.core\" % \"jackson-annotations\" % \"2.15.0\",\n      \"com.fasterxml.jackson.core\" % \"jackson-core\" % \"2.15.0\",\n      \"com.fasterxml.jackson.dataformat\" % \"jackson-dataformat-xml\" % \"2.15.0\",\n      \"org.antlr\" % \"antlr4-runtime\" % \"4.9.3\",\n      \"org.antlr\" % \"antlr4\" % \"4.9.3\",\n      \"com.google.cloud.bigdataoss\" % \"util-hadoop\" % \"3.0.2\" % Provided,\n      \"org.apache.hadoop\" % \"hadoop-azure\" % \"3.4.0\" % Provided,\n    ),\n    libraryDependencies ++= Seq(\n      // Test dependencies\n      \"org.junit.jupiter\" % \"junit-jupiter\" % \"5.10.3\" % Test,\n      \"org.assertj\" % \"assertj-core\" % \"3.26.3\" % Test,\n      \"org.mockito\" % \"mockito-core\" % \"5.11.0\" % Test,\n      \"org.mockito\" % \"mockito-inline\" % \"5.2.0\" % Test,\n      \"org.mockito\" % \"mockito-junit-jupiter\" % \"5.12.0\" % Test,\n      \"net.aichler\" % \"jupiter-interface\" % JupiterKeys.jupiterVersion.value % Test,\n      \"org.apache.hadoop\" % \"hadoop-client-runtime\" % \"3.4.0\",\n      \"io.delta\" %% \"delta-spark\" % deltaVersion % Test,\n    ),\n    dependencyOverrides ++= Seq(\n      \"com.fasterxml.jackson.core\" % \"jackson-databind\" % \"2.15.0\",\n      \"com.fasterxml.jackson.module\" %% \"jackson-module-scala\" % \"2.15.0\",\n      \"com.fasterxml.jackson.core\" % \"jackson-annotations\" % \"2.15.0\",\n      \"com.fasterxml.jackson.core\" % \"jackson-core\" % \"2.15.0\",\n      \"com.fasterxml.jackson.dataformat\" % \"jackson-dataformat-xml\" % \"2.15.0\",\n      \"org.antlr\" % \"antlr4-runtime\" % \"4.9.3\",\n      \"org.antlr\" % \"antlr4\" % \"4.9.3\",\n    ),\n    Test / unmanagedJars += (serverShaded / assembly).value,\n    licenseDepExclusions := {\n      case DepModuleInfo(\"org.hibernate.orm\", _, _) => true\n      case DepModuleInfo(\"jakarta.annotation\", \"jakarta.annotation-api\", _) => true\n      case DepModuleInfo(\"jakarta.servlet\", \"jakarta.servlet-api\", _) => true\n      case DepModuleInfo(\"jakarta.transaction\", \"jakarta.transaction-api\", _) => true\n      case DepModuleInfo(\"jakarta.ws.rs\", \"jakarta.ws.rs-api\", _) => true\n      case DepModuleInfo(\"javax.activation\", \"activation\", _) => true\n      case DepModuleInfo(\"javax.servlet\", \"javax.servlet-api\", _) => true\n      case DepModuleInfo(\"org.glassfish.hk2\", \"hk2-api\", _) => true\n      case DepModuleInfo(\"org.glassfish.hk2\", \"hk2-locator\", _) => true\n      case DepModuleInfo(\"org.glassfish.hk2\", \"hk2-utils\", _) => true\n      case DepModuleInfo(\"org.glassfish.hk2\", \"osgi-resource-locator\", _) => true\n      case DepModuleInfo(\"org.glassfish.hk2.external\", \"aopalliance-repackaged\", _) => true\n      case DepModuleInfo(\"ch.qos.logback\", \"logback-classic\", _) => true\n      case DepModuleInfo(\"ch.qos.logback\", \"logback-core\", _) => true\n      case DepModuleInfo(\"org.apache.xbean\", \"xbean-asm9-shaded\", _) => true\n      case DepModuleInfo(\"oro\", \"oro\", _) => true\n      case DepModuleInfo(\"org.glassfish\", \"javax.json\", _) => true\n      case DepModuleInfo(\"org.glassfish.hk2.external\", \"jakarta.inject\", _) => true\n      case DepModuleInfo(\"org.antlr\", \"ST4\", _) => true\n    }\n  )\n\nlazy val integrationTests = (project in file(\"integration-tests\"))\n  .settings(\n    name := s\"$artifactNamePrefix-integration-tests\",\n    commonSettings,\n    javaOptions ++= Seq(\n      \"--add-exports=java.base/sun.nio.ch=ALL-UNNAMED\",\n    ),\n    skipReleaseSettings,\n    libraryDependencies ++= Seq(\n      \"org.junit.jupiter\" % \"junit-jupiter\" % \"5.10.3\" % Test,\n      \"net.aichler\" % \"jupiter-interface\" % JupiterKeys.jupiterVersion.value % Test,\n      \"org.assertj\" % \"assertj-core\" % \"3.26.3\" % Test,\n      \"org.projectlombok\" % \"lombok\" % \"1.18.32\" % Provided,\n      \"org.apache.spark\" %% \"spark-sql\" % \"3.5.3\" % Test,\n      \"io.delta\" %% \"delta-spark\" % \"3.2.1\" % Test,\n      \"org.apache.hadoop\" % \"hadoop-aws\" % \"3.3.6\" % Test,\n      \"org.apache.hadoop\" % \"hadoop-azure\" % \"3.3.6\" % Test,\n      \"com.google.cloud.bigdataoss\" % \"gcs-connector\" % \"3.0.2\" % Test classifier \"shaded\",\n      \"io.unitycatalog\" %% \"unitycatalog-spark\" % \"0.2.0\" % Test,\n    ),\n    dependencyOverrides ++= Seq(\n      \"com.fasterxml.jackson.core\" % \"jackson-databind\" % \"2.15.0\",\n      \"com.fasterxml.jackson.module\" %% \"jackson-module-scala\" % \"2.15.0\",\n      \"com.fasterxml.jackson.core\" % \"jackson-annotations\" % \"2.15.0\",\n      \"com.fasterxml.jackson.core\" % \"jackson-core\" % \"2.15.0\",\n      \"com.fasterxml.jackson.dataformat\" % \"jackson-dataformat-xml\" % \"2.15.0\",\n      \"org.antlr\" % \"antlr4-runtime\" % \"4.9.3\",\n      \"org.antlr\" % \"antlr4\" % \"4.9.3\",\n      \"org.apache.hadoop\" % \"hadoop-client-api\" % \"3.3.6\",\n    ),\n    Test / javaOptions += s\"-Duser.dir=${((ThisBuild / baseDirectory).value / \"integration-tests\").getAbsolutePath}\",\n  )\n\nlazy val root = (project in file(\".\"))\n  .aggregate(serverModels, client, pythonClient, server, cli, spark, controlApi, controlModels, apiDocs)\n  .settings(\n    name := s\"$artifactNamePrefix\",\n    createTarballSettings(),\n    commonSettings,\n    rootReleaseSettings\n  )\n\ndef generateClasspathFile(targetDir: File, classpath: Classpath): Unit = {\n  // Generate a classpath file with the entire runtime class path.\n  // This is used by the launcher scripts for launching CLI directly with JAR instead of SBT.\n  val classpathFile = targetDir / \"classpath\"\n  Files.write(classpathFile.toPath, classpath.files.mkString(File.pathSeparator).getBytes)\n  println(s\"Generated classpath file '$classpathFile'\")\n}\n\nval generate = taskKey[Unit](\"generate code from APIs\")\n\n// Library versions\nval jacksonVersion = \"2.17.0\"\nval openApiToolsJacksonBindNullableVersion = \"0.2.6\"\nval log4jVersion = \"2.23.1\"\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "clients",
          "type": "tree",
          "content": null
        },
        {
          "name": "compose.yaml",
          "type": "blob",
          "size": 0.5322265625,
          "content": "name: unitycatalog\n\nservices:\n\n  server:\n    build:\n      context: .\n      dockerfile: Dockerfile\n    ports:\n      - \"8080:8080\"\n    volumes:\n      - type: bind\n        source: ./etc/conf\n        target: /opt/unitycatalog/etc/conf\n      - type: volume\n        source: unitycatalog_data\n        target: /opt/unitycatalog/etc/data\n  ui:\n    build:\n      context: ui/\n      dockerfile: Dockerfile\n    ports:\n      - \"3000:3000\"\n    depends_on:\n      - server\n      \nvolumes:\n  # Persist docker volume across container restarts\n  unitycatalog_data:\n"
        },
        {
          "name": "connectors",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 3.7431640625,
          "content": "site_name: Unity Catalog\nedit_uri: edit/main/docs/\nrepo_name: unitycatalog/unitycatalog\nrepo_url: https://github.com/unitycatalog/unitycatalog\nsite_url: https://docs.unitycatalog.io\nsite_description: Open, Multi-modal Catalog for Data & AI\nsite_author: unitycatalog\n\nnav:\n  - Home: index.md\n  - Getting Started:\n      - Quickstart: quickstart.md\n      - Docker Compose: docker_compose.md\n  - Usage:\n      - CLI: usage/cli.md\n      - UI: usage/ui.md\n      - Tables:\n          - Delta Lake: usage/tables/deltalake.md\n          - Formats: usage/tables/formats.md\n          - UniForm: usage/tables/uniform.md\n      - Volumes: usage/volumes.md\n      - Functions: usage/functions.md\n      - Models: usage/models.md\n  - Server:\n      - Configuration: server/configuration.md\n      - Auth: server/auth.md\n  - Integrations:\n      - Overview: integrations/index.md\n      - Apache Spark: integrations/unity-catalog-spark.md\n      - CelerData: integrations/unity-catalog-celerdata.md\n      - Daft: integrations/unity-catalog-daft.md\n      - DuckDB: integrations/unity-catalog-duckdb.md\n      - PuppyGraph: integrations/unity-catalog-puppygraph.md\n      - SpiceAI: integrations/unity-catalog-spiceai.md\n      - Trino: integrations/unity-catalog-trino.md\n      - XTable: integrations/unity-catalog-xtable.md\n  - Deployment: deployment.md\n  - AI:\n      - Quickstart: ai/quickstart.md\n      - Usage: ai/usage.md\n      - AI Client: ai/client.md\n      - AI Integrations:\n          - Integrations: ai/integrations/index.md\n          - LangChain: ai/integrations/langchain.md\n          - LlamaIndex: ai/integrations/llamaindex.md\n          - OpenAI: ai/integrations/openai.md\n          - Anthropic: ai/integrations/anthropic.md\n          - CrewAI: ai/integrations/crewai.md\n          - AutoGen: ai/integrations/autogen.md\n\nexclude_docs: |\n  README.md\n\nplugins:\n  - search\n  - material-plausible\n\ntheme:\n  name: material\n  logo: assets/images/uc-logo-mark-reverse.png\n  favicon: assets/images/unitycatalog_256x256.png\n  font:\n    text: Plus Jakarta Sans\n    code: Consolas\n  features:\n    - content.action.edit\n    - content.code.copy\n    - content.tabs.link\n    - navigation.footer\n    - navigation.expand\n    - navigation.indexes\n    - content.code.annotate\n  palette:\n    - media: \"(prefers-color-scheme: light)\"\n      scheme: default\n      primary: indigo\n      accent: amber\n      toggle:\n        icon: material/brightness-7\n        name: Switch to dark mode\n    - media: \"(prefers-color-scheme: dark)\"\n      scheme: slate\n      primary: indigo\n      accent: amber\n      toggle:\n        icon: material/brightness-4\n        name: Switch to light mode\n  icon:\n    repo: fontawesome/brands/github\n    annotation: material/arrow-right-circle\nextra_css:\n  - assets/stylesheets/extra.css\n\nextra:\n  homepage: https://unitycatalog.io\n  social:\n    - icon: fontawesome/brands/github\n      link: https://github.com/unitycatalog/unitycatalog\n  analytics:\n    provider: plausible\n    domain: unitycatalog.io\n    feedback:\n      title: Was this page helpful?\n      ratings:\n        - icon: material/emoticon-happy-outline\n          name: This page was helpful\n          data: good\n          note: >-\n            Thanks for your feedback!\n\n        - icon: material/emoticon-sad-outline\n          name: This page could be improved\n          data: bad\n          note: >-\n            Thanks for your feedback!\n\nmarkdown_extensions:\n  - admonition\n  - attr_list\n  - md_in_html\n  - toc:\n      permalink: true\n  - pymdownx.details\n  - pymdownx.tabbed:\n      alternate_style: true\n  - pymdownx.superfences:\n      custom_fences:\n        - name: mermaid\n          class: mermaid\n          format: !!python/name:pymdownx.superfences.fence_code_format\n        - name: plantuml\n          class: plantuml\n          format: !!python/name:pymdownx.superfences.fence_code_format\n"
        },
        {
          "name": "project",
          "type": "tree",
          "content": null
        },
        {
          "name": "requirements-docs.txt",
          "type": "blob",
          "size": 0.103515625,
          "content": "material-plausible-plugin==0.2.0\nmdformat==0.7.18\nmkdocs==1.6.1\nmkdocs-material==9.5.43\npre-commit==4.0.1\n"
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "version.sbt",
          "type": "blob",
          "size": 0.0390625,
          "content": "ThisBuild / version := \"0.3.0-SNAPSHOT\"\n"
        }
      ]
    }
  ]
}