{
  "metadata": {
    "timestamp": 1736609069415,
    "page": 324,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "code4craft/netty-learning",
      "stars": 3557,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.01953125,
          "content": "node_modules\n.grunt\n"
        },
        {
          "name": "ChannelHandler.md",
          "type": "blob",
          "size": 0.0537109375,
          "content": "netty那点事-ChannelHandler和事件机制\n--------\n\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 0.8388671875,
          "content": "var path = require(\"path\");\n\nmodule.exports = function (grunt) {\n    grunt.loadNpmTasks('grunt-gitbook');\n    grunt.loadNpmTasks('grunt-gh-pages');\n    grunt.loadNpmTasks('grunt-contrib-clean');\n\n    grunt.initConfig({\n        'gitbook': {\n            development: {\n                output: path.join(__dirname, \".grunt/gitbook\"),\n                input: \"./\",\n                title: \"Netty-learning\",\n                description: \"\",\n                github: \"code4craft/netty-learning\"\n            }\n        },\n        'gh-pages': {\n            options: {\n                base: '.grunt/gitbook'\n            },\n            src: ['**']\n        },\n        'clean': {\n            files: '.grunt'\n        }\n    });\n\n    grunt.registerTask('publish', [\n        'gitbook',\n        'gh-pages',\n        'clean'\n    ]);\n    grunt.registerTask('default', 'gitbook');\n};\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.8447265625,
          "content": "Netty源码解析\n====\n\nNetty是Java世界知名的网络应用框架。本系列文章是Netty的源码导读。\n\n## 为什么要读Netty源码？\n\n我认为，一般研究Netty源码出于两个原因：\n\n1. 日常工作中使用到Netty，想要进一步了解；\n2. 对Java网络编程感兴趣，想知道如何构建一个高性能网络应用。\n\n另外，Netty的代码组织比较优秀，从中可以学到代码结构组织的方法。\n\n## 这些文章讲什么？\n\n本系列文章的介绍点包括：Netty的设计思想，网络编程的领域知识，以及Netty代码结构的骨干，可能也会包括一些具体场景的应用以及一些特性的分析。\n\n==========\n\n## 文章索引\n\n## 一、Netty的架构\n\n### [1.概述](posts/ch1-overview.md)\n### [2.Netty中的buffer](posts/ch2-buffer.md)\n### [3.Channel中的Pipeline](posts/ch3-pipeline.md)\n### [4.Netty与Reactor模式](posts/ch4-reactor.md)\n### [5.分门别类讲讲Handler](posts/ch5-handler.md) *未完成*\n\n## 二、Netty中的特性与细节\n\n### [1.理解Netty中的异步](posts/detail/ch1-async-in-netty.md) \n\n## 三、Netty实战\n\n### [1.构建一个socks proxy](posts/socks-proxy-by-netty.md)\n\n=========\n\n## 其他学习资料：\n\n《Netty代码分析》 by 阿里中间件团队博客:\n[http://jm-blog.aliapp.com/?p=423](http://jm-blog.aliapp.com/?p=423)\n\n《netty从入门到精通》:\n[http://cqupt123.iteye.com/blog/1682657](http://cqupt123.iteye.com/blog/1682657)\n\n[@kafka0102](http://weibo.com/kafka0102)的《Netty实现原理浅析》[http://www.kafka0102.com/2010/06/167.html](http://www.kafka0102.com/2010/06/167.html)\n\n[@OneCoder](http://weibo.com/kubicoder)的《Java NIO框架Netty教程》:\n[http://www.coderli.com/category/open-source/distributed/netty](http://www.coderli.com/category/open-source/distributed/netty)\n\ntwitter关于3.0与4.0中Channel Event的说明：\n[https://blog.twitter.com/2013/netty-4-at-twitter-reduced-gc-overhead](https://blog.twitter.com/2013/netty-4-at-twitter-reduced-gc-overhead)\n\n[@章炎-友盟](http://weibo.com/dirlt)的博客：\n[http://dirlt.com/netty.html](http://dirlt.com/netty.html)\n\n[@李林锋hw](http://weibo.com/lilinfeng)的大作： [Netty5.0架构剖析和源码解读.pdf](http://vdisk.weibo.com/s/C9LV9iVqH13rW)\n\n## 使用Netty的开源项目：\n\n* ### [Dubbo](https://github.com/alibaba/dubbo)\n\n\t阿里巴巴的RPC中间件。支持Netty和Mina。\n\n* ### [Finagle](https://github.com/twitter/finagle)\n\n\tTwitter的RPC中间件。使用Scala编写。\n\t\n* ### [Norbert](https://github.com/rhavyn/norbert)\n\n\tLinkedIn的RPC中间件。使用Scala编写。\n\n* ### [Moco](https://github.com/dreamhead/moco)\n\n\t基于Netty的HTTP MOCK服务器。\n\n## 协议：\n\n相关代码遵循Apache V2协议。\n\n文档遵循CC-BYNC协议。\n\n[![Bitdeli Badge](https://d2weczhvl823v0.cloudfront.net/code4craft/netty-learning/trend.png)](https://bitdeli.com/free \"Bitdeli Badge\")\n\n"
        },
        {
          "name": "SUMMARY.md",
          "type": "blob",
          "size": 0.263671875,
          "content": "# Netty源码解析\n\n* [Netty概述](posts/ch1-overview.md)\n* [Netty中的buffer](posts/ch2-buffer.md)\n* [Channel中的Pipeline](posts/ch3-pipeline.md)\n* [Netty与Reactor模式](posts/ch4-reactor.md)\n* [Netty实战:构建一个socks proxy](posts/socks-proxy-by-netty.md)"
        },
        {
          "name": "asserts",
          "type": "tree",
          "content": null
        },
        {
          "name": "learning-src",
          "type": "tree",
          "content": null
        },
        {
          "name": "netty-3.7",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.51171875,
          "content": "{\n    \"name\": \"Netty-learning\",\n    \"version\": \"0.0.5\",\n    \"description\": \"\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/code4craft/netty-learning\"\n    },\n    \"author\": \"Yihua.huang <code4crafter@gmail.com>\",\n    \"license\": \"Apache 2\",\n    \"dependencies\": {},\n    \"devDependencies\": {\n        \"grunt\": \"~0.4.1\",\n        \"grunt-gitbook\": \"0.1.2\",\n        \"grunt-gh-pages\": \"0.9.1\",\n        \"grunt-contrib-clean\": \"~0.5.0\"\n    },\n    \"peerDependencies\": {\n        \"grunt\": \"~0.4.1\"\n    }\n}\n"
        },
        {
          "name": "posts",
          "type": "tree",
          "content": null
        },
        {
          "name": "publish",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}