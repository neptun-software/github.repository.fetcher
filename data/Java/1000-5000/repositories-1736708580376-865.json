{
  "metadata": {
    "timestamp": 1736708580376,
    "page": 865,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "marytts/marytts",
      "stars": 2401,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.296875,
          "content": "# EOL encoding is LF, but native in working copy\n* text=auto\n\n# batch, markdown, properties, text, and config files should be viewable and user-editable\n# -- even in Windows Notepad, so CRLF EOL\n*.bat text eol=crlf\n*.config text eol=crlf\n*.md text eol=crlf\n*.properties text eol=crlf\n*.txt text eol=crlf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.146484375,
          "content": "# Gradle\n.gradle/\nbuild/\nbin/\n\n# Eclipse\n.settings/\n.project\n.classpath\n\n# IDEA\n*.iml\n.idea/\n\n# misc. testing\ntmp/\nlog/\ntest-output/\n\n# OSX\n.DS_Store\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 46.25,
          "content": "MaryTTS\n=====================\n\n[Unreleased]\n------------\n\n### Changed\n\n* Build with Gradle v7.6.4\n* Improve publishing\n* Ported runtime Groovy classes to Java (specifically, in Luxembourgish language component)\n\n### Fixed\n\n* Migrate CI/CD from Travis to GitHub Actions\n* Add compability with Java 11 and 17\n* Lock down Java compatibility to 1.8\n* Reduce non-API dependency leakage (particularly `groovy-all`)\n* Dependency resolution errors following JCenter shutdown\n* Javadoc errors in legacy, third-party code\n\n### Removed\n\n* Legacy Maven POMs\n\n### Security\n\n* Upgraded Commons IO to v2.17.0, fixing\n  * CVE-2021-29425\n  * CVE-2024-47554\n* Upgraded Guava to v33.3.1-jre, fixing\n  * CVE-2020-8908\n  * CVE-2023-2976\n* Upgraded HSQLDB to v2.7.3, fixing\n  * CVE-2022-41853\n* Upgraded Log4J to v2.24.1, fixing\n  * CVE-2019-17571\n  * CVE-2021-4104\n  * CVE-2022-23302\n  * CVE-2022-23305\n  * CVE-2022-23307\n* Upgraded SLF4J to v2.0.16, fixing\n  * CVE-2020-9488\n  * CVE-2021-44228\n  * CVE-2021-44832\n  * CVE-2021-45046\n  * CVE-2021-45105\n\nSee [all changes since v5.2.1]\n\n[v5.2.1] (2022-05-25)\n---------------------\n\nThis is a maintenance release to provide artifacts on Maven Central following the shutdown of JCenter, and also to mitigate the Log4Shell vulnerabilities.\n\n### Changes\n\n#### Artifact Hosting\n\n* Artifacts are now available on Maven Central, following the shutdown of JCenter/Bintray\n\n#### Security\n\n* Log4J dependencies have been updated to the latest versions, mitigating Log4Shell vulnerabilities\n\nSee [all changes since v5.2]\n\n[v5.2] (2016-09-15)\n-------------------\n\nThis is expected to be the last milestone release in the 5.x generation of MaryTTS.\n\n### Improvements\n\n* Support for Luxembourgish\n* Completely rewritten text preprocessing module for English (removing reliance on FreeTTS)\n* Better support for Java 8\n* Some migration towards building with Gradle\n\n#### Voicebuilding\n\n\n* All unit-selection voices have been rebuilt using the new [Gradle plugin](https://github.com/marytts/gradle-marytts-voicebuilding-plugin)\n* All HSMM voices are now hosted on Bintray and can be resolved as dependencies\n* Voices with open data now have open-source voicebuilding repositories hosted on GitHub, which include downloadable distribution packages\n\n### Development news\n\n* [#533](https://github.com/marytts/marytts/pull/533): support system preferredmodule\n* [#525](https://github.com/marytts/marytts/pull/525): Update dependencies and maven plugins\n* [#523](https://github.com/marytts/marytts/pull/523): solving quotes phonetisation problem\n* [#506](https://github.com/marytts/marytts/pull/506): Duplicate subexpressions in `WeightedCodebookMfccMapper.java`\n* [#499](https://github.com/marytts/marytts/pull/499): Upgrade Apache Commons Collections to v3.2.2\n* [#493](https://github.com/marytts/marytts/pull/493): Drop assembly plugin\n* [#425](https://github.com/marytts/marytts/pull/425): various fixes for C++ client source code\n* [#399](https://github.com/marytts/marytts/pull/399): Component installer License download re-code following [#395](https://github.com/marytts/marytts/issues/395)\n* [#393](https://github.com/marytts/marytts/issues/393): `package.html` files converted into `package-info.java` files\n* [#362](https://github.com/marytts/marytts/issues/362): add support for Groovy\n* [#353](https://github.com/marytts/marytts/issues/353): Swap inlined third-party code with dependencies\n* [#351](https://github.com/marytts/marytts/issues/351): update of maven plugins used for the website and build plugins\n* [#333](https://github.com/marytts/marytts/issues/333): remove subscription/post links to archived mary-dev mailing list\n* [#330](https://github.com/marytts/marytts/issues/330): show port number when starting MaryTTS server\n* [#320](https://github.com/marytts/marytts/issues/320): move outdated example code from runtime assembly into doc directory\n* [#309](https://github.com/marytts/marytts/issues/309): try to process tokens if they contain word characters, even when they are tagged as punctuation\n* [#228](https://github.com/marytts/marytts/issues/228): fix on drop FreeTTS dependencies\n* [#227](https://github.com/marytts/marytts/pull/227): Enhanced OutputStreams for Mary Client\n* [#217](https://github.com/marytts/marytts/pull/217): incrementality changes\n\n### Fixed Issues/Bugs\n\n* [#593](https://github.com/marytts/marytts/pull/593): Don't split up multiple punctuation marks in tokenization\n* [#570](https://github.com/marytts/marytts/issues/570): Praat TextGrid output is invalid with boundaries (times are not monotonic)\n* [#564](https://github.com/marytts/marytts/pull/564): add missing TOKENS examples\n* [#555](https://github.com/marytts/marytts/issues/555): HMMModel generates malformed XML duration attributes\n* [#531](https://github.com/marytts/marytts/issues/531): java.awt.HeadlessException in (Half)PhoneLabelFeatureAligner\n* [#516](https://github.com/marytts/marytts/issues/516): Single words conduct to have a wrong POS which leads to a crash of the target feature module\n* [#515](https://github.com/marytts/marytts/pull/515): preprocessing contraction and double quotes correction\n* [#503](https://github.com/marytts/marytts/issues/503): `halfphoneUnitFeatureDefinition_ac.txt` does not have any continuous features even though `halfphoneFeatures_ac.mry` does\n* [#480](https://github.com/marytts/marytts/issues/480): IBAN code &rarr; stacktrace\n* [#469](https://github.com/marytts/marytts/issues/469): APML is broken\n* [#468](https://github.com/marytts/marytts/issues/468): SABLE is broken\n* [#467](https://github.com/marytts/marytts/issues/467): SIMPLEPHONEMES is broken\n* [#465](https://github.com/marytts/marytts/issues/465): enable acoustic features by default\n* [#460](https://github.com/marytts/marytts/issues/460): Tokens mistakenly POS-tagged as punctuation cause wrong boundary insertion\n* [#458](https://github.com/marytts/marytts/issues/458): VoiceCompiler generates invalid package name from db.voicename property\n* [#452](https://github.com/marytts/marytts/issues/452): Disable assertions in user startup scripts\n* [#448](https://github.com/marytts/marytts/issues/448): unit selection: final boundary durations synthesized 50% shorter than requested\n* [#428](https://github.com/marytts/marytts/issues/428): error in marytts cart DecisionNode\n* [#421](https://github.com/marytts/marytts/pull/421): Force English locale for parsing date when English language is used\n* [#409](https://github.com/marytts/marytts/pull/409): ensure that ICU4J's resource is read with the correct encoding, regardless of environment\n* [#398](https://github.com/marytts/marytts/pull/398): Use https URLs whenever possible\n* [#395](https://github.com/marytts/marytts/issues/395): component installer hangs if licenses cannot be downloaded\n* [#375](https://github.com/marytts/marytts/issues/375): add Groovy script to generate component descriptor XML and fix POM template\n* [#369](https://github.com/marytts/marytts/issues/369): handle exceptions on missing or malformed userdict entries\n* [#365](https://github.com/marytts/marytts/issues/365): upgrade groovy-maven (formerly gmaven) plugin to solve noClassDefFoundError when running MaryTTS server\n* [#359](https://github.com/marytts/marytts/issues/359): don't append an /6/ to the previous syllable if that syllable is not adjacent\n* [#354](https://github.com/marytts/marytts/issues/354): move custom jtok resources into jtok-user\n* [#352](https://github.com/marytts/marytts/issues/352): javadoc fails with Java 8\n* [#342](https://github.com/marytts/marytts/issues/342): workaround for NullPointerException in syllables that violate sonority constraints\n* [#341](https://github.com/marytts/marytts/issues/341): temporarily handle digit suffix stress notation from legacy LTS CARTs until these are rebuilt\n* [#322](https://github.com/marytts/marytts/issues/322): drop transitional punctuation POS tag logic\n* [#314](https://github.com/marytts/marytts/issues/314): not processing null results from phonemise methods\n* [#237](https://github.com/marytts/marytts/issues/237): fix for incorrect linear interpolation in MathUtils.interpolateNonZeroValues\n* [#213](https://github.com/marytts/marytts/issues/213): fix for rate adjustment \n* [#206](https://github.com/marytts/marytts/issues/206): fix for LTSTrainerTest failure on unexpected file.encoding\n* [#204](https://github.com/marytts/marytts/issues/204): fix for Locale null breaking MaryServer\n* [#202](https://github.com/marytts/marytts/issues/202): URISyntaxException avoids WikipediaMarkupCleanerTest failing if workspace contains space\n* [#198](https://github.com/marytts/marytts/issues/198): fix for closing fileOutputStream after audio save\n* [#185](https://github.com/marytts/marytts/issues/185): fix for EnvironmentTest failure on Java 8\n\nSee [all changes since v5.1.2]\n\n[v5.1.2] (2015-01-23)\n-------------------\n\nAnother milestone release with several improvements and fixes.\n\n### Improvements\n\n* For French, numbers in the input text were silently ignored; this has been [improved](https://github.com/marytts/marytts/issues/269) using a *spellout formatter* from [ICU4J](http://icu-project.org/). This fix can (and will soon) also be applied to other languages that are missing a text Preprocess module. \n* A new rule-based Syllabfier class has been implemented.\n* All releases are now [hosted on GitHub](https://github.com/marytts/marytts/releases) again; references to the Downloads on Bitbucket have been updated accordingly.\n\n### Development news\n\n* Targets are cached so these do not get recreated, and can be re-used later.\n* Words are now added to wordlist in batches for new language components.\n* A toString() helper method was added to MaryData class to help with debugging. \n\n### Fixed Issues/Bugs\n\n* [#268](https://github.com/marytts/marytts/issues/268): getAllophone() no longer silently returns `null` on invalid input.\n* [#267](https://github.com/marytts/marytts/issues/267): `REALISED_DURATIONS` and `REALISED_ACOUSTPARAMS` are no longer (mistakenly) available as input types.\n* [#266](https://github.com/marytts/marytts/issues/266): Syllabification no longer ignores any provided stress diacritics.\n* [#258](https://github.com/marytts/marytts/issues/258): Byte overflow in TargetFeatureComputer -- issue with limit of array.\n* [#218](https://github.com/marytts/marytts/issues/218): a voice would not be built correctly following the **groupId** change in v.5.1.1.\n* [#154](https://github.com/marytts/marytts/issues/154): trailing whitespace in config files could prevent correct parsing.\n\nSee [all changes since v5.1.1]\n\n[v5.1.1] (2014-10-05)\n-------------------\n\nA milestone release that stabilizes changes in build and hosting infrastructure and fixes several issues.\n\n### Language updates\n\n* Telugu and Turkish: two voices were added which had not been rebuilt since v4.0.0.\n* added `TOKENS` example text for Italian, Turkish, British English, Telugu, and Russian.\n* Voice components are sorted by locale and name in `download/marytts-components.xml`.\n\n### Documentation updates\n\n* Added to the documentation section on the mary site is a page on [MaryTTS's history](http://mary.dfki.de/documentation/history.html).\n* Also added a point on MP3 support to the [FAQ](http://mary.dfki.de/faq.html).\n* Minor tweaks to navigation menu, earlier version release notes, download links, etc.\n\n### Development news\n\n##### New Infrastructure:\n\n* Continuous Integration is now provided by [Travis CI](https://travis-ci.org/marytts/marytts).\n* The web server running at http://mary.dfki.de has been replaced with a new machine, which hosts the latest stable website content and runs the latest stable build as an online demo.\n* The latest release artifacts are hosted at [Bintray](https://bintray.com/marytts) and indexed in [jCenter](https://bintray.com/bintray/jcenter).\n* The latest development (SNAPSHOT) artifacts are hosted at [OJO](https://oss.jfrog.org/).\n* A website built from the latest development (SNAPSHOT) version is hosted at http://marytts.github.io/.\n\n##### Build environment:\n\n* All supported languages have been moved into a container module `marytts-languages`.\n* Several maven plugins were updated to the latest versions.\n* Building MaryTTS now requires Maven 3.0.2 or later.\n\n### Fixed Issues/Bugs\n\n* added missing voice resources that had been present in v5.0 before hosting had switched servers, as well as fixing some missing license files.\n* [#207](https://github.com/marytts/marytts/issues/207): Deploying to Bintray/jCenter required changing the **groupId** from `marytts` to `de.dfki.mary`.\n* [#206](https://github.com/marytts/marytts/issues/206): LTSTrainerTest would fail if UTF-8 encoding was not specified\n* [#204](https://github.com/marytts/marytts/issues/204): A locale set to `null` no longer breaks the Mary server   \n* [#202](https://github.com/marytts/marytts/issues/202): WikipediaMarkupCleanerTest failed if workspace contains space\n* [#185](https://github.com/marytts/marytts/issues/185): EnviromentTest no longer fails with Java 8\n\nSee [all changes since v5.1]\n\n[v5.1] (2014-07-16)\n-------------------\n\nFollowing significant restructuring introduced in v5.0, this is a milestone release to stabilize numerous new features and fixes over the past two years.\n\nApart from numerous fixed issues, there are several notable improvements in this version.\n\n### French language support\n\nThanks to Sathish Pammi's work at ENST and UPMC in Paris, there is support for French TTS.\nThis supersedes an [earlier, experimental implementation](http://mary.opendfki.de/browser/branches/fr-branch), which relied on external, native resources with an incompatible license.\n\nMoreover, thanks to the great work and generosity of the speakers, there are a number of French voices built from three open-source corpora:\n\n* https://github.com/marytts/enst-camille-data\n* https://github.com/marytts/upmc-jessica-data\n* https://github.com/marytts/upmc-pierre-data\n\n### Improved Italian language support\n\nThanks to Fabio Tesser and Giulio Paci at ISTC in Padova, numerous improvements were made to Italian TTS.\n\nThis also includes the resurrection of the HTK Labeler used for voicebuilding as an alternative to the EHMM Labeler, which may produce better results under certain conditions.\n\n### Documentation\n\nAlthough much of the documentation has yet to be updated, the [MaryTTS website](http://mary.dfki.de) itself is now built directly from the MaryTTS source code (using the [Maven Site Plugin](http://maven.apache.org/plugins/maven-site-plugin/)).\nThis unifies the fossilized legacy content with new documentation, including the GitHub-hosted [wiki](https://github.com/marytts/marytts/wiki), and makes it easy to manage.\n\n### Easier integration\n\nFinally, thanks to cloud hosting at [Bintray](https://bintray.com/marytts), it is now possible to integrate MaryTTS directly into other applications without the requirement to install it first locally, simply by adding the following repository block to your `pom.xml`:\n\n    <repository>\n\t  <id>bintray</id>\n\t  <url>https://dl.bintray.com/marytts/marytts</url>\n    </repository>\n\n### Development news\n\nThere has been some fluctuation in the core development team since the release of v5.0;\ndepartures and other responsibilities have resulted in less activity than we would have liked.\n\nFortunately, we do finally have several new projects for MaryTTS, and several exciting features waiting the wings, ready to be rebased on a stable version (this one), including major overhauls of the voicebuilding toolchain and the new language support, and a new web-based installer.\nExpect these to land in the near future.\n\nSee [all changes since v5.0]\n\n[v5.0] (2012-06-14)\n-------------------\n\nMARY TTS 5.0 is the first release from the thoroughly restructured code base.\n\nMARY TTS 5.0 is better supported by automated tests than any previous version of MARY TTS, but it may well be that in practical use some hiccups will appear that have not surfaced in testing.\nTherefore cautious users are advised to treat this as a beta release.\n\n### Simpler installation\n\nInstalling MARY TTS is now performed by simply unpacking the `zip` archive at the target location.\nNo clicking through installer pages anymore.\nIn particular, it is now trivial to install MARY TTS on a server without a GUI connection.\n\nThe component installer, `bin/marytts-component-installer.sh`, still uses a GUI;\nsee issue [#43](https://github.com/marytts/marytts/issues/43) for a workaround.\n\n### Simplified use of MARY TTS in your own projects\n\nIt is now possible to use MARY TTS, with HMM-based voices at least, simply by placing the right files into the classpath.\nFor example, to use US English voice `cmu-slt-hsmm` in your own code, add the following jar files to your classpath:\n\n    marytts-server-5.0-jar-with-dependencies.jar\n    marytts-lang-en-5.0.jar\n    voice-cmu-slt-hsmm-5.0.jar\n\nInstead of `marytts-server-5.0-jar-with-dependencies.jar` you can also include the individual dependencies, which can be automated using maven;\nthe source code on github includes examples for doing this in the `user-examples` folder.\n\n### New MaryInterface API\n\nUsing MARY TTS programmatically gets a lot simpler with MARY TTS 5.0 through the new MaryInterface API.\nThe same API can be used to access the TTS components running within the same java process or as a separate client-server setup.\nFor details, see [MaryInterface](https://github.com/marytts/marytts/wiki/MaryInterface).\n\n### Emotion Markup Language support\n\nMARY TTS 5.0 includes an implementation of W3C's [Emotion Markup Language](http://www.w3.org/TR/emotionml/) as a means of requesting expressive synthetic speech.\nThe result of course depends on the expressive capabilities of the selected synthesis voice;\ntry out the EMOTIONML example with the German `dfki-pavoque-styles` voice on the [demo page](http://mary.dfki.de:59125/).\n\n### Modularized code base\n\nThe MARY TTS source code has been modularized for version 5.0.\n\nThe modular structure also makes it easier to see which components belong to a given language:\nsub-projects such as `marytts-lang-de`, `marytts-lang-en` etc. contain all code and data that is language-specific.\nThe updated [New Language Support](https://github.com/marytts/marytts/wiki/New-Language-Support) documentation describes how to create a new language sub-project and integrate it into the system.\n\n### Distributed hosting of installable voices\n\nThe maintenance of the list of installable voices has been decentralized:\nif you build a voice and wish to make it available to others, you can host it somewhere on the net, e.g. on Google Drive, Dropbox or similar.\nFor details, see [Publishing a MARY TTS Voice](https://github.com/marytts/marytts/wiki/Publishing-a-MARY-TTS-Voice).\n\n### New structures for improved code quality\n\nMARY TTS 5.0 mostly results from the aim to establish sound software engineering practices in MARY TTS development.\nAspects of this include:\n\n* the build environment was changed to maven, allowing us to write proper unit and integration tests for the code, and run them at every build;\n* the code base was moved to github, allowing us to work as a distributed team, to develop features in whichever constellations arise, and to merge them into a stable master repository when ready;\n* a Continuous Integration service, kindly provided by [BuildHive](https://buildhive.cloudbees.com/job/marytts/job/marytts/), automatically checks whether the code, and even the latest GitHub pull requests, build OK including all tests passing.\n\nSee [all changes since v4.3.1]\n\n[v4.3.1] (2011-11-30)\n-------------------\n\nThis is a minor release, whose main purpose it is to enable Italian TTS (see below).\nIt also includes small but useful improvements enabling the use of MARY TTS with screen readers on Linux (see below).\n\n### New language: Italian\n\nThanks to the great work by Fabio Tesser and co-workers at ISTC Padova, Italy, we can now make available support for Italian in MARY TTS.\nTo install the Italian voice, first download and install MARY TTS from the link above, then run the MARY Component installer, click \"Update\" to get the list of available languages and voices, and select the Italian Language and the istc-lucia-hsmm voice.\n\n### Improvements\n\nBill Cox has kindly provided a patch resulting in substantial reduction of time-to-audio for HMM-based voices.\nThe key idea is to use the vocoder in streaming mode rather than produce all audio before sending it onwards.\nSince only the socket server, but not the http server, supports streaming audio, you need to use the socket server or a custom integration mechanism to benefit from this improvement.\n\nCritically, however, this has improved the responsiveness of MARY TTS sufficiently to allow using MARY TTS with screen readers on Linux!\n\n### New voices\n\nBill also provided two male US English voices built from Arctic data sets, cmu-rms-hsmm and cmu-bdl-hsmm.\nAccording to him, specifically the rms voice is quite intelligible at high speed (with the speedup done in a post-processing step currently).\n\nSee [all changes since v4.3.0]\n\n[v4.3.0] (2010-12-20)\n-------------------\n\nThis is a feature release, adding new features while maintaining compatibility with existing 4.x voices.\n\nThis release marks the final results of work on MARY TTS in the [PAVOQUE project](http://mary.dfki.de/pavoque/index.html), in which we experimented with different technologies for adding expressivity to unit selection synthesis.\nThe release makes available those project results that may be of interest to a wider audience.\n\n### New features for expressive unit selection synthesis\n\n* selecting style from a multi-style database using a symbolic style feature;\n* imposing target prosody using FD-PSOLA signal modification.\n\nStyle can be selected using RAWMARYXML's `<prosody style=\"...\">` markup (see new expressive voice, below).\n\nProsody modification is available for all unit selection voices, including older ones;\nto activate it, click the checkbox \"Apply prosody modification\" in the [web interface](http://mary.dfki.de:59125/).\nThis feature should be considered experimental, and the quality depends on many factors, including the accuracy of the pitchmarks used for building the unit selection voice.\nWhile this feature is likely to lead to reduced quality, it enables research on expressive prosody with unit selection voices.\n\nFor more information on the MaryXML `<prosody>` markup which can now be applied to all types of MARY voices, see [ProsodySpecificationSupport](http://mary.opendfki.de/wiki/ProsodySpecificationSupport).\n\n### New expressive voice\n\n* we release the multi-style expressive German voice 'dfki-pavoque-styles' (660 MB) built from the full PAVOQUE corpus;\n  see [Steiner et al. (2010)](http://www.dfki.de/web/research/publications?pubid=4877) for a description of this corpus.\n  The different styles can be requested using RAWMARYXML `<prosody style=\"A_STYLE\">...</prosody>`, where `A_STYLE` is one of `happy`, `angry`, `sad`, and `poker`.\n\n### New language: Russian\n\n* Nickolay Shmyrev has kindly made available language support for Russian, as well as the Russian male unit selection voice voxforge-ru-nsh.\nThanks Nickolay!\n\n### Bugfixes\n\n* This release also includes a number of bugfixes, see https://mary.opendfki.de/trac/query?milestone=4.3&group=status&order=priority\n\nSee [all changes since v4.2.0]\n\n[v4.2.0] (2010-12-08)\n-------------------\n\nThis is a feature release, adding new features while maintaining compatibility with existing 4.x voices.\n\nThis release marks the final results of work on MARY TTS in the [SEMAINE project](https://semaine-db.eu/), where our main focus for TTS has been on building expressive British English voices with listener vocalization capabilities.\n\n### New features for synthesis of expressive vocalizations\n\n* Improved support for expressive vocalizations in the British English unit selection voices dfki-poppy, dfki-prudence, dfki-spike and dfki-obadiah.\n  Signal modification is now used to combine intonation contours and segmental forms, as described in [Pammi et al. (2010)](http://www.dfki.de/lt/publication_show.php?id=4886).\n* Added vocalization support to the HMM-based versions of these voices:\n  dfki-poppy-hsmm, dfki-prudence-hsmm, dfki-spike-hsmm and dfki-obadiah-hsmm.\n\nFor details on the new MaryXML `<vocalization>` tag and usage examples, see [VocalizationSynthesis](http://mary.opendfki.de/wiki/VocalizationSynthesis).\n\n### New voice\n\n* For German, we created bits1-hsmm, a female HMM-based voice built from recordings provided by [BITS](http://www.phonetik.uni-muenchen.de/Forschung/BITS/index.html).\n\n### Bugfixes\n\n* This release also includes a number of bugfixes, see https://mary.opendfki.de/trac/query?milestone=4.2&group=status&order=priority\n\nSee [all changes since v4.1.1]\n\n[v4.1.1] (2010-09-09)\n-------------------\n\nThis is a bugfix release.\n\n### Bugfixes\n\n* Fixed a critical bug for Windows users who got an \"OutOfMemoryError\" when trying to start the server with unit selection voices\n    * [#314 Memory mapping causes OutOfMemoryError if -Xmx is set too high](http://mary.opendfki.de/ticket/314)\n* Other small bug fixes -- see https://mary.opendfki.de/trac/query?milestone=4.1.1&group=status&order=priority\n\n### New voices\n\n* Added Telugu HMM-based voice \"cmu-nk-hsmm\".\n\n### More info\n\nFor more background information, please also refer to the [Release notes of MARY 4.1.0](http://mary.dfki.de/download/releasenotes-4.1.0.html).\n\nSee [all changes since v4.1.0]\n\n[v4.1.0] (2010-09-01)\n-------------------\n\nThis is a feature release, adding new features while maintaining compatibility with existing 4.0 voices.\n\n### New features for expressive TTS\n\n* **Prosody control for HMM-based voices.** Using the SSML [`<prosody>` tag](http://www.w3.org/TR/speech-synthesis11/#edef_prosody), it is now possible to control the intonation generated for HMM-based voices from markup.\n  Of particular interest is the \"contour\" attribute, which allows you to change the shape of the intonation curve.\n  For details and examples, see ProsodySpecificationSupport.\n* **Expressive vocalizations** in certain unit selection voices.\n  MaryXML now supports a new `<vocalization>` tag, with which you can request the generation of non-verbal or para-verbal expressions as they are often produced by the listener in a conversation, such as \"yeah\", \"m-hm\", laughter, sigh, etc.\n  For details and examples, see [VocalizationSynthesis](http://mary.opendfki.de/wiki/VocalizationSynthesis).\n\n### New voices\n\n* For British English, we release HMM-based versions of the four voices Poppy, Spike, Obadiah and Prudence.\n* Updated versions of many of the previously existing voices, with improved quality.\n\n### Bugfixes and other improvements\n\n* Faster startup times.\n  MARY 4.1.0 starts nearly twice as fast and needs about 30% less physical memory compared to MARY 4.0.0, due to the use of memory mapping for unit selection voices.\n* Quality of German and English components improved.\n  A number of bugs were fixed which had degraded the quality of the synthesis results in MARY 4.0.0:\n    * [#297 German words spelled out when they shouldn't](http://mary.opendfki.de/ticket/297)\n    * [#273 Several problems with abbreviations in German](http://mary.opendfki.de/ticket/273)\n    * [#308 German compound analysis over-active](http://mary.opendfki.de/ticket/308)\n    * [#287 Abbreviations in German trigger major boundary insertion](http://mary.opendfki.de/ticket/287)\n    * [#304 English support for apostrophies is broken](http://mary.opendfki.de/ticket/304)\n* Multiple bugs were also fixed under the surface.\n  For a full list, see https://mary.opendfki.de/trac/query?milestone=4.x&group=status&order=priority\n  \n### More info\n\nFor more background information, please also refer to the [Release notes of MARY 4.0.0](http://mary.dfki.de/download/releasenotes-4.0.0.html).\n\nSee [all changes since v4.0.0]\n\n[v4.0.0] (2009-12-18)\n-------------------\n\n### What's new\n\nThis is the first stable release of the new 4.0 code.\nMARY 4.0 is a major cleanup over previous versions of MARY TTS.\n\n### Changes since MARY 3.6\n\n* 100% Pure Java.\n  All native libraries have been removed from the system.\n  MARY should now run on any platform that has Java 1.5 or newer.\n* Fully open source.\n  All code is now open source under the [LGPL](http://www.gnu.org/licenses/lgpl-3.0-standalone.html), including German TTS.\n  Voices are distributed under Creative Commons or BSD licenses.\n* Many languages and voices. In addition to several high-quality German and US English voices, this release adds four expressive British English voices built for the [SEMAINE project](http://www.semaine-project.eu/), a Turkish and a Telugu voice.\n  Also, we have made it easy to add more languages and voices in the future.\n* New component installer.\n  New languages and voices can be installed using a new component installer tool.\n  If new languages and/or voices are made available for download, they can be installed without having to re-install the full system.\n\nMARY now comes with a toolkit for people who want to add support for new languages or build their own voices.\nThere is detailed documentation for\n\n* [creating initial support for a new language](http://mary.opendfki.de/wiki/NewLanguageSupport);\n* [recording and building a unit selection voice](http://mary.opendfki.de/wiki/VoiceImportToolsTutorial); and\n* [creating an HMM-based voice](https://mary.opendfki.de/trac/wiki/HMMVoiceCreation) from the same recordings.\n\n### Changes since MARY 4.0 beta\n\n* New British English expressive voices.\n  We are releasing the voices of four expressive characters built for the [SEMAINE project](https://semaine-db.eu/).\n* Improved Installer.\n  You can now install downloaded components without requiring an internet connection at install time.\n  The Installer handles updates of language and voice components correctly.\n* Improved German pronounciation.\n  Several thousand words were added to the pronounciation lexicon, bringing the total number of German transcriptions to over 26,000.\n  Some bugs were fixed in the transcription of unknown words, making the synthesis of German more reliable.\n* Added MBROLA voices.\n  There are still many people who use MARY with MBROLA diphone voices because of the control over prosody that they provide.\n  Therefore we have added MBROLA voices to this release.\n  They can be installed like the other voices through the MARY component installer.\n* Voice creation tools were simplified.\n  The handling of external programs needed, in particular, for the creation of HMM-based voices was simplified.\n  We provide a script now that you can use to find or, if necessary, download and compile third-party software required for training HMM-based voices.\n\nMore details on individual issues addressed can be seen in the [list of tickets associated with this release](https://mary.opendfki.de/trac/query?milestone=4.0&group=status&order=priority) and in the [list of tickets associated with the 4.0 beta release](https://mary.opendfki.de/trac/query?milestone=4.0+beta&group=status&order=priority).\n\n### Tested environments\n\nThe MARY client and server code was tested on:\n\n* Mac OS X (Intel) 10.5.8 with java 1.6.0_07\n* Ubuntu Linux 8.10 and 9.04 with sun java 1.5, 1.6, and openjdk-6\n* Windows XP and Vista\n\nThe web interface at http://localhost:59125 should work with any recent browser that supports AJAX.\nWe have obtained best results with:\n\n* Firefox 3.5 with built-in audio support\n* Firefox 3.0, Internet Explorer 6 and 7, Safari 4, with Quicktime plugin\n\n### Known issues\n\n* On Ubuntu Linux with sun java 1.5 and 1.6, we observed a problem with audio playback in the MARY client:\n  the final section is cut off.\n  With openjdk-6, it works ok.\n* On Ubuntu Linux 8.10 with the builtin Firefox 3.0, the audio plugin doesn't work properly.\n* Web interface in the browser Chrome suboptimal:\n  Chrome does not seem to handle the HTML 5 `<audio>` tag correctly.\n  It claims it can handle it, but then doesn't play audio.\n  Click on \"Save audio file\" to get the raw audio data.\n\n### Bug reports\n\nThanks to user feedback, we have fixed a number of bugs found in the beta release.\nWe are therefore confident that the system is ready for production use.\nNevertheless it is likely that new bugs will appear in new circumstances.\n\nIf you think you have identified a bug, proceed as follows:\n\n1. Check in the [list of known bugs](https://mary.opendfki.de/trac/query?milestone=4.0&group=status&order=priority) whether the bug has been reported already;\n2. If you cannot find it, prepare your request to the mailing list.\n   Try to find out exactly:\n    * what to do to reproduce the error;\n    * expected behaviour;\n3. Then send an informative email as described in the [FAQ](http://mary.opendfki.de/wiki/FrequentlyAskedQuestions#bugreport).\n\n### Contributions\n\nPeople interested in adding support for a language can get in touch, e.g. via the [MARY developers mailing list](http://www.dfki.de/mailman/listinfo/mary-dev).\n\nSee [all changes since v4.0-beta]\n\n[v4.0-beta] (2009-09-24)\n-------------------\n\n### What's new\n\nThis is a first beta release of the new 4.0 code.\nMARY 4.0 is a major cleanup over previous versions of MARY TTS.\n\n* 100% Pure Java.\n  All native libraries have been removed from the system.\n  MARY should now run on any platform that has Java 1.5 or newer.\n* Fully open source.\n  All code is now open source under the [LGPL](http://www.gnu.org/licenses/lgpl-3.0-standalone.html), including German TTS.\n  Voices are distributed under Creative Commons or BSD licenses.\n* New languages.\n  We have added Turkish and Telugu synthesis for now, and have made it easy to add more languages in the future.\n\nMARY now comes with a toolkit for people who want to add support for new languages or build their own voices. There is detailed documentation for\n\n* [creating initial support for a new language](http://mary.opendfki.de/wiki/NewLanguageSupport);\n* [recording and building a unit selection voice](http://mary.opendfki.de/wiki/VoiceImportToolsTutorial); and\n* [creating an HMM-based voice](https://mary.opendfki.de/trac/wiki/HMMVoiceCreation) from the same recordings.\n\nMore details on individual issues addressed can be seen in the [list of tickets associated with this release](https://mary.opendfki.de/trac/query?milestone=4.0+beta&group=status&order=priority).\n\n### Tested environments\n\nThe MARY client and server code was tested on:\n\n* Mac OS X (Intel) 10.5.8 with java 1.6.0_07\n* Ubuntu Linux 8.10 and 9.04 with sun java 1.5, 1.6, and openjdk-6\n* Windows XP and Vista\n\nThe web interface at http://localhost:59125 should work with any recent browser that supports AJAX.\nWe have obtained best results with:\n\n* Firefox 3.5 with built-in audio support\n* Firefox 3.0, Internet Explorer 6 and 7, Safari 4, with Quicktime plugin\n\n### Known issues\n\n* On Ubuntu Linux with sun java 1.5 and 1.6, we observed a problem with audio playback in the MARY client:\n  the final section is cut off. With openjdk-6, it works ok.\n* On Ubuntu Linux 8.10 with the builtin Firefox 3.0, the audio plugin doesn't work properly.\n* Web interface in the browser Chrome suboptimal:\n  Chrome does not seem to handle the HTML 5 `<audio>` tag correctly.\n  It claims it can handle it, but then doesn't play audio.\n  Click on \"Save audio file\" to get the raw audio data.\n\n### Bug reports\n\nThis is beta software.\nIt is not yet ready for production use.\nYou are likely to find problems, and we would appreciate if you tell us about it.\n\nIf you think you have identified a bug, proceed as follows:\n\n1. Check in the [list of known bugs](https://mary.opendfki.de/trac/query?milestone=4.0&group=status&order=priority) whether the bug has been reported already;\n2. If you cannot find it, create a [new ticket](http://mary.opendfki.de/newticket) containing the following information:\n    * operating system and java version used;\n    * what to do to reproduce the error;\n    * expected behaviour;\n    * detailed log files, i.e. an excerpt of MARY TTS/log/server.log containing the error episode.\n3. Discuss the problem on the [MARY user mailing list](http://www.dfki.de/mailman/listinfo/mary-users).\n\n### Contributions\n\nPeople interested in adding support for a language can get in touch, e.g. via the [MARY developers mailing list](http://www.dfki.de/mailman/listinfo/mary-dev).\n\nSee [all changes since v3.6.0]\n\n[v3.6.0] (2008-05-21)\n-------------------\n\nThis is a minor feature release, providing one important new feature and several bugfixes over previous MARY 3.5.0.\n\n### New feature:\n\n* New tool for creating your own HMM-based voices for MARY (see tutorial at http://mary.opendfki.de/wiki/HMMVoiceCreation)\n  Feedback and questions about building voices in MARY are welcome via the mary-users mailing list (http://www.dfki.de/mailman/listinfo/mary-users).\n\n### Bugfixes:\n\n* Important for many will be that the \"self-healing\" capabilities of the MARY installation are now working again:\n  if you install an English system but a German voice, the system detects a misconfiguration and offers to download and install the missing components, and will start up normally after that.\n* the full list of bugs fixed can be found on http://mary.opendfki.de/query?milestone=3.6\n\nSee [all changes since v3.5.0]\n\n[v3.5.0] (2007-12-07)\n-------------------\n\nThis release provides substantial new features while maintaining the API compatible to previous versions.\n\n### New features include:\n\n* installer slimmed down to just over 30 MB, including some voices;\n* separate voice installer tool, allowing you to download voices comfortably  and with an integrity verification prior to installation;\n* new synthesis technology:\n  Marcela Charfuelan ported the excellent HMM-based synthesis code from the HTS project (http://hts.sp.nitech.ac.jp/) to Java - several HMM-based voices already ship with MARY;\n* audio effects:\n  Oytun Turk implemented a range of audio effects that can be applied to the MARY voices, and can be controlled through the MARYGUIClient;\n* voice creation toolkit:\n  Sathish Chandra Pammi and Anna Hunecke have cleaned up and [documented the tool](http://mary.opendfki.de/wiki/VoiceImportToolsTutorial) we use for building new synthesis voices;\n* voice recording tool \"Redstart\":\n  Mat Wilson has programmed a very nice GUI for recording new voices;\n* OGG Vorbis support:\n  under Linux, the MARY server can now generate audio in OGG Vorbis format.\n\nSee [all changes since v3.1.0]\n\n[v3.1.0] (2007-08-17)\n-------------------\n\nTen months after the last stable release, a major milestone release is finally here:\nMARY 3.1.0.\n\n### Its main features are:\n\n* state of the art unit selection (English and German);\n* support for two more platforms:\n  64 bit Linux and Mac OS X on Intel platforms;\n* a voice creation toolkit (work in progress, see http://mary.opendfki.de/browser/tags/3.1.0/lib/modules/import/README for preliminary documentation if you want to try it out).\n\nThanks to those who have helped test the beta versions!\nAll the problems that we have become aware of should be fixed in this release.\nFor a reasonably complete list of issues addressed in this release, see http://mary.opendfki.de/milestone/3.1.0\n\nShould you come across additional bugs, please post them to the mary-users mailing list (http://www.dfki.de/mailman/listinfo/mary-users).\n\n### Some background info:\n\nThe unit selection code released here has performed better-than-average in this year's Blizzard Challenge (http://www.festvox.org/blizzard/), showing that the system can be considered state-of-the-art.\nFor details, see:\nhttp://festvox.org/blizzard/bc2007/blizzard_2007/full_papers/blz3_007.pdf\n\nThe German voices have been created from the BITS corpora - for details, see:\nhttp://www.dfki.de/dfkibib/publications/docs/schroeder_hunecke2007.pdf\n\nSee also the [full list of bugs fixed](https://mary.opendfki.de/trac/query?group=status&milestone=3.1.0)\n\nSee [all changes since v3.1.beta2]\n\n[v3.1-beta2] (2007-07-15)\n-------------------\n\n### Highlights:\n\n* Four German unit selection voices created from recordings in the BITS project;\n* added acoustic models, which should also improve the English unit selection voices;\n* added support for 64-bit linux and Intel Mac architectures.\n\n### On our to-do list are still many things, including:\n\n* a well-documented and easy-to-use voice creation toolkit;\n* smaller voices by using suitable speech coding for the databases.\n* For more details, see the development page: https://mary.opendfki.de/trac/query?group=status&milestone=3.1.0\n\n### Known issues with this release:\n\n* diphone voices are basically broken. Don't install this version if you want to use diphone voices.\n* only very limited testing on various platforms. Please report any errors you may find!\n\nSee [all changes since v3.1-beta1]\n\n[v3.1-beta1] (2006-12-13)\n-------------------\n\nFirst beta release of the new unit selection code.\nTry the new slt-arctic, bdl-arctic and jmk-arctic voices!\n\nFor some details of what has been done and what still needs to be done for the stable release, see the [full list of issues](https://mary.opendfki.de/trac/query?milestone=3.1.0&group=status&order=priority) on the development portal.\n\nSee [all changes since v3.0.3]\n\n[v3.0.3] (2006-10-27)\n-------------------\n\nThird bugfix release.\nMost relevant changes:\n\n* fixed standalone mode for running MARY ([ticket 80](http://mary.opendfki.de/ticket/80))\n* improved control over prosody using ToBI tags (tickets [59](http://mary.opendfki.de/ticket/59), [60](http://mary.opendfki.de/ticket/60))\n* Several minor improvements of German synthesis (tickets [44](http://mary.opendfki.de/ticket/44), [49](http://mary.opendfki.de/ticket/49), [57](http://mary.opendfki.de/ticket/57), [78](http://mary.opendfki.de/ticket/78))\n* MBROLA to AUDIO conversion fixed (tickets [54](http://mary.opendfki.de/ticket/54), [55](http://mary.opendfki.de/ticket/55))\n\nAn update is recommended only if you encountered one of these bugs.\n\nSee also the [full list of bugs fixed](https://mary.opendfki.de/trac/query?group=status&milestone=3.0.3)\n\nSee [all changes since v3.0.2]\n\n[v3.0.2] (2006-07-04)\n-------------------\n\nSecond bugfix release.\nA number of bugs have been fixed, including:\n\n* WAV audio can now (really) be saved with proper audio headers ([ticket 38](http://mary.opendfki.de/ticket/38))\n* several bugs related to failing validation of intermediate processing results (due to an outdated MaryXML Schema) were fixed (tickets [40](http://mary.opendfki.de/ticket/40), [41](http://mary.opendfki.de/ticket/41), [43](http://mary.opendfki.de/ticket/43))\n* Synthesizing APML was improved (tickets [51](http://mary.opendfki.de/ticket/51), [52](http://mary.opendfki.de/ticket/52))\n* Pronunciation for German compounds was improved ([ticket 36](http://mary.opendfki.de/ticket/36))\n\nAn update is recommended if you encountered one of these bugs.\n\nSee also the [full list of bugs fixed](https://mary.opendfki.de/trac/query?group=status&milestone=3.0.2)\n\nSee [all changes since v3.0.1]\n\n[v3.0.1] (2006-03-07)\n-------------------\n\nFirst bugfix release.\nA number of bugs have been fixed which have occurred after the initial release.\nMost relevant:\n\n* Audio can now be saved with proper audio headers ([ticket 32](http://mary.opendfki.de/ticket/32))\n* Mary GUI client is now accessible via the keyboard ([ticket 3](http://mary.opendfki.de/ticket/3))\n\nAn update is recommended.\n\nSee also the [full list of bugs fixed](https://mary.opendfki.de/trac/query?group=status&milestone=3.0.1)\n\nSee [all changes since v3.0.0]\n\n\n[v3.0.0] (2006-02-14)\n-------------------\n\nThis is the first open-source release.\nWe have put in a lot of effort to test and debug it, but of course the system may have some teething problems.\nPlease help us improve the system by submitting [bug reports](http://mary.opendfki.de/newticket) on the [OpenMary development page](http://mary.opendfki.de/).\n\n[Unreleased]: https://github.com/marytts/marytts/tree/master\n[all changes since v5.2.1]: https://github.com/marytts/marytts/compare/v5.2.1...HEAD\n[v5.2.1]: https://github.com/marytts/marytts/releases/tag/v5.2.1\n[all changes since v5.2]: https://github.com/marytts/marytts/compare/v5.2...v5.2.1\n[v5.2]: https://github.com/marytts/marytts/releases/tag/v5.2\n[all changes since v5.1.2]: https://github.com/marytts/marytts/compare/v5.1.2...v5.2\n[v5.1.2]: https://github.com/marytts/marytts/releases/tag/v5.1.2\n[all changes since v5.1.1]: https://github.com/marytts/marytts/compare/v5.1.1...v5.1.2\n[v5.1.1]: https://github.com/marytts/marytts/releases/tag/v5.1.1\n[all changes since v5.1]: https://github.com/marytts/marytts/compare/v5.1...v5.1.1\n[v5.1]: https://github.com/marytts/marytts/releases/tag/v5.1\n[all changes since v5.0]: https://github.com/marytts/marytts/compare/v5.0...v5.1\n[v5.0]: https://github.com/marytts/marytts/releases/tag/v5.0\n[all changes since v4.3.1]: https://github.com/marytts/marytts/compare/v4.3.1...v5.0\n[v4.3.1]: https://github.com/marytts/marytts/releases/tag/v4.3.1\n[all changes since v4.3.0]: https://github.com/marytts/marytts/compare/v4.3.0...v4.3.1\n[v4.3.0]: https://github.com/marytts/marytts/releases/tag/v4.3.0\n[all changes since v4.2.0]: https://github.com/marytts/marytts/compare/v4.2.0...v4.3.0\n[v4.2.0]: https://github.com/marytts/marytts/releases/tag/v4.2.0\n[all changes since v4.1.1]: https://github.com/marytts/marytts/compare/v4.1.1...v4.2.0\n[v4.1.1]: https://github.com/marytts/marytts/releases/tag/v4.1.1\n[all changes since v4.1.0]: https://github.com/marytts/marytts/compare/v4.1.0...v4.1.1\n[v4.1.0]: https://github.com/marytts/marytts/releases/tag/v4.1.0\n[all changes since v4.0.0]: https://github.com/marytts/marytts/compare/v4.0.0...v4.1.0\n[v4.0.0]: https://github.com/marytts/marytts/releases/tag/v4.0.0\n[all changes since v4.0-beta]: https://github.com/marytts/marytts/compare/v4.0beta...v4.0.0\n[v4.0-beta]: https://github.com/marytts/marytts/releases/tag/v4.0beta\n[all changes since v3.6.0]: https://github.com/marytts/marytts/compare/v3.6.0...v4.0beta\n[v3.6.0]: https://github.com/marytts/marytts/releases/tag/v3.6.0\n[all changes since v3.5.0]: https://github.com/marytts/marytts/compare/v3.5.0...v3.6.0\n[v3.5.0]: https://github.com/marytts/marytts/releases/tag/v3.5.0\n[all changes since v3.1.0]: https://github.com/marytts/marytts/compare/v3.1.0...v3.5.0\n[v3.1.0]: https://github.com/marytts/marytts/releases/tag/v3.1.0\n[all changes since v3.1.beta2]: https://github.com/marytts/marytts/compare/v3.1beta2...v3.1.0\n[v3.1-beta2]: https://github.com/marytts/marytts/releases/tag/v3.1beta2\n[all changes since v3.1-beta1]: https://github.com/marytts/marytts/compare/v3.1beta1...v3.1beta2\n[v3.1-beta1]: https://github.com/marytts/marytts/releases/tag/v3.1beta1\n[all changes since v3.0.3]: https://github.com/marytts/marytts/compare/v3.0.3...v3.1beta1\n[v3.0.3]: https://github.com/marytts/marytts/releases/tag/v3.0.3\n[all changes since v3.0.2]: https://github.com/marytts/marytts/compare/v3.0.2...v3.0.3\n[v3.0.2]: https://github.com/marytts/marytts/releases/tag/v3.0.2\n[all changes since v3.0.1]: https://github.com/marytts/marytts/compare/v3.0.1...v3.0.2\n[v3.0.1]: https://github.com/marytts/marytts/releases/tag/v3.0.1\n[all changes since v3.0.0]: https://github.com/marytts/marytts/compare/v3.0.0...v3.0.1\n[v3.0.0]: https://github.com/marytts/marytts/releases/tag/v3.0.0\n[MaryTTS]: https://github.com/marytts/marytts"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 3.021484375,
          "content": "MaryTTS Software User Agreement\n===============================\n\n*26 January 2014*\n\nMaryTTS licensing\n-----------------\n\nMaryTTS is licensed under the following terms.\n\nThis program is free software: you can redistribute it and/or modify it under\nthe terms of the GNU Lesser General Public License as published by the Free\nSoftware Foundation, version 3 of the License.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY\nWARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A\nPARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License along\nwith this program.  If not, see <http://www.gnu.org/licenses/>.\n\nApplicable Licenses\n-------------------\n\nMaryTTS is built upon a number of other open source technologies and\nproducts. Here is a list of those products with links to their licenses.\n\n* **hts_engine:** the HMM-based speech synthesis code in MaryTTS is based on\n  HTS, ported to Java by DFKI. The original HTS can be obtained from\n  http://hts-engine.sourceforge.net/ -- it is released under the New and\n  Simplified BSD License.\n* **JTok:** The JTok tokenizer from http://heartofgold.dfki.de is distributed\n  under the GNU Lesser General Public License, see http://www.gnu.org or\n  doc/licenses/LGPL.txt.\n* **jsresources.jar:** A few utility classes from http://www.jsresources.org are\n  distributed under the terms of the jsresources license, see\n  doc/licenses/jsresources-license.txt.\n* **log4j:** MaryTTS uses log4j (http://logging.apache.org/log4j) as a logging\n  mechanism. log4j is distributed under the Apache Software License, see\n  http://www.apache.org or doc/licenses/apache-software-license.txt\n* **JUnit:** For unit testing of the java source, MaryTTS uses JUnit\n  (http://junit.org). JUnit is licensed under the Common Public License, see\n  http://junit.org or doc/licenses/CPL.txt.\n* **java-diff:** A java diff implementation from\n  http://www.incava.org/projects/java-diff for input-output-comparisons in the\n  MaryTTS Expert Interface. java-diff is licensed under the GNU Lesser General\n  Public License, see http://www.gnu.org or doc/licenses/LGPL.txt.\n* **fast-md5:** A fast md5 checksum implementation from\n  http://www.twmacinta.com/myjava/fast_md5.php used for computing checksums\n  after downloading voices. fast-md5 is licensed under the GNU Lesser General\n  Public License, see http://www.gnu.org or doc/licenses/LGPL.txt.\n* **mwdumper:** A tool for extracting sets of pages from a MediaWiki dump\n  file. mwdumper is MIT-style like licensed, see\n  http://www.mediawiki.org/wiki/Mwdumper and for the license\n  http://en.wikipedia.org/wiki/MIT_License. (files concerned:\n  **mwdumper-2008-04-13.jar**)\n* **sgt:** The Scientific Graphics Toolkit (sgt) is provided by the\n  NOAA/PMEL/EPIC group (see http://www.epic.noaa.gov/java/sgt/) under the\n  BSD-style EPIC license, see doc/licenses/epic-license.txt.\n\n**IT IS YOUR OBLIGATION TO READ AND ACCEPT ALL SUCH TERMS AND CONDITIONS PRIOR\n  TO USE OF THIS CONTENT.**\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.57421875,
          "content": "[![CI](https://github.com/marytts/marytts/actions/workflows/main.yml/badge.svg)](https://github.com/marytts/marytts/actions/workflows/main.yml)\n\n# MaryTTS\n\nThis is the source code repository for the multilingual open-source MARY text-to-speech platform (MaryTTS).\nMaryTTS is a client-server system written in pure Java, so it runs on many platforms.\n\n**For a downloadable package ready for use, see [the releases page](https://github.com/marytts/marytts/releases).**\n\nOlder documentation can also be found at https://github.com/marytts/marytts-wiki, http://mary.dfki.de and https://mary.opendfki.de.\n\nThis README is part of the the MaryTTS source code repository.\nIt contains information about compiling and developing the MaryTTS sources.\n\nThe code comes under the Lesser General Public License LGPL version 3 -- see LICENSE.md for details.\n\n\n## Running MaryTTS\n\nRun `./gradlew run`  (or `gradlew.bat run` on Windows) to start a MaryTTS server.\nThen access it at http://localhost:59125 using your web browser.\n\nIf you want to start a MaryTTS on a different address and port, you can use the following options:\n\n```sh\n./gradlew run -Dsocket.port=5920 -Dsocket.addr=0.0.0.0 --info\n```\nwhere 5920 is the new port and 0.0.0.0 the new address. In case of the address being 0.0.0.0, all the interfaces will be listened.\n\nBy using the option `--info`, you set the logger of `gradle` *AND* MaryTTS at the level INFO. By using `--debug`, you set the level to DEBUG.\n\nIt is also possible to set the MaryTTS logger level to `INFO` or `DEBUG` by defining the system variable `log4j.logger.marytts`.\n\n## Downloading and installing voices\n\nRun `./gradlew runInstallerGui` to start an installer GUI to download and install more voices.\nA running MaryTTS server needs to be restarted before the new voices can be used.\n\n\n## Building MaryTTS\n\nRun `./gradlew build`.\nThis will compile and test all modules, and create the output for each under `build/`.\n\nNote that previously, MaryTTS v5.x was built with Maven. Please refer to the [**5.x branch**](https://github.com/marytts/marytts/tree/5.x).\n\n\n## Packaging MaryTTS\n\nRun `./gradlew distZip` or `./gradlew distTar` to build a distribution package under `build/distributions`.\nYou can also \"install\" an unpacked distribution directly into `build/install` by running `./gradlew installDist`.\n\nThe distribution contains all the files required to run a standalone MaryTTS server instance, or to download and install more voices.\nThe scripts to run the server or installer GUI can be found inside the distribution in the `bin/` directory.\n\n\n##  Using MaryTTS in your own Java projects\n\nThe easiest way to use MaryTTS in your own Java projects is to declare a dependency on a relevant MaryTTS artifact, such as the default US English HSMM voice:\n\n### Maven\n\nAdd to your `pom.xml`:\n```xml\n<repositories>\n  <repository>\n    <url>https://raw.githubusercontent.com/DFKI-MLT/Maven-Repository/main</url>\n  </repository>\n</repositories>\n\n<dependencies>\n  <dependency>\n    <groupId>de.dfki.mary</groupId>\n    <artifactId>voice-cmu-slt-hsmm</artifactId>\n    <version>5.2.1</version>\n  </dependency>\n</dependencies>\n```\n\n### Gradle\n\nAdd to your `build.gradle`:\n```groovy\nrepositories {\n   mavenCentral()\n\n   exclusiveContent {\n      forRepository {\n         maven {\n            url 'https://raw.githubusercontent.com/DFKI-MLT/Maven-Repository/main'\n         }\n      }\n      filter {\n         includeGroup 'de.dfki.lt.jtok'\n      }\n   }\n}\n\ndependencies {\n   implementation group: 'de.dfki.mary', name: 'voice-cmu-slt-hsmm', version: '5.2.1'\n}\n```\n\n\n## Synthesizing speech\n\nText to wav basic examples are proposed in this repository\n- Maven: https://github.com/marytts/marytts-txt2wav/tree/maven\n- Gradle: https://github.com/marytts/marytts-txt2wav/tree/gradle\n\n\n## Using MaryTTS for other programming languages\n\nIf you want to use MaryTTS for other programming languages (like python for example), you need to achieve 3 steps\n\n1. compiling marytts\n2. starting the server\n3. query synthesis on the server\n\n\n### Synthesize speech using the server\n\nSynthesizing speech, using the server, is pretty easy.\nYou need to generate proper HTTP queries and deal with the associated HTTP responses.\nExamples are proposed :\n- python 3: https://github.com/marytts/marytts-txt2wav/tree/python\n- shell: https://github.com/marytts/marytts-txt2wav/tree/sh\n\n## Extra documentation\n\n### Server as service (Linux specific)\n\nAn example of how to define marytts server as service is proposed [here](./src/main/dist/misc/marytts.server).\n\n### User dictionaries\n\nYou can extend the dictionaries by adding a user dictionary. The documentation of how to do it is [here](./src/main/dist/user-dictionaries/README.md).\n\n## Contributing\n\nThe recommended workflow for making contributions to the MaryTTS source code is to follow the GitHub model:\n\n1. fork the MaryTTS repository into your own profile on GitHub, by navigating to https://github.com/marytts/marytts and clicking \"fork\" (of course you need a GitHub account);\n\n2. use the `git clone`, `commit`, and `push` commands to make modifications on your own marytts repository;\n   in this process, make sure to `git pull upstream master` regularly to stay in sync with latest developments on the master repo;\n\n3. when you think a reusable contribution is ready, open a \"pull request\" on GitHub to allow for easy merging into the master repository.\n\nHave a look at the [GitHub documentation](http://help.github.com/) for further details.\n\n\n### IDE configuration\n\nWiki pages are available to help you to configure your IDE to develop MaryTTS.\nThe following IDEs have been tested and documented:\n\n- IntelliJ IDEA\n- Eclipse: https://github.com/marytts/marytts/wiki/Eclipse\n"
        },
        {
          "name": "applicationLogic.gradle",
          "type": "blob",
          "size": 3.8154296875,
          "content": "apply plugin: 'application'\n\nrepositories {\n    exclusiveContent {\n        forRepository {\n            maven {\n                url 'https://raw.githubusercontent.com/DFKI-MLT/Maven-Repository/main'\n            }\n        }\n        filter {\n            includeGroup 'de.dfki.lt.jtok'\n        }\n    }\n}\n\ndependencies {\n    runtimeOnly project(':marytts-runtime')\n    runtimeOnly project(':marytts-languages').subprojects\n    runtimeOnly project(':voice-cmu-slt-hsmm')\n}\n\nmainClassName = 'marytts.server.Mary'\n\nrun {\n    dependsOn installDist\n\n    // Define \"mary.base\"\n    systemProperties << ['mary.base': installDist.destinationDir]\n\n    // Forward server variables\n    if (\"socket.addr\" in System.properties) {\n        systemProperties << ['socket.addr': System.properties[\"socket.addr\"]]\n    }\n    if (\"socket.port\" in System.properties) {\n        systemProperties << ['socket.port': System.properties[\"socket.port\"]]\n    }\n\n    // Forward logger variables\n    if (logger.isEnabled(LogLevel.INFO)) {\n        systemProperties << ['log4j.logger.marytts': 'INFO,stderr']\n    }\n    if (logger.isEnabled(LogLevel.DEBUG)) {\n        systemProperties << ['log4j.logger.marytts': 'DEBUG,stderr']\n    }\n\n    // Override logger\n    if (\"log4j.logger.marytts\" in System.properties) {\n        systemProperties << [\"log4j.logger.marytts\": System.properties[\"log4j.logger.marytts\"]]\n    }\n\n\n    doFirst {\n        classpath += fileTree(installDist.destinationDir).include('lib/voice-*.jar', 'lib/marytts-lang-*.jar')\n    }\n}\n\ntask runInstallerGui(type: JavaExec) {\n    group 'Application'\n    description 'Runs the MaryTTS Installer GUI as a JVM application'\n    dependsOn installDist\n    classpath run.classpath\n    mainClass = 'marytts.tools.install.InstallerGUI'\n    systemProperties << ['mary.base': installDist.destinationDir]\n}\n\ndistributions {\n    main {\n        contents {\n            from 'download', {\n                into 'download'\n            }\n            from 'LICENSE.md'\n        }\n    }\n}\n\ndistTar {\n    compression = Compression.BZIP2\n    archiveExtension = 'tar.bz2'\n}\n\nstartScripts {\n    applicationName = 'marytts-server'\n}\n\ntask installerGuiStartScripts(type: CreateStartScripts) {\n    applicationName = 'marytts-component-installer'\n    outputDir = startScripts.outputDir\n    classpath = startScripts.classpath\n    mainClass = 'marytts.tools.install.InstallerGUI'\n    startScripts.finalizedBy it\n}\n\ntasks.named('distTar').configure {\n    dependsOn installerGuiStartScripts\n}\n\ntasks.named('distZip').configure {\n    dependsOn installerGuiStartScripts\n}\n\ntasks.withType(CreateStartScripts) {\n    group 'Distribution'\n    description startScripts.description\n    doLast {\n        // hack mary.base property into DEFAULT_JVM_OPTS\n        unixScript.text = unixScript.text.replaceAll('DEFAULT_JVM_OPTS=\"\"', 'DEFAULT_JVM_OPTS=\"-Dmary.base=\\\\$APP_HOME\"')\n        windowsScript.text = windowsScript.text.replaceAll('set DEFAULT_JVM_OPTS=', 'set DEFAULT_JVM_OPTS=\"-Dmary.base=%APP_HOME%\"')\n        // hack classpath\n        unixScript.text = unixScript.text.replaceAll('-classpath \"\\\\\\$CLASSPATH\"', '-classpath \"\\\\\\$APP_HOME/lib/*\\\"')\n        windowsScript.text = windowsScript.text.replaceAll('-classpath \"%CLASSPATH%\"', '-classpath \"%APP_HOME%\\\\\\\\lib\\\\\\\\*\"')\n    }\n}\n\ninstallDist {\n    preserve {\n        include 'download/*', 'installed/*', 'lib/**'\n    }\n}\n\ndef testStartScriptsTask = tasks.register('testStartScripts') {\n    dependsOn tasks.withType(CreateStartScripts)\n    doLast {\n        tasks.withType(CreateStartScripts).each { startScriptTask ->\n            def unixScript = startScriptTask.unixScript\n            def lastClasspathLine = unixScript.readLines().findAll { it.contains('-classpath') }.last()\n            assert lastClasspathLine =~ '\\\\\\$APP_HOME/lib/*': \"$unixScript does not contain expected classpath\"\n        }\n    }\n}\n\ntasks.named('check') {\n    dependsOn testStartScriptsTask\n}\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.40625,
          "content": "plugins {\n    id 'base'\n}\n\nallprojects {\n    group 'de.dfki.mary'\n    version '5.3-SNAPSHOT'\n\n    repositories {\n        mavenCentral()\n    }\n}\n\napply from: 'applicationLogic.gradle'\napply from: 'publishLogic.gradle'\n\ncomponents.java {\n    withVariantsFromConfiguration(configurations.sourcesElements) {\n        skip()\n    }\n    withVariantsFromConfiguration(configurations.javadocElements) {\n        skip()\n    }\n}\n"
        },
        {
          "name": "buildLogic.gradle",
          "type": "blob",
          "size": 0.236328125,
          "content": "apply plugin: 'java-library'\n\nsourceCompatibility = 1.8\n\ntasks.withType(JavaCompile) {\n    options.encoding = 'UTF-8'\n    options.compilerArgs << '-Xlint:unchecked'\n    options.deprecation = true\n}\n\njavadoc {\n    options.encoding = 'UTF-8'\n}\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "download",
          "type": "tree",
          "content": null
        },
        {
          "name": "gpl-3.0.txt",
          "type": "blob",
          "size": 34.32421875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.2978515625,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\nAPP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045 \n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045 \n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n# Collect all arguments for the java command;\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n#     shell script including quotes and variable substitutions, so put them in\n#     double quotes to make sure that they get re-expanded; and\n#   * put everything else in single quotes, so that it's not re-expanded.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.7109375,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "lgpl-3.0.txt",
          "type": "blob",
          "size": 7.4609375,
          "content": "\t\t   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions. \n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version. \n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "marytts-assembly",
          "type": "tree",
          "content": null
        },
        {
          "name": "marytts-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "marytts-languages",
          "type": "tree",
          "content": null
        },
        {
          "name": "marytts-runtime",
          "type": "tree",
          "content": null
        },
        {
          "name": "marytts-signalproc",
          "type": "tree",
          "content": null
        },
        {
          "name": "publishLogic.gradle",
          "type": "blob",
          "size": 5.955078125,
          "content": "apply plugin: 'maven-publish'\n\njava {\n    withSourcesJar()\n    withJavadocJar()\n}\n\npublishing {\n    publications {\n        mavenJava(MavenPublication) {\n            from components.java\n            pom {\n                name = 'MaryTTS'\n                description = 'An open-source, multilingual Text-to-Speech Synthesis platform written in Java'\n                url = 'http://mary.dfki.de'\n                inceptionYear = '2000'\n                organization {\n                    name = 'DFKI GmbH'\n                    url = 'https://dfki.de/'\n                }\n                licenses {\n                    license {\n                        name = 'GNU Lesser General Public License v3.0'\n                        url = 'https://www.gnu.org/licenses/lgpl-3.0-standalone.html'\n                    }\n                }\n                developers {\n                    developer {\n                        name = 'Sébastien Le Maguer'\n                        url = 'https://github.com/seblemaguer'\n                    }\n                    developer {\n                        name = 'Ingmar Steiner'\n                        url = 'https://github.com/psibre'\n                    }\n                    developer {\n                        name = 'Marc Schröder'\n                        url = 'https://github.com/marc1s'\n                    }\n                }\n                contributors {\n                    contributor {\n                        name = 'Timo Baumann'\n                        url = 'https://github.com/timobaumann'\n                    }\n                    contributor {\n                        name = 'Stefanie Becker'\n                    }\n                    contributor {\n                        name = 'Harald Berthelsen'\n                        url = 'https://github.com/HaraldBerthelsen'\n                    }\n                    contributor {\n                        name = 'Marcela Charfuelan'\n                        url = 'https://github.com/marcelach1'\n                    }\n                    contributor {\n                        name = 'Aitor Martínez Egurcegui'\n                        url = 'https://github.com/aitorme'\n                    }\n                    contributor {\n                        name = 'Paulo Faria'\n                    }\n                    contributor {\n                        name = 'Peter Gilles'\n                        url = 'https://github.com/PeterGilles'\n                    }\n                    contributor {\n                        name = 'Tristan Hamilton'\n                        url = 'https://github.com/munzey'\n                    }\n                    contributor {\n                        name = 'Anna Hunecke'\n                    }\n                    contributor {\n                        name = 'Sacha Krstulović'\n                    }\n                    contributor {\n                        name = 'Giulio Paci'\n                        url = 'https://github.com/giuliopaci'\n                    }\n                    contributor {\n                        name = 'Sathish Chandra Pammi'\n                        url = 'https://github.com/sathishpc'\n                    }\n                    contributor {\n                        name = 'Jonathan Poitz'\n                        url = 'https://github.com/jonathanPoitz'\n                    }\n                    contributor {\n                        name = 'Benjamin Roth'\n                    }\n                    contributor {\n                        name = 'Ali Shah'\n                        url = 'https://github.com/alishah-ahmed'\n                    }\n                    contributor {\n                        name = 'Atta Ur Rehman Shah'\n                        url = 'https://github.com/attacomsian'\n                    }\n                    contributor {\n                        name = 'Nickolay Shmyrev'\n                        url = 'https://github.com/nshmyrev'\n                    }\n                    contributor {\n                        name = 'Jochen Steigner'\n                    }\n                    contributor {\n                        name = 'Maureen Tanuadji'\n                        url = 'https://github.com/mochanz'\n                    }\n                    contributor {\n                        name = 'Fabio Tesser'\n                        url = 'https://github.com/ftesser'\n                    }\n                    contributor {\n                        name = 'Oytun Türk'\n                    }\n                    contributor {\n                        name = 'Mat Wilson'\n                    }\n                    contributor {\n                        name = 'Sotaya Yakubu'\n                        url = 'https://github.com/Rootex'\n                    }\n                }\n                scm {\n                    connection = 'scm:git:https://github.com/marytts/marytts.git'\n                    developerConnection = 'scm:git:git@github.com/marytts/marytts.git'\n                    url = 'https://github.com/marytts/marytts'\n                }\n                issueManagement {\n                    system = 'GitHub'\n                    url = 'https://github.com/marytts/marytts/issues'\n                }\n                ciManagement {\n                    system = 'GitHub Actions'\n                    url = 'https://github.com/marytts/marytts/actions'\n                }\n                distributionManagement {\n                    downloadUrl = 'https://bintray.com/marytts/marytts/marytts'\n                }\n            }\n        }\n    }\n    repositories {\n        maven {\n            name 'Project'\n            url \"$rootProject.buildDir/repo\"\n        }\n        maven {\n            if (version.endsWith('-SNAPSHOT')) {\n                name 'OJO'\n                url 'https://oss.jfrog.org/artifactory/oss-snapshot-local'\n            } else {\n                name 'Bintray'\n                url 'https://api.bintray.com/maven/marytts/marytts/marytts'\n            }\n            credentials {\n                username = findProperty('bintrayUser')\n                password = findProperty('bintrayApiKey')\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 3.517578125,
          "content": "pluginManagement {\n    plugins {\n        id 'de.dfki.mary.component' version '0.3.2'\n    }\n}\ninclude 'marytts-common'\ninclude 'marytts-languages:marytts-lang-de'\ninclude 'marytts-languages:marytts-lang-en'\ninclude 'marytts-languages:marytts-lang-fr'\ninclude 'marytts-languages:marytts-lang-it'\ninclude 'marytts-languages:marytts-lang-lb'\ninclude 'marytts-languages:marytts-lang-ru'\ninclude 'marytts-languages:marytts-lang-sv'\ninclude 'marytts-languages:marytts-lang-te'\ninclude 'marytts-languages:marytts-lang-tr'\ninclude 'marytts-runtime'\ninclude 'marytts-signalproc'\ninclude 'voice-cmu-slt-hsmm'\ndependencyResolutionManagement {\n    versionCatalogs {\n        libs {\n            version('commons-collections', '3.2.2')\n            version('commons-io', '2.17.0')\n            version('commons-lang', '2.6')\n            version('emotionml-checker', '1.2.2')\n            version('guava', '33.3.1-jre')\n            version('hsqldb', '2.7.3')\n            version('httpcore', '4.1')\n            version('icu4j', '66.1')\n            version('jama', '1.0.3')\n            version('jtok', '1.9.3')\n            version('log4j', '2.24.1')\n            version('opennlp-tools', '1.9.2')\n            version('slf4j', '2.0.16')\n            version('swing-layout', '1.0.3')\n            version('trove4j', '2.0.2')\n            library('commons-collections', 'commons-collections', 'commons-collections')\n                    .versionRef('commons-collections')\n            library('commons-io', 'commons-io', 'commons-io')\n                    .versionRef('commons-io')\n            library('commons-lang', 'commons-lang', 'commons-lang')\n                    .versionRef('commons-lang')\n            library('emotionml-checker', 'de.dfki.mary', 'emotionml-checker-java')\n                    .versionRef('emotionml-checker')\n            library('guava', 'com.google.guava', 'guava')\n                    .versionRef('guava')\n            library('httpcore', 'org.apache.httpcomponents', 'httpcore')\n                    .versionRef('httpcore')\n            library('httpcore-nio', 'org.apache.httpcomponents', 'httpcore-nio')\n                    .versionRef('httpcore')\n            library('icu4j', 'com.ibm.icu', 'icu4j')\n                    .versionRef('icu4j')\n            library('jama', 'gov.nist.math', 'jama')\n                    .versionRef('jama')\n            library('jtok-core', 'de.dfki.lt.jtok', 'jtok-core')\n                    .versionRef('jtok')\n            library('log4j-core', 'org.apache.logging.log4j', 'log4j-core')\n                    .versionRef('log4j')\n            library('opennlp-tools', 'org.apache.opennlp', 'opennlp-tools')\n                    .versionRef('opennlp-tools')\n            library('slf4j-log4j12', 'org.slf4j', 'slf4j-log4j12')\n                    .versionRef('slf4j')\n            library('swing-layout', 'org.swinglabs', 'swing-layout')\n                    .versionRef('swing-layout')\n            library('trove4j', 'net.sf.trove4j', 'trove4j')\n                    .versionRef('trove4j')\n        }\n        testLibs {\n            version('fest-assert', '1.4')\n            version('junit', '4.12')\n            version('testng', '7.5')\n            version('xmlunit', '1.6')\n            library('fest-assert', 'org.easytesting', 'fest-assert')\n                    .versionRef('fest-assert')\n            library('junit', 'junit', 'junit')\n                    .versionRef('junit')\n            library('testng', 'org.testng', 'testng')\n                    .versionRef('testng')\n            library('xmlunit', 'xmlunit', 'xmlunit')\n                    .versionRef('xmlunit')\n        }\n    }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "testLogic.gradle",
          "type": "blob",
          "size": 0.6015625,
          "content": "sourceSets {\n    integrationTest {\n        compileClasspath += sourceSets.main.output\n        runtimeClasspath += sourceSets.main.output\n    }\n}\n\nconfigurations {\n    integrationTestImplementation.extendsFrom implementation\n    integrationTestRuntimeOnly.extendsFrom runtimeOnly\n}\n\ntask integrationTest(type: Test) {\n    group 'Verification'\n    description 'Runs the integration tests.'\n    testClassesDirs = sourceSets.integrationTest.output.classesDirs\n    classpath = sourceSets.integrationTest.runtimeClasspath\n    shouldRunAfter test\n}\n\ncheck.dependsOn integrationTest\n\ntasks.withType(Test) {\n    useJUnit()\n}\n"
        },
        {
          "name": "tmp",
          "type": "tree",
          "content": null
        },
        {
          "name": "voice-cmu-slt-hsmm",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}