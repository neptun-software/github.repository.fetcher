{
  "metadata": {
    "timestamp": 1736708589060,
    "page": 883,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zalando/zalenium",
      "stars": 2381,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.01171875,
          "content": "*.sh eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.166015625,
          "content": "*.iml\n.idea\ntarget\ndependency-reduced-pom.xml\nlogs/\nTODO.private.md\nvelocity.log\ndocs/_site\nnode_modules\nerrorShots\n.DS_Store\n.project\nbin/\n\n.classpath\n.settings\n.vscode\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 2.66796875,
          "content": "language: java\njdk:\n  - openjdk8\n\nsudo: required\n\nservices:\n  - docker\n\njobs:\n  include:\n    - stage: Integration and Unit Tests\n      env: step=sauceLabs\n      if: type = pull_request\n      script:\n      - docker pull elgalu/selenium\n      - travis_retry ./run_integration_tests.sh sauceLabs\n\n    - env: step=browserStack\n      if: type = pull_request\n      script:\n        - docker pull elgalu/selenium\n        - travis_retry ./run_integration_tests.sh browserStack\n\n    - env: step=crossBrowserTesting\n      if: type = pull_request\n      script:\n        - docker pull elgalu/selenium\n        - travis_retry ./run_integration_tests.sh crossBrowserTesting\n\n    - env: step=testingBot\n      if: type = pull_request\n      script:\n        - docker pull elgalu/selenium\n        - travis_retry ./run_integration_tests.sh testingBot\n\n    - env: step=lambdaTest\n      if: type = pull_request\n      script:\n        - docker pull elgalu/selenium\n        - travis_retry ./run_integration_tests.sh lambdaTest\n\n    - env: step=dockerCompose\n      if: type = pull_request\n      script:\n      - docker pull elgalu/selenium\n      - curl -L https://github.com/docker/compose/releases/download/1.21.0/docker-compose-`uname -s`-`uname -m` > docker-compose\n      - chmod +x docker-compose\n      - sudo mv docker-compose /usr/local/bin\n      - travis_retry ./run_integration_tests.sh dockerCompose\n\n    - env: step=unitTests\n      script:\n      - sudo apt-get install jq\n      # - wget -O ~/codacy-coverage-reporter-assembly-latest.jar $(curl https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r .assets[0].browser_download_url)\n      - wget -O ~/codacy-coverage-reporter-assembly-latest.jar https://oss.sonatype.org/service/local/repositories/releases/content/com/codacy/codacy-coverage-reporter/2.0.2/codacy-coverage-reporter-2.0.2-assembly.jar\n      - mvn clean package -Pcoverage-report\n      # Report coverage results to Codecov\n      - bash <(curl -s https://codecov.io/bash)\n      # Report coverage results to Codacy\n      - java -cp ~/codacy-coverage-reporter-assembly-latest.jar com.codacy.CodacyCoverageReporter -l Java -r ./target/site/jacoco/jacoco.xml\n\n    - env: step=minikube\n      if: type = pull_request\n      script:\n      - docker pull elgalu/selenium\n      - travis_retry ./kubernetes/minikube-ci-initialize.sh\n      - mvn clean package -Pbuild-docker-image -DskipTests=true\n      - cd target && docker build -t dosel/zalenium:latest . && cd ..\n      - ./kubernetes/start-zalenium-in-minikube.sh\n      - ./run_integration_tests.sh minikube\n\n    - stage: Push Image (only with a tag)\n      if: type != pull_request AND tag IS present\n      script:\n      - ./gen-scm-source.sh\n      - ./push_image.sh\n"
        },
        {
          "name": "Analytics.md",
          "type": "blob",
          "size": 4.4228515625,
          "content": "# Zalenium's Anonymous Aggregate User Behaviour Analytics\nZalenium has begun gathering anonymous aggregate user behaviour analytics and reporting these to Google Analytics. You are notified about this when you start and stop Zalenium.\n\n## Why?\nZalenium is provided free of charge and we don't have direct communication with its users nor time resources to ask directly for their feedback. As a result, we now use anonymous aggregate user analytics to help us understand how Zalenium is being used, the most common used features based on how, where and when people use it. With this information we can prioritize some features over other ones, understand better which Selenium or Docker versions we should support depending on the usage, and get execution exceptions to identify bugs.\n\n## What?\nZalenium's analytics record some shared information for every event:\n\n- The Google Analytics version i.e. `1` (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#v)\n- The Zalenium analytics tracking ID e.g. `UA-88441352` (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#tid)\n- The docker engine ID (which is generated randomly in each docker installation) is used to anonymize each user e.g. `U352:5K7B:GYLE:M3RN:XL4Z:XZNW:63JJ:T3Y4:XYRI:IFDK:FUEF:XIGS`. This is retrieved by getting the `ID:` field after executing `docker info`. This does not allow us to track individual users but does enable us to accurately measure user counts vs. event counts (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#cid)\n- The Google Analytics anonymous IP setting is enabled i.e. `1` (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#aip)\n- The Zalenium application name e.g. `zalenium` (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#an)\n- The Zalenium application version e.g. `zalenium-2.53.1i.jar` (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#av)\n- The Zalenium analytics hit type e.g. `screenview` (https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters#t)\n\nZalenium's analytics records the following different events:\n\n- a `screenview` when you start Zalenium and the options you used to start it. Users and API keys for the cloud testing providers are never recorded. \n- an `event` hit type with the `test_start` event category, the proxy your test is using to run (docker-selenium or Sauce Labs) as action, and the capabilities as event label.\n- an `event` hit type with the `test_stop` event category, the proxy your test is using to run (docker-selenium or Sauce Labs) as action.\n- an `exception` hit type with the `exception` event category, exception description of the exception name and whether the exception was fatal e.g. `1`\n\nWith the recorded information, it is not possible for us to match any particular real user with the anonymized user ID. For example, if you ever reinstall docker, a new ID is generated and this would count as a completely new anonymized user.\n\nAs far as we can tell it would be impossible for Google to match the randomly generated analytics user ID to any other Google Analytics user ID. If Google turned evil the only thing they could do would be to lie about anonymising IP addresses and attempt to match users based on IP addresses.\n\n## When/Where?\nZalenium's analytics are sent throughout Zalenium's execution to Google Analytics over HTTPS.\n\n## Who?\nZalenium's analytics are accessible to Zalenium's current maintainers. Contact [@diemol](https://github.com/diemol) if you are a maintainer and need access.\n\n## How?\nThe code is viewable in:\n* [Zalenium start](./scripts/zalenium.sh#L267)\n* [Zalenium stop](./scripts/zalenium.sh#L98)\n* [Start, stop tests and exceptions](./src/main/java/de/zalando/ep/zalenium/util/GoogleAnalyticsApi.java)\n\nThe code is implemented so it gets executed in a background process, without delaying normal execution. If it fails, it will do it immediately and silently.\n\n## Opting out before starting Zalenium\nZalenium analytics helps us maintainers and leaving it on is appreciated. However, if you want to opt out and not send any information, you can do this by using passing the following parameter at start time:\n\n```sh\n--sendAnonymousUsageInfo false\n```\n\n## Disclaimer\nThis document and the implementation are based on the great idea implemented by [Homebrew](https://github.com/Homebrew/brew/blob/master/docs/Analytics.md)"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1552734375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at leo.gallucci@zalando.de. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.08203125,
          "content": "\n### Hi! This content was moved to https://zalando.github.io/zalenium/#contributing\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 2.078125,
          "content": "## License Information\nCopyright 2016 Zalando SE\n\n\nThis program is subject to the terms of the Apache License, Version 2.0 AND the following amendments on forks and data processing. Thus, this is a Custom Apache 2.0 License, NOT a dual-license model you may choose from.\n\n\nYou can obtain a copy of the license at http://www.apache.org/licenses/LICENSE-2.0\n\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n\n\n## Forks\nAdditionally to Apache-2.0, when you fork this repo you are required to either remove our Google Analytics tracking ID: UA-88441352 or stop usage gathering completely. \n\n\n## Data processing agreement\nBy using this software you agree that the following non-PII (non personally identifiable information) data will be collected, processed and used by Zalando SE for the purpose of improving our test infrastructure tools. Anonymisation with respect of the IP address means that only the first two octets of the IP address are collected. \n\n\nBy using this software you also grant us a nonexclusive, irrevocable, world-wide, perpetual royalty-free permission to use, modify and publish these data for all purposes, internally or publicly, including the right to sub-license said permission rights.\n\n\nWe collect, process and use the following data:\n* Zalenium version\n* Anonymized IP address (only first two octets)\n* Country and city\n* Selected screen resolution\n* Selected timezone\n* System language\n* Chrome nodes count\n* Firefox nodes count\n* Date and time of certain events\n  * Zalenium started\n  * Zalenium stopped\n  * Test duration\n  * Test capabilities\n  * Errors and stacktraces\n* Docker version\n* Docker info fields\n  * Server Version\n  * Kernel Version\n  * Operating System\n  * OSType\n  * Architecture\n  * CPUs\n  * Total Memory\n  * ID\n\n## End of License Information\n\nMore information about anonymized data collection can be seen [here](Analytics.md)"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 0.0986328125,
          "content": "Diego Molina <diemol@gmail.com>\nLeo Gallucci <elgalu3@gmail.com>\nTeam TIP <diemol+team-tip@gmail.com>"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.4892578125,
          "content": "<p align=\"center\">\n  <img id=\"header\" height=\"214\" width=\"500\" src=\"./docs/img/logo_zalenium_wide.png\" />\n\n</p>\n\n[![Build Status](https://travis-ci.org/zalando/zalenium.svg?branch=master)](https://travis-ci.org/zalando/zalenium)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/c719a14f5537488b8fb95d70e27acd5f)](https://www.codacy.com/app/diemol_zalenium/zalenium?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=zalando/zalenium&amp;utm_campaign=Badge_Grade)\n[![codecov](https://codecov.io/gh/zalando/zalenium/branch/master/graph/badge.svg)](https://codecov.io/gh/zalando/zalenium)\n[![GitHub release](https://img.shields.io/github/release/zalando/zalenium.svg)](https://github.com/zalando/zalenium/releases)\n[![Docker Pulls](https://img.shields.io/docker/pulls/dosel/zalenium.svg)](https://hub.docker.com/r/dosel/zalenium/tags/)\n[![Slack](https://img.shields.io/badge/chat-on%20slack-red.svg?logo=slack)](https://seleniumhq.herokuapp.com)\n\n\n# :exclamation: This project is not being developed anymore. We will only reply to issues and to questions in the Zalenium Slack channel.  \n## The last Zalenium release was [3.141.59z](https://github.com/zalando/zalenium/releases/tag/3.141.59z)\n### From now on, we will spend our time just replying to new issues and answering questions at the Zalenium Slack channel. \n### Unfortunately, no new maintainers were found and this project won't be developed anymore.\n### The most relevant features from Zalenium are being/will be implemented in the upstream Grid 4.x, keep an eye on https://github.com/seleniumhq/docker-selenium/. You could migrate to this project in the near future.\n### We want to truly thank all of our users for making this a great project, helping us spread the word and improve the testing community ❤️ This project was made for the community and by the community!\n\n\n--- \n\n\nThis is a Selenium Grid extension to scale your local grid dynamically with docker containers. It uses\n[docker-selenium](https://github.com/elgalu/docker-selenium) to run your tests in Firefox and Chrome locally, if you\nneed a different browser, your tests can get redirected to a cloud testing provider ([Sauce Labs](https://saucelabs.com/), \n[BrowserStack](https://www.browserstack.com/), [TestingBot](https://testingbot.com/), [CrossBrowserTesting](https://crossbrowsertesting.com/), [LambdaTest](https://www.lambdatest.com/)). Zalenium also works out of the box\nin [Kubernetes](https://zalando.github.io/zalenium/#kubernetes).\n\nZalenium's maintainers add new features regularly. We invite you to test it, report bugs, suggest any ideas you may\nhave, and contribute. See our [contributing guidelines](https://zalando.github.io/zalenium/#contributing) for more details.\n\n### Why?\n\n> Thanks for open sourcing this. Our test suite run time has dropped from more than an hour to six minutes. — [@TKueck](https://twitter.com/Tkueck/status/887425829273088000)\n\nWe know how complicated it is to:\n* Have a stable grid to run UI tests with Selenium\n* Maintain it over time (keep up with new browser, Selenium and drivers versions)\n* Provide capabilities to cover all browsers and platforms\n\nThat is why we took this approach where [docker-selenium](https://github.com/elgalu/docker-selenium) nodes are\ncreated on demand. Your UI tests in Firefox and Chrome will run faster because they are running on a local grid,\non a node created from scratch and disposed after the test completes.\n\nIf you need a capability that cannot be fulfilled by [docker-selenium](https://github.com/elgalu/docker-selenium),\nthe test gets redirected to a cloud testing provider ([Sauce Labs](https://saucelabs.com/),\n[BrowserStack](https://www.browserstack.com/), [TestingBot](https://testingbot.com/), [CrossBrowserTesting](https://crossbrowsertesting.com/), [LambdaTest](https://www.lambdatest.com/)).\n\nZalenium's main goal is: to allow anyone to have a disposable and flexible Selenium Grid infrastructure.\n\nPart of the idea comes from this [Sauce Labs post](https://saucelabs.com/blog/introducing-the-sauce-plugin-for-selenium-grid).\n\n### What does **Zalenium** mean?\nAs you can imagine, it is the result of mixing _[Zalando](https://tech.zalando.com)_ and _[Selenium](http://www.seleniumhq.org/)_.\nAs mentioned before, this project's aim is to provide a simple way to create a grid and contribute to the Selenium community.\nNevertheless, this is _**not**_ an official [Selenium](http://www.seleniumhq.org/) project. We kindly ask you to create\n[issues](https://github.com/zalando/zalenium/issues/new) in this repository. If you have questions about how to get\nstarted, please join the #zalenium channel on [Slack](https://seleniumhq.herokuapp.com). \n\n***\n\n## Contents\n\n* [Getting Started](#getting-started)\n  * [Prerequisites](#prerequisites)\n  * [Run it](#run-it)\n* [Additional features](#additional-features)\n* [Documentation](#documentation)\n\n## Getting Started\n\n#### Prerequisites\n* Docker engine running, version >= 1.11.1 (probably works with earlier versions, not tested yet).\n* Make sure your docker daemon is running (e.g. `docker info` works without errors).\n\n* Pull the [docker-selenium](https://github.com/elgalu/docker-selenium) image. `docker pull elgalu/selenium`\n\n* `docker pull dosel/zalenium`\n\n#### Run it\n* Zalenium uses docker to scale on-demand, therefore we need to give it the `docker.sock` full access, this is known as\n\"Docker alongside docker\".\n\n  ```sh\n   # Pull docker-selenium\n    docker pull elgalu/selenium\n\n    # Pull Zalenium\n    docker pull dosel/zalenium\n          \n    docker run --rm -ti --name zalenium -p 4444:4444 \\\n      -v /var/run/docker.sock:/var/run/docker.sock \\\n      -v /tmp/videos:/home/seluser/videos \\\n      --privileged dosel/zalenium start\n  ```\n\n  * Why `--privileged`? We suggest you run Zalenium as `--privileged` to speed up the node registration process by\n      increasing the entropy level with [Haveged](http://www.issihosts.com/haveged/). Using `--privileged` is optional\n      since it is just meant to improve its performance. For more information, check this\n      [tutorial](https://www.digitalocean.com/community/tutorials/how-to-setup-additional-entropy-for-cloud-servers-using-haveged).\n\n* Try also our one line installer and starter for OSX/Linux (it will check for the latest images and ask for missing dependencies.)\n\n  ```sh\n    curl -sSL https://raw.githubusercontent.com/dosel/t/i/p | bash -s start\n  ```\n\n* More usage examples, parameters, configurations, video usage and one line starters can be seen [here](https://zalando.github.io/zalenium/#usage)\n* After the output, you can check the [grid](http://localhost:4444/grid/console) console\n* Now you can point your Selenium tests to [http://localhost:4444/wd/hub](http://localhost:4444/wd/hub)\n* Stop it: `docker stop zalenium`\n\n## Additional features\n* [Dashboard](http://localhost:4444/dashboard), see all the videos and aggregated logs after your tests completed.\n  <p align=\"center\">\n    <img id=\"dashboard\" width=\"600\" src=\"docs/img/dashboard.gif\" />\n  </p>\n* Live preview of your running tests [http://localhost:4444/grid/admin/live](http://localhost:4444/grid/admin/live)\n<p align=\"center\">\n  <img id=\"live-preview\" width=\"600\" src=\"docs/img/live_preview.gif\" />\n</p>\n\n* Video recording, check them in the `/tmp/videos` folder (or the one you mapped when starting Zalenium)\n* Customise video file naming via capabilities, basic auth and [more](https://zalando.github.io/zalenium/#usage)\n\n## Documentation\n\nCheck the complete documentation at https://zalando.github.io/zalenium/\n\nLicense\n===================\n\nSee [License](LICENSE.md)\n\n\nSecurity\n===================\n\nSee [Security](SECURITY.md)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.0849609375,
          "content": "If you have discovered a security vulnerability, please email tech-security@zalando.de\n"
        },
        {
          "name": "cbt.png",
          "type": "blob",
          "size": 8.3544921875,
          "content": null
        },
        {
          "name": "charts",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.1953125,
          "content": "comment:\n  layout: header, changes, diff\n\ncoverage:\n  status:\n    project:\n      default:\n        target: auto\n        threshold: 10%\n    patch:\n      default:\n        target: auto\n        target: 55%"
        },
        {
          "name": "dashboard",
          "type": "tree",
          "content": null
        },
        {
          "name": "delivery.yaml",
          "type": "blob",
          "size": 1.7138671875,
          "content": "version: \"2017-09-20\"\n\npipeline:\n- id: build\n  type: script\n  commands:\n  - desc: Install dependencies\n    cmd: |\n      # Install Docker\n      curl -fsSL https://delivery.cloud.zalando.com/utils/ensure-docker | sh\n      # Install docker-compose\n      curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` > docker-compose\n      chmod +x docker-compose\n      sudo mv docker-compose /usr/local/bin\n      # Install Maven and JDK\n      apt-get update\n      apt-get install -y maven openjdk-8-jdk-headless\n      # Install docker-selenium\n      docker pull elgalu/selenium\n\n  - desc: Run unit tests\n    cmd: |\n      mvn clean test\n\n  - desc: Build Zalenium image\n    cmd: |\n      IMAGE=\"registry-write.opensource.zalan.do/tip/zalenium:${CDP_BUILD_VERSION}\"\n      mvn clean package\n      cd target\n      docker build -t $IMAGE .\n\n  - desc: Build E2E test images\n    cmd: |\n      cd e2e_test\n      TEST_APP_IMAGE=\"test-app:${CDP_BUILD_VERSION}\"\n      docker build -t $TEST_APP_IMAGE .\n      TEST_RUNNER_IMAGE=\"test-runner:${CDP_BUILD_VERSION}\"\n      docker build -t $TEST_RUNNER_IMAGE -f tests/Dockerfile .\n\n  - desc: Run E2E test\n    cmd: |\n      docker-compose -f ./e2e_test/docker-compose.yaml up --abort-on-container-exit --timeout 30\n\n  - desc: Push Zalenium image\n    cmd: |\n      IMAGE=\"registry-write.opensource.zalan.do/tip/zalenium:${CDP_BUILD_VERSION}\"\n      if [ -z \"$CDP_PULL_REQUEST_NUMBER\" ]; then\n        docker push $IMAGE\n      fi\n\n  - desc: Push Docker-Selenium image\n    cmd: |\n      IMAGE=\"registry-write.opensource.zalan.do/tip/docker-selenium:${CDP_BUILD_VERSION}\"\n      docker tag elgalu/selenium $IMAGE\n      if [ -z \"$CDP_PULL_REQUEST_NUMBER\" ]; then\n        docker push $IMAGE\n      fi\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gen-scm-source.sh",
          "type": "blob",
          "size": 0.3408203125,
          "content": "#!/usr/bin/env bash\nREV=$(git rev-parse HEAD)\nURL=$(git config --get remote.origin.url)\nSTATUS=$(git status --porcelain)\nif [ -n \"$STATUS\" ]; then\n    REV=\"$REV (locally modified)\"\nfi\n# finally write hand-crafted JSON to scm-source.json\necho '{\"url\": \"git:'$URL'\", \"revision\": \"'$REV'\", \"author\": \"'$USER'\", \"status\": \"'$STATUS'\"}' > scm-source.json"
        },
        {
          "name": "kubernetes",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 18.37109375,
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 27.4189453125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>de.zalando.ep</groupId>\n    <artifactId>zalenium</artifactId>\n    <version>3.141.59z</version>\n    <name>Zalenium</name>\n    <description>An on-demand, dynamic local Selenium Grid with an extension to a cloud testing platform.</description>\n\n    <organization>\n        <name>Zalando SE</name>\n    </organization>\n\n    <inceptionYear>2016</inceptionYear>\n\n    <licenses>\n        <license>\n            <name>Apache License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <scm>\n        <url>https://github.com/zalando/zalenium</url>\n        <connection>scm:git:https://github.com/zalando/zalenium</connection>\n        <developerConnection>scm:git:git@github.com:zalando/zalenium.git</developerConnection>\n    </scm>\n\n    <developers>\n        <developer>\n            <name>Diego Molina</name>\n            <email>diemol@gmail.com</email>\n            <url>https://github.com/diemol</url>\n            <organization>Zalando SE</organization>\n            <organizationUrl>https://tech.zalando.com/</organizationUrl>\n        </developer>\n        <developer>\n            <name>Leo Gallucci</name>\n            <email>elgalu3@gmail.com</email>\n            <url>https://github.com/elgalu</url>\n            <organization>Zalando SE</organization>\n            <organizationUrl>https://tech.zalando.com/</organizationUrl>\n        </developer>\n        <developer>\n            <name>Joel Pearson</name>\n            <email>japearson@agiledigital.com.au</email>\n            <url>https://github.com/pearj</url>\n            <organization>Agile Digital</organization>\n            <organizationUrl>https://agiledigital.com.au/</organizationUrl>\n        </developer>\n    </developers>\n\n    <properties>\n        <selenium-server.major-minor.version>3.141</selenium-server.major-minor.version>\n        <selenium-server.patch-level.version>59</selenium-server.patch-level.version>\n        <!-- This needs to match what is in the Selenium Server pom file -->\n        <jetty.version>9.4.12.v20180830</jetty.version>\n        <docker-client.version>8.15.0</docker-client.version>\n        <kubernetes-client.version>4.1.0</kubernetes-client.version>\n        <junit.version>4.12</junit.version>\n        <mockito.version>2.23.0</mockito.version>\n        <awaitility.version>3.1.2</awaitility.version>\n        <testng.version>6.14.3</testng.version>\n        <slf4j.version>1.7.25</slf4j.version>\n        <logstash-logback-encoder.version>5.2</logstash-logback-encoder.version>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <ch.qos.logback.version>1.2.3</ch.qos.logback.version>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <maven.compiler.plugin>3.7.0</maven.compiler.plugin>\n        <maven-resources-plugin.version>3.0.2</maven-resources-plugin.version>\n        <maven-shade-plugin.version>3.1.0</maven-shade-plugin.version>\n        <maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>\n        <maven-failsafe-plugin.version>2.22.0</maven-failsafe-plugin.version>\n        <versions-maven-plugin.version>2.5</versions-maven-plugin.version>\n        <exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>\n        <jacoco-maven-plugin.version>0.7.9</jacoco-maven-plugin.version>\n        <prometheus.version>0.5.0</prometheus.version>\n        <aspectj.version>1.8.13</aspectj.version>\n        <aspectj-maven-plugin.version>1.11</aspectj-maven-plugin.version>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <threadCountProperty>1</threadCountProperty>\n        <skipTests>false</skipTests>\n        <skip.surefire.tests>${skipTests}</skip.surefire.tests>\n        <skip.failsafe.setup>false</skip.failsafe.setup>\n        <integrationToTest>sauceLabs</integrationToTest>\n        <httpmime.version>4.5.6</httpmime.version>\n        <system-lambda.version>1.0.0</system-lambda.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.aspectj</groupId>\n            <artifactId>aspectjrt</artifactId>\n            <version>${aspectj.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.seleniumhq.selenium</groupId>\n            <artifactId>selenium-server</artifactId>\n            <version>${selenium-server.major-minor.version}.${selenium-server.patch-level.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.spotify</groupId>\n            <artifactId>docker-client</artifactId>\n            <version>${docker-client.version}</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.slf4j</groupId>\n                    <artifactId>slf4j-api</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.google.guava</groupId>\n                    <artifactId>guava</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>io.fabric8</groupId>\n            <artifactId>openshift-client</artifactId>\n            <version>${kubernetes-client.version}</version>\n            <exclusions>\n               <exclusion>\n                  <groupId>org.slf4j</groupId>\n                  <artifactId>jul-to-slf4j</artifactId>\n               </exclusion>\n               <exclusion>\n                  <groupId>org.slf4j</groupId>\n                  <artifactId>slf4j-api</artifactId>\n               </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-core</artifactId>\n            <version>${ch.qos.logback.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n            <version>${ch.qos.logback.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-access</artifactId>\n            <version>${ch.qos.logback.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>jul-to-slf4j</artifactId>\n            <version>${slf4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-simple</artifactId>\n            <version>${slf4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>net.logstash.logback</groupId>\n            <artifactId>logstash-logback-encoder</artifactId>\n            <version>${logstash-logback-encoder.version}</version>\n        </dependency>\n        <!-- The prometheus client -->\n        <dependency>\n          <groupId>io.prometheus</groupId>\n          <artifactId>simpleclient</artifactId>\n          <version>${prometheus.version}</version>\n        </dependency>\n        <!-- Prometheus Hotspot JVM metrics -->\n        <dependency>\n          <groupId>io.prometheus</groupId>\n          <artifactId>simpleclient_hotspot</artifactId>\n          <version>${prometheus.version}</version>\n        </dependency>\n        <!-- Prometheus Exporter Servlet -->\n        <dependency>\n          <groupId>io.prometheus</groupId>\n          <artifactId>simpleclient_servlet</artifactId>\n          <version>${prometheus.version}</version>\n        </dependency>\n        <!-- Prometheus Jetty -->\n        <dependency>\n          <groupId>io.prometheus</groupId>\n          <artifactId>simpleclient_jetty</artifactId>\n          <version>${prometheus.version}</version>\n          <exclusions>\n            <exclusion>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>*</artifactId>\n            </exclusion>\n          </exclusions>\n        </dependency>\n        <!-- \n        This allows us to add prometheus jetty collectors that expect to find jetty classes in their usual place.\n        Selenium has repackaged Jetty, so this makes it available at compile time, before we relocate the classes again.\n         -->\n        <dependency>\n            <groupId>org.eclipse.jetty</groupId>\n            <artifactId>jetty-server</artifactId>\n            <scope>provided</scope>\n            <version>${jetty.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.fabric8</groupId>\n            <artifactId>openshift-server-mock</artifactId>\n            <version>${kubernetes-client.version}</version>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>com.sun</groupId>\n                    <artifactId>tools</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>de.vandermeer</groupId>\n            <artifactId>asciitable</artifactId>\n            <version>0.3.2</version>\n        </dependency>\n        <!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->\n        <dependency>\n            <groupId>com.google.code.gson</groupId>\n            <artifactId>gson</artifactId>\n            <version>2.8.5</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.httpcomponents</groupId>\n            <artifactId>httpmime</artifactId>\n            <version>${httpmime.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-collections4</artifactId>\n            <version>4.3</version>\n        </dependency>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>${junit.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <version>${mockito.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.github.stefanbirkner</groupId>\n            <artifactId>system-lambda</artifactId>\n            <version>${system-lambda.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.testng</groupId>\n            <artifactId>testng</artifactId>\n            <version>${testng.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.awaitility</groupId>\n            <artifactId>awaitility</artifactId>\n            <version>${awaitility.version}</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>${maven-resources-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>start-stop-script</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>copy-resources</goal>\n                        </goals>\n                        <configuration>\n                            <outputDirectory>${project.build.directory}</outputDirectory>\n                            <resources>\n                                <resource>\n                                    <directory>scripts</directory>\n                                    <filtering>true</filtering>\n                                </resource>\n                                <resource>\n                                    <directory>docker</directory>\n                                    <filtering>true</filtering>\n                                </resource>\n                                <resource>\n                                    <directory>.</directory>\n                                    <includes>\n                                        <include>LICENSE.md</include>\n                                        <include>Analytics.md</include>\n                                        <include>scm-source.json</include>\n                                    </includes>\n                                </resource>\n                                <resource>\n                                    <directory>src/test/resources</directory>\n                                    <includes>\n                                        <include>browserstack_capabilities.json</include>\n                                        <include>testingbot_capabilities.json</include>\n                                    </includes>\n                                </resource>\n                                <resource>\n                                    <directory>src/main/resources</directory>\n                                    <includes>\n                                        <include>logging_info.properties</include>\n                                        <include>logging_debug.properties</include>\n                                        <include>logback.xml</include>\n                                    </includes>\n                                </resource>\n                                <resource>\n                                    <directory>dashboard</directory>\n                                </resource>\n                            </resources>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>versions-maven-plugin</artifactId>\n                <version>${versions-maven-plugin.version}</version>\n                <configuration>\n                    <generateBackupPoms>false</generateBackupPoms>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-scm-plugin</artifactId>\n                <version>1.9.5</version>\n                <configuration>\n                    <pushChanges>false</pushChanges>\n                    <tag>${project.version}</tag>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>${maven.compiler.plugin}</version>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                    <showDeprecation>true</showDeprecation>\n                    <showWarnings>true</showWarnings>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>2.4</version>\n                <configuration>\n                    <archive>\n                        <manifestSections>\n                            <manifestSection>\n                                <Name>Build-Info</Name>\n                                <manifestEntries>\n                                    <Selenium-Version>${selenium-server.major-minor.version}.${selenium-server.patch-level.version}</Selenium-Version>\n                                </manifestEntries>\n                            </manifestSection>\n                        </manifestSections>\n                    </archive>\n                </configuration>\n\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>aspectj-maven-plugin</artifactId>\n                <version>${aspectj-maven-plugin.version}</version>\n                <configuration>\n                    <showWeaveInfo>true</showWeaveInfo>\n                    <weaveDependencies>\n                        <weaveDependency>\n                            <groupId>org.seleniumhq.selenium</groupId>\n                            <artifactId>selenium-server</artifactId>\n                        </weaveDependency>\n                    </weaveDependencies>\n                    <complianceLevel>1.8</complianceLevel>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>compile</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- Plugin to build the fat jar -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>${maven-shade-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                        <configuration>\n                            <filters>\n                                <filter>\n                                    <artifact>*.*</artifact>\n                                    <excludes>\n                                        <exclude>META-INF/*.SF</exclude>\n                                        <exclude>META-INF/*.DSA</exclude>\n                                        <exclude>META-INF/*.RSA</exclude>\n                                    </excludes>\n                                </filter>\n                            </filters>\n                            <artifactSet>\n\n                            </artifactSet>\n                            <relocations>\n                                <relocation>\n                                    <pattern>org.eclipse.jetty</pattern>\n                                    <shadedPattern>org.seleniumhq.jetty9</shadedPattern>\n                                </relocation>\n                            </relocations>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>${maven-surefire-plugin.version}</version>\n                <configuration>\n                    <systemPropertyVariables>\n                        <java.util.logging.SimpleFormatter.format>%1$tY-%1$tm-%1$td %1$tH:%1$tM:%1$tS %4$-6s %5$s %6$s%n</java.util.logging.SimpleFormatter.format>\n                    </systemPropertyVariables>\n                    <!-- skips surefire tests without skipping failsafe tests. -->\n                    <skipTests>${skip.surefire.tests}</skipTests>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.apache.maven.surefire</groupId>\n                        <artifactId>surefire-junit47</artifactId>\n                        <version>${maven-surefire-plugin.version}</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n        </plugins>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>coverage-report</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.jacoco</groupId>\n                        <artifactId>jacoco-maven-plugin</artifactId>\n                        <version>${jacoco-maven-plugin.version}</version>\n                        <configuration>\n                            <destFile>${basedir}/target/coverage-reports/coverage-unit.exec</destFile>\n                            <dataFile>${basedir}/target/coverage-reports/coverage-unit.exec</dataFile>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>coverage-initialize</id>\n                                <goals>\n                                    <goal>prepare-agent</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>coverage-site</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>report</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>build-docker-image</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>exec-maven-plugin</artifactId>\n                        <version>${exec-maven-plugin.version}</version>\n                        <executions>\n                            <!-- docker build -->\n                            <execution>\n                                <id>docker-build-zalenium-image</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>exec</goal>\n                                </goals>\n                                <configuration>\n                                    <skip>${skip.failsafe.setup}</skip>\n                                    <workingDirectory>${project.build.directory}</workingDirectory>\n                                    <executable>docker</executable>\n                                    <arguments>\n                                        <argument>build</argument>\n                                        <argument>-t</argument>\n                                        <argument>${project.artifactId}:${project.version}</argument>\n                                        <argument>.</argument>\n                                    </arguments>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>integration-test</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-failsafe-plugin</artifactId>\n                        <version>${maven-failsafe-plugin.version}</version>\n                        <configuration>\n                            <parallel>methods</parallel>\n                            <threadCount>${threadCountProperty}</threadCount>\n                            <skipAfterFailureCount>10</skipAfterFailureCount>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>integration-test</goal>\n                                    <goal>verify</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>exec-maven-plugin</artifactId>\n                        <version>${exec-maven-plugin.version}</version>\n                        <executions>\n                            <!-- docker build -->\n                            <execution>\n                                <id>docker-build-zalenium</id>\n                                <phase>pre-integration-test</phase>\n                                <goals>\n                                    <goal>exec</goal>\n                                </goals>\n                                <configuration>\n                                    <skip>${skip.failsafe.setup}</skip>\n                                    <workingDirectory>${project.build.directory}</workingDirectory>\n                                    <executable>docker</executable>\n                                    <arguments>\n                                        <argument>build</argument>\n                                        <argument>-t</argument>\n                                        <argument>${project.artifactId}:${project.version}</argument>\n                                        <argument>.</argument>\n                                    </arguments>\n                                </configuration>\n                            </execution>\n                            <!-- Make zalenium_in_docker.sh executable -->\n                            <execution>\n                                <id>enable-zalenium_in_docker</id>\n                                <phase>pre-integration-test</phase>\n                                <goals>\n                                    <goal>exec</goal>\n                                </goals>\n                                <configuration>\n                                    <workingDirectory>${project.build.directory}</workingDirectory>\n                                    <executable>chmod</executable>\n                                    <arguments>\n                                        <argument>+x</argument>\n                                        <argument>zalenium_in_docker.sh</argument>\n                                    </arguments>\n                                </configuration>\n                            </execution>\n                            <!-- docker run -->\n                            <execution>\n                                <id>docker-run-zalenium</id>\n                                <phase>pre-integration-test</phase>\n                                <goals>\n                                    <goal>exec</goal>\n                                </goals>\n                                <configuration>\n                                    <skip>${skip.failsafe.setup}</skip>\n                                    <executable>${project.build.directory}/zalenium_in_docker.sh</executable>\n                                    <arguments>\n                                        <argument>start</argument>\n                                        <argument>${project.artifactId}:${project.version}</argument>\n                                        <argument>${integrationToTest}</argument>\n                                    </arguments>\n                                </configuration>\n                            </execution>\n                            <!-- docker stop -->\n                            <execution>\n                                <id>docker-stop-zalenium</id>\n                                <phase>post-integration-test</phase>\n                                <goals>\n                                    <goal>exec</goal>\n                                </goals>\n                                <configuration>\n                                    <skip>${skip.failsafe.setup}</skip>\n                                    <executable>${project.build.directory}/zalenium_in_docker.sh</executable>\n                                    <arguments>\n                                        <argument>stop</argument>\n                                    </arguments>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "push_image.sh",
          "type": "blob",
          "size": 1.3603515625,
          "content": "#!/usr/bin/env bash\n\n# Exit on failure\nset -e\n\n# Push docker image when a tag is set and it is the master branch.\n# The tag will be set locally in one of the developer's machine.\n\necho \"TRAVIS_TAG=${TRAVIS_TAG}\"\n\ncat scm-source.json\n\nif [ \"$TRAVIS_PULL_REQUEST\" = \"false\" ] && [ -n \"${TRAVIS_TAG}\" ] && [ \"${TRAVIS_TAG}\" != \"latest\" ]; then\n\techo \"Building image...\"\n\tmvn clean package -Pbuild-docker-image -DskipTests=true\n\techo \"Starting to push Zalenium image...\"\n\tdocker login -u=\"$DOCKER_USERNAME\" -p=\"$DOCKER_PASSWORD\"\n    echo \"Logged in to docker with user '${DOCKER_USERNAME}'\"\n    echo \"docker tag and docker push using TRAVIS_TAG=${TRAVIS_TAG}\"\n    docker tag zalenium:${TRAVIS_TAG} dosel/zalenium:${TRAVIS_TAG}\n    docker push dosel/zalenium:${TRAVIS_TAG} | tee docker_push.log\n    if [[ \"${TRAVIS_TAG}\" == \"3.\"* ]]; then\n        echo \"Marking image with Selenium 3 as as zalenium:3 and latest...\"\n        docker tag zalenium:${TRAVIS_TAG} dosel/zalenium:3\n        docker tag zalenium:${TRAVIS_TAG} dosel/zalenium:latest\n        docker push dosel/zalenium:latest\n        docker push dosel/zalenium:3\n    else\n        echo \"Marking image with Selenium 2 as as zalenium:2...\"\n        docker tag zalenium:${TRAVIS_TAG} dosel/zalenium:2\n        docker push dosel/zalenium:2\n    fi\nelse\n\techo \"Image not being pushed, either this is a PR, no tag is set, or the branch is not master.\"\nfi"
        },
        {
          "name": "release.sh",
          "type": "blob",
          "size": 1.015625,
          "content": "#!/usr/bin/env bash\n\nset -e\n\n# How to use\n# ./release.sh \n# ./release.sh release FIXED_VERSION, e.g. ./release.sh release 1.0.0\n# ./release.sh develop SNAPSHOT_VERSION, e.g. ./release.sh release 1.1.0-SNAPSHOT\n\nif [ -z \"$1\" ]; then\n    read -p \"Environment (release|develop) : \" ENVIRONMENT\nelse\n    ENVIRONMENT=$1\nfi\n\nif [ -z \"$2\" ]; then\n    read -p \"Application version: \" VERSION\nelse\n    VERSION=$2\nfi\n\nrelease_version()\n{\n    # release\n    mvn scm:check-local-modification versions:set -DnewVersion=${VERSION} scm:add -Dincludes=\"**/pom.xml\" scm:checkin -Dmessage=\"Release $VERSION\"\n\n    mvn scm:tag\n}\n\ndevelop_version()\n{\n    # next development version, since it only updates the pom.xml, we skip the Travis build\n    mvn versions:set -DnewVersion=${VERSION} scm:add -Dincludes=\"**/pom.xml\" scm:checkin -Dmessage=\"Develop $VERSION\"\n}\n\ncase ${ENVIRONMENT} in\n    release)\n        release_version\n    ;;\n    develop)\n        develop_version\n    ;;\n    *)\n        echo \"Invalid environment! Valid options: release, develop\"\n    ;;\nesac\n"
        },
        {
          "name": "run_integration_tests.sh",
          "type": "blob",
          "size": 4.541015625,
          "content": "#!/bin/sh\n# Exit on failure\nset -e\n\nINTEGRATION_TO_TEST=$1\n\nVIDEOS_FOLDER=$(pwd)/target/videos\necho ${VIDEOS_FOLDER}\n\nif [ \"$TRAVIS_PULL_REQUEST\" = \"false\" ] && [ -n \"${TRAVIS_TAG}\" ] && [ \"${TRAVIS_TAG}\" != \"latest\" ]; then\n    echo \"TRAVIS_TAG=${TRAVIS_TAG}\"\n\techo \"Not running integration tests when a TAG is set, we assume they already ran in the PR.\"\nelse\n    # If the environment var exists, then we run the integration tests. This is to allow external PRs ro tun\n    if [ \"${INTEGRATION_TO_TEST}\" = sauceLabs ]; then\n        if [ -n \"${SAUCE_USERNAME}\" ]; then\n            env \"PATH=$PATH\" mvn clean\n            mvn clean verify -Pintegration-test -DthreadCountProperty=2 -Dskip.surefire.tests=true -Dgroups=normal -DintegrationToTest=${INTEGRATION_TO_TEST}\n            # Check for generated videos\n            ls -la ${VIDEOS_FOLDER}/saucelabs*.mp4 || (echo \"No Sauce Labs videos were downloaded.\" && exit 2)\n            ls -la ${VIDEOS_FOLDER}/zalenium*.mp4 || (echo \"No Zalenium videos were generated.\" && exit 2)\n        fi\n    fi\n    if [ \"${INTEGRATION_TO_TEST}\" = browserStack ]; then\n        if [ -n \"${BROWSER_STACK_USER}\" ]; then\n            env \"PATH=$PATH\" mvn clean\n            mvn clean verify -Pintegration-test -DthreadCountProperty=2 -Dskip.surefire.tests=true -Dgroups=normal -DintegrationToTest=${INTEGRATION_TO_TEST}\n            # Check for generated videos\n            ls -la ${VIDEOS_FOLDER}/browserstack*.mp4 || (echo \"No BrowserStack videos were downloaded.\" && exit 2)\n            ls -la ${VIDEOS_FOLDER}/zalenium*.mp4 || (echo \"No Zalenium videos were generated.\" && exit 2)\n        fi\n    fi\n    if [ \"${INTEGRATION_TO_TEST}\" = testingBot ]; then\n        if [ -n \"${TESTINGBOT_KEY}\" ]; then\n            env \"PATH=$PATH\" mvn clean\n            mvn clean verify -Pintegration-test -DthreadCountProperty=2 -Dskip.surefire.tests=true -Dgroups=normal -DintegrationToTest=${INTEGRATION_TO_TEST}\n            # Check for generated videos\n            ls -la ${VIDEOS_FOLDER}/testingbot*.mp4 || (echo \"No TestingBot videos were downloaded.\" && exit 2)\n            ls -la ${VIDEOS_FOLDER}/zalenium*.mp4 || (echo \"No Zalenium videos were generated.\" && exit 2)\n        fi\n    fi\n    if [ \"${INTEGRATION_TO_TEST}\" = crossBrowserTesting ]; then\n        if [ -n \"${CBT_USERNAME}\" ]; then\n            env \"PATH=$PATH\" mvn clean\n            mvn clean verify -Pintegration-test -DthreadCountProperty=2 -Dskip.surefire.tests=true -Dgroups=normal -DintegrationToTest=${INTEGRATION_TO_TEST}\n            # Check for generated videos\n            ls -la ${VIDEOS_FOLDER}/crossbrowsertesting*.mp4 || (echo \"No CBT videos were downloaded.\" && exit 2)\n            ls -la ${VIDEOS_FOLDER}/zalenium*.mp4 || (echo \"No Zalenium videos were generated.\" && exit 2)\n        fi\n    fi\n    if [ \"${INTEGRATION_TO_TEST}\" = lambdaTest ]; then\n        if [ -n \"${LT_USERNAME}\" ]; then\n            env \"PATH=$PATH\" mvn clean\n            mvn clean verify -Pintegration-test -DthreadCountProperty=2 -Dskip.surefire.tests=true -Dgroups=normal -DintegrationToTest=${INTEGRATION_TO_TEST}\n            # Check for generated videos\n            ls -la ${VIDEOS_FOLDER}/lambdatest*.mp4 || (echo \"No LambdaTest videos were downloaded.\" && exit 2)\n            ls -la ${VIDEOS_FOLDER}/zalenium*.mp4 || (echo \"No Zalenium videos were generated.\" && exit 2)\n        fi\n    fi\n    if [ \"${INTEGRATION_TO_TEST}\" = dockerCompose ]; then\n        if [ -n \"${SAUCE_USERNAME}\" ]; then\n            env \"PATH=$PATH\" mvn clean\n            mvn clean package -Pbuild-docker-image -DskipTests=true\n            mkdir -p \"${VIDEOS_FOLDER}\"\n            chmod +x target/zalenium_in_docker_compose.sh\n            target/zalenium_in_docker_compose.sh start\n            mvn verify -Pintegration-test -DthreadCountProperty=2 -Dskip.surefire.tests=true -Dskip.failsafe.setup=true -Dgroups=normal -DintegrationToTest=sauceLabs\n            # Check for generated videos\n            ls -la ${VIDEOS_FOLDER}/saucelabs*.mp4 || (echo \"No Sauce Labs videos were downloaded.\" && exit 2)\n            ls -la ${VIDEOS_FOLDER}/zalenium*.mp4 || (echo \"No Zalenium videos were generated.\" && exit 2)\n            target/zalenium_in_docker_compose.sh stop\n        fi\n    fi\n    if [ \"${INTEGRATION_TO_TEST}\" = minikube ]; then\n        MINIKUBE_IP=$(minikube ip)\n        export ZALENIUM_GRID_PORT=$(kubectl get svc zalenium --namespace zalenium -o go-template='{{ index (index .spec.ports 0) \"nodePort\" }}{{ \"\\n\" }}')\n        export ZALENIUM_GRID_HOST=${MINIKUBE_IP}\n        mvn verify -Pintegration-test -DthreadCountProperty=2 -Dskip.surefire.tests=true -Dskip.failsafe.setup=true -Dgroups=minikube\n    fi\nfi\n\n"
        },
        {
          "name": "scm-source.json",
          "type": "blob",
          "size": 0.1435546875,
          "content": "{\"url\": \"git:git@github.com:zalando/zalenium.git\", \"revision\": \"dd59612828a59f31c2fe4dc9eb3cf326b1b2f70a\", \"author\": \"dmolinabocan\", \"status\": \"\"}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}