{
  "metadata": {
    "timestamp": 1736608900739,
    "page": 85,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "firebase/FirebaseUI-Android",
      "stars": 4650,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.228515625,
          "content": ".gradle\n*.iml\n/local.properties\n.idea/**\n!.idea/codeStyleSettings.xml\n.DS_Store\nbuild\ngoogle-services.json\n!/library/google-services.json\n\ncrashlytics-build.properties\nauth/src/main/res/values/com_crashlytics_export_strings.xml\n*.log\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".opensource",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.0888671875,
          "content": "Release notes moved to [Releases](https://github.com/firebase/FirebaseUI-Android/releases)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.7958984375,
          "content": "# FirebaseUI for Android — UI Bindings for Firebase\n\n[![FirebaseOpensource.com](https://img.shields.io/badge/Docs-firebaseopensource.com-orange.svg)](\nhttps://firebaseopensource.com/projects/firebase/firebaseui-android\n)\n[![Actions Status][gh-actions-badge]][gh-actions]\n\nFirebaseUI is an open-source library for Android that allows you to\nquickly connect common UI elements to [Firebase](https://firebase.google.com) APIs.\n\nA compatible FirebaseUI client is also available for [iOS](https://github.com/firebase/firebaseui-ios).\n\n## Table of contents\n\n1. [Usage](#usage)\n1. [Installation](#installation)\n   1. [Upgrading](#upgrading)\n1. [Dependencies](#dependencies)\n   1. [Compatibility](#compatibility-with-firebase--google-play-services-libraries)\n   1. [Upgrading dependencies](#upgrading-dependencies)\n1. [Sample App](#sample-app)\n1. [Snapshot Builds](#snapshot-builds)\n1. [Contributing](#contributing)\n   1. [Installing](#installing-locally)\n   1. [License agreements](#contributor-license-agreements)\n   1. [Process](#contribution-process)\n\n## Usage\n\nFirebaseUI has separate modules for using Firebase Realtime Database, Cloud Firestore,\nFirebase Auth, and Cloud Storage. To get started, see the individual instructions for each module:\n\n* [FirebaseUI Auth](auth/README.md)\n* [FirebaseUI Firestore](firestore/README.md)\n* [FirebaseUI Database](database/README.md)\n* [FirebaseUI Storage](storage/README.md)\n\n## Installation\n\nFirebaseUI is published as a collection of libraries separated by the\nFirebase API they target. Each FirebaseUI library has a transitive\ndependency on the appropriate Firebase SDK so there is no need to include\nthose separately in your app.\n\nIn your `app/build.gradle` file add a dependency on one of the FirebaseUI\nlibraries.\n\n```groovy\ndependencies {\n    // FirebaseUI for Firebase Realtime Database\n    implementation 'com.firebaseui:firebase-ui-database:8.0.2'\n\n    // FirebaseUI for Cloud Firestore\n    implementation 'com.firebaseui:firebase-ui-firestore:8.0.2'\n\n    // FirebaseUI for Firebase Auth\n    implementation 'com.firebaseui:firebase-ui-auth:8.0.2'\n\n    // FirebaseUI for Cloud Storage\n    implementation 'com.firebaseui:firebase-ui-storage:8.0.2'\n}\n```\n\nIf you're including the `firebase-ui-auth` dependency, there's a little\n[more setup](auth/README.md#configuration) required.\n\nAfter the project is synchronized, we're ready to start using Firebase functionality in our app.\n\n### Upgrading\n\nIf you are using an old version of FirebaseUI and upgrading, please see the appropriate\nmigration guide:\n\n* [Upgrade from 7.2.0 to 8.x.x](./docs/upgrade-to-8.0.md)\n* [Upgrade from 6.4.0 to 7.x.x](./docs/upgrade-to-7.0.md)\n* [Upgrade from 5.1.0 to 6.x.x](./docs/upgrade-to-6.0.md)\n* [Upgrade from 4.3.2 to 5.x.x](./docs/upgrade-to-5.0.md)\n* [Upgrade from 3.3.1 to 4.x.x](./docs/upgrade-to-4.0.md)\n* [Upgrade from 2.3.0 to 3.x.x](./docs/upgrade-to-3.0.md)\n* [Upgrade from 1.2.0 to 2.x.x](./docs/upgrade-to-2.0.md)\n\n## Dependencies\n\n### Compatibility with Firebase / Google Play Services libraries\n\nFirebaseUI libraries have the following transitive dependencies on the Firebase SDK:\n```\nfirebase-ui-auth\n|--- com.google.firebase:firebase-auth\n|--- com.google.android.gms:play-services-auth\n\nfirebase-ui-database\n|--- com.google.firebase:firebase-database\n\nfirebase-ui-firestore\n|--- com.google.firebase:firebase-firestore\n\nfirebase-ui-storage\n|--- com.google.firebase:firebase-storage\n```\n\nYou can see the specific dependencies associated with each release on the \n[Releases page](https://github.com/firebase/FirebaseUI-Android/releases).\n\n### Upgrading dependencies\n\nIf you would like to use a newer version of one of FirebaseUI's transitive dependencies, such\nas Firebase, Play services, or the Android support libraries, you need to add explicit\n`implementation` declarations in your `build.gradle` for all of FirebaseUI's dependencies at the version\nyou want to use. Here are some examples listing all of the critical dependencies:\n\n#### Auth\n\n```groovy\nimplementation \"com.google.firebase:firebase-auth:$X.Y.Z\"\nimplementation \"com.google.android.gms:play-services-auth:$X.Y.Z\"\n\nimplementation \"androidx.lifecycle:lifecycle-extensions:$X.Y.Z\"\nimplementation \"androidx.browser:browser:$X.Y.Z\"\nimplementation \"androidx.cardview:cardview:$X.Y.Z\"\nimplementation \"androidx.constraintlayout:constraintlayout:$X.Y.Z\"\nimplementation \"androidx.legacy:legacy-support-v4:$X.Y.Z\"\nimplementation \"com.google.android.material:material:$X.Y.Z\"\n```\n\n#### Firestore\n\n```groovy\nimplementation \"com.google.firebase:firebase-firestore:$X.Y.Z\"\n\nimplementation \"androidx.legacy:legacy-support-v4:$X.Y.Z\"\nimplementation \"androidx.recyclerview:recyclerview:$X.Y.Z\"\n```\n\n#### Realtime Database\n\n```groovy\nimplementation \"com.google.firebase:firebase-database:$X.Y.Z\"\n\nimplementation \"androidx.legacy:legacy-support-v4:$X.Y.Z\"\nimplementation \"androidx.recyclerview:recyclerview:$X.Y.Z\"\n```\n\n#### Storage\n\n```groovy\nimplementation \"com.google.firebase:firebase-storage:$X.Y.Z\"\n\nimplementation \"androidx.legacy:legacy-support-v4:$X.Y.Z\"\n```\n\n\n## Sample app\n\nThere is a sample app in the [`app/`](app) directory that demonstrates most\nof the features of FirebaseUI. Load the project in Android Studio and\nrun it on your Android device to see a demonstration.\n\nBefore you can run the sample app, you must create a project in\nthe Firebase console. Add an Android app to the project, and copy\nthe generated google-services.json file into the `app/` directory.\nAlso enable [anonymous authentication](https://firebase.google.com/docs/auth/android/anonymous-auth)\nfor the Firebase project, since some components of the sample app\nrequires it.\n\nIf you encounter a version incompatibility error between Android Studio\nand Gradle while trying to run the sample app, try disabling the Instant\nRun feature of Android Studio. Alternatively, update Android Studio and\nGradle to their latest versions.\n\nA note on importing the project using Android Studio: Using 'Project from \nVersion Control' will not automatically link the project with Gradle \n(issue [#1349](https://github.com/firebase/FirebaseUI-Android/issues/1349)). \nWhen doing so and opening any `build.gradle.kts` file, an error shows up: \n`Project 'FirebaseUI-Android' isn't linked with Gradle`. To resolve this \nissue, please `git checkout` the project manually and import with `Import \nfrom external model`.\n\n## Snapshot builds\n\nLike to live on the cutting edge?  Want to try the next release of FirebaseUI before anyone else?\nFirebaseUI hosts \"snapshot\" builds on oss.jfrog.org.\n\nJust add the following to your `build.gradle`:\n\n```groovy\nrepositories {\n  maven { url \"https://oss.jfrog.org/artifactory/oss-snapshot-local\" }\n}\n```\n\nThen you can depend on snapshot versions:\n\n```groovy\nimplementation 'com.firebaseui:firebase-ui-auth:$X.Y.Z-SNAPSHOT'\n```\n\nYou can see which `SNAPSHOT` builds are avaiable here:\nhttps://oss.jfrog.org/webapp/#/artifacts/browse/tree/General/oss-snapshot-local/com/firebaseui\n\nSnapshot builds come with absolutely no guarantees and we will close any issues asking to troubleshoot\na snapshot report unless they identify a bug that should block the release launch. Experiment\nat your own risk!\n\n## Contributing\n\n### Installing locally\n\nYou can download FirebaseUI and install it locally by cloning this\nrepository and running:\n\n```sh\n./gradlew :library:prepareArtifacts publishToMavenLocal\n```\n\n### Contributor License Agreements\n\nWe'd love to accept your sample apps and patches! Before we can take them, we\nhave to jump a couple of legal hurdles.\n\nPlease fill out either the individual or corporate Contributor License Agreement\n(CLA).\n\n* If you are an individual writing original source code and you're sure you\n  own the intellectual property, then you'll need to sign an\n  [individual CLA](https://developers.google.com/open-source/cla/individual).\n* If you work for a company that wants to allow you to contribute your work,\n  then you'll need to sign a\n  [corporate CLA](https://developers.google.com/open-source/cla/corporate).\n\nFollow either of the two links above to access the appropriate CLA and\ninstructions for how to sign and return it. Once we receive it, we'll be able to\naccept your pull requests.\n\n### Contribution process\n\n1. Submit an issue describing your proposed change to the repo in question.\n1. The repo owner will respond to your issue promptly.\n1. If your proposed change is accepted, and you haven't already done so, sign a\n   Contributor License Agreement (see details above).\n1. Fork the desired repo, develop, and then test your code changes **on the latest dev branch**.\n1. Ensure that your code adheres to the existing style of the library to which\n   you are contributing.\n1. Ensure that your code has an appropriate set of unit tests which all pass.\n1. Submit a pull request targeting the latest dev branch.\n\n[gh-actions]: https://github.com/firebase/FirebaseUI-Android/actions\n[gh-actions-badge]: https://github.com/firebase/FirebaseUI-Android/workflows/Android%20CI/badge.svg\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "auth",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.1474609375,
          "content": "// This empty file along with settings.gradle help Android Studio recognize the project\n// as a gradle project, despite the use of .gradle.kts scripts."
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 0.9697265625,
          "content": "@file:Suppress(\"UnstableApiUsage\")\n\nbuildscript {\n    repositories {\n        google()\n        mavenCentral()\n        mavenLocal()\n    }\n\n    dependencies {\n        classpath(Config.Plugins.android)\n        classpath(Config.Plugins.kotlin)\n        classpath(Config.Plugins.google)\n        classpath(Config.Plugins.mavenPublish)\n        classpath(Config.Plugins.buildInfo)\n    }\n}\n\nplugins {\n    id(\"com.github.ben-manes.versions\") version \"0.20.0\"\n}\n\nallprojects {\n    repositories {\n        google()\n        mavenCentral()\n        mavenLocal()\n    }\n\n    if (name != \"lint\" && name != \"internal\" && name != \"lintchecks\") {\n        apply(plugin = \"checkstyle\")\n\n        configure<CheckstyleExtension> { toolVersion = \"8.10.1\" }\n        tasks.register<Checkstyle>(\"checkstyle\") {\n            configFile = file(\"$rootDir/library/quality/checkstyle.xml\")\n            source(\"src\")\n            include(\"**/*.java\")\n            exclude(\"**/gen/**\")\n            classpath = files()\n        }\n    }\n}\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc-images",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "firestore",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.1015625,
          "content": "org.gradle.jvmargs=-Xmx4g -Xms4g -Dfile.encoding=UTF-8\norg.gradle.parallel=true\norg.gradle.caching=true\n\nandroid.useAndroidX=true\nandroid.enableJetifier=true\n# Kotlin code style for this project: \"official\" or \"obsolete\":\nkotlin.code.style=official\n# Enables namespacing of each library's R class so that its R class includes only the\n# resources declared in the library itself and none from the library's dependencies,\n# thereby reducing the size of the R class for that library\nandroid.nonTransitiveRClass=false\n\nGROUP=com.firebaseui\nVERSION_NAME=8.0.2\n\nPOM_PACKAGING=aar\nPOM_DESCRIPTION=FirebaseUI for Android\nPOM_URL=https://github.com/firebase/firebaseui-android\nPOM_SCM_URL=https://github.com/firebase/firebaseui-android\nPOM_SCM_CONNECTION=scm:git:git@github.com/firebase/firebaseui-android.git\nPOM_SCM_DEV_CONNECTION=scm:git:git@github.com/firebase/firebaseui-android.git\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_DEVELOPER_NAME=FirebaseUI Contributors\nPOM_DEVELOPER_URL=https://github.com/firebase/FirebaseUI-Android/graphs/contributors\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.630859375,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.6982421875,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "internal",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "lint",
          "type": "tree",
          "content": null
        },
        {
          "name": "proguard-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.568359375,
          "content": "// https://docs.gradle.com/enterprise/gradle-plugin/#gradle_6_x_and_later\nplugins {\n    id \"com.gradle.enterprise\" version \"3.3.3\"\n}\n\ngradleEnterprise {\n    buildScan {\n        termsOfServiceUrl = \"https://gradle.com/terms-of-service\"\n        termsOfServiceAgree = \"yes\"\n    }\n}\n\nrootProject.buildFileName = 'build.gradle.kts'\n\ninclude(\n        \":app\", \n\n        \":library\",\n        \":auth\",\n        \":common\", \n        \":database\",\n        \":firestore\", \n        \":storage\",\n\n        \":lint\",\n        \":proguard-tests\", \n        \":internal:lint\", \n        \":internal:lintchecks\"\n)\n"
        },
        {
          "name": "storage",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}