{
  "metadata": {
    "timestamp": 1736609008819,
    "page": 233,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JeremyLiao/LiveEventBus",
      "stars": 3911,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.29296875,
          "content": "# Built application files\n*.apk\n*.ap_\n\n# Files for the ART/Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\nout/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# Android Studio Navigation editor temp files\n.navigation/\n\n# Android Studio captures folder\ncaptures/\n\n# IntelliJ\n*.iml\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/gradle.xml\n.idea/assetWizardSettings.xml\n.idea/dictionaries\n.idea/libraries\n.idea/caches\n\n# Keystore files\n# Uncomment the following line if you do not want to check your keystore files in.\n#*.jks\n\n# External native build folder generated in Android Studio 2.2 and later\n.externalNativeBuild\n\n# Google Services (e.g. APIs or Firebase)\ngoogle-services.json\n\n# Freeline\nfreeline.py\nfreeline/\nfreeline_project_description.json\n\n# fastlane\nfastlane/report.xml\nfastlane/Preview.html\nfastlane/screenshots\nfastlane/test_output\nfastlane/readme.md\n\nrelease\ntarget\nbuild\n.settings\n.project\n.classpath\n.idea\n.DS_Store\nbin\ngen\nproguard\n.pmd\n*~\n*.iml\ntmp\ngen-external-apklibs\nout\ntmp\ncoverage\nbuild/\n.gradle/\nlocal.properties\n.gradletasknamecache\nsrc/main/provided_libs\nsrc/main/assets/*.dex\nsrc/main/assets/mtdata*.json\nreports/\naartojar/\nkeystore\ncaptures\nrepo/\n*publish*\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.865234375,
          "content": "# LiveEventBus\n![license](https://img.shields.io/github/license/JeremyLiao/LiveEventBus.svg) [![version](https://img.shields.io/badge/JCenter-v1.7.3-blue.svg)](https://mvnrepository.com/artifact/com.jeremyliao/live-event-bus) [![version](https://img.shields.io/badge/maven-v1.8.0-blue)](https://search.maven.org/artifact/io.github.jeremyliao/live-event-bus)\n\nLiveEventBus是一款Android消息总线，基于LiveData，具有生命周期感知能力，支持Sticky，支持AndroidX，支持跨进程，支持跨APP\n![logo](https://user-images.githubusercontent.com/23290617/68295106-97e64380-00cc-11ea-919d-605f123ec084.png)\n\n## 为什么要用LiveEventBus\n##### 生命周期感知\n- [x] 消息随时订阅，自动取消订阅\n- [x] 告别消息总线造成的内存泄漏\n- [x] 告别生命周期造成的崩溃\n##### 范围全覆盖的消息总线解决方案\n- [x] 进程内消息发送\n- [x] App内，跨进程消息发送\n- [x] App之间的消息发送\n##### 更多特性支持\n- [x] 免配置直接使用，懒人最爱\n- [x] 支持Sticky粘性消息\n- [x] 支持AndroidX\n- [x] 支持延迟发送\n- [x] 观察者的多种接收模式（全生命周期/激活状态可接受消息）\n\n## 常用消息总线对比\n\n消息总线 | 延迟发送 | 有序接收消息 | Sticky | 生命周期感知 | 跨进程/APP | 线程分发\n---|---|---|---|---|---|---\nEventBus | :x: | :white_check_mark: | :white_check_mark: | :x: | :x: | :white_check_mark:\nRxBus | :x: | :x: | :white_check_mark: | :x: | :x: | :white_check_mark:\nLiveEventBus | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :white_check_mark: | :x:\n\n#### 想了解更多？请点击：[全面了解Android消息总线](https://github.com/JeremyLiao/SmartEventBus/blob/master/docs/bus_all.md)\n\n## 使用\n> 1.8及以上版本全面迁移至maven，同时groupID变为io.github.jeremyliao，1.8以下版本保留JCenter\n#### maven\n\n- 非AndroidX\n```\nimplementation 'io.github.jeremyliao:live-event-bus:1.8.0'\n```\n- AndroidX\n```\nimplementation 'io.github.jeremyliao:live-event-bus-x:1.8.0'\n```\n#### JCenter\n- 非AndroidX\n\n```\nimplementation 'com.jeremyliao:live-event-bus:1.7.3'\n```\n- AndroidX\n```\nimplementation 'com.jeremyliao:live-event-bus-x:1.7.3'\n```\n\n## 快速开始\n### 订阅消息\n- 以生命周期感知模式订阅消息\n```java\nLiveEventBus\n\t.get(\"some_key\", String.class)\n\t.observe(this, new Observer<String>() {\n\t    @Override\n\t    public void onChanged(@Nullable String s) {\n\t    }\n\t});\n```\n\n- 以Forever模式订阅消息\n\n```java\nLiveEventBus\n\t.get(\"some_key\", String.class)\n\t.observeForever(observer);\n```\n### 发送消息\n- 不定义消息直接发送\n```java\nLiveEventBus\n\t.get(\"some_key\")\n\t.post(some_value);\n```\n\n- 先定义消息，再发送消息\n\n```\npublic class DemoEvent implements LiveEvent {\n    public final String content;\n\n    public DemoEvent(String content) {\n        this.content = content;\n    }\n}\n```\n\n```\nLiveEventBus\n        .get(DemoEvent.class)\n        .post(new DemoEvent(\"Hello world\"));\n```\n\n## 详细使用文档\n### 获取Observable\n##### 通过name获取Observable\n```\nObservable<T> get(@NonNull String key, @NonNull Class<T> type)\n```\n```\nObservable<Object> get(@NonNull String key)\n```\n##### 通过event type获取Observable\n```\n<T extends LiveEvent> Observable<T> get(@NonNull Class<T> eventType)\n```\n### 消息发送\n##### 进程内发送消息\n```\nvoid post(T value)\n```\n##### App内发送消息，跨进程使用\n```java\nvoid postAcrossProcess(T value)\n```\n##### App之间发送消息\n```java\nvoid postAcrossApp(T value)\n```\n##### 进程内发送消息，延迟发送\n```java\nvoid postDelay(T value, long delay)\n```\n##### 进程内发送消息，延迟发送，带生命周期\n```\nvoid postDelay(LifecycleOwner sender, T value, long delay)\n```\n##### 进程内发送消息，有序发送\n```java\nvoid postOrderly(T value)\n```\n##### 以广播的形式发送一个消息\n- 需要跨进程、跨APP发送消息的时候调用该方法\n- 建议尽量使用postAcrossProcess、postAcrossApp\n```\nvoid broadcast(T value, boolean foreground, boolean onlyInApp)\n```\n### 消息订阅\n##### 以生命周期感知模式订阅消息\n- 具有生命周期感知能力，LifecycleOwner销毁时自动取消订阅，不需要调用removeObserver\n```\nvoid observe(@NonNull LifecycleOwner owner, @NonNull Observer<T> observer)\n```\n##### 以Forever模式订阅和取消订阅消息\n- Forever模式订阅消息，需要调用removeObserver取消订阅\n```\nvoid observeForever(@NonNull Observer<T> observer)\n```\n##### 取消订阅消息\n```\nvoid removeObserver(@NonNull Observer<T> observer)\n```\n##### Sticky模式订阅消息\n- Sticky模式\n- 支持在订阅消息的时候设置Sticky模式，这样订阅者可以接收到之前发送的消息。\n- 以Sticky模式订阅消息，具有生命周期感知能力，LifecycleOwner销毁时自动取消订阅，不需要调用removeObserver\n```\nvoid observeSticky(@NonNull LifecycleOwner owner, @NonNull Observer<T> observer)\n```\n##### Sticky模式Forever订阅消息\n- Forever模式订阅消息，需要调用removeObserver取消订阅，Sticky模式\n```\nvoid observeStickyForever(@NonNull Observer<T> observer)\n```\n### 跨进程消息\n##### 支持对基本数据类型消息的跨进程发送\n1. int\n2. float\n3. long\n4. boolean\n5. double\n6. String\n##### 支持Serializable和Parcelable类型消息的跨进程发送\n- 提供SerializableProcessor\n- 提供ParcelableProcessor\n##### 支持Bean类型消息的跨进程发送\n- 提供GsonProcessor以Gson方式提供支持\n- 需要用注解@IpcConfig指定GsonProcessor：\n```\n@IpcConfig(processor = GsonProcessor.class)\n```\n> 1.8及以上版本由于拆分了GsonProcessor，需要引入lebx-processor-gson\n\n- 非AndroidX\n```\nimplementation 'io.github.jeremyliao:leb-processor-gson:x.x.x'\n```\n- AndroidX\n```\nimplementation 'io.github.jeremyliao:lebx-processor-gson:x.x.x'\n```\n##### 支持自定义扩展\n- 实现自定义Processor，实现Processor接口\n- 用注解@IpcConfig指定自定义Processor\n\n### 老版本文档\n-  如果使用1.4.X版本，请参考[使用方法](docs/DIRECTION_1_4.md)\n-  如果使用1.3.X及以下版本，请参考[使用方法](docs/DIRECTION_1_3.md)\n\n## 更多使用场景\n#### SmartEventBus\nSmartEventBus是一个Android平台的消息总线框架，这是一款非常smart的消息总线框架，能让你定制自己的消息总线。\n[SmartEventBus](https://github.com/JeremyLiao/SmartEventBus)\n\n#### 在组件化中使用LiveEventBus\n[android-modular](https://github.com/JeremyLiao/android-modular)\n\n## 配置\n在Application.onCreate方法中配置：\n\n```\nLiveEventBus\n        .config()\n        ...\n```\n\n- **lifecycleObserverAlwaysActive**\n配置LifecycleObserver（如Activity）接收消息的模式（默认值true）\n\n- **autoClear**\n配置在没有Observer关联的时候是否自动清除LiveEvent以释放内存（默认值false）\n\n#### 更多配置信息，请点击：[LiveEventBus的配置](docs/config.md)\n\n## 混淆规则\n```\n-dontwarn com.jeremyliao.liveeventbus.**\n-keep class com.jeremyliao.liveeventbus.** { *; }\n-keep class android.arch.lifecycle.** { *; }\n-keep class android.arch.core.** { *; }\n```\nfor androidx:\n```\n-dontwarn com.jeremyliao.liveeventbus.**\n-keep class com.jeremyliao.liveeventbus.** { *; }\n-keep class androidx.lifecycle.** { *; }\n-keep class androidx.arch.core.** { *; }\n```\n## 常见问题Q&A\n> Issues上最经常被提问的问题\n\n- Q：收不到消息怎么办？\n\n    A：通过Console.getInfo()获取即时的调试信息，主要去观察对应的key下面有没有你关注的Observer（[Console的用法](https://github.com/JeremyLiao/LiveEventBus/blob/master/docs/console.md)）\n    ```\n    *********Event info*********\n    Event name: key_test_delay_life\n        version: -1\n        hasActiveObservers: true\n        hasObservers: true\n        ActiveCount: 1\n        ObserverCount: 1\n        Observers: \n            [com.jeremyliao.liveeventbus.core.LiveEventBusCore$ObserverWrapper@992681d=android.arch.lifecycle.ExternalLiveData$ExternalLifecycleBoundObserver@bc258f4]\n    ```\n- Q：收到重复的消息怎么办？\n\n    A：同样通过Console.getInfo()获取即时的调试信息，主要去观察有没有重复注册的Observer（[Console的用法](https://github.com/JeremyLiao/LiveEventBus/blob/master/docs/console.md)）\n    \n- Q：JCenter要关闭了，什么时候迁移？\n\n    A：1.8及以上版本全面迁移至maven，同时groupID变为io.github.jeremyliao，1.8以下版本保留JCenter\n    \n- Q：如何传递List<String>或者Pair<Boolean, Double>这种泛型对象？\n\n    A：代码上的写法有两种，供参考：\n        \n    ```\n    LiveEventBus\n            .get(KEY_TEST_OBSERVE_FOREVER, List.class)\n            .observeForever(new Observer<List>() {\n                @Override\n                public void onChanged(@Nullable List list) {\n                    List<String> stringList = list;\n                }\n            });\n    ```\n    \n    ```\n    Observable<List<String>> observable = LiveEventBus.get(KEY_TEST_OBSERVE_FOREVER);\n    observable.observeForever(new Observer<List<String>>() {\n        @Override\n        public void onChanged(@Nullable List<String> strings) {\n        }\n    });\n    ```\n- Q：项目中不用Gson库，如何去掉依赖？\n\n    A：使用1.8以上的版本，对gson相关代码进行了拆分\n\n> 若问题不能解决，请提issue。\n\n## 其他分支版本\n#### [AndroidX](/branchs/live-event-bus-x/liveeventbus-x/src/main/java/com/jeremyliao/liveeventbus)\n- [x] 支持AndroidX\n- [x] 同master版本一致\n\n#### [classic](/branchs/live-event-bus-classic/liveeventbus-classic/src/main/java/com/jeremyliao/liveeventbus/LiveEventBus.java)\n- [x] 经典实现版，整个实现就一个java文件\n- [x] 只支持激活状态（Started）可以实时收到消息，非激活状态（Stoped）无法实时收到消息，需等到Activity重新变成激活状态，方可收到消息\n- [x] 不支持跨进程通信\n\n#### [v2](/branchs/live-event-bus-v2/liveeventbus-v2/src/main/java/com/jeremyliao/liveeventbus)\n- [x] v2版，历史版本，已废弃\n- [x] 为了解决非激活态不能实时收到消息的问题，采用修改LiveData源码的方式实现\n\n## [示例和DEMO](docs/DEMO.md)\n\n## 文档\n#### 实现原理\n- LiveEventBus的实现原理可参见作者在美团技术博客上的博文：\n[Android消息总线的演进之路：用LiveDataBus替代RxBus、EventBus](https://tech.meituan.com/Android_LiveDataBus.html)\n- 该博文是初版LiveEventBus的实现原理，与当前版本的实现可能不一致，仅供参考\n\n## 质量\n- [x] 编写了30个测试用例以确保LiveEventBus能够正常运行。\n- [x] 具体测试用例参见[LiveEventBusTest](/live-event-bus/app/src/androidTest/java/com/jeremyliao/lebapp/LiveEventBusTest.java)\n\n## 版本\n\n版本 | 功能\n---|---\n1.8.x | 迁移至maven，拆分gson-converter\n1.7.x | 优化接口设计，优化实现逻辑，修复一些问题\n1.6.x | 优化接口设计，优化实现逻辑，修复一些问题\n1.5.x | 优化接口设计，使用起来更简洁\n1.4.x | 简化对外暴露的接口，重构核心实现，支持前后台线程调用\n1.3.x | 支持跨进程、跨APP通信\n1.2.x | 支持接收消息的模式，支持AndroidX\n1.1.x | 修复了一些问题\n1.0.x | 初版，支持基本功能\n\n## 主要功能提交记录\n1. 主要功能完成（Jul 11, 2018）\n2. 支持Sticky（Aug 8, 2018）\n3. 修复在后台线程PostValue会丢失消息的问题（Aug 9, 2018）\n4. 解决发送给Stop状态Observer消息无法及时收到的问题（Aug 18, 2018）\n5. 解决了Resumed状态的Activity发生订阅，订阅者会收到订阅之前发布的消息的问题。特别感谢@MelonWXD发现了这个问题（Dec 8，2018）\n6. 在removeObserver的时候，检查livedata上有没有observer，没有则删除这个livadata，以减少内存占用。特别感谢@GreenhairTurtle提供的解决方案（Dec 27，2018）\n7. 支持设置LifecycleObserver接收消息的模式，支持在整个生命周期实时接收消息和只在激活态实时接收消息两种模式（Jan 22，2019）\n8. 支持AndroidX（Mar 8，2019）\n9. 支持跨进程、跨APP（Mar 26，2019）\n10. 简化对外暴露的接口，重构核心实现，支持前后台线程调用（Apr 4，2019）\n\n## 其他\n- 欢迎提Issue与作者交流\n- 欢迎提Pull request，帮助 fix bug，增加新的feature，让LiveEventBus变得更强大、更好用\n\n## More Open Source by JeremyLiao\n\n1. [InterfaceLoader](https://github.com/JeremyLiao/InterfaceLoader) 史上最好用的Android跨进程接口调用框架件\n2. [FastSharedPreferences](https://github.com/JeremyLiao/FastSharedPreferences) 一个Android平台的高性能key-value组件\n3. [SmartEventBus](https://github.com/JeremyLiao/SmartEventBus) SmartEventBus是一个Android平台的消息总线框架，这是一款非常smart的消息总线框架，能让你定制自己的消息总线。\n4. [android-modular](https://github.com/JeremyLiao/android-modular) 一套Android组件化的实施方案和支撑框架\n5. [DataLoader](https://github.com/JeremyLiao/DataLoader) 一个Android异步数据加载框架，用于Activity打开之前预加载数据，页面启动速度优化利器\n\n更多，[请点击](https://github.com/JeremyLiao?tab=repositories)\n\n## 深入学习Android系列，让你精通Android\n#### Flutter系列\n- [JeremyLiao/flutter-learn](https://github.com/JeremyLiao/flutter-learn) \n- [alibaba/flutter-go](https://github.com/alibaba/flutter-go) \n#### Kotlin系列\n- [MindorksOpenSource/from-java-to-kotlin](https://github.com/MindorksOpenSource/from-java-to-kotlin) \n- [JeremyLiao/kotlin-compare-to-java](https://github.com/JeremyLiao/kotlin-compare-to-java) \n#### Gradle系列\n- [JeremyLiao/android-gradle-study](https://github.com/JeremyLiao/android-gradle-study) \n#### 算法系列\n- [labuladong/fucking-algorithm](https://github.com/labuladong/fucking-algorithm) \n#### 测试系列\n- [JeremyLiao/jacoco-android-demo](https://github.com/JeremyLiao/jacoco-android-demo) \n\t\n### [招聘|抖音成都招聘|有兴趣的同学可以点进去看一下，谢谢](https://github.com/JeremyLiao/ByteDanceRecruit)\n"
        },
        {
          "name": "branchs",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "live-event-bus",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}