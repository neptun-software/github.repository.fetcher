{
  "metadata": {
    "timestamp": 1736609010708,
    "page": 236,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alibaba/fastjson2",
      "stars": 3898,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.453125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\nindent_style = space\nindent_size = 4\ntab_width = 4\nij_continuation_indent_size = 8\n\n[*.java]\nij_java_doc_align_exception_comments = false\nij_java_doc_align_param_comments = false\n\n[*.{yaml, yml, sh, ps1}]\nindent_size = 2\n\n[*.{md, mkd, markdown}]\ntrim_trailing_whitespace = false\n\n[{**/res/**.xml, **/AndroidManifest.xml}]\nij_continuation_indent_size = 4\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.013671875,
          "content": "* text eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.607421875,
          "content": "# Log file\n*.log\n\n# Package Files #\n*.nar\n*.zip\n*.tar.gz\n*.rar\n\n# Created by .ignore support plugin (hsz.mobi)\n\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm\n\n*.iml\n\n## Directory-based project format:\n.idea/\n# if you remove the above rule, at least ignore the following:\n\n# User-specific stuff:\n# .idea/workspace.xml\n# .idea/tasks.xml\n# .idea/dictionaries\n\n# Sensitive or high-churn files:\n# .idea/dataSources.ids\n# .idea/dataSources.xml\n# .idea/sqlDataSources.xml\n# .idea/dynamic.xml\n# .idea/uiDesigner.xml\n\n# Gradle:\n# .idea/gradle.xml\n# .idea/libraries\n\n# Mongo Explorer plugin:\n# .idea/mongoSettings.xml\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n\n### Eclipse template\n*.pydevproject\n.metadata\n.gradle\nbin/\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.settings/\n.loadpath\n\n# Eclipse Core\n.project\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# CDT-specific\n.cproject\n\n# JDT-specific (Eclipse Java Development Tools)\n.classpath\n\n# PDT-specific\n.buildpath\n\n# sbteclipse plugin\n.target\n\n# TeXlipse plugin\n.texlipse\n\n\n### NetBeans template\nnbproject/private/\nbuild/\nnbbuild/\ndist/\nnbdist/\nnbactions.xml\n.nb-gradle/\n\n\n### Vim template\n# swap\n[._]*.s[a-w][a-z]\n[._]s[a-w][a-z]\n# session\nSession.vim\n# temporary\n.netrwhist\n*~\n# auto-generated tag files\ntags\n\n\n### Emacs template\n# -*- mode: gitignore; -*-\n\\#*\\#\n/.emacs.desktop\n/.emacs.desktop.lock\n*.elc\nauto-save-list\ntramp\n.\\#*\n\n# Org-mode\n.org-id-locations\n*_archive\n\n# flymake-mode\n*_flymake.*\n\n# eshell files\n/eshell/history\n/eshell/lastdir\n\n# elpa packages\n/elpa/\n\n# reftex files\n*.rel\n\n# AUCTeX auto folder\n/auto/\n\n# cask packages\n.cask/\n\n# Flycheck\nflycheck_*.el\n\n# server auth directory\n/server/\n\n# projectiles files\n.projectile\n\n\n### Maven template\n\n# Avoid ignoring maven wrapper jar file (.jar files are usually ignored)\n!.mvn/wrapper/maven-wrapper.jar\n\ntarget/\npom.xml.tag\npom.xml.releaseBackup\npom.xml.versionsBackup\npom.xml.next\nrelease.properties\n\n\n### Java template\n*.class\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.ear\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n\n### OSX template\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\u0000\u0000\n\n# Thumbnails\n._*\n\n# Files that might appear on external disk\n.Spotlight-V100\n.Trashes\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n\n### Linux template\n# KDE directory preferences\n.directory\n\n# Linux trash folder which might appear on any partition or disk\n.Trash-*\n\n\n### Windows template\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n# temporary files which can be created if a process still has a handle open of a deleted file\n.fuse_hidden*\n/benchmark/dependency-reduced-pom.xml\n/.code/\n/benchmark/.code/\n/example-graalvm-native/com.alibaba.fastjson2.example.graalvm_native.app\n/example-graalvm-native/com.alibaba.fastjson2.example.graalvm_native.app.build_artifacts.txt\n/benchmark/src/main/java/com/alibaba/fastjson2/benchmark/taobao/\n/benchmark/src/main/resources/taobao/\n/benchmark/src/test/java/com/alibaba/fastjson2/benchmark/taobao/\n/.vscode/\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.365234375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nshaojin.wensj@alibaba-inc.com.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.630859375,
          "content": "\n# Contributing\n\n## Create pull request\nPR are always welcome, even if they only contain small fixes like typos, or a few lines of code. If there will be a significant effort, please document it as an issue and get a discussion going before starting to work on it.\n\nPlease submit a PR broken down into small changes bit by bit. A PR consisting of a lot of features and code changes may be hard to review. It is recommended to submit PRs in an incremental fashion.\n\nThis [Wiki](https://github.com/alibaba/fastjson2/wiki) contains information about scenarios structure, design and api documents, how to use, how to run it, and more.\n\nNote: If you split your pull request to small changes, please make sure any of the changes goes to master will not break anything. Otherwise, it can not be merged until this feature complete.\n\n## Report issues\nIt is a great way to contribute by reporting an issue. Well-written and complete bug reports are always welcome! Please open an issue and follow the template to fill in required information.\n\nBefore opening any issue, please look up the existing issues to avoid submitting a duplication.\nIf you find a match, you can \"subscribe\" to it to get notified on updates. If you have additional helpful information about the issue, please leave a comment.\n\nWhen reporting issues, always include:\n\n* Which version you are using.\n* Steps to reproduce the issue.\n* Snapshots or log files if needed\n\nBecause the issues are open to the public, when submitting files, be sure to remove any sensitive information, e.g. username, password, IP address, and company name. You can\nreplace those parts with \"REDACTED\" or other strings like \"****\".\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.4609375,
          "content": "[![Java CI](https://img.shields.io/github/actions/workflow/status/alibaba/fastjson2/ci.yaml?branch=main&logo=github&logoColor=white)](https://github.com/alibaba/fastjson2/actions/workflows/ci.yaml)\n[![Codecov](https://img.shields.io/codecov/c/github/alibaba/fastjson2/main?logo=codecov&logoColor=white)](https://codecov.io/gh/alibaba/fastjson2/branch/main)\n[![Maven Central](https://img.shields.io/maven-central/v/com.alibaba.fastjson2/fastjson2?logo=apache-maven&logoColor=white)](https://search.maven.org/artifact/com.alibaba.fastjson2/fastjson2)\n[![GitHub release](https://img.shields.io/github/release/alibaba/fastjson2)](https://github.com/alibaba/fastjson2/releases)\n[![Java support](https://img.shields.io/badge/Java-8+-green?logo=java&logoColor=white)](https://openjdk.java.net/)\n[![License](https://img.shields.io/github/license/alibaba/fastjson2?color=4D7A97&logo=apache)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-ready--to--code-green?label=gitpod&logo=gitpod&logoColor=white)](https://gitpod.io/#https://github.com/alibaba/fastjson2)\n[![Last SNAPSHOT](https://img.shields.io/nexus/snapshots/https/oss.sonatype.org/com.alibaba.fastjson2/fastjson2?label=latest%20snapshot)](https://oss.sonatype.org/content/repositories/snapshots/com/alibaba/fastjson2/)\n[![GitHub Stars](https://img.shields.io/github/stars/alibaba/fastjson2)](https://github.com/alibaba/fastjson2/stargazers)\n[![GitHub Forks](https://img.shields.io/github/forks/alibaba/fastjson2)](https://github.com/alibaba/fastjson2/fork)\n[![user repos](https://badgen.net/github/dependents-repo/alibaba/fastjson2?label=user%20repos)](https://github.com/alibaba/fastjson2/network/dependents)\n[![GitHub Contributors](https://img.shields.io/github/contributors/alibaba/fastjson2)](https://github.com/alibaba/fastjson2/graphs/contributors)\n\n##### [📖 English Documentation](README_EN.md) | 📖 中文文档\n##### 本项目的Issues会被同步沉淀至[阿里云开发者社区](https://developer.aliyun.com/ask/)\n\n# FASTJSON v2\n\n`FASTJSON 2`是一个性能极致并且简单易用的Java JSON库。\n\n- `FASTJSON 2`是`FASTJSON`项目的重要升级，和FASTJSON 1相比，性能有非常大的提升，解决了autoType功能因为兼容和白名单的安全性问题。\n- 性能极致，性能远超过其他流行JSON库，包括jackson/gson/org.json，性能数据: [https://github.com/alibaba/fastjson2/wiki/fastjson_benchmark](https://github.com/alibaba/fastjson2/wiki/fastjson_benchmark)\n- 支持JDK新特性，包括`JDK 11`/`JDK 17`，针对`compact string`优化，支持Record，支持`GraalVM Native-Image`\n- 完善的[`JSONPath`](https://alibaba.github.io/fastjson2/jsonpath_cn)支持，支持[SQL:2016](https://en.wikipedia.org/wiki/SQL:2016)的JSONPath语法\n- 支持`Android 8+`，客户端和服务器一套API\n- 支持`Kotlin` [https://alibaba.github.io/fastjson2/kotlin_cn](https://alibaba.github.io/fastjson2/kotlin_cn)\n- 支持`JSON Schema` [https://alibaba.github.io/fastjson2/json_schema_cn](https://alibaba.github.io/fastjson2/json_schema_cn)\n- 新增加支持二进制格式JSONB [https://alibaba.github.io/fastjson2/jsonb_format_cn](https://alibaba.github.io/fastjson2/jsonb_format_cn)\n\n![fastjson logo](https://user-images.githubusercontent.com/1063891/233821110-0c912009-4de3-4664-a27e-25274f2fa9c1.jpg)\n\n# 1. 使用准备\n\n## 1.1 添加依赖\n\n在`fastjson v2`中，`groupId`和`1.x`不一样，是`com.alibaba.fastjson2`：\n\n`Maven`:\n\n```xml\n<dependency>\n    <groupId>com.alibaba.fastjson2</groupId>\n    <artifactId>fastjson2</artifactId>\n    <version>2.0.54</version>\n</dependency>\n```\n\n`Gradle`:\n\n```groovy\ndependencies {\n    implementation 'com.alibaba.fastjson2:fastjson2:2.0.54'\n}\n```\n\n可以在 [maven.org](https://search.maven.org/artifact/com.alibaba.fastjson2/fastjson2) 查看最新可用的版本。\n\n## 1.2 其他模块\n\n### `Fastjson v1`兼容模块\n\n如果原来使用`fastjson 1.2.x`版本，可以使用兼容包，兼容包不能保证100%兼容，请仔细测试验证，发现问题请及时反馈。\n\n`Maven`:\n\n```xml\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>fastjson</artifactId>\n    <version>2.0.54</version>\n</dependency>\n```\n\n`Gradle`:\n\n```groovy\ndependencies {\n    implementation 'com.alibaba:fastjson:2.0.54'\n}\n```\n\n### `Fastjson Kotlin`集成模块\n\n如果项目使用`Kotlin`，可以使用`fastjson-kotlin`模块，使用方式上采用`kotlin`的特性。\n\n* `Maven`:\n\n```xml\n<dependency>\n    <groupId>com.alibaba.fastjson2</groupId>\n    <artifactId>fastjson2-kotlin</artifactId>\n    <version>2.0.54</version>\n</dependency>\n```\n\n酌情添加标准库(kotlin-stdlib)、反射库(kotlin-reflect)，\n其中若使用数据类(data class)、通过构造函数传入参数则添加反射库。\n\n```xml\n<dependency>\n    <groupId>org.jetbrains.kotlin</groupId>\n    <artifactId>kotlin-stdlib</artifactId>\n    <version>${kotlin-version}</version>\n</dependency>\n\n<dependency>\n    <groupId>org.jetbrains.kotlin</groupId>\n    <artifactId>kotlin-reflect</artifactId>\n    <version>${kotlin-version}</version>\n</dependency>\n```\n\n* `Kotlin Gradle`:\n\n```kotlin\ndependencies {\n    implementation(\"com.alibaba.fastjson2:fastjson2-kotlin:2.0.54\")\n}\n```\n\n```kotlin\ndependencies {\n    implementation(\"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\")\n    implementation(\"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\")\n}\n```\n\n### `Fastjson Extension`扩展模块\n\n如果项目使用`SpringFramework`等框架，可以使用`fastjson-extension`模块，使用方式参考 [SpringFramework Support](docs/spring_support_cn.md)。\n\n`Maven`:\n\n```xml\n<dependency>\n    <groupId>com.alibaba.fastjson2</groupId>\n    <artifactId>fastjson2-extension-spring5</artifactId>\n    <version>2.0.54</version>\n</dependency>\n```\n\n```xml\n<dependency>\n    <groupId>com.alibaba.fastjson2</groupId>\n    <artifactId>fastjson2-extension-spring6</artifactId>\n    <version>2.0.54</version>\n</dependency>\n```\n\n`Gradle`:\n\n```groovy\ndependencies {\n    implementation 'com.alibaba.fastjson2:fastjson2-extension-spring5:2.0.54'\n}\n```\n\n\n```groovy\ndependencies {\n    implementation 'com.alibaba.fastjson2:fastjson2-extension-spring6:2.0.54'\n}\n```\n\n# 2. 简单使用\n\n在`fastjson v2`中，`package`和`1.x`不一样，是`com.alibaba.fastjson2`。如果你之前用的是`fastjson1`，大多数情况直接更包名就即可。\n\n### 2.1 将`JSON`解析为`JSONObject`\n\n`Java`:\n\n```java\nString text = \"...\";\nJSONObject data = JSON.parseObject(text);\n\nbyte[] bytes = ...;\nJSONObject data = JSON.parseObject(bytes);\n```\n\n`Kotlin`:\n\n```kotlin\nimport com.alibaba.fastjson2.*\n\nval text = ... // String\nval data = text.parseObject()\n\nval bytes = ... // ByteArray\nval data = bytes.parseObject() // JSONObject\n```\n\n### 2.2 将`JSON`解析为`JSONArray`\n\n`Java`:\n\n```java\nString text = \"...\";\nJSONArray data = JSON.parseArray(text);\n```\n\n`Kotlin`:\n\n```kotlin\nimport com.alibaba.fastjson2.*\n\nval text = ... // String\nval data = text.parseArray() // JSONArray\n```\n\n### 2.3 将`JSON`解析为`Java`对象\n\n`Java`:\n\n```java\nString text = \"...\";\nUser data = JSON.parseObject(text, User.class);\n```\n\n`Kotlin`:\n\n```kotlin\nimport com.alibaba.fastjson2.*\n\nval text = ... // String\nval data = text.to<User>() // User\nval data = text.parseObject<User>() // User\n```\n\n### 2.4 将`Java`对象序列化为`JSON`\n\n`Java`:\n\n```java\nObject data = \"...\";\nString text = JSON.toJSONString(data);\nbyte[] text = JSON.toJSONBytes(data);\n```\n\n`Kotlin`:\n\n```kotlin\nimport com.alibaba.fastjson2.*\n\nval data = ... // Any\nval text = data.toJSONString() // String\nval bytes = data.toJSONByteArray() // ByteArray\n```\n\n### 2.5 使用`JSONObject`、`JSONArray`\n\n#### 2.5.1 获取简单属性\n\n```java\nString text = \"{\\\"id\\\": 2,\\\"name\\\": \\\"fastjson2\\\"}\";\nJSONObject obj = JSON.parseObject(text);\n\nint id = obj.getIntValue(\"id\");\nString name = obj.getString(\"name\");\n```\n\n```java\nString text = \"[2, \\\"fastjson2\\\"]\";\nJSONArray array = JSON.parseArray(text);\n\nint id = array.getIntValue(0);\nString name = array.getString(1);\n```\n\n#### 2.5.2 读取`JavaBean`\n\n`Java`:\n\n```java\nJSONArray array = ...\nJSONObject obj = ...\n\nUser user = array.getObject(0, User.class);\nUser user = obj.getObject(\"key\", User.class);\n```\n\n`Kotlin`:\n\n```kotlin\nval array = ... // JSONArray\nval obj = ... // JSONObject\n\nval user = array.to<User>(0)\nval user = obj.to<User>(\"key\")\n```\n\n#### 2.5.3 转为`JavaBean`\n\n`Java`:\n\n```java\nJSONArray array = ...\nJSONObject obj = ...\n\nUser user = obj.toJavaObject(User.class);\nList<User> users = array.toJavaList(User.class);\n```\n\n`Kotlin`:\n\n```kotlin\nval array = ... // JSONArray\nval obj = ... // JSONObject\n\nval user = obj.to<User>() // User\nval users = array.toList<User>() // List<User>\n```\n\n### 2.6 将`JavaBean`对象序列化为`JSON`\n\n`Java`:\n\n```java\nclass User {\n    public int id;\n    public String name;\n}\n\nUser user = new User();\nuser.id = 2;\nuser.name = \"FastJson2\";\n\nString text = JSON.toJSONString(user);\nbyte[] bytes = JSON.toJSONBytes(user);\n```\n\n`Kotlin`:\n\n```kotlin\nclass User(\n    var id: Int,\n    var name: String\n)\n\nval user = User()\nuser.id = 2\nuser.name = \"FastJson2\"\n\nval text = user.toJSONString() // String\nval bytes = user.toJSONByteArray() // ByteArray\n```\n\n序列化结果:\n\n```json\n{\n    \"id\"   : 2,\n    \"name\" : \"FastJson2\"\n}\n```\n\n# 3. 进阶使用\n\n### 3.1 使用`JSONB`\n\n#### 3.1.1 将`JavaBean`对象序列化`JSONB`\n\n```java\nUser user = ...;\nbyte[] bytes = JSONB.toBytes(user);\nbyte[] bytes = JSONB.toBytes(user, JSONWriter.Feature.BeanToArray);\n```\n\n#### 3.1.2 将`JSONB`数据解析为`JavaBean`\n\n```java\nbyte[] bytes = ...\nUser user = JSONB.parseObject(bytes, User.class);\nUser user = JSONB.parseObject(bytes, User.class, JSONReader.Feature.SupportBeanArrayMapping);\n```\n\n### 3.2 使用`JSONPath`\n\n#### 3.2.1 使用`JSONPath`读取部分数据\n\n```java\nString text = ...;\nJSONPath path = JSONPath.of(\"$.id\"); // 缓存起来重复使用能提升性能\n\nJSONReader parser = JSONReader.of(text);\nObject result = path.extract(parser);\n```\n\n#### 3.2.2 使用`JSONPath`读取部分`byte[]`的数据\n\n```java\nbyte[] bytes = ...;\nJSONPath path = JSONPath.of(\"$.id\"); // 缓存起来重复使用能提升性能\n\nJSONReader parser = JSONReader.of(bytes);\nObject result = path.extract(parser);\n```\n\n#### 3.2.3 使用`JSONPath`读取部分`byte[]`的数据\n\n```java\nbyte[] bytes = ...;\nJSONPath path = JSONPath.of(\"$.id\"); // 缓存起来重复使用能提升性能\n\nJSONReader parser = JSONReader.ofJSONB(bytes); // 注意这里使用ofJSONB方法\nObject result = path.extract(parser);\n```\n\n## Star History\n\n\n[![Star History Chart](https://api.star-history.com/svg?repos=alibaba/fastjson2&type=Date)](https://star-history.com/#alibaba/fastjson2)\n\n"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 9.8759765625,
          "content": "[![Java CI](https://img.shields.io/github/actions/workflow/status/alibaba/fastjson2/ci.yaml?branch=main&logo=github&logoColor=white)](https://github.com/alibaba/fastjson2/actions/workflows/ci.yaml)\n[![Codecov](https://img.shields.io/codecov/c/github/alibaba/fastjson2/main?logo=codecov&logoColor=white)](https://codecov.io/gh/alibaba/fastjson2/branch/main)\n[![Maven Central](https://img.shields.io/maven-central/v/com.alibaba.fastjson2/fastjson2?logo=apache-maven&logoColor=white)](https://search.maven.org/artifact/com.alibaba.fastjson2/fastjson2)\n[![GitHub release](https://img.shields.io/github/release/alibaba/fastjson2)](https://github.com/alibaba/fastjson2/releases)\n[![Java support](https://img.shields.io/badge/Java-8+-green?logo=java&logoColor=white)](https://openjdk.java.net/)\n[![License](https://img.shields.io/github/license/alibaba/fastjson2?color=4D7A97&logo=apache)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-ready--to--code-green?label=gitpod&logo=gitpod&logoColor=white)](https://gitpod.io/#https://github.com/alibaba/fastjson2)\n[![Last SNAPSHOT](https://img.shields.io/nexus/snapshots/https/oss.sonatype.org/com.alibaba.fastjson2/fastjson2?label=latest%20snapshot)](https://oss.sonatype.org/content/repositories/snapshots/com/alibaba/fastjson2/)\n[![GitHub Stars](https://img.shields.io/github/stars/alibaba/fastjson2)](https://github.com/alibaba/fastjson2/stargazers)\n[![GitHub Forks](https://img.shields.io/github/forks/alibaba/fastjson2)](https://github.com/alibaba/fastjson2/fork)\n[![user repos](https://badgen.net/github/dependents-repo/alibaba/fastjson2?label=user%20repos)](https://github.com/alibaba/fastjson2/network/dependents)\n[![GitHub Contributors](https://img.shields.io/github/contributors/alibaba/fastjson2)](https://github.com/alibaba/fastjson2/graphs/contributors)\n\n##### 📖 English Documentation | 📖 [中文文档](README.md)\n#####  The issues of fastjson will be also posted on [Alibaba Cloud Developer Community](https://developer.aliyun.com/ask/)\n\n# FASTJSON v2\n\n`FASTJSON v2` is an upgrade of the `FASTJSON`, with the goal of providing a highly optimized `JSON` library for the next ten years.\n\n- Supports the JSON and JSONB Protocols.\n- Supports full parsing and partial parsing.\n- Supports Java servers and Android Clients, and has big data applications.\n- Supports Kotlin [https://alibaba.github.io/fastjson2/kotlin_en](https://alibaba.github.io/fastjson2/kotlin_en)\n- Supports Android 8+ \n- Supports `Graal Native-Image` \n- Supports `JSON Schema` [https://alibaba.github.io/fastjson2/json_schema_cn](https://alibaba.github.io/fastjson2/json_schema_cn)\n\n![fastjson logo](https://user-images.githubusercontent.com/1063891/233821110-0c912009-4de3-4664-a27e-25274f2fa9c1.jpg)\n\nRelated Documents:\n\n- `JSONB` format documentation:  \n  [https://alibaba.github.io/fastjson2/jsonb_format_cn](https://alibaba.github.io/fastjson2/jsonb_format_cn)\n- `FASTJSON v2`'s performance has been significantly improved. For the benchmark, see here:  \n  [https://github.com/alibaba/fastjson2/wiki/fastjson_benchmark](https://github.com/alibaba/fastjson2/wiki/fastjson_benchmark)\n\n# 1. Prepare\n\n## 1.1 Download\n\n`FASTJSONv2`'s groupId is different from versions `1.x`, it is instead `com.alibaba.fastjson2`:\n\n`Maven`:\n\n```xml\n<dependency>\n    <groupId>com.alibaba.fastjson2</groupId>\n    <artifactId>fastjson2</artifactId>\n    <version>2.0.54</version>\n</dependency>\n```\n\n`Gradle`:\n\n```groovy\ndependencies {\n    implementation 'com.alibaba.fastjson2:fastjson2:2.0.54'\n}\n```\n\nFind the latest version of `FASTJSONv2` at [maven.org](https://search.maven.org/artifact/com.alibaba.fastjson2/fastjson2).\n\n## 1.2 Other modules\n\n### Compatible dependence of fastjson-v1\n\nIf you are using `fastjson 1.2.x`, you can use the compatibility package. The compatibility package cannot guarantee 100% compatibility. Please test  it yourself and report any problems.\n\n`Maven`:\n\n```xml\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>fastjson</artifactId>\n    <version>2.0.54</version>\n</dependency>\n```\n\n`Gradle`:\n\n```groovy\ndependencies {\n    implementation 'com.alibaba:fastjson:2.0.54'\n}\n```\n\n### `Kotlin` integration module `fastjson-kotlin`\n\nIf your project uses `kotlin`, you can use the `Fastjson-Kotlin` module, and use the characteristics of `kotlin`.\n\n`Maven`:\n\n```xml\n<dependency>\n    <groupId>com.alibaba.fastjson2</groupId>\n    <artifactId>fastjson2-kotlin</artifactId>\n    <version>2.0.54</version>\n</dependency>\n```\n\nAdd standard library(kotlin-stdlib) and reflection library(kotlin-reflect) as appropriate.\nIf the data class is used or the parameters are passed in through constructor, then add reflection library.\n\n```xml\n<dependency>\n    <groupId>org.jetbrains.kotlin</groupId>\n    <artifactId>kotlin-stdlib</artifactId>\n    <version>${kotlin-version}</version>\n</dependency>\n\n<dependency>\n    <groupId>org.jetbrains.kotlin</groupId>\n    <artifactId>kotlin-reflect</artifactId>\n    <version>${kotlin-version}</version>\n</dependency>\n```\n\n* `Kotlin Gradle`:\n\n```kotlin\ndependencies {\n    implementation(\"com.alibaba.fastjson2:fastjson2-kotlin:2.0.54\")\n}\n```\n\n```kotlin\ndependencies {\n    implementation(\"org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version\")\n    implementation(\"org.jetbrains.kotlin:kotlin-reflect:$kotlin_version\")\n}\n```\n\n### `Extension` integration module `fastjson-extension`\n\nIf your project uses a framework such as `SpringFramework`, you can use the `fastjson-extension` module, please refer to the usage [SpringFramework Support](docs/spring_support_en.md).\n\n`Maven`:\n\n```xml\n<dependency>\n    <groupId>com.alibaba.fastjson2</groupId>\n    <artifactId>fastjson2-extension</artifactId>\n    <version>2.0.54</version>\n</dependency>\n```\n\n`Gradle`:\n\n```groovy\ndependencies {\n    implementation 'com.alibaba.fastjson2:fastjson2-extension:2.0.54'\n}\n```\n\n# 2. Usage\n\nThe package name of `fastjson v2` is different from `fastjson v1`. It is `com.alibaba.fastjson2`. If you used `fastjson v1` before, simply change the package name.\n\n### 2.1 Parse `JSON` into `JSONObject`\n\n`Java`:\n\n```java\nString text = \"...\";\nJSONObject data = JSON.parseObject(text);\n\nbyte[] bytes = ...;\nJSONObject data = JSON.parseObject(bytes);\n```\n\n`Kotlin`:\n\n```kotlin\nimport com.alibaba.fastjson2.*\n\nval text = ... // String\nval data = text.parseObject()\n\nval bytes = ... // ByteArray\nval data = bytes.parseObject() // JSONObject\n```\n\n### 2.2 Parse `JSON` into `JSONArray`\n\n`Java`:\n\n```java\nString text = \"...\";\nJSONArray data = JSON.parseArray(text);\n```\n\n`Kotlin`:\n\n```kotlin\nimport com.alibaba.fastjson2.*\n\nval text = ... // String\nval data = text.parseArray() // JSONArray\n```\n\n### 2.3 Parse `JSON` into a Java Object\n\n`Java`:\n\n```java\nString text = \"...\";\nUser data = JSON.parseObject(text, User.class);\n```\n\n`Kotlin`:\n\n```kotlin\nimport com.alibaba.fastjson2.*\n\nval text = ... // String\nval data = text.to<User>() // User\nval data = text.parseObject<User>() // User\n```\n\n### 2.4 Serialization Java Object to `JSON`\n\n`Java`:\n\n```java\nObject data = \"...\";\nString text = JSON.toJSONString(data);\nbyte[] text = JSON.toJSONBytes(data);\n```\n\n`Kotlin`:\n\n```kotlin\nimport com.alibaba.fastjson2.*\n\nval data = ... // Any\nval text = data.toJSONString() // String\nval bytes = data.toJSONByteArray() // ByteArray\n```\n\n### 2.5 Use `JSONObject`, `JSONArray`\n\n#### 2.5.1 Get simple property\n\n```java\nString text = \"{\\\"id\\\": 2,\\\"name\\\": \\\"fastjson2\\\"}\";\nJSONObject obj = JSON.parseObject(text);\n\nint id = obj.getIntValue(\"id\");\nString name = obj.getString(\"name\");\n```\n\n```java\nString text = \"[2, \\\"fastjson2\\\"]\";\nJSONArray array = JSON.parseArray(text);\n\nint id = array.getIntValue(0);\nString name = array.getString(1);\n```\n\n#### 2.5.2 Get JavaBean\n\n`Java`:\n\n```java\nJSONArray array = ...\nJSONObject obj = ...\n\nUser user = array.getObject(0, User.class);\nUser user = obj.getObject(\"key\", User.class);\n```\n\n`Kotlin`:\n\n```kotlin\nval array = ... // JSONArray\nval obj = ... // JSONObject\n\nval user = array.to<User>(0)\nval user = obj.to<User>(\"key\")\n```\n\n#### 2.5.3 Convert to JavaBean\n\n`Java`:\n\n```java\nJSONArray array = ...\nJSONObject obj = ...\n\nUser user = obj.toJavaObject(User.class);\nList<User> users = array.toJavaList(User.class);\n```\n\n`Kotlin`:\n\n```kotlin\nval array = ... // JSONArray\nval obj = ... // JSONObject\n\nval user = obj.to<User>() // User\nval users = array.toList<User>() // List<User>\n```\n\n### 2.6 Serialize `JavaBean` to `JSON`\n\n`Java`:\n\n```java\nclass User {\n    public int id;\n    public String name;\n}\n\nUser user = new User();\nuser.id = 2;\nuser.name = \"FastJson2\";\n\nString text = JSON.toJSONString(user);\nbyte[] bytes = JSON.toJSONBytes(user);\n```\n\n`Kotlin`:\n\n```kotlin\nclass User(\n    var id: Int,\n    var name: String\n)\n\nval user = User()\nuser.id = 2\nuser.name = \"FastJson2\"\n\nval text = user.toJSONString() // String\nval bytes = user.toJSONByteArray() // ByteArray\n```\n\nSerialization result:\n```json\n{\n    \"id\"   : 2,\n    \"name\" : \"FastJson2\"\n}\n```\n\n# 3. Advanced usage\n\n### 3.1 Use `JSONB`\n\n#### 3.1.1 Serialize `JavaBean` to `JSONB`\n\n```java\nUser user = ...;\nbyte[] bytes = JSONB.toBytes(user);\nbyte[] bytes = JSONB.toBytes(user, JSONWriter.Feature.BeanToArray);\n```\n\n#### 3.1.2 Parse `JSONB` to `JavaBean`\n\n```java\nbyte[] bytes = ...\nUser user = JSONB.parseObject(bytes, User.class);\nUser user = JSONB.parseObject(bytes, User.class, JSONReader.Feature.SupportBeanArrayMapping);\n```\n\n### 3.2 Use `JSONPath`\n\n#### 3.2.1 Use `JSONPath` to read partial data\n\n```java\nString text = ...;\nJSONPath path = JSONPath.of(\"$.id\"); // Cached for reuse\n\nJSONReader parser = JSONReader.of(text);\nObject result = path.extract(parser);\n```\n\n#### 3.2.2 Read part of `byte[]` data using `JSONPath`\n\n```java\nbyte[] bytes = ...;\nJSONPath path = JSONPath.of(\"$.id\"); // Cached for reuse\n\nJSONReader parser = JSONReader.of(bytes);\nObject result = path.extract(parser);\n```\n\n#### 3.2.3 Read part of `byte[]` data using `JSONPath`\n\n```java\nbyte[] bytes = ...;\nJSONPath path = JSONPath.of(\"$.id\"); // Cached for reuse\n\nJSONReader parser = JSONReader.ofJSONB(bytes); // Use ofJSONB method\nObject result = path.extract(parser);\n```\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 5.5361328125,
          "content": "# 漏洞奖励计划 \n## 报告\n如果您认为自己在本程序中发现了任何安全（技术）漏洞，欢迎您通过 https://security.alibaba.com 向我们提交漏洞报告。\n如果您报告任何安全漏洞，请注意您可能包含以下信息（合格报告）：\n* git程序URL地址，运行的环境\n* 包含必要屏幕截图的详细说明\n* 重现漏洞的步骤以及修复漏洞的建议。\n* 其他有用信息\n\n## 处理\nASRC（Alibaba Security Response Center阿里安全响应中心）将尽快审核并回复您的提交内容，并在我们努力修复您提交的漏洞时随时通知您。如有必要，我们可能会与您联系以获取更多信息。\n\n\n## 条款和条件\n1. 仅接受技术漏洞并对其进行评级\n2. 出于安全原因，上报者同意与ASRC合作完成他/她提交的漏洞，不向任何第三方透露任何漏洞信息\n3. 如果不止一个人报告相同的安全漏洞，奖励将给予完成合格报告的第一个人\n4. 为了保护程序的用户，请在修复之前不要直接提交git的issue，也不要在社区讨论任何漏洞信息\n5. 所有奖励和声誉积分将提供给仅向ASRC提交其安全漏洞的上报者\n6. 安全漏洞奖励的解释权利归ASRC所有\n\n## 收集范围\n我们的主要收集漏洞类别是：\n* 服务器端请求伪造（SSRF）\n* SQL注入\n* 拒绝服务攻击\n* 远程执行代码（RCE）\n* XML外部实体攻击（XXE）\n* 访问控制问题（不安全的直接对象参考问题等）\n* 敏感目录遍历问题\n* 本地文件读取（LFD）\n* 敏感信息泄露（密钥，Cookie，Session等）\n\n## 奖励\n* 可直接导致严重问题的每个漏洞奖励7000元人民币\n* 存在限制及需要一定特殊环境下才能利用的问题将给予700-5600元人民币不等的奖励，比如需要用户主动点击才会触发的问题或需要admin权限\n* 只有在指定环境下才可以运行的利用将有可能被收纳但不给予奖励，或直接被忽略，比如只在fastjson+linux特定版本才会出现的问题\n\n## 不在收集范围的报告\n* 影响过时浏览器或平台用户的漏洞\n* Self-XSS\n* 会话固定\n* 内容欺骗\n* 缺少cookie标记\n* 混合内容警告\n* SSL / TLS问题\n* Clickjacking \n* 基于Flash的漏洞\n* 反射文件下载攻击（RFD）\n* 物理或社会工程攻击\n* 未验证自动化工具或扫描仪的结果\n* 登录/注销/未认证/低影响CSRF\n* 需要MITM或物理访问用户设备的攻击\n* 与网络协议或行业标准相关的问题\n* 不能用于直接攻击的错误信息泄露\n* 缺少与安全相关的HTTP标头等\n\n\n\n\n\n# Vulnerability Reward Program\n## Reporting\nIf you believe you have found any security (technical) vulnerability in the Program, you are welcomed to submit a vulnerability report to us at https://security.alibaba.com \nIn case of reporting any security vulnerability, please be noted that you may including following information (Qualified Reporting):\n* The git program URL and running version \n* A detailed description with necessary screenshots\n* Steps to reappearance the vulnerability and your advice to fix it\n* Other useful information\n\n\n## Processing\nASRC (Alibaba Security Response Center) will review and respond as quickly as possible to your submission, and keep you informed as we work to fix the vulnerability you submitted. We may contact you for further information if necessary.\n\n\n## Terms and Conditions\n1. ONLY technical vulnerabilities will be accepted and rated.\n2. With regarding to security reasons, reporters agree to cooperate with ASRC exclusively on the vulnerability he/she submitted and not disclose any information of vulnerability to any third-parties.\n3. In the case that more than one person report the same security vulnerability, the reward will be given to the first person who accomplish a Qualified Reporting.\n4. To protect users of the program, please do not directly submit issue on github or discuss anything with the community \n5. All Rewards and Reputation Credits are given to the reporters who submit his/her security vulnerabilities ONLY to ASRC.\n6. All rights for the security vulnerability rewards are reserved by ASRC.\n\n## Scope of Collecting\nThe main categories of vulnerabilities that we are sincerely looking for are:\n* Server-Side Request Forgery (SSRF)\n* SQL Injection\n* Denial of Service Attack\n* Remote Code Execution (RCE)\n* XML External Entity Attacks (XXE)\n* Access Control Issues (Insecure Direct Object Reference issues, etc.)\n* Directory Traversal Issues\n* Local File Disclosure (LFD)\n* Sensitive Information Leakage (Key, Cookie, Session etc.)\n\n## Reward\n* $1,000 for one valid report\n* $100-$800 for Vuls which is limited. For example, Vuls that need user interactions or administrator authority\n* Vuls which only work on the special version will be accepted but no reward, or directly rejected. For example, Vul runs only on a special linux version\n\n## Ineligible Reports\n* Vulnerabilities affecting users of outdated browsers or platforms\n* \"Self\" XSS\n* Session fixation\n* Content Spoofing\n* Missing cookie flags\n* Mixed content warnings\n* SSL/TLS best practices\n* Clickjacking/UI redressing\n* Flash-based vulnerabilities\n* Reflected file download attacks (RFD)\n* Physical or social engineering attacks\n* Unverified Results of automated tools or scanners\n* Login/logout/unauthenticated/low-impact CSRF\n* Attacks requiring MITM or physical access to a user's device\n* Issues related to networking protocols or industry standards\n* Error information disclosure that cannot be used to make a direct attack\n* Missing security-related HTTP headers which do not lead directly to a vulnerability\n"
        },
        {
          "name": "android-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "codegen-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "codegen",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example-graalvm-native",
          "type": "tree",
          "content": null
        },
        {
          "name": "example-solon-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "example-spring-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "example-spring6-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "extension-jaxrs",
          "type": "tree",
          "content": null
        },
        {
          "name": "extension-solon",
          "type": "tree",
          "content": null
        },
        {
          "name": "extension-spring5",
          "type": "tree",
          "content": null
        },
        {
          "name": "extension-spring6",
          "type": "tree",
          "content": null
        },
        {
          "name": "extension",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastjson1-compatible",
          "type": "tree",
          "content": null
        },
        {
          "name": "incubator-vector",
          "type": "tree",
          "content": null
        },
        {
          "name": "kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.4150390625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.3.2\n#\n# Optional ENV vars\n# -----------------\n#   JAVA_HOME - location of a JDK home dir, required when download maven via java source\n#   MVNW_REPOURL - repo url base for downloading maven distribution\n#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output\n# ----------------------------------------------------------------------------\n\nset -euf\n[ \"${MVNW_VERBOSE-}\" != debug ] || set -x\n\n# OS specific support.\nnative_path() { printf %s\\\\n \"$1\"; }\ncase \"$(uname)\" in\nCYGWIN* | MINGW*)\n  [ -z \"${JAVA_HOME-}\" ] || JAVA_HOME=\"$(cygpath --unix \"$JAVA_HOME\")\"\n  native_path() { cygpath --path --windows \"$1\"; }\n  ;;\nesac\n\n# set JAVACMD and JAVACCMD\nset_java_home() {\n  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched\n  if [ -n \"${JAVA_HOME-}\" ]; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n      JAVACCMD=\"$JAVA_HOME/jre/sh/javac\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n      JAVACCMD=\"$JAVA_HOME/bin/javac\"\n\n      if [ ! -x \"$JAVACMD\" ] || [ ! -x \"$JAVACCMD\" ]; then\n        echo \"The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run.\" >&2\n        echo \"JAVA_HOME is set to \\\"$JAVA_HOME\\\", but \\\"\\$JAVA_HOME/bin/java\\\" or \\\"\\$JAVA_HOME/bin/javac\\\" does not exist.\" >&2\n        return 1\n      fi\n    fi\n  else\n    JAVACMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v java\n    )\" || :\n    JAVACCMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v javac\n    )\" || :\n\n    if [ ! -x \"${JAVACMD-}\" ] || [ ! -x \"${JAVACCMD-}\" ]; then\n      echo \"The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run.\" >&2\n      return 1\n    fi\n  fi\n}\n\n# hash string like Java String::hashCode\nhash_string() {\n  str=\"${1:-}\" h=0\n  while [ -n \"$str\" ]; do\n    char=\"${str%\"${str#?}\"}\"\n    h=$(((h * 31 + $(LC_CTYPE=C printf %d \"'$char\")) % 4294967296))\n    str=\"${str#?}\"\n  done\n  printf %x\\\\n $h\n}\n\nverbose() { :; }\n[ \"${MVNW_VERBOSE-}\" != true ] || verbose() { printf %s\\\\n \"${1-}\"; }\n\ndie() {\n  printf %s\\\\n \"$1\" >&2\n  exit 1\n}\n\ntrim() {\n  # MWRAPPER-139:\n  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.\n  #   Needed for removing poorly interpreted newline sequences when running in more\n  #   exotic environments such as mingw bash on Windows.\n  printf \"%s\" \"${1}\" | tr -d '[:space:]'\n}\n\n# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties\nwhile IFS=\"=\" read -r key value; do\n  case \"${key-}\" in\n  distributionUrl) distributionUrl=$(trim \"${value-}\") ;;\n  distributionSha256Sum) distributionSha256Sum=$(trim \"${value-}\") ;;\n  esac\ndone <\"${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n[ -n \"${distributionUrl-}\" ] || die \"cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n\ncase \"${distributionUrl##*/}\" in\nmaven-mvnd-*bin.*)\n  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/\n  case \"${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)\" in\n  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;\n  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;\n  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;\n  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;\n  *)\n    echo \"Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version\" >&2\n    distributionPlatform=linux-amd64\n    ;;\n  esac\n  distributionUrl=\"${distributionUrl%-bin.*}-$distributionPlatform.zip\"\n  ;;\nmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;\n*) MVN_CMD=\"mvn${0##*/mvnw}\" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;\nesac\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\n[ -z \"${MVNW_REPOURL-}\" ] || distributionUrl=\"$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*\"$_MVNW_REPO_PATTERN\"}\"\ndistributionUrlName=\"${distributionUrl##*/}\"\ndistributionUrlNameMain=\"${distributionUrlName%.*}\"\ndistributionUrlNameMain=\"${distributionUrlNameMain%-bin}\"\nMAVEN_USER_HOME=\"${MAVEN_USER_HOME:-${HOME}/.m2}\"\nMAVEN_HOME=\"${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string \"$distributionUrl\")\"\n\nexec_maven() {\n  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :\n  exec \"$MAVEN_HOME/bin/$MVN_CMD\" \"$@\" || die \"cannot exec $MAVEN_HOME/bin/$MVN_CMD\"\n}\n\nif [ -d \"$MAVEN_HOME\" ]; then\n  verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  exec_maven \"$@\"\nfi\n\ncase \"${distributionUrl-}\" in\n*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;\n*) die \"distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'\" ;;\nesac\n\n# prepare tmp dir\nif TMP_DOWNLOAD_DIR=\"$(mktemp -d)\" && [ -d \"$TMP_DOWNLOAD_DIR\" ]; then\n  clean() { rm -rf -- \"$TMP_DOWNLOAD_DIR\"; }\n  trap clean HUP INT TERM EXIT\nelse\n  die \"cannot create temp dir\"\nfi\n\nmkdir -p -- \"${MAVEN_HOME%/*}\"\n\n# Download and Install Apache Maven\nverbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nverbose \"Downloading from: $distributionUrl\"\nverbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n# select .zip or .tar.gz\nif ! command -v unzip >/dev/null; then\n  distributionUrl=\"${distributionUrl%.zip}.tar.gz\"\n  distributionUrlName=\"${distributionUrl##*/}\"\nfi\n\n# verbose opt\n__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''\n[ \"${MVNW_VERBOSE-}\" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v\n\n# normalize http auth\ncase \"${MVNW_PASSWORD:+has-password}\" in\n'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nhas-password) [ -n \"${MVNW_USERNAME-}\" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nesac\n\nif [ -z \"${MVNW_USERNAME-}\" ] && command -v wget >/dev/null; then\n  verbose \"Found wget ... using wget\"\n  wget ${__MVNW_QUIET_WGET:+\"$__MVNW_QUIET_WGET\"} \"$distributionUrl\" -O \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" || die \"wget: Failed to fetch $distributionUrl\"\nelif [ -z \"${MVNW_USERNAME-}\" ] && command -v curl >/dev/null; then\n  verbose \"Found curl ... using curl\"\n  curl ${__MVNW_QUIET_CURL:+\"$__MVNW_QUIET_CURL\"} -f -L -o \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" \"$distributionUrl\" || die \"curl: Failed to fetch $distributionUrl\"\nelif set_java_home; then\n  verbose \"Falling back to use Java to download\"\n  javaSource=\"$TMP_DOWNLOAD_DIR/Downloader.java\"\n  targetZip=\"$TMP_DOWNLOAD_DIR/$distributionUrlName\"\n  cat >\"$javaSource\" <<-END\n\tpublic class Downloader extends java.net.Authenticator\n\t{\n\t  protected java.net.PasswordAuthentication getPasswordAuthentication()\n\t  {\n\t    return new java.net.PasswordAuthentication( System.getenv( \"MVNW_USERNAME\" ), System.getenv( \"MVNW_PASSWORD\" ).toCharArray() );\n\t  }\n\t  public static void main( String[] args ) throws Exception\n\t  {\n\t    setDefault( new Downloader() );\n\t    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );\n\t  }\n\t}\n\tEND\n  # For Cygwin/MinGW, switch paths to Windows format before running javac and java\n  verbose \" - Compiling Downloader.java ...\"\n  \"$(native_path \"$JAVACCMD\")\" \"$(native_path \"$javaSource\")\" || die \"Failed to compile Downloader.java\"\n  verbose \" - Running Downloader.java ...\"\n  \"$(native_path \"$JAVACMD\")\" -cp \"$(native_path \"$TMP_DOWNLOAD_DIR\")\" Downloader \"$distributionUrl\" \"$(native_path \"$targetZip\")\"\nfi\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\nif [ -n \"${distributionSha256Sum-}\" ]; then\n  distributionSha256Result=false\n  if [ \"$MVN_CMD\" = mvnd.sh ]; then\n    echo \"Checksum validation is not supported for maven-mvnd.\" >&2\n    echo \"Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  elif command -v sha256sum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | sha256sum -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  elif command -v shasum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | shasum -a 256 -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n    echo \"Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  fi\n  if [ $distributionSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified distributionSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\n# unzip and move\nif command -v unzip >/dev/null; then\n  unzip ${__MVNW_QUIET_UNZIP:+\"$__MVNW_QUIET_UNZIP\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -d \"$TMP_DOWNLOAD_DIR\" || die \"failed to unzip\"\nelse\n  tar xzf${__MVNW_QUIET_TAR:+\"$__MVNW_QUIET_TAR\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -C \"$TMP_DOWNLOAD_DIR\" || die \"failed to untar\"\nfi\nprintf %s\\\\n \"$distributionUrl\" >\"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url\"\nmv -- \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" \"$MAVEN_HOME\" || [ -d \"$MAVEN_HOME\" ] || die \"fail to move MAVEN_HOME\"\n\nclean || :\nexec_maven \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.75,
          "content": "<# : batch portion\n@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Apache Maven Wrapper startup batch script, version 3.3.2\n@REM\n@REM Optional ENV vars\n@REM   MVNW_REPOURL - repo url base for downloading maven distribution\n@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output\n@REM ----------------------------------------------------------------------------\n\n@IF \"%__MVNW_ARG0_NAME__%\"==\"\" (SET __MVNW_ARG0_NAME__=%~nx0)\n@SET __MVNW_CMD__=\n@SET __MVNW_ERROR__=\n@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%\n@SET PSModulePath=\n@FOR /F \"usebackq tokens=1* delims==\" %%A IN (`powershell -noprofile \"& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}\"`) DO @(\n  IF \"%%A\"==\"MVN_CMD\" (set __MVNW_CMD__=%%B) ELSE IF \"%%B\"==\"\" (echo %%A) ELSE (echo %%A=%%B)\n)\n@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%\n@SET __MVNW_PSMODULEP_SAVE=\n@SET __MVNW_ARG0_NAME__=\n@SET MVNW_USERNAME=\n@SET MVNW_PASSWORD=\n@IF NOT \"%__MVNW_CMD__%\"==\"\" (%__MVNW_CMD__% %*)\n@echo Cannot start maven from wrapper >&2 && exit /b 1\n@GOTO :EOF\n: end batch / begin powershell #>\n\n$ErrorActionPreference = \"Stop\"\nif ($env:MVNW_VERBOSE -eq \"true\") {\n  $VerbosePreference = \"Continue\"\n}\n\n# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties\n$distributionUrl = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionUrl\nif (!$distributionUrl) {\n  Write-Error \"cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties\"\n}\n\nswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {\n  \"maven-mvnd-*\" {\n    $USE_MVND = $true\n    $distributionUrl = $distributionUrl -replace '-bin\\.[^.]*$',\"-windows-amd64.zip\"\n    $MVN_CMD = \"mvnd.cmd\"\n    break\n  }\n  default {\n    $USE_MVND = $false\n    $MVN_CMD = $script -replace '^mvnw','mvn'\n    break\n  }\n}\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\nif ($env:MVNW_REPOURL) {\n  $MVNW_REPO_PATTERN = if ($USE_MVND) { \"/org/apache/maven/\" } else { \"/maven/mvnd/\" }\n  $distributionUrl = \"$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')\"\n}\n$distributionUrlName = $distributionUrl -replace '^.*/',''\n$distributionUrlNameMain = $distributionUrlName -replace '\\.[^.]*$','' -replace '-bin$',''\n$MAVEN_HOME_PARENT = \"$HOME/.m2/wrapper/dists/$distributionUrlNameMain\"\nif ($env:MAVEN_USER_HOME) {\n  $MAVEN_HOME_PARENT = \"$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain\"\n}\n$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString(\"x2\")}) -join ''\n$MAVEN_HOME = \"$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME\"\n\nif (Test-Path -Path \"$MAVEN_HOME\" -PathType Container) {\n  Write-Verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  Write-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\n  exit $?\n}\n\nif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {\n  Write-Error \"distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl\"\n}\n\n# prepare tmp dir\n$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile\n$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path \"$TMP_DOWNLOAD_DIR_HOLDER.dir\"\n$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null\ntrap {\n  if ($TMP_DOWNLOAD_DIR.Exists) {\n    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\n    catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\n  }\n}\n\nNew-Item -Itemtype Directory -Path \"$MAVEN_HOME_PARENT\" -Force | Out-Null\n\n# Download and Install Apache Maven\nWrite-Verbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nWrite-Verbose \"Downloading from: $distributionUrl\"\nWrite-Verbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n$webclient = New-Object System.Net.WebClient\nif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {\n  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)\n}\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n$webclient.DownloadFile($distributionUrl, \"$TMP_DOWNLOAD_DIR/$distributionUrlName\") | Out-Null\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\n$distributionSha256Sum = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionSha256Sum\nif ($distributionSha256Sum) {\n  if ($USE_MVND) {\n    Write-Error \"Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\"\n  }\n  Import-Module $PSHOME\\Modules\\Microsoft.PowerShell.Utility -Function Get-FileHash\n  if ((Get-FileHash \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {\n    Write-Error \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property.\"\n  }\n}\n\n# unzip and move\nExpand-Archive \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -DestinationPath \"$TMP_DOWNLOAD_DIR\" | Out-Null\nRename-Item -Path \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" -NewName $MAVEN_HOME_NAME | Out-Null\ntry {\n  Move-Item -Path \"$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME\" -Destination $MAVEN_HOME_PARENT | Out-Null\n} catch {\n  if (! (Test-Path -Path \"$MAVEN_HOME\" -PathType Container)) {\n    Write-Error \"fail to move MAVEN_HOME\"\n  }\n} finally {\n  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\n  catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\n}\n\nWrite-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 46.2783203125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.alibaba.fastjson2</groupId>\n    <artifactId>fastjson2-parent</artifactId>\n    <version>2.0.54</version>\n    <name>${project.artifactId}</name>\n    <description>Fastjson is a JSON processor (JSON parser + JSON generator) written in Java</description>\n    <packaging>pom</packaging>\n    <url>https://github.com/alibaba/fastjson2</url>\n    <inceptionYear>2022</inceptionYear>\n\n    <licenses>\n        <license>\n            <name>Apache 2</name>\n            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n            <comments>A business-friendly OSS license</comments>\n        </license>\n    </licenses>\n    <scm>\n        <url>https://github.com/alibaba/fastjson2</url>\n        <connection>scm:git:https://git@github.com/alibaba/fastjson2.git</connection>\n    </scm>\n\n    <properties>\n        <maven.compiler.source>8</maven.compiler.source>\n        <maven.compiler.target>${maven.compiler.source}</maven.compiler.target>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\n        <fastjson1x.version>1.2.83</fastjson1x.version>\n        <jackson.version>2.18.0</jackson.version>\n        <jetty.version>11.0.15</jetty.version>\n        <jersey.version>2.44</jersey.version>\n        <solon.version>3.0.1</solon.version>\n        <springframework5.version>5.3.31</springframework5.version>\n        <springframework6.version>6.1.3</springframework6.version>\n        <springsecurity5.version>5.8.8</springsecurity5.version>\n        <springsecurity6.version>6.2.1</springsecurity6.version>\n        <springboot2.version>2.7.18</springboot2.version>\n        <springboot3.version>3.2.2</springboot3.version>\n        <springdata2021.version>2021.2.18</springdata2021.version>\n        <springdata2023.version>2023.1.0</springdata2023.version>\n        <arrow.version>17.0.0</arrow.version>\n\n        <!-- Requires kotlin minor version less than the latest version -->\n        <kotlin.version>2.0.10</kotlin.version>\n        <!-- https://kotlinlang.org/docs/maven.html#attributes-specific-to-jvm -->\n        <kotlin.compiler.jvmTarget>1.8</kotlin.compiler.jvmTarget>\n        <!-- https://kotlinlang.org/docs/maven.html#specifying-compiler-options -->\n        <kotlin.compiler.apiVersion>1.9</kotlin.compiler.apiVersion>\n\n        <junit5.version>5.11.0</junit5.version>\n        <kotest.version>5.5.5</kotest.version>\n        <jmh.version>1.37</jmh.version>\n\n        <!-- overridden by submodule that need skip deploy -->\n        <maven.deploy.skip>false</maven.deploy.skip>\n    </properties>\n\n    <modules>\n        <!--\n        <module>adapter</module>\n        -->\n        <module>benchmark</module>\n        <module>codegen</module>\n        <module>codegen-test</module>\n        <module>core</module>\n        <!--\n            <module>example-graalvm-native</module>\n        -->\n        <module>example-solon-test</module>\n        <module>example-spring-test</module>\n        <!--\n            <module>example-spring6-test</module>\n        -->\n        <module>extension</module>\n        <module>extension-jaxrs</module>\n        <module>extension-solon</module>\n        <module>extension-spring5</module>\n        <!--\n        <module>extension-spring6</module>\n        -->\n        <module>fastjson1-compatible</module>\n        <module>kotlin</module>\n        <module>safemode-test</module>\n    </modules>\n\n    <organization>\n        <name>Alibaba Group</name>\n        <url>https://github.com/alibaba</url>\n    </organization>\n    <developers>\n        <developer>\n            <id>wenshao</id>\n            <name>wenshao</name>\n            <email>shaojin.wensj(at)alibaba-inc.com</email>\n            <roles>\n                <role>Developer</role>\n                <role>Tech Leader</role>\n            </roles>\n            <timezone>+8</timezone>\n            <url>https://github.com/wenshao</url>\n        </developer>\n        <developer>\n            <id>oldratlee</id>\n            <name>Jerry Lee</name>\n            <email>oldratlee(at)gmail.com</email>\n            <roles>\n                <role>Developer</role>\n                <role>CI/SCM Engineer</role>\n            </roles>\n            <timezone>+8</timezone>\n            <url>https://github.com/oldratlee</url>\n        </developer>\n        <developer>\n            <id>VictorZeng</id>\n            <name>Victor Zeng</name>\n            <email>Victor.Zxy(at)outlook.com</email>\n            <roles>\n                <role>Developer</role>\n            </roles>\n            <timezone>+8</timezone>\n            <url>https://github.com/VictorZeng</url>\n        </developer>\n        <developer>\n            <id>kraity</id>\n            <name>陆之岇</name>\n            <email>kat(at)krait.cn</email>\n            <roles>\n                <role>Developer</role>\n            </roles>\n            <timezone>+8</timezone>\n            <url>https://github.com/kraity</url>\n        </developer>\n    </developers>\n\n    <distributionManagement>\n        <repository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n    </distributionManagement>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>fastjson</artifactId>\n                <version>${fastjson1x.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>cglib</groupId>\n                <artifactId>cglib-nodep</artifactId>\n                <version>3.3.0</version>\n            </dependency>\n            <dependency>\n                <groupId>cn.hutool</groupId>\n                <artifactId>hutool-all</artifactId>\n                <version>5.8.32</version>\n            </dependency>\n            <dependency>\n                <groupId>com.aliyun.odps</groupId>\n                <artifactId>odps-sdk-core</artifactId>\n                <version>0.50.1-public</version>\n            </dependency>\n            <dependency>\n                <groupId>com.aliyun.odps</groupId>\n                <artifactId>odps-sdk-udf</artifactId>\n                <version>0.48.6-public</version>\n            </dependency>\n            <dependency>\n                <groupId>com.carrotsearch</groupId>\n                <artifactId>hppc</artifactId>\n                <version>0.9.1</version>\n            </dependency>\n            <dependency>\n                <groupId>com.caucho</groupId>\n                <artifactId>hessian</artifactId>\n                <version>4.0.66</version>\n            </dependency>\n            <dependency>\n                <groupId>com.chinamobile.cmos</groupId>\n                <artifactId>sms-core</artifactId>\n                <version>2.1.13.4</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson</groupId>\n                <artifactId>jackson-bom</artifactId>\n                <type>pom</type>\n                <version>${jackson.version}</version>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.github.erosb</groupId>\n                <artifactId>everit-json-schema</artifactId>\n                <version>1.14.4</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.code.gson</groupId>\n                <artifactId>gson</artifactId>\n                <version>2.11.0</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>guava</artifactId>\n                <version>33.3.0-jre</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.protobuf</groupId>\n                <artifactId>protobuf-bom</artifactId>\n                <type>pom</type>\n                <version>3.25.3</version>\n                <scope>import</scope>\n            </dependency>\n            <dependency>\n                <groupId>com.googlecode.json-simple</groupId>\n                <artifactId>json-simple</artifactId>\n                <version>1.1.1</version>\n            </dependency>\n            <dependency>\n                <groupId>com.jayway.jsonpath</groupId>\n                <artifactId>json-path</artifactId>\n                <version>2.9.0</version>\n            </dependency>\n            <dependency>\n                <groupId>com.jsoniter</groupId>\n                <artifactId>jsoniter</artifactId>\n                <version>0.9.23</version>\n            </dependency>\n            <dependency>\n                <groupId>com.networknt</groupId>\n                <artifactId>json-schema-validator</artifactId>\n                <version>1.0.88</version>\n            </dependency>\n            <dependency>\n                <groupId>com.opencsv</groupId>\n                <artifactId>opencsv</artifactId>\n                <version>5.9</version>\n            </dependency>\n            <dependency>\n                <groupId>com.oracle.ojdbc</groupId>\n                <artifactId>ojdbc8</artifactId>\n                <version>19.3.0.0</version>\n            </dependency>\n            <dependency>\n                <groupId>com.squareup.retrofit2</groupId>\n                <artifactId>retrofit</artifactId>\n                <version>2.9.0</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-io</groupId>\n                <artifactId>commons-io</artifactId>\n                <version>2.17.0</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-lang</groupId>\n                <artifactId>commons-lang</artifactId>\n                <version>2.6</version>\n            </dependency>\n            <dependency>\n                <groupId>io.airlift</groupId>\n                <artifactId>slice</artifactId>\n                <!-- DO NOT upgrade to 0.42+, since don't support java 8 -->\n                <version>0.41</version>\n            </dependency>\n\n            <!-- https://github.com/kotlintest/kotlintest -->\n            <dependency>\n                <groupId>io.kotest</groupId>\n                <artifactId>kotest-assertions-core-jvm</artifactId>\n                <version>${kotest.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>io.kotest</groupId>\n                <artifactId>kotest-property-jvm</artifactId>\n                <version>${kotest.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>io.kotest</groupId>\n                <artifactId>kotest-runner-junit5-jvm</artifactId>\n                <version>${kotest.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>io.projectreactor</groupId>\n                <artifactId>reactor-core</artifactId>\n                <version>3.6.9</version>\n            </dependency>\n            <dependency>\n                <groupId>io.springfox</groupId>\n                <artifactId>springfox-spring-web</artifactId>\n                <version>3.0.0</version>\n                <scope>provided</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>javax.money</groupId>\n                <artifactId>money-api</artifactId>\n                <version>1.1</version>\n            </dependency>\n            <dependency>\n                <groupId>javax.servlet</groupId>\n                <artifactId>javax.servlet-api</artifactId>\n                <version>4.0.1</version>\n            </dependency>\n\n            <dependency>\n                <groupId>joda-time</groupId>\n                <artifactId>joda-time</artifactId>\n                <version>2.12.7</version>\n            </dependency>\n\n\n            <!--\n               various json/serialization libs.\n               for comparison test by test code\n           -->\n\n            <dependency>\n                <groupId>net.minidev</groupId>\n                <artifactId>json-smart</artifactId>\n                <version>2.5.1</version>\n            </dependency>\n            <dependency>\n                <groupId>net.sf.json-lib</groupId>\n                <artifactId>json-lib</artifactId>\n                <version>2.4</version>\n                <classifier>jdk15</classifier>\n            </dependency>\n            <dependency>\n                <groupId>net.sf.trove4j</groupId>\n                <artifactId>trove4j</artifactId>\n                <version>3.0.3</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.arrow</groupId>\n                <artifactId>arrow-memory-netty</artifactId>\n                <version>${arrow.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.arrow</groupId>\n                <artifactId>arrow-vector</artifactId>\n                <version>${arrow.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-collections4</artifactId>\n                <version>4.4</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>3.17.0</version>\n            </dependency>\n            <dependency>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-bom</artifactId>\n                <type>pom</type>\n                <version>${jetty.version}</version>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.gitlab4j</groupId>\n                <artifactId>gitlab4j-api</artifactId>\n                <version>5.8.0</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.glassfish.jersey</groupId>\n                <artifactId>jersey-bom</artifactId>\n                <type>pom</type>\n                <version>${jersey.version}</version>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.hamcrest</groupId>\n                <artifactId>hamcrest</artifactId>\n                <version>3.0</version>\n                <scope>test</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.hibernate</groupId>\n                <artifactId>hibernate-core</artifactId>\n                <version>5.6.15.Final</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.javamoney</groupId>\n                <artifactId>moneta</artifactId>\n                <version>1.1</version>\n            </dependency>\n            <dependency>\n                <groupId>org.javamoney.moneta</groupId>\n                <artifactId>moneta-core</artifactId>\n                <version>1.4.4</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.javassist</groupId>\n                <artifactId>javassist</artifactId>\n                <version>3.30.2-GA</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-bom</artifactId>\n                <type>pom</type>\n                <version>${kotlin.version}</version>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.json</groupId>\n                <artifactId>json</artifactId>\n                <version>20240303</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.junit</groupId>\n                <artifactId>junit-bom</artifactId>\n                <type>pom</type>\n                <version>${junit5.version}</version>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.mockito</groupId>\n                <artifactId>mockito-all</artifactId>\n                <version>1.10.19</version>\n                <scope>test</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.msgpack</groupId>\n                <artifactId>msgpack-core</artifactId>\n                <version>0.9.8</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.openjdk.jmh</groupId>\n                <artifactId>jmh-core</artifactId>\n                <version>${jmh.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openjdk.jmh</groupId>\n                <artifactId>jmh-generator-annprocess</artifactId>\n                <version>${jmh.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.projectlombok</groupId>\n                <artifactId>lombok</artifactId>\n                <version>1.18.34</version>\n                <scope>test</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>io.kotest</groupId>\n            <artifactId>kotest-assertions-core-jvm</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.kotest</groupId>\n            <artifactId>kotest-property-jvm</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.kotest</groupId>\n            <artifactId>kotest-runner-junit5-jvm</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-all</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n\n    </dependencies>\n\n    <build>\n        <plugins>\n            <!--\n                Compiling Kotlin and Java sources - Using Maven - Kotlin Programming Language\n                https://kotlinlang.org/docs/reference/using-maven.html#compiling-kotlin-and-java-sources\n\n                Making sure that the kotlin plugin is above the maven-compiler-plugin in your pom.xml file!\n            -->\n            <plugin>\n                <groupId>org.jetbrains.kotlin</groupId>\n                <artifactId>kotlin-maven-plugin</artifactId>\n                <version>${kotlin.version}</version>\n                <executions>\n                    <execution>\n                        <id>compile</id>\n                        <goals>\n                            <goal>compile</goal>\n                        </goals>\n                        <configuration>\n                            <sourceDirs>\n                                <sourceDir>${project.basedir}/src/main/java</sourceDir>\n                            </sourceDirs>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>test-compile</id>\n                        <goals>\n                            <goal>test-compile</goal>\n                        </goals>\n                        <configuration>\n                            <sourceDirs>\n                                <sourceDir>${project.basedir}/src/test/java</sourceDir>\n                            </sourceDirs>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <executions>\n                    <!-- Replacing default-compile as it is treated specially by maven -->\n                    <execution>\n                        <id>default-compile</id>\n                        <phase>none</phase>\n                    </execution>\n                    <!-- Replacing default-testCompile as it is treated specially by maven -->\n                    <execution>\n                        <id>default-testCompile</id>\n                        <phase>none</phase>\n                    </execution>\n                    <execution>\n                        <id>java-compile</id>\n                        <phase>compile</phase>\n                        <goals>\n                            <goal>compile</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>java-test-compile</id>\n                        <phase>test-compile</phase>\n                        <goals>\n                            <goal>testCompile</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <version>3.5.0</version>\n                <dependencies>\n                    <dependency>\n                        <groupId>com.puppycrawl.tools</groupId>\n                        <artifactId>checkstyle</artifactId>\n                        <version>9.2</version>\n                    </dependency>\n                </dependencies>\n                <executions>\n                    <execution>\n                        <id>checkstyle</id>\n                        <phase>validate</phase>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                        <configuration>\n                            <skip>false</skip>\n                            <failOnViolation>true</failOnViolation>\n                            <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                            <configLocation>src/checkstyle/fastjson2-checks.xml</configLocation>\n                            <excludes>module-info.java,\n                                com/alibaba/fastjson2/fieldbased/Case1.java,\n                                com/alibaba/fastjson2/codec/UnicodeClassNameTest.java,\n                                com/alibaba/fastjson2/hsf/UCaseNameTest.java,\n                                com/alibaba/json/bvtVO/PushMsg.java,\n                                com/alibaba/json/bvtVO/IncomingDataPoint_ext_double.java,\n                                com/alibaba/json/bvtVO/vip_com/QueryLoanOrderRsp.java,\n                                com/alibaba/json/bvtVO/vip_com/TxnListItsm.java,\n                                com/alibaba/json/bvtVO/一个中文名字的包/User.java,\n                                com/alibaba/fastjson2_vo/cart/OrderBy.java,com/alibaba/fastjson2_vo/homepage/GetHomePageData.java,\n                                com/alibaba/fastjson2/v1issues/issue_4000/Issue4073.java,\n                                com/alibaba/fastjson2/v1issues/issue_1400/Issue1486.java,\n                                com/alibaba/fastjson2/v1issues/issue_1400/Issue1487.java,\n                                com/alibaba/fastjson2/v1issues/issue_1300/Issue1335.java,\n                                com/alibaba/fastjson2/v1issues/issue_1200/Issue1254.java,\n                                com/alibaba/fastjson2/v1issues/issue_1200/Issue1276.java,\n                                com/alibaba/fastjson2/v1issues/issue_1100/Issue1165.java,\n                                com/alibaba/fastjson2/v1issues/issue_1500/Issue1576.java,\n                                com/alibaba/fastjson2/v1issues/issue_1500/Issue1529.java,\n                                com/alibaba/fastjson2/issues/Issue371.java,\n                                com/alibaba/fastjson2/issues/Issue325.java,\n                                com/alibaba/fastjson2/issues/Issue402.java,\n                                com/alibaba/fastjson2/v1issues/issue_1500/Issue1558.java,\n                                com/alibaba/fastjson/issue_2800/Issue2866.java,\n                                com/alibaba/fastjson/issues_compatible/Issue325.java,\n                                com/alibaba/fastjson/issue_3200/Issue3217.java,\n                                com/alibaba/fastjson/issue_2400/Issue2488.java,\n                                com/alibaba/fastjson/issue_1100/Issue1165.java,\n                                com/alibaba/fastjson/issue_1200/Issue1254.java,\n                                com/alibaba/fastjson/issue_1200/Issue1276.java,\n                                com/alibaba/fastjson/issue_1300/Issue1306.java,\n                                com/alibaba/fastjson/issue_1300/Issue1335.java,\n                                com/alibaba/fastjson/issue_1300/Issue1367.java,\n                                com/alibaba/fastjson/issue_1400/Issue1486.java,\n                                com/alibaba/fastjson/issue_1400/Issue1487.java,\n                                com/alibaba/fastjson/issue_1500/Issue1576.java,\n                                com/alibaba/fastjson/issue_1500/Issue1529.java,\n                                com/alibaba/fastjson/issue_1500/Issue1558.java,\n                                com/alibaba/fastjson/issue_1600/Issue*.java,\n                                com/alibaba/fastjson/issue_1700/Issue*.java,\n                                com/alibaba/fastjson/issue_1900/Issue*.java,\n                                com/alibaba/fastjson/issue_2300/Issue*.java,\n                                com/alibaba/fastjson2/naming/*.java,\n                                com/alibaba/json/bvt/**/*.java,\n                                com/alibaba/fastjson2/issues/Issue485.java,\n                                com/alibaba/fastjson2/issues/Issue765.java,\n                                com/alibaba/fastjson2/issues/Issue924.java,\n                                com/alibaba/fastjson2/issues_1000/Issue1084.java,\n                                com/alibaba/fastjson/issue_1300/Issue1367_jaxrs.java,\n                                com/fasterxml/jackson/core/*.java,\n                                com/fasterxml/jackson/databind/*.java,\n                                com/alibaba/fastjson2/adapter/http/*.java,\n                                com/alibaba/fastjson2/dubbo/GoogleProtobufBasic.java,\n                                com/alibaba/fastjson2/issues/Issue983.java,\n                                com/alibaba/fastjson2/protobuf/PersonOuterClass.java,\n                                com/alibaba/fastjson2/benchmark/protobuf/MediaContentHolder.java,\n                                org/apache/dubbo/springboot/demo/BusinessException.java,\n                                com/alibaba/fastjson2/issues_1000/Issue1246.java,\n                                com/alibaba/fastjson/issues_compatible/Issue1303.java,\n                                com/alibaba/fastjson2/util/BeanUtilsTest.java,\n                                com/alibaba/fastjson2/issues_1000/Issue1395.java,\n                                com/alibaba/fastjson2/issues_2100/Issue2164.java,\n                                com/alibaba/fastjson2/issues_2100/Issue2181.java,\n                                com/alibaba/fastjson/v2issues/Issue1432.java,\n                                com/alibaba/fastjson2/issues_3200/Issue3220.java\n                            </excludes>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.gaul</groupId>\n                <artifactId>modernizer-maven-plugin</artifactId>\n                <version>2.9.0</version>\n                <configuration>\n                    <violationsFiles>\n                        <violationsFile>${maven.multiModuleProjectDirectory}/src/violations.xml</violationsFile>\n                    </violationsFiles>\n                </configuration>\n            </plugin>\n\n            <!--\n                official docs: https://maven.apache.org/enforcer/enforcer-rules/requireMavenVersion.html\n\n                add maven-enforce-plugin to make sure the right jdk is used\n                https://stackoverflow.com/a/18420462/922688\n            -->\n            <plugin>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>3.5.0</version>\n                <executions>\n                    <execution>\n                        <id>enforce-maven</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <requireMavenVersion>\n                                    <version>3.3.9</version>\n                                </requireMavenVersion>\n                                <requireJavaVersion>\n                                    <version>[1.8,)</version>\n                                </requireJavaVersion>\n                                <compound\n                                        implementation=\"com.github.ferstl.maven.pomenforcers.CompoundPedanticEnforcer\">\n                                    <enforcers>\n                                        POM_SECTION_ORDER,MODULE_ORDER,DEPENDENCY_MANAGEMENT_ORDER,DEPENDENCY_ORDER,DEPENDENCY_ELEMENT\n                                    </enforcers>\n                                    <pomSectionPriorities>\n                                        modelVersion,parent,groupId,artifactId,version,name,description,packaging,url,inceptionYear,licenses,scm,properties,modules\n                                    </pomSectionPriorities>\n                                    <dependenciesGroupIdPriorities>com.alibaba.fastjson2,com.alibaba\n                                    </dependenciesGroupIdPriorities>\n                                    <dependenciesOrderBy>scope,groupId,artifactId</dependenciesOrderBy>\n                                    <dependenciesScopePriorities>compile,runtime,provided,test\n                                    </dependenciesScopePriorities>\n                                    <dependencyManagementOrderBy>groupId,artifactId</dependencyManagementOrderBy>\n                                    <dependencyManagementGroupIdPriorities>com.alibaba.fastjson2,com.alibaba\n                                    </dependencyManagementGroupIdPriorities>\n                                    <dependencyElementOrdering>groupId,artifactId,type,version\n                                    </dependencyElementOrdering>\n                                </compound>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n                <dependencies>\n                    <dependency>\n                        <groupId>com.github.ferstl</groupId>\n                        <artifactId>pedantic-pom-enforcers</artifactId>\n                        <version>2.2.0</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n        </plugins>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <artifactId>maven-clean-plugin</artifactId>\n                    <version>3.4.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-resources-plugin</artifactId>\n                    <version>3.3.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.4.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-source-plugin</artifactId>\n                    <version>3.3.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.13.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <version>3.11.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>3.5.2</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-assembly-plugin</artifactId>\n                    <version>3.7.1</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>3.21.0</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-gpg-plugin</artifactId>\n                    <version>3.2.5</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>3.1.3</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-deploy-plugin</artifactId>\n                    <version>3.1.3</version>\n                </plugin>\n                <plugin>\n                    <artifactId>maven-shade-plugin</artifactId>\n                    <version>3.6.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.sonatype.plugins</groupId>\n                    <artifactId>nexus-staging-maven-plugin</artifactId>\n                    <version>1.7.0</version>\n                </plugin>\n                <plugin>\n                    <!-- https://github.com/moditect/moditect -->\n                    <groupId>org.moditect</groupId>\n                    <artifactId>moditect-maven-plugin</artifactId>\n                    <version>1.2.2.Final</version>\n                    <executions>\n                        <execution>\n                            <id>add-module-infos</id>\n                            <phase>package</phase>\n                            <goals>\n                                <goal>add-module-info</goal>\n                            </goals>\n                            <configuration>\n                                <jvmVersion>9</jvmVersion>\n                                <overwriteExistingFiles>true</overwriteExistingFiles>\n                                <module>\n                                    <!-- using `moduleInfoFile` is more IDE/editor friendly than `moduleInfoSource`/`moduleInfo` -->\n                                    <moduleInfoFile>\n                                        ${project.basedir}/src/main/moditect/module-info.java\n                                    </moduleInfoFile>\n                                </module>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>gen-src</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <attach>true</attach>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>gen-javadoc</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <properties>\n                <javadoc.default.exclude.packages>\n                    *.internal:*.internal.*:*.internal.*.*:*.internal.*.*.*:*.internal.*.*.*.*:com/alibaba/fastjson2/benchmark\n                </javadoc.default.exclude.packages>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-javadoc</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <show>protected</show>\n                            <charset>UTF-8</charset>\n                            <encoding>UTF-8</encoding>\n                            <docencoding>UTF-8</docencoding>\n                            <!-- https://maven.apache.org/plugins/maven-javadoc-plugin/examples/exclude-package-names.html -->\n                            <excludePackageNames>\n                                ${javadoc.default.exclude.packages}:jdk.incubator.vector\n                            </excludePackageNames>\n                            <doclint>all,-missing</doclint>\n                            <links>\n                                <link>https://docs.oracle.com/javase/8/docs/api</link>\n                            </links>\n                            <additionalJOptions>\n                                <additionalJOption>-J-Duser.language=en -J-Duser.country=US</additionalJOption>\n                            </additionalJOptions>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>gen-sign</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>gen-git-properties</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <!--\n                        Maven plugin which includes build-time git repository information into an POJO / *.properties).\n                        Make your apps tell you which version exactly they were built from! Priceless in large distributed deployments.\n                            https://github.com/git-commit-id/git-commit-id-maven-plugin\n                    -->\n                    <plugin>\n                        <groupId>io.github.git-commit-id</groupId>\n                        <artifactId>git-commit-id-maven-plugin</artifactId>\n                        <!-- DO NOT upgrade to v5+, since don't support java 8 -->\n                        <version>9.0.0</version>\n                        <executions>\n                            <execution>\n                                <id>get-the-git-infos</id>\n                                <goals>\n                                    <goal>revision</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>validate-the-git-infos</id>\n                                <goals>\n                                    <goal>validateRevision</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <validationProperties>\n                                <!-- verify that the current repository is not dirty -->\n                                <validationProperty>\n                                    <name>validating git dirty</name>\n                                    <value>${git.dirty}</value>\n                                    <shouldMatchTo>false</shouldMatchTo>\n                                </validationProperty>\n                            </validationProperties>\n                            <generateGitPropertiesFile>true</generateGitPropertiesFile>\n                            <generateGitPropertiesFilename>\n                                ${project.build.outputDirectory}/META-INF/scm/${project.groupId}/${project.artifactId}/git.properties\n                            </generateGitPropertiesFilename>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>gen-code-cov</id>\n            <activation>\n                <property>\n                    <!-- https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables -->\n                    <name>env.CI</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <!--\n                            Code Coverage\n                            config example: https://github.com/codecov/example-java\n                            plugin docs: https://eclemma.org/jacoco/trunk/doc/\n                        -->\n                        <groupId>org.jacoco</groupId>\n                        <artifactId>jacoco-maven-plugin</artifactId>\n                        <version>0.8.12</version>\n                        <configuration>\n                            <excludes>\n                                <exclude>com/alibaba/fastjson2/benchmark</exclude>\n                                <exclude>com/alibaba/example/springtest</exclude>\n                                <exclude>com/alibaba/example/spring6test</exclude>\n                            </excludes>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>prepare-agent</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>report</id>\n                                <phase>test</phase>\n                                <goals>\n                                    <goal>report</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>enable-incubators-for-jdk17+</id>\n            <activation>\n                <jdk>[17,)</jdk>\n            </activation>\n            <modules>\n                <module>example-graalvm-native</module>\n                <module>extension-spring6</module>\n                <module>example-spring6-test</module>\n                <module>incubator-vector</module>\n                <module>test-jdk17</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>deploy-settings</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.sonatype.plugins</groupId>\n                        <artifactId>nexus-staging-maven-plugin</artifactId>\n                        <extensions>true</extensions>\n                        <!--\n                            In multi-module builds using the deploy-at-end feature,\n                            the deployment of all components is performed in the last module based on the reactor order.\n                            If this property is set to true in the last module,\n                            all staging deployment for all modules will be skipped.\n                            so, we'll config nexus deploy after deploy phase of every module\n                            see: https://github.com/sonatype/nexus-maven-plugins/tree/master/staging/maven-plugin#configuring-the-plugin\n                        -->\n                        <executions>\n                            <execution>\n                                <id>default-deploy</id>\n                                <phase>deploy</phase>\n                                <goals>\n                                    <goal>deploy</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <serverId>ossrh</serverId>\n                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                            <autoReleaseAfterClose>true</autoReleaseAfterClose>\n                            <!--\n                            If you are deploying to Maven Central,\n                            it is the Nexus Staging Plugin that is doing the deployment instead of the `deploy` plugin,\n                            so the configuration of the `deploy` plugin has no effect.\n                            To make the Nexus deploy plugin skip,\n                            set skipNexusStagingDeployMojo in its configuration to true.\n                            see: https://stackoverflow.com/questions/59552549/preventing-maven-modules-from-being-deployed\n                        -->\n                            <skipNexusStagingDeployMojo>${maven.deploy.skip}</skipNexusStagingDeployMojo>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "safemode-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-jdk17",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}