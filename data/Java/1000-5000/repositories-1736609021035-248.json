{
  "metadata": {
    "timestamp": 1736609021035,
    "page": 248,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "amirzaidi/Launcher3",
      "stars": 3842,
      "defaultBranch": "o-mr1",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.19140625,
          "content": "db_files\n*.iml\n.project\n.classpath\n.project.properties\ngen/\ntests/stress/gen/\nWallpaperPicker/gen/\nWallpaperPicker/.project.properties\nbin/\n.idea/\n.gradle/\nlocal.properties\ngradle/\nbuild/\ngradlew*"
        },
        {
          "name": "Android.mk",
          "type": "blob",
          "size": 4.35546875,
          "content": "#\n# Copyright (C) 2013 The Android Open Source Project\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nLOCAL_PATH := $(call my-dir)\n\n#\n# Build rule for Launcher3 app.\n#\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE_TAGS := optional\n\nLOCAL_STATIC_JAVA_LIBRARIES := \\\n    android-support-v4 \\\n    android-support-v7-recyclerview \\\n    android-support-v7-palette \\\n    android-support-dynamic-animation\n\nLOCAL_SRC_FILES := \\\n    $(call all-java-files-under, src) \\\n    $(call all-java-files-under, src_config) \\\n    $(call all-java-files-under, src_flags) \\\n    $(call all-Iaidl-files-under, src) \\\n    $(call all-proto-files-under, protos) \\\n    $(call all-proto-files-under, proto_overrides) \\\n    $(call all-proto-files-under, proto_pixel)\n\nLOCAL_RESOURCE_DIR := \\\n    $(LOCAL_PATH)/res \\\n    prebuilts/sdk/current/support/v7/recyclerview/res \\\n\nLOCAL_PROGUARD_FLAG_FILES := proguard.flags\n\nLOCAL_PROTOC_OPTIMIZE_TYPE := nano\nLOCAL_PROTOC_FLAGS := --proto_path=$(LOCAL_PATH)/protos/ --proto_path=$(LOCAL_PATH)/proto_overrides/ --proto_path=$(LOCAL_PATH)/proto_pixel/\nLOCAL_PROTO_JAVA_OUTPUT_PARAMS := enum_style=java\n\nLOCAL_AAPT_FLAGS := \\\n    --rename-manifest-package com.google.android.apps.nexuslauncher \\\n    --auto-add-overlay \\\n    --extra-packages android.support.v7.recyclerview \\\n\nLOCAL_SDK_VERSION := current\nLOCAL_MIN_SDK_VERSION := 21\nLOCAL_PACKAGE_NAME := Launcher3\nLOCAL_PRIVILEGED_MODULE := true\nLOCAL_OVERRIDES_PACKAGES := Home Launcher2\n\nLOCAL_FULL_LIBS_MANIFEST_FILES := $(LOCAL_PATH)/AndroidManifest-common.xml\n\nLOCAL_JACK_COVERAGE_INCLUDE_FILTER := com.android.launcher3.*\n\ninclude $(BUILD_PACKAGE)\n\n#\n# Build rule for Launcher3 Go app for Android Go devices.\n#\ninclude $(CLEAR_VARS)\n\nLOCAL_MODULE_TAGS := optional\n\nLOCAL_STATIC_JAVA_LIBRARIES := \\\n    android-support-v4 \\\n    android-support-v7-recyclerview \\\n    android-support-v7-palette \\\n    android-support-dynamic-animation\n\nLOCAL_SRC_FILES := \\\n    $(call all-java-files-under, src) \\\n    $(call all-java-files-under, src_config) \\\n    $(call all-java-files-under, go/src_flags) \\\n    $(call all-proto-files-under, protos) \\\n    $(call all-proto-files-under, proto_overrides) \\\n    $(call all-proto-files-under, proto_pixel)\n\nLOCAL_RESOURCE_DIR := \\\n    $(LOCAL_PATH)/go/res \\\n    $(LOCAL_PATH)/res \\\n    prebuilts/sdk/current/support/v7/recyclerview/res \\\n\nLOCAL_PROGUARD_FLAG_FILES := proguard.flags\n\nLOCAL_PROTOC_OPTIMIZE_TYPE := nano\nLOCAL_PROTOC_FLAGS := --proto_path=$(LOCAL_PATH)/protos/ --proto_path=$(LOCAL_PATH)/proto_overrides/ --proto_path=$(LOCAL_PATH)/proto_pixel/\nLOCAL_PROTO_JAVA_OUTPUT_PARAMS := enum_style=java\n\nLOCAL_AAPT_FLAGS := \\\n    --rename-manifest-package com.google.android.apps.nexuslauncher \\\n    --auto-add-overlay \\\n    --extra-packages android.support.v7.recyclerview \\\n\nLOCAL_SDK_VERSION := current\nLOCAL_MIN_SDK_VERSION := 21\nLOCAL_PACKAGE_NAME := Launcher3Go\nLOCAL_PRIVILEGED_MODULE := true\nLOCAL_OVERRIDES_PACKAGES := Home Launcher2 Launcher3\n\nLOCAL_FULL_LIBS_MANIFEST_FILES := \\\n    $(LOCAL_PATH)/AndroidManifest.xml \\\n    $(LOCAL_PATH)/AndroidManifest-common.xml\n\nLOCAL_MANIFEST_FILE := go/AndroidManifest.xml\n\nLOCAL_JACK_COVERAGE_INCLUDE_FILTER := com.android.launcher3.*\n\ninclude $(BUILD_PACKAGE)\n\n#\n# Launcher proto buffer jar used for development\n#\ninclude $(CLEAR_VARS)\n\nLOCAL_SRC_FILES := $(call all-proto-files-under, protos) $(call all-proto-files-under, proto_overrides) \\\n    $(call all-proto-files-under, proto_pixel)\n\nLOCAL_PROTOC_OPTIMIZE_TYPE := nano\nLOCAL_PROTOC_FLAGS := --proto_path=$(LOCAL_PATH)/protos/ --proto_path=$(LOCAL_PATH)/proto_overrides/ --proto_path=$(LOCAL_PATH)/proto_pixel/\nLOCAL_PROTO_JAVA_OUTPUT_PARAMS := enum_style=java\n\nLOCAL_MODULE_TAGS := optional\nLOCAL_MODULE := launcher_proto_lib\nLOCAL_IS_HOST_MODULE := true\nLOCAL_STATIC_JAVA_LIBRARIES := host-libprotobuf-java-nano\n\ninclude $(BUILD_HOST_JAVA_LIBRARY)\n\n# ==================================================\ninclude $(call all-makefiles-under,$(LOCAL_PATH))\n"
        },
        {
          "name": "AndroidManifest-common.xml",
          "type": "blob",
          "size": 5.6533203125,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\n/*\n**\n** Copyright 2016, The Android Open Source Project\n**\n** Licensed under the Apache License, Version 2.0 (the \"License\");\n** you may not use this file except in compliance with the License.\n** You may obtain a copy of the License at\n**\n**     http://www.apache.org/licenses/LICENSE-2.0\n**\n** Unless required by applicable law or agreed to in writing, software\n** distributed under the License is distributed on an \"AS IS\" BASIS,\n** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n** See the License for the specific language governing permissions and\n** limitations under the License.\n*/\n-->\n<manifest\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.android.launcher3\">\n    <uses-sdk android:targetSdkVersion=\"23\" android:minSdkVersion=\"21\"/>\n\n    <!--\n    The manifest defines the common entries that should be present in any derivative of Launcher3.\n    The components should generally not require any changes.\n\n    Rest of the components are defined in AndroidManifest.xml which is merged with this manifest\n    at compile time. Note that the components defined in AndroidManifest.xml are also required,\n    with some minor changed based on the derivative app.\n    -->\n    <permission\n        android:name=\"com.android.launcher.permission.INSTALL_SHORTCUT\"\n        android:permissionGroup=\"android.permission-group.SYSTEM_TOOLS\"\n        android:protectionLevel=\"dangerous\"\n        android:label=\"@string/permlab_install_shortcut\"\n        android:description=\"@string/permdesc_install_shortcut\" />\n\n    <uses-feature android:name=\"android.hardware.telephony\" android:required=\"false\" />\n    <uses-permission android:name=\"android.permission.CALL_PHONE\" />\n    <uses-permission android:name=\"android.permission.SET_WALLPAPER\" />\n    <uses-permission android:name=\"android.permission.SET_WALLPAPER_HINTS\" />\n    <uses-permission android:name=\"android.permission.BIND_APPWIDGET\" />\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n    <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n\n    <application\n        android:backupAgent=\"com.android.launcher3.LauncherBackupAgent\"\n        android:fullBackupOnly=\"true\"\n        android:fullBackupContent=\"@xml/backupscheme\"\n        android:hardwareAccelerated=\"true\"\n        android:icon=\"@drawable/ic_launcher_home\"\n        android:label=\"@string/derived_app_name\"\n        android:largeHeap=\"@bool/config_largeHeap\"\n        android:restoreAnyVersion=\"true\"\n        android:supportsRtl=\"true\" >\n\n        <!-- Intent received used to install shortcuts from other applications -->\n        <receiver\n            android:name=\"com.android.launcher3.InstallShortcutReceiver\"\n            android:permission=\"com.android.launcher.permission.INSTALL_SHORTCUT\"\n            android:enabled=\"@bool/enable_install_shortcut_api\" >\n            <intent-filter>\n                <action android:name=\"com.android.launcher.action.INSTALL_SHORTCUT\" />\n            </intent-filter>\n        </receiver>\n\n        <!-- Intent received when a session is committed -->\n        <receiver\n            android:name=\"com.android.launcher3.SessionCommitReceiver\" >\n            <intent-filter>\n                <action android:name=\"android.content.pm.action.SESSION_COMMITTED\" />\n            </intent-filter>\n        </receiver>\n\n        <!-- Intent received used to initialize a restored widget -->\n        <receiver android:name=\"com.android.launcher3.AppWidgetsRestoredReceiver\" >\n            <intent-filter>\n                <action android:name=\"android.appwidget.action.APPWIDGET_HOST_RESTORED\"/>\n            </intent-filter>\n        </receiver>\n\n        <service android:name=\"com.android.launcher3.dynamicui.ColorExtractionService\"\n            android:exported=\"false\"\n            android:process=\":wallpaper_chooser\"\n            android:permission=\"android.permission.BIND_JOB_SERVICE\">\n        </service>\n\n        <service\n            android:name=\"com.android.launcher3.compat.WallpaperManagerCompatVL$ColorExtractionService\"\n            android:exported=\"false\"\n            android:process=\":wallpaper_chooser\"\n            android:permission=\"android.permission.BIND_JOB_SERVICE\" />\n\n        <service android:name=\"com.android.launcher3.notification.NotificationListener\"\n                 android:enabled=\"@bool/notification_badging_enabled\"\n                 android:permission=\"android.permission.BIND_NOTIFICATION_LISTENER_SERVICE\">\n            <intent-filter>\n                <action android:name=\"android.service.notification.NotificationListenerService\" />\n            </intent-filter>\n        </service>\n\n        <meta-data android:name=\"android.nfc.disable_beam_default\"\n                       android:value=\"true\" />\n\n        <activity android:name=\"com.android.launcher3.dragndrop.AddItemActivity\"\n            android:theme=\"@android:style/Theme.DeviceDefault.Light.Dialog.Alert\"\n            android:excludeFromRecents=\"true\"\n            android:autoRemoveFromRecents=\"true\"\n            android:label=\"@string/action_add_to_workspace\" >\n            <intent-filter>\n                <action android:name=\"android.content.pm.action.CONFIRM_PIN_SHORTCUT\" />\n                <action android:name=\"android.content.pm.action.CONFIRM_PIN_APPWIDGET\" />\n            </intent-filter>\n        </activity>\n\n        <!--\n        Should point to the content provider which can be used to dump Launcher3 compatible\n        worspace configuration to the dump's file descriptor by using launcher_dump.proto\n        -->\n        <meta-data\n            android:name=\"com.android.launcher3.launcher_dump_provider\"\n            android:value=\"com.android.launcher3.LauncherProvider\" />\n\n    </application>\n</manifest>\n"
        },
        {
          "name": "AndroidManifest.xml",
          "type": "blob",
          "size": 8.78125,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!--\n/*\n**\n** Copyright 2008, The Android Open Source Project\n**\n** Licensed under the Apache License, Version 2.0 (the \"License\");\n** you may not use this file except in compliance with the License.\n** You may obtain a copy of the License at\n**\n**     http://www.apache.org/licenses/LICENSE-2.0\n**\n** Unless required by applicable law or agreed to in writing, software\n** distributed under the License is distributed on an \"AS IS\" BASIS,\n** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n** See the License for the specific language governing permissions and\n** limitations under the License.\n*/\n-->\n<manifest\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.android.launcher3\">\n    <uses-sdk android:targetSdkVersion=\"23\" android:minSdkVersion=\"21\"/>\n    <!--\n    Manifest entries specific to Launcher3. This is merged with AndroidManifest-common.xml.\n    Refer comments around specific entries on how to extend individual components.\n    -->\n\n    <!--\n    Permissions required for read/write access to the workspace data. These permission name\n    should not conflict with that defined in other apps, as such an app should embed its package\n    name in the permissions. eq com.mypackage.permission.READ_SETTINGS\n    -->\n    <permission\n        android:name=\"${applicationId}.permission.READ_SETTINGS\"\n        android:permissionGroup=\"android.permission-group.SYSTEM_TOOLS\"\n        android:protectionLevel=\"signature\"\n        android:label=\"@string/permlab_read_settings\"\n        android:description=\"@string/permdesc_read_settings\"/>\n    <permission\n        android:name=\"${applicationId}.permission.WRITE_SETTINGS\"\n        android:permissionGroup=\"android.permission-group.SYSTEM_TOOLS\"\n        android:protectionLevel=\"signature\"\n        android:label=\"@string/permlab_write_settings\"\n        android:description=\"@string/permdesc_write_settings\"/>\n\n    <uses-permission android:name=\"com.android.launcher.permission.READ_SETTINGS\" />\n    <uses-permission android:name=\"com.android.launcher.permission.WRITE_SETTINGS\" />\n    <uses-permission android:name=\"${applicationId}.permission.READ_SETTINGS\" />\n    <uses-permission android:name=\"${applicationId}.permission.WRITE_SETTINGS\" />\n\n    <!-- Custom -->\n    <uses-permission android:name=\"android.permission.EXPAND_STATUS_BAR\" />\n\n    <application\n        android:backupAgent=\"com.android.launcher3.LauncherBackupAgent\"\n        android:fullBackupOnly=\"true\"\n        android:fullBackupContent=\"@xml/backupscheme\"\n        android:hardwareAccelerated=\"true\"\n        android:icon=\"@drawable/ic_launcher_home\"\n        android:label=\"@string/derived_app_name\"\n        android:theme=\"@style/LauncherTheme\"\n        android:largeHeap=\"@bool/config_largeHeap\"\n        android:restoreAnyVersion=\"true\"\n        android:supportsRtl=\"true\" >\n\n        <!--\n        Main launcher activity. When extending only change the name, and keep all the\n        attributes and intent filters the same\n        -->\n        <activity\n            android:name=\"com.google.android.apps.nexuslauncher.NexusLauncherActivity\"\n            android:launchMode=\"singleTask\"\n            android:clearTaskOnLaunch=\"true\"\n            android:stateNotNeeded=\"true\"\n            android:windowSoftInputMode=\"adjustPan\"\n            android:screenOrientation=\"nosensor\"\n            android:configChanges=\"keyboard|keyboardHidden|navigation\"\n            android:resizeableActivity=\"true\"\n            android:resumeWhilePausing=\"true\"\n            android:taskAffinity=\"\"\n            android:enabled=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.HOME\" />\n                <category android:name=\"android.intent.category.DEFAULT\" />\n                <category android:name=\"android.intent.category.MONKEY\"/>\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n                <category android:name=\"android.intent.category.LAUNCHER_APP\" />\n            </intent-filter>\n        </activity>\n\n        <!--\n        The settings activity. When extending keep the intent filter present\n        -->\n        <activity\n            android:name=\"com.google.android.apps.nexuslauncher.SettingsActivity\"\n            android:label=\"@string/settings_button_text\"\n            android:theme=\"@style/SettingsTheme\"\n            android:autoRemoveFromRecents=\"true\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.APPLICATION_PREFERENCES\" />\n                <category android:name=\"android.intent.category.DEFAULT\" />\n            </intent-filter>\n        </activity>\n\n        <!--\n        The settings provider contains Home's data, like the workspace favorites. The permissions\n        should be changed to what is defined above. The authorities should also be changed to\n        represent the package name.\n        -->\n        <provider\n            android:name=\"com.android.launcher3.LauncherProvider\"\n            android:authorities=\"${applicationId}.settings\"\n            android:exported=\"true\"\n            android:writePermission=\"${applicationId}.permission.WRITE_SETTINGS\"\n            android:readPermission=\"${applicationId}.permission.READ_SETTINGS\" />\n\n        <!--\n        Pixel\n        -->\n        <activity\n            android:name=\"com.google.android.apps.nexuslauncher.search.AppLaunchActivity\"\n            android:theme=\"@android:style/Theme.NoDisplay\">\n            <intent-filter android:priority=\"1\">\n                <action android:name=\"com.google.android.apps.nexuslauncher.search.APP_LAUNCH\"/>\n                <category android:name=\"android.intent.category.DEFAULT\"/>\n                <data\n                    android:mimeType=\"vnd.android.cursor.dir/vnd.android.search.suggest\"\n                    android:scheme=\"content\"/>\n            </intent-filter>\n        </activity>\n        <receiver android:name=\"com.google.android.apps.nexuslauncher.qsb.OPAStatusReceiver\" android:permission=\"android.permission.CAPTURE_AUDIO_HOTWORD\">\n            <intent-filter>\n                <action android:name=\"com.google.android.systemui.OPA_ENABLED\" />\n            </intent-filter>\n        </receiver>\n        <receiver android:name=\"com.google.android.apps.nexuslauncher.smartspace.SmartspaceBroadcastReceiver\">\n            <intent-filter>\n                <action android:name=\"com.google.android.apps.nexuslauncher.UPDATE_SMARTSPACE\" />\n            </intent-filter>\n        </receiver>\n        <receiver android:name=\"com.google.android.apps.nexuslauncher.qsb.LongClickReceiver\" />\n        <provider\n            android:authorities=\"${applicationId}.appssearch\"\n            android:exported=\"true\"\n            android:name=\"com.google.android.apps.nexuslauncher.search.AppSearchProvider\" />\n\n        <!--\n        Custom\n        -->\n        <meta-data android:name=\"android.max_aspect\" android:value=\"2.1\" />\n\n        <!-- ENABLE_FOR_TESTING\n\n        <activity\n            android:name=\"com.android.launcher3.testing.LauncherExtension\"\n            android:launchMode=\"singleTask\"\n            android:clearTaskOnLaunch=\"true\"\n            android:stateNotNeeded=\"true\"\n            android:theme=\"@style/Theme\"\n            android:windowSoftInputMode=\"adjustPan\"\n            android:screenOrientation=\"nosensor\"\n            >\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.HOME\" />\n                <category android:name=\"android.intent.category.DEFAULT\" />\n                <category android:name=\"android.intent.category.MONKEY\"/>\n            </intent-filter>\n        </activity>\n\n        <activity\n            android:name=\"com.android.launcher3.testing.MemoryDumpActivity\"\n            android:theme=\"@android:style/Theme.NoDisplay\"\n            android:label=\"* HPROF\"\n            android:excludeFromRecents=\"true\"\n            android:icon=\"@drawable/ic_launcher_home\"\n            >\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.DEFAULT\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n\n        <activity\n            android:name=\"com.android.launcher3.testing.ToggleWeightWatcher\"\n            android:label=\"Show Mem\"\n            android:icon=\"@drawable/ic_launcher_home\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.DEFAULT\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n\n        <service android:name=\"com.android.launcher3.testing.MemoryTracker\" />\n\n        -->\n\n    </application>\n</manifest>\n"
        },
        {
          "name": "CleanSpec.mk",
          "type": "blob",
          "size": 2.8359375,
          "content": "# Copyright (C) 2007 The Android Open Source Project\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# If you don't need to do a full clean build but would like to touch\n# a file or delete some intermediate files, add a clean step to the end\n# of the list.  These steps will only be run once, if they haven't been\n# run before.\n#\n# E.g.:\n#     $(call add-clean-step, touch -c external/sqlite/sqlite3.h)\n#     $(call add-clean-step, rm -rf $(PRODUCT_OUT)/obj/STATIC_LIBRARIES/libz_intermediates)\n#\n# Always use \"touch -c\" and \"rm -f\" or \"rm -rf\" to gracefully deal with\n# files that are missing or have been moved.\n#\n# Use $(PRODUCT_OUT) to get to the \"out/target/product/blah/\" directory.\n# Use $(OUT_DIR) to refer to the \"out\" directory.\n#\n# If you need to re-do something that's already mentioned, just copy\n# the command and add it to the bottom of the list.  E.g., if a change\n# that you made last week required touching a file and a change you\n# made today requires touching the same file, just copy the old\n# touch step and add it to the end of the list.\n#\n# ************************************************\n# NEWER CLEAN STEPS MUST BE AT THE END OF THE LIST\n# ************************************************\n\n# For example:\n#$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/AndroidTests_intermediates)\n#$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/JAVA_LIBRARIES/core_intermediates)\n#$(call add-clean-step, find $(OUT_DIR) -type f -name \"IGTalkSession*\" -print0 | xargs -0 rm -f)\n#$(call add-clean-step, rm -rf $(PRODUCT_OUT)/data/*)\n\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/app/Launcher2.apk)\n$(call add-clean-step, rm -rf $(OUT_DIR)/target/common/obj/APPS/Launcher2_intermediates)\n$(call add-clean-step, rm -rf $(PRODUCT_OUT)/system/app/Launcher2.apk)\n\n# ************************************************\n# NEWER CLEAN STEPS MUST BE AT THE END OF THE LIST\n# ************************************************\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.4443359375,
          "content": "\n   Copyright (c) 2005-2008, The Android Open Source Project\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n"
        },
        {
          "name": "MODULE_LICENSE_APACHE2",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.333984375,
          "content": "# Rootless Pixel Launcher\nBy Amir Zaidi\n\n## Links\n\nPlay Store release: https://play.google.com/store/apps/details?id=amirz.rootless.nexuslauncher\n\nPhotos and videos: https://photos.app.goo.gl/qdcAcLOdiu8Kl1Bh1 \n\nAPK Downloads: https://github.com/amirzaidi/launcher3/releases\n\nRootless Pixel Bridge: https://github.com/amirzaidi/AIDLBridge/releases\n\nMagisk version (only for Pixel users): https://github.com/amirzaidi/launcher3magisk/releases \n\nAlphas: https://t.me/appforks\n\nContact: https://t.me/mirai\n\n## Vision\n\nMy launcher is a close to AOSP launcher that only changes the necessary code to allow for small extensions and backporting to older Android versions. If you want a more feature packed launcher use Nova, Action or Lawnchair.\nIt is focused on simplicity and rock solid stability. Bug reports go above all else, and almost every feature request will be denied.\n\n## Features\n### Lollipop\n- The new Google Now feed is available to the left of the home screen, without needing root access.\n- The theme changes based on the wallpaper in use. Dark wallpapers will trigger the dark theme, otherwise it uses the default theme.\n- At the top of the first home screen page there is a Smartspace widget with events, weather and the date, all in the Google Sans font.\n- The new search bar is at the bottom of the home screen and the top of the app drawer.\nGoogle Calendar’s icon changes with the date.\n- The exact same screen size profiles from the Pixel 2 Launcher are included. The same grid sizes and icon sizes.\n- Google Wallpapers and Voice Search are hidden from the app drawer.\n- The default home screen dock setup reflects the real Pixel Launcher's setup: Phone, Messages, Gmail, Store, Browser, Camera.\n\n**Custom**\n\n- Probably the most requested feature in the history of mankind’s development, icon packs are included in the settings app. Just a simple selection list where you can select from the list of packs installed on your phone.\n- Long pressing an app reveals the Edit shortcut. Press on it to hide an app in the app drawer or disable the icon pack for that app.\n- There are app suggestions based on the amount of drawer clicks at the top of the app drawer. These are not the same as the real Pixel Launcher. I will explain why in the FAQ.\n- Round app icons from Android 7.1 are used when available.\n- Calendar icons change with the date if the icon pack you use supports it.\n- All icon packs are automatically hidden from the app drawer when an icon pack is being used.\n- Google Now Launcher is hidden from the app drawer.\n- There are custom screen size profile with a 4x4, 5x4 or 6x6 grid when the DPI is low or high. The 6x6 profile automatically kicks in on large phones. If you want to enable this, your DPI needs to be 370 or less (on a 1920x1080 device). This equals a 467dp smallest width, for those on Nougat.\n- Big tablet screen support is added with bigger icons and a search bar, using the Pixel C profile.\n- You can open and close notifications from anywhere on the home screen by swiping up and down.\n- New releases can be found in the settings app when clicking About -> Version.\n- Long press app popups are centered on the screen with a nice animation, when positioning it on the left or right would make it go out of the screen.\n- When the popup still goes out of the screen in landscape, the popup arrow is hidden.\n- When pressing the search bar without the Google App available on your phone, the browser opens google.com. This makes it useful for MicroG or Pico GApps users on custom ROMs, instead of being a waste of space.\n- Themes are hardcoded to look like the Pixel, for compatibility across OEMs.\n- For devices without software navigation bar, there is padding under the search widget on the home screen.\n- Added an ellipsis (...) to At A Glance date when the text goes out of bounds.\n- The At A Glance setting has been replaced with an enable/disable toggle. You can still access the customization settings by long pressing on the widget.\n- Users can override the theme by selecting their preferred theme in the settings.\n- The added \"Transparent\" dark theme makes the app drawer as transparent as the launcher code allows.\n- When no Google App is installed but Google Go is found, its search will be launched when clicking the search bar\n- Accents are stripped from searches, so it is easier to search for apps in the app drawer.\n- Widgets can be resized in any direction where their size is bigger than 1 on the grid.\n- On Lollipop, the app drawer status bar gets a slightly darker background to make it easier to see the white icons.\n- The keyboard immediately closes when sliding down the app drawer search.\n- Long pressing the arrow for direct search has been re-added.\n\n### Marshmallow\n- There are notification dots in the colour of the app’s icon.\n- You can view and interact with notifications in the long press popup on apps.\n- The settings menu uses the Oreo style and colours.\n- When long pressing an app there will be static shortcuts in the popup.\n\n### Nougat\n- A light theme is applied when the wallpaper is light enough. This has a dark status bar and text.\n\n### Nougat 7.1\n- When long pressing an app there will be static and dynamic shortcuts in the popup.\n\n### Oreo\n- There are settings for adding icons to home screen when installing, and changing the icon shape for adaptive icons.\n- Google Clock shows the current time and changes in real time.\n- The Google Now feed uses the same theme as the launcher.\n- Adaptive icon shape options include Squircle, Square, Rounded Square, Circle and Teardrop.\n- The light theme used when the wallpaper is light will also has dark navigation bar.\n\n**Custom**\n\n- Adaptive icons are disabled for pre-Oreo apps, so you don’t get boxes in boxes.\n- Available icon shape options include Cylinder from HMD/Nokia Android phones.\n\n## Google Icons\nThis launcher supports adaptive icon packs. I made an example pack called Google Icons, which replaces OEM icons with the Google variant:\nhttps://github.com/amirzaidi/GoogleIcons/releases\n\n## Magisk\nThere is also a module for Pixel users if they grew bored of the default launcher and want to try out my launcher.\n\nDisable this launcher and switch to different launcher before enabling or disabling the module. Not doing so could result in a “0.0dip has stopped working\" bug. If you do encounter this bug, try installing the real Pixel Launcher from the app store.\n\n## Credits\nBefore I talk about the things I used for the creation, I want to put a disclaimer that I did not simply copy and paste what the developers did. I looked at their code to spare myself time in researching the places where changes are necessary for a feature, and then made my own implementation. Still, I want to credit these developers for the hard work they have done upon which others like me could build.\n\n### Till Kottmann\nTill is the founder of Lawnchair, the Pixel Launcher with many customization features. Initially I did not want to implement icon packs because I feared it would break too many things, but then I took a look at his old implementation to see how much work it really was. And to my surprise it could be done without changing any AOSP Java code. Instead, I could specify a custom icon loader through XML and then focus on writing that icon loader code. The icon loader could load an icon pack app’s icon list and save that list in memory.\n\n### Paphonb\nhttps://forum.xda-developers.com/android/apps-games/app-rootless-pixel-2-launcher-google-t3688393 \n\nSamsung users were facing stylistic issues, saying they were seeing blue folders and a blue app drawer. They also had this problem in the real Pixel Launcher, but Paphonb had fixed it according to them. So I decompiled Paphonb’s Pixel Launcher and compared it with the real APK to see what he changed. From his I figured out what was necessary to override Samsung’s changes and incorporated them in my styles.\n\n### Luke Klinker\nhttps://github.com/klinker24/launcher3/commit/305438ddac487b3f5febfca3c9950f780307cec0\n\nThis commit, used by Flick Launcher, was what gave me the idea of a simple most-clicked counter for app predictions. I extended the code with the idea of “decay” where new apps can eventually catch up with the older apps and the old apps aren’t stuck forever at a high click count.\n\n### Anas\nhttps://github.com/AOSPA/android_packages_apps_Launcher3/commit/43294ca8bf124c58c9f99d2d587e4ce3c835e891 \n\nThis member of Paranoid Android, who is also known as TheCrazySkull, was the first person that got the Google Now feed to work and release sources for it on GitHub. Thanks to him, the entire chain of “Rootless” Google Now feeds has been set in motion. I first tried implementing it on the Custom ROM called VertexOS, and wanted to find a way to debug what I was doing. I managed to get the launcher to compile in Android Studio, and to my surprise it worked after simply installing it as an apk! I hadn’t seen anyone else release a launcher that supported this (except for Google, obviously) so I continued working on it until it became the first version of “Rootless Pixel Launcher” (after a lot of decompilation with trial and error).\n\n### Kevin Barry\nThe Nova Launcher developer was kind enough to e-mail me the details of WHY the Google Now feed was working on my launcher. He explained that the Google App used to have two ways of showing the Google Now feed: either the Google app was installed as a debug variant app, or the launcher was installed as a system app (which requires root). A few months ago Google changed this condition, so it also shows when the Launcher is installed as a debug app. This is why my debug variant launcher APKs are working, and the apps on the Play Store (which requires a release variant app) need a “companion” that runs as a debug app to get the Now feed. I think I still haven’t replied to this e-mail, so if you are reading this Kevin, I’m sorry..\n\n### Harsh Shandilya\nThis Substratum developer taught me how to make a Magisk module this week. I wanted to release it on his name, but he said it’s so simple I didn’t have to do it. So instead I will credit him here.\n\n### OnePlus\nI kanged the translations for the terms “Icon pack” and “Applying” from their launcher. Sorry (not really).\n\n### Google\nFor making the real Pixel Launcher in the first place. I also got some translations using Google Translate.\n\n### Alpha testers\nWorking on this launcher took a long time, and I would like to thank all the testers across different Android versions and OEMs for making sure the launcher has rock solid stability. You reported bugs to me at an incredible pace which is necessary for a project of this scope. Without you I wouldn’t have been able to come this far!\n\n### Tools\nEnjarify, Procyon and Jadx do 75% of the decompilation work, but you have to manually fix up the decompiled sources before you can even think about compiling in Android Studio. I want to thank the creators of these decompilation tools for the impressive work they have done.\n\n## FAQ\n### Can you add x?\nIf it requires an additional settings entry, no. I stand for simplicity and perfection out of the box, and having a lot of customization does not fit in that vision. Use Nova, Action or Lawnchair if you want features, I probably won’t add it.\n\n### Can you backport y?\nI tried my best to backport as much as possible all the way to Lollipop. Some features like app shortcuts are simply too difficult for me to do properly and without bugs at this moment. The light theme could work on Marshmallow, but is broken on some OEM Stock Marshmallow ROMs so I decided to just disable it for Marshmallow.\n\n### How do I prevent my Smartspace widget from being cut off?\nDisable the weather card in Google Now, or use a lower DPI. Changing your DPI can be done from Android 6 onwards, and it can be done through the settings app from Android 7. It’s called “smallest width” in the developer options.\n\n### How do I change my grid size?\nThis is based on your DPI/smallest width. For Marshmallow you will have to Google how to change it with ADB. On Nougat and Oreo you can change it using the “smallest width” setting in developer options.\n\n### How do I get the new Google Now Feed?\nUpdate the Google App to the latest version, set my launcher as the default launcher, then reboot the phone. If you are on a tablet, I’m afraid the Google App doesn’t support it.\n\n### Why is the Google Now Feed not exactly like yours?\nGoogle likes giving everyone a different experience with 10+ A/B testing flags. This is beyond my control and all handled by the Google App.\n\n### The Smartspace weather is not working\nThis is dependent on your Google App and can break for many reasons. Make sure your location is on the High Accuracy setting, Google Now shows a card for your weather, you have an up to date Google App, and the new feed is working.\n\n### The Smartspace events are not working\nThese only work with Google Calendar. Like the weather, everything is handled by the Google App, so it is hard for me to debug.\n\n### Notification dots are not working\nThese only work on Marshmallow on newer, so Lollipop will never show them. If you are at least on Marshmallow make sure the app has permissions to read notifications. You can check this in the settings. If they still don’t work, reboot your device.\n\n### Why custom app suggestions, and not the Google ones?\nGoogle uses a massive library for prediction based on the time of day and location. I have tried decompiling this in the past, but getting everything to work flawlessly is an extremely difficult task. Therefore I decided to leave it out starting with version 2.0, and continue that trend with this 3.0 release.\n\n### Do you support custom ROMs?\nOnly official LineageOS and official Paranoid Android. Anything else can have unexpected bugs that I cannot account for. Make sure you are on either of those ROMs or your device’s stock ROM if you want to do a bug report.\n\n### How do I get the coloured Google icon on the search bar?\nUse the “Calming Coastline” Live Wallpaper. You can find a port of the new Pixel 2 Live Wallpapers here: https://forum.xda-developers.com/showpost.php?p=74142755&postcount=608\n\n### How is this different from Paphonb’s Pixel 2 Launcher?\nThey are two completely different projects. I started with AOSP Launcher3 in Android Studio, he started with the real Pixel Launcher APK where everything was already working. I focused on implementing all the functionality in Java, he modified the APK to work better on older Android versions. The disadvantage to my method is that some features like Google’s App Suggestions are too hard to add. The advantage to my method is that I could add anything I wanted at any time, like Icon Pack support. So, it is an initial effort vs down the line feature implementation effort trade-off.\n\n### Why do Pixel users need to use the Magisk module?\nIronically, the “Rootless Pixel Launcher” requires root for Pixel users. The reason for this is that it uses the same name as the real Pixel Launcher. The real one cannot be removed or overwritten without root. Changing the name would break the Smartspace features, because Google hardcoded the Google App to only provide the features to the “real” Pixel Launcher.\n\n### What is Launcher3?\nLauncher3 is the name that the default AOSP launcher uses. If you compile AOSP from sources directly, that is what you will get. My GitHub project is called Launcher3 because I forked from AOSP and did not change the name. Changing the GitHub project name now is possible, but unnecessary.\n\n### I can't install it because of a package is corrupt error\nFirst use another launcher like Nova as your default. Then delete any other Pixel Launcher you have on your phone. If you can't do this because you are on a Pixel or custom ROM, use the Magisk module (needs Magisk).\n\n### How do I change between 4x4, 5x5 and 6x6 grids?\nChange your DPI, like with the Smartspace getting cut off FAQ entry.\n\n### I can't swipe away cards on the new Now Feed?\nBlame Google, they decided this was better.\n\n### How do I activate dark mode?\nSet a very dark wallpaper. The threshold is an average brightness of 25% and there shouldn't be many bright spots.\n\n### App shortcuts are not showing\nSet my launcher as the default launcher first. They only work on Android 7.1 and higher.\n\n### I can't add some widget\nRemove it from any other launcher you have on your phone first\n\n### How do I uninstall this?\nSelect another launcher as your default, then you can uninstall it from your phone's settings app.\n\n### How do I install this?\nGo to the APK Downloads link, and click the top most \"Launcher3-aosp-debug.apk\". After it is downloaded, click the notification and press install.\n\n### Navigation bar is not transparent.\nCustom ROM users have to disable the \"RR dynamic navbar\" feature. Samsung and LG users might have to enable the fullscreen mode for this app in their device's settings.\n\n### Navigation buttons are grey on Galaxy S8/9\nUnfortunately this is a Samsung specific problem and would require a lot of hacking around to fix. If you are desperate to make them white, consider using a substratum theme.\n\n### Feed has weird sizes that go out of the screen\nSeems to be a Google App problem, every launcher with the new feed is suffering from it, including the real Pixel Launcher. Make sure you are not using a Google App Beta.\n\n### Huawei/Honor crash\nFor a reason I can’t diagnose because I don’t have a Huawei device, recent Huawei phones seem to crash on launch when the user hasn’t given the launcher storage permissions. If this happens to you go into your system settings and grant the storage permission manually.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 4.64453125,
          "content": "buildscript {\n    repositories {\n        mavenCentral()\n        jcenter()\n        google()\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.1.3'\n        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'\n    }\n}\n\napply plugin: 'com.android.application'\napply plugin: 'com.google.protobuf'\n\nandroid {\n    compileSdkVersion 27\n    buildToolsVersion '27.0.3'\n\n    defaultConfig {\n        minSdkVersion 21\n        targetSdkVersion 27\n        versionCode 30911\n        versionName \"3.9.1\"\n\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n\n    lintOptions {\n        abortOnError false\n    }\n\n    buildTypes {\n        debug {\n            minifyEnabled false\n            applicationIdSuffix \".debug\"\n        }\n\n        optimized {\n            initWith debug\n            minifyEnabled true\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),\n                    'proguard.flags'\n        }\n\n        release {\n            minifyEnabled true\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),\n                    'proguard.flags'\n        }\n    }\n\n    productFlavors {\n        aosp {\n            applicationId 'amirz.rootless.nexuslauncher'\n            testApplicationId 'amirz.rootless.nexuslauncher.tests'\n            flavorDimensions 'default'\n        }\n\n        l3go {\n            applicationId 'amirz.rootless.nexuslauncher'\n            testApplicationId 'amirz.rootless.nexuslauncher.tests'\n            flavorDimensions 'default'\n        }\n    }\n\n    sourceSets {\n        main {\n            res.srcDirs = ['res']\n            java.srcDirs = ['src']\n            aidl.srcDirs = ['src']\n            assets.srcDirs = ['assets']\n            manifest.srcFile 'AndroidManifest-common.xml'\n            proto {\n                srcDir 'protos/'\n                srcDir 'proto_overrides/'\n                srcDir 'proto_pixel/'\n            }\n        }\n\n        androidTest {\n            res.srcDirs = ['tests/res']\n            java.srcDirs = ['tests/src']\n            manifest.srcFile \"tests/AndroidManifest-common.xml\"\n        }\n\n        aosp {\n            java.srcDirs = ['src_flags']\n            manifest.srcFile \"AndroidManifest.xml\"\n        }\n\n        androidTestAosp {\n            manifest.srcFile \"tests/AndroidManifest.xml\"\n        }\n\n        l3go {\n            res.srcDirs = ['go/res']\n            java.srcDirs = ['go/src_flags']\n            // Note: we are using the Launcher3 manifest here because the gradle manifest-merger uses\n            // different attributes than the build system.\n            manifest.srcFile \"AndroidManifest.xml\"\n        }\n\n        androidTestL3go {\n            manifest.srcFile \"tests/AndroidManifest.xml\"\n        }\n    }\n}\n\nrepositories {\n    mavenCentral()\n    jcenter()\n    google()\n}\n\nfinal String SUPPORT_LIBS_VERSION = '27.1.1'\ndependencies {\n    implementation \"com.android.support:support-v4:${SUPPORT_LIBS_VERSION}\"\n    implementation \"com.android.support:support-dynamic-animation:${SUPPORT_LIBS_VERSION}\"\n    implementation \"com.android.support:recyclerview-v7:${SUPPORT_LIBS_VERSION}\"\n    implementation \"com.android.support:palette-v7:${SUPPORT_LIBS_VERSION}\"\n    implementation 'com.google.protobuf.nano:protobuf-javanano:3.2.0rc2'\n\n    testImplementation 'junit:junit:4.12'\n    androidTestImplementation \"org.mockito:mockito-core:1.10.19\"\n    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'\n    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'\n    androidTestImplementation 'com.android.support.test:runner:1.0.2'\n    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.3'\n    androidTestImplementation \"com.android.support:support-annotations:${SUPPORT_LIBS_VERSION}\"\n}\n\nprotobuf {\n    // Configure the protoc executable\n    protoc {\n        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'\n\n        generateProtoTasks {\n            all().each { task ->\n                task.builtins {\n                    remove java\n                    javanano {\n                        option \"java_package=launcher_log_extension.proto|com.android.launcher3.userevent.nano\"\n                        option \"java_package=launcher_log.proto|com.android.launcher3.userevent.nano\"\n                        option \"java_package=launcher_dump.proto|com.android.launcher3.model.nano\"\n                        option \"java_package=search.proto|com.google.android.apps.nexuslauncher.search.nano\"\n                        option \"java_package=smartspace.proto|com.google.android.apps.nexuslauncher.smartspace.nano\"\n                        option \"enum_style=java\"\n                    }\n                }\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "fill_screens.py",
          "type": "blob",
          "size": 2.513671875,
          "content": "#!/usr/bin/env python2.5\n\nimport cgi\nimport os\nimport shutil\nimport sys\nimport sqlite3\n\nSCREENS = 5\nCOLUMNS = 4\nROWS = 4\nCELL_SIZE = 110\n\nDIR = \"db_files\"\nAUTO_FILE = \"launcher.db\"\n\nAPPLICATION_COMPONENTS = [\n  \"com.android.calculator2/com.android.calculator2.Calculator\",\n  \"com.android.providers.downloads.ui/com.android.providers.downloads.ui.DownloadList\",\n  \"com.android.settings/com.android.settings.Settings\",\n  \"com.android.mms/com.android.mms.ui.ConversationList\",\n  \"com.android.contacts/com.android.contacts.activities.PeopleActivity\",\n  \"com.android.dialer/com.android.dialer.DialtactsActivity\"\n]\n\ndef usage():\n  print \"usage: fill_screens.py -- fills up the launcher db\"\n\n\ndef make_dir():\n  shutil.rmtree(DIR, True)\n  os.makedirs(DIR)\n\ndef pull_file(fn):\n  print \"pull_file: \" + fn\n  rv = os.system(\"adb pull\"\n    + \" /data/data/com.android.launcher/databases/launcher.db\"\n    + \" \" + fn);\n  if rv != 0:\n    print \"adb pull failed\"\n    sys.exit(1)\n\ndef push_file(fn):\n  print \"push_file: \" + fn\n  rv = os.system(\"adb push\"\n    + \" \" + fn\n    + \" /data/data/com.android.launcher/databases/launcher.db\")\n  if rv != 0:\n    print \"adb push failed\"\n    sys.exit(1)\n\ndef process_file(fn):\n  print \"process_file: \" + fn\n  conn = sqlite3.connect(fn)\n  c = conn.cursor()\n  c.execute(\"DELETE FROM favorites\")\n\n  intentFormat = \"#Intent;action=android.intent.action.MAIN;category=android.intent.category.LAUNCHER;launchFlags=0x10200000;component=%s;end\"\n\n  id = 0;\n  for s in range(SCREENS):\n    for x in range(ROWS):\n      for y in range(COLUMNS):\n        id += 1\n        insert = \"INSERT into favorites (_id, title, intent, container, screen, cellX, cellY, spanX, spanY, itemType, appWidgetId, iconType) VALUES (%d, '%s', '%s', %d, %d, %d, %d, %d, %d, %d, %d, %d)\"\n        insert = insert % (id, \"title\", \"\", -100, s, x, y, 1, 1, 2, -1, 0)\n        c.execute(insert)\n        folder_id = id\n\n        for z in range(15):\n          id += 1\n          intent = intentFormat % (APPLICATION_COMPONENTS[id % len(APPLICATION_COMPONENTS)])\n          insert = \"INSERT into favorites (_id, title, intent, container, screen, cellX, cellY, spanX, spanY, itemType, appWidgetId, iconType) VALUES (%d, '%s', '%s', %d, %d, %d, %d, %d, %d, %d, %d, %d)\"\n          insert = insert % (id, \"title\", intent, folder_id, 0, 0, 0, 1, 1, 0, -1, 0)\n          c.execute(insert)\n\n  conn.commit()\n  c.close()\n\ndef main(argv):\n  if len(argv) == 1:\n    make_dir()\n    pull_file(AUTO_FILE)\n    process_file(AUTO_FILE)\n    push_file(AUTO_FILE)\n  else:\n    usage()\n\nif __name__==\"__main__\":\n  main(sys.argv)\n"
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "print_db.py",
          "type": "blob",
          "size": 7.990234375,
          "content": "#!/usr/bin/env python2.5\n\nimport cgi\nimport codecs\nimport os\nimport pprint\nimport re\nimport shutil\nimport sys\nimport sqlite3\n\nSCREENS = 0\nCOLUMNS = 4\nROWS = 4\nHOTSEAT_SIZE = 4\nCELL_SIZE = 110\n\nCONTAINER_DESKTOP = -100\nCONTAINER_HOTSEAT = -101\n\nDIR = \"db_files\"\nAUTO_FILE = DIR + \"/launcher.db\"\nINDEX_FILE = DIR + \"/index.html\"\n\ndef usage():\n  print \"usage: print_db.py launcher.db <4x4|5x5|5x6|...> -- prints a launcher.db with\"\n  print \"       the specified grid size (rows x cols)\"\n  print \"usage: print_db.py <4x4|5x5|5x6|...> -- adb pulls a launcher.db from a device\"\n  print \"       and prints it with the specified grid size (rows x cols)\"\n  print\n  print \"The dump will be created in a directory called db_files in cwd.\"\n  print \"This script will delete any db_files directory you have now\"\n\n\ndef make_dir():\n  shutil.rmtree(DIR, True)\n  os.makedirs(DIR)\n\ndef adb_root_remount():\n  os.system(\"adb root\")\n  os.system(\"adb remount\")\n\ndef pull_file(fn):\n  print \"pull_file: \" + fn\n  rv = os.system(\"adb pull\"\n    + \" /data/data/com.android.launcher3/databases/launcher.db\"\n    + \" \" + fn);\n  if rv != 0:\n    print \"adb pull failed\"\n    sys.exit(1)\n\ndef get_favorites(conn):\n  c = conn.cursor()\n  c.execute(\"SELECT * FROM favorites\")\n  columns = [d[0] for d in c.description]\n  rows = []\n  for row in c:\n    rows.append(row)\n  return columns,rows\n\ndef get_screens(conn):\n  c = conn.cursor()\n  c.execute(\"SELECT * FROM workspaceScreens\")\n  columns = [d[0] for d in c.description]\n  rows = []\n  for row in c:\n    rows.append(row)\n  return columns,rows\n\ndef print_intent(out, id, i, cell):\n  if cell:\n    out.write(\"\"\"<span class=\"intent\" title=\"%s\">shortcut</span>\"\"\" % (\n        cgi.escape(cell, True)\n      ))\n\n\ndef print_icon(out, id, i, cell):\n  if cell:\n    icon_fn = \"icon_%d.png\" % id\n    out.write(\"\"\"<img style=\"width: 3em; height: 3em;\" src=\"%s\">\"\"\" % ( icon_fn ))\n    f = file(DIR + \"/\" + icon_fn, \"w\")\n    f.write(cell)\n    f.close()\n\ndef print_icon_type(out, id, i, cell):\n  if cell == 0:\n    out.write(\"Application (%d)\" % cell)\n  elif cell == 1:\n    out.write(\"Shortcut (%d)\" % cell)\n  elif cell == 2:\n    out.write(\"Folder (%d)\" % cell)\n  elif cell == 4:\n    out.write(\"Widget (%d)\" % cell)\n  elif cell:\n    out.write(\"%d\" % cell)\n\ndef print_cell(out, id, i, cell):\n  if not cell is None:\n    out.write(cgi.escape(unicode(cell)))\n\nFUNCTIONS = {\n  \"intent\": print_intent,\n  \"icon\": print_icon,\n  \"iconType\": print_icon_type\n}\n\ndef render_cell_info(out, cell, occupied):\n  if cell is None:\n    out.write(\"    <td width=%d height=%d></td>\\n\" %\n        (CELL_SIZE, CELL_SIZE))\n  elif cell == occupied:\n    pass\n  else:\n    cellX = cell[\"cellX\"]\n    cellY = cell[\"cellY\"]\n    spanX = cell[\"spanX\"]\n    spanY = cell[\"spanY\"]\n    intent = cell[\"intent\"]\n    if intent:\n      title = \"title=\\\"%s\\\"\" % cgi.escape(cell[\"intent\"], True)\n    else:\n      title = \"\"\n    out.write((\"    <td colspan=%d rowspan=%d width=%d height=%d\"\n        + \" bgcolor=#dddddd align=center valign=middle %s>\") % (\n          spanX, spanY,\n          (CELL_SIZE*spanX), (CELL_SIZE*spanY),\n          title))\n    itemType = cell[\"itemType\"]\n    if itemType == 0:\n      out.write(\"\"\"<img style=\"width: 4em; height: 4em;\" src=\"icon_%d.png\">\\n\"\"\" % ( cell[\"_id\"] ))\n      out.write(\"<br/>\\n\")\n      out.write(cgi.escape(cell[\"title\"]) + \" <br/><i>(app)</i>\")\n    elif itemType == 1:\n      out.write(\"\"\"<img style=\"width: 4em; height: 4em;\" src=\"icon_%d.png\">\\n\"\"\" % ( cell[\"_id\"] ))\n      out.write(\"<br/>\\n\")\n      out.write(cgi.escape(cell[\"title\"]) + \" <br/><i>(shortcut)</i>\")\n    elif itemType == 2:\n      out.write(\"\"\"<i>folder</i>\"\"\")\n    elif itemType == 4:\n      out.write(\"<i>widget %d</i><br/>\\n\" % cell[\"appWidgetId\"])\n    else:\n      out.write(\"<b>unknown type: %d</b>\" % itemType)\n    out.write(\"</td>\\n\")\n\ndef render_screen_info(out, screen):\n  out.write(\"<tr>\")\n  out.write(\"<td>%s</td>\" % (screen[\"_id\"]))\n  out.write(\"<td>%s</td>\" % (screen[\"screenRank\"]))\n  out.write(\"</tr>\")\n\ndef process_file(fn):\n  global SCREENS, COLUMNS, ROWS, HOTSEAT_SIZE\n  print \"process_file: \" + fn\n  conn = sqlite3.connect(fn)\n  columns,rows = get_favorites(conn)\n  screenCols, screenRows = get_screens(conn)\n\n  data = [dict(zip(columns,row)) for row in rows]\n  screenData = [dict(zip(screenCols, screenRow)) for screenRow in screenRows]\n\n  # Calculate the proper number of screens, columns, and rows in this db\n  screensIdMap = []\n  hotseatIdMap = []\n  HOTSEAT_SIZE = 0\n  for d in data:\n    if d[\"spanX\"] is None:\n      d[\"spanX\"] = 1\n    if d[\"spanY\"] is None:\n      d[\"spanY\"] = 1\n    if d[\"container\"] == CONTAINER_DESKTOP:\n      if d[\"screen\"] not in screensIdMap:\n        screensIdMap.append(d[\"screen\"])\n      COLUMNS = max(COLUMNS, d[\"cellX\"] + d[\"spanX\"])\n      ROWS = max(ROWS, d[\"cellX\"] + d[\"spanX\"])\n    elif d[\"container\"] == CONTAINER_HOTSEAT:\n      hotseatIdMap.append(d[\"screen\"])\n      HOTSEAT_SIZE = max(HOTSEAT_SIZE, d[\"screen\"] + 1)\n  SCREENS = len(screensIdMap)\n\n  out = codecs.open(INDEX_FILE, encoding=\"utf-8\", mode=\"w\")\n  out.write(\"\"\"<html>\n<head>\n<style type=\"text/css\">\n.intent {\n  font-style: italic;\n}\n</style>\n</head>\n<body>\n\"\"\")\n\n  # Data table\n  out.write(\"<b>Favorites table</b><br/>\\n\")\n  out.write(\"\"\"<html>\n<table border=1 cellspacing=0 cellpadding=4>\n<tr>\n\"\"\")\n  print_functions = []\n  for col in columns:\n    print_functions.append(FUNCTIONS.get(col, print_cell))\n  for i in range(0,len(columns)):\n    col = columns[i]\n    out.write(\"\"\"  <th>%s</th>\n\"\"\" % ( col ))\n  out.write(\"\"\"\n</tr>\n\"\"\")\n\n  for row in rows:\n    out.write(\"\"\"<tr>\n\"\"\")\n    for i in range(0,len(row)):\n      cell = row[i]\n      # row[0] is always _id\n      out.write(\"\"\"  <td>\"\"\")\n      print_functions[i](out, row[0], row, cell)\n      out.write(\"\"\"</td>\n\"\"\")\n    out.write(\"\"\"</tr>\n\"\"\")\n  out.write(\"\"\"</table>\n\"\"\")\n\n  # Screens\n  out.write(\"<br/><b>Screens</b><br/>\\n\")\n  out.write(\"<table class=layout border=1 cellspacing=0 cellpadding=4>\\n\")\n  out.write(\"<tr><td>Screen ID</td><td>Rank</td></tr>\\n\")\n  for screen in screenData:\n    render_screen_info(out, screen)\n  out.write(\"</table>\\n\")\n\n  # Hotseat\n  hotseat = []\n  for i in range(0, HOTSEAT_SIZE):\n    hotseat.append(None)\n  for row in data:\n    if row[\"container\"] != CONTAINER_HOTSEAT:\n      continue\n    screen = row[\"screen\"]\n    hotseat[screen] = row\n  out.write(\"<br/><b>Hotseat</b><br/>\\n\")\n  out.write(\"<table class=layout border=1 cellspacing=0 cellpadding=4>\\n\")\n  for cell in hotseat:\n    render_cell_info(out, cell, None)\n  out.write(\"</table>\\n\")\n\n  # Pages\n  screens = []\n  for i in range(0,SCREENS):\n    screen = []\n    for j in range(0,ROWS):\n      m = []\n      for k in range(0,COLUMNS):\n        m.append(None)\n      screen.append(m)\n    screens.append(screen)\n  occupied = \"occupied\"\n  for row in data:\n    # desktop\n    if row[\"container\"] != CONTAINER_DESKTOP:\n      continue\n    screen = screens[screensIdMap.index(row[\"screen\"])]\n    cellX = row[\"cellX\"]\n    cellY = row[\"cellY\"]\n    spanX = row[\"spanX\"]\n    spanY = row[\"spanY\"]\n    for j in range(cellY, cellY+spanY):\n      for k in range(cellX, cellX+spanX):\n        screen[j][k] = occupied\n    screen[cellY][cellX] = row\n  i=0\n  for screen in screens:\n    out.write(\"<br/><b>Screen %d</b><br/>\\n\" % i)\n    out.write(\"<table class=layout border=1 cellspacing=0 cellpadding=4>\\n\")\n    for m in screen:\n      out.write(\"  <tr>\\n\")\n      for cell in m:\n        render_cell_info(out, cell, occupied)\n      out.write(\"</tr>\\n\")\n    out.write(\"</table>\\n\")\n    i=i+1\n\n  out.write(\"\"\"\n</body>\n</html>\n\"\"\")\n\n  out.close()\n\ndef updateDeviceClassConstants(str):\n  global SCREENS, COLUMNS, ROWS, HOTSEAT_SIZE\n  match = re.search(r\"(\\d+)x(\\d+)\", str)\n  if match:\n    COLUMNS = int(match.group(1))\n    ROWS = int(match.group(2))\n    HOTSEAT_SIZE = 2 * int(COLUMNS / 2)\n    return True\n  return False\n\ndef main(argv):\n  if len(argv) == 1 or (len(argv) == 2 and updateDeviceClassConstants(argv[1])):\n    make_dir()\n    adb_root_remount()\n    pull_file(AUTO_FILE)\n    process_file(AUTO_FILE)\n  elif len(argv) == 2 or (len(argv) == 3 and updateDeviceClassConstants(argv[2])):\n    make_dir()\n    process_file(argv[1])\n  else:\n    usage()\n\nif __name__==\"__main__\":\n  main(sys.argv)\n"
        },
        {
          "name": "proguard.flags",
          "type": "blob",
          "size": 3.369140625,
          "content": "-keep,allowshrinking,allowoptimization class com.android.launcher3.** {\n  *;\n}\n\n-keep class com.android.launcher3.allapps.AllAppsBackgroundDrawable {\n  public void setAlpha(int);\n  public int getAlpha();\n}\n\n-keep class com.android.launcher3.BaseRecyclerViewFastScrollBar {\n  public void setThumbWidth(int);\n  public int getThumbWidth();\n  public void setTrackWidth(int);\n  public int getTrackWidth();\n}\n\n-keep class com.android.launcher3.BaseRecyclerViewFastScrollPopup {\n  public void setAlpha(float);\n  public float getAlpha();\n}\n\n-keep class com.android.launcher3.ButtonDropTarget {\n  public int getTextColor();\n}\n\n-keep class com.android.launcher3.CellLayout {\n  public float getBackgroundAlpha();\n  public void setBackgroundAlpha(float);\n}\n\n-keep class com.android.launcher3.CellLayout$LayoutParams {\n  public void setWidth(int);\n  public int getWidth();\n  public void setHeight(int);\n  public int getHeight();\n  public void setX(int);\n  public int getX();\n  public void setY(int);\n  public int getY();\n}\n\n-keep class com.android.launcher3.dragndrop.DragLayer$LayoutParams {\n  public void setWidth(int);\n  public int getWidth();\n  public void setHeight(int);\n  public int getHeight();\n  public void setX(int);\n  public int getX();\n  public void setY(int);\n  public int getY();\n}\n\n-keep class com.android.launcher3.FastBitmapDrawable {\n  public void setDesaturation(float);\n  public float getDesaturation();\n  public void setBrightness(float);\n  public float getBrightness();\n}\n\n-keep class com.android.launcher3.MemoryDumpActivity {\n  *;\n}\n\n-keep class com.android.launcher3.PreloadIconDrawable {\n  public float getAnimationProgress();\n  public void setAnimationProgress(float);\n}\n\n-keep class com.android.launcher3.pageindicators.CaretDrawable {\n  public float getCaretProgress();\n  public void setCaretProgress(float);\n}\n\n-keep class com.android.launcher3.Workspace {\n  public float getBackgroundAlpha();\n  public void setBackgroundAlpha(float);\n}\n\n# Proguard will strip new callbacks in LauncherApps.Callback from\n# WrappedCallback if compiled against an older SDK. Don't let this happen.\n-keep class com.android.launcher3.compat.** {\n  *;\n}\n\n-keep class com.android.launcher3.graphics.ShadowDrawable {\n  public <init>(...);\n}\n\n-keep class com.android.launcher3.graphics.FixedScaleDrawable {\n  public <init>(...);\n}\n\n# Proguard will strip methods required for talkback to properly scroll to\n# next row when focus is on the last item of last row when using a RecyclerView\n# Keep optimized and shrunk proguard to prevent issues like this when using\n# support jar.\n#-keep,allowoptimization,allowshrinking class android.support.** {\n#  *;\n#}\n-keep class android.support.v7.widget.RecyclerView { *; }\n\n-keep interface com.android.launcher3.userevent.nano.LauncherLogProto.** {\n  *;\n}\n\n-keep interface com.android.launcher3.model.nano.LauncherDumpProto.** {\n  *;\n}\n\n-keep class com.google.android.apps.nexuslauncher.CustomAppFilter {\n  public <init>(...);\n}\n\n-keep class com.google.android.apps.nexuslauncher.CustomAppPredictor {\n  public <init>(...);\n}\n\n-keep class com.google.android.apps.nexuslauncher.CustomDrawableFactory {\n  public <init>(...);\n}\n\n-keep class com.google.android.apps.nexuslauncher.CustomEditShortcut {\n  public <init>(...);\n}\n\n-keep class com.google.android.apps.nexuslauncher.CustomIconProvider {\n  public <init>(...);\n}\n\n-keep class com.google.android.apps.nexuslauncher.SettingsActivity$OpenSourceLicensesFragment {\n  *;\n}"
        },
        {
          "name": "proto_overrides",
          "type": "tree",
          "content": null
        },
        {
          "name": "proto_pixel",
          "type": "tree",
          "content": null
        },
        {
          "name": "protos",
          "type": "tree",
          "content": null
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "src_config",
          "type": "tree",
          "content": null
        },
        {
          "name": "src_flags",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}