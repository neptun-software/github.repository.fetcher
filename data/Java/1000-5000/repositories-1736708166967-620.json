{
  "metadata": {
    "timestamp": 1736708166967,
    "page": 620,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "square/flow",
      "stars": 2785,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".buildscript",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1220703125,
          "content": "# IntelliJ IDEA\n.idea\n*.iml\ngen\n\n# Maven\ntarget/\npom.xml.versionsBackup\n\n# Gradle\n.gradle\ngradlew.bat\nbuild\nlocal.properties\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.8740234375,
          "content": "language: android\n\nandroid:\n  components:\n    - tools\n    - platform-tools\n\njdk:\n  - oraclejdk8\n\nbefore_script:\n  # Install SDK license so Android Gradle plugin can install deps.\n  - mkdir \"$ANDROID_HOME/licenses\" || true\n  - echo \"d56f5187479451eabf01fb78af6dfcb131a6481e\" > \"$ANDROID_HOME/licenses/android-sdk-license\"\n\nscript:\n  - ./gradlew clean build check\n\nafter_success:\n  - .buildscript/deploy_snapshot.sh\n\nenv:\n  global:\n    - secure: \"LnEHmq5BKRzXvuWJwOjZsIW0gNTr6d/JT1dOuYLsKYmGQ+0MLbjoB1J1AIpZ5X1qcDDUbPomQ2YDYvi+cavjk6FMccyKxnnC5sqjUgTnkHOnVzteGFP+0TYT3JZnjFrzp6mxNXG2vPeuyIAdDZRTogEOe83nfFRvytj6VGK/seI=\"\n    - secure: \"qdCwZom4m109rrqm80N/Q+JTYob5WubDnPVKJlXoMIzh+ppq6XWiqKsBUypzn9sSEVHuYSQAzeUqyp3ET0E/sNyvnOe9cRQEs7aMjYSXw5XUYrsPT10HbAStmqPeGp6X+LuOr+jmfPQyyKeZGBOLq3Trb1yRGlrwMQhE6BFbX8g=\"\n\nnotifications:\n  email: false\n\nsudo: false\n\ncache:\n  directories:\n    - $HOME/.gradle\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.861328125,
          "content": "Change Log\n==========\n\nVersion 1.0-alpha3 *(2017-04-18)*\n----------------------------------\nImportant bug fixes for 1.0 alpha, and introduction of HistoryFilter.\n\n* API change: added Flow#setHistoryFilter to address https://github.com/square/flow/issues/220\n* JavaDoc for Flow#get, better exception when it fails.\n* Fix for crasher when calling goBack() during a transition\n* Fix for intent handling (@Zhuinden)\n* Allow saving state for multiple views in a single State (for MultiKeys) (@edenman)\n\nVersion 1.0-alpha2 *(2016-09-02)*\n----------------------------------\nImportant bug fixes for 1.0 alpha.\n\n* API change: KeyChanger is now an interface\n* Fix for service accounting bugs (@novachevskyi)\n* Better exceptions for bad setup (@maxandron)\n\n\nVersion 1.0-alpha *(2016-02-18)*\n--------------------------------\nPresented for review and feedback. API should still be considered unstable, docs incomplete, and functionality buggy. All of the above should be mostly resolved before beta.\n\n1.0 brings major functional improvements and API changes.\n\n* Activity integration has been rewritten and is much simpler. One line to configure and install; one optional line to handle the back button; one optional line to handle new Intent. Flow handles lifecycle internally.\n* Resource management (including shared resources) is now natively supported via TreeKeys-- Path has effectively been absorbed and simplified. Contexts are now managed internally and there's much less nesting of wrappers.\n* Multiple simultaneous states are now supported via MultiKeys-- Flow now works natively with UIs composed of dialogs, sheets, master-detail views, etc. MultiKeys can be composed of TreeKeys for resource sharing.\n* Persistence has been expanded and simplified. You can now save a Bundle along with view state, and Flow takes care of all the lifecycle.\n* Nested/queued traversals are much safer and more efficient.\n* The `goBack` operation in particular is safer and more predictable.\n* Save state and view state are managed internally and orthogonally to History; you no longer have to take care to avoid losing state when changing History.\n\nVersion 0.12 *(2015-08-13)*\n------\n* Fix: History.Builder#pop is nullable again, and adds History.Builder#isEmpty.\n\nVersion 0.11 *(2015-08-11)*\n------\n* Fix: No longer persists an empty list of states if the filter excludes everything.\n\nVersion 0.10 *(2015-05-01)*\n------\n* Fix: The Builder returned by `History#buildUpon()` is now safer to use. See\n  javadoc for detail.\n\nVersion 0.9 *(2015-04-24)*\n------\nA large number of breaking changes have been made in the interest of focusing\nthe library.\n\n* Backstack is now called History and has some new method names.\n* The `resetTo`, `goTo`, `replaceTo`, `forward`, and `backward` operations are\n  all gone. In their place are two simple methods: `set(Object)` and\n  `set(History, Direction)`.\n* `HasParent` and `goUp` are gone. \"Up\" navigation is left as an exercise to app\n  authors who need it, at least for the time being.\n* The `@Layout` annotation has been removed. You can find it in the sample if\n  you want a copy.\n* Listener is now called Dispatcher, and can be set on a Flow after\n  construction. Dispatcher gets more information than Listener did.\n\nThere are also some new features, and more are coming.\n\n* Added a Context service for easily obtaining the Flow.\n* Added `FlowDelegate` for easier integration into an Activity.\n* Added the flow-path module. Paths generally represent states/screens in an app, and\n  are associated with Contexts which can be created by a user-supplied factory.\n  PathContainer helps with switching views while maintaining view state.\n\nVersion 0.8 *(2014-09-17)*\n-------\n* API break: The Listener now gets a Callback, which it *must* call when it has\n  completed a transition.\n* Flow now supports reentry.  While a Listener is executing, calls to Flow which modify\n  the backstack are enqueued.\n* Beefed up sample app, including demonstration of providing view persistence via\n  the back stack\n\nVersion 0.7 *(2014-05-16)*\n-------\n* replaceTo and goUp keep original screens for a matching prefix of the stack.\n* Fix waitForMeasureLoop in example code.\n\nVersion 0.6 *(2014-04-21)*\n-------\n* API break: replaceTo() now has a new Direction associated with it, `REPLACE`.\n  This is logically more correct because the incumbent backstack is not\n  consulted, and convenient because a replace transition is typically\n  different from a forward or backward transition.\n\nVersion 0.5 *(2014-04-15)*\n-------\n* Keep original screen on stack if found by resetTo.\n\nVersion 0.4 *(2014-01-28)*\n-------\n* API break: @Screen(layout=R.layout.foo) > @Layout(R.layout.foo), and Screens > Layouts.\n  Support for view class literals is gone. They break theming and the fix isn't worth\n  the bother.\n\nVersion 0.3 *(2014-01-21)*\n-------\n* New: Backstack#fromUpChain(Object), allows backstack to be created from a HasParent\n  screen.\n\nVersion 0.2 *(2013-11-12)*\n-------\nInitial release.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.6025390625,
          "content": "Contributing\n============\n\nIf you would like to contribute code to Flow you can do so through GitHub by\nforking the repository and sending a pull request.\n\nWhen submitting code, please make every effort to follow existing conventions\nand style in order to keep the code as readable as possible. Please also make\nsure your code compiles by running `./gradlew clean build check`.\n\nBefore your code can be accepted into the project you must also sign the\n[Individual Contributor License Agreement (CLA)][1].\n\n\n [1]: https://spreadsheets.google.com/spreadsheet/viewform?formkey=dDViT2xzUHAwRkI3X3k5Z0lQM091OGc6MQ&ndplr=1\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.18359375,
          "content": "# Deprecated\n\nFlow had a good run and served us well, but new use is strongly discouraged. The app suite at Square that drove its creation is in the process of replacing Flow with [Square Workflow](https://square.github.io/workflow/).\n\n# Flow\n\n_\"Name-giving will be the foundation of our science.\"_ &mdash; Linnaeus\n\n_\"The winds and waves are always on the side of the ablest navigators.\"_ &mdash; Gibbon\n\n_\"Memory is the treasury and guardian of all things._\" &mdash; Cicero\n\n**Flow gives names to your Activity's UI states, navigates between them, and remembers where it's been.**\n\n## Features\n\nNavigate between UI states. Support the back button easily without confusing your users with surprising results.\n\nRemember the UI state, and its history, as you navigate and across configuration changes and process death.\n\nManage resources with set-up/tear-down hooks invoked for each UI state. UI states can easily share resources, and they'll be disposed when no longer needed.\n\nManage all types of UIs-- complex master-detail views, multiple layers, and window-based dialogs are all simple to manage.\n\n\n## Using Flow\n\nGradle:\n\n```groovy\ncompile 'com.squareup.flow:flow:1.0.0-alpha3'\n```\n\nInstall Flow into your Activity:\n\n```java\npublic class MainActivity {\n  @Override protected void attachBaseContext(Context baseContext) {\n    baseContext = Flow.configure(baseContext, this).install();\n    super.attachBaseContext(baseContext);\n  }\n}\n```\n\nBy default, Flow will take over your Activity's content view. When you start your Activity, you should see a \"Hello world\" screen. Of course you'll want to change this-- that's covered under [Controlling UI](#controlling-ui) below.\n\n### Defining UI states with key objects\n\nYour Activity's UI states are represented in Flow by Objects, which Flow refers to as \"keys\". Keys are typically [value objects][valueobject] with just enough information to identify a discrete UI state.\n\nFlow relies on a key's [equals][equals] and [hashCode][hashcode] methods for its identity. Keys should be immutable-- that is, their `equals` and `hashCode` methods should always behave the same.\n\nTo give an idea of what keys might look like, here are some examples:\n\n```java\npublic enum TabKey {\n  TIMELINE,\n  NOTIFICATIONS,\n  PROFILE\n}\n\npublic final class HomeKey extends flow.ClassKey {\n}\n\npublic final class ArticleKey {\n  public final String articleId;\n\n  public ArticleKey(String articleId) {\n    this.articleId = articleId;\n  }\n\n  public boolean equals(Object o) {\n    return o instanceof ArticleKey\n        && articleId.equals(((ArticleKey) o).articleId);\n  }\n  \n  public int hashCode() {\n    return articleId.hashCode();\n  }\n}\n```\n\nSee the [Sample Projects](#sample-projects) below for more example keys.\n\n\n### Navigation and History\nFlow offers simple commands for navigating within your app.\n\n`Flow#goBack()` -- Goes back to the previous [key][keys]. Think \"back button\".\n\n`Flow#set(key)` -- Goes to the requested key. Goes back or forward depending on whether the key is already in the History.\n\nFlow also lets you rewrite history safely and easily.\n\n`Flow#setHistory(history, direction)` -- Change history to whatever you want.\n\nSee the [Flow][Flow.java] class for other convenient operators.\n\nAs you navigate the app, Flow keeps track of where you've been. And Flow makes it easy to save view state (and any other state you wish) so that when your users go back to a place they've been before, it's just as they left it.\n\n### Controlling UI\nNavigation only counts if it changes UI state. Because every app has different needs, Flow lets you plug in [your own logic][Dispatcher.java] for responding to navigation and updating your UI.\n\nSee the Basic Sample, Tree Sample, and MultiKey Sample [below](#sample-projects) for examples.\n\n### Managing resources\nYour app requires different resources when it's in different states; sometimes those resources are shared between states. Flow [makes it easy][ServicesFactory.java] to associate resources with keys so they're set up when needed and torn down (only) when they're not anymore.\n\nSee the Tree Sample for an [example][FlowServices.java].\n\n### Surviving configuration changes and process death\nAndroid is a hostile environment. One of its greatest challenges is that your Activity or even your process can be destroyed and recreated under a variety of circumstances. Flow makes it easy to weather the storm, by automatically remembering your app's state and its history. \n\nYou [supply the serialization][KeyParceler.java] for your keys, and Flow does the rest. Flow  automatically saves and restores your History (including any state you've saved), taking care of all of the Android lifecycle events so you don't have to worry about them.\n\n## Sample projects\n\n* [Hello World](flow-sample-helloworld) - A starting point for integration.\n* [Basic Sample](flow-sample-basic) - Fully configured Flow.\n* [Tree Sample](flow-sample-tree) - Uses TreeKeys to define scopes and share state.\n* [MultiKey Sample](flow-sample-multikey) - Uses MultiKeys to represent screens with dialogs as discrete states.\n\n## License\n\n    Copyright 2013 Square, Inc.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n[Dispatcher.java]: flow/src/main/java/flow/Dispatcher.java\n[equals]: http://developer.android.com/reference/java/lang/Object.html#equals(java.lang.Object)\n[Flow.java]: flow/src/main/java/flow/Flow.java\n[FlowServices.java]: flow-sample-tree/src/main/java/flow/sample/tree/FlowServices.java\n[hashcode]: http://developer.android.com/reference/java/lang/Object.html#hashCode()\n[KeyParceler.java]: https://github.com/square/flow/blob/master/flow/src/main/java/flow/KeyParceler.java\n[keys]: #defining-ui-states-with-key-objects\n[ServicesFactory.java]: flow/src/main/java/flow/ServicesFactory.java\n[valueobject]: https://en.wikipedia.org/wiki/Value_object\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 0.7783203125,
          "content": "Releasing\n========\n\n 1. Ensure everything builds and all tests pass, including integration tests.\n    (Note that Integration tests can be flaky.)\n    `./gradlew clean build check connectedCheck`\n 2. Change the version in `gradle.properties` to a non-SNAPSHOT version.\n 3. Update the `CHANGELOG.md` for the impending release.\n 4. Update the `README.md` with the new version.\n 5. `git commit -am \"Prepare for release X.Y.\"` (where X.Y is the new version)\n 6. `git tag -a X.Y -m \"Version X.Y\"` (where X.Y is the new version)\n 7. `./gradlew clean uploadArchives`\n 8. Update the `gradle.properties` to the next SNAPSHOT version.\n 9. `git commit -am \"Prepare next development version.\"`\n 10. `git push && git push --tags`\n 11. Visit [Sonatype Nexus](https://oss.sonatype.org/) and promote the artifact.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.6337890625,
          "content": "buildscript {\n  ext.versions = [\n      'minSdk': 14,\n      'compileSdk': 26,\n      'buildTools': '26.0.2',\n      'supportLibrary': '26.0.2'\n  ]\n\n  ext.deps = [\n    'support': [\n      'annotations': \"com.android.support:support-annotations:${versions.supportLibrary}\",\n      'appcompat': \"com.android.support:appcompat-v7:${versions.supportLibrary}\",\n      'design': \"com.android.support:design:${versions.supportLibrary}\",\n      'test': [\n          'espresso': 'com.android.support.test.espresso:espresso-core:3.0.1',\n          'runner': 'com.android.support.test:runner:1.0.1',\n          'rules': 'com.android.support.test:rules:1.0.1',\n      ]\n    ],\n    'junit': 'junit:junit:4.12',\n    'assertj': 'org.assertj:assertj-core:3.8.0',\n    'mockito': 'org.mockito:mockito-core:2.10.0',\n    'robolectric': 'org.robolectric:robolectric:3.4.2',\n    'antTasks': 'org.apache.maven:maven-ant-tasks:2.1.3',\n  ]\n\n  dependencies {\n    classpath 'com.android.tools.build:gradle:3.0.0-rc1'\n    classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'\n  }\n\n  repositories {\n    jcenter()\n    google()\n  }\n}\n\napply plugin: 'com.github.ben-manes.versions'\n\nsubprojects {\n  repositories {\n    jcenter()\n    google()\n  }\n\n  afterEvaluate { project ->\n    android {\n      lintOptions {\n        quiet false\n        textReport true\n        textOutput 'stdout'\n      }\n    }\n  }\n\n  configurations.all {\n    resolutionStrategy {\n      eachDependency { details ->\n        // Force all of the primary support libraries to use the same version.\n        if (details.requested.group == 'com.android.support') {\n          details.useVersion versions.supportLibrary\n        }\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 4.6328125,
          "content": "<?xml version=\"1.0\"?>\n<!--\n  ~ Copyright 2013 Square Inc.\n  ~\n  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~ you may not use this file except in compliance with the License.\n  ~ You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n\n<!DOCTYPE module PUBLIC\n    \"-//Puppy Crawl//DTD Check Configuration 1.2//EN\"\n    \"http://www.puppycrawl.com/dtds/configuration_1_2.dtd\">\n\n<module name=\"Checker\">\n  <module name=\"NewlineAtEndOfFile\">\n    <property name=\"lineSeparator\" value=\"lf\"/>\n  </module>\n  <module name=\"FileLength\"/>\n  <module name=\"FileTabCharacter\"/>\n\n  <!-- Trailing spaces -->\n  <module name=\"RegexpSingleline\">\n    <property name=\"format\" value=\"\\s+$\"/>\n    <property name=\"message\" value=\"Line has trailing spaces.\"/>\n  </module>\n\n  <module name=\"TreeWalker\">\n    <property name=\"cacheFile\" value=\"${checkstyle.cache.file}\"/>\n\n    <!-- Checks for Javadoc comments.                     -->\n    <!-- See http://checkstyle.sf.net/config_javadoc.html -->\n    <!--module name=\"JavadocMethod\"/-->\n    <!--module name=\"JavadocType\"/-->\n    <!--module name=\"JavadocVariable\"/-->\n    <module name=\"JavadocStyle\"/>\n\n\n    <!-- Checks for Naming Conventions.                  -->\n    <!-- See http://checkstyle.sf.net/config_naming.html -->\n    <module name=\"ConstantName\"/>\n    <module name=\"LocalFinalVariableName\"/>\n    <module name=\"LocalVariableName\"/>\n    <module name=\"MemberName\"/>\n    <module name=\"MethodName\"/>\n    <module name=\"PackageName\"/>\n    <module name=\"ParameterName\"/>\n    <module name=\"StaticVariableName\"/>\n    <module name=\"TypeName\"/>\n\n\n    <!-- Checks for imports                              -->\n    <!-- See http://checkstyle.sf.net/config_import.html -->\n    <module name=\"AvoidStarImport\"/>\n    <module name=\"IllegalImport\"/>\n    <!-- defaults to sun.* packages -->\n    <module name=\"RedundantImport\"/>\n    <module name=\"UnusedImports\"/>\n\n\n    <!-- Checks for Size Violations.                    -->\n    <!-- See http://checkstyle.sf.net/config_sizes.html -->\n    <module name=\"LineLength\">\n      <property name=\"max\" value=\"120\"/>\n    </module>\n    <module name=\"MethodLength\"/>\n    <module name=\"ParameterNumber\"/>\n\n\n    <!-- Checks for whitespace                               -->\n    <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n    <module name=\"GenericWhitespace\"/>\n    <module name=\"MethodParamPad\"/>\n    <module name=\"NoWhitespaceAfter\"/>\n    <module name=\"NoWhitespaceBefore\"/>\n    <module name=\"OperatorWrap\"/>\n    <module name=\"ParenPad\"/>\n    <module name=\"TypecastParenPad\"/>\n    <module name=\"WhitespaceAfter\"/>\n    <module name=\"WhitespaceAround\"/>\n\n\n    <!-- Modifier Checks                                    -->\n    <!-- See http://checkstyle.sf.net/config_modifiers.html -->\n    <module name=\"ModifierOrder\"/>\n    <module name=\"RedundantModifier\"/>\n\n\n    <!-- Checks for blocks. You know, those {}'s         -->\n    <!-- See http://checkstyle.sf.net/config_blocks.html -->\n    <module name=\"AvoidNestedBlocks\"/>\n    <!--module name=\"EmptyBlock\"/-->\n    <module name=\"LeftCurly\"/>\n    <!-- module name=\"NeedBraces\"/-->\n    <module name=\"RightCurly\"/>\n\n\n    <!-- Checks for common coding problems               -->\n    <!-- See http://checkstyle.sf.net/config_coding.html -->\n    <!--module name=\"AvoidInlineConditionals\"/-->\n    <module name=\"CovariantEquals\"/>\n    <module name=\"EmptyStatement\"/>\n    <module name=\"EqualsAvoidNull\"/>\n    <module name=\"EqualsHashCode\"/>\n    <!--module name=\"HiddenField\"/-->\n    <module name=\"IllegalInstantiation\"/>\n    <module name=\"InnerAssignment\"/>\n    <module name=\"MissingSwitchDefault\"/>\n    <module name=\"RedundantThrows\"/>\n    <module name=\"SimplifyBooleanExpression\"/>\n    <module name=\"SimplifyBooleanReturn\"/>\n\n    <!-- Checks for class design                         -->\n    <!-- See http://checkstyle.sf.net/config_design.html -->\n    <!--module name=\"DesignForExtension\"/-->\n    <!--<module name=\"FinalClass\"/>-->\n    <module name=\"HideUtilityClassConstructor\"/>\n    <module name=\"InterfaceIsType\"/>\n    <!--module name=\"VisibilityModifier\"/-->\n\n\n    <!-- Miscellaneous other checks.                   -->\n    <!-- See http://checkstyle.sf.net/config_misc.html -->\n    <module name=\"ArrayTypeStyle\"/>\n    <!--module name=\"FinalParameters\"/-->\n    <module name=\"TodoComment\"/>\n    <module name=\"UpperEll\"/>\n  </module>\n</module>\n"
        },
        {
          "name": "flow-sample-basic",
          "type": "tree",
          "content": null
        },
        {
          "name": "flow-sample-helloworld",
          "type": "tree",
          "content": null
        },
        {
          "name": "flow-sample-intents",
          "type": "tree",
          "content": null
        },
        {
          "name": "flow-sample-multikey",
          "type": "tree",
          "content": null
        },
        {
          "name": "flow-sample-orientation-lock",
          "type": "tree",
          "content": null
        },
        {
          "name": "flow-sample-tree",
          "type": "tree",
          "content": null
        },
        {
          "name": "flow",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.6103515625,
          "content": "VERSION_NAME=1.0.0-alpha4-SNAPSHOT\nGROUP=com.squareup.flow\n\nPOM_DESCRIPTION=Flow helps you describe your app as a set of distinct screens.\nPOM_URL=https://github.com/square/flow/\nPOM_SCM_URL=https://github.com/square/flow/\nPOM_SCM_CONNECTION=scm:git:git://github.com/square/flow.git\nPOM_SCM_DEV_CONNECTION=scm:git:ssh://git@github.com/square/flow.git\nPOM_LICENCE_NAME=Apache 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\nPOM_ORGANIZATION_NAME=Square, Inc.\nPOM_ORGANIZATION_URL=http://squareup.com\nPOM_DEVELOPER_ID=square\nPOM_DEVELOPER_NAME=Square, Inc.\n\norg.gradle.jvmargs=-Xmx1536M"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.205078125,
          "content": "include ':flow'\ninclude ':flow-sample-helloworld'\ninclude ':flow-sample-intents'\ninclude ':flow-sample-basic'\ninclude ':flow-sample-multikey'\ninclude ':flow-sample-orientation-lock'\ninclude ':flow-sample-tree'\n"
        }
      ]
    }
  ]
}