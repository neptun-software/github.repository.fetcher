{
  "metadata": {
    "timestamp": 1736708170226,
    "page": 627,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DependencyTrack/dependency-track",
      "stars": 2779,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".checkstyle-header",
          "type": "blob",
          "size": 0.685546875,
          "content": "/*\n * This file is part of Dependency-Track.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n * Copyright (c) OWASP Foundation. All Rights Reserved.\n */"
        },
        {
          "name": ".checkstyle.xml",
          "type": "blob",
          "size": 0.6123046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n        \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n        \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n    <property name=\"localeLanguage\" value=\"en\"/>\n    <module name=\"Header\">\n        <property name=\"charset\" value=\"UTF-8\"/>\n        <property name=\"headerFile\" value=\".checkstyle-header\"/>\n    </module>\n    <module name=\"TreeWalker\">\n        <module name=\"AvoidStarImport\"/>\n        <module name=\"IllegalImport\"/>\n        <module name=\"RedundantImport\"/>\n        <module name=\"UnusedImports\"/>\n    </module>\n</module>"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0908203125,
          "content": ".github/\n.idea/\ndocs/\nscripts/\nsrc/\n!src/main/docker/logback*.xml\ntarget/\n!target/*.jar\n/*.md"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.263671875,
          "content": "docs/_site/\ndocs/.sass-cache/\ndocs/.jekyll-metadata\ndocs/.bundle/\ndocs/vendor/\ndocs/Gemfile.lock\n\n# vscode\n.settings/\ntarget/\n.classpath\n.project\n.vscode/\n\n# windows\n~\n\n# IntelliJ\n.idea/*\n!.idea/icon.svg\n!.idea/runConfigurations/\n\n# nix \n.direnv\n.pre-commit-config.yaml\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 9.357421875,
          "content": "# Adopters\n\n<!-- Hello! If you are using OWASP Dependency Track and contributing to this file, thank you! -->\n<!-- Please keep lines shorter than 80 characters (or so.) Links can go long. -->\n\nThis is a list of organizations that have spoken publicly about their adoption or\nproduction users that have added themselves (in alphabetical order):\n\n| Organization                                                                                                                                  | Contact                         | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n|:----------------------------------------------------------------------------------------------------------------------------------------------|:--------------------------------||\n| <img src=\"https://avatars.githubusercontent.com/u/39411067?s=200&v=4\"/> [Rohde & Schwarz]                                                     | [@lukas-braune]                 | At Rohde & Schwarz, we are deeply committed to ensuring the cybersecurity of our products, systems, and solutions. As part of our comprehensive security strategy, we utilize a diverse set of tools to safeguard our technology. We value Dependency-Track for its scalability, adherence to open standards, and active community. Additionally, we actively contribute to the development of Dependency-Track by adding features, improving its usability for large organizations, and strengthening its security posture. |\n| <img src=\"https://avatars.githubusercontent.com/u/43382006?s=400&u=c45feb70b5eeb3393b43dd1b73c729815e65b2e8&v=4\"/> [World Kinect Corporation] | [@aravindparappil46], [@setchy] | World Kinect Corporation (NYSE: WKC) uses Dependency-Track to continuously identify software supply chain risks and to enforce policy compliance across the portfolio. Its usage of Dependency-Track was [showcased in the community meeting of May 2024](https://www.youtube.com/watch?v=MS2DlMdUI7Q&t=1320s).                                                                                                                                                                                                              |\n\nThis is a list of adopters in early stages of production or\npre-production (in alphabetical order):\n\n| Organization                         | Contact        | Description|\n|:-------------------------------------|:---------------||\n| [Air France-KLM]                     | [@nekhtan]     | Air France-KLM has always been highly vigilant and profoundly committed to the realm of IT security. We use a variety of tools to ensure our systems' safety, one of which is the OWASP Dependency Track. This tool forms a crucial part of our vulnerability detection systems, scanning the Software Bill of Materials (SBOM) for each application and sending it to our in-house DT instance. With over 10,000 projects undergoing daily scans, our security measures are both comprehensive and rigorous. The Dependency Track API is not only highly configurable but also user-friendly, boasting a visually appealing user interface. The project is in a constant state of evolution, adapting and improving to meet the ever-changing landscape of IT security. The community of DT contributors is always ready to lend a hand when issues arise, making it not just an effective tool, but also a pleasure to work with as a developer. We extend our gratitude to the team behind the OWASP Dependency Track for their excellent work. We look forward to welcoming you aboard our flights soon! |\n| [Apex Fintech Solutions]             | [@spawar-apex] | Apex Fintech Solutions has integrated OWASP Dependency-Track into their CI/CD pipeline as part of the DevSecOps program. This integration allows for the upload of SBOMs (Software Bill of Materials) to the platform for comprehensive component analysis and a detailed understanding of the software inventory used in software applications. By analyzing the components in our monorepo, we enhance our vulnerability management program and gain valuable insights into transitive dependencies, which traditional SCA (Software Composition Analysis) tools often overlook|\n| [Dutch Tax Office - Belastingdienst] | [@SudoHenk]    | Dutch Tax Office has integrated OWASP Dependency-Track into their development processes as part of the DevSecOps program. We integrate Dependency-Track with various platforms and programming languages to gain vulnerability insights in our internally developed software. We want to thank all contributors of Dependency-Track creating a resilient and extensible SCA tool. Especially the API is a huge asset to integrate within the current organization processes|\n\nIf you have adopted OWASP Depenency Track and would like to be included in this list,\nfeel free to submit a PR updating this file or\n[open an issue](https://github.com/).\n\n[@SudoHenk]: https://github.com/SudoHenk\n[@aravindparappil46]: https://github.com/aravindparappil46\n[@lukas-braune]: https://github.com/lukas-braune\n[@nekhtan]: https://github.com/nekhtan\n[@setchy]: https://github.com/setchy\n[@spawar-apex]: https://github.com/spawar-apex\n[Air France-KLM]: https://www.airfranceklm.com/\n[Apex Fintech Solutions]: https://apexfintechsolutions.com/\n[Dutch Tax Office - Belastingdienst]: https://www.belastingdienst.nl/\n[Rohde & Schwarz]: https://www.rohde-schwarz.com/\n[World Kinect Corporation]: https://world-kinect.com/"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.1455078125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at steve.springett@owasp.org. The project team will review and investigate all complaints, and will respond in a way that it deems appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4, available at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.716796875,
          "content": "# Contributing to OWASP Dependency-Track\n\nThank you for contributing to Dependency-Track! We appreciate and are thankful for contributions in all shapes and sizes.\n\n## Asking Questions\n\n* Use either Slack or GitHub Discussions to ask questions.\n* Do not open issues for questions. **Questions submitted through GitHub issues will be closed**.\n* Consult the [community-maintained FAQ](https://docs.dependencytrack.org/FAQ/) to see whether your question has already been answered.\n* Avoid contacting individual contributors directly; ask questions in public instead. A well-worded question will help serve as a resource to others searching for help.\n\nThe [`#proj-dependency-track` channel](https://dependencytrack.org/slack) in the OWASP Slack space is the best place \nto ask questions and get in touch with other users and contributors. We provide an invitation to the Slack space \n[here](https://dependencytrack.org/slack/invite). Please *do* create an issue if either channel link or invitation \ndo not work anymore.\n\n## Filing Issues\n\n### Looking for existing Issues\n\nBefore you create a new issue, please do a search in [open issues](https://github.com/DependencyTrack/dependency-track/issues?q=is%3Aissue+is%3Aopen+) \nto see if the defect or enhancement request has already been filed.\n\nIf you find your issue already exists, add relevant comments to the existing issue. \n\nOptionally indicate your interest by reacting with *thumbs up* (👍). Issues with higher community attention are more likely to be addressed sooner.\n\nIf you cannot find an existing issue for your bug or feature request, create a new issue using the guidelines below.\n\n### Requesting Enhancements\n\nFile a single issue per enhancement request. Do not list multiple enhancement requests in the same issue.\n\nDescribe your use case and the value you will get from the requested enhancement.\n\n### Reporting Defects\n\nFile a single issue per defect. Do not list multiple defects in the same issue.\n\nThe more information you can provide, the more likely we will be successful at reproducing the bug and finding a fix.\n\nAPI server logs (including errors) are logged to the following locations per default:\n\n* `~/.dependency-track/dependency-track.log` (`/data/.dependency-track/dependency-track.log` within Docker containers)\n* Standard output (use `docker logs -f <CONTAINER_NAME>` when using Docker)\n\nErrors in the frontend are logged to your browser's developer console (see [here](https://developer.chrome.com/docs/devtools/console/log/#browser) \nfor Google Chrome). Issues in the communication between frontend and API server will be visible in the *Network* tab of \nyour browser's developer tools (see [here](https://developer.chrome.com/docs/devtools/network/#load) for Google Chrome).\n\nDepending on the defect, we may ask you for a sample BOM that triggers your issue.\n\nBefore sharing BOMs, logs, screenshots or any other resources with us, please ensure that you blank, pseudonymise or\nremove all references that may leak internals of your organization.\n\n## Reporting Vulnerabilities\n\nPlease refer to our security policy in [`SECURITY.md`](./SECURITY.md) for how to responsibly disclose vulnerabilities to us.\n\n## Improving Documentation\n\nBeside extending existing documentation or correcting any errors it may contain, another great way to contribute is to\nupdate the [FAQ](https://docs.dependencytrack.org/FAQ/) with questions and answers that benefit the community.\n\nRefer to the *Documentation* section of [`DEVELOPING.md`](./DEVELOPING.md) for a guide on how to build the documentation locally.\n\n## Testing Snapshot Versions\n\nEvery time a commit is pushed to the `master` branch, container images are built and published to the `snapshot` tag.\nThis is true for both API server and frontend:\n\n* [`dependencytrack/apiserver:snapshot`](https://hub.docker.com/r/dependencytrack/apiserver/tags?name=snapshot)\n* [`dependencytrack/bundled:snapshot`](https://hub.docker.com/r/dependencytrack/bundled/tags?name=snapshot)\n* [`dependencytrack/frontend:snapshot`](https://hub.docker.com/r/dependencytrack/frontend/tags?name=snapshot)\n\nTesting `snapshot` versions and providing early feedback helps in improving the quality of new releases.\nThe private `#proj-dependency-track-beta` Slack channel is intended for discussions about and feedback for `snapshot`\nversions. If you are interested in participating, please let us know in [`#proj-dependency-track`](https://dependencytrack.org/slack).\n\n## Contributing Code\n\nBefore raising pull requests, please [file a defect](#reporting-defects) or [enhancement request](#requesting-enhancements) first. \n\n* We use [GitHub milestones](https://github.com/DependencyTrack/dependency-track/milestones) to plan what will be included in the next release. \n  * Depending on the size of your PR and whether it introduces breaking changes, we may schedule your change for a later release.\n* Issues for which community contributions are explicitly requested are labeled with [`help wanted`](https://github.com/DependencyTrack/dependency-track/issues?q=is%3Aopen+label%3A%22help+wanted%22+).\n* Issues suitable for first-time contributors are labeled with [`good first issue`](https://github.com/DependencyTrack/dependency-track/issues?q=is%3Aopen+label%3A%22good+first+issue%22+).\n\n[`DEVELOPING.md`](./DEVELOPING.md) provides a detailed guide on how to get started with working on Dependency-Track.\n\n### Pull Requests\n\n* Pull requests that do not merge easily with the tip of the `master` branch will be declined.\n  * The author will be asked to merge with tip and submit a new pull request.\n* Code should follow standard code style conventions for whitespace, indentation and naming.\n  * In the case of style differences between existing code and language standards, consistency with existing code is preferred.\n* New functionality should have corresponding tests added to the existing test suite if possible.\n* Avoid new dependencies if the functionality that is being used is trivial to implement directly or is available in standard libraries.\n* Avoid checking in unrelated whitespace changes with code changes.\n* Commits must be [signed off](https://git-scm.com/docs/git-commit#Documentation/git-commit.txt--s) to indicate agreement with [Developer Certificate of Origin (DCO)](https://developercertificate.org/).\n* Optionally include visualizations like screenshots, videos or [diagrams](https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/) in the pull request description.\n\n### Commit Messages\n\nPlease follow these rules when writing a commit message:\n\n* Separate subject from body with a blank line\n* Limit the subject line to 50 characters\n* Capitalize the subject line\n* Do not end the subject line with a period\n* Use the imperative mood in the subject line\n* Wrap the body at 72 characters\n* Use the body to explain *what* and *why* vs. *how*\n"
        },
        {
          "name": "DEVELOPING.md",
          "type": "blob",
          "size": 16.4150390625,
          "content": "# Hacking on OWASP Dependency-Track\n\nWant to hack on Dependency-Track? Awesome, here's what you need to know to get started!\n\n> Please be sure to read [`CONTRIBUTING.md`](./CONTRIBUTING.md) and \n> [`CODE_OF_CONDUCT.md`](./CODE_OF_CONDUCT.md) as well.\n\n## Repositories\n\nAs of now, the Dependency-Track project consists of two separate repositories:\n\n* [DependencyTrack/dependency-track](https://github.com/DependencyTrack/dependency-track) - The main application, also referred to as API server, based on Java and [Alpine](https://github.com/stevespringett/Alpine).\n* [DependencyTrack/frontend](https://github.com/DependencyTrack/frontend) - The frontend, a single page application (SPA), based on JavaScript and [Vue](https://vuejs.org/).\n\nThis document primarily covers the API server. Please refer to the frontend repository for frontend-specific instructions.\n\n## Prerequisites\n\nThere are a few things you'll need on your journey:\n\n* JDK 21+ ([Temurin](https://adoptium.net/temurin/releases) distribution recommended)\n* Maven (comes bundled with IntelliJ and Eclipse)\n* A Java IDE of your preference (we recommend IntelliJ, but any other IDE is fine as well)\n* Docker (optional)\n\n> We provide common [run configurations](https://www.jetbrains.com/help/idea/run-debug-configuration.html) for IntelliJ \n> in the [`.idea/runConfigurations`](./.idea/runConfigurations) directory for convenience. IntelliJ will automatically pick those up when you open this repository.\n\n## Core Technologies\n\nKnowing about the core technologies used by the API server may help you with understanding its codebase.\n\n| Technology                                                                                      | Purpose                   |\n|:------------------------------------------------------------------------------------------------|:--------------------------|\n| [JAX-RS](https://projects.eclipse.org/projects/ee4j.rest)                                       | REST API specification    |\n| [Jersey](https://eclipse-ee4j.github.io/jersey/)                                                | JAX-RS implementation     |\n| [Java Data Objects (JDO)](https://db.apache.org/jdo/)                                           | Persistence specification |\n| [DataNucleus](https://www.datanucleus.org/products/accessplatform/jdo/getting_started.html)     | JDO implementation        |\n| [Jetty](https://www.eclipse.org/jetty/)                                                         | Servlet Container         |\n| [Alpine](https://github.com/stevespringett/Alpine)                                              | Framework / Scaffolding   |\n\n## Building\n\nBuild an executable JAR containing just the API server:\n\n```shell\nmvn clean package -P clean-exclude-wars -P enhance -P embedded-jetty -DskipTests -Dlogback.configuration.file=src/main/docker/logback.xml\n```\n\nBuild an executable JAR that contains both API server and frontend (aka \"bundled\" distribution):\n\n```shell\nmvn clean package -P clean-exclude-wars -P enhance -P embedded-jetty -P bundle-ui -DskipTests -Dlogback.configuration.file=src/main/docker/logback.xml\n```\n\n> When using the `bundle-ui` profile, Maven will download a [`DependencyTrack/frontend`](https://github.com/DependencyTrack/frontend) \n> release and include it in the JAR. The frontend version is specified via the `frontend.version` property in [`pom.xml`](./pom.xml).\n\nThe resulting files are placed in `./target` as `dependency-track-apiserver.jar` or `dependency-track-bundled.jar` respectively.\nBoth JARs ship with an [embedded Jetty server](https://github.com/stevespringett/Alpine/tree/master/alpine-executable-war), \nthere's no need to deploy them in an application server like Tomcat or WildFly.\n\n## Running\n\nTo run a previously built executable JAR, just invoke it with `java -jar`, e.g.:\n\n```shell\njava -jar ./target/dependency-track-apiserver.jar\n```\n\nThe API server will be available at `http://127.0.0.1:8080`.\n\nAdditional configuration (e.g. database connection details) can be provided as usual via `application.properties`\nor environment variables. Refer to the [configuration documentation](https://docs.dependencytrack.org/getting-started/configuration/).\n\n## Debugging\n\nTo build and run the API server in one go, invoke the Jetty Maven plugin as follows:\n\n```shell\nmvn jetty:run -P enhance -Dlogback.configurationFile=src/main/docker/logback.xml\n```\n\n> Note that the `bundle-ui` profile has no effect using this method. \n> It works only for the API server, not the bundled distribution.\n\nThe above command is also suitable for debugging. For IntelliJ, simply *Debug* the [Jetty](./.idea/runConfigurations/Jetty.run.xml) run configuration.\n\n### Inspecting the database\n\nUnless configured otherwise, Dependency-Track will use an [H2](https://www.h2database.com/html/main.html) database in \n`embedded` mode. The database file is located at `~/.dependency-track/db.mv.db`.\n\nYou can open and inspect the database file, for example with tools like [DBeaver](https://dbeaver.io/) or \n[IntelliJ Ultimate's integrated one](https://www.jetbrains.com/help/idea/database-tool-window.html),\nusing the following connection details:\n\n* JDBC URL: `jdbc:h2:~/.dependency-track/db`\n* Username: `sa`\n* Password: none\n\nThese are the values defined via `alpine.database.*` properties in the\n[`application.properties`](src/main/resources/application.properties) file.\n\n> **Warning**  \n> Make sure that your database tool uses version **2** of the H2 database driver.\n> Connections using version 1 of the driver will fail!\n\nA limitation of the H2 database in `embedded` mode is that *only a single process at a time can access it*.\nIf you want to inspect the database while Dependency-Track is running, you have two options:\n\n#### Enable the embedded H2 console\n\nWhen building Dependency-Track locally, you can opt in to enabling an embedded \n[H2 console](http://www.h2database.com/html/quickstart.html#h2_console). \n\nTo enable it, simply pass the additional `h2-console` Maven profile to your build command.\nThis also works with the Jetty Maven plugin:\n\n```shell\nmvn jetty:run -P enhance -P h2-console -Dlogback.configurationFile=src/main/docker/logback.xml\n```\n\nOnce enabled, the console will be available at http://localhost:8080/h2-console.\n\n> **Note**  \n> Supporting the H2 console via a dedicated build profile instead of a runtime configuration \n> was an [active decision](https://github.com/DependencyTrack/dependency-track/pull/2592). Exposing\n> the console is a security risk, and should only ever be done for local testing purposes. Enabling\n> the console is not possible in official builds distributed via GitHub releases and Docker Hub.\n\n#### Use an external database\n\nSimply set up any of the [supported external databases](https://docs.dependencytrack.org/getting-started/database-support/).\nDocker makes this very easy. Here's an example for how you can do it with PostgreSQL:\n\n```shell\n# Launch a Postgres container\ndocker run -d --name postgres -p \"127.0.0.1:5432:5432\" \\\n  -e \"POSTGRES_DB=dtrack\" -e \"POSTGRES_USER=dtrack\" -e \"POSTGRES_PASSWORD=dtrack\" \\\n  postgres:15-alpine\n\n# Configure the database connection for Dependency-Track\nexport ALPINE_DATABASE_MODE=external\nexport ALPINE_DATABASE_URL=jdbc:postgresql://localhost:5432/dtrack\nexport ALPINE_DATABASE_DRIVER=org.postgresql.Driver\nexport ALPINE_DATABASE_USERNAME=dtrack\nexport ALPINE_DATABASE_PASSWORD=dtrack\n\n# Launch Dependency-Track\nmvn jetty:run -P enhance -Dlogback.configurationFile=src/main/docker/logback.xml\n```\n\nYou can now use tooling native to your chosen RDBMS, for example [pgAdmin](https://www.pgadmin.org/).\n\n### Skipping NVD mirroring\n\nFor local debugging and testing, it is sometimes desirable to skip the NVD mirroring process\nthat is executed a minute after Dependency-Track has started.\n\nThis can be achieved by tricking Dependency-Track into thinking that it already\nmirrored the NVD data, so there's no need to re-download it again.\n\nPrior to starting Dependency-Track, execute the `data-nist-generate-dummy.sh` script:\n\n```shell\n./dev/scripts/data-nist-generate-dummy.sh\n```\n\n> **Note** \n> The `modified` feed will still be downloaded. But that feed is so small that it\n> doesn't really have an impact.\n\nWhen testing containerized deployments, simply mount the local directory containing the prepared\nNVD data into the container:\n\n```shell\n./dev/scripts/data-nist-generate-dummy.sh\ndocker run -d --name dtrack \\\n  -v \"$HOME/.dependency-track:/data/.dependency-track\" \\\n  -p '127.0.0.1:8080:8080' dependencytrack/apiserver:snapshot\n```\n\n## Debugging with Frontend\n\nStart the API server via the Jetty Maven plugin (see [Debugging](#debugging) above). The API server will listen on \n`http://127.0.0.1:8080`.\n\nClone the frontend repository, install its required dependencies and launch the Vue development server:\n\n```shell\ngit clone https://github.com/DependencyTrack/frontend.git dependency-track-frontend\ncd ./dependency-track-frontend\nnpm ci\nnpm run serve\n```\n\nPer default, the Vue development server will listen on port `8080`. If that port is taken, it will choose a higher,\nunused port (typically `8081`). Due to this behavior, it is important to always start the API server first, unless\nyou want to fiddle with default configurations of both API server and frontend.\n\nNow visit `http://127.0.0.1:8081` in your browser and use Dependency-Track as usual.\n\n## Testing\n\n### Running unit tests\n\nTo run all tests:\n\n```shell\nmvn clean verify -P enhance\n```\n\nTo run a single test:\n\n```shell\nmvn -P enhance -Dtest=ComposerMetaAnalyzerTest verify\n```\n\nDepending on your machine, this will take roughly 10-30min. Unless you modified central parts of the application,\nstarting single tests separately via IDE is a better choice. \n\n### Testing manually\n\nWe provide multiple Docker Compose files that can be used to quickly set up a local testing environment.  \nThe files are located in the [`dev`](dev/) directory.\n\n#### With embedded H2 database\n\nThe default [`docker-compose.yml`](dev/docker-compose.yml) will deploy a frontend and API server container using an \nembedded H2 database.\n\n```shell\ncd dev\ndocker compose up -d\n```\n\n#### With PostgreSQL database\n\nTo use a PostgreSQL database instead of embedded H2, use [`docker-compose.postgres.yml`](dev/docker-compose.postgres.yml).\n\n```shell\ncd dev\ndocker compose -f docker-compose.yml -f docker-compose.postgres.yml up -d\n```\n\n#### With Microsoft SQL Server database\n\nTo use a Microsoft SQL Server database instead of embedded H2, use [`docker-compose.mssql.yml`](dev/docker-compose.mssql.yml).\n\n```shell\ncd dev\ndocker compose -f docker-compose.yml -f docker-compose.mssql.yml up -d\n```\n\n#### With monitoring stack\n\nTo deploy both Prometheus and Grafana, [`docker-compose.monitoring.yml`](dev/docker-compose.monitoring.yml) may be supplied to any\nof the commands listed above. For example:\n\n```shell\ncd dev\ndocker compose -f docker-compose.yml -f docker-compose.postgres.yml -f docker-compose.monitoring.yml up -d\n```\n\nPrometheus will automatically discover the API server's metrics. Grafana is configured to provision Prometheus\nas datasource, and import the [sample dashboard](https://docs.dependencytrack.org/getting-started/monitoring/#grafana-dashboard)\non startup.\n\nTo view the dashboard, visit http://localhost:3000 in your browser. The initial Grafana credentials are:\n\n* Username: `admin`\n* Password: `admin`\n\n## DataNucleus Bytecode Enhancement\n\nOccasionally when running tests without Maven from within your IDE, you will run into failures due to exceptions\nsimilar to this one:\n\n```\norg.datanucleus.exceptions.NucleusUserException: Found Meta-Data for class org.dependencytrack.model.Component but this class is either not enhanced or you have multiple copies of the persistence API jar in your CLASSPATH!! Make sure all persistable classes are enhanced before running DataNucleus and/or the CLASSPATH is correct.\n```\n\nThis happens because DataNucleus requires classes annotated with `@PersistenceCapable` to be [enhanced](https://www.datanucleus.org/products/accessplatform/jdo/enhancer.html).\nEnhancement is performed on compiled bytecode and thus has to be performed post-compilation \n(`process-classes` [lifecycle phase](https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html#Lifecycle_Reference) in Maven). \nDuring a Maven build, the [DataNucleus Maven plugin](https://www.datanucleus.org/products/accessplatform/jdo/enhancer.html#maven)\ntakes care of this (that's also why `-P enhance` is required in all Maven commands).\n\nBecause most IDEs run their own build when executing tests, effectively bypassing Maven, bytecode enhancement is not\nperformed, and exceptions as that shown above are raised. If this happens, you can manually kick off the bytecode\nenhancement like this:\n\n```shell\nmvn clean process-classes -P enhance\n```\n\nNow just execute the test again, and it should just work. \n\n> If you're still running into issues, ensure that your IDE is not cleaning the workspace \n> (removing the `target` directory) before executing the test. \n\n## Building Container Images\n\nEnsure you've built either API server or the bundled distribution, or both.\n\nTo build the API server image:\n\n```shell\ndocker build --build-arg WAR_FILENAME=dependency-track-apiserver.jar -t dependencytrack/apiserver:local -f ./src/main/docker/Dockerfile .\n```\n\nTo build the bundled image:\n\n```shell\ndocker build --build-arg WAR_FILENAME=dependency-track-bundled.jar -t dependencytrack/bundled:local -f ./src/main/docker/Dockerfile .\n```\n\n## Documentation\n\nThe documentation is built using [Jekyll](https://jekyllrb.com/) and published to \n[docs.dependencytrack.org](https://docs.dependencytrack.org). Sources are located in the [`docs`](./docs) directory.\n\nThere is a lot going on in `docs`, but most of the time you'll want to spend your time in these directories:\n\n* [`docs/_docs`](./docs/_docs): The *actual* documentation\n* [`docs/_posts`](./docs/_posts): The changelogs\n\nTo build the docs, run:\n\n```shell\n./dev/scripts/docs-build.sh\n```\n\nThis installs all required dependencies (among them Jekyll) to `docs/vendor/bundle`, generates the documentation\nwebsite and stores it in `docs/_site`.\n\nFor local development, you may want to run this instead: \n```shell\n./dev/scripts/docs-dev.sh\n```\n\nThis will start a local webserver that listens on `127.0.0.1:4000` and rebuilds the site whenever you make changes.\n\n> To be able to build the docs with Jekyll, you'll need [Ruby 2](https://www.ruby-lang.org/en/),\n> [RubyGems](https://rubygems.org/pages/download) and [Bundler](https://bundler.io/) installed.\n> If you can't be bothered to install all of this, you can use the \n> [Jekyll container image](https://hub.docker.com/r/jekyll/jekyll) instead, e.g.:\n> ```\n> docker run --rm -it --name jekyll -p \"127.0.0.1:4000:4000\" -v \"$(pwd)/docs:/srv/jekyll:Z\" jekyll/jekyll:3.8 jekyll serve\n> ```\n\n## Feature Branches\n\nWhen working on larger changes, it can happen that pull requests remain open for a prolonged period of time.\nAs the `master` branch evolves, more and more merge conflicts occur, which the PR author needs to address.\n\nSometimes it's desired to get user feedback on a new feature before it's being merged to `master`.\nExpecting users to clone the repository and build the project on their own however is not realistic.\nInstead, it would be beneficial to offer a container image including the new feature.\n\nWhen a feature is built in collaboration by multiple individuals, teams have to jump through annoying hoops\nto make it work with the GitHub workflow. Usually this requires one individual to raise a PR from their fork,\nand giving the rest of the team write permissions to their repository.\n\nTo address the use cases above, contributors to the Dependency-Track project can request a *feature branch*\nfrom a maintainer. Feature branches follow the `feature-*` naming pattern, and are subject to branch protection rules.\nJust like for the `master` branch, changes pushed to a `feature` branch trigger a container image build.\nImages built from `feature` branches are tagged with the name of the branch, for example for a branch named `feature-foobar`:\n\n```\ndocker.io/dependencytrack/apiserver:feature-foobar\n```\n\nThis imagine can be shared with colleagues and community members for testing. Images built this way will be deleted\nshortly after the respective feature has been merged into the `master` branch.\n\nInstead of raising PRs into `master`, contributors would now raise PRs into `feature-foobar`. \n\n> [!NOTE]\n> PRs into `feature` branches must still be approved by maintainers, to avoid malicious code being introduced.\n> However, this is only a surface-level review, unless explicitly requested otherwise by the contributor(s).\n\nOnce the feature is considered ready, a PR can be raised from `feature-foobar` into `master`.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.197265625,
          "content": "[![Build Status](https://github.com/DependencyTrack/dependency-track/actions/workflows/ci-build.yaml/badge.svg)](https://github.com/DependencyTrack/dependency-track/actions?workflow=CI+Build)\n[![Codacy Badge](https://app.codacy.com/project/badge/Grade/b2ecd06dab57438a9a55bc4a71c5a8ce)](https://www.codacy.com/gh/DependencyTrack/dependency-track/dashboard?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=DependencyTrack/dependency-track&amp;utm_campaign=Badge_Grade)\n[![Alpine](https://img.shields.io/badge/built%20on-Alpine-blue.svg)](https://github.com/stevespringett/Alpine)\n[![License][license-image]][Apache License 2.0]\n[![OWASP Flagship](https://img.shields.io/badge/owasp-flagship%20project-orange.svg)](https://www.owasp.org/index.php/OWASP_Dependency_Track_Project)\n[![Website](https://img.shields.io/badge/https://-dependencytrack.org-blue.svg)](https://dependencytrack.org/)\n[![Documentation](https://img.shields.io/badge/read-documentation-blue.svg)](https://docs.dependencytrack.org/)\n[![Slack](https://img.shields.io/badge/chat%20on-slack-46BC99.svg)](https://dependencytrack.org/slack)\n[![Group Discussion](https://img.shields.io/badge/discussion-groups.io-blue.svg)](https://dependencytrack.org/discussion)\n[![YouTube Subscribe](https://img.shields.io/badge/youtube-subscribe-%23c4302b.svg)](https://dependencytrack.org/youtube)\n[![Twitter](https://img.shields.io/twitter/follow/dependencytrack.svg?label=Follow&style=social)](https://twitter.com/dependencytrack)\n[![Downloads](https://img.shields.io/github/downloads/DependencyTrack/dependency-track/total.svg)](https://github.com/DependencyTrack/dependency-track/releases)\n[![Latest](https://img.shields.io/github/release/DependencyTrack/dependency-track.svg)](https://github.com/DependencyTrack/dependency-track/releases)\n[![Pulls - API Server](https://img.shields.io/docker/pulls/dependencytrack/apiserver.svg?label=Docker%20Pulls%20%28API%20Server%29)](https://hub.docker.com/r/dependencytrack/apiserver/)\n[![Pulls - Frontend](https://img.shields.io/docker/pulls/dependencytrack/frontend.svg?label=Docker%20Pulls%20%28Frontend%29)](https://hub.docker.com/r/dependencytrack/frontend/)\n[![Pulls - Bundled](https://img.shields.io/docker/pulls/dependencytrack/bundled.svg?label=Docker%20Pulls%20%28Bundled%29)](https://hub.docker.com/r/dependencytrack/bundled/)\n[![Pulls - Legacy](https://img.shields.io/docker/pulls/owasp/dependency-track.svg?label=Docker%20Pulls%20%28OWASP%20Legacy%29)](https://hub.docker.com/r/owasp/dependency-track/)\n\n![logo preview](https://raw.githubusercontent.com/DependencyTrack/branding/master/dt-logo.svg?sanitize=true)\n\n\nDependency-Track is an intelligent [Component Analysis] platform that allows organizations to\nidentify and reduce risk in the software supply chain. Dependency-Track takes a unique\nand highly beneficial approach by leveraging the capabilities of [Software Bill of Materials] (SBOM). This approach\nprovides capabilities that traditional Software Composition Analysis (SCA) solutions cannot achieve.\n\nDependency-Track monitors component usage across all versions of every application in its portfolio in order to\nproactively identify risk across an organization. The platform has an API-first design and is ideal for use in\nCI/CD environments.\n\n## Ecosystem Overview\n![alt text](./docs/images/integrations.png)\n\n## Features\n* Consumes and produces [CycloneDX] Software Bill of Materials (SBOM)\n* Consumes and produces [CycloneDX Vulnerability Exploitability Exchange (VEX)](https://cyclonedx.org/capabilities/vex/)\n* Component support for:\n  * Applications\n  * Libraries\n  * Frameworks\n  * Operating systems\n  * Containers\n  * Firmware\n  * Files\n  * Hardware\n  * Services\n* Tracks component usage across every application in an organizations portfolio\n* Quickly identify what is affected, and where\n* Identifies multiple forms of risk including\n  * Components with known vulnerabilities\n  * Out-of-date components\n  * Modified components\n  * License risk\n  * More coming soon...\n* Integrates with multiple sources of vulnerability intelligence including:\n  * [National Vulnerability Database] (NVD)\n  * [GitHub Advisories]\n  * [Sonatype OSS Index]\n  * [Snyk]\n  * [Trivy]\n  * [OSV]\n  * [VulnDB] from [Risk Based Security]\n  * More coming soon.\n* Helps to prioritize mitigation by incorporating support for the [Exploit Prediction Scoring System (EPSS)](https://www.first.org/epss/)\n* Maintain a private vulnerability database of vulnerability components\n* Robust policy engine with support for global and per-project policies\n  * Security risk and compliance\n  * License risk and compliance\n  * Operational risk and compliance\n* Ecosystem agnostic with built-in repository support for:\n  * Cargo (Rust)\n  * Composer (PHP)\n  * Gems (Ruby)\n  * Hex (Erlang/Elixir)\n  * Maven (Java)\n  * NPM (Javascript)\n  * CPAN (Perl)\n  * NuGet (.NET)\n  * PyPI (Python)\n  * More coming soon.\n* Identifies APIs and external service components including:\n  * Service provider\n  * Endpoint URIs\n  * Data classification\n  * Directional flow of data\n  * Trust boundary traversal\n  * Authentication requirements\n* Includes a comprehensive auditing workflow for triaging results\n* Configurable notifications supporting Slack, Microsoft Teams, Mattermost, Webhooks, Webex, Email and Jira\n* Supports standardized SPDX license ID’s and tracks license use by component\n* Easy to read metrics for components, projects, and portfolio\n* Native support for Kenna Security, Fortify SSC, ThreadFix, and DefectDojo\n* API-first design facilitates easy integration with other systems\n* API documentation available in OpenAPI format\n* OAuth 2.0 + OpenID Connect (OIDC) support for single sign-on (authN/authZ)\n* Supports internally managed users, Active Directory/LDAP, and API Keys\n* Simple to install and configure. Get up and running in just a few minutes\n\n\n<hr>\n\n![alt text](./docs/images/screenshots/dashboard.png)\n\n### Quickstart (Docker Compose)\n\n```bash\n# Downloads the latest Docker Compose file\ncurl -LO https://dependencytrack.org/docker-compose.yml\n\n# Starts the stack using Docker Compose\ndocker-compose up -d\n```\n\n### Quickstart (Docker Swarm)\n\n```bash\n# Downloads the latest Docker Compose file\ncurl -LO https://dependencytrack.org/docker-compose.yml\n\n# Initializes Docker Swarm (if not previously initialized)\ndocker swarm init\n\n# Starts the stack using Docker Swarm\ndocker stack deploy -c docker-compose.yml dtrack\n```\n\n### Quickstart (Manual Execution)\n\n```bash\n# Pull the image from the Docker Hub OWASP repo\ndocker pull dependencytrack/bundled\n\n# Creates a dedicated volume where data can be stored outside the container\ndocker volume create --name dependency-track\n\n# Run the bundled container with 8GB RAM on port 8080\ndocker run -d -m 8192m -p 8080:8080 --name dependency-track -v dependency-track:/data dependencytrack/bundled\n```\n\n**NOTICE: Always use official binary releases in production.**\n\n## Distributions\n\nDependency-Track has three distribution variants. They are:\n\n| Package    | Package Format          | Recommended | Supported | Docker | Download |\n|:-----------|:------------------------|:-----------:|:---------:|:------:|:--------:|\n| API Server | Executable WAR          |      ✅      |     ✅     |   ✅    |    ✅     |\n| Frontend   | Single Page Application |      ✅      |     ✅     |   ✅    |    ✅     |\n| Bundled    | Executable WAR          |      ❌      |    ☑️     |   ✅    |    ✅     |\n\n#### API Server\n\nThe API Server contains an embedded Jetty server and all server-side functionality, but excludes the frontend user\ninterface. This variant is new as of Dependency-Track v4.0.\n\n#### Frontend\n\nThe [Frontend](https://github.com/DependencyTrack/frontend) is the user interface that is accessible in a web browser. The Frontend is a Single Page Application (SPA)\nthat can be deployed independently of the Dependency-Track API Server. This variant is new as of Dependency-Track v3.8.\n\n#### Bundled\n\nThe Bundled variant combines the API Server and the Frontend user interface. This variant was previously referred to as\nthe executable war and was the preferred distribution from Dependency-Track v3.0 - v3.8. This variant is supported but\ndeprecated and will be discontinued in a future release.\n\n#### Traditional\n\nThe Traditional variant combines the API Server and the Frontend user interface and must be deployed to a Servlet\ncontainer. This variant is not supported, deprecated, and will be discontinued in a future release.\n\n## Deploying on Kubernetes with Helm\n\nRefer to https://github.com/DependencyTrack/helm-charts.\n\n## Contributing\n\nInterested in contributing to Dependency-Track? Please check [`CONTRIBUTING.md`](./CONTRIBUTING.md) to see how you can help!\n\n## Resources\n\n* Website: <https://dependencytrack.org/>\n* Documentation: <https://docs.dependencytrack.org/>\n* Component Analysis: <https://owasp.org/www-community/Component_Analysis>\n\n## Community\n\n* Twitter: <https://dependencytrack.org/twitter>\n* YouTube: <https://dependencytrack.org/youtube>\n* Slack: <https://dependencytrack.org/slack> (Invite:  <https://dependencytrack.org/slack/invite>)\n* Discussion (Groups.io): <https://dependencytrack.org/discussion>\n\n## Copyright & License\nDependency-Track is Copyright (c) OWASP Foundation. All Rights Reserved.\n\nPermission to modify and redistribute is granted under the terms of the\n[Apache License 2.0].\n\nDependency-Track makes use of several other open source libraries. Please see\nthe [notices] file for more information.\n\n  [National Vulnerability Database]: https://nvd.nist.gov\n  [GitHub Advisories]: https://www.github.com/advisories\n  [Sonatype OSS Index]: https://ossindex.sonatype.org\n  [Snyk]: https://snyk.io\n  [Trivy]: https://www.aquasec.com/products/trivy/\n  [OSV]: https://osv.dev\n  [VulnDB]: https://vulndb.cyberriskanalytics.com\n  [Risk Based Security]: https://www.riskbasedsecurity.com\n  [Component Analysis]: https://owasp.org/www-community/Component_Analysis\n  [Software Bill of Materials]: https://owasp.org/www-community/Component_Analysis#software-bill-of-materials-sbom\n  [CycloneDX]: https://cyclonedx.org\n  [license-image]: https://img.shields.io/badge/license-apache%20v2-brightgreen.svg\n  [Apache License 2.0]: https://github.com/DependencyTrack/dependency-track/blob/master/LICENSE.txt\n  [notices]: https://github.com/DependencyTrack/dependency-track/blob/master/NOTICES.txt\n  [Alpine]: https://github.com/stevespringett/Alpine\n"
        },
        {
          "name": "RELEASING.md",
          "type": "blob",
          "size": 3.3359375,
          "content": "# Releasing OWASP Dependency-Track\n\nThis document describes the process of releasing a new version of Dependency-Track via GitHub Actions.\n\n## Pre-Release Checklist\n\n- [ ] Ensure that there is no dependency on `SNAPSHOT` versions of libraries and frameworks\n- [ ] In case the release includes database schema changes or [upgrades](src/main/java/org/dependencytrack/upgrade), ensure that they work with all supported databases\n  - [ ] Embedded H2\n  - [ ] Microsoft SQL Server\n  - [ ] MySQL\n  - [ ] PostgreSQL\n- [ ] Ensure that a [changelog](docs/_posts) entry for the release exists and is complete\n- [ ] Bump the `version` field in [`docs/_config.yml`](docs/_config.yml) to the new version\n- [ ] When API server and frontend shall be released together\n  - [ ] Release the frontend first\n  - [ ] Bump to the `frontend.version` property in `pom.xml` according to the new version\n\n## Releasing\n\n### Release a new major or minor version\n\n1. Ensure the current state in `master` is ready to be released\n2. Head over to the *Actions* tab in GitHub\n3. Select the *Release CI* entry in the *Workflows* section\n4. The following UI element will have a button to trigger the workflow. Once clicked, the *Use workflow from* dialog will appear:\n\n![Create a release from `master`](./.github/images/release-master.png)\n\n5. Ensure that `master` is selected in the branch dropdown\n6. OPTIONAL. If the version you intend to release differs from the version in the branch you can overwrite it by specifying it in the input variable designated for it\n7. Finally, once all inputs are checked press the *Run Workflow* button\n\n### Release a new bugfix version\n\n1. Ensure the current state in the release branch is ready to be released\n2. Head over to the *Actions* tab in GitHub\n3. Select the *Release CI* entry in the *Workflows* section\n4. The following UI element will have a button to trigger the workflow. Once clicked, the *Use workflow from* dialog will appear:\n\n![Create a release from a release branch](./.github/images/release-releasebranch.png)\n\n5. Ensure that a release branch (e.g. `4.5.x`) is selected in the branch dropdown\n6. OPTIONAL. If the version you intend to release differs from the version in the branch you can overwrite it by specifying it in the input variable designated for it\n7. Finally, once all inputs are checked press the *Run Workflow* button\n\n## Post-Release Checklist\n\n- [ ] Collect hashes of all release artifacts (e.g. via `checksums.txt` attached to GitHub Releases)\n  - [ ] API server: `dependency-track-apiserver.jar`, `dependency-track-bundled.jar`\n  - [ ] frontend: `frontend-dist.zip`\n- [ ] Collect links for all SBOMs generated during the release (they're attached to GitHub Releases)\n- [ ] Create a branch from the latest release branch (e.g. `4.6.x`)\n  - [ ] Update the release [changelog](docs/_posts) with the collected hashes and SBOMs\n  - [ ] Create PR back into the release branch and get it merged\n- [ ] Change the deployment branch for [GitHub Pages](https://github.com/DependencyTrack/dependency-track/settings/pages) to the new release branch\n- [ ] Update *Dependency-Track Version* options in issue templates\n  - [ ] [Defect Report](https://github.com/DependencyTrack/dependency-track/blob/master/.github/ISSUE_TEMPLATE/defect-report.yml)\n  - [ ] [Enhancement Request](https://github.com/DependencyTrack/dependency-track/blob/master/.github/ISSUE_TEMPLATE/enhancement-request.yml)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.8056640625,
          "content": "# Reporting Security Issues\n\nThe Dependency-Track team and community take security bugs seriously. We appreciate your efforts to responsibly disclose your findings, and will make every effort to acknowledge your contributions.\n\nTo report a security issue, email [security@dependencytrack.org](mailto:security@dependencytrack.org) and [steve.springett@owasp.org](mailto:steve.springett@owasp.org) and include the word \"SECURITY\" in the subject line.\n\nThe Dependency-Track team will send a response indicating the next steps in handling your report. After the initial reply to your report, the security team will keep you informed of the progress towards a fix and full announcement, and may ask for additional information or guidance.\n\nReport security bugs in third-party modules to the person or team maintaining the module.\n"
        },
        {
          "name": "dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 36.8330078125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ This file is part of Dependency-Track.\n  ~\n  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~ you may not use this file except in compliance with the License.\n  ~ You may obtain a copy of the License at\n  ~\n  ~   http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  ~\n  ~ SPDX-License-Identifier: Apache-2.0\n  ~ Copyright (c) OWASP Foundation. All Rights Reserved.\n  -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <parent>\n        <groupId>us.springett</groupId>\n        <artifactId>alpine-parent</artifactId>\n        <version>3.1.2</version>\n    </parent>\n\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.dependencytrack</groupId>\n    <artifactId>dependency-track</artifactId>\n    <packaging>war</packaging>\n    <version>4.13.0-SNAPSHOT</version>\n\n    <name>Dependency-Track</name>\n    <url>https://dependencytrack.org/</url>\n    <description>Dependency-Track is an intelligent component analysis platform that allows organizations to identify and reduce risk in the software supply chain.</description>\n    <inceptionYear>2013</inceptionYear>\n    <organization>\n        <name>OWASP</name>\n    </organization>\n\n    <licenses>\n        <license>\n            <name>Apache-2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <developers>\n        <developer>\n            <name>Steve Springett</name>\n            <email>Steve.Springett@owasp.org</email>\n            <organization>OWASP</organization>\n            <organizationUrl>http://www.owasp.org/</organizationUrl>\n            <roles>\n                <role>Architect</role>\n                <role>Developer</role>\n            </roles>\n        </developer>\n    </developers>\n\n    <scm>\n        <connection>scm:git:git@github.com:DependencyTrack/dependency-track.git</connection>\n        <url>https://github.com/DependencyTrack/dependency-track.git</url>\n        <developerConnection>scm:git:git@github.com:DependencyTrack/dependency-track.git</developerConnection>\n        <tag>HEAD</tag>\n    </scm>\n\n    <issueManagement>\n        <system>github</system>\n        <url>https://github.com/DependencyTrack/dependency-track/issues</url>\n    </issueManagement>\n\n    <ciManagement>\n        <system>github-actions</system>\n        <url>https://github.com/DependencyTrack/dependency-track/actions</url>\n    </ciManagement>\n\n    <properties>\n        <!-- Java Version -->\n        <maven.compiler.source>21</maven.compiler.source>\n        <maven.compiler.target>21</maven.compiler.target>\n\n        <!-- Dependency Versions -->\n        <frontend.version>4.12.2</frontend.version>\n        <lib.alpine.version>${project.parent.version}</lib.alpine.version>\n        <lib.awaitility.version>4.2.2</lib.awaitility.version>\n        <lib.brotli-decoder.version>0.1.2</lib.brotli-decoder.version>\n        <lib.checkstyle.version>10.20.2</lib.checkstyle.version>\n        <lib.aws-advanced-jdbc-wrapper.version>2.5.4</lib.aws-advanced-jdbc-wrapper.version>\n        <lib.cloud-sql-connector-jdbc-sqlserver.version>1.21.2</lib.cloud-sql-connector-jdbc-sqlserver.version>\n        <lib.cloud-sql-mysql-socket-factory-connector-j-8.version>1.21.0</lib.cloud-sql-mysql-socket-factory-connector-j-8.version>\n        <lib.cloud-sql-postgres-socket-factory.version>1.21.0</lib.cloud-sql-postgres-socket-factory.version>\n        <lib.cpe-parser.version>2.1.0</lib.cpe-parser.version>\n        <lib.commons-compress.version>1.27.1</lib.commons-compress.version>\n        <lib.commons-text.version>1.13.0</lib.commons-text.version>\n        <lib.cvss-calculator.version>1.4.2</lib.cvss-calculator.version>\n        <lib.owasp-rr-calculator.version>1.0.1</lib.owasp-rr-calculator.version>\n        <lib.cyclonedx-java.version>9.1.0</lib.cyclonedx-java.version>\n        <lib.greenmail.version>2.1.2</lib.greenmail.version>\n        <lib.jackson.version>2.18.0</lib.jackson.version>\n        <lib.jackson-databind.version>2.18.0</lib.jackson-databind.version>\n        <lib.json-java.version>20250107</lib.json-java.version>\n        <lib.json-unit.version>4.1.0</lib.json-unit.version>\n        <lib.junit.version>4.13.2</lib.junit.version>\n        <lib.lucene.version>8.11.4</lib.lucene.version>\n        <lib.maven-artifact.version>3.9.9</lib.maven-artifact.version>\n        <lib.mockserver-netty.version>5.15.0</lib.mockserver-netty.version>\n        <lib.open-vulnerability-clients.version>7.1.0</lib.open-vulnerability-clients.version>\n        <lib.packageurl.version>1.5.0</lib.packageurl.version>\n        <lib.pebble.version>3.2.2</lib.pebble.version>\n        <lib.protobuf-java.version>4.29.3</lib.protobuf-java.version>\n        <lib.resilience4j.version>2.2.0</lib.resilience4j.version>\n        <lib.swagger-parser.version>2.1.22</lib.swagger-parser.version>\n        <lib.system-rules.version>1.19.0</lib.system-rules.version>\n        <lib.testcontainers.version>1.20.4</lib.testcontainers.version>\n        <lib.wiremock.version>2.35.2</lib.wiremock.version>\n        <lib.woodstox.version>7.0.0</lib.woodstox.version>\n        <lib.junit-params.version>1.1.1</lib.junit-params.version>\n        <lib.signpost-core.version>2.1.1</lib.signpost-core.version>\n        <lib.httpclient.version>4.5.14</lib.httpclient.version>\n        <lib.httpclient5.version>5.4.1</lib.httpclient5.version>\n        <lib.log4j-over-slf4j.version>2.0.16</lib.log4j-over-slf4j.version>\n        <lib.org-kohsuke-github-api.version>1.323</lib.org-kohsuke-github-api.version>\n        <!-- JDBC Drivers -->\n        <lib.jdbc-driver.mssql.version>12.8.1.jre11</lib.jdbc-driver.mssql.version>\n        <lib.jdbc-driver.mysql.version>8.2.0</lib.jdbc-driver.mysql.version>\n        <lib.jdbc-driver.postgresql.version>42.7.4</lib.jdbc-driver.postgresql.version>\n        <!-- Maven Plugin Properties -->\n        <plugin.retirejs.breakOnFailure>false</plugin.retirejs.breakOnFailure>\n        <plugin.jetty.version>12.0.16</plugin.jetty.version>\n        <plugin.protoc-jar.version>3.11.4</plugin.protoc-jar.version>\n        <!-- SonarCloud properties -->\n        <sonar.exclusions>src/main/webapp/**</sonar.exclusions>\n        <!-- Tool Versions -->\n        <tool.protoc.version>com.google.protobuf:protoc:${lib.protobuf-java.version}</tool.protoc.version>\n        <!-- CycloneDX CLI -->\n        <cyclonedx-cli.path>cyclonedx</cyclonedx-cli.path>\n        <services.bom.merge.skip>true</services.bom.merge.skip>\n    </properties>\n\n    <repositories>\n        <repository>\n            <id>ossrh-snapshot</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n            <snapshots>\n                <updatePolicy>always</updatePolicy>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n\n    <dependencies>\n        <!-- Alpine -->\n        <dependency>\n            <groupId>us.springett</groupId>\n            <artifactId>alpine-common</artifactId>\n            <version>${lib.alpine.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>us.springett</groupId>\n            <artifactId>alpine-model</artifactId>\n            <version>${lib.alpine.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>us.springett</groupId>\n            <artifactId>alpine-infra</artifactId>\n            <version>${lib.alpine.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>us.springett</groupId>\n            <artifactId>alpine-server</artifactId>\n            <version>${lib.alpine.version}</version>\n        </dependency>\n        <!-- CVSS Calculator -->\n        <dependency>\n            <groupId>us.springett</groupId>\n            <artifactId>cvss-calculator</artifactId>\n            <version>${lib.cvss-calculator.version}</version>\n        </dependency>\n        <!-- OWASP Risk Rating calculator -->\n        <dependency>\n            <groupId>us.springett</groupId>\n            <artifactId>owasp-risk-rating-calculator</artifactId>\n            <version>${lib.owasp-rr-calculator.version}</version>\n        </dependency>\n        <!-- CPE Parser -->\n        <dependency>\n            <groupId>us.springett</groupId>\n            <artifactId>cpe-parser</artifactId>\n            <version>${lib.cpe-parser.version}</version>\n        </dependency>\n        <!-- CycloneDX -->\n        <dependency>\n            <groupId>org.cyclonedx</groupId>\n            <artifactId>cyclonedx-core-java</artifactId>\n            <version>${lib.cyclonedx-java.version}</version>\n        </dependency>\n\n        <!-- org.json\n        This was previously transitively included with Unirest. However, Unirest v3.x removed reliance on org.json\n        in favor of their own API compatible replacement. Therefore, it was necessary to directly include org.json.\n        Removal of org.json is documented in https://github.com/DependencyTrack/dependency-track/issues/1113 -->\n        <dependency>\n            <groupId>org.json</groupId>\n            <artifactId>json</artifactId>\n            <version>${lib.json-java.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>jakarta.servlet</groupId>\n            <artifactId>jakarta.servlet-api</artifactId>\n            <scope>provided</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>com.github.package-url</groupId>\n            <artifactId>packageurl-java</artifactId>\n            <version>${lib.packageurl.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.lucene</groupId>\n            <artifactId>lucene-core</artifactId>\n            <version>${lib.lucene.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.lucene</groupId>\n            <artifactId>lucene-analyzers-common</artifactId>\n            <version>${lib.lucene.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.lucene</groupId>\n            <artifactId>lucene-queryparser</artifactId>\n            <version>${lib.lucene.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.lucene</groupId>\n            <artifactId>lucene-queries</artifactId>\n            <version>${lib.lucene.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.lucene</groupId>\n            <artifactId>lucene-sandbox</artifactId>\n            <version>${lib.lucene.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>io.github.jeremylong</groupId>\n            <artifactId>open-vulnerability-clients</artifactId>\n            <version>${lib.open-vulnerability-clients.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>io.pebbletemplates</groupId>\n            <artifactId>pebble</artifactId>\n            <version>${lib.pebble.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>com.google.protobuf</groupId>\n            <artifactId>protobuf-java</artifactId>\n            <version>${lib.protobuf-java.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.google.protobuf</groupId>\n            <artifactId>protobuf-java-util</artifactId>\n            <version>${lib.protobuf-java.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>io.swagger.core.v3</groupId>\n            <artifactId>swagger-jaxrs2-jakarta</artifactId>\n            <version>${lib.swagger.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.swagger.parser.v3</groupId>\n            <artifactId>swagger-parser</artifactId>\n            <version>${lib.swagger-parser.version}</version>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.httpcomponents</groupId>\n            <artifactId>httpclient</artifactId>\n            <version>${lib.httpclient.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.httpcomponents.client5</groupId>\n            <artifactId>httpclient5</artifactId>\n            <version>${lib.httpclient5.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>oauth.signpost</groupId>\n            <artifactId>signpost-core</artifactId>\n            <version>${lib.signpost-core.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.brotli</groupId>\n            <artifactId>dec</artifactId>\n            <version>${lib.brotli-decoder.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.httpcomponents</groupId>\n            <artifactId>httpmime</artifactId>\n            <version>${lib.httpclient.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>com.fasterxml.woodstox</groupId>\n            <artifactId>woodstox-core</artifactId>\n            <version>${lib.woodstox.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.maven</groupId>\n            <artifactId>maven-artifact</artifactId>\n            <version>${lib.maven-artifact.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>com.microsoft.sqlserver</groupId>\n            <artifactId>mssql-jdbc</artifactId>\n            <version>${lib.jdbc-driver.mssql.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.mysql</groupId>\n            <artifactId>mysql-connector-j</artifactId>\n            <version>${lib.jdbc-driver.mysql.version}</version>\n            <exclusions>\n                <!--\n                    Protobuf is only required for MySQL X DevAPI, which we do not use.\n                    https://dev.mysql.com/doc/connector-j/8.0/en/connector-j-installing-maven.html\n                -->\n                <exclusion>\n                    <groupId>com.google.protobuf</groupId>\n                    <artifactId>protobuf-java</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>org.postgresql</groupId>\n            <artifactId>postgresql</artifactId>\n            <version>${lib.jdbc-driver.postgresql.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>software.amazon.jdbc</groupId>\n            <artifactId>aws-advanced-jdbc-wrapper</artifactId>\n            <version>${lib.aws-advanced-jdbc-wrapper.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.google.cloud.sql</groupId>\n            <artifactId>mysql-socket-factory-connector-j-8</artifactId>\n            <version>${lib.cloud-sql-mysql-socket-factory-connector-j-8.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.google.cloud.sql</groupId>\n            <artifactId>postgres-socket-factory</artifactId>\n            <version>${lib.cloud-sql-postgres-socket-factory.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.google.cloud.sql</groupId>\n            <artifactId>cloud-sql-connector-jdbc-sqlserver</artifactId>\n            <version>${lib.cloud-sql-connector-jdbc-sqlserver.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-compress</artifactId>\n            <version>${lib.commons-compress.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-text</artifactId>\n            <version>${lib.commons-text.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>io.github.resilience4j</groupId>\n            <artifactId>resilience4j-retry</artifactId>\n            <version>${lib.resilience4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.github.resilience4j</groupId>\n            <artifactId>resilience4j-ratelimiter</artifactId>\n            <version>${lib.resilience4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.github.resilience4j</groupId>\n            <artifactId>resilience4j-micrometer</artifactId>\n            <version>${lib.resilience4j.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>log4j-over-slf4j</artifactId>\n            <version>${lib.log4j-over-slf4j.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.kohsuke</groupId>\n            <artifactId>github-api</artifactId>\n            <version>${lib.org-kohsuke-github-api.version}</version>\n        </dependency>\n\n        <!-- Test Dependencies -->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>${lib.junit.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>pl.pragmatists</groupId>\n            <artifactId>JUnitParams</artifactId>\n            <version>${lib.junit-params.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.glassfish.jersey.test-framework.providers</groupId>\n            <artifactId>jersey-test-framework-provider-grizzly2</artifactId>\n            <version>${lib.jersey.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.glassfish.jersey.connectors</groupId>\n            <artifactId>jersey-grizzly-connector</artifactId>\n            <version>${lib.jersey.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <version>${lib.mockito.version}</version>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>com.github.tomakehurst</groupId>\n            <artifactId>wiremock-jre8</artifactId>\n            <version>${lib.wiremock.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.github.stefanbirkner</groupId>\n            <artifactId>system-rules</artifactId>\n            <version>${lib.system-rules.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.assertj</groupId>\n            <artifactId>assertj-core</artifactId>\n            <version>${lib.assertj.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>net.javacrumbs.json-unit</groupId>\n            <artifactId>json-unit-assertj</artifactId>\n            <version>${lib.json-unit.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mock-server</groupId>\n            <artifactId>mockserver-netty</artifactId>\n            <version>${lib.mockserver-netty.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.awaitility</groupId>\n            <artifactId>awaitility</artifactId>\n            <version>${lib.awaitility.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.icegreen</groupId>\n            <artifactId>greenmail-junit4</artifactId>\n            <version>${lib.greenmail.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.testcontainers</groupId>\n            <artifactId>testcontainers</artifactId>\n            <version>${lib.testcontainers.version}</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <finalName>${project.artifactId}</finalName>\n        <resources>\n            <resource>\n                <directory>src/main/resources</directory>\n                <filtering>false</filtering>\n            </resource>\n            <resource>\n                <directory>src/main/resources</directory>\n                <filtering>true</filtering>\n                <includes>\n                    <include>application.version</include>\n                    <include>openapi-configuration.yaml</include>\n                </includes>\n            </resource>\n        </resources>\n        <testResources>\n            <testResource>\n                <directory>src/test/resources</directory>\n                <filtering>false</filtering>\n            </testResource>\n        </testResources>\n        <pluginManagement>\n            <plugins>\n                <!--\n                    Plugin invocation is inherited from alpine-parent.\n                    Because this is an application, there's no point in attaching sources.\n                 -->\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-source-plugin</artifactId>\n                    <executions>\n                        <execution>\n                            <id>attach-sources</id>\n                            <phase>none</phase>\n                        </execution>\n                    </executions>\n                </plugin>\n\n                <!--\n                    Plugin invocation is inherited from alpine-parent.\n                    Because this is an application, there's no point in attaching javadocs.\n                 -->\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <executions>\n                        <execution>\n                            <id>attach-javadocs</id>\n                            <phase>none</phase>\n                        </execution>\n                    </executions>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <version>3.6.0</version>\n                <configuration>\n                    <configLocation>${project.basedir}/.checkstyle.xml</configLocation>\n                    <includeResources>false</includeResources>\n                    <includeTestResources>false</includeTestResources>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>validate</phase>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <dependencies>\n                    <dependency>\n                        <groupId>com.puppycrawl.tools</groupId>\n                        <artifactId>checkstyle</artifactId>\n                        <version>${lib.checkstyle.version}</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n            <plugin>\n                <groupId>com.github.os72</groupId>\n                <artifactId>protoc-jar-maven-plugin</artifactId>\n                <version>${plugin.protoc-jar.version}</version>\n                <executions>\n                    <execution>\n                        <id>protobuf</id>\n                        <phase>generate-sources</phase>\n                        <goals>\n                            <goal>run</goal>\n                        </goals>\n                        <configuration>\n                            <includeMavenTypes>direct</includeMavenTypes>\n                            <inputDirectories>\n                                <inputDirectory>src/main/proto</inputDirectory>\n                            </inputDirectories>\n                            <includeDirectories>\n                                <includeDirectory>src/main/proto</includeDirectory>\n                            </includeDirectories>\n                            <protocArtifact>${tool.protoc.version}</protocArtifact>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <configuration>\n                    <systemProperties>\n                        <property>\n                            <name>java.util.logging.config.file</name>\n                            <value>src/test/resources/logging.properties</value>\n                        </property>\n                    </systemProperties>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.apache.maven.surefire</groupId>\n                        <artifactId>surefire-junit4</artifactId>\n                        <version>${maven.surefire.plugin.version}</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <configuration>\n                    <excludes>\n                        <exclude>org/dependencytrack/upgrade/**/*</exclude>\n                        <exclude>trivy/proto/**/*</exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.cyclonedx</groupId>\n                <artifactId>cyclonedx-maven-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>cyclonedx-aggregate</id>\n                        <phase>prepare-package</phase>\n                        <goals>\n                            <goal>makeAggregateBom</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <projectType>application</projectType>\n                    <schemaVersion>1.5</schemaVersion>\n                    <includeCompileScope>true</includeCompileScope>\n                    <includeProvidedScope>true</includeProvidedScope>\n                    <includeRuntimeScope>true</includeRuntimeScope>\n                    <includeSystemScope>true</includeSystemScope>\n                    <includeTestScope>false</includeTestScope>\n                    <includeLicenseText>false</includeLicenseText>\n                    <outputReactorProjects>true</outputReactorProjects>\n                    <outputFormat>json</outputFormat>\n                    <externalReferences>\n                        <externalReference>\n                            <type>advisories</type>\n                            <url>https://github.com/DependencyTrack/dependency-track/security/advisories</url>\n                        </externalReference>\n                        <externalReference>\n                            <type>chat</type>\n                            <url>https://dependencytrack.org/slack</url>\n                        </externalReference>\n                        <externalReference>\n                            <type>documentation</type>\n                            <url>https://docs.dependencytrack.org/</url>\n                        </externalReference>\n                        <externalReference>\n                            <type>release-notes</type>\n                            <url>https://docs.dependencytrack.org/changelog/</url>\n                        </externalReference>\n                        <externalReference>\n                            <type>security-contact</type>\n                            <url>mailto:security@dependencytrack.org</url>\n                        </externalReference>\n                        <externalReference>\n                            <type>social</type>\n                            <url>https://www.linkedin.com/company/owasp-dependency-track</url>\n                        </externalReference>\n                        <externalReference>\n                            <type>social</type>\n                            <url>https://x.com/dependencytrack</url>\n                        </externalReference>\n                    </externalReferences>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>exec-maven-plugin</artifactId>\n                <version>3.5.0</version>\n                <executions>\n                    <execution>\n                        <id>merge-services-bom</id>\n                        <phase>prepare-package</phase>\n                        <goals>\n                            <goal>exec</goal>\n                        </goals>\n                        <configuration>\n                            <executable>${cyclonedx-cli.path}</executable>\n                            <arguments>\n                                <argument>merge</argument>\n                                <argument>--input-files</argument>\n                                <argument>${project.build.directory}/bom.json</argument>\n                                <argument>${project.basedir}/src/main/resources/services.bom.json</argument>\n                                <argument>--output-file</argument>\n                                <argument>${project.build.directory}/bom.json</argument>\n                            </arguments>\n                            <skip>${services.bom.merge.skip}</skip>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <artifactId>maven-antrun-plugin</artifactId>\n                <version>3.1.0</version>\n                <executions>\n                    <execution>\n                        <id>deploy-bom</id>\n                        <phase>prepare-package</phase>\n                        <configuration>\n                            <target>\n                                <copy file=\"${project.build.directory}/bom.json\"\n                                      tofile=\"${project.build.directory}/${project.artifactId}/.well-known/sbom\"/>\n                            </target>\n                        </configuration>\n                        <goals>\n                            <goal>run</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.eclipse.jetty.ee10</groupId>\n                <artifactId>jetty-ee10-maven-plugin</artifactId>\n                <version>${plugin.jetty.version}</version>\n                <configuration>\n                    <webApp>\n                        <!-- Disable classpath scanning. -->\n                        <containerIncludeJarPattern>^$</containerIncludeJarPattern>\n                        <webInfIncludeJarPattern>^$</webInfIncludeJarPattern>\n                    </webApp>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>clean-exclude-wars</id>\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <plugin>\n                            <groupId>org.apache.maven.plugins</groupId>\n                            <artifactId>maven-clean-plugin</artifactId>\n                            <version>3.4.0</version>\n                            <configuration>\n                                <excludeDefaultDirectories>true</excludeDefaultDirectories>\n                                <filesets>\n                                    <fileset>\n                                        <directory>target</directory>\n                                        <followSymlinks>false</followSymlinks>\n                                        <useDefaultExcludes>false</useDefaultExcludes>\n                                        <includes>\n                                            <include>*/</include>\n                                        </includes>\n                                        <excludes>\n                                            <exclude>dependency-track*.jar</exclude>\n                                        </excludes>\n                                    </fileset>\n                                </filesets>\n                            </configuration>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n            </build>\n        </profile>\n        <profile>\n            <id>embedded-jetty</id>\n            <activation>\n                <property>\n                    <name>env.ACTIVATE_EMBEDDED_JETTY</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <properties>\n                <war-embedded-finalname>${project.build.finalName}-apiserver</war-embedded-finalname>\n            </properties>\n        </profile>\n        <profile>\n            <id>h2-console</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.eclipse.jetty.ee10</groupId>\n                        <artifactId>jetty-ee10-maven-plugin</artifactId>\n                        <version>${plugin.jetty.version}</version>\n                        <configuration>\n                            <webApp>\n                                <!-- Disable classpath scanning. -->\n                                <containerIncludeJarPattern>^$</containerIncludeJarPattern>\n                                <webInfIncludeJarPattern>^$</webInfIncludeJarPattern>\n                                <overrideDescriptor>src/test/webapp/WEB-INF/h2-console-web.xml</overrideDescriptor>\n                            </webApp>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>bundle-ui</id>\n            <activation>\n                <property>\n                    <name>env.ACTIVATE_BUNDLE_UI</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <properties>\n                <war-embedded-finalname>${project.build.finalName}-bundled</war-embedded-finalname>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-antrun-plugin</artifactId>\n                        <version>3.1.0</version>\n                        <executions>\n                            <execution>\n                                <id>frontend-download</id>\n                                <phase>prepare-package</phase>\n                                <configuration>\n                                    <target>\n                                        <get src=\"https://github.com/DependencyTrack/frontend/releases/download/${frontend.version}/frontend-dist.zip\" dest=\"${project.build.directory}\" verbose=\"true\"/>\n                                    </target>\n                                </configuration>\n                                <goals>\n                                    <goal>run</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>frontend-extract</id>\n                                <phase>prepare-package</phase>\n                                <configuration>\n                                    <target>\n                                        <unzip src=\"${project.build.directory}/frontend-dist.zip\" dest=\"${project.build.directory}/frontend\">\n                                        </unzip>\n                                    </target>\n                                </configuration>\n                                <goals>\n                                    <goal>run</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>frontend-resource-deploy</id>\n                                <phase>prepare-package</phase>\n                                <configuration>\n                                    <target>\n                                        <copy todir=\"${project.build.directory}/${project.artifactId}\">\n                                            <fileset dir=\"${project.build.directory}/frontend/dist\">\n                                                <include name=\"**/*\"/>\n                                            </fileset>\n                                        </copy>\n                                    </target>\n                                </configuration>\n                                <goals>\n                                    <goal>run</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n</project>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}