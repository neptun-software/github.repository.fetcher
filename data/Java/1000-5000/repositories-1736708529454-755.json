{
  "metadata": {
    "timestamp": 1736708529454,
    "page": 755,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "katzer/cordova-plugin-local-notifications",
      "stars": 2570,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0166015625,
          "content": ".DS_Store\n.vscode"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 13.1845703125,
          "content": "# ChangeLog\n\n## Version 1.1.1-dev\n\n### Android\n- Improve documentation\n- `SCHEDULE_EXACT_ALARM` is not pre-configured anymore by this plugin to have more flexibility. If you want exact alarms, see [Android inexact and exact alarms](README.md#android-inexact-and-exact-alarms)\n- You can declare `USE_EXACT_ALARM` to set your app as a calendar or alarm clock app. See [Exact alarms: Define your app as a Calender or Alarm Clock app](README.md#exact-alarms-define-your-app-as-a-calender-or-alarm-clock-app)\n- Renamed property `vibrate` to [androidChannelEnableVibration](README.md#property-androidchannelenablevibration)\n- Image resources: Support `res://`, `www` and `shared://` for [attachments](README.md#property-attachments) and [attachments.personIcon](README.md#property-personicon)\n### iOS\n- Since iOS 14: Show a notification in the notification center when the app is in foreground, like on Android. Happens also if [iOSForeground](#property-iosforeground) is `false`.\n- Renamed internal plugin method `check` to `hasPermission` to make it consistent with `cordova.plugins.notification.local.hasPermission`\n\n## Version 1.1.0 (23.12.2024)\n\n- Improve documentation\n- Documentation of properties\n\n### Changes for Android\n- Handling [Android channels](README.md#android-notification-channels):\n    - New Methods: [createChannel](README.md#createchannel) and [deleteChannel](README.md#deletechannel)\n    - The [default channel](README.md#default-channel) is configurable\n- Changed default channel id from `default-channel-id` to `default_channel`\n- Bugfix: Make cancel/cancelAll/clear/clearAll work again. This was broken since Version 1.0.0 because of the change \"Use app name as a tag for the notify call [PR #1781](https://github.com/katzer/cordova-plugin-local-notifications/pull/1781)\". For e.g. notifications were still in the statusbar, when clearing a notification.\n- Bugfix: `java.lang.IllegalStateException: Maximum limit of concurrent alarms 500 reached`, when canceling notifications and schedule new notifications\n    - When canceling a notification, the saved data for the notification was removed from the app and also a posted notification from the statusbar, but the alarm itself, which would create the notification, not. This was due to a wrongly created intent for clearing the scheduled alarms.\n- Bugfix: Reschedule notifications, when app is updated\n    - Android clears all pending alarms, when an app is updated, this was not properly handled.\n- Bugfix: Remove wrongly used intent-filter `LOCKED_BOOT_COMPLETED`\n    - The intent-filter `LOCKED_BOOT_COMPLETED` is executed, when the device was booted, but not yet unlocked by the user (e.g. the device is looked by a pin). To use this feature, the device encrypted storage has to be used, which is accessible by `context.createDeviceProtectedStorageContext()`. This has first to be implemented and was not implemented.\n- React on `SCHEDULE_EXACT_ALARM_PERMISSION_STATE_CHANGED` when app is closed and not only in the background\n- Added [onlyAlertOnce](https://developer.android.com/reference/android/app/Notification.Builder#setOnlyAlertOnce(boolean)) option\n- Removed option `mediaSession` and the corresponding MediaStyle. This was not functional and also needed the extra Android library `android:media`.\n\n#### Changes in resource handling\n- Added resource uri [shared://](README.md#resource-pattern-shared), to set at runtime created resources for e.g. a [sound](README.md#property-sound), [androidLargeIcon](README.md#property-androidlargeicon), etc.\n- Added resource path [www](README.md#resource-pattern-www) to access www-files\n- Removed resource uris `http`, `https`. You can use for this the [shared](README.md#resource-pattern-shared) dirctory and a `shared:` uri.\n- Removed resource uri `file:///`. file uris should not be used in Android.\n- Removed resource uri `content:`. You can instead use a [shared://](README.md#resource-pattern-shared) uri.\n\n#### Code fixes and cleanup\n- General code clenaup\n- Removed Plugin dependency `cordova-plugin-badge` and `ShortcutBadger`. These were only used for Android. Android can handle the badging itself and does not need a 3rd party library. You can configure the behaviour by the [badgeNumber](README.md#property-badgenumber) property.\n- Use `FLAG_IMMUTABLE` on every Android version\n    - Before it was set since Android 12, now since Android 7, to make the code consistent between all Android versions.\n- Bugfix: Catch any exceptions when attempting to get option for a notification\n- Removed subfolder `notification` and correct package declaration `de.appplant.cordova.plugin.notification` to `de.appplant.cordova.plugin.localnotification`\n- Added `androidx.core:core` package version `1.12.0` for using `NotificationManagerCompat`\n    - The version is cofigurable by `ANDROIDX_CORE_VERSION`.\n    - Added `kotlin-bom` to fix duplicate classes errors.\n- Removed Android Support Library leftovers `com.android.support:support-v4` from `plugin.xml`\n    - This was overlooked, when switched to Android X.\n- Removed `android:media` Library: This was used for MediaSytle, which was removed.\n- Gradle: Removed deprecated repository `jcenter`. The appeareance of `jcenter` as a repository, produced the gradle warning `Deprecated Gradle features were used in this build, making it incompatible with Gradle 9.0.`\n- Always set the receiver class for alarms to `TriggerReceiver.class`, so it's easier to cancel alarms.\n\n### Changes for iOS\n- Plugin compatibility for upcoming `cordova-ios` version `8.0.0`\n- `package.json`: Correct incorrect `cordova-ios` dependency\n    - Version `10.0.0` was referenced, but the maximum available version currently is `7.1.1`\n    - Correct version also for old plugin version `0.9.0-beta.3`\n- New method [iOSClearBadge](README.md#iosclearbadge) for clearing the badge on iOS.\n- Added resource path [www](README.md#resource-pattern-www) to access www-files\n\n### Changed properties\nSome properties were changed. See [Changes since version `1.1.0`](README.md#changes-since-version-110)\n\n### Other changes\n- Renamed plugin action `request` to `requestPermission`\n\n## Version 1.0.0 (17.08.2024)\nThis Release contains mainly changes and fixes for the Android platform.\n\n- Make Plugin compatible with Android 12-14\n- Support Android X\n- Minimum supported Android version is 7.0 (SDK 24). The target SDK is increased to 34 (Android 14).\n- Remove obsolete Windows platform\n- Fix crash with target Android 12 (SDK 31) which occured because of a pendingIntent change and not using `PendingIntent.FLAG_IMMUTABLE`\n- Fix click notifications in Android 12\n- Declare `SCHEDULE_EXACT_ALARM` permission, which is necessary for scheduling exact alarms since Android 12 (API 31). It is only pre-granted on Android 12. On Android 13 and newer, the user must grant the permission in the \"Alarms & Reminders\"-setting, if you still want exact alarms. If the permission is not granted, notifications will be scheduled inexact, which is still ok for the normal case.\n- Request `POST_NOTIFICATIONS` permission in Android 13 (API 33)\n- New methods for exact alarms:\n    - [canScheduleExactAlarms(successCallback, scope)](README.md#canscheduleexactalarms)\n    - [openAlarmSettings(successCallback, scope)](README.md#openalarmsettings)\n    - [openNotificationSettings(successCallback, scope)](README.md#opennotificationsettings)\n- Changes for MessagingStyle:\n    - Support sender image by new option `personIcon`\n    - Initialize the sender as empty String instead of \"Me\" ([PR #1781](https://github.com/katzer/cordova-plugin-local-notifications/pull/1781))\n    - Reuse existing messages when using MessagingStyle ([PR #1781](https://github.com/katzer/cordova-plugin-local-notifications/pull/1781)). With this fix, users won't have to cache the messages in their Javascript code, the plugin will automatically check if there is an active notification with that ID and append the new messages to the existing ones. This will only be done when using MessagingStyle, which will be used, if the option `text` is filled with an `Array` instead of a `String`.\n    - Added count of messages in a notification, wenn using Array for `text`. ([PR #1781](https://github.com/katzer/cordova-plugin-local-notifications/pull/1781))\n    - Added option `titleCount` to modify the count text of messages in a notification. The placeholder `%n%` can be used for inserting the messages count. If nothing is set, the text `(%n%)` will be used.\n- Use app name as a tag for the notify call ([PR #1781](https://github.com/katzer/cordova-plugin-local-notifications/pull/1781))\n- Use correct authority name ([PR #1853](https://github.com/katzer/cordova-plugin-local-notifications/pull/1853))\n- Replace `compile()` with `implementation()` in `localnotification.gradle`, because starting on Gradle 7.0 the compile-method is removed and will produce errors, like `Could not find method compile() for arguments...`\n- Raise minimum Version for Cordova dependencies\n    - Cordova to 12\n    - cordova-android to 13\n\nA lot of changes were adopted from [moodlemobile](https://github.com/moodlemobile/cordova-plugin-local-notification). Thanks for the work!\n\n## Version 0.9.0-beta.3 (13.02.2018)\n\n## Version 0.9.0-beta.2 (11.01.2018)\n\n## Version 0.9.0-beta.1 (11.11.2017)\n\n## Version 0.9.0-beta.0 (31.10.2017)\n\n## Version 0.8.5 (22.05.2017)\n- iOS 10\n\n## Version 0.8.4 (04.01.2016)\n- Bug fixes\n - SyntaxError: missing ) after argument list\n\n## Version 0.8.3 (03.01.2016)\n- Platform enhancements\n - Support for the `Crosswalk Engine`\n - Support for `cordova-ios@4` and the `WKWebView Engine`\n - Support for `cordova-windows@4` and `Windows 10` without using hooks\n- Enhancements\n - New `color` attribute for Android (Thanks to @Eusebius1920)\n - New `quarter` intervall for iOS & Android\n - `smallIcon` is optional (Android)\n - `update` checks for permission like _schedule_\n - Decreased time-frame for trigger event (iOS)\n - Force `every:` to be a string on iOS\n- Bug fixes\n - Fixed #634 option to skip permission check\n - Fixed #588 crash when basename & extension can't be extracted (Android)\n - Fixed #732 loop between update and trigger (Android)\n - Fixed #710 crash due to >500 notifications (Android)\n - Fixed #682 crash while resuming app from notification (Android 6)\n - Fixed #612 cannot update icon or sound (Android)\n - Fixed crashing get(ID) if notification doesn't exist\n - Fixed #569 getScheduled returns two items per notification\n - Fixed #700 notifications appears on bootup\n\n## Version 0.8.2 (08.11.2015)\n- Submitted to npm\n- Initial support for the `windows` platform\n- Re-add autoCancel option on Android\n- Warn about unknown properties\n- Fix crash on iOS 9\n- Fixed webView-Problems with cordova-android 4.0\n- Fix get* with single id\n- Fix issue when passing data in milliseconds\n- Update device plugin id\n- Several other fixes\n\n## Version 0.8.1 (08.03.2015)\n\n- Fix incompatibility with cordova version 3.5-3.0\n- Fire `clear` instead of `cancel` event when clicked on repeating notifications\n- Do not fire `clear` or `cancel` event when clicked on persistent notifications\n\n## Version 0.8.0 (05.03.2015)\n\n- Support for iOS 8, Android 2 (SDK >= 7) and Android 5\n - Windows Phone 8.1 will be added soon\n- New interfaces to ask for / register permissions required to schedule local notifications\n - `hasPermission()` and `registerPermission()`\n - _schedule()_ will register the permission automatically and schedule the notification if granted.\n- New interface to update already scheduled|triggered local notifications\n - `update()`\n- New interfaces to clear the notification center\n - `clear()` and `clearAll()`\n- New interfaces to query for local notifications, their properties, their IDs and their existence depend on their state\n - `isPresent()`, `isScheduled()`, `isTriggered()`\n - `getIds()`, `getAllIds()`, `getScheduledIds()`, `getTriggeredIds()`\n - `get()`, `getAll()`, `getScheduled()`, `getTriggered()`\n- Schedule multiple local notifications at once\n - `schedule( [{...},{...}] )`\n- Update multiple local notifications at once\n - `update( [{...},{...}] )`\n- Clear multiple local notifications at once\n - `clear( [1, 2] )`\n- Cancel multiple local notifications at once\n - `cancel( [1, 2] )`\n- New URI format to specify sound and image resources\n - `http(s):` for remote resources _(Android)_\n - `file:` for local resources relative to the _www_ folder\n - `res:` for native resources\n- New events\n - `schedule`, `update`, `clear`, `clearall` and `cancelall`\n- Enhanced event informations\n - Listener will get called with the local notification object instead of only the ID\n- Multiple listener for one event\n - `on(event, callback, scope)`\n- Unregister event listener\n - `un(event, callback)`\n- New Android specific properties\n - `led` properties\n - `sound` and `image` accepts remote resources\n- Callback function and scope for all interface methods\n - `schedule( notification, callback, scope )`\n- Renamed `add()` to `schedule()`\n- `autoCancel` property has been removed\n - Use `ongoing: true` for persistent local notifications on Android\n- Renamed repeat intervals\n - `second`, `minute`, `hour`, `day`, `week`, `month` and `year`\n- Renamed some local notification properties\n - `date`, `json`, `message` and `repeat`\n - Scheduling local notifications with the deprecated properties is still possible\n- [Kitchen Sink sample app](https://github.com/katzer/cordova-plugin-local-notifications/tree/example)\n- [Wiki](https://github.com/katzer/cordova-plugin-local-notifications/wiki)\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.716796875,
          "content": "**WARNING: IF YOU IGNORE THIS TEMPLATE, WE'LL IGNORE YOUR ISSUE. YOU MUST FILL THIS IN!**\n\nProvide a general summary of the issue.\n\n## Your Environment\n\n* Plugin version:\n* Platform:\n* OS version:\n* Device manufacturer / model:\n* Cordova version (```cordova -v```):\n* Cordova platform version (```cordova platform ls```):\n* Plugin config\n* Ionic Version (if using Ionic)\n\n## Expected Behavior\n\n_Tell us what should happen_\n\n## Actual Behavior\n\n_Tell us what happens instead_\n\n## Steps to Reproduce\n\n_Reproduce this issue; include code to reproduce, if relevant_\n\n  1. ...\n  2. ...\n  3. ...\n  4. ....\n\n## Context\n\n_What were you trying to do?_\n\n## Debug logs\n\n_Include iOS / Android logs_\n\n  * ios XCode logs\n  * Android: $ adb logcat\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0771484375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2013 appPlant GmbH\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 71.7685546875,
          "content": "<p align=\"center\">\n    <img src=\"images/logo.png\">\n</p>\n\n<p align=\"center\">\n    <a href=\"https://www.npmjs.com/package/cordova-plugin-local-notification\">\n        <img src=\"https://badge.fury.io/js/cordova-plugin-local-notification.svg\" alt=\"npm version\" />\n    </a>\n    <a href=\"https://opensource.org/licenses/Apache-2.0\">\n        <img src=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg\" alt=\"License\" />\n    </a>\n</p>\n\n<br>\n\n> A notification is a message you display to the user outside of your app's normal UI. When you tell the system to issue a notification, it first appears as an icon in the notification area. To see the details of the notification, the user opens the notification drawer. Both the notification area and the notification drawer are system-controlled areas that the user can view at any time.\n\n<br>\n\n<img align=\"right\" width=\"40%\" src=\"https://developer.android.com/static/images/ui/notifications/notification-drawer_2x.png\">\n\n\n### Notification components\n\n- Header area\n- Content area\n- Action area\n\n### How notifications may be noticed\n\n- Showing a status bar icon\n- Appearing on the lock screen\n- Playing a sound or vibrating\n- Peeking onto the current screen\n- Blinking the device's LED\n\n### Supported platforms\n\n- Android 7.0+ (cordova-android 13.0.0)\n- iOS 11.3+ (cordova-ios 7.0.0)\n\n### Installation\n\nThe plugin can be installed via [Cordova-CLI][CLI] and is publicly available on [NPM][npm].\n\n#### NPM\n\nExecute from the projects root folder:\n\n    $ cordova plugin add cordova-plugin-local-notification\n\nInstall a specific version:\n\n    $ cordova plugin add cordova-plugin-local-notification@VERSION\n\n#### Git\nInstall the latest head version:\n\n    $ cordova plugin add https://github.com/katzer/cordova-plugin-local-notifications.git\n\nInstall from a branch:\n\n    $ cordova plugin add https://github.com/katzer/cordova-plugin-local-notifications.git#branch\n\nInstall from a tag:\n\n    $ cordova plugin add https://github.com/katzer/cordova-plugin-local-notifications.git#v1.0.0\n\nInstall from a specific commit:\n\n    $ cordova plugin add https://github.com/katzer/cordova-plugin-local-notifications.git#5e4f131\n\n#### Local\nInstall from local source:\n\n    $ cordova plugin add <path> --nofetch --nosave --link\n\n## Upgrade Notice\n\nIn Version 1.1.0 some properties were changed. Please see [Changes since Version `1.1.0`](#changes-since-version-110)\n\n## Basics\n\nThe plugin creates the object `cordova.plugins.notification.local` and is accessible after *deviceready* has been fired.\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'My first notification',\n    text: 'Thats pretty easy...'\n});\n```\n\n<p align=\"center\">\n    <img src=\"images/ios-basic.png\">\n</p>\n\nThe plugin allows to schedule multiple notifications at once.\n\n```js\ncordova.plugins.notification.local.schedule([\n    { id: 1, title: 'My first notification' },\n    { id: 2, title: 'My first notification' }\n]);\n```\n\n## Notification Limits\nOn each platform are limits about how much notifications can be scheduled:\n\n- iOS: 64\n- Android: 500\n\nRepeating notifications count as 1 notification, except if you schedule with the [trigger count](#repeating) option on Android.\n\n## Properties\nA notification does have a set of configurable properties. See [all properties](#properties-1).\n\n## Permissions\nEach platform may require the user to grant permissions first before the app is allowed to schedule notifications. This is done automatically, when scheduling a notification. If you want do it manually, you can use [requestPermission](#requestpermission). Please keep in mind, that the user can still change the permission later in the system. If you want to check, if you have still the permission to post notifications, use [hasPermission](#haspermission).\n\n|       |       |\n| :---- | :---- |\n| <img width=\"240\" src=\"images/ios-request-permission.png\"><p align=\"center\">iOS Example</p> | <img width=\"240\" src=\"images/android-request-permission.png\"><p align=\"center\">Android example</p> |\n\n## Android specials\n\n### Notification channels\nSince Android 8 notification channels must be created to post noitifications. A [default channel](#android-default-channel) will be created for you, if you do not create one. You can also create your own channel by [createChannel](#createchannel) or when [scheduling a notification](#create-channel-by-posting-a-notification). For deleting a channel use [deleteChannel](#deletechannel).\n\n### Inexact alarms since Android 12\nSince Android 12 alarms will be scheduled inexact by default. On Android 12 (API level 31) and higher, the system invokes the alarm within one hour of the supplied trigger time, unless any battery-saving restrictions are in effect such as battery saver or Doze. Most apps can schedule tasks and events using inexact alarms to complete several common use cases. If your app's core functionality depends on a precisely-timed alarm — such as for an alarm clock app or a calendar app — then it's OK to use an exact alarm instead.\n\nSee [Schedule exact alarms](#android-schedule-exact-alarms), if you want use exact alarms.\n\nSee [Android documentation](https://developer.android.com/develop/background-work/services/alarms/schedule) for more information.\n\n### Alarm rescheduling\n\n#### App Update\nAndroid removes all alarms when the app is updated. The plugin reschedules all alarms by a [BroadcastReceiver](https://developer.android.com/develop/background-work/background-tasks/broadcasts) listening to [ACTION_MY_PACKAGE_REPLACED](https://developer.android.com/reference/android/content/Intent#ACTION_MY_PACKAGE_REPLACED).\n\n#### Device reboot\nAndroid removes all alarms when the device reboots. The plugin reschedules all alarms by a [BroadcastReceiver](https://developer.android.com/develop/background-work/background-tasks/broadcasts) listening to [ACTION_BOOT_COMPLETED](https://developer.android.com/reference/android/content/Intent#ACTION_BOOT_COMPLETED), but only after the device has been unlocked.\n\n#### User grants exact alarms\nIf you use [SCHEDULE_EXACT_ALARM](#exact-alarms-user-grants-permission) for scheduling exact alarms and the user permits the permission in the \"Alarms & Reminders\", inexact alarms will be rescheduled as exact alarms. This is done by a [BroadcastReceiver](https://developer.android.com/develop/background-work/background-tasks/broadcasts) listening to [ACTION_SCHEDULE_EXACT_ALARM_PERMISSION_STATE_CHANGED](https://developer.android.com/reference/android/app/AlarmManager#ACTION_SCHEDULE_EXACT_ALARM_PERMISSION_STATE_CHANGED). This action will not be called if the user revokes the permission. All exact alarms will be canceld then.\n\n[](README.md#android-15-alarms-get-canceled-on-force-stop)\n#### Android 15: Alarms get canceled on `Force stop`\nSince Android 15 all pending alarms will get canceled if the user force stops an app, this is a change by Google, see https://developer.android.com/about/versions/15/behavior-changes-all#enhanced-stop-states. The alarms will be re-registered, if the user starts the app again. If the user clears the app from the app stack the alarms will not get canceled.\n\nKeep in mind, that force stopping is only known by advised users and if they do it, they have a reason to do this and they should be aware, that the app will no longer function correctly as the System also states when clicking on `Force stop` by showing an alert with the message `If you force stop an app, it may misbehave.`\n\n## Actions\n\nThe plugin knows two types of actions: _button_ and _input_.\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'The big survey',\n    text: 'Are you a fan of RB Leipzig?',\n    attachments: ['www/img/rb-leipzig.jpg'],\n    actions: [\n        { id: 'yes', title: 'Yes' },\n        { id: 'no',  title: 'No' }\n    ]\n});\n```\n\n<p align=\"center\">\n    <img width=\"31%\" src=\"images/android-actions.png\">\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    <img width=\"31%\" src=\"images/ios-actions.png\">\n</p>\n\nIcons on action buttons are not displayed anymore since Android 7, [see documentation](https://developer.android.com/reference/android/app/Notification.Action.Builder#Builder(int,%20java.lang.CharSequence,%20android.app.PendingIntent))\n\n### Input\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'Justin Rhyss',\n    text: 'Do you want to go see a movie tonight?',\n    actions: [{\n        id: 'reply',\n        type: 'input',\n        title: 'Reply',\n        emptyText: 'Type message',\n    }, ... ]\n});\n```\n\n<p align=\"center\">\n    <img src=\"images/android-reply.png\">\n</p>\n\nIt is recommended to pre-define action groups rather then specifying them with each new notification of the same type.\n\n\n```js\ncordova.plugins.notification.local.addActions('yes-no', [\n    { id: 'yes', title: 'Yes' },\n    { id: 'no',  title: 'No'  }\n]);\n```\n\nOnce you have defined an action group, you can reference it when scheduling notifications:\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'Justin Rhyss',\n    text: 'Do you want to go see a movie tonight?',\n    actions: 'yes-no'\n});\n```\n\n### Action properties\n\nActions do have a set of configurable properties. Not all of them are supported across all platforms.\n\n| Property     | Type         | Android | iOS |\n| :----------- | :----------- | :------ | :-- |\n| id           | button+input | x       | x   |\n| title        | button+input | x       | x   |\n| launch       | button+input | x       | x   |\n| ui           | button+input |         | x   |\n| needsAuth    | button+input |         | x   |\n| icon         | button+input | x       |     |\n| emptyText    | input        | x       | x   |\n| submitTitle  | input        |         | x   |\n| editable     | input        | x       |     |\n| choices      | input        | x       |     |\n| defaultValue | input        |         |     |\n\n\n## Triggers\n\nNotifications may trigger immediately or depend on calendar or location.\n\nTo trigger at a fix date:\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'Design team meeting',\n    text: '3:00 - 4:00 PM',\n    trigger: { at: new Date(2017, 10, 27, 15) }\n});\n```\n\nOr relative from now:\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'Design team meeting',\n    trigger: { in: 1, unit: 'hour' }\n});\n```\n\n### Repeating\n\nRepeat relative from now:\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'Design team meeting',\n    trigger: { every: 'day', count: 5 }\n});\n```\n\nOr trigger every time the date matches:\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'Happy Birthday!!!',\n    trigger: { every: { month: 10, day: 27, hour: 9, minute: 0 } }\n});\n```\n\n### Location based\n\nTo trigger when the user enters a region:\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'Welcome to our office',\n    trigger: {\n        type: 'location',\n        center: [x, y],\n        radius: 15,\n        notifyOnEntry: true\n    }\n});\n```\n\n### Trigger properties\n\nThe properties depend on the trigger type. Not all of them are supported across all platforms.\n\n| Type         | Property      | Type    | Value            | Android | iOS |\n| :----------- | :------------ | :------ | :--------------- | :------ | :-- |\n| Fix          |\n|              | at            | Date    |                  | x       | x   |\n| Timespan     |\n|              | in            | Int     |                  | x       | x   |\n|              | unit          | String  | `second`         | x       | x   |\n|              | unit          | String  | `minute`         | x       | x   |\n|              | unit          | String  | `hour`           | x       | x   |\n|              | unit          | String  | `day`            | x       | x   |\n|              | unit          | String  | `week`           | x       | x   |\n|              | unit          | String  | `month`          | x       | x   |\n|              | unit          | String  | `quarter`        | x       | x   |\n|              | unit          | String  | `year`           | x       | x   |\n| Repeat       |\n|              | count         | Int     |                  | x       |     |\n|              | every         | String  | `minute`         | x       | x   |\n|              | every         | String  | `hour`           | x       | x   |\n|              | every         | String  | `day`            | x       | x   |\n|              | every         | String  | `week`           | x       | x   |\n|              | every         | String  | `month`          | x       | x   |\n|              | every         | String  | `quarter`        | x       |     |\n|              | every         | String  | `year`           | x       | x   |\n|              | before        | Date    |                  | x       |     |\n|              | firstAt       | Date    |                  | x       |     |\n| Match        |\n|              | count         | Int     |                  | x       |     |\n|              | every         | Object  | `minute`         | x       | x   |\n|              | every         | Object  | `hour`           | x       | x   |\n|              | every         | Object  | `day`            | x       | x   |\n|              | every         | Object  | `weekday`        | x       | x   |\n|              | every         | Object  | `weekdayOrdinal` |         | x   |\n|              | every         | Object  | `week`           |         | x   |\n|              | every         | Object  | `weekOfMonth`    | x       | x   |\n|              | every         | Object  | `month`          | x       | x   |\n|              | every         | Object  | `quarter`        |         | x   |\n|              | every         | Object  | `year`           | x       | x   |\n|              | before        | Date    |                  | x       |     |\n|              | after         | Date    |                  | x       |     |\n| Location     |\n|              | center        | Array   | `[lat, long]`    |         | x   |\n|              | radius        | Int     |                  |         | x   |\n|              | notifyOnEntry | Boolean |                  |         | x   |\n|              | notifyOnExit  | Boolean |                  |         | x   |\n|              | single        | Boolean |                  |         | x   |\n\n## Progress\n<img src=\"images/android-icon.svg\" width=\"16\"> Android only\n\nNotifications can include an animated progress indicator that shows users the status of an ongoing operation.\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'Sync in progress',\n    text: 'Copied 2 of 10 files',\n    androidProgressBar: {\n        value: 20, // Default 0\n        maxValue: 100, // Default 100\n        indeterminate: false // Default false\n    }\n});\n```\n\n<p align=\"center\">\n    <img src=\"images/android-progress.png\">\n</p>\n\nCalls [NotificationCompat.Builder#setProgress(int,int,boolean)](https://developer.android.com/reference/androidx/core/app/NotificationCompat.Builder#setProgress(int,int,boolean))\n\n### Indeterminate Progress\n\nUse indeterminate mode for the progress bar when you do not know how long an operation will take. It shows a cyclic animation without a specific amount of progress indicated.\n\nSee [ProgressBar#indeterminate-progress](https://developer.android.com/reference/android/widget/ProgressBar.html#indeterminate-progress)\n\n### Determinate Progress\n\nUse determinate mode for the progress bar when you want to show that a specific quantity of progress has occurred. For example, the percent remaining of a file being retrieved, the amount records in a batch written to database, or the percent remaining of an audio file that is playing.\n\nSee [ProgressBar#determinate-progress](https://developer.android.com/reference/android/widget/ProgressBar.html#determinate-progress)\n\n## Patterns\n<img src=\"images/android-icon.svg\" width=\"16\"> Android only\n\nSplit the text by line breaks if the message comes from a single person and just too long to show in a single line.\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'The Big Meeting',\n    text: '4:15 - 5:15 PM\\nBig Conference Room',\n    androidSmallIcon: 'res://ic_menu_my_calendar',\n    androidLargeIcon: 'res://large_icon'\n});\n```\n\n<p align=\"center\">\n    <img src=\"images/android-inbox.png\">\n</p>\n\n## Summarizing\n<img src=\"images/android-icon.svg\" width=\"16\"> Android only\n\nInstead of displaying multiple notifications, you can create one notification that summarizes them all.\n\n```js\ncordova.plugins.notification.local.schedule({\n    id: 15,\n    title: 'Chat with Irish',\n    androidLargeIcon: 'res://large_icon',\n    androidMessages: [\n        { person: 'Me', message: 'I miss you' },\n        { person: 'Irish', message: 'I miss you more!' },\n        { person: 'Me', message: 'I always miss you more by 10%' }\n    ]\n});\n```\n\n<p align=\"center\">\n    <img src=\"images/android-chat.png\">\n</p>\n\nTo add a new message to the existing chat:\n\n```js\ncordova.plugins.notification.local.update({\n    id: 15,\n    androidMessages: [{ person: 'Irish', message: 'Bye bye' }]\n});\n```\n\nFor displaying the messages, [NotificationCompat.MessagingStyle](https://developer.android.com/reference/androidx/core/app/NotificationCompat.MessagingStyle) will be used.\n\n### Properties for `androidMessages`\n```javascript\nandroidMessags: [\n    {\n        message: \"The message\", // Default is `null`\n        date: 1234567890, // Timestamp in milliseconds for e.g. by Date.getTime(), default is System.currentTimeMillis()\n        person: \"Michael\", // Default is `null`\n        personIcon: \"www/personIcon.png\" // Default is `null`\n    }\n]\n```\n\n#### Property `personIcon`\nWill be drawn as a circle icon.\n\nPossible values:\n- `res://personIcon.png` - Resource from the app bundle, see [documentation](#resource-pattern-res)\n- `www/personIcon.png` - Resource from the `www` folder, see [documentation](#resource-pattern-www)\n- `shared://personIcon.png` - Resource from the shared folder, see [documentation](#resource-pattern-shared)\n\n## Grouping\n<img src=\"images/android-icon.svg\" width=\"16\"> Android only\n\nYour app can present multiple notifications as a single group:\n\n- A parent notification displays a summary of its child notifications.\n- The child notifications are presented without duplicate header information.\n\n```js\ncordova.plugins.notification.local.schedule([\n    { id: 0, title: 'Design team meeting', ... },\n    { id: 1, androidSummary: 'me@gmail.com', androidGroup: 'email', androidGroupSummary: true },\n    { id: 2, title: 'Please take all my money', ... androidGroup: 'email' },\n    { id: 3, title: 'A question regarding this plugin', ... androidGroup: 'email' },\n    { id: 4, title: 'Wellcome back home', ... androidGroup: 'email' }\n]);\n```\n\n<p align=\"center\">\n    <img src=\"images/android-stack.png\">\n</p>\n\n## Android channels\n\n### Default channel\nThe following settings will be used for the default Android channel.\n\n```javascript\n{\n    androidChannelId: \"default_channel\",\n    androidChannelName: \"Default channel\",\n    androidChannelImportance: \"IMPORTANCE_DEFAULT\"\n}\n```\n\nYou can change the defaults by calling [setDefaults](#setdefaults) or you can overwrite them, when scheduling a notification or [creating a channel](#createchannel).\n\n### Create channel by posting a notification\nA channel can be created directly when posting a notification:\n\n```javascript\ncordova.plugins.notification.local.schedule({\n    id: 1,\n    title: 'My first notification',\n    androidChannelId: \"my_channel_01\",\n    androidChannelName: \"My Channel Name\"\n});\n```\n\nIf you omit some channel properties the [default channel properties](#default-channel) will be used.\n\n## Android: Schedule exact alarms\nSince Android 12 notifications will be scheduled inexact by default. On Android 12 (API level 31) and higher, the system invokes the alarm within one hour of the supplied trigger time, unless any battery-saving restrictions are in effect such as battery saver or Doze. Most apps can schedule tasks and events using inexact alarms to complete several common use cases. If your app's core functionality depends on a precisely-timed alarm — such as for an alarm clock app or a calendar app — then it's OK to use an exact alarm instead.\n\nSee [Android documentation](https://developer.android.com/develop/background-work/services/alarms/schedule) for more information.\n\nYou have two options, to schedule exact alarms.\n\n### Exact alarms: User grants permission\nYou must add the [SCHEDULE_EXACT_ALARM](https://developer.android.com/reference/android/Manifest.permission#SCHEDULE_EXACT_ALARM) permission to `AndroidManifest.xml`. You can do this with your `config.xml`.\n\nFirst add the Android xml namespace to your `widget` tag:\n\n```xml\n<widget ... xmlns:android=\"http://schemas.android.com/apk/res/android\">\n````\n\nThen add the following [config-file](https://cordova.apache.org/docs/en/12.x/plugin_ref/spec.html#config-file) declaration to your `config.xml`:\n\n```xml\n<config-file target=\"AndroidManifest.xml\" parent=\"/manifest\">\n    <uses-permission android:name=\"android.permission.SCHEDULE_EXACT_ALARM\" />\n</config-file>\n```\n\nThis tells Android that your app wants to have the permission to schedule exact alarms.\n\n|      |      |\n| :--- | :--- |\n| <img width=\"320\" src=\"images/android-alarms-and-reminders-in-app-settings.png\" /> | After declaring `SCHEDULE_EXACT_ALARM` as permission, your app have a new entry in the app settings called `Alarms & reminders`, where the user can enable/disable exact alarms. |\n| <img width=\"320\" src=\"images/android-alarms-and-reminders-setting.png\" /> | Clicking on this entry will open the setting to enable/disable exact alarms. This screen will also been shown if you call [openAlarmSettings](#openalarmsettings) |\n\nOn Android 12 `SCHEDULE_EXACT_ALARM` is pre-granted. On Android 13 and newer the user has to permit this in the \"Alarms & Reminders\" setting, which you can open by [openAlarmSettings](#openalarmsettings). You can use the [resume](https://cordova.apache.org/docs/en/12.x/cordova/events/events.html#resume) event of Cordova to check if exact alarms are permitted by [canScheduleExactAlarms](#canscheduleexactalarms). If you have already posted inexact alarms, before the user granted the exact alarm permission, inexact alarms will be automatically rescheduled by this plugin as exact alarms. The downside is, when the user revokes the exact alarm permission, your app will be killed and all exact alarms will be canceled without rescheduling them as inexact alarms. You have to reschedule them the next time the user starts your app. You can read everything about it in the [Android documentation](https://developer.android.com/about/versions/14/changes/schedule-exact-alarms).\n\n### Exact alarms: Define your app as a Calender or Alarm Clock app\nThis is a very special case you should think about. When you declare your app as a calendar or alarm clock app, the app have to fullfill the requirements and must be approved by Google in the Play Store. Google could remove the app from the store if the app is found to be misusing the permission.\n\nCalendar or alarm clock apps need to send calendar reminders, wake-up alarms, or alerts when the app is no longer running. These apps can request the [USE_EXACT_ALARM](https://developer.android.com/reference/android/Manifest.permission#USE_EXACT_ALARM) permission. The `USE_EXACT_ALARM` permission will be granted on install, and apps holding this permission will be able to schedule exact alarms just like apps with the `SCHEDULE_EXACT_ALARM` permission. The advantage is, that this permission can't be revoked by the user.\n\nTo declare the `USE_EXACT_ALARM` permission in the `AndroidManifest.xml`, you can do this with your `config.xml`.\n\nFirst add the Android xml namespace to your `widget` tag:\n\n```xml\n<widget ... xmlns:android=\"http://schemas.android.com/apk/res/android\">\n````\n\nThen add the following [config-file](https://cordova.apache.org/docs/en/12.x/plugin_ref/spec.html#config-file) declaration to your `config.xml`:\n\n```xml\n<config-file target=\"AndroidManifest.xml\" parent=\"/manifest\">\n    <uses-permission android:name=\"android.permission.SCHEDULE_EXACT_ALARM\" android:maxSdkVersion=\"32\" />\n    <uses-permission android:name=\"android.permission.USE_EXACT_ALARM\" />\n</config-file>\n```\n\nThe permission `SCHEDULE_EXACT_ALARM` must be decared to be backward compatible with Android 12. The is why the permission is limited by `android:maxSdkVersion=\"32\"`, see [StackOverflow](https://stackoverflow.com/questions/73972021/android-permission-schedule-exact-alarm-required-with-use-exact-alarm-for-alarm) or the documentation of [USE_EXACT_ALARM](https://developer.android.com/reference/android/Manifest.permission#USE_EXACT_ALARM).\n\nThe permission `USE_EXACT_ALARM` exists since Android 13 and will be used from then on.\n\n## Events\n\nThe following events are supported: `add`, `trigger`, `click`, `clear`, `cancel`, `update`, `clearall` and `cancelall`.\n\n```js\ncordova.plugins.notification.local.on(event, callback, scope);\n```\n\nTo unsubscribe from events:\n\n```js\ncordova.plugins.notification.local.un(event, callback, scope);\n```\n\n__Note:__ You have to provide the exact same callback to `cordova.plugins.notification.local.un` as you provided to `cordova.plugins.notification.local.on` to make unsubscribing work.\nHence you should define your callback as a separate function, not inline. If you want to use `this` inside of your callback, you also have to provide `this` as `scope` to `cordova.plugins.notification.local.on`.\n\n### Custom\n\nThe plugin also fires events specified by actions.\n\n```js\ncordova.plugins.notification.local.schedule({\n    title: 'Do you want to go see a movie tonight?',\n    actions: [{ id: 'yes', title: 'Yes' }]\n});\n```\n\nThe name of the event is the id of the action.\n\n```js\ncordova.plugins.notification.local.on('yes', function (notification, eopts) { ... });\n```\n\n### Fire manually\n\nNot an official interface, however its possible to manually fire events.\n\n```js\ncordova.plugins.notification.local.core.fireEvent(event, args);\n```\n\n## Launch Details\n\nCheck the `launchDetails` to find out if the app was launched by clicking on a notification.\n\n```js\ndocument.addEventListener('deviceready', function () {\n    console.log(cordova.plugins.notification.local.launchDetails);\n}, false);\n```\n\nIt might be possible that the underlying framework like __Ionic__ is not compatible with the launch process defined by cordova. With the result that the plugin fires the click event on app start before the app is able to listen for the events.\n\nTherefore its possible to fire the queued events manually by defining a global variable.\n\n```js\nwindow.skipLocalNotificationReady = true\n```\n\nOnce the app and Ionic is ready, you can fire the queued events manually.\n\n```js\ncordova.plugins.notification.local.fireQueuedEvents();\n```\n\n## Methods\n\nAll methods work asynchronous and accept callback methods.\n\nNote: This list has still to be documented.\n\n\n| Method                         | Android | iOS | Comment                   |\n| :------------------------------| :-------| :-- | :------------------------ |\n| addActions                     |         |     |                           |\n| cancel                         | x       | x   |                           |\n| cancelAll                      | x       | x   |                           |\n| canScheduleExactAlarms         | x       | -   | Android only. Checks if exact alarms are permitted. Since Android 13 inexact alarms are permitted by default. |\n| clear                          | x       | x   | On Android, it clears a already posted notification from the statusbar. |\n| clearAll                       | x       | x   |                           |\n| createChannel                  | x       | -   | Android only. Creates a channel for Android to post notifications on. |\n| deleteChannel                  | x       | -   | Android only. Delete a channel by an id. See [Documentation](#delete-a-channel)|\n| fireQueuedEvents               | x       | x   | Fire queued events once the device is ready and all listeners are registered. This is done automatically, when `deviceready` is fired. Calls the Plugin with a `ready` action. |\n| get                            |         |     |                           |\n| getAll                         |         |     |                           |\n| getDefaults                    | x       | x   | Gets the default for notification properties. See [getDefaults](#getdefaults) |\n| getIds                         |         |     |                           |\n| getScheduled                   |         |     |                           |\n| getScheduledIds                |         |     |                           |\n| getTriggered                   |         |     |                           |\n| getTriggeredIds                |         |     |                           |\n| getType                        |         |     |                           |\n| hasActions                     |         |     |                           |\n| [hasPermission](#hasPermission) | x       | x   | Checks if the app has permission to post notifications. |\n| [iOSClearBadge](#iosclearbadge) | -       | x   | Clears the badge          |\n| isPresent                      |         |     |                           |\n| isScheduled                    |         |     |                           |\n| isTriggered                    |         |     |                           |\n| on                             |         |     |                           |\n| openAlarmSettings              | x       | -   | Android only. Supported since Android 12. Opens the \"Alarms & Reminders\"-settings, where the user can manually enable exact alarms. |\n| openNotificationSettings       | x       | (x) | Opens the notifications settings since Android 8. On iOS it opens the app settings. |\n| removeActions                  |         |     |                           |\n| [requestPermission](#requestpermission) | x       | x   | Request permission to post notifications. This is called automatically when scheduling notifications. |\n| schedule                       |         |     |                           |\n| setDefaults                    | x       | x   | Overwrites default values of notifications. Gets the default for notification properties. See [setDefaults](#setdefaults) |\n| un                             |         |     |                           |\n| update                         |         |     |                           |\n\n### canScheduleExactAlarms\n<img src=\"images/android-icon.svg\" width=\"16\"> Android only\n\nChecks if the user has enabled the \"Alarms & Reminders\"-setting. If not, the notificiatons will be scheduled inexact, which is still ok and will only be delayed by some minutes.\n- On Android 11 and older, this method will always return `true` in the `successCallback`.\n- On Android 12 the permission is granted by default\n- On Android 13 and newer, the permission is not granted by default and have to be explicitly enabled by the user.\n\n### createChannel\n<img src=\"images/android-icon.svg\" width=\"16\"> Android only\n\nCreates a channel, if it not already exists. A channel is not changeable, after it is created. This is a restriction by Android.\nIf a notification does not specify a [androidChannelId](#property-androidchannelid) a [default channel](#default-channel) will be used.\n\nFor setting the channel, use [androidChannelId](#property-androidchannelid) when scheduling a notification.\n\nOverview of all properties for a channel:\n\n```js\ncordova.plugins.notification.local.createChannel({\n    androidChannelId: \"my_channel_01\", // string, to separate something in the id, use \"_\" instead of \"-\"\n    androidChannelName: \"My Channel Name\", // string, defaults to \"Default Channel\"\n    androidChannelDescription: \"Description of channel\", // string (optional)\n    androidChannelImportance: \"IMPORTANCE_DEFAULT\", // string (optional), see property documentation for importance\n    androidChannelEnableLights: true, // bool (optional), default is false\n    androidChannelEnableVibration: true, // bool (optional), default is false\n    sound: 'www/audio/ring.mp3', // string (optional), defaults to \"default\", which represents the default sound for a notification. If you set `null`, no sound will be set for the notification\n    androidChannelSoundUsage: 5 // int (optional), default is USAGE_NOTIFICATION\n  }, successCallback, this)\n```\n\n### deleteChannel\n<img src=\"images/android-icon.svg\" width=\"16\"> Android only\n\nDeletes a Android channel.\n\nExample:\n\n```javascript\ncordova.plugins.notification.local.deleteChannel(\"my_channel_id\", successCallback, this)\n```\n\nThese will delete all associated notificiations for this channel. If you create a new channel with the same id, the deleted channel will be un-deleted with all of the same settings it had before it was deleted, see [NotificationManagerCompat.deleteNotificationChannel](https://developer.android.com/reference/androidx/core/app/NotificationManagerCompat#deleteNotificationChannel(java.lang.String))\n\n### getDefaults\n\nReturns the default values all properties on each platform.\n\nExample:\n\n```js\ncordova.plugins.notification.local.getDefaults();\n```\n\n### hasPermission\nChecks if the app has permissions to post notifications.\n\n```js\ncordova.plugins.notification.local.hasPermission(function (granted) { ... });\n```\n\n### iOSClearBadge\nClears the badge.\n\n### openAlarmSettings\n<img src=\"images/android-icon.svg\" width=\"16\"> Android only. Since Android 12 (SDK 31).\n\nOpens the `Alarms & reminders` setting as an Activity when running on Android 12 (SDK 31) or later, where the user can enable exact alarms.\n\n<img width=\"240\" src=\"images/android-alarms-and-reminders-setting.png\" />\n\nThis is only available, if [SCHEDULE_EXACT_ALARM](#exact-alarms-user-grants-permission) is declared as permission in the `AndroidManifest.xml`.\n\nThis method will not wait for the user to be returned back to the app. For this, the `resume`-event can be used. The callback will just return `OK`, after starting the activity.\n- If the user grants permission, already inexact scheduled notifications will be rescheduled as exact alarms.\n- If exact alarms were already granted and the user revokes it, the app will be killed and all scheduled notifications will be canceld. The app have to schedule the notifications as inexact alarms again, when the app is opened the next time, see https://developer.android.com/develop/background-work/services/alarms/schedule#using-schedule-exact-permission.\n- On Android older then 12, it will just call the `successCallback`, without doing anything. \n\n### openNotificationSettings\nOpens the notifications settings of the app on Android 8 and newer. This method will not wait for the user to be returned back to the app. For this, the `resume`-event can be used.\n- On Android, the callback will just return \"OK\", after starting the activity.\n- On Android older then 8, it opens the app details.\n- On iOS it's not possible to open the notification settings, it will open the app settings.\n\n### requestPermission\nRequest permission to post notifications. This is called automatically by the plugin when scheduling notifications, but you can also request it manually before scheduling notifications:\n\n```js\ncordova.plugins.notification.local.requestPermission(function (granted) { ... });\n```\n\nIf this method is called, a dialog will be shown to the user to ask for the permission.\n\n|       |       |\n| :---- | :---- |\n| <img width=\"240\" src=\"images/ios-request-permission.png\"><p align=\"center\">iOS Example</p> | <img width=\"240\" src=\"images/android-request-permission.png\"><p align=\"center\">Android example</p> |\n\nThe user can still allow/deny the permission through the system settings.\n\nTo check if permissions are granted, without calling this method, use [hasPermission](#haspermission).\n\n### setDefaults\n\nChanges default values of properties.\n\nExample:\n\n```js\ncordova.plugins.notification.local.setDefaults({\n    androidChannelId: \"my_channel_01\",\n    title: \"My default Title\"\n});\n```\n\n## Properties\n\n### Changed properties\nList of changed properties on newer plugin versions.\n\n#### Changes since version `1.1.0`\n\nThere were some properties renamed. You can still use the old ones, but you will get a deprecation warning in the log and they will be removed in future versions.\n\n| Old Property            | New Property                |\n| :---------------------- | :-------------------------- |\n| autoClear               | androidAutoCancel           |\n| badge                   | badgeNumber                 |\n| channelDescription      | androidChannelDescription   |\n| channelId               | androidChannelId            |\n| channelImportance       | androidChannelImportance    |\n| channelName             | androidChannelName          |\n| clock                   | Use for `clock: true` = `androidShowWhen` and `clock: 'chronometer'` = `androidUsesChronometer` |\n| color                   | androidColor                |\n| defaults                | androidDefaults             |\n| description             | androidChannelDescription   |\n| foreground              | iOSForeground               |\n| group                   | androidGroup                |\n| groupSummary            | androidGroupSummary         |\n| icon                    | androidLargeIcon            |\n| iconType                | androidLargeIconType        |\n| importance              | androidChannelImportance    |\n| lockscreen              | androidLockscreen           |\n| mediaSession            | *Property was removed*      |\n| onlyAlertOnce           | androidOnlyAlertOnce        |\n| prio                    | Use `androidChannelImportance`, `androidAlarmType` and `androidAllowWhileIdle` instead. |\n| priority                | Use `androidChannelImportance`, `androidAlarmType` and `androidAllowWhileIdle` instead. |\n| progressBar             | androidProgressBar          |\n| smallIcon               | androidSmallIcon            |\n| sticky                  | androidOngoing              |\n| soundUsage              | androidChannelSoundUsage    |\n| ongoing                 | androidOngoing              |\n| summary                 | androidSummary              |\n| text as Array           | androidMessages             |\n| timeoutAfter            | androidTimeoutAfter         |\n| titleCount              | androidTitleCount           |\n| wakeup                  | androidWakeUpScreen         |\n\n### Changes since version `1.1.1`\n\nThere were some properties renamed. You can still use the old ones, but you will get a deprecation warning in the log and they will be removed in future versions.\n\n| Old Property            | New Property                  | Reason                  |\n| :---------------------- | :---------------------------- | ----------------------- |\n| vibrate                 | androidChannelEnableVibration | The vibration cannot be controlled on iOS. So this is a Android only property and can only be set on a channel. See [androidChannelEnableVibration](#property-androidchannelenablevibration)|\n\n#### iOS\n- Show a notification in the notification center when the app is on foreground, like on Android.  Happens also if [iOSForeground](#property-iosforeground) is `false`.\n\n### Common properties\n\nThese properties can be used on all platforms, but some may behave differently on each platform.\n\n| Property               | Default           | Comment                   |\n| :----------------------| :-----------------|:--------------------------|\n| [actions](#actions)    | `[]`              | Actions of a notification |\n| [attachments](#property-attachments) | `[]`              | List of resources, to attach to the notification. |\n| [badgeNumber](#property-badgenumber) | Android: `1`, iOS: `-1` | Sets the badge for the application. The behaviour differs on Android and iOS.  |\n| data                   | `null`            | Custom data for the notification. Can be used, when the notification is send back to the app, e.g. by clicking on it. |\n| id                     | `0`               | Id of the notification as number. |\n| launch                 | `true`            | If a click on the notification should launch the app. |\n| [priority](#property-priority) | `0` (=PRIORITY_DEFAULT) | Deprecated. Use [androidChannelImportance](#property-androidchannelimportance), [androidAlarmType](#property-androidalarmtype) and [androidAllowWhileIdle](#property-androidallowwhileidle) |\n| silent                | `false`            | iOS: Don't show a notification, make no sound, no vibration, when app is in foreground. Android: Don't show a notification (Does not create a Builder. Must be tested if that works) |\n| text                  | `\"\"`               | Text of the notification. Android features: 1. If the text contains line breaks (`\\n`) the notification style [NotificationCompat.InboxStyle](https://developer.android.com/reference/androidx/core/app/NotificationCompat.InboxStyle) will be used. 2. If the text is longer then 44 chars, the notifications style [NotificationCompat.BigTextStyle](https://developer.android.com/reference/androidx/core/app/NotificationCompat.BigTextStyle) will be used. |\n| [sound](#property-sound) | `default`          | Sets the sound of a notification. On iOS it also turns on/off the vibration. |\n| title                 | `\"\"` (Sets the app name)               | Title of the notification. Has to be a String. If it is empty, the app name will be used. |\n| [trigger](#triggers)  | `{type : \"calendar\"}`| Notifications may trigger immediately or depend on calendar or location. |\n\n### Android properties\n\nThese properties are only available on Android.\n\n| Property               | Default           | Comment                   |\n| :----------------------| :-----------------|:--------------------------|\n| [androidAlarmType](#property-androidalarmtype) | `RTC_WAKEUP` |              |\n| [androidAllowWhileIdle](#property-androidallowwhileidle) | `false` | Alarm will be allowed to execute even when the system is in low-power idle (a.k.a. doze) modes. |\n| androidAutoCancel      | `true`            | Make this notification automatically dismissed when the user touches it |\n| androidChannelDescription | `null`            | Sets the `description` of a [notification channel](#android-notification-channels). |\n| androidChannelEnableLights | `false` | Can be `true` or `false`and sets whether notifications posted to a [notification channel](#create-channel) should display notification lights, on devices that support that feature. |\n| [androidChannelEnableVibration](#property-androidchannelenablevibration) | `false`            | Enables the vibration of a channel. |\n| [androidChannelId](#property-androidchannelid) | `default_channel` | Specifies the channel id to be posted on. |\n| androidChannelImportance | `IMPORTANCE_DEFAULT` | Sets the [importance](#property-androidchannelimportance) of a [notification channel](#android-notification-channels) |\n| androidChannelName     | `Default channel` | Set the `channelName` for the notification to be posted on. See [Android Notification Channels](#android-notification-channels) for more information. |\n| androidChannelSoundUsage | `5` (=USAGE_NOTIFICATION) | Sets the [androidChannelSoundUsage](#property-androidchannelsoundusage) of a [notification channel](#create-channel). |\n| [androidColor](#property-androidcolor) | `null`            | The notification background color for the small icon in the notification style. |\n| [androidGroup](#grouping) | `null`            | Set this notification to be part of a group of notifications sharing the same key. Grouped notifications may display in a cluster or stack on devices which support such rendering. To make this notification the summary for its group, also call setGroupSummary(boolean). A sort order can be specified for group members by using setSortKey(String) (not implemented yet). Calls [Notification.Builder#setGroup(java.lang.String)](https://developer.android.com/reference/android/app/Notification.Builder#setGroup(java.lang.String)) |\n| [androidGroupSummary](#grouping) | `false`        | Set this notification to be the group summary for a group of notifications. Grouped notifications may display in a cluster or stack on devices which support such rendering. Requires a group key also be set using setGroup(String). The group summary may be suppressed if too few notifications are included in the group. Calls [Notification.Builder#setGroupSummary(boolean)](https://developer.android.com/reference/android/app/Notification.Builder#setGroupSummary(boolean)) |\n| [androidLargeIcon](#property-androidlargeicon) | `null` | Add a large icon to the notification content view. |\n| androidLargeIconType   | `square`          | Can be `square` or `circle` |\n| androidLockscreen      | `true`            | If the entire notification should be shown on all lockscreens and while screen sharing. If the value is `true`, [Notification#VISIBILITY_PUBLIC](https://developer.android.com/reference/android/app/Notification#VISIBILITY_PUBLIC) will be set, otherwise [Notification#VISIBILITY_SECRET](https://developer.android.com/reference/android/app/Notification#VISIBILITY_SECRET). Sets [Notification#visibility](https://developer.android.com/reference/android/app/Notification#visibility). |\n| androidMessages        | `null`            | Array of messages to [summarize](#summarizing) notifications. [NotificationCompat.MessagingStyle](https://developer.android.com/reference/androidx/core/app/NotificationCompat.MessagingStyle) will be used. |\n| androidOngoing         | `false`           | Set whether this is an ongoing notification. Ongoing notifications cannot be dismissed by the user on locked devices, or by notification listeners, and some notifications (call, device management, media) cannot be dismissed on unlocked devices. |\n| androidOnlyAlertOnce   | `false`           | Set this flag if you would only like the sound, vibrate and ticker to be played if the notification is not already showing (see [documentation](https://developer.android.com/reference/android/app/Notification.Builder#setOnlyAlertOnce(boolean))). |\n| androidProgressBar     | `null`  | See [documentation](#progress) |\n| androidShowWhen        | `true`            | If the Notification should show the when date. Before Version 1.1.0 called `clock`. |\n| [androidSmallIcon](#property-androidsmallicon) | `res://ic_popup_reminder` (=Bell icon) | Set the small icon resource, which will be used to represent the notification in the status bar. |\n| [androidSummary](#property-androidsummary) | `null`             |  |\n| androidTimeoutAfter    | `0`               | Specifies a duration in milliseconds after which this notification should be canceled, if it is not already canceled. `0` means no automatic cancellation.  |\n| androidTitleCount      | `%n%`              | Additional text added to the title for displaying the number of messages if there is more than one. Only used, if using MessagingStyle. Use `%n%` in the string for specifying the location of the number. |\n| androidUsesChronometer | `false`           | Show the Notification#when field as a stopwatch. Instead of presenting when as a timestamp, the notification will show an automatically updating display of the minutes and seconds since when. Useful when showing an elapsed time (like an ongoing phone call). Was former handeld by `clock: 'chronometer'` |\n| androidWakeUpScreen    | `true`            | If the screen should go on, when a notification arrives |\n| androidDefaults        | `0`               | Android 7 only. Sets the default notification options that will be used only on Android 7. Bitwise-or of: DEFAULT_SOUND, DEFAULT_VIBRATE, DEFAULT_LIGHTS. |\n| led                    | `false`           | Android 7 only. Can be a Hex-String like `#FF00FF` or `{color: '#FF00FF', on: 500, off: 500}` and sets the led of a notification. Replaced by `androidChannelEnableLights`. |\n\n### iOS properties\n\nThese properties are only available on iOS.\n\n| Property                                 | Default value         | Comment                   |\n| :--------------------------------------- | :-------------------- | :------------------------ |\n| [iOSForeground](#property-iosforeground) | `true`                | Displays a notification banner, when app is in foreground. |\n\n#### Some notes:\n- A progressbar is natively not supported by iOS, [see Stackoverflow](https://stackoverflow.com/questions/48500532/progress-view-in-local-notification/48500734#48500734)\n- The vibration cannot be turned off separately. It can only be turned off, if no sound is set.\n\n### Default values\n\nDefault values for the properties can be get by [getDefaults](#getdefaults).\nValues can be changed by [setDefaults](#setdefaults)\n\n### Available properties\n\n#### Property `androidAllowWhileIdle`\nDefault: `false`\n\nAlarm will be allowed to execute even when the system is in low-power idle (a.k.a. doze) modes.\n\nThis type of alarm must only be used for situations where it is actually required that the alarm go off while in idle -- a reasonable example would be for a calendar notification that should make a sound so the user is aware of it. When the alarm is dispatched, the app will also be added to the system's temporary power exemption list for approximately 10 seconds to allow that application to acquire further wake locks in which to complete its work.\n\nThis executes [AlarmManager.setAndAllowWhileIdle](https://developer.android.com/reference/android/app/AlarmManager#setAndAllowWhileIdle(int,%20long,%20android.app.PendingIntent)) or [AlarmManager.setExactAndAllowWhileIdle](https://developer.android.com/reference/android/app/AlarmManager#setExactAndAllowWhileIdle(int,%20long,%20android.app.PendingIntent)) depending on [canScheduleExactAlarms](#canscheduleexactalarms).\n\n#### Property `androidAlarmType`\nDefault: `RTC_WAKEUP`\n\nIf the alarm should be scheduled on a specific time or in relevance to the time, when the device was booted and if the alarm should wakeup the device cpu (not the screen). See also the Android documentation [Choose an alarm type](https://developer.android.com/develop/background-work/services/alarms/schedule#type).\n\n| Value            | Support | Description |\n|:-----------------|:--------|:------------|\n| [RTC_WAKEUP](https://developer.android.com/reference/android/app/AlarmManager#RTC_WAKEUP) | x | Alarm time in `System.currentTimeMillis()` (wall clock time in UTC), which will wake up the device (the CPU not the screen) when it goes off. |\n| [RTC](https://developer.android.com/reference/android/app/AlarmManager#RTC) | x | Alarm time in `System.currentTimeMillis()` (wall clock time in UTC). This alarm does not wake the device up; if it goes off while the device is asleep, it will not be delivered until the next time the device wakes up. |\n| [ELAPSED_REALTIME_WAKEUP](https://developer.android.com/reference/android/app/AlarmManager#ELAPSED_REALTIME_WAKEUP) | - | Alarm time in `SystemClock.elapsedRealtime()` (time since boot, including sleep), which will wake up the device (the CPU, not the screen) when it goes off. |\n| [ELAPSED_REALTIME](https://developer.android.com/reference/android/app/AlarmManager#ELAPSED_REALTIME) | - | Alarm time in `SystemClock.elapsedRealtime()` (time since boot, including sleep). This alarm does not wake the device up; if it goes off while the device is asleep, it will not be delivered until the next time the device wakes up. |\n\n#### Property `androidChannelEnableVibration`\nDefault: `false`\n\nSets the vibration of a [notification channel](#create-channel) by setting [NotificationChannel#enableVibration(boolean)](https://developer.android.com/reference/android/app/NotificationChannel#enableVibration(boolean)). On Android 7 this sets the vibration of a notification directly.\n\n#### Property `androidChannelId`\nDefault: `default_channel`\n\nSets the `channelId` for the notification to be posted on. Use [Snake Case](https://en.wikipedia.org/wiki/Snake_case) for the id, which means, the id should be written in lowercase and words should be separated by underscores (`_`) and not hyphens (`-`) or whitespaces.\n\n#### Property `androidChannelImportance`\nDefault: `\"IMPORTANCE_DEFAULT\"`\n\nThe property can have one of the following values:\n\n| Value            | Description |\n|:-----------------|:------------|\n| [IMPORTANCE_NONE](https://developer.android.com/reference/androidx/core/app/NotificationManagerCompat#IMPORTANCE_NONE()) | A notification with no importance: shows nowhere, is blocked. |\n| [IMPORTANCE_MIN](https://developer.android.com/reference/androidx/core/app/NotificationManagerCompat#IMPORTANCE_MIN()) | Min notification importance: only shows in the shade, below the fold. |\n| [IMPORTANCE_LOW](https://developer.android.com/reference/androidx/core/app/NotificationManagerCompat#IMPORTANCE_LOW()) | Low notification importance: shows everywhere, but is not intrusive. |\n| [IMPORTANCE_DEFAULT](https://developer.android.com/reference/androidx/core/app/NotificationManagerCompat#IMPORTANCE_DEFAULT()) | Default notification importance: shows everywhere, allowed to makes noise, but does not visually intrude. |\n| [IMPORTANCE_HIGH](https://developer.android.com/reference/androidx/core/app/NotificationManagerCompat#IMPORTANCE_HIGH()) | Higher notification importance: shows everywhere, allowed to makes noise and peek. |\n| [IMPORTANCE_MAX](https://developer.android.com/reference/androidx/core/app/NotificationManagerCompat#IMPORTANCE_MAX()) | Highest notification importance: shows everywhere, allowed to makes noise, peek, and use full screen intents. |\n\nSee the [Android documentation](https://developer.android.com/develop/ui/views/notifications#importance) about this property.\n\nSee also [NotificationChannel#NotificationChannel(java.lang.String,%20java.lang.CharSequence,%20int)](https://developer.android.com/reference/android/app/NotificationChannel#NotificationChannel(java.lang.String,%20java.lang.CharSequence,%20int))\n\n#### Property `androidChannelSoundUsage`\nDefault: `5` (=`USAGE_NOTIFICATION`)\n\nThe property can have one of the following values:\n\n| Property value   | Android variable | Description |\n|:-----------------|:-----------------|:------------|\n| 0                | [USAGE_UNKNOWN](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_UNKNOWN) | Usage value to use when the usage is unknown. |\n| 1                | [USAGE_MEDIA](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_MEDIA) | Usage value to use when the usage is media, such as music, or movie soundtracks. |\n| 2                | [USAGE_VOICE_COMMUNICATION](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_VOICE_COMMUNICATION)| Usage value to use when the usage is voice communications, such as telephony or VoIP. |\n| 3                | [USAGE_VOICE_COMMUNICATION_SIGNALLING](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_VOICE_COMMUNICATION_SIGNALLING) | Usage value to use when the usage is in-call signalling, such as with a \"busy\" beep, or DTMF tones. |\n| 4                | [USAGE_ALARM](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_ALARM) | Usage value to use when the usage is an alarm (e.g. wake-up alarm). |\n| 5                | [USAGE_NOTIFICATION](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_NOTIFICATION) | Usage value to use when the usage is notification. See other notification usages for more specialized uses. |\n| 6                | [USAGE_NOTIFICATION_RINGTONE](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_NOTIFICATION_RINGTONE) | Usage value to use when the usage is telephony ringtone. |\n| 7                | [USAGE_NOTIFICATION_COMMUNICATION_REQUEST](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_NOTIFICATION_COMMUNICATION_REQUEST) | This constant was deprecated in API level 33. Use USAGE_NOTIFICATION which is handled the same way as this usage by the audio framework. Usage value to use when the usage is a request to enter/end a communication, such as a VoIP communication or video-conference. |\n| 8                | [USAGE_NOTIFICATION_COMMUNICATION_INSTANT](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_NOTIFICATION_COMMUNICATION_INSTANT) | This constant was deprecated in API level 33. Use USAGE_NOTIFICATION which is handled the same way as this usage by the audio framework. Usage value to use when the usage is notification for an \"instant\" communication such as a chat, or SMS. |\n| 9                | [USAGE_NOTIFICATION_COMMUNICATION_DELAYED](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_NOTIFICATION_COMMUNICATION_DELAYED) | This constant was deprecated in API level 33. Use USAGE_NOTIFICATION which is handled the same way as this usage by the audio framework. Usage value to use when the usage is notification for a non-immediate type of communication such as e-mail. |\n| 10               | [USAGE_NOTIFICATION_EVENT](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_NOTIFICATION_EVENT) | Usage value to use when the usage is to attract the user's attention, such as a reminder or low battery warning. |\n| 11               | [USAGE_ASSISTANCE_ACCESSIBILITY](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_ASSISTANCE_ACCESSIBILITY) | Usage value to use when the usage is for accessibility, such as with a screen reader. | \n| 12               | [USAGE_ASSISTANCE_NAVIGATION_GUIDANCE](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_ASSISTANCE_NAVIGATION_GUIDANCE) | Usage value to use when the usage is driving or navigation directions. |\n| 13               | [USAGE_ASSISTANCE_SONIFICATION](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_ASSISTANCE_SONIFICATION)  | Usage value to use when the usage is driving or navigation directions. |\n| 14               | [USAGE_GAME](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_GAME) | Usage value to use when the usage is media, such as music, or movie soundtracks. |\n| 16               | [USAGE_ASSISTANT](https://developer.android.com/reference/android/media/AudioAttributes#USAGE_ASSISTANT)  | Usage value to use for audio responses to user queries, audio instructions or help utterances. |\n\nSee [Android Documentation](https://developer.android.com/reference/android/media/AudioAttributes.Builder#setUsage(int))\n\n#### Property `androidColor`\nDefault: `null`\n\nThe notification background color for the small icon. The color will only be applied on the notification style and not on the status bar.\nSet as Hex-String like `#FF0000`. Calls [Notification.Builder#setColor](https://developer.android.com/reference/android/app/Notification.Builder#setColor(int)), which sets [Notification#color](https://developer.android.com/reference/android/app/Notification#color). \n\n#### Property `androidLargeIcon`\nDefault: `null`\n\nAdd a large icon to the notification content view. In the platform template, this image will be shown either on the right of the notification, with an aspect ratio of up to 16:9, or (when the notification is grouped) on the left in place of the small icon. Calls [Notification.Builder#setLargeIcon(android.graphics.Bitmap)](https://developer.android.com/reference/android/app/Notification.Builder#setLargeIcon(android.graphics.Bitmap)).\n\nExamples:\n- `res://myLargeIcon.png` - Resource from the app bundle, see [documentation](#resource-pattern-res)\n- `www/myLargeIcon.png` - `www` folder, see [documentation](#resource-pattern-file)\n- `shared://myLargeIcon.png` - Shared folder, see [documentation](#resource-pattern-shared), Android only\n\n#### Property `androidSmallIcon`\nDefault: `res://ic_popup_reminder` (=Bell icon)\n\nSets the small icon resource, which will be used to represent the notification in the status bar. Since Android 8, the icon must be a monochrome icon, which can only use a white color on a transparent background. The icon will be colored by the system in respective circumstances. You can also use a vector drawable, but only for a `res:\\\\` paths. You can get vector drawables on [Google Fonts Icons](https://fonts.google.com/icons) as example or for using it. Just select the download for Android. To know, what vector drawables are, see the Android documentation [Vector drawables overview](https://developer.android.com/develop/ui/views/graphics/vector-drawable-resources).\n\nThe platform template for the expanded view will draw this icon in the left, unless a large icon has also been specified, in which case the small icon will be moved to the right-hand side. Calls [Notification.Builder#setSmallIcon(int)](https://developer.android.com/reference/android/app/Notification.Builder#setSmallIcon(int)).\n\nExample: `res://myIcon.png` - Resource from the app bundle, see [documentation](#resource-pattern-res)\n\nOnly `res://` paths are allowed.\n\n#### Property `androidSummary`\nDefault: `null`\n\nUsed in the following cases:\n\n1. For [NotificationCompat.InboxStyle#setSummaryText(java.lang.CharSequence)](https://developer.android.com/reference/androidx/core/app/NotificationCompat.InboxStyle#setSummaryText(java.lang.CharSequence)), when using [NotificationCompat.InboxStyle](https://developer.android.com/reference/androidx/core/app/NotificationCompat.InboxStyle), which happens, when the `text` property has line breaks.\n2. For [NotificationCompat.BigPictureStyle#setSummaryText(java.lang.CharSequence)](https://developer.android.com/reference/androidx/core/app/NotificationCompat.BigPictureStyle#setSummaryText(java.lang.CharSequence)), when [NotificationCompat.BigPictureStyle](https://developer.android.com/reference/androidx/core/app/NotificationCompat.BigPictureStyle) is used, which happens, when `attachments` are used. If `androidSummary` is not set, `text` will be used.\n3. For [NotificationCompat.BigTextStyle#setSummaryText(java.lang.CharSequence)](https://developer.android.com/reference/androidx/core/app/NotificationCompat.BigTextStyle#setSummaryText(java.lang.CharSequence)), when [NotificationCompat.BigTextStyle](https://developer.android.com/reference/androidx/core/app/NotificationCompat.BigTextStyle) is used, which happens, if the `text` property is longer then 44 characters.\n\n#### Property `attachments`\nDefault: `[]`\n\nList of resources, to attach to the notification.\n\n##### Android\nOnly the first entry will be used as a [bigPicture](https://developer.android.com/reference/androidx/core/app/NotificationCompat.BigPictureStyle#bigPicture(android.graphics.Bitmap)) of [NotificationCompat.BigPictureStyle](https://developer.android.com/reference/androidx/core/app/NotificationCompat.BigPictureStyle).\n\nSupport resource patterns:\n- [res://](#resource-pattern-res)\n- [shared://](#resource-pattern-shared)\n- [www](#resource-pattern-www)\n\n##### iOS\nThe visual and audio attachments to display alongside the notification’s main content, see documentation of [UNMutableNotificationContent.attachments](https://developer.apple.com/documentation/usernotifications/unmutablenotificationcontent/attachments).\n\nSupport resource patterns:\n- `file:///` - Absolute file path\n- [res://](#resource-pattern-res) - App resource\n- [www](#resource-pattern-www)\n- `base64://` - Base64 string\n\n#### Property `badgeNumber`\nDefault:\n- Android: `1` - Each notification increments the badge count by 1\n- iOS: `-1` - Does not set any badge\n\nSet the badge count. The behavior differs on Android and iOS.\n\n##### Android\nSets the number of items a notification represents. If the value is `1`, each notification increments the badge of the application by one. If 3 notifications are posted, the badge count will be `3`.\n\nOn newer Android versions, the badge count will be presented as a dot and shows the number, if you long press on the app icon.\n\nFor using the badge, see the Android documentation [Modify a notification badge](https://developer.android.com/develop/ui/views/notifications/badges).\n\nCalls [NotificationCompat.Builder#setNumber(int)](https://developer.android.com/reference/androidx/core/app/NotificationCompat.Builder#setNumber(int)).\n\n##### iOS\nA notification does not increment the badge, it sets the badge count directly. If 3 notifications are posted with the value of `1`, the badge count will be `1` and not `3`.\n\nSpecials of this value:\n- `-1`: The badge  will not be changed.\n- `0`: The badge will be cleared.\n\nSets [UNMutableNotificationContent#badge](https://developer.apple.com/documentation/usernotifications/unmutablenotificationcontent/badge).\n\n###### Clearing the badge\nYou can clear the badge with the function [iOSClearBadge](#iosclearbadge).\n\nThe badge will also be cleared, if you call `clearAll` or `cancelAll`.\n\n#### Property `iOSForeground`\nDefault: `true`\n\nDisplays a notification banner when the app is in foreground, otherwise the notification would only make a noise (sound and vibrate), change the badge, but is not shown as a banner. Since iOS 14, the notification is always displayed in the Notification Center, no matter how this option is set to be consistent with Android. Renamed from `foreground` to `iOSForeground` and changed to `true` by default in Version `1.1.0`.\n\n#### Property `priority`\nDefault: `0` (=PRIORITY_DEFAULT)\n\nDeprecated since Android 8.\n\nReplaced by [androidChannelImportance](#property-androidchannelimportance), which sets also the [priority](https://developer.android.com/reference/android/app/Notification#priority) value for notifications on Android 7.\n\nThis property had aditional functionality for the plugin, which is replaced by [androidAlarmType](#property-androidalarmtype) and [androidAllowWhileIdle](#property-androidallowwhileidle).\n\n##### Old use case\nWhen the value was [PRIORITY_MIN](https://developer.android.com/reference/android/app/Notification#PRIORITY_MIN)(=-2), the alarm was scheduled with [RTC](https://developer.android.com/reference/android/app/AlarmManager#RTC).\nThis can now be achieved by setting [androidAlarmType](#property-androidalarmtype) to `RTC` and [androidAllowWhileIdle](#property-androidallowwhileidle) to false.\n\nWhen the value was [PRIORITY_DEFAULT](https://developer.android.com/reference/android/app/Notification#PRIORITY_DEFAULT)(=0), which was set as the default for this plugin, the alarm was scheduled with [RTC_WAKEUP](https://developer.android.com/reference/android/app/AlarmManager#RTC_WAKEUP). This can now be set by [androidAlarmType](#property-androidalarmtype).\n\nWhen the value was [PRIORITY_MAX](https://developer.android.com/reference/android/app/Notification#PRIORITY_MAX)(=2), the alarm was scheduled by [AlarmManager.setAndAllowWhileIdle](https://developer.android.com/reference/android/app/AlarmManager#setAndAllowWhileIdle(int,%20long,%20android.app.PendingIntent)) or [AlarmManager.setExactAndAllowWhileIdle](https://developer.android.com/reference/android/app/AlarmManager#setExactAndAllowWhileIdle(int,%20long,%20android.app.PendingIntent)). This can now be set by [androidAllowWhileIdle](#property-androidallowwhileidle).\n\n#### Property `sound`\nDefault: `default`\n\nThe value `default` sets the system default sound for a notification. The value `null` will disable the sound.\nOn Android it sets the sound of a notification channel. On iOS it enables/disables also the vibration.\n\nExample:\n- `res://mySound.wav` - Resource from the app bundle, see [documentation](#resource-pattern-res)\n- `shared://mySound.wav` - Shared folder, see [documentation](#resource-pattern-shared), Android only\n- `www/mySound.wav` - [Documentation](#resource-pattern-file)\n\n##### Android\nBefore Android 8 it sets the sound of a notification. Since Android 8 it sets the sound of a [notification channel](#create-channel).\n\n##### iOS\nEnables/disables also the vibration. If no sound is set, no vibration will occur.\n\nYou can package the audio data in an `aiff`, `wav`, or `caf` file. Sound files must be less than 30 seconds in length.\nIf the sound file is longer than 30 seconds, the system plays the default sound instead. See [UNNotificationSound - Prepare Sound Resources](https://developer.apple.com/documentation/usernotifications/unnotificationsound?language=objc#Prepare-Sound-Resources).\n\nThe system looks in the following folders for the file:\n- The `/Library/Sounds` directory of the app’s container directory.\n- The `/Library/Sounds` directory of one of the app’s shared group container directories.\n- The main bundle of the current executable.\n\nSee documentation [UNNotificationSound#soundNamed](https://developer.apple.com/documentation/usernotifications/unnotificationsound/init(named:)?language=objc#Discussion).\n\n### Resource resolving\n\nIf a property can take a resource, the following patterns could be used. Not all patterns are available for every property.\n\n#### Resource pattern `file://`\nExample: `file://myImage.png`\n\nLooks for a file in the `www` folder. `file://myImage.png` is equivalent to `www/myImage.png`.\n\n#### Resource pattern `www/`\nExample: `www/myImage.png`\n\nLooks for a file in the `www` folder.\n\n#### Resource pattern `res://`\nExample: `res://myImage.png`\n\nDefines a resource for Android or iOS. In Android it looks in the app's `res` folder, in iOS it looks for a file in the root of the app package.\n\n##### Android\nGets a resource from the `res` directory of your app or the system resources. Normally, when getting a resource file on Android, the resource name should not contain the file extension like `res://myImage`, but, to be compatible with iOS, you can also include the extension like `res://myImage.png`. An explanation what the `res`directory is, can be read in the Android documentation [Providing Resources](https://developer.android.com/guide/topics/resources/providing-resources).\n\nThe property, which you use, defines, in which subfolder of `res` the resource should be:\n- For a graphic: `drawable` and `mipmap`\n- For a sound: `raw`\n\nThe plugin trys first to get the resource from you app package, if it does not find one there, it trys to get it from the [system resources](https://developer.android.com/reference/android/content/res/Resources#getSystem()).\n\nIf you want to use a system resource, you have to use a valid resource identifier, which you can look for in [Android Code Search](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/res/res/). An example would be [ic_popup_reminder](https://cs.android.com/android/platform/superproject/main/+/main:frameworks/base/core/res/res/drawable-mdpi/ic_popup_reminder.png), which you would set with `res://ic_popup_reminder`.\n\nTo make files files available in the `res` directory, you can use the [resource-file](https://cordova.apache.org/docs/en/12.x/config_ref/#resource-file) tag in `config.xml` like:\n\n```xml\n<platform name=\"android\">\n    <resource-file src=\"res/drawable/myImage.png\" target=\"app/src/main/res/drawable/myImage.png\" />\n    <resource-file src=\"res/raw/mySound.wav\" target=\"app/src/main/res/raw/mySound.wav\" />\n</platform>\n``` \n\nThe directory structure for this example would be:\n```\n|- res\n   |- drawable\n       |- myImage.png \n   |- raw\n       |- mySound.wav\n|- config.xml\n|- plugins\n|- platforms\n...\n```\n\n##### iOS\nLooks for a file in the root of the app package.\n\nFor e.g.:\n`res://AppIcon60x60@3x.png` would point to `YourApp.ipa/AppIcon60x60@3x.png` on a release build or `YourApp.app/AppIcon60x60@3x.png` on a debug build. The app container is a zip file. On a mac, you can right click on your app container and choose `Show package contents`.\n\nTo copy files to the app bundle, use the [resource-file](https://cordova.apache.org/docs/en/12.x/config_ref/#resource-file) tag in your `config.xml` like:\n\n```xml\n<platform name=\"ios\">\n    <resource-file src=\"res/myAudio.wav\" target=\"myAudio.wav\" />\n</platform>\n```\n\nThe directory structure for the example would be:\n```\n|- res\n   |- myAudio.wav\n|- config.xml\n|- plugins\n|- platforms\n...\n```\n\n#### Resource pattern `shared://`\nExample: `shared://myImage.png`\n\nAndroid only.\n\n##### Android\nA shared file in `[Installed-App-Path]/files/shared_files`. This is necessary to get useable Uris for asset files, which are the files of the `www` directory. You can also use the `shared_files` directory, to store files created on runtime. To access the directory, you can use [cordova.file.dataDirectory](https://github.com/apache/cordova-plugin-file#where-to-store-files) of the plugin [cordova-plugin-file](https://github.com/apache/cordova-plugin-file) and write to the folder `shared_files`. The folder `shared_files` will be created on plugin initialization.\n\n## Contributing\n\n1. Fork it\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create new Pull Request\n\n## License\n\nThis software is released under the [Apache 2.0 License][apache2_license].\n\nMade with :yum: from Leipzig and since 2024 from Cuxhaven\n\n© 2013-2023 [appPlant GmbH][appplant]\n<br>© 2024 [Manuel Beck](https://manuelbeck.software)\n\n\n[ticket_template]: https://github.com/katzer/cordova-plugin-local-notifications/issues/1188\n[cordova]: https://cordova.apache.org\n[CLI]: http://cordova.apache.org/docs/en/edge/guide_cli_index.md.html#The%20Command-line%20Interface\n[npm]: https://www.npmjs.com/package/cordova-plugin-local-notification\n[apache2_license]: http://opensource.org/licenses/Apache-2.0\n[appplant]: http://appplant.de"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.3818359375,
          "content": "{\n  \"name\": \"cordova-plugin-local-notification\",\n  \"version\": \"1.1.1-dev\",\n  \"description\": \"Schedules and queries for local notifications\",\n  \"cordova\": {\n    \"id\": \"cordova-plugin-local-notification\",\n    \"platforms\": [\n      \"android\",\n      \"ios\"\n    ]\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/katzer/cordova-plugin-local-notifications.git\"\n  },\n  \"keywords\": [\n    \"notification\",\n    \"local notification\",\n    \"user notification\",\n    \"schedule notification\",\n    \"ecosystem:cordova\",\n    \"cordova-ios\",\n    \"cordova-android\"\n  ],\n  \"engines\": {\n    \"cordovaDependencies\": {\n      \"1.0.0\": {\n        \"cordova\": \">=12.0.0\",\n        \"cordova-android\": \">=13.0.0\",\n        \"cordova-ios\": \">=7.0.0\",\n        \"cordova-plugin-device\": \">=3.0.0\"\n      },\n      \"0.9.0-beta.3\": {\n        \"cordova\": \">=3.6.0\",\n        \"cordova-android\": \">=6.0.0\",\n        \"cordova-ios\": \">=4.3.0\",\n        \"cordova-plugin-device\": \">=2.0.0\"\n      }\n    }\n  },\n  \"author\": \"Sebastián Katzer\",\n  \"contributors\": [{\n    \"name\": \"Manuel Beck\",\n    \"email\": \"email@manuelbeck.software\",\n    \"url\": \"https://manuelbeck.software\"\n  }],\n  \"funding\": \"https://github.com/sponsors/GitToTheHub\",\n  \"license\": \"Apache 2.0\",\n  \"bugs\": {\n    \"url\": \"https://github.com/katzer/cordova-plugin-local-notifications/issues\"\n  },\n  \"homepage\": \"https://github.com/katzer/cordova-plugin-local-notifications#readme\"\n}\n"
        },
        {
          "name": "plugin.xml",
          "type": "blob",
          "size": 10.5634765625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!--\n * Apache 2.0 License\n *\n * Copyright (c) Sebastian Katzer 2017\n * Copyright (c) Manuel Beck 2024\n *\n * This file contains Original Code and/or Modifications of Original Code\n * as defined in and that are subject to the Apache License\n * Version 2.0 (the 'License'). You may not use this file except in\n * compliance with the License. Please obtain a copy of the License at\n * http://opensource.org/licenses/Apache-2.0/ and read it before using this\n * file.\n *\n * The Original Code and all software distributed under the License are\n * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER\n * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,\n * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.\n * Please see the License for the specific language governing rights and\n * limitations under the License.\n-->\n\n<plugin xmlns=\"http://apache.org/cordova/ns/plugins/1.0\"\n        xmlns:android=\"http://schemas.android.com/apk/res/android\"\n        id=\"cordova-plugin-local-notification\"\n        version=\"1.1.1-dev\">\n\n    <name>LocalNotification</name>\n\n    <description>Schedules and queries for local notifications</description>\n\n    <repo>https://github.com/katzer/cordova-plugin-local-notifications.git</repo>\n\n    <keywords>notification, local notification, user notification</keywords>\n\n    <license>Apache 2.0</license>\n\n    <author>Sebastián Katzer and Manuel Beck</author>\n\n    <dependency id=\"cordova-plugin-device\" version=\">=3.0.0\" />\n\n    <!-- js -->\n    <js-module src=\"www/local-notification.js\" name=\"LocalNotification\">\n        <clobbers target=\"cordova.plugins.notification.local\" />\n    </js-module>\n\n    <!-- ios -->\n    <platform name=\"ios\">\n        <config-file target=\"config.xml\" parent=\"/*\">\n            <feature name=\"LocalNotification\">\n                <param name=\"ios-package\" value=\"APPLocalNotification\" onload=\"true\" />\n                <param name=\"onload\" value=\"true\" />\n            </feature>\n        </config-file>\n\n        <framework src=\"UserNotifications.framework\" />\n        <framework src=\"CoreLocation.framework\" />\n\n        <header-file src=\"src/ios/APPLocalNotification.h\" />\n        <source-file src=\"src/ios/APPLocalNotification.m\" />\n\n        <header-file src=\"src/ios/APPNotificationCategory.h\" />\n        <source-file src=\"src/ios/APPNotificationCategory.m\" />\n\n        <header-file src=\"src/ios/APPNotificationContent.h\" />\n        <source-file src=\"src/ios/APPNotificationContent.m\" />\n\n        <header-file src=\"src/ios/APPNotificationOptions.h\" />\n        <source-file src=\"src/ios/APPNotificationOptions.m\" />\n\n        <header-file src=\"src/ios/UNUserNotificationCenter+APPLocalNotification.h\" />\n        <source-file src=\"src/ios/UNUserNotificationCenter+APPLocalNotification.m\" />\n\n        <header-file src=\"src/ios/UNNotificationRequest+APPLocalNotification.h\" />\n        <source-file src=\"src/ios/UNNotificationRequest+APPLocalNotification.m\" />\n    </platform>\n\n    <!-- android -->\n    <platform name=\"android\">\n        <framework src=\"src/android/build/localnotification.gradle\" custom=\"true\" type=\"gradleReference\"/>\n\n        <preference name=\"ANDROIDX_CORE_VERSION\" default=\"1.12.0\"/>\n        <framework src=\"androidx.core:core:$ANDROIDX_CORE_VERSION\" />\n\n        <config-file target=\"res/xml/config.xml\" parent=\"/*\">\n            <feature name=\"LocalNotification\">\n                <param name=\"android-package\" value=\"de.appplant.cordova.plugin.localnotification.LocalNotification\"/>\n            </feature>\n        </config-file>\n\n        <config-file target=\"AndroidManifest.xml\" parent=\"/manifest/application\">\n\n            <!--\n              FileProvider to share files located in \"[App path]/files/shared_files\" and make them accessible through an content:// Uri.\n              Asset files, where the www files are, are not accessible by a \"file:///android_asset\"  Uri. To make them\n              accessible, they are copied to a shared folder and can be accessed by a content:// Uri.\n              You can also put your own files there with cordova-plugin-file. To access the directory use\n              cordova.file.dataDirectory + 'shared_files'. To use the file in this plugin, you can use \"shared://myFile.png\",\n              which would point to cordova.file.dataDirectory + 'shared_files/myFile.png'.\n\n              Explanation of the attributes:\n              android:exported=\"false\": The FileProvider ist not public\n              android:grantUriPermissions=\"true\": Grant temporary access to files\n            -->\n            <provider\n                android:name=\"de.appplant.cordova.plugin.localnotification.util.PluginFileProvider\"\n                android:authorities=\"${applicationId}.localnotifications.provider\"\n                android:exported=\"false\"\n                android:grantUriPermissions=\"true\">\n                <meta-data\n                    android:name=\"android.support.FILE_PROVIDER_PATHS\"\n                    android:resource=\"@xml/shared_files_provider_paths\"/>\n            </provider>\n\n            <!-- Notification was clicked by the user -->\n            <activity\n                android:name=\"de.appplant.cordova.plugin.localnotification.ClickHandlerActivity\"\n                android:exported=\"false\"\n                android:taskAffinity=\"\"\n                android:excludeFromRecents=\"true\" />\n            \n            <!-- A notification will be triggered/shown -->\n            <receiver\n                android:name=\"de.appplant.cordova.plugin.localnotification.receiver.TriggerReceiver\"\n                android:exported=\"false\" />\n\n            <!-- Notification cleared by the user -->\n            <receiver\n                android:name=\"de.appplant.cordova.plugin.localnotification.receiver.ClearReceiver\"\n                android:exported=\"false\" />\n\n            <receiver\n                android:name=\"de.appplant.cordova.plugin.localnotification.receiver.RestoreReceiver\"\n                android:exported=\"false\" >\n                <intent-filter>\n                    <!--\n                      Reschedule all alarms, when the device is booted and unlocked by the user\n                    -->\n                    <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n\n                    <!--\n                      Reschedule all alarms, when the app is updated\n                    -->\n                    <action android:name=\"android.intent.action.MY_PACKAGE_REPLACED\" />\n\n                    <!--\n                     An app is granted the Manifest.permission.SCHEDULE_EXACT_ALARM permission.\n                     When the user revokes the Manifest.permission.SCHEDULE_EXACT_ALARM permission, all alarms scheduled with\n                     setExact(int, long, PendingIntent), setExactAndAllowWhileIdle(int, long, PendingIntent) and setAlarmClock(android.app.AlarmManager.AlarmClockInfo, android.app.PendingIntent)\n                     will be deleted.\n                     This broadcast will not be sent when the user revokes the permission.\n                    -->\n                    <action android:name=\"android.app.action.SCHEDULE_EXACT_ALARM_PERMISSION_STATE_CHANGED\" />\n                </intent-filter>\n            </receiver>\n        </config-file>\n\n        <config-file target=\"AndroidManifest.xml\" parent=\"/manifest\">\n            <uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n\n            <!-- Needed, to turn the screen on, when a notification is posted -->\n            <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n\n            <!-- Runtime permission for Android 13 and higher to post notifications -->\n            <uses-permission android:name=\"android.permission.POST_NOTIFICATIONS\"/>\n        </config-file>\n\n        <source-file\n            src=\"src/android/xml/shared_files_provider_paths.xml\"\n            target-dir=\"res/xml\" />\n\n        <source-file\n            src=\"src/android/LocalNotification.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification\" />\n\n        <source-file\n            src=\"src/android/ClickHandlerActivity.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification\" />\n\n        <source-file\n            src=\"src/android/receiver/ClearReceiver.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/receiver\" />\n\n        <source-file\n            src=\"src/android/receiver/RestoreReceiver.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/receiver\" />\n\n        <source-file\n            src=\"src/android/receiver/TriggerReceiver.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/receiver\" />\n\n        <source-file\n            src=\"src/android/action/Action.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/action\" />\n\n        <source-file\n            src=\"src/android/action/ActionGroup.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/action\" />\n\n        <source-file\n            src=\"src/android/trigger/DateTrigger.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/trigger\" />\n\n        <source-file\n            src=\"src/android/trigger/IntervalTrigger.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/trigger\" />\n\n        <source-file\n            src=\"src/android/trigger/MatchTrigger.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/trigger\" />\n\n        <source-file\n            src=\"src/android/util/PluginFileProvider.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/util\" />\n\n        <source-file\n            src=\"src/android/util/AssetUtil.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/util\" />\n\n        <source-file\n            src=\"src/android/util/CallbackContextUtil.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification/util\" />\n\n        <source-file\n            src=\"src/android/Builder.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification\" />\n\n        <source-file\n            src=\"src/android/Manager.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification\" />\n\n        <source-file\n            src=\"src/android/Notification.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification\" />\n\n        <source-file\n            src=\"src/android/Options.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification\" />\n\n        <source-file\n            src=\"src/android/Request.java\"\n            target-dir=\"src/de/appplant/cordova/plugin/localnotification\" />\n    </platform>\n\n</plugin>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "www",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}