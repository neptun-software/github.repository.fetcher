{
  "metadata": {
    "timestamp": 1736708586715,
    "page": 879,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "HotswapProjects/HotswapAgent",
      "stars": 2388,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1298828125,
          "content": "#Eclipse\n**/.settings\n**/.project\n**/.classpath\n**/target\n\n#IntelliJ\n.DS_Store\n*.idea\n*.iml\npom.xml.releaseBackup\n\n.flattened-pom.xml"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.603515625,
          "content": "GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc., <http://fsf.org/>\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    {description}\n    Copyright (C) {year}  {fullname}\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  {signature of Ty Coon}, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 20.6455078125,
          "content": "Hotswap Agent\n=============\n\n<p align=\"left\">\n    <a href=\"https://mvnrepository.com/artifact/org.hotswapagent/hotswap-agent-core\">\n        <img src=\"https://img.shields.io/maven-central/v/org.hotswapagent/hotswap-agent-core.svg\" alt=\"Maven\">\n    </a>\n    <a href=\"https://travis-ci.org/HotswapProjects/HotswapAgent\">\n        <img src=\"https://travis-ci.org/HotswapProjects/HotswapAgent.svg?branch=master\" alt=\"Build Status\">\n    </a>\n    <a href=\"https://www.gnu.org/licenses/old-licenses/gpl-2.0.en.html\">\n        <img src=\"https://img.shields.io/badge/License-GPL%20v2-blue.svg\" alt=\"License: GPL v2\">\n    </a>\n    <a href=\"https://gitter.im/HotswapProjects/user\">\n        <img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Gitter\">\n    </a>\n    <a href=\"https://twitter.com/intent/follow?screen_name=HSwapAgent\">\n        <img src=\"https://img.shields.io/twitter/follow/HSwapAgent.svg?style=social&logo=twitter\" alt=\"follow on Twitter\">\n    </a>\n</p>\n\nThis is an overview page, please visit [hotswapagent.org](http://hotswapagent.org/) for more information.\n\n### Overview\n***\n\nJava unlimited runtime class and resource redefinition.\n\nThe primary goal of this project was to eliminate the need for the traditional \"change code -> restart and wait... -> check\" development cycle. Over time, this concept \nhas evolved into a new paradigm within the Java ecosystem, allowing for real-time software development within a running application. This approach is even feasible \nin restricted environments, such as Docker containers.\n\n\n### IntelliJ - try HotswapHelper\nIf you're an IntelliJ user, you can simplify setup of HA and DCEVM by using the [IntelliJ HotSwapHelper](https://plugins.jetbrains.com/plugin/25171-hotswaphelper)\nplugin.\n\n\n### Easy to start\n\n1. **Download and Install:**\n\n    - **For Java 17/21:** Download the [latest JBR17 or JBR21](https://github.com/JetBrains/JetBrainsRuntime/releases). Since these versions do not include a built-in\n      Hotswap Agent, you will need to manually copy `hotswap-agent.jar` to the `lib/hotswap` folder. You can find the latest Hotswap Agent [here](https://github.com/HotswapProjects/HotswapAgent/releases).\n      Ensure that the file in the `lib/hotswap` folder is named `hotswap-agent.jar` without any version numbers in the filename.\n    \n    - **For Java 11:** Use [TravaJDK](https://github.com/TravaOpenJDK/trava-jdk-11-dcevm/releases), which has an integrated HotswapAgent, and install it as an alternative JDK.\n      Alternatively, TravaJDK includes an embedded HotswapAgent.\n    \n    - **For Java 8:** Use [jdk8-dcevm](https://github.com/dcevm/dcevm/releases) along with the [HotswapAgent](https://github.com/HotswapProjects/HotswapAgent/releases).\n\n2. **HotswapAgent Modes:**\n\n   Starting with `dcevm-11.0.9`, the HotswapAgent is disabled by default. You can enable support for HotswapAgent using JVM options in one of three modes:\n\n    - `-XX:HotswapAgent=fatjar` activates the internal fatjar HotswapAgent.\n    - `-XX:HotswapAgent=core` activates the internal core HotswapAgent.\n    - `-XX:HotswapAgent=external` configures JVM support for HotswapAgent and allows the user to supply an external `hotswap-agent.jar` using the `-javaagent:<path>/hotswap-agent.jar` option.\n\n   The `HotswapAgent=core` mode operates without additional plugins, except for core JVM plugins, resulting in faster performance due to reduced scanning and class copying tasks.\n   To use additional plugins, you need to configure them as Maven dependencies in your `pom.xml` file. On the other hand, the `HotswapAgent=fatjar` mode includes all plugins by default, which may slightly slow down application startup.\n\n3.Launching:\n\n* Java17/21: launch your application with the options `-XX:+AllowEnhancedClassRedefinition -XX:HotswapAgent=fatjar` to turn \n  on advanced hotswap (dcevm) and use Hotswap Agent fatjar release. As an alternative `core` or `external` modes can be used insted of `fatjar`.\n* Java11: launch your application with the options `-XX:HotswapAgent=fatjar` to use Hotswap Agent fatjar release.\n* Java8: launch your application with the options `-XXaltjvm=dcevm -javaagent:hotswap-agent.jar` to get a basic setup. Optionally you can add `hotswap-agent.properties` to your application to configure plugins and agent's behavior.\n\n3.Run your application:\n\nStart the application in debug mode, check that the agent and plugins are initialized correctly:\n\n        HOTSWAP AGENT: 9:49:29.548 INFO (org.hotswap.agent.HotswapAgent) - Loading Hotswap agent - unlimited runtime class redefinition.\n        HOTSWAP AGENT: 9:49:29.725 INFO (org.hotswap.agent.config.PluginRegistry) - Discovered plugins: [org.hotswap.agent.plugin.hotswapper.HotswapperPlugin, org.hotswap.agent.plugin.jvm.AnonymousClassPatchPlugin, org.hotswap.agent.plugin.hibernate.HibernatePlugin, org.hotswap.agent.plugin.spring.SpringPlugin, org.hotswap.agent.plugin.jetty.JettyPlugin, org.hotswap.agent.plugin.tomcat.TomcatPlugin, org.hotswap.agent.plugin.zk.ZkPlugin, org.hotswap.agent.plugin.logback.LogbackPlugin]\n        ...\n        HOTSWAP AGENT: 9:49:38.700 INFO (org.hotswap.agent.plugin.spring.SpringPlugin) - Spring plugin initialized - Spring core version '3.2.3.RELEASE'\n\n4.Check redefinition\n\nSave a changed resource and/or use the HotSwap feature of your IDE to reload changes\n\n### Plugins\nEach application framework (Spring, Hibernate, Logback, ...) needs a special reloading mechanism to keep\nup-to-date after class redefinition (e.g. Hibernate configuration reload after new entity class is introduced).\nHotswap agent works as a plugin system and is shipped preconfigured with all major framework plugins. It is easy\nto write your custom plugin even as part of your application.\n\n### Contribute\nThis project is very complex due to a lot of supported frameworks and various versions. Community contribution\nis mandatory to keep it alive. You can start by creating a plugin inside your application or by writing an\nexample/integration test. There is always a need for documentation improvement :-). Thank you for any help!\n\n\n### What is available?\n* Enhanced Java Hotswap - change method body, add/rename a method, field, ...The only unsupported operation is changing \n  the superclass. \n    * You can use standard Java Hotswap from IDE in debug mode to reload changed class\n    * or set autoHotswap property `-XXaltjvm=dcevm -javaagent:PATH_TO_AGENT\\hotswap-agent.jar=autoHotswap=true` to reload\n    changed classes after compilation. This setup allows even reload on a production system without a restart.\n* Automatic configuration - all local classes and resources, known to the running Java application, are automatically\n  discovered and watched for the reload (all files on the local filesystem, not inside any JAR file).\n* Extra classpath - Need change a runtime class inside dependent JAR? Use extraClasspath property to add any directory\nas a classpath to watch for class files.\n* Reload resource after a change - resources from the webapp directory are usually reloaded by the application server. But what about\n  other resources like src/main/resources? Use watchResources property to add any directory to watch for a resource change.\n* Framework support - through plugin-system, many frameworks are supported. New plugins can be easily added.\n* Fast - until the plugin is initialized, it does not consume any resources or slow down the application (see Runtime overhead for more information)\n\nShould you have any problems or questions, ask at [HotswapAgent forum](https://groups.google.com/forum/#!forum/hotswapagent).\n\nThis project is similar to [JRebel](http://zeroturnaround.com/software/jrebel/). The main differences are:\n\n* HotswapAgent (DCEVM) supports Java8, Java11 and Java17!\n* HotswapAgent does not need any additional configuration for basic project setup.\n* JRebel is currently more mature and contains more plugins.\n* JRebel is neither open source nor free.\n* JRebel modifies bytecode of all classes on reload. You need a special IDE plugin to fix debugging.\n* HotswapAgent extraClasspath is similar to JRebel <classpath> configuration\n* HotswapAgent adds watchResources configuration\n\n### Examples\nSee [HotswapAgentExamples](https://github.com/HotswapProjects/HotswapAgentExamples) GitHub project.\nThe purpose of an example application is:\n\n* complex automate integration tests (check various configurations before a release, see `run-tests.sh` script)\n* to check \"real world\" plugin usage during plugin development (i.e. inside a container)\n* to provide a working solution for typical application setups\n* sandbox to simulate issues for existing or new setups\n\nFeel free to fork/branch and create an application for your setup (functional, but as simple as possible).\nGeneral setups will be merged into the master.\n\n### IDE support\nNone needed :) Really! All changes are transparent and all you need to do is to download patch+agent and\nsetup your application/application server. Because we use standard java hotswap behaviour, your IDE will\nwork as expected. However, we work on IDE plugins to help with download & configuration.\n\nSome plugins are already available: \n#### [IntelliJ HotSwapHelper](https://plugins.jetbrains.com/plugin/25171-hotswaphelper) \n1. Add two action next to the \"Debug\" button in intellij, Run with hotswap, Debug with hotswap.\n2. When click the action,will set vm parameters for you,no need to set vm parameters manually.\n3. Source code and documentation: https://github.com/gejun123456/HotSwapHelper.\n\nConfiguration\n=============\nThe basic configuration is set to reload classes and resources from the classpath known to the running application\n(classloader). If you need a different configuration, add the hotswap-agent.properties file to the classpath root\n(e.g. `src/main/resources/hotswap-agent.properties`).\n\nDetail documentation of available properties and default values can be found in the [agent properties file](https://github.com/HotswapProjects/HotswapAgent/blob/master/hotswap-agent-core/src/main/resources/hotswap-agent.properties)\n\n### Hotswap agent command-line options\nFull syntax of command line options is:\n\n    -javaagent:[yourpath/]hotswap-agent.jar=[option1]=[value1],[option2]=[value2]\n\nHotswap agent accepts the following options:\n\n* autoHotswap=true - watch all .class files for change and automatically Hotswap the class in the running application\n (instead of running Hotswap from your IDE debugging session)\n* disablePlugin=[pluginName] - disable a plugin. Note that this will completely forbid the plugin to load\n    (opposite to disablePlugin option in hotswap-agent.properties, which will only disable the plugin for a classloader.\n    You can repeat this option for every plugin to disable.\n\n### Disable some plugins by vm option.\n* Add vm option -Dhotswapagent.disablePlugin=Spring,SpringBoot to disable plugins, works same as agent option disablePlugin in previous section.\n\n\nHow does it work?\n=================\n\n### DCEVM\nHotswap agent does the work of reloading resources and framework configuration (Spring, Hibernate, ...),\nbut it depends on the standard Java hotswap mechanism to reload classes. Standard Java hotswap allows\nonly method body change, which makes it practically unusable. DCEVM is a JVM (Hotspot) patch that allows almost any\nstructural class change on hotswap (with an exception to a hierarchy change). Although hotswap agent works\neven with standard java, we recommend using DCEVM (and all tutorials use DCEVM as target JVM).\n\n### Hotswap Agent\nHotswap agent is a plugin container with plugin manager, plugin registry, and several agent services\n(e.g. to watch for class/resource change). It helps with common tasks and classloading issues. It scans the classpath\nfor class annotated with @Plugin annotation, injects agent services, and registers reloading hooks. Runtime bytecode\nmodification is provided by javaasist library.\n\n### Plugins\nPlugins administered by Hotswap Agent are usually focused on a specific framework. For example, Spring plugin\nuses HA services to:\n\n* Modify root Spring classes to get Spring contexts and registered scan path\n* Watch for any resource change on a scan path\n* Watch for a hotswap of a class file within a scan path package\n* Reload bean definition after a change\n* ... and many others\n\n#### Java frameworks plugins:\n\n* [CXF-JAXRS](plugin/hotswap-agent-cxf-plugin/README.md) (3.x) - redefine JAXRS resource after resource class redefinition, reinject instance if integrated with Spring and CDI (Weld/OWB).\n* [Deltaspike](plugin/hotswap-agent-deltaspike-plugin/README.md) (1.x,2.x) - messages, ViewConfig, repository, proxy reloading. Deltaspike scoped CDI beans reinjection.\n* [ELResolver](plugin/hotswap-agent-el-resolver-plugin/README.md) (2.x-5.x) (JuelEL, Appache Commons EL, Oracle EL 3.0)- clear ELResolver cache on class change. Support hotswap for #{...} expressions.\n* [FreeMarker](plugin/hotswap-agent-freemarker-plugin/README.md) - clear the Apache Freemarker beans class-introspection cache on class definition change.\n* [Hibernate](plugin/hotswap-agent-hibernate-plugin/README.md) (3.x-6.x) - Reload Hibernate configuration after entity create/change.\n* [iBatis](plugin/hotswap-agent-ibatis-plugin/README.md) - iBatis configuration reload.\n* [IDEA](plugin/hotswap-agent-idea-plugin/README.md) - support for IntelliJ IDEA development in IDEA\n* [Jackson](plugin/hotswap-agent-jackson-plugin/README.md) - clears jackson internal caches when class redefined.\n* [Jersey1](plugin/hotswap-agent-jersey1-plugin/README.md) - reload Jersey1 container after root resource or provider class definition or redefinition.\n* [Jersey2](plugin/hotswap-agent-jersey2-plugin/README.md) - reload Jersey2 container after root resource or provider class definition or redefinition.\n* [Logback](plugin/hotswap-agent-logback-plugin/README.md) - Logback configuration reload.\n* [Log4j2](plugin/hotswap-agent-log4j2-plugin/README.md) - Log4j2 configuration reload.\n* [Mojarra](plugin/hotswap-agent-mojarra-plugin/README.md) (2.x) - support for application resource bundle changes (properties file). Support for ViewScoped beans reinjection/reloading.\n* [MyBatis](plugin/hotswap-agent-mybatis-plugin/README.md) (5.3) - reload configuration after mapper file changes\n* [MyFaces](plugin/hotswap-agent-myfaces-plugin/README.md) (2.x-4.x) - support for application resource bundle changes (properties files). Support for ViewScoped beans reinjection/reloading.\n* [OmniFaces](plugin/hotswap-agent-owb-plugin/README.md) - support for ViewScoped beans reinjection/reloading.\n* [OpenWebBeans](plugin/hotswap-agent-owb-plugin/README.md) - (CDI) (1.x-4.x) - reload bean class definition after class definition/change. Beans can be reloaded according strategy defined in property file.\n* [OsgiEquinox](plugin/hotswap-agent-osgiequinox-plugin/README.md) - Hotswap support for Eclipse plugin or Eclipse platform development.\n* [RestEasy](plugin/hotswap-agent-resteasy-registry-plugin/README.md) (2.x, 3.x) - Cleanups and registers class redefinitions.\n* [Spring](plugin/hotswap-agent-spring-plugin/README.md) (3.2.x+, 4.x, 5.x) - Reload Spring configuration after class definition/change. Redefinition time can be shortened with `-DSpringReloadDelayMillis=`. Default is 1600, but ~500 is usually reliable.\n* [Spring Boot](plugin/hotswap-agent-spring-boot-plugin/README.md) (1.5.x+, 2.0.x) - Dynamic reloading of Spring Boot configuration files in real-time.\n* [Vaadin](plugin/hotswap-agent-vaadin-plugin/README.md) (23.x, 24.x) - Update routes, template models and in practice, anything on the fly.\n* [WebObjects](plugin/hotswap-agent-webobjects-plugin/README.md) - Clear key value coding, component, action and validation caches after class change.\n* [Weld](plugin/hotswap-agent-weld-plugin/README.md) (CDI) (2.x-5.x) - reload bean class definition after class definition/change. Beans can be reloaded according strategy defined in property file.\n* [Wicket](plugin/hotswap-agent-wicket-plugin/README.md) - clear wicket caches if property files are changed\n* [WildFlyELResolver](plugin/hotswap-agent-wildfly-el-plugin/README.md) - Clear BeanELResolver after any class redefinition.\n* [ZK](plugin/hotswap-agent-zk-plugin/README.md) (5x-7x) - ZK Framework (http://www.zkoss.org/). Change library properties default values to disable caches, maintains Label cache and bean resolver cache.\n\n#### Servlet containers and application servers plugins:\n\n* [JBossModules](plugin/hotswap-agent-jbossmodules-plugin/README.md) - add extra class path to JBoss's module class loader. (Wildfly)\n* [Jetty](plugin/hotswap-agent-jetty-plugin/README.md) - add extra classpath to the app classloader. All versions supporting WebAppContext.getExtraClasspath should be supported.\n* [Tomcat](plugin/hotswap-agent-tomcat-plugin/README.md) (7.x,8.x,9.x,10.x) configure Apache Tomcat with extraClasspath and webApp property. Supports also GlassFish, Payara and Tomee7.\n* [Undertow](plugin/hotswap-agent-undertow-plugin/README.md) - add extra classpath, watchResources and webappDir to the undertow's resource manager.\n* [Weblogic](plugin/hotswap-agent-weblogic-plugin/README.md) - add extra classpath to the app classloader.\n\n#### JVM plugins - hotswapping enhancements:\n\n* [AnonymousClassPatch](hotswap-agent-core/src/main/java/org/hotswap/agent/plugin/jvm/README.md) - Swap anonymous inner class names to avoid not compatible changes.\n* [ClassInit](hotswap-agent-core/src/main/java/org/hotswap/agent/plugin/jvm/README.md) - initializes new static members/enum values after class/enum redefinition and keeps surviving static values. (Fix of known DCEVM limitation)\n* [Hotswapper](hotswap-agent-core/src/main/java/org/hotswap/agent/plugin/hotswapper/README.md) - Watch for any class file change and reload (hotswap) it on the fly via Java Platform Debugger Architecture (JPDA)\n* [Proxy](plugin/hotswap-agent-proxy-plugin/README.md) (supported com.sun.proxy, CGlib) - redefines proxy classes that implement or extend changed interfaces or classes.\n\nFind detailed documentation of each plugin in the plugin project main README.md file.\n\n### Runtime overhead\nIt depends on how many frameworks you use and which caches are disabled. Example measurements\nfor a large, real-world enterprise application based on Spring + Hibernate, run on Jetty.\n\n    Setup                        | Startup time\n    -----------------------------|-------------\n    Run (plain Java)             | 23s\n    Debug (plain Java)           | 24s\n    Debug (plain DCEVM)          | 28s\n    Agent - disabled all plugins | 31s\n    Agent - all plugins          | 35s\n\n\nHow to write a plugin\n=====================\nYou can write plugin directly as a part of your application. Set `pluginPackages=your.plugin.package` inside\nyour `hotswap-agent.properties` configuration to discover `@Plugin` annotated classes. You will also need\nagent JAR dependency to compile, but be careful NOT to add the JAR to your application; it must be loaded only\nas a javaagent. Maven dependency:\n\n        <dependency>\n            <groupId>org.hotswapagent</groupId>\n            <artifactId>HotswapAgent</artifactId>\n            <version>${project.version}</version>\n            <scope>provided</scope>\n        </dependency>\n\n\nSee [ExamplePlugin](https://github.com/HotswapProjects/HotswapAgentExamples/blob/master/custom-plugin/src/main/java/org/hotswap/agent/example/plugin/ExamplePlugin.java)\n(part of TestApplication) to go through a commented simple plugin. Read [agent readme](https://github.com/HotswapProjects/HotswapAgent/blob/master/README.md)\n to understand agent concepts. Check existing plugins source code for more examples.\n\n\nCreating Release\n================\nLaunch `run-tests.sh` script in the main directory. Currently, you have to set up JAVA_HOME location directory manually.\nAt least Java 11 with DCEVM should be checked before a release. All automatic tests are set to fail the whole script in case of any single test failure.\n\nGo to the directory representing repository root. In case DCEVM is named `dcevm`\n\n    mvn release:prepare\n    mvn release:perform\n\n\nCredits\n=======\nHotswap agent:\n\n* Jiri Bubnik - project coordinator, initial implementation\n* Alexandros Papadakis - Maven Versioning, Weld, JSF, Hibernate3, RestEasy, WildFly plugins\n* Erki Ehtla - Spring plugin, Proxy plugin\n* Vladimir Dvorak - ELResolver, OsgiEquinox, Weld, Owb, Deltaspike, Jvm, Jdk, JBossModules, ClassInit, JSF, Mybatis\n* Sergey Lysenko - Weld plugin\n* Samuel Pelletier - WebObjects plugin\n* Jan Tecl - web design\n* @liuzhengyang - jackson plugin\n* Lukasz Warzecha - Log4j2 plugin\n* @muwaiwai - iBatis plugin\n* Thomas Heigl - Wicket plugin\n* AJ Banck - FreeMarker plugin\n* Sinan Yumak - Mojarra, MyFaces plugins\n* smallfour - Mybatis plugin\n* @cvictory - Spring plugin, Spring Boot plugin\n* @homejim - MyBatis plugin, MyBatisPlus plugin\n\nDCEVM:\n\n* Thomas Würthinger - initial implementation.\n* Ivan Dubrov - former project coordinator, update to Java7+Java8, patches, build system (Gradle)\n* Kerstin Breitender - contributor.\n* Christoph Wimberger - contributor.\n* Vladimir Dvorak - java9,java11,jbr17,jbr21 migration, contributor\n* Jiri Bubnik - java9,java11 migration\n"
        },
        {
          "name": "hotswap-agent-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "hotswap-agent-parent",
          "type": "tree",
          "content": null
        },
        {
          "name": "hotswap-agent",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 5.4150390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.hotswapagent</groupId>\n    <artifactId>hotswap-agent-aggregator</artifactId>\n    <version>2.0.2</version>\n    <packaging>pom</packaging>\n\n    <name>Hotswap Agent Aggregator</name>\n    <description>Aggregator for Hotswap Agent projects</description>\n    <url>https://github.com/HotswapProjects/HotswapAgent</url>\n\n    <modules>\n        <module>hotswap-agent-parent</module>\n        <module>hotswap-agent-core</module>\n        <module>plugin/hotswap-agent-hibernate-plugin</module>\n        <module>plugin/hotswap-agent-hibernate-jakarta-plugin</module>\n        <module>plugin/hotswap-agent-hibernate3-plugin</module>\n        <module>plugin/hotswap-agent-spring-plugin</module>\n        <module>plugin/hotswap-agent-spring-boot-plugin</module>\n        <module>plugin/hotswap-agent-jersey1-plugin</module>\n        <module>plugin/hotswap-agent-jersey2-plugin</module>\n        <module>plugin/hotswap-agent-jetty-plugin</module>\n        <module>plugin/hotswap-agent-tomcat-plugin</module>\n        <module>plugin/hotswap-agent-zk-plugin</module>\n        <module>plugin/hotswap-agent-logback-plugin</module>\n        <module>plugin/hotswap-agent-log4j2-plugin</module>\n        <module>plugin/hotswap-agent-cdi-plugin</module>\n        <module>plugin/hotswap-agent-myfaces-plugin</module>\n        <module>plugin/hotswap-agent-mojarra-plugin</module>\n        <module>plugin/hotswap-agent-omnifaces-plugin</module>\n        <module>plugin/hotswap-agent-el-resolver-plugin</module>\n        <module>plugin/hotswap-agent-osgiequinox-plugin</module>\n        <module>plugin/hotswap-agent-owb-plugin</module>\n        <module>plugin/hotswap-agent-owb-jakarta-plugin</module>\n        <module>plugin/hotswap-agent-proxy-plugin</module>\n        <module>plugin/hotswap-agent-webobjects-plugin</module>\n        <module>plugin/hotswap-agent-weld-plugin</module>\n        <module>plugin/hotswap-agent-weld-jakarta-plugin</module>\n        <module>plugin/hotswap-agent-jbossmodules-plugin</module>\n        <module>plugin/hotswap-agent-resteasy-registry-plugin</module>\n        <module>plugin/hotswap-agent-deltaspike-plugin</module>\n        <module>plugin/hotswap-agent-deltaspike-jakarta-plugin</module>\n        <module>plugin/hotswap-agent-wildfly-el-plugin</module>\n        <module>plugin/hotswap-agent-glassfish-plugin</module>\n        <module>plugin/hotswap-agent-vaadin-plugin</module>\n        <module>plugin/hotswap-agent-wicket-plugin</module>\n        <module>plugin/hotswap-agent-cxf-plugin</module>\n        <module>plugin/hotswap-agent-freemarker-plugin</module>\n        <module>plugin/hotswap-agent-undertow-plugin</module>\n        <module>plugin/hotswap-agent-mybatis-plugin</module>\n        <module>plugin/hotswap-agent-ibatis-plugin</module>\n        <module>plugin/hotswap-agent-jackson-plugin</module>\n        <module>plugin/hotswap-agent-idea-plugin</module>\n        <module>plugin/hotswap-agent-weblogic-plugin</module>\n        <module>plugin/hotswap-agent-thymeleaf-plugin</module>\n        <module>plugin/hotswap-agent-velocity-plugin</module>\n        <module>plugin/hotswap-agent-plugins</module>\n        <module>plugin/hotswap-agent-sponge-plugin</module>\n        <module>plugin/hotswap-agent-mybatis-plus-plugin</module>\n        <module>hotswap-agent</module>\n    </modules>\n\n    <licenses>\n        <license>\n            <name>GNU General Public License (GPL)</name>\n            <url>http://www.gnu.org/licenses/gpl.txt</url>\n        </license>\n    </licenses>\n\n    <issueManagement>\n        <system>git</system>\n        <url>https://github.com/HotswapProjects/HotswapAgent/issues</url>\n    </issueManagement>\n\n    <scm>\n        <connection>scm:git:http://github.com/HotswapProjects/HotswapAgent.git</connection>\n        <developerConnection>scm:git:git@github.com/HotswapProjects/HotswapAgent.git</developerConnection>\n        <url>https://github.com/HotswapProjects/HotswapAgent</url>\n    </scm>\n\n    <developers>\n        <developer>\n            <id>bubnik</id>\n            <name>Jiri Bubnik</name>\n            <roles>\n                <role>Admin</role>\n            </roles>\n            <organizationUrl>http://jiribubnik.cz</organizationUrl>\n        </developer>\n    </developers>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-deploy-plugin</artifactId>\n                <version>3.1.1</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-release-plugin</artifactId>\n                <version>2.3.2</version>\n                <configuration>\n                    <autoVersionSubmodules>true</autoVersionSubmodules>\n                    <localCheckout>true</localCheckout>\n                    <pushChanges>false</pushChanges>\n                    <releaseProfiles>release</releaseProfiles>\n                    <tagNameFormat>@{project.version}</tagNameFormat>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>versions-maven-plugin</artifactId>\n                <version>2.1</version>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n"
        },
        {
          "name": "run-tests.sh",
          "type": "blob",
          "size": 1.484375,
          "content": "#!/bin/sh\n# simple script to run all tests and all versions. It fails with first failure\n# this should be replaced by build sever in the future\n\n# fail with first failed test\n#set -e\n\nfunction test {\n    echo \"################################################################\"\n    echo \"################################################################\"\n    echo \"#####                 Running with Java $1\"         ############\"\n    echo \"################################################################\"\n    echo \"################################################################\"\n\n    export JAVA_HOME=$1\n\n    echo \"Resolved version: \" `\"$JAVA_HOME/bin/java\" -XXaltjvm=dcevm -version` || echo \"$1 is not a valid Java installation with DCEVM.\"\n\n    mvn clean install -DskipTests\n\n    # run tests for different versions\n    cd plugin/hotswap-agent-spring-plugin; ./run-tests.sh; cd ../..\n#    cd plugin/hotswap-agent-spring-boot-plugin; ./run-tests.sh; cd ../..\n#    cd plugin/hotswap-agent-hibernate-plugin; ./run-tests.sh; cd ../..\n#    cd plugin/hotswap-agent-hibernate3-plugin; ./run-tests.sh; cd ../..\n#    cd plugin/hotswap-agent-weld-plugin; ./run-tests.sh; cd ../..\n#    cd plugin/hotswap-agent-owb-plugin; ./run-tests.sh; cd ../..\n#    cd plugin/hotswap-agent-deltaspike-plugin; ./run-tests.sh; cd ../..\n#    cd plugin/hotswap-agent-resteasy-registry-plugin; ./run-tests.sh; cd ../..\n}\n\n#test \"c:\\Program Files\\Java\\jdk1.7.0_45\"\ntest \"/Users/cvictory/Library/Java/JavaVirtualMachines/fastboot-11-3/Contents/Home\"\n"
        }
      ]
    }
  ]
}