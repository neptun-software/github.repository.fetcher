{
  "metadata": {
    "timestamp": 1736608964242,
    "page": 173,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Jacksgong/JKeyboardPanelSwitch",
      "stars": 4186,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1025390625,
          "content": ".gradle\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n/.idea/caches\n.DS_Store\n/build\n/captures\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.6396484375,
          "content": "language: android\n\njdk:\n# build-tools 25.0.0 need jdk8 or above.\n- oraclejdk8\nandroid:\n  components:\n    # Ref https://github.com/travis-ci/travis-ci/issues/6260.\n    - tools\n    - platform-tools\n    - build-tools-27.0.3\n    - android-27\n    - extra\n\nscript:\n  - ./gradlew clean okcheckDebug\n\nafter_script:\n    - cat ./app/build/outputs/lint-results.xml\n    - cat ./library/build/outputs/lint-results.xml\n\nsudo: false\n\nbefore_cache:\n  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock\n  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/\n\ncache:\n  directories:\n    - $HOME/.gradle/caches/\n    - $HOME/.gradle/wrapper/\n    - $HOME/.android/build-cache\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.4765625,
          "content": "# Change Log\n---\n\n> [中文迭代文档](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/CHANGELOG_zh.md)\n\n### Version 1.6.2 (2018-10-09)\n\n- Feat: carry back the clicked view to the SwitchClickListener closes #87\n\n### Version 1.6.1 (2018-01-12)\n\n- Fix(crash): Cover the case of user-root-view not ready on global-changed callback, refs: http://crashes.to/s/00beea75992\n\n### Version 1.6.0 (2016-08-11)\n\n- Add `KPSwitchConflictUtil#attach(panelLayout,focusView,switchClickListener,subPanelAndTriggers...)`/`KPSwitchConflictUtil#attach(panelLayout,focusView,subPanelAndTriggers...)` Used for `attach` the case of one `PanelLayout` contains more than one `SubPanel`. Closes #39.\n\n### Version 1.5.0 (2016-08-03)\n\n- Fix: In the `Translucent Status` theme，some devices(Such as:Samsung S7 edge) the arithmetic used for calculating keyboard height is wrong. Closes #35 。\n- Fix: In some devices(Such as: HuaWei Mate 7)The showing or hiding from the NavigationBar is mistaken for the keyboard showing or hiding. Merged #33 , Closes #34 , By @sollian 。\n- Add `KeyboardUtil#detach` convenient to remove the `ViewTreeObserver.OnGlobalLayoutListener` inside the architecture. Merged #33 , By @sollian 。\n\n### Version 1.4.6 (2016-04-26)\n\n- Support `Translucent Status` theme，the more detail please move to demo project or tutorial docs. Closes #27 。\n- Add the option configuration of `whether the height of the panel need to ensure equal to the height of the keyboard `: `setIgnoreRecommendHeight(boolean)` and the reference configuration params in the xml: `cn.dreamtobe.kpswitch.R.styleable#KPSwitchPanelLayout_ignore_recommend_height`。Closes #25.\n\n### Version 1.4.5 (2016-04-21)\n\n- Fix: The wrong arithmetic about calculating the keyboard height when the Page is extends from `Activity` or `FragmentActivity`, which result in the the layout conflict. Closes #24.\n\n### Version 1.4.4 (2016-04-19)\n\n- Fix: In some special cases(such as some inherited from `FragmentActivity`),it possible raise a bug in the wrong logic of determining whether the layout changed is triggered by the fullscreen theme page is being opened. Closes #21.\n\n### Version 1.4.3 (2016-04-13)\n\n- No longer clear focus automatically when switching to the panel when you use the `KPSwitchConflictUtil#attach`, since sometimes you want to show some emoji panel, which need the focus in the EditText view.\n- Add the `SwitchClickListener` param in the `KPSwitchConflictUtil#attach` method for listening the click event of showing the keyboard and the panel.\n\n### Version 1.4.2 (2016-04-06)\n\n- Fix raising warning because carry some deprecated classes.\n\n### Version 1.4.1 (2016-03-31)\n\n- Handle the conflict between the keyboard and the panel layout in the fullscreen theme.\n- Add some root layouts for panel: `FrameLayout`、`LinearLayout`、`RelativeLayout` and support to extend other layouts.\n- Adjust some interface to make they more decoupled: Wrap the logic of showing keyboard and calculating the keyboard height to `KeyboardUtil`; Wrap the logic of handling the conflict of switching the keyboard and panel to the `Handler` of each layout.\n\n### Version 1.3.0 (2016-01-19)\n\n- Fix: when the chat-Activity is translucent and the current interface is not fullscreen theme with the behind interface isn't fullscreen theme either, we mistake for the height change in `measure` is the keyboard did.\n\n### Version 1.2.1 (2015-12-14)\n\n- minSdkVersion 8->3\n\n### Version 1.2.0 (2015-12-13)\n\n- Fix: the `Activity` theme is translucent.\n\n### Version 1.1 (2015-11-10)\n---\n\ninitial release.\n"
        },
        {
          "name": "CHANGELOG_zh.md",
          "type": "blob",
          "size": 3.1806640625,
          "content": "# Change Log\n---\n\n> [Change log in english](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/CHANGELOG.md)\n\n### Version 1.6.2 (2018-10-09)\n\n- 需求: 在`SwitchClickListener`的点击事件返回被点击的`View`。 closes #87\n\n### Version 1.6.1 (2016-08-11)\n\n- 修复(crash): 覆盖在 `GlobalLayoutChanged`回调中用户层级父view还没有ready的情况。 refs: http://crashes.to/s/00beea75992\n\n### Version 1.6.0 (2016-08-11)\n\n- 添加 `KPSwitchConflictUtil#attach(panelLayout,focusView,switchClickListener,subPanelAndTriggers...)`/`KPSwitchConflictUtil#attach(panelLayout,focusView,subPanelAndTriggers...)` 用于attach一个PanelLayout中有多个SubPanel的情况。 Closes #39。\n\n### Version 1.5.0 (2016-08-03)\n\n- 修复 `Translucent Status`主题下，部分手机(如Samsung S7 edge)计算键盘高度出错。 Closes #35 。\n- 修复 某些手机(如华为Mate 7)NavigationBar的隐藏与显示，误判为键盘的隐藏与显示。 Merged #33 , Closes #34 , By @sollian 。\n- 添加 `KeyboardUtil#detach` 方便外面主动移除架构内的`ViewTreeObserver.OnGlobalLayoutListener`。 Merged #33 , By @sollian 。\n\n### Version 1.4.6 (2016-04-26)\n\n- 新增 支持`Translucent Status`主题，具体适配可以直接看Demo，适配接口依然非常简单。 Closes #27 。\n- 新增 开放配置 `是否需要让面板高度保持和键盘高度一致` 的接口: `setIgnoreRecommendHeight(boolean)`; 以及对应布局属性配置项 `cn.dreamtobe.kpswitch.R.styleable#KPSwitchPanelLayout_ignore_recommend_height`。Closes #25 。\n\n### Version 1.4.5 (2016-04-21)\n\n- 修复页面是继承自`Activity`或`FragmentActivity`的情况下，由于计算键盘是否显示出现错误，导致存在闪动的bug。Closes #24 。\n\n### Version 1.4.4 (2016-04-19)\n\n- 修复在一些特殊情况下如(一些继承自`FragmentActivity`的情况)有可能出现判定正在打开全屏布局的方案有误导致没有处理闪动的bug。Closes #21 。\n\n### Version 1.4.3 (2016-04-13)\n\n- `KPSwitchConflictUtil#attach`中又键盘切换到面板 以及 `KPSwitchConflictUtil#showPanel` 不再 `clearFocus`, 为了考虑到有可能是表情面板依然需要保留焦点的情况。\n- 在 `KPSwitchConflictUtil#attach` 中新增 `SwitchClickListener` 参数，用于监听 传入的触发面板键盘切换按钮 的点击事件。\n\n### Version 1.4.2 (2016-04-06)\n\n- 修复Jar包中带上了已经弃用的Class，导致Proguard报Warn的问题。\n\n### Version 1.4.1 (2016-03-31)\n\n- 基本处理了全屏主题下的键盘切换问题。\n- 为面板布局与根布局适配了`FrameLayout`、`LinearLayout`、`RelativeLayout`并支持拓展其他类型布局。\n- 调整接口，更加解耦: 键盘高度与是否显示逻辑封装于`KeyboardUtil`，布局闪动逻辑封装于不同布局的`Handler`中。\n\n### Version 1.3.0 (2016-01-19)\n\n- 修复如果聊天所在界面为透明背景，当前所在界面不是全屏，而背后的界面也不是全屏，导致刚进入时的measure高度变化误认为是键盘升起的bug.\n\n### Version 1.2.1 (2015-12-14)\n\n- minSdkVersion 8->3\n\n### Version 1.2.0 (2015-12-13)\n\n- 修复打开页面是透明主题Activity对组件的影响\n\n### Version 1.1 (2015-11-10)\n---\n\ninitial release.\n"
        },
        {
          "name": "FULLSCREEN_TUTORIAL.md",
          "type": "blob",
          "size": 6.5419921875,
          "content": "# The integration tutorial of The fullscreen theme Or The status bar is translucent with `fitsSystemWindows=false`\n\n> This tutorial cover the following two cases:\n\n> 1. The fullscreen theme (`(activity.getWindow().getAttributes().flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) != 0`)\n> 2. The status bar is translucent(`(activity.getWindow().getAttributes().flags & WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS) != 0`) and the root layout configuration with `fitsSystemWindows=false`.\n\n![][fullscreen_resolved_gif]\n\n## I. `AndroidManifest`\n\n> You can directly refer to [AndroidManifest.xml][AndroidManifest_xml_link]\n\n> The relate Activity，in the **configuration of `AndroidManifest`** `android:windowSoftInputMode=adjustUnspecified`，or without any special configuration, since the default value of `windowSoftInputMode` is `adjustUnspecified`.\n\n## II. The layout xml\n\n> In the layout xml, you need a **panel layout** ([KPSwitchFSPanelFrameLayout][KPSwitchFSPanelFrameLayout_link]/[KPSwitchFSPanelLinearLayout][KPSwitchFSPanelLinearLayout_link]/[KPSwitchFSPanelRelativeLayout][KPSwitchFSPanelRelativeLayout_link])\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n...\n    ...\n\n    <!-- Alternative: KPSwitchFSPanelFrameLayout、KPSwitchFSPanelLinearLayout、KPSwitchFSPanelRelativeLayout -->\n    <cn.dreamtobe.kpswitch.widget.KPSwitchFSPanelFrameLayout\n        android:id=\"@+id/panel_root\"\n        style=\"@style/Panel\"\n        android:visibility=\"gone\">\n\n        ...\n    </cn.dreamtobe.kpswitch.widget.KPSwitchFSPanelFrameLayout>\n\n...\n```\n\n\n## III. Activity:\n\n> You can directly refer to: [ChattingResolvedHandleByPlaceholderActivity.java][ChattingResolvedHandleByPlaceholderActivity_link]\n\n1. Handle some UI reactions([KPSwitchConflictUtil][KPSwitchConflictUtil_link])\n2. Listener the status of the keyboard(Height or Whether is showing)([KeyboardUtil#attach()][KeyboardUtil_attach_link])\n3. Record the status of keyboard in the `Activity#onPause` method，which used for restoring the status when the Activity from the background back to the foreground([IFSPanelConflictLayout#recordKeyboardStatus()][IFSPanelConflictLayout_recordKeyboardStatus_link])\n\nThe sample demonstrate:\n\n```java\n...\n\n// The panel layout\nprivate KPSwitchFSPanelLinearLayout mPanelLayout;\n// The cursor focus view, used for inputing content\nprivate EditText mSendEdt;\n// The view used for triggering showing between the keyboard and the panel.\nprivate ImageView mPlusIv;\n\n@Override\npublic void onCreate(Bundle saveInstanceState){\n    ...\n\n\n    mPanelLayout = (KPSwitchFSPanelLinearLayout)findViewById(R.id.panel_root);\n    mSendEdt = (EditText) findViewById(R.id.send_edt);\n    mPlusIv = (ImageView) findViewById(R.id.plus_iv);\n\n    /**\n     * This Util mainly to watch the keyboard status: showing or not And the keyboard height.\n     * There is also a method private a listener for upper to listener the keyboard status, the\n     * detail refer to {@Link KeyboardUtil#attach(Activity, IPanelHeightTarget, OnKeyboardShowingListener)}\n     */\n    KeyboardUtil.attach(this, mPanelLayout);\n\n    /**\n     * This Util mainly to assist handling the conflict between the keyboard and the panel layout.\n     * This method mainly to register some event, such as switch between the keyboard and the panel\n     * layout etc. The source code is very simple, you can check it out by yourself.\n     * There are also some toolset method: show-keyboard、show-panel-layout、switch-panel-keyboard、\n     * hide-panel-keyboard、etc.\n     *\n     * If you have more than one panel, please refer to :\n     * KPSwitchConflictUtil.attach(panelLayout, focusView, switchClickListener, subPanelAndTriggers...)\n     *\n     * @param panelRoot The panel layout.\n     * @param switchPanelKeyboardBtn The view used for switching between the keyboard and the panel layout.\n     * @param focusView The cursor focus view, this view is usually a EditText which used to receive inputing content.\n     */\n    KPSwitchConflictUtil.attach(mPanelLayout, mPlusIv, mSendEdt);\n\n}\n\n@Override\nprotected void onPause() {\n  super.onPause();\n  // Record the current status of the keyboard. When the Activity back to the foreground from the background,\n  // the keyboard status will be restore to the recorded status automatically.\n  mPanelLayout.recordKeyboardStatus(getWindow());\n}\n\n...\n\n// If you want the panel can be hidden when use press the back-button\n@Override\npublic boolean dispatchKeyEvent(KeyEvent event){\n    if (event.getAction() == KeyEvent.ACTION_UP &&\n            event.getKeyCode() == KeyEvent.KEYCODE_BACK) {\n        if (mPanelLayout.getVisibility() == View.VISIBLE) {\n            KPSwitchConflictUtil.hidePanelAndKeyboard(mPanelLayout);\n            return true;\n        }\n    }\n    return super.dispatchKeyEvent(event);\n}\n```\n\n---\n\n> More detail about the principle, please move to [README](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/README.md)；You also can move to: [The integration tutorial of The non-fullscreen theme Or The status bar is translucent with `fitsSystemWindows=true`](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/NON-FULLSCREEN_TUTORIAL.md)。\n\n\n[fullscreen_resolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/fullscreen_resolved.gif\n[AndroidManifest_xml_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/app/src/main/AndroidManifest.xml#L25\n[KPSwitchFSPanelFrameLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchFSPanelFrameLayout.java\n[KPSwitchFSPanelLinearLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchFSPanelLinearLayout.java\n[KPSwitchFSPanelRelativeLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchFSPanelRelativeLayout.java\n[ChattingResolvedHandleByPlaceholderActivity_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/app/src/main/java/cn/dreamtobe/kpswitch/demo/activity/ChattingResolvedHandleByPlaceholderActivity.java\n[KPSwitchConflictUtil_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KPSwitchConflictUtil.java\n[KeyboardUtil_attach_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KeyboardUtil.java#L134\n[IFSPanelConflictLayout_recordKeyboardStatus_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/IFSPanelConflictLayout.java#L37\n"
        },
        {
          "name": "FULLSCREEN_TUTORIAL_zh.md",
          "type": "blob",
          "size": 6.0302734375,
          "content": "# 全屏主题 或者 透明状态栏主题并且在`fitsSystemWindows=false` 情况下使用引导\n\n> 这个引导覆盖以下两个Case:\n\n> 1. 全屏主题 (`(activity.getWindow().getAttributes().flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) != 0`)\n> 2. 透明状态栏主题(`(activity.getWindow().getAttributes().flags & WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS) != 0`) 并且 根布局的 `fitsSystemWindows=false`。\n\n![][fullscreen_resolved_gif]\n\n## I. `AndroidManifest`\n\n> 可直接参照: [AndroidManifest.xml][AndroidManifest_xml_link]\n\n> 对应的Activity，在 **`AndroidManifest`中配置** `android:windowSoftInputMode=adjustUnspecified`，或者不配置，默认就是这个模式。\n\n## II. 需要处理页面的layout xml\n\n> 这边只需要用到一个 **面板布局** ([KPSwitchFSPanelFrameLayout][KPSwitchFSPanelFrameLayout_link]/[KPSwitchFSPanelLinearLayout][KPSwitchFSPanelLinearLayout_link]/[KPSwitchFSPanelRelativeLayout][KPSwitchFSPanelRelativeLayout_link])\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n...\n    ...\n\n    <!-- 可选用 KPSwitchFSPanelFrameLayout、KPSwitchFSPanelLinearLayout、KPSwitchFSPanelRelativeLayout -->\n    <cn.dreamtobe.kpswitch.widget.KPSwitchFSPanelFrameLayout\n        android:id=\"@+id/panel_root\"\n        style=\"@style/Panel\"\n        android:visibility=\"gone\">\n\n        ...\n    </cn.dreamtobe.kpswitch.widget.KPSwitchFSPanelFrameLayout>\n\n...\n```\n\n\n## III. 需要处理页面的Activity:\n\n> 可直接参照: [ChattingResolvedHandleByPlaceholderActivity.java][ChattingResolvedHandleByPlaceholderActivity_link]\n\n1. 主要是处理一些事件([KPSwitchConflictUtil][KPSwitchConflictUtil_link])\n2. 键盘状态(高度与显示与否)监听([KeyboardUtil#attach()][KeyboardUtil_attach_link])\n3. 在`onPause`时，记录键盘状态用于从后台回到当前布局，恢复键盘状态不至于冲突([IFSPanelConflictLayout#recordKeyboardStatus()][IFSPanelConflictLayout_recordKeyboardStatus_link])\n\n如下使用案例:\n\n```java\n...\n\n// 面板View\nprivate KPSwitchFSPanelLinearLayout mPanelLayout;\n// 键盘焦点View，用于输入内容\nprivate EditText mSendEdt;\n// 用于切换键盘与面板的按钮View\nprivate ImageView mPlusIv;\n\n@Override\npublic void onCreate(Bundle saveInstanceState){\n    ...\n\n\n    mPanelLayout = (KPSwitchFSPanelLinearLayout)findViewById(R.id.panel_root);\n    mSendEdt = (EditText) findViewById(R.id.send_edt);\n    mPlusIv = (ImageView) findViewById(R.id.plus_iv);\n\n    /**\n     * 这个Util主要是监控键盘的状态: 显示与否 以及 键盘的高度\n     * 这里也有提供给外界监听 键盘显示/隐藏 的监听器，具体参看\n     * 这个接口 {@Link KeyboardUtil#attach(Activity, IPanelHeightTarget, OnKeyboardShowingListener)}\n     */\n    KeyboardUtil.attach(this, mPanelLayout);\n\n    /**\n     * 这个Util主要是协助处理一些面板与键盘相关的事件。\n     * 这个方法主要是对一些相关事件进行注册，如切换面板与键盘等，具体参看源码，比较简单。\n     * 里面还提供了一些已经处理了冲突的工具方法: 显示面板；显示键盘；键盘面板切换；隐藏键盘与面板；\n     *\n     * 如果有多个面板的需求，可以参看: KPSwitchConflictUtil.attach(panelLayout, focusView, switchClickListener, subPanelAndTriggers...)\n     *\n     * @param panelRoot 面板的布局。\n     * @param switchPanelKeyboardBtn 用于触发切换面板与键盘的按钮。\n     * @param focusView 键盘弹起时会给这个View focus，收回时这个View会失去focus，通常是发送的EditText。\n     */\n    KPSwitchConflictUtil.attach(mPanelLayout, mPlusIv, mSendEdt);\n\n}\n\n@Override\nprotected void onPause() {\n  super.onPause();\n  // 用于记录当前的键盘状态，在从后台回到当前页面的时候，键盘状态能够正确的恢复并且不会导致布局冲突。\n  mPanelLayout.recordKeyboardStatus(getWindow());\n}\n\n...\n\n// 如果需要处理返回收起面板的话\n@Override\npublic boolean dispatchKeyEvent(KeyEvent event){\n    if (event.getAction() == KeyEvent.ACTION_UP &&\n            event.getKeyCode() == KeyEvent.KEYCODE_BACK) {\n        if (mPanelLayout.getVisibility() == View.VISIBLE) {\n            KPSwitchConflictUtil.hidePanelAndKeyboard(mPanelLayout);\n            return true;\n        }\n    }\n    return super.dispatchKeyEvent(event);\n}\n```\n\n---\n\n> 更多原理相关移步[README](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/README_zh.md)；也可移步参看: [非全屏主题情况下使用引导](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/NON-FULLSCREEN_TUTORIAL_zh.md)。\n\n\n[fullscreen_resolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/fullscreen_resolved.gif\n[AndroidManifest_xml_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/app/src/main/AndroidManifest.xml#L25\n[KPSwitchFSPanelFrameLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchFSPanelFrameLayout.java\n[KPSwitchFSPanelLinearLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchFSPanelLinearLayout.java\n[KPSwitchFSPanelRelativeLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchFSPanelRelativeLayout.java\n[ChattingResolvedHandleByPlaceholderActivity_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/app/src/main/java/cn/dreamtobe/kpswitch/demo/activity/ChattingResolvedHandleByPlaceholderActivity.java\n[KPSwitchConflictUtil_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KPSwitchConflictUtil.java\n[KeyboardUtil_attach_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KeyboardUtil.java#L134\n[IFSPanelConflictLayout_recordKeyboardStatus_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/IFSPanelConflictLayout.java#L37\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.1015625,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (C) 2015-2017 Jacksgong(blog.dreamtobe.cn)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NON-FULLSCREEN_TUTORIAL.md",
          "type": "blob",
          "size": 7.30859375,
          "content": "# The integration tutorial of The non-fullscreen theme Or The status bar is translucent with `fitsSystemWindows=true`\n\n> This tutorial covers following two cases:\n\n> 1. The theme is non-fullscreen (`(activity.getWindow().getAttributes().flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) == 0`) 。\n> 2. The status bar is translucent(`(activity.getWindow().getAttributes().flags & WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS) != 0`) and the root layout with  `fitsSystemWindows=true`。\n\n![][non-fullscreen_resolved_gif]\n\n## I. `AndroidManifest`\n\n> You can directly refer to: [AndroidManifest.xml][AndroidManifest_xml_link]\n\n> The relate Activity，in the **configuration of `AndroidManifest`**`android:windowSoftInputMode=adjustResize`\n\n```xml\n<manifest\n  ...>\n  <application\n    ...>\n\n    <activity\n      android:name=\".activity.ChattingActivity\"\n      android:windowSoftInputMode=adjustResize\"/>\n      ...\n  </application>\n  ...\n</manifest>\n```\n\n## II. The layout xml\n\n> You can directly refer to: [activity_chatting_resolved.xml][activity_chatting_resolved_xml_link]\n\n1. You need to use **The top layout** ([KPSwitchRootFrameLayout][KPSwitchRootFrameLayout_link]/[KPSwitchRootLinearLayout][KPSwitchRootLinearLayout_link]/[KPSwitchRootRelativeLayout][KPSwitchRootRelativeLayout_link])\n2. you need to use **The panel layout**([KPSwitchPanelFrameLayout][KPSwitchPanelFrameLayout_link]/[KPSwitchPanelLinearLayout][KPSwitchPanelLinearLayout_link]/[KPSwitchPanelRelativeLayout][KPSwitchPanelRelativeLayout_link])。\n\nThe sample demonstrate:\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- 可选用 KPSwitchRootLinearLayout、KPSwitchRootRelativeLayout、KPSwitchRootFrameLayout -->\n<cn.dreamtobe.kpswitch.widget.KPSwitchRootLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <!-- some content layout/view -->\n    ...\n\n    <!-- Alternative: KPSwitchPanelLinearLayout、KPSwitchPanelRelativeLayout、KPSwitchPanelFrameLayout -->\n    <cn.dreamtobe.kpswitch.widget.KPSwitchPanelLinearLayout\n        android:id=\"@+id/panel_root\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"@dimen/panel_height\"\n        android:visibility=\"gone\">\n        <!-- The content in panel layout -->\n        ...\n    </cn.dreamtobe.kpswitch.widget.KPSwitchPanelLinearLayout>\n\n</cn.dreamtobe.kpswitch.widget.KPSwitchRootLinearLayout>\n```\n\n## III. Activity:\n\n> You can directly refer to: [ChattingResolvedActivity.java][ChattingResolvedActivity_link]\n\n1. Handle some events([KPSwitchConflictUtil][KPSwitchConflictUtil_link])\n2. Listener the keyboard status(Height and whether is showing)([KeyboardUtil#attach()][KeyboardUtil_attach_link])\n\nThe sample demonstrate:\n\n```java\n...\n\n// The panel layout.\nprivate KPSwitchPanelLinearLayout mPanelLayout;\n// The cursor focus view, used for receiving the input content\nprivate EditText mSendEdt;\n// The view used for triggering switch between the keyboard and the panel layout.\nprivate ImageView mPlusIv;\n\n@Override\npublic void onCreate(Bundle saveInstanceState){\n    ...\n\n    mPanelLayout = (KPSwitchPanelLinearLayout)findViewById(R.id.panel_root);\n    mSendEdt = (EditText) findViewById(R.id.send_edt);\n    mPlusIv = (ImageView) findViewById(R.id.plus_iv);\n\n    /**\n     * This Util mainly to watch the keyboard status: showing or not And the keyboard height.\n     * There is also a method private a listener for upper to listener the keyboard status, the\n     * detail refer to {@Link KeyboardUtil#attach(Activity, IPanelHeightTarget, OnKeyboardShowingListener)}\n     */\n    KeyboardUtil.attach(this, mPanelLayout);\n\n    /**\n     * This Util mainly to assist handling the conflict between the keyboard and the panel layout.\n     * This method mainly to register some event, such as switch between the keyboard and the panel\n     * layout etc. The source code is very simple, you can check it out by yourself.\n     * There are also some toolset method: show-keyboard、show-panel-layout、switch-panel-keyboard、\n     * hide-panel-keyboard、etc.\n     *\n     * If you have more than one panel, please refer to :\n     * KPSwitchConflictUtil.attach(panelLayout, focusView, switchClickListener, subPanelAndTriggers...)\n     *\n     * @param panelRoot The panel layout.\n     * @param switchPanelKeyboardBtn The view used for switching between the keyboard and the panel layout.\n     * @param focusView The cursor focus view, this view is usually a EditText which used to receive inputing content.\n     */\n    KPSwitchConflictUtil.attach(mPanelLayout, mPlusIv, mSendEdt);\n\n}\n\n...\n\n...\n\n// If you want the panel can be hidden when use press the back-button\n@Override\npublic boolean dispatchKeyEvent(KeyEvent event){\n    if (event.getAction() == KeyEvent.ACTION_UP &&\n            event.getKeyCode() == KeyEvent.KEYCODE_BACK) {\n        if (mPanelLayout.getVisibility() == View.VISIBLE) {\n            KPSwitchConflictUtil.hidePanelAndKeyboard(mPanelLayout);\n            return true;\n        }\n    }\n    return super.dispatchKeyEvent(event);\n}\n```\n\n---\n\n> More detail about the principle, please move to [README](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/README.md)；You also can move to: [The integration tutorial of The fullscreen theme Or The status bar is translucent with `fitsSystemWindows=false`](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/FULLSCREEN_TUTORIAL.md)。\n\n[non-fullscreen_resolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/non-fullscreen_resolved.gif\n[AndroidManifest_xml_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/app/src/main/AndroidManifest.xml\n[activity_chatting_resolved_xml_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/app/src/main/res/layout/activity_chatting_resolved.xml\n[KPSwitchRootFrameLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchRootFrameLayout.java\n[KPSwitchPanelLinearLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchPanelLinearLayout.java\n[KPSwitchPanelRelativeLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchPanelRelativeLayout.java\n[KPSwitchPanelFrameLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchPanelFrameLayout.java\n[KPSwitchRootRelativeLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchRootRelativeLayout.java\n[KPSwitchRootLinearLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchRootLinearLayout.java\n[ChattingResolvedActivity_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/app/src/main/java/cn/dreamtobe/kpswitch/demo/activity/ChattingResolvedActivity.java\n[KPSwitchConflictUtil_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KPSwitchConflictUtil.java\n[KeyboardUtil_attach_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KeyboardUtil.java#L134\n"
        },
        {
          "name": "NON-FULLSCREEN_TUTORIAL_zh.md",
          "type": "blob",
          "size": 6.8447265625,
          "content": "# 非全屏主题 或者 透明状态栏主题并且在`fitsSystemWindows=true` 情况下使用引导\n\n> 这个引导覆盖以下两个Case:\n\n> 1. 非全屏主题 (`(activity.getWindow().getAttributes().flags & WindowManager.LayoutParams.FLAG_FULLSCREEN) == 0`) 。\n> 2. 透明状态栏主题(`(activity.getWindow().getAttributes().flags & WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS) != 0`) 并且 根布局的 `fitsSystemWindows=true`。\n\n![][non-fullscreen_resolved_gif]\n\n## I. `AndroidManifest`\n\n> 可直接参照: [AndroidManifest.xml][AndroidManifest_xml_link]\n\n> 对应的Activity，在**`AndroidManifest`中配置**`android:windowSoftInputMode=adjustResize`\n\n```xml\n<manifest\n  ...>\n  <application\n    ...>\n\n    <activity\n      android:name=\".activity.ChattingActivity\"\n      android:windowSoftInputMode=adjustResize\"/>\n      ...\n  </application>\n  ...\n</manifest>\n```\n\n## II. 需要处理页面的layout xml\n\n> 可直接参照: [activity_chatting_resolved.xml][activity_chatting_resolved_xml_link]\n\n1. 需要用到 **最上层布局** ([KPSwitchRootFrameLayout][KPSwitchRootFrameLayout_link]/[KPSwitchRootLinearLayout][KPSwitchRootLinearLayout_link]/[KPSwitchRootRelativeLayout][KPSwitchRootRelativeLayout_link])\n2. 需要用到 **面板布局**([KPSwitchPanelFrameLayout][KPSwitchPanelFrameLayout_link]/[KPSwitchPanelLinearLayout][KPSwitchPanelLinearLayout_link]/[KPSwitchPanelRelativeLayout][KPSwitchPanelRelativeLayout_link])。\n\n简单案例:\n\n```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<!-- 可选用 KPSwitchRootLinearLayout、KPSwitchRootRelativeLayout、KPSwitchRootFrameLayout -->\n<cn.dreamtobe.kpswitch.widget.KPSwitchRootLinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\">\n\n    <!-- 布局内容 -->\n    ...\n\n    <!-- 可选用 KPSwitchPanelLinearLayout、KPSwitchPanelRelativeLayout、KPSwitchPanelFrameLayout -->\n    <cn.dreamtobe.kpswitch.widget.KPSwitchPanelLinearLayout\n        android:id=\"@+id/panel_root\"\n        android:layout_width=\"fill_parent\"\n        android:layout_height=\"@dimen/panel_height\"\n        android:visibility=\"gone\">\n        <!-- 面板内容 -->\n        ...\n    </cn.dreamtobe.kpswitch.widget.KPSwitchPanelLinearLayout>\n\n</cn.dreamtobe.kpswitch.widget.KPSwitchRootLinearLayout>\n```\n\n## III. 需要处理页面的Activity:\n\n> 可直接参照: [ChattingResolvedActivity.java][ChattingResolvedActivity_link]\n\n1. 处理一些事件([KPSwitchConflictUtil][KPSwitchConflictUtil_link])\n2. 键盘状态(高度与显示与否)监听([KeyboardUtil#attach()][KeyboardUtil_attach_link])\n\n简单案例:\n\n```java\n...\n\n// 面板View\nprivate KPSwitchPanelLinearLayout mPanelLayout;\n// 键盘焦点View，用于输入内容\nprivate EditText mSendEdt;\n// 用于切换键盘与面板的按钮View\nprivate ImageView mPlusIv;\n\n@Override\npublic void onCreate(Bundle saveInstanceState){\n    ...\n\n    mPanelLayout = (KPSwitchPanelLinearLayout)findViewById(R.id.panel_root);\n    mSendEdt = (EditText) findViewById(R.id.send_edt);\n    mPlusIv = (ImageView) findViewById(R.id.plus_iv);\n\n    /**\n     * 这个Util主要是监控键盘的状态: 显示与否 以及 键盘的高度\n     * 这里也有提供给外界监听 键盘显示/隐藏 的监听器，具体参看\n     * 这个接口 {@Link KeyboardUtil#attach(Activity, IPanelHeightTarget, OnKeyboardShowingListener)}\n     */\n    KeyboardUtil.attach(this, mPanelLayout);\n\n    /**\n     * 这个Util主要是协助处理一些面板与键盘相关的事件。\n     * 这个方法主要是对一些相关事件进行注册，如切换面板与键盘等，具体参看源码，比较简单。\n     * 里面还提供了一些已经处理了冲突的工具方法: 显示面板；显示键盘；键盘面板切换；隐藏键盘与面板；\n     *\n     * 如果有多个面板的需求，可以参看: KPSwitchConflictUtil.attach(panelLayout, focusView, )\n     *\n     * @param panelRoot 面板的布局。\n     * @param switchPanelKeyboardBtn 用于触发切换面板与键盘的按钮。\n     * @param focusView 键盘弹起时会给这个View focus，收回时这个View会失去focus，通常是发送的EditText。\n     */\n    KPSwitchConflictUtil.attach(mPanelLayout, mPlusIv, mSendEdt);\n\n}\n\n...\n\n...\n\n// 如果需要处理返回收起面板的话\n@Override\npublic boolean dispatchKeyEvent(KeyEvent event){\n    if (event.getAction() == KeyEvent.ACTION_UP &&\n            event.getKeyCode() == KeyEvent.KEYCODE_BACK) {\n        if (mPanelLayout.getVisibility() == View.VISIBLE) {\n            KPSwitchConflictUtil.hidePanelAndKeyboard(mPanelLayout);\n            return true;\n        }\n    }\n    return super.dispatchKeyEvent(event);\n}\n```\n\n---\n\n> 更多原理相关移步[README](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/README_zh.md)；也可移步参看: [全屏主题情况下使用引导](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/FULLSCREEN_TUTORIAL_zh.md)。\n\n[non-fullscreen_resolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/non-fullscreen_resolved.gif\n[AndroidManifest_xml_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/app/src/main/AndroidManifest.xml\n[activity_chatting_resolved_xml_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/app/src/main/res/layout/activity_chatting_resolved.xml\n[KPSwitchRootFrameLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchRootFrameLayout.java\n[KPSwitchPanelLinearLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchPanelLinearLayout.java\n[KPSwitchPanelRelativeLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchPanelRelativeLayout.java\n[KPSwitchPanelFrameLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchPanelFrameLayout.java\n[KPSwitchRootRelativeLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchRootRelativeLayout.java\n[KPSwitchRootLinearLayout_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/widget/KPSwitchRootLinearLayout.java\n[ChattingResolvedActivity_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/app/src/main/java/cn/dreamtobe/kpswitch/demo/activity/ChattingResolvedActivity.java\n[KPSwitchConflictUtil_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KPSwitchConflictUtil.java\n[KeyboardUtil_attach_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KeyboardUtil.java#L134\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.3046875,
          "content": "# The handler for the keyboard and panel layout conflict in Android\n\n[![Download][bintray_svg]][bintray_link]\n[![Build Status][build_status_svg]][build_status_link]\n[![](https://img.shields.io/badge/SnapShot-1.6.3-origin.svg)](https://oss.sonatype.org/content/repositories/snapshots/cn/dreamtobe/kpswitch/library/)\n\n> [中文文档](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/README_zh.md)\n\n---\n\n> This solution was built When I was working in WeChat, what is used for resolving the layout conflict when you switch between the keyboard and the emoji-panel/function-panel.\n\n---\n\n> There is a post to declaration the core rules of this solution: [Switching between the panel and the keyboard in Wechat](http://blog.dreamtobe.cn/2015/02/07/Switching-between-the-panel-and-the-keyboard/)。\n\n![][non-fullscreen_resolved_gif]![][fullscreen_resolved_gif]\n![][adjust_resolved_gif]![][adjust_unresolved_gif]\n\n---\n\n## Welcome PR\n\n- Comments as much as possible.\n- Commit message format follow: [AngularJS's commit message convention](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#-git-commit-guidelines) .\n- The change of each commit as small as possible.\n\n---\n\n## INSTALLATION\n\nJKeyboardPanelSwitch is installed by adding the following dependency to your `build.gradle` file:\n\n```groovy\ncompile 'cn.dreamtobe.kpswitch:library:1.6.1'\n```\n\nIf you want to import snapshot version, We have already publish the snapshot version to [the sonatype](https://oss.sonatype.org/content/repositories/snapshots/cn/dreamtobe/kpswitch/) so you can import snapshot version after declare the following repository: \n```groovy\nallprojects {\n  repositories {\n      maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n  }\n}\n```\n\n## USAGE\n\n> Recommend `clone` the `demo` project and run it, I has already cover cases as much as possible in the demo project.\n\n![](https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/demo_snapshot.png)\n\n- [The integration tutorial of The non-fullscreen theme Or The status bar is translucent with `fitsSystemWindows=true`](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/NON-FULLSCREEN_TUTORIAL.md)\n- [The integration tutorial of The fullscreen theme Or The status bar is translucent with `fitsSystemWindows=false`](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/FULLSCREEN_TUTORIAL.md)\n\n## PRINCIPLE\n\n- The calculation about the height of keyboard and whether the keyboard is showing，Ref: [KeyboardUtil.KeyboardStatusListener#calculateKeyboardHeight][KeyboardUtil_calculateKeyboardHeight_link]、[KeyboardUtil.KeyboardStatusListener#calculateKeyboardShowing][KeyboardUtil_calculateKeyboardShowing_link]。\n- Handle the problem about the layout conflict，Ref: [KPSwitchRootLayoutHandler][KPSwitchRootLayoutHandler_link]，Besides the panel layout used in the case of the non-fullscreen theme: [KPSwitchPanelLayoutHandler][KPSwitchPanelLayoutHandler_link]；The panel layout used in case of the fullscreen theme: [KPSwitchFSPanelLayoutHandler][KPSwitchFSPanelLayoutHandler_link]。\n\n\n## License\n\n```\nCopyright 2015 Jacks gong.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n[bintray_link]: https://bintray.com/jacksgong/maven/JKeyboardPanelSwitch/_latestVersion\n[bintray_svg]: https://api.bintray.com/packages/jacksgong/maven/JKeyboardPanelSwitch/images/download.svg\n[fullscreen_resolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/fullscreen_resolved.gif\n[non-fullscreen_resolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/non-fullscreen_resolved.gif\n[adjust_resolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/adjust_resolved.gif\n[adjust_unresolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/adjust_unresolved.gif\n[build_status_svg]: https://travis-ci.org/Jacksgong/JKeyboardPanelSwitch.svg?branch=master\n[build_status_link]: https://travis-ci.org/Jacksgong/JKeyboardPanelSwitch\n[KeyboardUtil_calculateKeyboardHeight_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KeyboardUtil.java#L214\n[KeyboardUtil_calculateKeyboardShowing_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KeyboardUtil.java#L266\n[KPSwitchRootLayoutHandler_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/handler/KPSwitchRootLayoutHandler.java\n[KPSwitchPanelLayoutHandler_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/handler/KPSwitchPanelLayoutHandler.java\n[KPSwitchFSPanelLayoutHandler_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/handler/KPSwitchFSPanelLayoutHandler.java\n"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 5.2529296875,
          "content": "# Android键盘面板冲突 布局闪动处理方案\n\n[![Download][bintray_svg]][bintray_link]\n[![Build Status][build_status_svg]][build_status_link]\n[![](https://img.shields.io/badge/SnapShot-1.6.3-origin.svg)](https://oss.sonatype.org/content/repositories/snapshots/cn/dreamtobe/kpswitch/library/)\n\n> [README DOC](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/README.md)\n\n---\n\n> 起源，之前在微信工作的时候，为了给用户带来更好的基础体验，做了很多尝试，踩了很多输入法的坑，特别是动态调整键盘高度，二级页面是透明背景，魅族早期的Smart bar等, 后来逐一完善了，考虑到拥抱开源，看业界还是有很多应用存在类似问题。就有了这个repo\n\n---\n\n> 之前有写过一篇核心思想: [Switching between the panel and the keyboard in Wechat](http://blog.dreamtobe.cn/2015/02/07/Switching-between-the-panel-and-the-keyboard/)。\n\n![][non-fullscreen_resolved_gif]![][fullscreen_resolved_gif]\n![][adjust_resolved_gif]![][adjust_unresolved_gif]\n\n\n---\n\n## 欢迎提交 Pull requests\n\n- 尽量多的英文注解。\n- 每个提交尽量的细而精准。\n- Commit message 遵循: [AngularJS's commit message convention](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#-git-commit-guidelines)。\n\n---\n\n## 如何使用\n\n在`build.gradle`中引入:\n\n```groovy\ncompile 'cn.dreamtobe.kpswitch:library:1.6.1'\n```\n\n如果你希望引入SNAPSHOT版本，我们也有将SNAPSHOT版本推送到[SONATYPE的仓库](https://oss.sonatype.org/content/repositories/snapshots/cn/dreamtobe/kpswitch/)，因此你可以通过申明下面参库以引入SNAPSHOT版本:\n\n```groovy\nallprojects {\n  repositories {\n      maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n  }\n}\n```\n\n## 使用引导\n\n> 可以考虑`clone`下来跑下项目中的`demo`，已经用尽量简洁的代码尽量覆盖所有Case了。\n\n![](https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/demo_snapshot.png)\n\n- [非全屏主题 或者 透明状态栏主题并且在`fitsSystemWindows=true` 情况下使用引导](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/NON-FULLSCREEN_TUTORIAL_zh.md)\n- [全屏主题 或者 透明状态栏主题并且在 `fitsSystemWindows=false` 情况下使用引导](https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/FULLSCREEN_TUTORIAL_zh.md)\n\n## 基本原理\n\n- 键盘高度计算，以及键盘是否显示的计算，参看: [KeyboardUtil.KeyboardStatusListener#calculateKeyboardHeight][KeyboardUtil_calculateKeyboardHeight_link]、[KeyboardUtil.KeyboardStatusListener#calculateKeyboardShowing][KeyboardUtil_calculateKeyboardShowing_link]。\n- 处理闪动问题，参看: [KPSwitchRootLayoutHandler][KPSwitchRootLayoutHandler_link]，以及如果是非全屏主题用到的面板布局: [KPSwitchPanelLayoutHandler][KPSwitchPanelLayoutHandler_link]；如果是全屏主题用到的面板布局: [KPSwitchFSPanelLayoutHandler][KPSwitchFSPanelLayoutHandler_link]。\n\n\n## License\n\n```\nCopyright 2015 Jacks gong.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n[bintray_link]: https://bintray.com/jacksgong/maven/JKeyboardPanelSwitch/_latestVersion\n[bintray_svg]: https://api.bintray.com/packages/jacksgong/maven/JKeyboardPanelSwitch/images/download.svg\n[fullscreen_resolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/fullscreen_resolved.gif\n[non-fullscreen_resolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/non-fullscreen_resolved.gif\n[adjust_resolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/adjust_resolved.gif\n[adjust_unresolved_gif]: https://raw.githubusercontent.com/Jacksgong/JKeybordPanelSwitch/master/art/adjust_unresolved.gif\n[build_status_svg]: https://travis-ci.org/Jacksgong/JKeyboardPanelSwitch.svg?branch=master\n[build_status_link]: https://travis-ci.org/Jacksgong/JKeyboardPanelSwitch\n[KeyboardUtil_calculateKeyboardHeight_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KeyboardUtil.java#L214\n[KeyboardUtil_calculateKeyboardShowing_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/util/KeyboardUtil.java#L266\n[KPSwitchRootLayoutHandler_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/handler/KPSwitchRootLayoutHandler.java\n[KPSwitchPanelLayoutHandler_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/handler/KPSwitchPanelLayoutHandler.java\n[KPSwitchFSPanelLayoutHandler_link]: https://github.com/Jacksgong/JKeyboardPanelSwitch/blob/master/library/src/main/java/cn/dreamtobe/kpswitch/handler/KPSwitchFSPanelLayoutHandler.java\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.5400390625,
          "content": "buildscript {\n    repositories {\n        jcenter()\n        google()\n        maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.2.0-alpha14'\n        classpath 'com.liulishuo.okcheck:gradle:0.1.8-SNAPSHOT'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        google()\n    }\n\n    apply plugin: 'okcheck'\n}\n\nsubprojects {\n    group = GROUP\n    version = VERSION_NAME\n}\n"
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 5.9169921875,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n    \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n    \"http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n\n    <module name=\"SuppressWarningsFilter\" />\n\n    <!--module name=\"NewlineAtEndOfFile\"/-->\n    <module name=\"FileLength\"/>\n    <module name=\"FileTabCharacter\"/>\n\n    <!-- Trailing spaces -->\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"\\s+$\"/>\n        <property name=\"message\" value=\"Line has trailing spaces.\"/>\n    </module>\n\n    <!-- Space after 'for' and 'if' -->\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"^\\s*(for|if)[^ ]\\(\"/>\n        <property name=\"message\" value=\"Space needed before opening parenthesis.\"/>\n    </module>\n\n    <!-- For each spacing -->\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"^\\s*for \\(.*?([^ ]:|:[^ ])\"/>\n        <property name=\"message\" value=\"Space needed around ':' character.\"/>\n    </module>\n\n    <module name=\"TreeWalker\">\n        <!--<property name=\"cacheFile\" value=\"${checkstyle.cache.file}\"/>-->\n\n        <!-- Checks for Javadoc comments.                     -->\n        <!-- See http://checkstyle.sf.net/config_javadoc.html -->\n        <!--module name=\"JavadocMethod\"/-->\n        <!--module name=\"JavadocType\"/-->\n        <!--module name=\"JavadocVariable\"/-->\n        <!--module name=\"JavadocStyle\"/-->\n\n        <module name=\"SuppressWarningsHolder\" />\n\n        <!-- Checks for Naming Conventions.                  -->\n        <!-- See http://checkstyle.sf.net/config_naming.html -->\n        <module name=\"ConstantName\"/>\n        <module name=\"LocalFinalVariableName\"/>\n        <module name=\"LocalVariableName\"/>\n        <module name=\"MemberName\"/>\n        <module name=\"MethodName\">\n            <property name=\"format\" value=\"^[a-z][a-zA-Z0-9_]*$\"/>\n        </module>\n        <module name=\"PackageName\"/>\n        <module name=\"ParameterName\"/>\n        <!--<module name=\"StaticVariableName\"/>-->\n        <module name=\"TypeName\"/>\n\n\n        <!-- Checks for imports                              -->\n        <!-- See http://checkstyle.sf.net/config_import.html -->\n        <module name=\"AvoidStarImport\"/>\n        <module name=\"IllegalImport\"/>\n        <module name=\"RedundantImport\"/>\n        <module name=\"UnusedImports\">\n            <property name=\"processJavadoc\" value=\"true\"/>\n        </module>\n\n\n        <!-- Checks for Size Violations.                    -->\n        <!-- See http://checkstyle.sf.net/config_sizes.html -->\n        <module name=\"LineLength\">\n            <property name=\"max\" value=\"100\"/>\n        </module>\n        <module name=\"MethodLength\">\n            <property name=\"max\" value=\"200\"/>\n        </module>\n        <!--<module name=\"ParameterNumber\">-->\n        <!--<property name=\"max\" value=\"10\"/>-->\n        <!--</module>-->\n\n\n        <!-- Checks for whitespace                               -->\n        <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n        <module name=\"GenericWhitespace\"/>\n        <!--<module name=\"EmptyForIteratorPad\"/>-->\n        <module name=\"MethodParamPad\"/>\n        <module name=\"NoWhitespaceAfter\"/>\n        <module name=\"NoWhitespaceBefore\"/>\n        <module name=\"OperatorWrap\"/>\n        <module name=\"ParenPad\"/>\n        <module name=\"TypecastParenPad\"/>\n        <module name=\"WhitespaceAfter\"/>\n        <module name=\"WhitespaceAround\"/>\n\n\n        <!-- Modifier Checks                                    -->\n        <!-- See http://checkstyle.sf.net/config_modifiers.html -->\n        <module name=\"ModifierOrder\"/>\n        <module name=\"RedundantModifier\"/>\n\n\n        <!-- Checks for blocks. You know, those {}'s         -->\n        <!-- See http://checkstyle.sf.net/config_blocks.html -->\n        <module name=\"AvoidNestedBlocks\"/>\n        <module name=\"EmptyBlock\"/>\n        <module name=\"EmptyCatchBlock\">\n            <property name=\"exceptionVariableName\" value=\"expected|ignore\"/>\n        </module>\n        <module name=\"LeftCurly\">\n            <!-- No METHOD_DEF, because I think simple method can be one line -->\n            <property name=\"tokens\" value=\"INTERFACE_DEF, CLASS_DEF, ANNOTATION_DEF, ENUM_DEF,\n            CTOR_DEF, ENUM_CONSTANT_DEF, LITERAL_WHILE, LITERAL_TRY, LITERAL_CATCH,\n            LITERAL_FINALLY, LITERAL_SYNCHRONIZED, LITERAL_SWITCH, LITERAL_DO, LITERAL_IF,\n            LITERAL_ELSE, LITERAL_FOR, STATIC_INIT, OBJBLOCK, LAMBDA\"/>\n        </module>\n        <module name=\"NeedBraces\">\n            <property name=\"allowSingleLineStatement\" value=\"true\"/>\n        </module>\n        <module name=\"RightCurly\"/>\n\n\n        <!-- Checks for common coding problems               -->\n        <!-- See http://checkstyle.sf.net/config_coding.html -->\n        <!--module name=\"AvoidInlineConditionals\"/-->\n        <module name=\"CovariantEquals\"/>\n        <module name=\"EmptyStatement\"/>\n        <!--<module name=\"EqualsAvoidNull\"/>-->\n        <module name=\"EqualsHashCode\"/>\n        <!--module name=\"HiddenField\"/-->\n        <module name=\"IllegalInstantiation\"/>\n        <!--<module name=\"InnerAssignment\"/>-->\n        <!--module name=\"MagicNumber\"/-->\n        <module name=\"MissingSwitchDefault\"/>\n        <!--<module name=\"RedundantThrows\"/>-->\n        <module name=\"SimplifyBooleanExpression\"/>\n        <module name=\"SimplifyBooleanReturn\"/>\n\n        <!-- Checks for class design                         -->\n        <!-- See http://checkstyle.sf.net/config_design.html -->\n        <!--module name=\"DesignForExtension\"/-->\n        <!--module name=\"FinalClass\"/-->\n        <!--module name=\"HideUtilityClassConstructor\"/-->\n        <!--module name=\"InterfaceIsType\"/-->\n        <!--module name=\"VisibilityModifier\"/-->\n\n\n        <!-- Miscellaneous other checks.                   -->\n        <!-- See http://checkstyle.sf.net/config_misc.html -->\n        <!--module name=\"ArrayTypeStyle\"/-->\n        <!--module name=\"FinalParameters\"/-->\n        <!--module name=\"TodoComment\"/-->\n        <module name=\"UpperEll\"/>\n    </module>\n</module>"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.6357421875,
          "content": "VERSION_NAME=1.6.3-SNAPSHOT\nBUILD_TOOLS_VERSION=27.0.3\nCOMPILE_SDK_VERSION=27\n\nGROUP=cn.dreamtobe.kpswitch\n\nPOM_URL=https://github.com/Jacksgong/JKeyboardPanelSwitch\nISSUE_URL=https://github.com/Jacksgong/JKeyboardPanelSwitch/issues\nPOM_SCM_URL=https://github.com/Jacksgong/JKeyboardPanelSwitch\nPOM_SCM_CONNECTION=scm:git@github.com:Jacksgong/JKeyboardPanelSwitch.git\nPOM_SCM_DEV_CONNECTION=scm:git@github.com:Jacksgong/JKeyboardPanelSwitch.git\n\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\n\nPOM_DEVELOPER_ID=jacksgong\nPOM_DEVELOPER_NAME=Jacksgong.com.\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0263671875,
          "content": "include ':app', ':library'\n"
        }
      ]
    }
  ]
}