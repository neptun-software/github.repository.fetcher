{
  "metadata": {
    "timestamp": 1736708602143,
    "page": 908,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xuexiangjys/XUpdate",
      "stars": 2349,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1103515625,
          "content": "*.iml\n.gradle\n/LocalRepository\n/keystores\n/local.properties\n.idea\n.DS_Store\n/build\n/captures\n.externalNativeBuild"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "JitPackUpload.gradle",
          "type": "blob",
          "size": 1.283203125,
          "content": "apply plugin: 'com.github.dcendents.android-maven'\n\n// 指定group，com.github.<用户名>，这里我默认填写的是我的github账号，请换成你自己的。\ngroup='com.github.xuexiangjys'\n\n//---------------------------------------------\n\n\n// 指定编码\ntasks.withType(JavaCompile) {\n    options.encoding = \"UTF-8\"\n}\n\ntasks.withType(Javadoc) {\n    options.encoding = 'UTF-8'\n}\n\nif (project.hasProperty(\"android\")) { // Android libraries\n    task sourcesJar(type: Jar) {\n        classifier = 'sources'\n        from android.sourceSets.main.java.srcDirs\n    }\n\n    task javadoc(type: Javadoc) {\n        failOnError  false\n        source = android.sourceSets.main.java.srcDirs\n        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n    }\n} else { // Java libraries\n    task sourcesJar(type: Jar, dependsOn: classes) {\n        classifier = 'sources'\n        from sourceSets.main.allSource\n    }\n}\n\njavadoc {\n    options {\n        encoding \"UTF-8\"\n        charSet 'UTF-8'\n        author true\n        version true\n        links \"http://docs.oracle.com/javase/7/docs/api\"\n    }\n}\n\n// 制作文档(Javadoc)\ntask javadocJar(type: Jar, dependsOn: javadoc) {\n    classifier = 'javadoc'\n    from javadoc.destinationDir\n}\n\nartifacts {\n    archives javadocJar\n    archives sourcesJar\n}"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.095703125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2018 xuexiangjys(xuexiangjys@163.com)\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 24.4404296875,
          "content": "# XUpdate\n\n[![](https://jitpack.io/v/xuexiangjys/XUpdate.svg)](https://jitpack.io/#xuexiangjys/XUpdate)\n[![api](https://img.shields.io/badge/API-14+-brightgreen.svg)](https://android-arsenal.com/api?level=14)\n[![I](https://img.shields.io/github/issues/xuexiangjys/XUpdate.svg)](https://github.com/xuexiangjys/XUpdate/issues)\n[![Star](https://img.shields.io/github/stars/xuexiangjys/XUpdate.svg)](https://github.com/xuexiangjys/XUpdate)\n\n## [English](./README.md) | [Chinese](./README_ZH.md) ｜ [Video tutorial](https://space.bilibili.com/483850585/channel/detail?cid=164280)\n\nA lightweight, high availability Android version update framework. Click [instruction document](https://github.com/xuexiangjys/XUpdate/wiki) to experience it！\n\nPlease read [【wisdom of asking questions】](https://xuexiangjys.blog.csdn.net/article/details/83344235) before raising the issue and strictly follow the [issue template](https://github.com/xuexiangjys/XUpdate/issues/new/choose) fill in and save everyone's time.\n\nPlease read the [instruction document](https://github.com/xuexiangjys/XUpdate/wiki) carefully before use, important things are to be repeated for three time!!！\n\nPlease read the [instruction document](https://github.com/xuexiangjys/XUpdate/wiki) carefully before use, important things are to be repeated for three time!!！\n\nPlease read the [instruction document](https://github.com/xuexiangjys/XUpdate/wiki) carefully before use, important things are to be repeated for three time!!！\n\n## About me\n\n| WeChat public number   | juejin     |  zhihu    |  CSDN   |   jianshu   |   segmentfault  |   bilibili  |   toutiao\n|---------|---------|--------- |---------|---------|---------|---------|---------|\n| [我的Android开源之旅](https://t.1yb.co/Irse)  |  [Click me](https://juejin.im/user/598feef55188257d592e56ed/posts)    |   [Click me](https://www.zhihu.com/people/xuexiangjys/posts)       |   [Click me](https://xuexiangjys.blog.csdn.net/)  |   [Click me](https://www.jianshu.com/u/6bf605575337)  |   [Click me](https://segmentfault.com/u/xuexiangjys)  |   [Click me](https://space.bilibili.com/483850585)  |   [Click me](https://img.rruu.net/image/5ff34ff7b02dd)\n\n## Simplify use\n\nIf you want to use xupdate faster, reduce the difficulty of integration, support breakpoint continuation download and other expansion functions, you can try to use [XUpdateAPI](https://github.com/xuexiangjys/XUpdateAPI).\n\n## Rapid integration of X-Library\n\nIn order to facilitate the rapid integration of X-Library, I provide a template project for your reference: [https://github.com/xuexiangjys/TemplateAppProject](https://github.com/xuexiangjys/TemplateAppProject)\n\n---\n\n## Features\n\n* It supports `Post` or `Get` request to check version, and supports user-defined network requests.\n\n* Only version update under WiFi is supported。\n\n* Support silent download (background update) and automatic version update.\n\n* The user-friendly version update prompt pop-up window is provided to customize the theme style.\n\n* It supports user-defined version update checker, parser, prompter, downloader, install listener and error listener.\n\n* Support MD5 file verification, version ignore, version forced update and other functions.\n\n* It supports the user-defined file verification method【MD5 verification by default】.\n\n* Support custom request API interface.\n\n* Compatible with Android 6.0 ~ 12.0.\n\n* Support Chinese and English language (internationalization).\n\n* Support the use of the flutter plugin：[flutter_xupdate](https://github.com/xuexiangjys/flutter_xupdate)。\n\n* Support the use of react native plugin：[react-native-xupdate](https://github.com/xuexiangjys/react-native-xupdate)。\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/xuexiangjys/XUpdate.svg)](https://starchart.cc/xuexiangjys/XUpdate)\n\n## Composition structure\n\nThis framework refers to [AppUpdate](https://github.com/WVector/AppUpdate) some ideas and UI, the various parts of the version update are separated to form the following parts:\n\n* `IUpdateChecker`: Check for the latest version.\n\n* `IUpdateParser`: Parsing the data results returned by the server.\n\n* `IUpdatePrompter`: Display the latest version information.\n\n* `IUpdateDownloader`: Download the latest version of APK installation package.\n\n* `IUpdateHttpService`: The interface for network request.\n\nIn addition, there are two listeners:\n\n* `OnUpdateFailureListener`: Listening error\n\n* `OnInstallListener`: Callback of application installation\n\nUpdate core manager:\n\n* `IUpdateProxy`: Responsible for the process control of version update, calling update to start the version update process.\n\n## Update process\n\nProcess after calling `update`:\n\n```\nIUpdateProxy/XUpdate --- (update) ---> IUpdateChecker --->（Request the server to get the latest version information）---> IUpdateParser ---> (Parse the data returned by the server, and build the UpdateEntity）---> IUpdateProxy ---> (If there is no latest version, end it directly, otherwise proceed to the following process）\n\n    ---Automatic mode---> IUpdateDownloader ---> （Download the latest app apk） ---> Install application\n\n    ---Non automatic mode---> IUpdatePrompter ---> Prompt for version update\n\n                                                        ---> click Update ---> IUpdateDownloader ---> （Download the latest app apk） ---> Jump to application installation UI\n\n                                                        ---> Click cancel or ignore ---> End\n```\n\n[Click to view the framework UML design diagram](https://github.com/xuexiangjys/XUpdate/blob/master/img/xupdate_uml.png)\n\n---\n\n## 1、Demonstration\n\n* Default version update\n\n![xupdate_default.png](./img/xupdate_default.png)\n\n* Background update\n\n![xupdate_background.png](./img/xupdate_background.png)\n\n* Force version update\n\n![xupdate_force.png](./img/xupdate_force.png)\n\n* Ignored version update\n\n![xupdate_ignore.png](./img/xupdate_ignore.png)\n\n* Custom pop up theme\n\n![xupdate_custom.png](./img/xupdate_custom.png)\n\n* Use the system pop-up prompt\n\n![xupdate_system.png](./img/xupdate_system.png)\n\n### Demo update background service\n\nBecause GitHub is slow to visit recently, if you need to experience xupdate better, you can [Click to build a simple version update service](https://github.com/xuexiangjys/XUpdateService).\n\n### Demo Download\n\n#### Pgyer Download\n\n> Pgyer Download password: xuexiangjys\n\n[![downloads](https://img.shields.io/badge/downloads-2.1M-blue.svg)](https://www.pgyer.com/xupdate)\n\n[![xupdate_download_pugongying.png](./img/download_pugongying.png)](https://www.pgyer.com/xupdate)\n\n#### GitHub Download\n\n[![downloads](https://img.shields.io/badge/downloads-2.1M-blue.svg)](https://github.com/xuexiangjys/XUpdate/blob/master/apk/xupdate_demo_1.0.apk?raw=true)\n\n[![xupdate_download.png](./img/download.png)](https://github.com/xuexiangjys/XUpdate/blob/master/apk/xupdate_demo_1.0.apk?raw=true)\n\n---\n\n## 2、Quick integration guide\n\n> At present, it supports the use of the mainstream development tool AndroidStudio and add dependency by configures `build.gradle` directly.\n\n### 2.1、Add gradle dependency\n\n1.In the project root directory `build.gradle`:\n\n```\nallprojects {\n     repositories {\n        ...\n        maven { url \"https://jitpack.io\" }\n    }\n}\n```\n\n2. Then add in the dependencies of `build.gradle` of the application project (usually app):\n\nThe following is the version description. Choose one.\n\n* androidx project: above 2.0.0\n\n```\ndependencies {\n  ...\n  // androidx project\n  implementation 'com.github.xuexiangjys:XUpdate:2.1.5'\n}\n```\n\n* support project: below 1.1.6\n\n```\ndependencies {\n  ...\n  // support project\n  implementation 'com.github.xuexiangjys:XUpdate:1.1.6'\n}\n```\n\n### 2.2、Initialization\n\nInitialize settings at the top of the application:\n\n```\nXUpdate.get()\n    .debug(true)\n    .isWifiOnly(true)                                               // By default, only version updates are checked under WiFi\n    .isGet(true)                                                    // The default setting uses Get request to check versions\n    .isAutoMode(false)                                              // The default setting is non automatic mode\n    .param(\"versionCode\", UpdateUtils.getVersionCode(this))         // Set default public request parameters\n    .param(\"appKey\", getPackageName())\n    .setOnUpdateFailureListener(new OnUpdateFailureListener() {     // Set listening for version update errors\n        @Override\n        public void onFailure(UpdateError error) {\n            if (error.getCode() != CHECK_NO_NEW_VERSION) {          // Handling different errors\n                ToastUtils.toast(error.toString());\n            }\n        }\n    })\n    .supportSilentInstall(true)                                     // Set whether silent installation is supported. The default is true\n    .setIUpdateHttpService(new OKHttpUpdateHttpService())           // This must be set! Realize the network request function.\n    .init(this);                                                    // This must be initialized\n```\n\n【note】: if there is any problem, you can open debug mode to track the problem. If you also need to log on disk, you can implement the following interface.\n\n```\nXUpdate.get().setILogger(new ILogger() {\n    @Override\n    public void log(int priority, String tag, String message, Throwable t) {\n        // Realize the function of logging\n    }\n});\n```\n\n### 2.3、Version update entity information\n\n(1) UpdateEntity\n\nField name | Type | Default value | Description\n:-|:-:|:-:|:-\nmHasUpdate | boolean | false | Whether have the latest version\nmIsForce | boolean | false | Force installation: app cannot be used without installation\nmIsIgnorable | boolean | false | Whether the version can be ignored\nmVersionCode | int | 0 | Latest version code\nmVersionName | String | unknown_version | Latest version name\nmUpdateContent | String | \"\" | Update content\nmDownloadEntity | DownloadEntity | ／ | Download information entity\nmIsSilent | boolean | false | Whether to download silently: when there is a new version, do not prompt to download directly\nmIsAutoInstall | boolean | true | Whether to automatic install app when the download is completed\n\n(2) DownloadEntity\n\nField name | Type | Default value | Description\n:-|:-:|:-:|:-\nmDownloadUrl | String | \"\" | Download address\nmCacheDir | String | \"\" | File download directory\nmMd5 | String | \"\" | The encrypted check value of the downloaded file (MD5 encryption is used by default), which is used to verify and prevent the downloaded APK file from being replaced (the latest demo has a tool for calculating the check value). Note that the MD5 value here is not the MD5 value of the application signature file!\nmSize | long | 0 | Size of download file【unit: KB】\nmIsShowNotification | boolean | false | Whether to show download progress in the notification bar\n\n(3) PromptEntity\n\nField name | Type | Default value | Description\n:-|:-:|:-:|:-\nmThemeColor | int | R.color.xupdate_default_theme_color | Theme colors (background colors for progress bars and buttons)\nmTopResId | int | R.drawable.xupdate_bg_app_top | Top background image resource ID\nmTopDrawableTag | String | \"\" | Top background image drawable tag\nmButtonTextColor | int | 0 | Button text color\nmSupportBackgroundUpdate | boolean | false | Whether background updates are supported\nmWidthRatio | float | -1（Unconstrained） | The ratio of the width of the version update prompter to the screen\nmHeightRatio | float | -1（Unconstrained） | The ratio of the height of the version update prompter to the screen\nmIgnoreDownloadError | boolean | false | Whether to ignore the download exception (the update prompt box will not disappear if the download fails)\n\n### 2.4、File encryption verification method\n\nThe default file encryption verification method used in this framework is MD5 encryption. Of course, if you don't want to use MD5 encryption, you can also customize the File Encryptor `IFileEncryptor`. The following is the implementation of MD5 File Encryptor for reference:\n\n```\n/**\n * The default file encryption calculation uses MD5 encryption\n *\n * @author xuexiang\n * @since 2019-09-06 14:21\n */\npublic class DefaultFileEncryptor implements IFileEncryptor {\n    /**\n     * Encrypted files\n     *\n     * @param file\n     * @return\n     */\n    @Override\n    public String encryptFile(File file) {\n        return Md5Utils.getFileMD5(file);\n    }\n\n    /**\n     * Verify that the file is valid (whether the encryption is consistent)\n     *\n     * @param encrypt The encrypted value, is considered to be valid if encrypt is empty.\n     * @param file    File to be verified\n     * @return Whether the document is valid\n     */\n    @Override\n    public boolean isFileValid(String encrypt, File file) {\n        return TextUtils.isEmpty(encrypt) || encrypt.equalsIgnoreCase(encryptFile(file));\n    }\n}\n\n```\n\nFinally, call the `XUpdate.get().setIFileEncryptor` method, settings will take effect.\n\n---\n\n## 3、Version update\n\n### 3.1、Default version update\n\nYou can directly call the following code to complete the version update operation:\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl)\n        .update();\n```\n\nIt should be noted that with the default version update, the JSON format returned by the request server should include the following contents:\n\n```\n{\n  \"Code\": 0,\n  \"Msg\": \"\",\n  \"UpdateStatus\": 1,\n  \"VersionCode\": 3,\n  \"VersionName\": \"1.0.2\",\n  \"ModifyContent\": \"1、优化api接口。\\r\\n2、添加使用demo演示。\\r\\n3、新增自定义更新服务API接口。\\r\\n4、优化更新提示界面。\",\n  \"DownloadUrl\": \"https://raw.githubusercontent.com/xuexiangjys/XUpdate/master/apk/xupdate_demo_1.0.2.apk\",\n  \"ApkSize\": 2048,\n  \"ApkMd5\": \"\"\n}\n```\n\nField description:\n\n* Code: 0 means the request is successful, non-0 means failure.\n* Msg: Request error information.\n* UpdateStatus: 0 means no update, 1 means version update, no forced upgrade is required, and 2 represents version update and forced upgrade is required.\n* VersionCode: Version number, self incrementing. Used to compare whether the version is the latest version.\n* VersionName: Display name of version.\n* ModifyContent: Content of version update.\n* DownloadUrl: Download address of application APK file.\n* ApkSize: The file size of the application APK file, in KB.\n* ApkMd5: Apply the MD5 value of the APK file. If not, the APK cannot be guaranteed to be complete and will be downloaded again every time. The framework uses MD5 encryption by default.\n\n\n### 3.2、Automatic version update\n\nAutomatic version update: auto check version + auto download APK + auto install APK (silent install).\n\nYou only need to set `isAutoMode(true)`. However, if the device does not have root permission, it will not be able to complete automatic update (because the silent installation requires root permission).\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl)\n        .isAutoMode(true) // If you need to be completely unattended and update automatically, you need root permission【required for silent installation】\n        .update();\n```\n\n### 3.3、Support background update\n\nAfter enabling the background update, users can enter the background update after clicking the \"background update\" button.\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl)\n        .supportBackgroundUpdate(true)\n        .update();\n```\n\n### 3.4、Force version update\n\nIf the user does not update, the program will not work normally. The server only needs to return the `UpdateStatus` field to 2.\n\nOf course, if you customize the request return API, you only need to set the `mIsForce` field of `UpdateEntity` to true.\n\n### 3.5、Custom version update prompt pop-up theme\n\nBy setting the update top picture, theme color, button text color, width to height ratio, etc\n\n* promptThemeColor: Set theme color\n* promptButtonTextColor: Set the text color of the button\n* promptTopResId: Set top background image Resource ID\n* promptTopDrawable: Set top background image drawable\n* promptTopBitmap: Set top background image bitmap\n* promptWidthRatio: Set the ratio of the width of the version update prompt to the screen. The default value is -1(No constraint is required).\n* promptHeightRatio: Set the ratio of the height of the version update prompt to the screen. The default value is -1(No constraint is required).\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl)\n        .promptThemeColor(ResUtils.getColor(R.color.update_theme_color))\n        .promptButtonTextColor(Color.WHITE)\n        .promptTopResId(R.mipmap.bg_update_top)\n        .promptWidthRatio(0.7F)\n        .update();\n```\n\n### 3.6、Custom version update parser\n\nThe implementation of `IUpdateParser` interface can realize the user-defined parser.\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl3)\n        .updateParser(new CustomUpdateParser()) // Set up a custom version update parser\n        .update();\n\npublic class CustomUpdateParser implements IUpdateParser {\n    @Override\n    public UpdateEntity parseJson(String json) throws Exception {\n        CustomResult result = JsonUtil.fromJson(json, CustomResult.class);\n        if (result != null) {\n            return new UpdateEntity()\n                    .setHasUpdate(result.hasUpdate)\n                    .setIsIgnorable(result.isIgnorable)\n                    .setVersionCode(result.versionCode)\n                    .setVersionName(result.versionName)\n                    .setUpdateContent(result.updateLog)\n                    .setDownloadUrl(result.apkUrl)\n                    .setSize(result.apkSize);\n        }\n        return null;\n    }\n}\n\n```\n\n### 3.7、Custom version update checker + version update parser + version update prompter\n\n* By implementing the `IUpdateChecker` interface, the checker can be customized.\n\n* By implementing the `IUpdateParser` interface, the parser can be customized.\n\n* By implementing the `IUpdatePrompter` interface, the prompter can be customized.\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl3)\n        .updateChecker(new DefaultUpdateChecker() {\n            @Override\n            public void onBeforeCheck() {\n                super.onBeforeCheck();\n                CProgressDialogUtils.showProgressDialog(getActivity(), \"查询中...\");\n            }\n            @Override\n            public void onAfterCheck() {\n                super.onAfterCheck();\n                CProgressDialogUtils.cancelProgressDialog(getActivity());\n            }\n        })\n        .updateParser(new CustomUpdateParser())\n        .updatePrompter(new CustomUpdatePrompter(getActivity()))\n        .update();\n\n\npublic class CustomUpdatePrompter implements IUpdatePrompter {\n\n    private Context mContext;\n\n    public CustomUpdatePrompter(Context context) {\n        mContext = context;\n    }\n\n    @Override\n    public void showPrompt(@NonNull UpdateEntity updateEntity, @NonNull IUpdateProxy updateProxy, @NonNull PromptEntity promptEntity) {\n        showUpdatePrompt(updateEntity, updateProxy);\n    }\n\n    /**\n     * Show custom version update prompter\n     *\n     * @param updateEntity\n     * @param updateProxy\n     */\n    private void showUpdatePrompt(final @NonNull UpdateEntity updateEntity, final @NonNull IUpdateProxy updateProxy) {\n        String updateInfo = UpdateUtils.getDisplayUpdateInfo(mContext, updateEntity);\n\n        new AlertDialog.Builder(mContext)\n                .setTitle(String.format(\"是否升级到%s版本？\", updateEntity.getVersionName()))\n                .setMessage(updateInfo)\n                .setPositiveButton(\"升级\", new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        updateProxy.startDownload(updateEntity, new OnFileDownloadListener() {\n                            @Override\n                            public void onStart() {\n                                HProgressDialogUtils.showHorizontalProgressDialog(mContext, \"下载进度\", false);\n                            }\n\n                            @Override\n                            public void onProgress(float progress, long total) {\n                                HProgressDialogUtils.setProgress(Math.round(progress * 100));\n                            }\n\n                            @Override\n                            public boolean onCompleted(File file) {\n                                HProgressDialogUtils.cancel();\n                                return true;\n                            }\n\n                            @Override\n                            public void onError(Throwable throwable) {\n                                HProgressDialogUtils.cancel();\n                            }\n                        });\n                    }\n                })\n                .setNegativeButton(\"暂不升级\", null)\n                .setCancelable(false)\n                .create()\n                .show();\n    }\n```\n\n### 3.8、Only use the downloader function to download APK\n\n```\nXUpdate.newBuild(getActivity())\n        .apkCacheDir(PathUtils.getAppExtCachePath())  // Set the root directory of the download cache\n        .build()\n        .download(mDownloadUrl, new OnFileDownloadListener() {   // Set the download address and download listener\n            @Override\n            public void onStart() {\n                HProgressDialogUtils.showHorizontalProgressDialog(getContext(), \"下载进度\", false);\n            }\n\n            @Override\n            public void onProgress(float progress, long total) {\n                HProgressDialogUtils.setProgress(Math.round(progress * 100));\n            }\n\n            @Override\n            public boolean onCompleted(File file) {\n                HProgressDialogUtils.cancel();\n                ToastUtils.toast(\"apk下载完毕，文件路径：\" + file.getPath());\n                return false;\n            }\n\n            @Override\n            public void onError(Throwable throwable) {\n                HProgressDialogUtils.cancel();\n            }\n        });\n```\n\n### 3.9、Only use the APK installed features of XUpdate\n\n```\n_XUpdate.startInstallApk(getContext(), FileUtils.getFileByPath(PathUtils.getFilePathByUri(getContext(), data.getData()))); // Set the path where the file is located\n```\n\nIf your APK installation is different, you can implement your own APK installer. You only need to implement the `OnInstallListener` interface and use the `XUpdate.setOnInstallListener` set it to take effect.\n\n### 3.10、International\n\nDue to the limited level of the author, only Chinese and English are supported【the default language is English】. If you need to support other languages, you only need to create a new corresponding language file under the `res` of your own project to translate in multiple languages.\n\nPlease refer to ***[xupdate_strings.xml](https://github.com/xuexiangjys/XUpdate/blob/master/xupdate-lib/src/main/res/values-zh-rCN/xupdate_strings.xml)***。\n\nWhat? You don't know Android's multilingual configuration yet? I suggest you take a look at this article：[Android项目国际化多国语言适配](https://blog.csdn.net/qq_29769851/article/details/90606437)\n\n## Proguard\n\n```\n-keep class com.xuexiang.xupdate.entity.** { *; }\n\n// Note: if you use a custom API parser for parsing, you need to add confusion to your custom API entities. Here are the custom API entity obfuscation rules configured in this demo:\n-keep class com.xuexiang.xupdatedemo.entity.** { *; }\n\n```\n\n## Related links\n\n* [XUpdate Document](https://github.com/xuexiangjys/XUpdate/wiki)\n* [XUpdate Easy Use](https://github.com/xuexiangjys/XUpdateAPI)\n* [XUpdate Management Service](https://github.com/xuexiangjys/XUpdateService)\n* [XUpdate Background Management System](https://github.com/xuexiangjys/xupdate-management)\n* [XUpdate Flutter Plugin](https://github.com/xuexiangjys/flutter_xupdate)\n* [XUpdate React-Native Plugin](https://github.com/xuexiangjys/react-native-xupdate)\n* [Flutter Version update pop up components](https://github.com/xuexiangjys/flutter_update_dialog)\n\n---\n\n\n## Thanks\n\nhttps://github.com/WVector/AppUpdate\n\n## Sponsor\n\n> Your support is the driving force of my maintenance. I will list the list of all the reward personnel at the bottom as the voucher. Please leave the notes of the support items before rewarding!\n\n![pay.png](https://raw.githubusercontent.com/xuexiangjys/Resource/master/img/pay/pay.png)\n\nThank you for your sponsorship：\n\nName | Money | Platform\n:-|:-|:-\n*天 | 100￥ | WeChat\n*航 | 10￥ | Alipay\nX*? | 18.88￥ | WeChat\n*网 | 1￥ | WeChat\nJoe | 88.88￥ | WeChat\n\n## WeChat Subscription\n\n> More information, please scan my personal WeChat Subscription:【我的Android开源之旅】\n\n![](https://s1.ax1x.com/2022/04/27/LbGMJH.jpg)\n\n## Contact\n\n[![](https://img.shields.io/badge/QQGroup-720212425-blue.svg)](http://shang.qq.com/wpa/qunwpa?idkey=37ea606864cafa3c8a5d6b07f04fd672936a50fd6e535c13702baf705d57e6e8)\n\n"
        },
        {
          "name": "README_ZH.md",
          "type": "blob",
          "size": 23.0029296875,
          "content": "# XUpdate\n\n[![](https://jitpack.io/v/xuexiangjys/XUpdate.svg)](https://jitpack.io/#xuexiangjys/XUpdate)\n[![api](https://img.shields.io/badge/API-14+-brightgreen.svg)](https://android-arsenal.com/api?level=14)\n[![I](https://img.shields.io/github/issues/xuexiangjys/XUpdate.svg)](https://github.com/xuexiangjys/XUpdate/issues)\n[![Star](https://img.shields.io/github/stars/xuexiangjys/XUpdate.svg)](https://github.com/xuexiangjys/XUpdate)\n\n## [英文](./README.md) | [中文](./README_ZH.md) ｜ [视频教程](https://space.bilibili.com/483850585/channel/detail?cid=164280)\n\n一个轻量级、高可用性的Android版本更新框架。赶紧点击[使用说明文档](https://github.com/xuexiangjys/XUpdate/wiki)，体验一下吧！\n\n在提issue前，请先阅读[【提问的智慧】](https://xuexiangjys.blog.csdn.net/article/details/83344235)，并严格按照[issue模板](https://github.com/xuexiangjys/XUpdate/issues/new/choose)进行填写，节约大家的时间。\n\n在使用前，请一定要仔细阅读[使用说明文档](https://github.com/xuexiangjys/XUpdate/wiki),重要的事情说三遍！！！\n\n在使用前，请一定要仔细阅读[使用说明文档](https://github.com/xuexiangjys/XUpdate/wiki),重要的事情说三遍！！！\n\n在使用前，请一定要仔细阅读[使用说明文档](https://github.com/xuexiangjys/XUpdate/wiki),重要的事情说三遍！！！\n\n## 关于我\n\n| 公众号   | 掘金     |  知乎    |  CSDN   |   简书   |   思否  |   哔哩哔哩  |   今日头条\n|---------|---------|--------- |---------|---------|---------|---------|---------|\n| [我的Android开源之旅](https://s1.ax1x.com/2022/04/27/LbG8yt.png)  |  [点我](https://juejin.im/user/598feef55188257d592e56ed/posts)    |   [点我](https://www.zhihu.com/people/xuexiangjys/posts)       |   [点我](https://xuexiangjys.blog.csdn.net/)  |   [点我](https://www.jianshu.com/u/6bf605575337)  |   [点我](https://segmentfault.com/u/xuexiangjys)  |   [点我](https://space.bilibili.com/483850585)  |   [点我](https://img.rruu.net/image/5ff34ff7b02dd)\n\n## 简化使用\n\n想要更快地使用XUpdate，降低集成的难度，支持断点续传下载等拓展功能，可以尝试使用[XUpdateAPI](https://github.com/xuexiangjys/XUpdateAPI).\n\n## X系列库快速集成\n\n为了方便大家快速集成X系列框架库，我提供了一个空壳模版供大家参考使用: https://github.com/xuexiangjys/TemplateAppProject\n\n---\n\n## 特征\n\n* 支持post和get两种版本检查方式，支持自定义网络请求。\n\n* 支持设置只在wifi下进行版本更新。\n\n* 支持静默下载（后台更新）、自动版本更新。\n\n* 提供界面友好的版本更新提示弹窗，可自定义其主题样式。\n\n* 支持自定义版本更新检查器、版本更新解析器、版本更新提示器、版本更新下载器、版本更新安装、出错处理。\n\n* 支持MD5文件校验、版本忽略、版本强制更新等功能。\n\n* 支持自定义文件校验方法【默认是MD5校验】。\n\n* 支持自定义请求API接口。\n\n* 兼容Android6.0～12.0。\n\n* 支持中文和英文两种语言显示（国际化）。\n\n* 支持Flutter插件使用：[flutter_xupdate](https://github.com/xuexiangjys/flutter_xupdate)。\n\n* 支持React-Native插件使用：[react-native-xupdate](https://github.com/xuexiangjys/react-native-xupdate)。\n\n## Star趋势图\n\n[![Stargazers over time](https://starchart.cc/xuexiangjys/XUpdate.svg)](https://starchart.cc/xuexiangjys/XUpdate)\n\n## 组成结构\n\n本框架借鉴了[AppUpdate](https://github.com/WVector/AppUpdate)中的部分思想和UI界面，将版本更新中的各部分环节抽离出来，形成了如下几个部分：\n\n* 版本更新检查器`IUpdateChecker`：检查是否有最新版本。\n\n* 版本更新解析器`IUpdateParser`：解析服务端返回的数据结果。\n\n* 版本更新提示器`IUpdatePrompter`：展示最新的版本信息。\n\n* 版本更新下载器`IUpdateDownloader`：下载最新的版本APK安装包。\n\n* 网络请求服务接口`IUpdateHttpService`：定义了进行网络请求的相关接口。\n\n除此之外，还有两个监听器：\n\n* 版本更新失败的监听器`OnUpdateFailureListener`。\n\n* 版本更新apk安装的监听器`OnInstallListener`。\n\n更新调度核心：\n\n* 版本更新业务代理`IUpdateProxy`：负责版本更新的流程控制，调用update开始进行版本更新流程。\n\n## 更新流程\n\n调用update之后的流程：\n\n```\nIUpdateProxy/XUpdate --- (update) ---> IUpdateChecker --->（请求服务器，获取最新版本信息）---> IUpdateParser ---> (解析服务器返回的数据，并构建UpdateEntity版本更新实体）---> IUpdateProxy ---> (如无最新版本，直接结束，否则进行下面流程）\n\n    ---自动模式---> IUpdateDownloader ---> （下载最新的应用apk） ---> 安装应用\n\n    ---非自动模式---> IUpdatePrompter ---> 给出版本更新的提示\n\n                                                        ---> 用户点击更新 ---> IUpdateDownloader ---> （下载最新的应用apk） ---> 跳转到应用安装界面\n\n                                                        ---> 用户点击（取消或忽略） ---> 结束\n```\n\n[点击查看框架UML设计图](https://github.com/xuexiangjys/XUpdate/blob/master/img/xupdate_uml.png)\n\n---\n\n## 1、演示（请star支持）\n\n* 默认版本更新\n\n![xupdate_default.png](./img/xupdate_default.png)\n\n* 后台更新\n\n![xupdate_background.png](./img/xupdate_background.png)\n\n* 强制版本更新\n\n![xupdate_force.png](./img/xupdate_force.png)\n\n* 可忽略版本更新\n\n![xupdate_ignore.png](./img/xupdate_ignore.png)\n\n* 自定义提示弹窗主题\n\n![xupdate_custom.png](./img/xupdate_custom.png)\n\n* 使用系统弹窗提示\n\n![xupdate_system.png](./img/xupdate_system.png)\n\n### Demo更新后台服务\n\n由于github最近访问比较慢，如果需要更好地体验XUpdate，你可以[点击自己搭建一个简易的版本更新服务](https://github.com/xuexiangjys/XUpdateService)。\n\n### Demo下载\n\n#### 蒲公英下载\n\n> 蒲公英下载的密码: xuexiangjys\n\n[![downloads](https://img.shields.io/badge/downloads-2.1M-blue.svg)](https://www.pgyer.com/xupdate)\n\n[![xupdate_download_pugongying.png](./img/download_pugongying.png)](https://www.pgyer.com/xupdate)\n\n#### Github下载\n\n[![downloads](https://img.shields.io/badge/downloads-2.1M-blue.svg)](https://github.com/xuexiangjys/XUpdate/blob/master/apk/xupdate_demo_1.0.apk?raw=true)\n\n[![xupdate_download.png](./img/download.png)](https://github.com/xuexiangjys/XUpdate/blob/master/apk/xupdate_demo_1.0.apk?raw=true)\n\n---\n\n## 2、快速集成指南\n\n> 目前支持主流开发工具AndroidStudio的使用，直接配置build.gradle，增加依赖即可.\n\n### 2.1、Android Studio导入方法，添加Gradle依赖\n\n1.先在项目根目录的 `build.gradle` 的 repositories 添加:\n```\nallprojects {\n     repositories {\n        ...\n        maven { url \"https://jitpack.io\" }\n    }\n}\n```\n\n2.然后在应用项目(一般是app)的 `build.gradle` 的 dependencies 添加:\n\n以下是版本说明，选择一个即可。\n\n* androidx版本：2.0.0及以上\n\n```\ndependencies {\n  ...\n  // androidx版本\n  implementation 'com.github.xuexiangjys:XUpdate:2.1.5'\n}\n```\n\n* support版本：1.1.6及以下\n\n```\ndependencies {\n  ...\n  // support版本\n  implementation 'com.github.xuexiangjys:XUpdate:1.1.6'\n}\n```\n\n### 2.2、初始化XUpdate\n\n在Application进行初始化配置：\n\n```\nXUpdate.get()\n    .debug(true)\n    .isWifiOnly(true)                                               //默认设置只在wifi下检查版本更新\n    .isGet(true)                                                    //默认设置使用get请求检查版本\n    .isAutoMode(false)                                              //默认设置非自动模式，可根据具体使用配置\n    .param(\"versionCode\", UpdateUtils.getVersionCode(this))         //设置默认公共请求参数\n    .param(\"appKey\", getPackageName())\n    .setOnUpdateFailureListener(new OnUpdateFailureListener() {     //设置版本更新出错的监听\n        @Override\n        public void onFailure(UpdateError error) {\n            if (error.getCode() != CHECK_NO_NEW_VERSION) {          //对不同错误进行处理\n                ToastUtils.toast(error.toString());\n            }\n        }\n    })\n    .supportSilentInstall(true)                                     //设置是否支持静默安装，默认是true\n    .setIUpdateHttpService(new OKHttpUpdateHttpService())           //这个必须设置！实现网络请求功能。\n    .init(this);                                                    //这个必须初始化\n```\n\n【注意】：如果出现任何问题，可开启debug模式来追踪问题。如果你还需要将日志记录在磁盘上，可实现以下接口\n\n```\nXUpdate.get().setILogger(new ILogger() {\n    @Override\n    public void log(int priority, String tag, String message, Throwable t) {\n        //实现日志记录功能\n    }\n});\n```\n\n### 2.3、版本更新实体信息\n\n(1) UpdateEntity字段属性\n\n字段名 | 类型 | 默认值 | 备注\n:-|:-:|:-:|:-\nmHasUpdate | boolean | false | 是否有新版本\nmIsForce | boolean | false | 是否强制安装：不安装无法使用app\nmIsIgnorable | boolean | false | 是否可忽略该版本\nmVersionCode | int | 0 | 最新版本code\nmVersionName | String | unknown_version | 最新版本名称\nmUpdateContent | String | \"\" | 更新内容\nmDownloadEntity | DownloadEntity | ／ | 下载信息实体\nmIsSilent | boolean | false | 是否静默下载：有新版本时不提示直接下载\nmIsAutoInstall | boolean | true | 是否下载完成后自动安装\n\n(2) DownloadEntity字段属性\n\n字段名 | 类型 | 默认值 | 备注\n:-|:-:|:-:|:-\nmDownloadUrl | String | \"\" | 下载地址\nmCacheDir | String | \"\" | 文件下载的目录\nmMd5 | String | \"\" | 下载文件的加密校验值(默认使用md5加密)，用于校验，防止下载的apk文件被替换（最新演示demo中有计算校验值的工具），注意这里的md5值非应用签名文件的md5值！\nmSize | long | 0 | 下载文件的大小【单位：KB】\nmIsShowNotification | boolean | false | 是否在通知栏上显示下载进度\n\n(3) PromptEntity字段属性\n\n字段名 | 类型 | 默认值 | 备注\n:-|:-:|:-:|:-\nmThemeColor | int | R.color.xupdate_default_theme_color | 主题色（进度条和按钮的背景色）\nmTopResId | int | R.drawable.xupdate_bg_app_top | 顶部背景图片资源id\nmTopDrawableTag | String | \"\" | 顶部背景图片Drawable标识\nmButtonTextColor | int | 0 | 按钮文字颜色\nmSupportBackgroundUpdate | boolean | false | 是否支持后台更新\nmWidthRatio | float | -1（无约束） | 版本更新提示器宽度占屏幕的比例\nmHeightRatio | float | -1（无约束） | 版本更新提示器高度占屏幕的比例\nmIgnoreDownloadError | boolean | false | 是否忽略下载异常(下载失败更新提示框不消失)\n\n### 2.4、文件加密校验方式\n\n本框架默认使用的文件加密校验方法是MD5加密方式，当然如果你不想使用MD5加密，你也可以自定义文件加密器`IFileEncryptor`,以下是MD5文件加密器的实现供参考：\n\n```\n/**\n * 默认的文件加密计算使用的是MD5加密\n *\n * @author xuexiang\n * @since 2019-09-06 14:21\n */\npublic class DefaultFileEncryptor implements IFileEncryptor {\n    /**\n     * 加密文件\n     *\n     * @param file\n     * @return\n     */\n    @Override\n    public String encryptFile(File file) {\n        return Md5Utils.getFileMD5(file);\n    }\n\n    /**\n     * 检验文件是否有效（加密是否一致）\n     *\n     * @param encrypt 加密值, 如果encrypt为空，直接认为是有效的\n     * @param file    需要校验的文件\n     * @return 文件是否有效\n     */\n    @Override\n    public boolean isFileValid(String encrypt, File file) {\n        return TextUtils.isEmpty(encrypt) || encrypt.equalsIgnoreCase(encryptFile(file));\n    }\n}\n\n```\n最后再调用`XUpdate.get().setIFileEncryptor`方法设置即可生效。\n\n---\n\n## 3、版本更新\n\n### 3.1、默认版本更新\n\n直接调用如下代码即可完成版本更新操作：\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl)\n        .update();\n```\n需要注意的是，使用默认版本更新，请求服务器返回的json格式应包括如下内容：\n\n```\n{\n  \"Code\": 0,\n  \"Msg\": \"\",\n  \"UpdateStatus\": 1,\n  \"VersionCode\": 3,\n  \"VersionName\": \"1.0.2\",\n  \"ModifyContent\": \"1、优化api接口。\\r\\n2、添加使用demo演示。\\r\\n3、新增自定义更新服务API接口。\\r\\n4、优化更新提示界面。\",\n  \"DownloadUrl\": \"https://raw.githubusercontent.com/xuexiangjys/XUpdate/master/apk/xupdate_demo_1.0.2.apk\",\n  \"ApkSize\": 2048,\n  \"ApkMd5\": \"\"\n}\n```\n\n字段说明:\n\n* Code: 0代表请求成功，非0代表失败。\n* Msg: 请求出错的信息。\n* UpdateStatus: 版本更新状态。0代表不更新，1代表有版本更新，不需要强制升级，2代表有版本更新，需要强制升级。\n* VersionCode: 版本号，自增。本地会用于比较版本是否为最新版本。\n* VersionName: 版本的展示名称。\n* ModifyContent: 版本更新的内容。\n* DownloadUrl: 应用apk文件的下载地址。\n* ApkSize: 应用apk文件的文件大小，单位是KB。\n* ApkMd5: 应用apk文件的MD5值。如果没有的话，将无法保证apk是否完整，每次都会重新下载。框架默认使用的是MD5加密。\n\n\n### 3.2、自动版本更新\n\n自动版本更新：自动检查版本 + 自动下载apk + 自动安装apk（静默安装）。\n只需要设置`isAutoMode(true)`,不过如果设备没有root权限的话，是无法做到完全的自动更新（因为静默安装需要root权限）。\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl)\n        .isAutoMode(true) //如果需要完全无人干预，自动更新，需要root权限【静默安装需要】\n        .update();\n```\n\n### 3.3、支持后台更新\n\n开启支持后台更新后, 用户点击“后台更新”按钮后,就可以进入到后台更新,不用一直在更新界面等待.\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl)\n        .supportBackgroundUpdate(true)\n        .update();\n```\n\n### 3.4、强制版本更新\n\n就是用户不更新的话，程序将无法正常使用。只需要服务端返回`UpdateStatus`字段为2即可。\n\n当然如果你自定义请求返回api的话，只需要设置`UpdateEntity`的`mIsForce`字段为true即可。\n\n### 3.5、自定义版本更新提示弹窗的主题\n\n通过设置更新顶部图片、主题色、按钮文字颜色、宽高比率等来实现自定义主题样式.\n\n* promptThemeColor: 设置主题颜色\n* promptButtonTextColor: 设置按钮的文字颜色\n* promptTopResId: 设置顶部背景图片资源ID\n* promptTopDrawable: 设置顶部背景图片\n* promptTopBitmap: 设置顶部背景图片\n* promptWidthRatio: 设置版本更新提示器宽度占屏幕的比例，默认是-1，不做约束\n* promptHeightRatio: 设置版本更新提示器高度占屏幕的比例，默认是-1，不做约束\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl)\n        .promptThemeColor(ResUtils.getColor(R.color.update_theme_color))\n        .promptButtonTextColor(Color.WHITE)\n        .promptTopResId(R.mipmap.bg_update_top)\n        .promptWidthRatio(0.7F)\n        .update();\n```\n\n### 3.6、自定义版本更新解析器\n\n实现IUpdateParser接口即可实现解析器的自定义。\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl3)\n        .updateParser(new CustomUpdateParser()) //设置自定义的版本更新解析器\n        .update();\n\npublic class CustomUpdateParser implements IUpdateParser {\n    @Override\n    public UpdateEntity parseJson(String json) throws Exception {\n        CustomResult result = JsonUtil.fromJson(json, CustomResult.class);\n        if (result != null) {\n            return new UpdateEntity()\n                    .setHasUpdate(result.hasUpdate)\n                    .setIsIgnorable(result.isIgnorable)\n                    .setVersionCode(result.versionCode)\n                    .setVersionName(result.versionName)\n                    .setUpdateContent(result.updateLog)\n                    .setDownloadUrl(result.apkUrl)\n                    .setSize(result.apkSize);\n        }\n        return null;\n    }\n}\n\n```\n\n### 3.7、自定义版本更新检查器+版本更新解析器+版本更新提示器\n\n* 实现`IUpdateChecker`接口即可实现检查器的自定义。\n\n* 实现`IUpdateParser`接口即可实现解析器的自定义。\n\n* 实现`IUpdatePrompter`接口即可实现提示器的自定义。\n\n```\nXUpdate.newBuild(getActivity())\n        .updateUrl(mUpdateUrl3)\n        .updateChecker(new DefaultUpdateChecker() {\n            @Override\n            public void onBeforeCheck() {\n                super.onBeforeCheck();\n                CProgressDialogUtils.showProgressDialog(getActivity(), \"查询中...\");\n            }\n            @Override\n            public void onAfterCheck() {\n                super.onAfterCheck();\n                CProgressDialogUtils.cancelProgressDialog(getActivity());\n            }\n        })\n        .updateParser(new CustomUpdateParser())\n        .updatePrompter(new CustomUpdatePrompter(getActivity()))\n        .update();\n\n\npublic class CustomUpdatePrompter implements IUpdatePrompter {\n\n    private Context mContext;\n\n    public CustomUpdatePrompter(Context context) {\n        mContext = context;\n    }\n\n    @Override\n    public void showPrompt(@NonNull UpdateEntity updateEntity, @NonNull IUpdateProxy updateProxy, @NonNull PromptEntity promptEntity) {\n        showUpdatePrompt(updateEntity, updateProxy);\n    }\n\n    /**\n     * 显示自定义提示\n     *\n     * @param updateEntity\n     * @param updateProxy\n     */\n    private void showUpdatePrompt(final @NonNull UpdateEntity updateEntity, final @NonNull IUpdateProxy updateProxy) {\n        String updateInfo = UpdateUtils.getDisplayUpdateInfo(mContext, updateEntity);\n\n        new AlertDialog.Builder(mContext)\n                .setTitle(String.format(\"是否升级到%s版本？\", updateEntity.getVersionName()))\n                .setMessage(updateInfo)\n                .setPositiveButton(\"升级\", new DialogInterface.OnClickListener() {\n                    @Override\n                    public void onClick(DialogInterface dialog, int which) {\n                        updateProxy.startDownload(updateEntity, new OnFileDownloadListener() {\n                            @Override\n                            public void onStart() {\n                                HProgressDialogUtils.showHorizontalProgressDialog(mContext, \"下载进度\", false);\n                            }\n\n                            @Override\n                            public void onProgress(float progress, long total) {\n                                HProgressDialogUtils.setProgress(Math.round(progress * 100));\n                            }\n\n                            @Override\n                            public boolean onCompleted(File file) {\n                                HProgressDialogUtils.cancel();\n                                return true;\n                            }\n\n                            @Override\n                            public void onError(Throwable throwable) {\n                                HProgressDialogUtils.cancel();\n                            }\n                        });\n                    }\n                })\n                .setNegativeButton(\"暂不升级\", null)\n                .setCancelable(false)\n                .create()\n                .show();\n    }\n```\n\n### 3.8、只使用XUpdate的下载器功能进行apk的下载\n\n```\nXUpdate.newBuild(getActivity())\n        .apkCacheDir(PathUtils.getAppExtCachePath()) //设置下载缓存的根目录\n        .build()\n        .download(mDownloadUrl, new OnFileDownloadListener() {   //设置下载的地址和下载的监听\n            @Override\n            public void onStart() {\n                HProgressDialogUtils.showHorizontalProgressDialog(getContext(), \"下载进度\", false);\n            }\n\n            @Override\n            public void onProgress(float progress, long total) {\n                HProgressDialogUtils.setProgress(Math.round(progress * 100));\n            }\n\n            @Override\n            public boolean onCompleted(File file) {\n                HProgressDialogUtils.cancel();\n                ToastUtils.toast(\"apk下载完毕，文件路径：\" + file.getPath());\n                return false;\n            }\n\n            @Override\n            public void onError(Throwable throwable) {\n                HProgressDialogUtils.cancel();\n            }\n        });\n```\n\n### 3.9、只使用XUpdate的APK安装的功能\n\n```\n_XUpdate.startInstallApk(getContext(), FileUtils.getFileByPath(PathUtils.getFilePathByUri(getContext(), data.getData()))); //填写文件所在的路径\n```\n\n如果你的apk安装与众不同，你可以实现自己的apk安装器。你只需要实现OnInstallListener接口，并通过`XUpdate.setOnInstallListener`进行设置即可生效。\n\n### 3.10、国际化配置\n\n由于作者水平有限, 目前只支持中文和英文两种语言的显示【默认语言是英语】。需要支持其他语言的，只需要在自己项目的`res`下新建对应的语言文件，进行多语言的翻译即可。\n\n需要翻译的详细内容参见 ***[xupdate_strings.xml](https://github.com/xuexiangjys/XUpdate/blob/master/xupdate-lib/src/main/res/values-zh-rCN/xupdate_strings.xml)*** 文件。\n\n什么？你还不会Android的多语言配置？建议你看一下这篇文章：[Android项目国际化多国语言适配](https://blog.csdn.net/qq_29769851/article/details/90606437)\n\n## 混淆配置\n\n```\n-keep class com.xuexiang.xupdate.entity.** { *; }\n\n//注意，如果你使用的是自定义Api解析器解析，还需要给你自定义Api实体配上混淆，如下是本demo中配置的自定义Api实体混淆规则：\n-keep class com.xuexiang.xupdatedemo.entity.** { *; }\n\n```\n\n## 相关链接\n\n* [XUpdate 文档](https://github.com/xuexiangjys/XUpdate/wiki)\n* [XUpdate 简化库](https://github.com/xuexiangjys/XUpdateAPI)\n* [XUpdate 管理服务](https://github.com/xuexiangjys/XUpdateService)\n* [XUpdate 后台管理系统](https://github.com/xuexiangjys/xupdate-management)\n* [XUpdate Flutter插件](https://github.com/xuexiangjys/flutter_xupdate)\n* [XUpdate React-Native插件](https://github.com/xuexiangjys/react-native-xupdate)\n* [Flutter版本更新弹窗组件](https://github.com/xuexiangjys/flutter_update_dialog)\n\n---\n\n\n## 特别感谢\n\nhttps://github.com/WVector/AppUpdate\n\n## 如果觉得项目还不错，可以考虑打赏一波\n\n> 你的打赏是我维护的动力，我将会列出所有打赏人员的清单在下方作为凭证，打赏前请留下打赏项目的备注！\n\n![pay.png](https://raw.githubusercontent.com/xuexiangjys/Resource/master/img/pay/pay.png)\n\n感谢下面小伙伴的打赏：\n\n姓名 | 金额 | 方式\n:-|:-|:-\n*天 | 100￥ | 微信\n*航 | 10￥ | 支付宝\nX*? | 18.88￥ | 微信\n*网 | 1￥ | 微信\nJoe | 88.88￥ | 微信\n\n## 公众号\n\n> 更多资讯内容，欢迎扫描关注我的个人微信公众号:【我的Android开源之旅】\n\n![](https://s1.ax1x.com/2022/04/27/LbGMJH.jpg)\n\n## 联系方式\n\n[![](https://img.shields.io/badge/点击一键加入QQ交流群-720212425-blue.svg)](http://shang.qq.com/wpa/qunwpa?idkey=37ea606864cafa3c8a5d6b07f04fd672936a50fd6e535c13702baf705d57e6e8)\n"
        },
        {
          "name": "apk",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.5517578125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    apply from: './versions.gradle'\n    addRepos(repositories) //增加代码仓库\n    dependencies {\n        classpath deps.android_gradle_plugin\n        classpath deps.android_maven_gradle_plugin\n\n        classpath 'com.github.xuexiangjys.XAOP:xaop-plugin:1.1.0'\n        classpath 'com.chenenyu:img-optimizer:1.2.0' // 图片压缩\n\n    }\n}\n\nallprojects {\n    addRepos(repositories)\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.9638671875,
          "content": "# Project-wide Gradle settings.\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx1536m\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\n# 表示主工程使用AndroidX形式\nandroid.useAndroidX=true\n# 表示针对主工程中使用到的三方库，也会自动执行AndroidX的替换过程。\nandroid.enableJetifier=true\n\nandroid.enableD8=true\n\n\n#RELEASE_STORE_FILE=../keystores/android.keystore"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windows variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsonapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0302734375,
          "content": "include ':app', ':xupdate-lib'\n"
        },
        {
          "name": "versions.gradle",
          "type": "blob",
          "size": 6.07421875,
          "content": "/**\n * Shared file between builds so that they can all use the same dependencies and\n * maven repositories.\n **/\next.deps = [:]\ndef versions = [:]\nversions.android_gradle_plugin = \"3.6.1\"\nversions.android_maven_gradle_plugin = \"2.0\"\nversions.gradle_bintray_plugin = \"1.8.0\"\nversions.booster = \"1.4.0\"\nversions.booster_all = \"1.1.1\"\nversions.support = \"28.0.0\"\nversions.androidx = \"1.1.0\"\nversions.junit = \"4.12\"\nversions.espresso = \"3.2.0\"\nversions.constraint_layout = \"1.1.3\"\nversions.glide = \"4.11.0\"\nversions.rxjava2 = \"2.2.20\"\nversions.rxandroid = \"2.1.1\"\nversions.rxbinding = \"2.2.0\"\nversions.butterknife = \"10.1.0\"\nversions.runner = \"1.2.0\"\nversions.gson = \"2.8.5\"\nversions.okhttp3 = \"3.12.12\"\n\ndef deps = [:]\n\ndef support = [:]\nsupport.annotations = \"com.android.support:support-annotations:$versions.support\"\nsupport.app_compat = \"com.android.support:appcompat-v7:$versions.support\"\nsupport.recyclerview = \"com.android.support:recyclerview-v7:$versions.support\"\nsupport.cardview = \"com.android.support:cardview-v7:$versions.support\"\nsupport.design = \"com.android.support:design:$versions.support\"\nsupport.v4 = \"com.android.support:support-v4:$versions.support\"\nsupport.core_utils = \"com.android.support:support-core-utils:$versions.support\"\ndeps.support = support\n\ndef androidx = [:]\nandroidx.annotations = \"androidx.annotation:annotation:$versions.androidx\"\nandroidx.appcompat = \"androidx.appcompat:appcompat:$versions.androidx\"\nandroidx.recyclerview = \"androidx.recyclerview:recyclerview:$versions.androidx\"\nandroidx.design = \"com.google.android.material:material:$versions.androidx\"\nandroidx.multidex = 'androidx.multidex:multidex:2.0.1'\ndeps.androidx = androidx\n\ndef booster = [:]\nbooster.gradle_plugin = \"com.didiglobal.booster:booster-gradle-plugin:$versions.booster\"\nbooster.task_all = \"com.didiglobal.booster:booster-task-all:$versions.booster_all\"\nbooster.transform_all = \"com.didiglobal.booster:booster-transform-all:$versions.booster_all\"\n//采用 cwebp 对资源进行压缩\nbooster.task_compression_cwebp = \"com.didiglobal.booster:booster-task-compression-cwebp:$versions.booster\"\n//采用 pngquant 对资源进行压缩\nbooster.task_compression_pngquant = \"com.didiglobal.booster:booster-task-compression-pngquant:$versions.booster\"\n//ap_ 文件压缩\nbooster.task_processed_res = \"com.didiglobal.booster:booster-task-compression-processed-res:$versions.booster\"\n//去冗余资源\nbooster.task_resource_deredundancy = \"com.didiglobal.booster:booster-task-resource-deredundancy:$versions.booster\"\n//检查 SNAPSHOT 版本\nbooster.task_check_snapshot = \"com.didiglobal.booster:booster-task-check-snapshot:$versions.booster\"\n//性能瓶颈检测\nbooster.transform_lint = \"com.didiglobal.booster:booster-transform-lint:$versions.booster\"\n//多线程优化\nbooster.transform_thread = \"com.didiglobal.booster:booster-transform-thread:$versions.booster\"\n//资源索引内联\nbooster.transform_r_inline = \"com.didiglobal.booster:booster-transform-r-inline:$versions.booster\"\n//WebView 预加载\nbooster.transform_webview = \"com.didiglobal.booster:booster-transform-webview:$versions.booster\"\n//SharedPreferences 优化\nbooster.transform_shared_preferences = \"com.didiglobal.booster:booster-transform-shared-preferences:$versions.booster\"\n//检查覆盖安装导致的 Resources 和 Assets 未加载的 Bug\nbooster.transform_res_check = \"com.didiglobal.booster:booster-transform-res-check:$versions.booster\"\n//修复 Toast 在 Android 7.1 上的 Bug\nbooster.transform_toast = \"com.didiglobal.booster:booster-transform-toast:$versions.booster\"\n//处理系统 Crash\nbooster.transform_activity_thread = \"com.didiglobal.booster:booster-transform-activity-thread:$versions.booster\"\ndeps.booster = booster\n\ndef butterknife = [:]\nbutterknife.runtime = \"com.jakewharton:butterknife:$versions.butterknife\"\nbutterknife.compiler = \"com.jakewharton:butterknife-compiler:$versions.butterknife\"\n\ndeps.butterknife = butterknife\n\ndef espresso = [:]\nespresso.core = \"androidx.test.espresso:espresso-core:$versions.espresso\"\nespresso.contrib = \"androidx.test.espresso:espresso-contrib:$versions.espresso\"\nespresso.intents = \"androidx.test.espresso:espresso-intents:$versions.espresso\"\ndeps.espresso = espresso\n\ndeps.android_gradle_plugin = \"com.android.tools.build:gradle:$versions.android_gradle_plugin\"\ndeps.android_maven_gradle_plugin = \"com.github.dcendents:android-maven-gradle-plugin:$versions.android_maven_gradle_plugin\"\ndeps.gradle_bintray_plugin = \"com.jfrog.bintray.gradle:gradle-bintray-plugin:$versions.gradle_bintray_plugin\"\ndeps.glide = \"com.github.bumptech.glide:glide:$versions.glide\"\ndeps.constraint_layout = \"androidx.constraint:constraint-layout:$versions.constraint_layout\"\ndeps.junit = \"junit:junit:$versions.junit\"\ndeps.runner = \"androidx.test:runner:$versions.runner\"\ndeps.rxjava2 = \"io.reactivex.rxjava2:rxjava:$versions.rxjava2\"\ndeps.rxandroid = \"io.reactivex.rxjava2:rxandroid:$versions.rxandroid\"\ndeps.rxbinding = \"com.jakewharton.rxbinding2:rxbinding:$versions.rxbinding\"\ndeps.gson = \"com.google.code.gson:gson:$versions.gson\"\ndeps.okhttp3 = \"com.squareup.okhttp3:okhttp:$versions.okhttp3\"\n\next.deps = deps\n\ndef build_versions = [:]\nbuild_versions.min_sdk = 19\nbuild_versions.target_sdk = 31\nbuild_versions.build_tools = \"29.0.3\"\next.build_versions = build_versions\n\ndef app_release = [:]\napp_release.storeFile = \"../keystores/android.keystore\"\napp_release.storePassword = \"xuexiang\"\napp_release.keyAlias = \"android.keystore\"\napp_release.keyPassword = \"xuexiang\"\n\next.app_release = app_release\n\n//默认添加代码仓库路径\nstatic def addRepos(RepositoryHandler handler) {\n    handler.mavenLocal()\n    handler.google { url 'https://maven.aliyun.com/repository/google' }\n    handler.jcenter { url 'https://maven.aliyun.com/repository/jcenter' }\n    handler.mavenCentral { url 'https://maven.aliyun.com/repository/central' }\n    handler.maven { url \"https://jitpack.io\" }\n    handler.maven { url 'https://maven.aliyun.com/repository/public' }\n    handler.maven { url \"https://repo1.maven.org/maven2/\" }\n    handler.maven { url 'https://oss.sonatype.org/content/repositories/public' }\n    //Add the Local repository\n    handler.maven { url 'LocalRepository' }\n}\n\next.addRepos = this.&addRepos\n\n\n"
        },
        {
          "name": "xupdate-lib",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}