{
  "metadata": {
    "timestamp": 1736708137832,
    "page": 565,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nic-delhi/AarogyaSetu_Android",
      "stars": 2893,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.9765625,
          "content": "*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n/*/build/\ncaptures/\n/*/release\n*.iml\n\nlocal.properties\nkeystore.properties\napp/covidSignCertificate.jks\napp/google-services.json\napp/src/debug/google-services.json\ndebug.keystore\n\n\n\n\na# Created by .ignore support plugin (hsz.mobi)\n\n### JetBrains template\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion\n\n*.iml\n\n## Directory-based project format:\n.idea/\n# if you remove the above rule, at least ignore the following:\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\n/out/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n.idea/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n\n\n\n\n\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# OSX Files\n.DS_Store"
        },
        {
          "name": "Contributors.md",
          "type": "blob",
          "size": 1.5224609375,
          "content": "---------------------------------\nGovernment Leadership\n---------------------------------\nProf K  VijayRaghavan  \nAmitabh Kant  \nAjay Sawhney  \nDr. Neeta Verma  \nGopala Krishnan S  \nR S Mani  \nAbhishek Singh  \nDr. Seema Khanna  \n\n---------------------------------\nIndustry and Academia Leadership\n---------------------------------\nDr. Lalitesh Katragadda\nProf. V Kamakoti  \nDeep Kalra  \nArnab Kumar  \nPrashant Tandon  \nProf. Amrutur Bharadawaj  \nVikalp Sahni  \nRahul Goyal  \nRahul Matthan  \nArghya Sengupta  \n\n---------------------------------\nContributors (Government)\n---------------------------------\nDB Nayak  \nPawan Joshi  \nAmit Kumar  \nHari Haran M  \nSyed Hasan Mahmood  \nAshwini Kumar  \nGaurav Kansal  \nAshish Kataria  \nGautam Bhati  \nKundan Kumar  \nTaha Owais  \nAmit Sawant  \nAjoy Agarwal  \nVinay Singh  \nAnoop Kumar  \nShiv Gupta  \nVikash Kumar  \nManisha Agrawal  \nVikas Chaubey  \nDeepak Rawat  \nShipra Saxena  \n\n---------------------------------\nContributors (Industry)\n---------------------------------\nAalekh Sharan  \nAkash Kumar  \nAman Kapoor  \nAnjali Aggarwal  \nAnkit Garg  \nAnkit Gupta   \nAnkit Raj  \nAnusheel Singh  \nAshok Kumar Bhakhar  \nAstha Goel  \nBhoomit Vasani  \nChandrapal Yadav  \nDamanpreet Singh  \nDhananjay Kumar  \nDigjot Singh  \nJaskaran Singh  \nJasmeet Singh  \nJaydeep Dutta  \nJuhi Dua  \nKeshav Agrawal  \nKunal Prasad  \nManuj Porwal  \nNaveen Setia  \nNiharika Arora  \nPraveen Bhagat  \nPunit Chhajer  \nRadha Krishan  \nSanket Bansal  \nSaurav Yadav  \nSunny Shah  \nSurabhi Vatsa  \nVikrant Chaudhary  \nVivek Ratakonda  \nAbhijeet Choudhary"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.544921875,
          "content": "Copyright 2020, Government of India.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.9599609375,
          "content": "# Aarogya Setu Android app\n\n![alt text](./aarogya.png \"AarogyaSetu Logo\")\n\nAarogya Setu is a mobile application developed by the Government of India to connect essential health services with the people of India in our combined fight against COVID-19. The App is aimed at augmenting the initiatives of the Government of India, particularly the Department of Health, in proactively reaching out to and informing the users of the app regarding risks, best practices and relevant advisories pertaining to the containment of COVID-19.\n\n## Features\n\nAarogya Setu mobile application provides the following features:\n\n- Minimal and simple user interface, which user can get easily acquainted with\n- Scan nearby Aarogya Setu user using BluetoothLE Scanner \n- Advertise to nearby Aarogya Setu user using BluetoothLE GATT Server\n- Update user about nearby activity using Location Service\n- Secure information transfer with SSL Pinning\n- Encrypt any sensitive information\n- Available in 12 different languages\n- Nation wide COVID-19 Statistics\n- Self-Assessment as per MoHFW and ICMR guidelines\n- Emergency Helpline Contact\n- List of ICMR approved labs with COVID-19 testing facilities\n- e-Pass integration\n\nThe Aarogya Setu App is being widely used by more than 11 Crore Users. The App has been highly successful in identifying people with high risk of COVID-19 infection and has also played a major role in identifying potential COVID-19 hotspots. In the larger public interest and in order to help the international community in their COVID-19 efforts, the Government of India is opening the source code of this App under Apache License 2.0.\n\nIf you find any security issues or vulnerabilities in the code, then you can send the details to us at : as-bugbounty@nic.in\n\nIf you want to convey any other feedback regarding the App or Code, then you can send it to us at : support.aarogyasetu@nic.in\n\n\n\n## Setup\n\n### Requirements\n- JDK 8\n- Latest Android SDK tools\n- Latest Android platform tools\n- Android SDK 21 or newer\n- AndroidX\n\n### Configure\n- ./keystore.properties\n- Firebase - google-services.json\n\n**keystore.properties**\n\nSetup a keystore.properties at the root folder with following sample detail and your configurations\n```\n# Server SSL Keys\nssl_public_key=<Your Public Key>\nssl_backup_key=<Your Backup Key>\nssl_auth_key=<Your Auth Key>\nssl_auth_backup_key=<Your Auth Backup Key>\n\naws_api_key=<Your AWS Key>\nplatform_key=android_key\n\n# Android Keystore details\nandroid_alias=YourAndroidAlias\nandroid_keystore=YourAndroidKeyStore\ntransformation=AES/GCM/NoPadding\n\n# BLE UUIDs\nservice_uuid=YOURUUID-1234-ABCD-WXYZ-A12B34C56D78\ndid_uuid=YOURUUID-1234-ABCD-WXYZ-A12B34C56E78\npinger_uuid=YOURUUID-1234-ABCD-WXYZ-A12B34C56F78\n\n\n# API URLs\nwebview_url = <Your Web URL>\nwebview_host = <Your Web Host>\napp_host_url = <Your App Host>\nauth_host_url = <Your Auth Host>\n\n# API End Points\nbulk_upload_api = /api/v1/end/point/1/\nregister_user_api = /api/v1/end/point/2/\nupdate_fcm_token_api = /api/v1/end/point/3/\ncheck_status_api = /api/v1/end/point/4/\nfetch_config_api = /api/v1/end/point/5/\ngenerate_otp_api = endPoint6\nvalidate_otp_api = endPoint7\nrefresh_auth_token_api = endPoint8\nqr_fetch_api = endPoint9\ncall_us_url=tel:1075\nfaq_url=<Your URL>\nprivacy_policy_url=<Your URL>\ntnc_url=<Your URL>\nverify_app_url=<Your URL>\n\n# APK sign Keystore details:\nkey_store_cetificate = yourCertificate.jks\nkey_store_password = yourStorePassword\nkey_alias = yourAlias\nkey_password = yourPassword\n\n```\n\n**Firebase and google-services.json**\n\nSetup Firebase for the different environment.\nDownload the google-services.json for each of the environments and put it in the corresponding folder.\n\nDebug: ./app/src/debug/google-services.json\n\nProduction: ./app/src/google-services.json\n\n\n### Build\n    ./gradlew assembleDebug\n\n## Download App\n\n<p align=\"center\">\n<a href='https://play.google.com/store/apps/details?id=nic.goi.aarogyasetu'><img alt='Get it on Google Play' src='https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png' width=\"50%\"/></a>\n</p>\n\n"
        },
        {
          "name": "aarogya.png",
          "type": "blob",
          "size": 4.681640625,
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.7001953125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    ext.kotlin_version = '1.3.61'\n    repositories {\n        google()\n        jcenter()\n        mavenCentral()\n        maven {\n            url 'https://maven.fabric.io/public'\n        }\n\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.6.3'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n        classpath 'com.google.gms:google-services:4.3.3'\n        classpath 'io.fabric.tools:gradle:1.31.2'\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.2978515625,
          "content": "# Project-wide Gradle settings.\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx1536m\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n# AndroidX package structure to make it clearer which packages are bundled with the\n# Android operating system, and which are packaged with your app's APK\n# https://developer.android.com/topic/libraries/support-library/androidx-rn\nandroid.useAndroidX=true\n# Automatically convert third-party libraries to use AndroidX\nandroid.enableJetifier=true\n# Kotlin code style for this project: \"official\" or \"obsolete\":\nkotlin.code.style=official\n\n#Versions\nMIN_SDK_VERSION = 21\nTARGET_SDK_VERSION = 29\nAPP_VERSION_CODE = 1050\nAPP_VERSION_NAME = 1.2.2\n\nAPP_COMPILE_SDK_VERSION = 29\nAPP_BUILD_TOOL_VERSION = 29.0.3"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windows variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.044921875,
          "content": "include ':app'\nrootProject.name='FightCorona'\n"
        }
      ]
    }
  ]
}