{
  "metadata": {
    "timestamp": 1736708590620,
    "page": 886,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zeromq/jeromq",
      "stars": 2375,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.123046875,
          "content": "*.jar\n*.iml\n.project\n.classpath\n.settings\n.idea\ntarget\nmaven-build.properties\nmaven-build.xml\nbuild.xml\n.checkstyle\n.DS_Store\n"
        },
        {
          "name": ".java-version",
          "type": "blob",
          "size": 0.00390625,
          "content": "1.8\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.583984375,
          "content": "Contributors\n============\n\nAJ Lewis\nAlexej Lotz\nAndrew Thompson\nAsko Kauppi\nBarak Amar\nBen Gray\nBernd Melchers\nBernd Prager\nBob Beaty\nBrett Cameron\nBrian Buchanan\nBurak Arslan\nCarl Clemens\nChia-liang Kao\nChris Rempel\nChris Wong\nChristian Gudrian\nChuck Remes\nConrad D. Steenberg\nConstantin Rack\nDave Yarwood\nDhammika Pathirana\nDhruva Krishnamurthy\nDirk O. Kaar\nDongmin Yu\nDouglas Creager\nErich Heine\nErik Algell\nErik Rigtorp\nFabien Ninoles\nFrank Denis\nFrederic Delechamp\nGeorge Neill\nGerard Toonstra\nGhislain Putois\nGonzalo Diethelm\nGuido Goldstein\nIan Barber\nIlja Golshtein\nIsa Hekmatizadeh\nIvo Danihelka\nJacob Rideout\nJoe Thornber\nJon Dyte\nKamil Shakirov\nLourens Naudé\nMarc Rossi\nMartin Hurton\nMartin Lucina\nMartin Pales\nMartin Sustrik\nMatus Hamorsky\nMax Wolf\nMcClain Looney\nMichael Compton\nMika Fischer\nMikael Helbo Kjaer\nMikko Koppanen\nMin Ragan-Kelley\nNeale Ferguson\nNir Soffer\nPaul Betts\nPaul Colomiets\nPavel Gushcha\nPavol Malosek\nPerry Kundert\nPeter Bourgon\nPhilip Kovacs\nPieter Hintjens\nPiotr Trojanek\nRobert G. Jakabosky\nSebastian Otaegui\nSpencer Park\nSteven McCoy\nStuart Webster\nTamara Kustarova\nTaras Shpot\nTero Marttila\nTerry Wilson\nThijs Terlouw\nToralf Wittner\nTore Halvorsen\nTrevor Bernard\nVitaly Mayatskikh\n\nCredits\n=======\n\nAamir Mohammad\nAdrian von Bidder\nAleksey Yeschenko\nAlessio Spadaro\nAlexander Majorov\nAnh Vu\nBernd Schumacher\nBrian Granger\nCarsten Dinkelmann\nDavid Bahi\nDirk Eddelbuettel\nEvgueny Khartchenko\nFrank Vanden Berghen\nIan Barber\nJohn Apps\nMarkus Fischer\nMatt Muggeridge\nMichael Santy\nOleg Sevostyanov\nPaulo Henrique Silva\nPeter Busser\nPeter Lemenkov\nRobert Zhang\nToralf Wittner\nZed Shaw\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 37.3310546875,
          "content": "# Changelog\n\n## v0.7.0 (2024-xx-xx)\n\n### Added\n\n* [#998] (https://github.com/zeromq/jeromq/pull/998)\n  Add IPC support for Java 16 and above\n\n* [#974] (https://github.com/zeromq/jeromq/pull/974)\n  Implement `NetworkProtocols` as `ServiceProviders` to decouple protocol from implementation\n\n* [#971] (https://github.com/zeromq/jeromq/pull/971)\n  Attribute core developers in `pom.xml`\n\n### Changed\n\n* [#985] (https://github.com/zeromq/jeromq/pull/985)\n  Correct set option implementation for `IP_TOS` as it was previously set to modify `SO_SNDBUF`. Update various dependency versions\n\n* [#978] (https://github.com/zeromq/jeromq/pull/978)\n  Use multi-module project organization and release\n\n* [#976] (https://github.com/zeromq/jeromq/pull/976)\n  Correct handling of unsupported protocols\n\n* [#973] (https://github.com/zeromq/jeromq/pull/973)\n  Eliminate wrapping of `SO_KEEPALIVE` settings with Java 11\n\n* [#972] (https://github.com/zeromq/jeromq/pull/972)\n  Change the minimum supported Java android version to 11\n\n## v0.6.0 (2024-02-04)\n\n### Added\n\n* [#964] (https://github.com/zeromq/jeromq/pull/964)\n  Exports all options default values as constant in ZMQ class. This will allow client libraries to use them.\n\n* [#963] (https://github.com/zeromq/jeromq/pull/963)\n  Replaces maven-bundle-plugin with the more up-to-date bnd-maven-plugin and configures it to generate a JPMS module \n  descriptor besides the OSGi descriptor.\n\n* [#949] (https://github.com/zeromq/jeromq/pull/949)\n  Added a way to specify a custom monitor, that don’t need to communicate through a ZMQ socket. It allows to use monitor\n  for logging without hitting hard on the CPU with poller overload.\n  Improved in [#950] (https://github.com/zeromq/jeromq/pull/950)\n\n* [#942] (https://github.com/zeromq/jeromq/pull/942)\n  `zmq.Ctx` can now be provided a thread factory, that can used to tweaks threads. The main purpose of this is to be able to \n  bind thread to CPU using external libraries like https://github.com/OpenHFT/Java-Thread-Affinity. The idea was \n  suggested by issue #910.\n\n* Also adding a check that prevent modifications of some settings once they have been used by `zmq.Ctx` initialisation.\n\n### Changed\n\n* Many code smell removed using SonarLint.\n\n* [#941] (https://github.com/zeromq/jeromq/issues/940)\n  Fix to issue [#940](https://github.com/zeromq/jeromq/issues/940) by setting `key=null on setKey, added test\n\n* [#939] (https://github.com/zeromq/jeromq/issues/939)\n  Simplified Mailbox, always thread safe, so `MailboxSafe usages are removed and the class is marked at deprecated.\n\n* [#936] (https://github.com/zeromq/jeromq/pull/936)\n\n  `org.zeromq.ZSocket` and `org.zeromq.ZMQ.Socket` can now read and write `zmq.Msg` directly.\n\n  Updating `Metada` class to provide more data access and functions. `ZMetadata` is updated too. It internally now uses\n  `ConcurrentHashMap` instead of the old `Properties class`. The `Properties` class ignore null values, `ConcurrentHashMap`\n  reject them but ZMTP protocol allows empty values. So null values are transformed to empty strings.\n\n  `Metada#set` is deprecated and replaced by `Metada#put`, to be more consistent with Map API.\n\n  Lots of hostile final method declaration removed.\n\n## v0.5.4 (2023-09-26)\n\n### Changed\n\n* new GPG signature for artifact, id 9C925EE1.\n\n* [#935](https://github.com/zeromq/jeromq/pull/935): With\n  org.zeromq.ZMQ.Event.recv(socket, DONTWAIT), if there is no more,\n  event to receive, it throws an NPE although the javadoc says it should\n  return null. Fixed.\n\n  Also don’t resolve event value for ZMQ_EVENT_MONITOR_STOPPED, it’s a constant.\n\n* [#937] (https://github.com/zeromq/jeromq/pull/937): When doing PLAIN or CURVE\n  authentication, the logic can be exchanged. The client is doing the bind, and\n  the server doing the connect. That was not handled, a connect socket was not\n  expected to reuse the session, and so found an already configured zapPipe. It’s\n  now handled.\n\n  Some error message was not returning any message, the specification says that an empty error should be returned instead.\n\n  Big rewrite of the tests for mechanisms, the big test function is split and more code is shared.\n\n## v0.5.3 (2022-12-03)\n\n### Added\n\n* [#921](https://github.com/zeromq/jeromq/pull/921): Add peer support\n  disconnect\n\n* [#906](https://github.com/zeromq/jeromq/pull/906): Fix issue where\n  socket identity was failing with overflow when identity was bigger\n  than 127\n\n* [#903](https://github.com/zeromq/jeromq/pull/903): Make JeroMQ\n  compatiable with Android API Level 19\n\n* [#902](https://github.com/zeromq/jeromq/pull/902): Add tests and\n  build on Java 17. Helping dependecies resolution by activating more\n  profiles and don't try to publish on forks\n\n* [#775](https://github.com/zeromq/jeromq/pull/775): ZMQ_HEARTBEAT is not\n  useful without sending an hello message.To solve that, the majordomo worker\n  still has to implement heartbeat. With this new option, whenever the\n  connection drops and reconnects the hello message will be sent, greatly\n  simplify the majordomo protocol, as now READY and HEARTBEAT can be handled by\n  zeromq.\n\n* [#783](https://github.com/zeromq/jeromq/pull/777): Jeromq is not thread-safe,\n  so port CLIENT and SERVER sockets from libzmq, which are thread-safe sockets.\n\n* [#808](https://github.com/zeromq/jeromq/pull/808): Add Client/Server support\n  to ZFrame.\n\n* [#837](https://github.com/zeromq/jeromq/pull/837): Radio-Dish implementation.\n\n* [#880](https://github.com/zeromq/jeromq/pull/880): Port of\n  https://github.com/zeromq/libzmq/pull/3871, router can handle peer\n  disconnected.\n\n* [#898](https://github.com/zeromq/jeromq/pull/898): Adding critical and\n  notification exceptions handlers in zmq.poll.Poller.\n\n### Changed\n\n* [#919](https://github.com/zeromq/jeromq/pull/919): Fix deadlock\n  issue on socket close\n\n* [#906](https://github.com/zeromq/jeromq/pull/906): Fix issue where\n  socket identity was failing with overflow when identity was bigger\n  than 127\n\n* [#903](https://github.com/zeromq/jeromq/pull/903): Make JeroMQ\n  compatiable with Android API Level 19\n\n* [#777](https://github.com/zeromq/jeromq/pull/777): ZMQ.Socket now remember\n  the ZContext that created it and remove from it when closed.\n\n* Many improvement to error handling, with more error messages.\n\n* [#772](https://github.com/zeromq/jeromq/pull/772): Fix ZMQ_REQ_CORRELATE.\n\n* [#797](https://github.com/zeromq/jeromq/pull/797): A new ZBeacon implementation.\n\n* [#814](https://github.com/zeromq/jeromq/pull/814): IPC protocol now comply to\n  java.net.preferIPv4Stack or java.net.preferIPv6Addresses for the choice of\n  the TCP stack to use.\n\n* [#825](https://github.com/zeromq/jeromq/pull/825): Improved monitor, with\n  added events in some mechanisms.\n\n## v0.5.2 (2020-01-31)\n\n### Added\n\n* [#715](https://github.com/zeromq/jeromq/pull/715): Added a ZCert constructor\n  that takes a Writer as an argument, in order to support writing to the\n  Writer instead of to a file.\n\n* [#716](https://github.com/zeromq/jeromq/pull/716): Added a ZTicket API, as\n  well as a ZTicker API, which combines ZTimer and ZTicket.\n\n* [#724](https://github.com/zeromq/jeromq/pull/724): Added support for the XPUB\n  options `ZMQ_XPUB_MANUAL` and `ZMQ_XPUB_VERBOSER`.\n\n* [#727](https://github.com/zeromq/jeromq/pull/727): Added a ZSocket constructor\n  that takes a SocketType enum value as an argument.\n\n* [#747](https://github.com/zeromq/jeromq/pull/747): Improvements to\n  ZBeacon:\n  * Added `startClient` and `startServer` methods, to support restarting the\n    client or server individually.\n  * You can now specify the interface address when constructing a\n    BroadcastClient.\n\n* [#755](https://github.com/zeromq/jeromq/pull/755): Added ZCert constructors\n  that take (mandatory) public and (optional) secret keys as arguments.\n\n### Changed\n\n* Fixes for Android compatibility:\n  * [#710](https://github.com/zeromq/jeromq/pull/710): Use traditional loops\n    instead of streams.\n  * [#717](https://github.com/zeromq/jeromq/pull/717): Don't use\n    `Map.computeIfAbsent`.\n  * [#736](https://github.com/zeromq/jeromq/pull/736): Use java.util.Iterator\n    instead of lambdas.\n  * [#752](https://github.com/zeromq/jeromq/pull/752): Various fixes discovered\n    by creating an Android project within the JeroMQ repo for testing purposes.\n\n* [#720](https://github.com/zeromq/jeromq/pull/720): Removed a println debug\n  statement in `Poller.rebuildSelector`.\n\n* [#733](https://github.com/zeromq/jeromq/pull/733): Fixed a bug introduced in\n  JeroMQ 0.5.1 where `ZPoller.poll` was returning -1 instead of 1.\n\n* [#735](https://github.com/zeromq/jeromq/pull/735): Fixed bugs related to\n  the handling of bytes in the Msg class.\n\n* [#759](https://github.com/zeromq/jeromq/pull/759): Fixed an\n  IndexOutOfBoundsException that occurs when the number of subscriptions exceeds\n  the HWM.\n\n## v0.5.1 (2019-04-03)\n\n### Added\n\n* [#677](https://github.com/zeromq/jeromq/pull/677): ZPoller now supports\n  registering multiple event handlers on a single socket or channel.\n\n* [#685](https://github.com/zeromq/jeromq/pull/685),\n  [#687](https://github.com/zeromq/jeromq/pull/687): ZMQ.Socket has new methods\n  that encode and decode messages based on a picture pattern which is compatible\n  to ZProto: `sendPicture`, `recvPicture`, `sendBinaryPicture` and\n  `recvBinaryPicture`.\n\n* [#692](https://github.com/zeromq/jeromq/pull/692): Added an overload of the\n  ZBeacon that has an additional `serverAddress` option so that the broadcast\n  address can be specified. The default value is still `255.255.255.255`.\n\n* [#694](https://github.com/zeromq/jeromq/pull/694): Added a draft ZNeedle\n  helper class for serialization and deserialization within a frame.\n\n* [#697](https://github.com/zeromq/jeromq/pull/697): Added encoding/decoding of\n  the `COMMAND` flag when using CURVE encryption.\n\n* [#698](https://github.com/zeromq/jeromq/pull/698): Added a\n  `Msg.putShortString` method.\n\n### Changed\n\n* [#671](https://github.com/zeromq/jeromq/pull/671),\n  [#672](https://github.com/zeromq/jeromq/pull/672): In the internal\n  `zmq.io.StreamEngine` class, a `ZError.InstantiationException` is now thrown\n  when a decoder or encoder cannot be instantiated.  Previously, a stacktrace\n  would be printed and `null` would be returned instead of a decoder/encoder\n  instance.\n\n* [#673](https://github.com/zeromq/jeromq/pull/673): `zmq.Mailbox.recv` now\n  handles `EINTR` by returning `null`. This can happen, for example, if the\n  channel is closed.\n\n* [#679](https://github.com/zeromq/jeromq/pull/679): Fixed a file descriptor\n  leak when opening a TCP connection.\n\n* [#680](https://github.com/zeromq/jeromq/pull/680): Various improvements to\n  support for IPv6 and name resolution.\n\n  IPv6 is now enabled if the properties `java.net.preferIPv4Stack=false` or\n  `java.net.preferIPv6Addresses=true` are set.\n\n* [#684](https://github.com/zeromq/jeromq/pull/684): Fixed a bug where\n  `zmq.Msg.getBytes` was writing to an internal buffer instead of the given\n  buffer.\n\n* [#688](https://github.com/zeromq/jeromq/pull/688): Javadoc fixes.\n\n* [#691](https://github.com/zeromq/jeromq/pull/691): Fixed a bug where timers\n  would accumulate in the PollerBase when failed connections were retried,\n  causing a memory leak.\n\n* [#693](https://github.com/zeromq/jeromq/pull/693): Fixed a Java 8-related\n  compilation error.\n\n* [#702](https://github.com/zeromq/jeromq/pull/702): Removed all usage of\n  `java.util.function`, `java.util.stream`, `java.util.Objects` and\n  `java.util.Optional`, which are known to cause problems for some versions of\n  Android. Replaced their usage with internal implementations.\n\n## v0.5.0 (2019-02-18)\n\n### Added\n\n* [#539](https://github.com/zeromq/jeromq/pull/539),\n  [#552](https://github.com/zeromq/jeromq/pull/552),\n  [#573](https://github.com/zeromq/jeromq/pull/573): Implemented heartbeating\n  between sockets as specified in\n  [https://rfc.zeromq.org/spec:37/ZMTP](https://rfc.zeromq.org/spec:37/ZMTP).\n\n* [#556](https://github.com/zeromq/jeromq/pull/556): There is now a `SocketType`\n  enum that can be used when creating sockets. This is recommended over the old\n  way of using integer values, which is error-prone. The overload of\n  `ZContext.createSocket` that takes an integer is still supported, but is now\n  marked deprecated.\n\n* [#559](https://github.com/zeromq/jeromq/pull/559): Added `recvStream` and\n  `recvStrStream` instance methods to the `ZMQ.Socket` class. These expose a\n  Stream of incoming messages, each of which is a `byte[]` or `String`,\n  respectively.\n\n* [#560](https://github.com/zeromq/jeromq/pull/560): ZMsg instance methods can\n  now be chained.\n\n* [#576](https://github.com/zeromq/jeromq/pull/576): Added an overload of\n  `ZMsg.recvMsg` that takes a `Consumer<ZMsg> handler` and a\n  `Consumer<ZMQException> exceptionHandler` for handling the result of\n  attempting to receive a message on a socket.\n\n* [#586](https://github.com/zeromq/jeromq/pull/586): Implemented a Timer API\n  based on the one added to libzmq in version 4.2.\n\n* [#590](https://github.com/zeromq/jeromq/pull/590): Added a `closeSelector`\n  method to the ZContext class, to expose a way for selectors created by\n  `createSelector` to be closed. Note that both of these methods are also\n  deprecated; it is not recommended to manage selectors directly, as these are\n  managed for you by pollers.\n\n* [#614](https://github.com/zeromq/jeromq/pull/614): Added a\n  `ZMQ_SELECTOR_PROVIDERCHOOSER` socket option that allows you to define a\n  custom\n  [SelectorProvider](https://docs.oracle.com/javase/8/docs/api/java/nio/channels/spi/SelectorProvider.html).\n\n### Changed\n\n* [**JeroMQ no longer supports Java\n  7.**](https://github.com/zeromq/jeromq/pull/557) Dropping support for Java 7\n  allows us to leverage the new features of Java 8, including the use of lambda\n  syntax to create IAttachedRunnable and IDetachedRunnable.\n\n* Refactored code to use Java 8 features like lambdas and streams in various\n  places. See [#570](https://github.com/zeromq/jeromq/pull/571) and\n  [#650](https://github.com/zeromq/jeromq/pull/650), for example.\n\n* [#510](https://github.com/zeromq/jeromq/pull/510): Polling now measures time\n  in nanoseconds instead of microseconds, ensuring a higher degree of precision.\n\n* [#523](https://github.com/zeromq/jeromq/pull/523): Fixed a bug where ZLoop was\n  closing the context.\n\n* [#525](https://github.com/zeromq/jeromq/pull/525): Fixed a bug in\n  `zmq.io.StreamEngine` that was causing an infinite loop in the IO thread,\n  blocking the application with 100% CPU usage.\n\n* [#527](https://github.com/zeromq/jeromq/pull/527): Fixed a bug in\n  `zmq.io.StreamEngine` where data could still be present inside the handshake\n  buffer that was not decoded.\n\n* [#535](https://github.com/zeromq/jeromq/pull/535): Fixed an edge case where,\n  once in a blue moon, after a socket fails to connect, and is subsequently\n  closed, it would still try to reconnect as if it weren't closed.\n\n* [#546](https://github.com/zeromq/jeromq/pull/546): Prior to this release, when\n  a ZContext was initialized, its internal `ZMQ.Context` would be null\n  initially, and the ZContext `isClosed` instance method would misleadingly\n  return `true`; the `ZMQ.Context` was being created lazily when `getContext`\n  was called on the ZContext. Worse, the internal context would be reset to\n  `null` after closing a ZContext, which could lead to problems if another\n  thread happened to try to use the ZContext after it was closed, resulting in a\n  new `ZMQ.Context` secretly being created. Now, the internal `ZMQ.Context` is\n  created upon initialization of the ZContext, and you can rely on it never\n  being null.\n\n* [#548](https://github.com/zeromq/jeromq/pull/550): Various javadoc updates and\n  improvements. There is now a `@Draft` annotation to identify work-in-progress\n  APIs that are unstable or experimental.\n\n* [#552](https://github.com/zeromq/jeromq/pull/552): Fixed a bug where internal\n  command messages (e.g. HEARTBEAT commands) were disrupting the REQ state\n  machine.\n\n* [#564](https://github.com/zeromq/jeromq/pull/564): Implemented the ability to\n  bind a socket via IPC or TCP with a dynamic (\"wildcard\") port and retrieve it\n  via `ZMQ.ZMQ_LAST_ENDPOINT`. Leveraged this to make our test suite more\n  reliable.\n\n* [#569](https://github.com/zeromq/jeromq/pull/569): Fixed an issue where an\n  overridable method was being used in the ZStar constructor.\n\n* [#578](https://github.com/zeromq/jeromq/pull/578): Fixed an issue where an\n  errno of 48 (\"address already in use\") would persist longer than intended\n  in the process of binding to a random port. Now, errno is reset to 0 after a\n  port is found.\n\n* [#581](https://github.com/zeromq/jeromq/pull/581): Fixed a bug where, if\n  you're polling in one thread and you close the context in another thread, it\n  would result in an uncaught ClosedSelectorException.\n\n* [#583](https://github.com/zeromq/jeromq/pull/583): Fixed a race condition\n  causing `ZMQ_CONNECT_RID` to sometimes be assigned to the wrong peer socket.\n\n* [#597](https://github.com/zeromq/jeromq/pull/597): Fixed a bug causing the\n  context to hang indefinitely after calling `destroy()`, if multiple sockets\n  had connected to the same socket.\n\n* [#609](https://github.com/zeromq/jeromq/pull/609): For numerous methods, when\n  invalid arguments are passed to the method, an InvalidArgumentException with a\n  friendly error message will now be thrown, instead of an assertion error.\n\n* [#610](https://github.com/zeromq/jeromq/pull/610): Added some asserts in\n  places where there could potentially be NullPointerExceptions.\n\n* [#623](https://github.com/zeromq/jeromq/pull/623): `Options.rcvbuf` and\n  `Options.sndbuf` will now adjust `Config.IN_BATCH_SIZE` and\n  `Config.OUT_BATCH_SIZE` accordingly.\n\n* [#634](https://github.com/zeromq/jeromq/pull/634): We are now using a 64-bit\n  long, instead of a 32-bit integer, as a cursor in the internal\n  `java.zmq.Signaler` class. This change should not affect the library user,\n  except that it will now take longer for the value to overflow. Previously,\n  with the 32-bit integer cursor, the Signaler could overflow within a month or\n  so under heavy load, causing serious problems such as a server being unable to\n  accept new client connections.\n\n* [#642](https://github.com/zeromq/jeromq/pull/642),\n  [#646](https://github.com/zeromq/jeromq/pull/646),\n  [#652](https://github.com/zeromq/jeromq/pull/652): Removed debug printing\n  intended for development use only.\n\n* [#643](https://github.com/zeromq/jeromq/pull/643): Added some checks in parts\n  of the codebase related to encryption and authentication mechanisms.\n\n* [#652](https://github.com/zeromq/jeromq/pull/652): IOExceptions that occur\n  during polling will now set `errno` more accurately depending on the\n  exception. Previously, the `errno` would always be set to `EINTR` when an\n  IOException occurs during polling.\n\n* [#653](https://github.com/zeromq/jeromq/pull/653): `ZError.toString` now\n  defaults to `\"errno \" + Integer.toString(code)` if a string version of that\n  error code hasn't been implemented.\n\n* [#654](https://github.com/zeromq/jeromq/pull/654): In a low-level place where\n\tan `IllegalStateException` was thrown with no arguments before, the string\n  value of the `errno` is now included to provide some context.\n\n* [#655](https://github.com/zeromq/jeromq/pull/655): In a low-level place in\n  the polling code, `EINTR` is now correctly reported to indicate that polling\n  was interrupted, whereas we used to miss it and try to poll again.\n\n* [#657](https://github.com/zeromq/jeromq/pull/657): When destroying a ZPoller,\n  we will no longer close the poller's Selector, as that is handled by the\n  context.\n\n* [#659](https://github.com/zeromq/jeromq/pull/659): Made internal\n  optimizations to ZContext. The only visible change should be that the order of\n  the sockets when you call `getSockets()` is no longer deterministic, as we are\n  now storing them internally in a Set rather than a List.\n\n* [#660](https://github.com/zeromq/jeromq/pull/660): When creating a socket and\n  the `maxSockets` limit is reached, a ZMQException is now thrown instead of the\n  more generic IllegalStateException.\n\n## v0.4.3 (2017-11-17)\n\n### Added\n\n* [#470](https://github.com/zeromq/jeromq/pull/470): Added an argument to the\n  ZBeacon constructor to configure datagram socket blocking behavior. The\n  default behavior (non-blocking) is preserved when the argument is omitted.\n\n* [#474](https://github.com/zeromq/jeromq/pull/474),\n  [#475](https://github.com/zeromq/jeromq/pull/475),\n  [#477](https://github.com/zeromq/jeromq/pull/477),\n  [#479](https://github.com/zeromq/jeromq/pull/479) Added features:\n  * ZAuth, an actor that manages authentication and handles ZAP requests.\n  * ZCert, an abstraction for CURVE certificates.\n  * ZCertStore, a sub-optimal store for certificates.\n  * ZConfig, to manage the ZPL file format.\n  * ZMonitor, for simplified socket monitoring.\n  * Reinstated support for the `ZMQ_MSG_ALLOCATOR` option. Added a\n    `setMsgAllocator` method in the ZMQ class for setting a custom message\n    allocator.\n\n* [#477](https://github.com/zeromq/jeromq/pull/477): Added an overload of\n  `ZAgent.recv` that takes a timeout argument.\n\n* [#498](https://github.com/zeromq/jeromq/pull/498): Implemented `Closable` for\n  `ZMQ.Poller`, providing a way to call `.close()` on a poller when you're done\n  with it and free the selector resource to avoid memory leaks.\n\n  It is recommended that you either close a poller or terminate the context when\n  you are done polling.\n\n### Changed\n\n* Miscellaneous Javadoc documentation tweaks/fixes.\n\n* [#453](https://github.com/zeromq/jeromq/pull/453),\n  [#462](https://github.com/zeromq/jeromq/pull/462),\n  [#471](https://github.com/zeromq/jeromq/pull/471): Fixed Android-specific\n  compilation issues.\n\n* [#454](https://github.com/zeromq/jeromq/pull/454): Fixed an issue where the\n  router was interpreting peers' socket identities as UTF-8 strings instead of\n  raw bytes.\n\n* [#460](https://github.com/zeromq/jeromq/pull/460): Fixed an issue where CURVE\n  keys were being parsed as strings.\n\n* [#461](https://github.com/zeromq/jeromq/pull/461),\n  [#501](https://github.com/zeromq/jeromq/pull/501): Fixed protocol handshake\n  issues that were causing interoperability problems between applications using\n  different versions of ZeroMQ/JeroMQ.\n\n* [#465](https://github.com/zeromq/jeromq/pull/465) Various small fixes:\n  * Fixed an uncaught divide by zero exception\n    ([#447](https://github.com/zeromq/jeromq/issues/447)).\n  * ZMQ.Socket class is no longer final.\n  * Handle interrupt caused by close in ZBeacon.\n\n* [#468](https://github.com/zeromq/jeromq/pull/468): Fix an issue where sockets\n  would disconnect when network connection was lost.\n\n* [#469](https://github.com/zeromq/jeromq/pull/469) Various small fixes:\n  * Fixed an error in comparison of byte arrays in the Mechanism class.\n  * Handled the possibility of receiving a null message in ZSocket by returning\n    null instead of throwing an uncaught NullPointerException.\n  * Fixed the return value of ZMQ.setHWM, which indicates the status of the\n    lower-level calls to set the send and receive HWM, but was doing so\n    incorrectly.\n\n* [#478](https://github.com/zeromq/jeromq/pull/478): Fixed an issue where, when\n  using an XPUB/XSUB proxy, the PUB socket was throwing an error when attempting\n  to send a message if all of the subscriptions have been removed.\n\n* [#479](https://github.com/zeromq/jeromq/pull/479): Various internal\n  improvements.\n\n* [#486](https://github.com/zeromq/jeromq/pull/486): Fixed an issue where it was\n  not possible to send two messages in a row without a successful receive in\n  between, even with the RELAXED option set on the REQ socket.\n\n* [#487](https://github.com/zeromq/jeromq/pull/487) Various improvements:\n  * Added some method name aliases for compatibility with the jzmq API, in\n    places where the JeroMQ method names differed.\n  * Miscellaneous internal refactoring to make JeroMQ code more similar to that\n    of jzmq.\n  * It is not possible to get the values of the ZMQ options `ZMQ_REQ_CORRELATE`\n    and `ZMQ_REQ_RELAXED`, so `getReqCorrelated` and `getReqRelaxed` are now\n    deprecated and will throw an UnsupportedOperationException when called.\n\n* [#492](https://github.com/zeromq/jeromq/pull/492): Fixed an issue where a\n  NullPointerException was thrown when trying to bind on an already used port,\n  for example when the socket has a monitor.\n\n* [#502](https://github.com/zeromq/jeromq/pull/502): Use explicit mutex locks to\n  help prevent problems caused by concurrent access to a ZContext. This makes\n  ZContext behave more like libzmq's zctx.\n\n## v0.4.2 (2017-06-29)\n\n* [#443](https://github.com/zeromq/jeromq/pull/443): Fix issue where JeroMQ was\nbroken on Android. Security no longer depends on libsodium and is now pure Java\n\n## v0.4.1 (2017-06-28)\n\n### Added\n\nJeroMQ is now based off of 4.1.7 of libzmq which means it now supports additional security features.\n\n### Changed\n\n* [#413](https://github.com/zeromq/jeromq/pull/413): fixed a NullPointerException when ZMQ.ZMQ_TCP_ACCEPT_FILTER is used\n\n* [#412](https://github.com/zeromq/jeromq/pull/412): tcp accept filter null pointer exception fix\n\n## v0.4.0 (2017-03-22)\n\n### Added\n\n* [#366](https://github.com/zeromq/jeromq/pull/366): support for `ZMQ_REQ_RELAXED` and `ZMQ_REQ_CORRELATE` socket options\n\n* [#375](https://github.com/zeromq/jeromq/pull/375): re-added `ZMQ.Socket.disconnect`, which had been removed in 0.3.6 because the contributor who originally added it did not agree to the license change from LGPL to MPLv2\n\n### Changed\n\n* [#374](https://github.com/zeromq/jeromq/pull/374):\n  * fixed a NullPointerException and mangling of existing indexes in ZMQ.Poller\n  * fixed a Windows bug in Signaler\n  * other small changes to keep JeroMQ in sync with jzmq\n\n* [#386](https://github.com/zeromq/jeromq/pull/386): improved deallocation of polling Selector resources. When creating a poller via `ZMQ.Context.poller` or `ZContext.createPoller`, the context will manage the Selector resources and ensure that they are deallocated when the context is terminated.\n\n* [#387](https://github.com/zeromq/jeromq/pull/387): (**BREAKING CHANGE**) It is no longer possible to create a ZMQ.Poller in any way except via a context.  This is to ensure that all Selector resources are deallocated when a context is terminated.\n\n* [#388](https://github.com/zeromq/jeromq/pull/388) `ZMQ.Socket.setLinger` can now be called safely after a context is terminated.\n\n* [#390](https://github.com/zeromq/jeromq/pull/390): fixed a bug where terminating a context while polling would sometimes cause a ClosedChannelException.\n\n* [#399](https://github.com/zeromq/jeromq/pull/399): fixed a NullPointerException that would sometimes occur when terminating a context\n\n* [#400](https://github.com/zeromq/jeromq/pull/400): (**BREAKING CHANGE**)\n  * deprecated the setters `setIoThreads`, `setMain` and `setContext` in `ZContext`. These parameters are set in the constructor and `final`. Because it is no longer possible to set these values after constructing a ZContext, the setters are now no-ops.\n\n* [#402](https://github.com/zeromq/jeromq/pull/402): added constructors for ZPoller that take a ZContext argument, thus making it possible to create a ZPoller whose Selector resources are managed by the context.\n\n## v0.3.6 (2016-09-27)\n\n### Added\n\n* [#292](https://github.com/zeromq/jeromq/pull/292/commits/12befcb27f13572a5a49669e433a399c3e5a72ac): support for `ZMQ_XPUB_NODROP` and `ZMQ_XPUB_VERBOSE_UNSUBSCRIBE` options\n\n* [#299](https://github.com/zeromq/jeromq/pull/299): a setter for UncaughtExceptionHandlers in ZBeacon threads\n\n* [#309](https://github.com/zeromq/jeromq/pull/309): MsgAllocator allows you to define how Msgs are allocated.\n\n* [#316](https://github.com/zeromq/jeromq/pull/316): ZSocket high-level API allows you to work with sockets directly without having to manage the ZMQ context.\n\n### Changed\n\n* [**JeroMQ no longer supports Java 6.**](https://github.com/zeromq/jeromq/pull/316/commits/3cafb3babdb7509ec7adb705e1dacb6a804294a7)\n\n* Changed from LGPL to [MPLv2](https://www.mozilla.org/en-US/MPL/2.0/) license.\n\n* Related to changing license, the following changes were made as a result of reverting pre-0.3.6 commits by contributors who did not agree to the license change:\n  * `ZMQ.Socket.disconnect` method removed\n  * [Slight changes to the way ephemeral ports are handled](https://github.com/zeromq/jeromq/pull/354/commits/f455c740be4950ea7973276c33141008dadd97e7).\n\n* [#266](https://github.com/zeromq/jeromq/pull/266): fixed a NullPointerException bug in `ZMsg.dump` when attempting to dump a ZMsg after its frames have been cleared\n\n* [#271](https://github.com/zeromq/jeromq/pull/271), [#272](https://github.com/zeromq/jeromq/pull/272): misc fixes and improvements to ZAgent, ZActor, ZProxy, and ZStar\n\n* [#295](https://github.com/zeromq/jeromq/pull/295): renamed `ZMQ.Socket.setRouterHandlover` to `ZMQ.Socket.setRouterHandover` (typo fix)\n\n* [#301](https://github.com/zeromq/jeromq/pull/301): fixed [a bug](https://github.com/zeromq/jeromq/issues/280) where if a frame failed to send, it would still try to send the next frame\n\n* [#306](https://github.com/zeromq/jeromq/pull/306), [#308](https://github.com/zeromq/jeromq/pull/308), [#311](https://github.com/zeromq/jeromq/pull/311): misc byte buffer performance improvements and bugfixes\n\n* [#324](https://github.com/zeromq/jeromq/pull/324): implementation changes to avoid extra bytes being copied in PUB/SUB\n\n## v0.3.5 (2015-07-15)\n\n * Capitalize constants\n * Use for each style\n * Issue #152 - Add unit test to test ZContext.close\n * Fix mislabeling issue\n * remove me from the AUTHORS file\n * Sometimes hostname resolution will fail.  Make sure that, if it does, we don't break the ioloop.\n * Narrowed exception handling a bit.  Makes me kind of nervous because the exceptions thrown are not documented.\n * remove email addresses\n * Fix issue #166 - Able to build using java 8\n * Fix issue #166 - Fix building project in a backwards compatible way\n * Replace home grown Multimap with guava\n * Update README.md\n * Normalize license header preamble that mirrors libzmq\n * Add Trevor Bernard as a contributor and sort authors\n * typo readme\n * Fix issue #176 - Remove auto-generated ant build files\n * Overload Socket send\n * Fix style violation of unittests\n * fix bug where poll does not accept -1 as argument\n * Issue #176 - Remove build.xml ant file\n * Fix all style violations\n * Remove superfluous limit\n * Move the wcursor increment after the assert\n * Improve imports\n * Issue #191 - Generates excess garbage on close\n * Port JeroMQ to be based on libzmq 3.2.5\n * Remove public method declaration in interfaces\n * Revert \"Remove public method declaration in interfaces\"\n * Change Chunk<T> to be a static inner class\n * Fix raw type parameterized warnings\n * Change constructor and method declarations to be public\n * Update plugins\n * Fix issue where project wasn't correctly importing using new m2eclipse plugin\n * Remove redundant if\n * Revert checkstyle plugin update to fix build error\n * Add ZBeacon implementation\n * Fix checkstyle errors\n * Problem: beacon messages are not always filtered out for local addresses\n * Problem: current ZBeacon tests are not testing whether messages are received.\n * Fix typo\n * Revert \"Replace home grown Multimap with guava\"\n * Remove redundant static modifier\n * Remove redundant encoding entry\n * Fix java6 build problem where req was failing with BOTTOM illegalstateexception\n * Remove redundant method\n * Fix #209 - Set errno on SocketBase instead of throwing IllegalArgumentException\n * Fix issue #197 - Don't call setReuseAddress on windows\n * Change version to 3.2.5\n * Make Mailbox,Thread and Reaper closeable\n * Router Handover\n * Rename xterminated into xpipeTerminated to follow libzmq\n * Fix exception for inproc bind fail\n * Fix issue #200\n * Remove redundant nested static modifer from interfaces\n * Ignore .checkstyle file\n * Fixed two bugs in test path. In flserver3.java ZFrame.equals(string) will always return false. and in cloneserv6.java equals method is called on an Array.\n * Revert \"Remove redundant method\"\n * Test receiving correctly a prefetched message when using a poller\n * Fix issue #228 - Add ZMQ_BLOCKY to Context to get a less surprising behaviour on context termination\n * Implementation proposal for Z-Components: ZPoller, ZAgent, ZStar, ZActor, ZProxy\n * Fixed typo in Features section.\n * Aligned punctuation and capitalized first letter in sentences.\n * pom.xml: missing bracket\n * Change ZMQ.bind() method to return void.\n * Fixed minor issues - documentation (javadoc links, ..) - possible NPEs - simplified some statements, removed unnecessary variables, ...\n * Break loop on finding the first non-printable character\n * Fix issue #243 - Add a copy section in the README specifying the license\n * Fix issue #245 - Double socket close no longer hangs\n * Set daemon flag on poller threads.\n * Set daemon flag on beacon and zthread threads.\n * Fix Spinning in Reaper Thread\n * Added constructors to ZMQException\n * Changed ZFrame.recvFrame to return null in non-overloaded method\n * Added ENOTSOCK error code\n * Added EAGAIN error (code already present)\n * Fix resource leak at socket close\n * Fix c-style method name\n\n## v0.3.4 (2014-05-15)\n\n* Various code improvements\n* Add unbind method to org.zeromq.ZMQ.Socket\n* Added double checked locking for shared variable context. getContext() and createSocket() should now be thread safe.\n* Extend support for ZMQ monitors to inline with jzmq\n* Apply checkstyle and sample changes\n* Fixed recvFrame to return null on no data. Added Test cases.\n* Corrected ZMsg documentation.\n* Adds lazy create context to getContext() method\n* Fix wrong Router xwrite_activated assert\n* Raise exception when bind fails\n* Fix issue #80\n* throw an exception if the ByteBuffer provided to Msg is not flipped\n* re-resolve tcp addresses on reconnections\n* add convenience methods to set TCP keep alive options\n* Refactor Msg to better handle memory and Java idiomatic\n* Force StreamEngine to use big endian\n* Remove org.jeromq.* namespace and associated tests\n* Revert back to use currentTimeMillis because it's less expensive than nanoTime\n* Fix issue #122 - handshake now uses ByteBuffer accessor methods directly\n\n## v0.3.2 (2013-12-10)\n\n* Various code improvements\n* Update junit to version 4.11\n* Fix issue #115 - Expose all Context options\n* Fix issue #58 - XPUB can receive multipart messages\n* Fix issue #109 - Make ZMQ.Context and ZMQ.Socket implement java.io.Closeable\n* Use UTF-8 as default charset\n* Use monotonic source for time\n* Use try finally idiom on locks\n* Backport fix for race condition on shutdown\n* sendByteBuffer should return number of sent bytes\n\n## v0.3.0 (2013-11-03)\n\n* [maven-release-plugin] prepare release v0.3.0\n* Prepare for release\n* Update maven plugins\n* Change groupId to zeromq\n* Use the org.zeromq groupId\n* Add build status icon\n* Fix issue #95 - Add travis-ci support\n* remove usage of bytebuffer just for the sake of a byte array\n* use configurable Charset in every String.getBytes() and new String()\n* support DirectByteBuffer on socket.sendByteBuffer()\n* ignore whole target and also ignore Eclipse's .settings folder\n* fixes zeromq/jeromq#86\n* Improved handling of ephemeral ports\n* Possible fix for a memory leak in Poller.fd_table.\n* subscriber should ignore HUGZ\n* support ZMQ_DELAY_ATTACH_ON_CONNECT socket option\n* Close inproc socket pairs on zmq_disconnect\n* Rewrite TestConnectDelay\n* Backport for LIBZMQ-541 fix\n* Fix issue when building with Ant and system default encoding is not UTF-8\n* Update clonesrv6.java\n* Ignore CtxTerminatedException at ZContext.destroy\n* Fix issue #76, #77 but at topic remove at trie\n* Remove global errno\n* expose special purpose raw zmq.SocketBase\n* Work around for LIBZMQ-496 The problem is that other threads might still be in mailbox::send() when it is destroyed. So as a workaround, we just acquire the mutex in the destructor. Therefore the running send will finish before the mailbox is destroyed.\n* patch for issue 456 Do not filter out duplicate subscriptions on the XSUB side of XSUB/XPUB, so that ZMQ_XPUB_VERBOSE doesn't get blocked by forwarding devices (as long as the devices all use ZMQ_XPUB_VERBOSE)\n* Issue #72 resource leak at Reaper\n* Issue #70 Remove thread local at errno\n* Fix IPv6 address parsing.\n* added osgi manifest headers with maven-bundle-plugin\n* osgi manifest\n* Fix issue #66 - Add ByteBuffer API to Sockets for sending and receiving messages\n* Fix a bug that socket disconnect didn't terminate properly\n* add setTCPKeepAlive socket option\n* add a pom helper for the latest sonatype snapshot\n* fix missing frame at monitoring\n* Add chapter 5 guide\n* ZMsg.recv documentation of flag options\n* new timer during handling timer_event doesn't set correctly\n* chapter 4 java guide\n* fix a bug which unsubscribe doesn't work correctly\n* Set the compiler version to 1.6\n* Suppress platform dependent encoding warning\n* ZContext.close doesn't have to throw an exception\n* implement Closeable on ZContext\n* user friendly error at bind failure\n* change jeromq package namespace and cleanup guide\n* Add set method for sockopt ZMQ_XPUB_VERBOSE\n* Add disconnect method\n* Ignore eclipse workspace files\n* rewrite poller as it compatile with jzmq\n* converted asyncsrv guide example to use the org.zeromq packaged code, and updated for the slightly different API.\n* fix constant collision between jzmq and czmq\n* simplify the ZMQ mayRaise logic\n* fix typo\n* make jzmq compatible and update examples\n* LIBZMQ-497 send unsent data in encoder buffer at termination\n* moving namespace from org.jeromq to org.zeromq\n* Issue#34 inproc connect should raise ZMQException\n* fix POLLOUT polling causes InvalidArgumentException\n* jdk epoll bug workaround\n* ZMsg.send returns boolean value\n* handle ConcurrentModification Exception\n* returns -1 with EAGAIN when mandatory is set and pipe is full\n* enhance device code\n* update README about 0.2.0 release\n* remove persistence related code\n* persistence helper encoder\n* start 0.3.0-SNAPSHOT\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.1953125,
          "content": "# Contributing to JeroMQ\n\n## Contribution Process\n\nThis project uses the [C4 process](https://rfc.zeromq.org/spec:42/C4/) for all code changes. \"Everyone, without distinction or discrimination, SHALL have an equal right to become a Contributor under the terms of this contract.\"\n\n## General Information\n\nThese [slides](http://www.slideshare.net/dongminyu/zeromq-jeromq) (a visualization of the [Internal Architecture of libzmq](http://zeromq.org/whitepapers:architecture) page) may be helpful if you are interesting in contributing to JeroMQ.\n\n## Running the Tests\n\nTo run the automated test battery:\n\n```\nmvn test\n```\n\nTo run a single test class (e.g. PubSubTest):\n\n```\nmvn -Dtest=PubSubTest test\n```\n\nBefore submitting a Pull Request, please be sure that the tests pass!\n\n## Running the Examples\n\nTo run the [ZGuide examples](https://github.com/zeromq/jeromq/tree/master/src/test/java/guide):\n\n```\nmvn exec:java -Dexec.mainClass=guide.hwserver -Dexec.classpathScope=test\n```\n\nOr run this [helper script](scripts/run-example):\n\n```\nscripts/run-example hwserver\n```\n\n## JeroMQ wiki\n\nFor miscellaneous information that hasn't yet been pulled into this document, please see the [wiki](https://github.com/zeromq/jeromq/wiki).\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 16.3330078125,
          "content": "Mozilla Public License Version 2.0\n==================================\n\n1. Definitions\n--------------\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n\n    (a) that the initial Contributor has attached the notice described\n        in Exhibit B to the Covered Software; or\n\n    (b) that the Covered Software was made available under the terms of\n        version 1.1 or earlier of the License, but not also under the\n        terms of a Secondary License.\n\n1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n\n1.8. \"License\"\n    means this document.\n\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n\n1.10. \"Modifications\"\n    means any of the following:\n\n    (a) any file in Source Code Form that results from an addition to,\n        deletion from, or modification of the contents of Covered\n        Software; or\n\n    (b) any new file in Source Code Form that contains any Covered\n        Software.\n\n1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\n2. License Grants and Conditions\n--------------------------------\n\n2.1. Grants\n\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n\n2.2. Effective Date\n\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n\n2.3. Limitations on Grant Scope\n\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\n\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n\n2.4. Subsequent Licenses\n\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n\n2.5. Representation\n\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n\n2.6. Fair Use\n\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n\n2.7. Conditions\n\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\n3. Responsibilities\n-------------------\n\n3.1. Distribution of Source Form\n\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n\n3.2. Distribution of Executable Form\n\nIf You distribute Covered Software in Executable Form then:\n\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n\n3.3. Distribution of a Larger Work\n\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n\n3.4. Notices\n\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n\n3.5. Application of Additional Terms\n\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\n4. Inability to Comply Due to Statute or Regulation\n---------------------------------------------------\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\n5. Termination\n--------------\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n************************************************************************\n*                                                                      *\n*  6. Disclaimer of Warranty                                           *\n*  -------------------------                                           *\n*                                                                      *\n*  Covered Software is provided under this License on an \"as is\"       *\n*  basis, without warranty of any kind, either expressed, implied, or  *\n*  statutory, including, without limitation, warranties that the       *\n*  Covered Software is free of defects, merchantable, fit for a        *\n*  particular purpose or non-infringing. The entire risk as to the     *\n*  quality and performance of the Covered Software is with You.        *\n*  Should any Covered Software prove defective in any respect, You     *\n*  (not any Contributor) assume the cost of any necessary servicing,   *\n*  repair, or correction. This disclaimer of warranty constitutes an   *\n*  essential part of this License. No use of any Covered Software is   *\n*  authorized under this License except under this disclaimer.         *\n*                                                                      *\n************************************************************************\n\n************************************************************************\n*                                                                      *\n*  7. Limitation of Liability                                          *\n*  --------------------------                                          *\n*                                                                      *\n*  Under no circumstances and under no legal theory, whether tort      *\n*  (including negligence), contract, or otherwise, shall any           *\n*  Contributor, or anyone who distributes Covered Software as          *\n*  permitted above, be liable to You for any direct, indirect,         *\n*  special, incidental, or consequential damages of any character      *\n*  including, without limitation, damages for lost profits, loss of    *\n*  goodwill, work stoppage, computer failure or malfunction, or any    *\n*  and all other commercial damages or losses, even if such party      *\n*  shall have been informed of the possibility of such damages. This   *\n*  limitation of liability shall not apply to liability for death or   *\n*  personal injury resulting from such party's negligence to the       *\n*  extent applicable law prohibits such limitation. Some               *\n*  jurisdictions do not allow the exclusion or limitation of           *\n*  incidental or consequential damages, so this exclusion and          *\n*  limitation may not apply to You.                                    *\n*                                                                      *\n************************************************************************\n\n8. Litigation\n-------------\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\n9. Miscellaneous\n----------------\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\n10. Versions of the License\n---------------------------\n\n10.1. New Versions\n\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n\n10.2. Effect of New Versions\n\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n\n10.3. Modified Versions\n\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\n\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\n\nExhibit A - Source Code Form License Notice\n-------------------------------------------\n\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\n\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\n\nYou may add additional accurate notices of copyright ownership.\n\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n---------------------------------------------------------\n\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.4580078125,
          "content": "\n# JeroMQ\n\nPure Java implementation of libzmq (http://zeromq.org).\n\n[![CircleCI](https://circleci.com/gh/zeromq/jeromq.svg?style=svg)](https://circleci.com/gh/zeromq/jeromq)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=zeromq_jeromq&metric=alert_status)](https://sonarcloud.io/dashboard?id=zeromq_jeromq)\n[![Coverage Status](https://coveralls.io/repos/github/zeromq/jeromq/badge.svg?branch=master)](https://coveralls.io/github/zeromq/jeromq?branch=master)\n[![Maven Central](https://img.shields.io/maven-central/v/org.zeromq/jeromq.svg)](https://maven-badges.herokuapp.com/maven-central/org.zeromq/jeromq)\n[![Javadocs](http://www.javadoc.io/badge/org.zeromq/jeromq.svg)](http://www.javadoc.io/doc/org.zeromq/jeromq)\n\n## Features\n\n* Based on libzmq 4.1.7.\n* ZMTP/3.0 (http://rfc.zeromq.org/spec:23).\n* tcp:// protocol and inproc:// is compatible with zeromq.\n* ipc:// protocol works only between jeromq (uses tcp://127.0.0.1:port internally).\n\n* Securities\n  * [PLAIN](http://rfc.zeromq.org/spec:24).\n  * [CURVE](http://rfc.zeromq.org/spec:25).\n\n* Performance that's not too bad, compared to native libzmq.\n  * 4.5M messages (100B) per sec.\n  * [Performance](https://github.com/zeromq/jeromq/wiki/Performance).\n* Exactly same developer experience with zeromq and jzmq.\n \n* TCP KeepAlive Count, Idle and Interval are known to only work with JVM 13 and later.\n\n## Unsupported\n\n* ipc:// protocol with zeromq. Java doesn't support UNIX domain socket.\n* pgm:// protocol. Cannot find a pgm Java implementation.\n* norm:// protocol. Cannot find a Java implementation.\n* tipc:// protocol. Cannot find a Java implementation.\n\n* GSSAPI mechanism is not yet implemented.\n\n* Interrupting threads is still unsupported: library is NOT Thread.interrupt safe.\n\n## Contributing\n\nContributions welcome! See [CONTRIBUTING.md](CONTRIBUTING.md) for details about the contribution process and useful development tasks.\n\n## Usage\n\n### Maven\n\nAdd it to your Maven project's `pom.xml`:\n\n```xml\n    <dependency>\n      <groupId>org.zeromq</groupId>\n      <artifactId>jeromq</artifactId>\n      <version>0.6.0</version>\n    </dependency>\n\n    <!-- for the latest SNAPSHOT -->\n    <dependency>\n      <groupId>org.zeromq</groupId>\n      <artifactId>jeromq</artifactId>\n      <version>0.6.0</version>\n    </dependency>\n\n    <!-- If you can't find the latest snapshot -->\n    <repositories>\n      <repository>\n        <id>sonatype-nexus-snapshots</id>\n        <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        <releases>\n          <enabled>false</enabled>\n        </releases>\n        <snapshots>\n          <enabled>true</enabled>\n        </snapshots>\n       </repository>\n    </repositories>\n```\n\n### Ant\n\nTo generate an ant build file from `pom.xml`, issue the following command:\n\n```bash\nmvn ant:ant\n```\n\n## Getting started\n\n### Simple example\n\nHere is how you might implement a server that prints the messages it receives\nand responds to them with \"Hello, world!\":\n\n```java\nimport org.zeromq.SocketType;\nimport org.zeromq.ZMQ;\nimport org.zeromq.ZContext;\n\npublic class hwserver\n{\n    public static void main(String[] args) throws Exception\n    {\n        try (ZContext context = new ZContext()) {\n            // Socket to talk to clients\n            ZMQ.Socket socket = context.createSocket(SocketType.REP);\n            socket.bind(\"tcp://*:5555\");\n\n            while (!Thread.currentThread().isInterrupted()) {\n                // Block until a message is received\n                byte[] reply = socket.recv(0);\n\n                // Print the message\n                System.out.println(\n                    \"Received: [\" + new String(reply, ZMQ.CHARSET) + \"]\"\n                );\n\n                // Send a response\n                String response = \"Hello, world!\";\n                socket.send(response.getBytes(ZMQ.CHARSET), 0);\n            }\n        }\n    }\n}\n```\n\n### More examples\n\nThe JeroMQ [translations of the zguide examples](src/test/java/guide) are a good\nreference for recommended usage.\n\n### Documentation\n\nFor API-level documentation, see the\n[Javadocs](http://www.javadoc.io/doc/org.zeromq/jeromq).\n\nThis repo also has a [doc](doc/) folder, which contains assorted \"how to do X\"\nguides and other useful information about various topics related to using\nJeroMQ.\n\n## License\n\nAll source files are copyright © 2007-2024 contributors as noted in the AUTHORS file.\n\nFree use of this software is granted under the terms of the Mozilla Public License 2.0. For details see the file `LICENSE` included with the JeroMQ distribution.\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "jeromq-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "jeromq-ipcsockets",
          "type": "tree",
          "content": null
        },
        {
          "name": "jeromq",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 10.984375,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>org.zeromq</groupId>\n  <artifactId>jeromq-pom</artifactId>\n  <packaging>pom</packaging>\n  <version>0.7.0-SNAPSHOT</version>\n  <name>JeroMQ</name>\n  <description>Pure Java implementation of libzmq</description>\n  <url>https://github.com/zeromq/jeromq</url>\n  <licenses>\n    <license>\n      <name>Mozilla Public License version 2.0</name>\n      <url>https://www.mozilla.org/en-US/MPL/2.0</url>\n    </license>\n  </licenses>\n  <scm>\n    <url>git@github.com:zeromq/jeromq.git</url>\n    <connection>scm:git:git@github.com:zeromq/jeromq.git</connection>\n    <developerConnection>scm:git:git@github.com:zeromq/jeromq.git</developerConnection>\n    <tag>HEAD</tag>\n  </scm>\n  <developers>\n    <developer>\n      <name>Trevor Bernard</name>\n      <id>trevorbernard</id>\n    </developer>\n    <developer>\n      <name>Dongmin Yu</name>\n      <id>miniway</id>\n    </developer>\n    <developer>\n      <name>Fabrice Bacchella</name>\n      <id>fbacchella</id>\n    </developer>\n    <developer>\n      <name>Dave Yarwood</name>\n      <id>daveyarwood</id>\n    </developer>\n    <developer>\n      <name>Frédéric Déléchamp</name>\n      <id>fredoboulo</id>\n    </developer>\n  </developers>\n  <properties>\n    <!-- Required by reproducible builds: https://maven.apache.org/guides/mini/guide-reproducible-builds.html -->\n    <project.build.outputTimestamp>0</project.build.outputTimestamp>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <maven.compiler.release>11</maven.compiler.release>\n    <!-- Indirection needed to keep optional jacoco settings and external argument lines-->\n    <arg.line />\n    <argLine>${arg.line}</argLine>\n    <checkstyle.file>${project.basedir}/src/checkstyle/checks.xml</checkstyle.file>\n    <maven.install.skip>false</maven.install.skip>\n  </properties>\n  <modules>\n    <module>jeromq-core</module>\n    <module>jeromq-ipcsockets</module>\n    <module>jeromq</module>\n  </modules>\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>4.13.2</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n  <distributionManagement>\n    <snapshotRepository>\n      <id>ossrh</id>\n      <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n    </snapshotRepository>\n    <repository>\n      <id>ossrh</id>\n      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n    </repository>\n  </distributionManagement>\n  <build>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-javadoc-plugin</artifactId>\n          <version>3.6.3</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-antrun-plugin</artifactId>\n          <version>3.1.0</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-clean-plugin</artifactId>\n          <version>3.3.2</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-dependency-plugin</artifactId>\n          <version>3.6.1</version>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-resources-plugin</artifactId>\n            <version>3.3.1</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>3.13.0</version>\n        </plugin>\n        <plugin>\n            <groupId>org.jacoco</groupId>\n            <artifactId>jacoco-maven-plugin</artifactId>\n            <version>0.8.12</version>\n        </plugin>\n        <plugin>\n            <groupId>org.sonarsource.scanner.maven</groupId>\n            <artifactId>sonar-maven-plugin</artifactId>\n            <version>3.10.0.2594</version>\n        </plugin>\n        <plugin>\n            <groupId>org.eluder.coveralls</groupId>\n            <artifactId>coveralls-maven-plugin</artifactId>\n            <version>4.3.0</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-surefire-plugin</artifactId>\n          <version>3.2.5</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-source-plugin</artifactId>\n          <version>3.3.1</version>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-jar-plugin</artifactId>\n            <version>3.4.1</version>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-assembly-plugin</artifactId>\n            <version>3.7.1</version>\n            <dependencies>\n              <dependency>\n                <groupId>org.codehaus.plexus</groupId>\n                <artifactId>plexus-archiver</artifactId>\n                <version>4.9.1</version>\n              </dependency>\n            </dependencies>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.felix</groupId>\n          <artifactId>maven-bundle-plugin</artifactId>\n          <version>5.1.9</version>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-site-plugin</artifactId>\n            <version>4.0.0-M13</version>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-project-info-reports-plugin</artifactId>\n            <version>3.5.0</version>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-checkstyle-plugin</artifactId>\n            <version>3.3.1</version>\n         </plugin>\n         <plugin>\n            <groupId>org.codehaus.mojo</groupId>\n            <artifactId>versions-maven-plugin</artifactId>\n            <version>2.16.2</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-shade-plugin</artifactId>\n          <version>3.5.2</version>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-install-plugin</artifactId>\n            <version>3.1.1</version>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-deploy-plugin</artifactId>\n            <version>3.1.1</version>\n        </plugin>\n        <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-gpg-plugin</artifactId>\n            <version>3.2.4</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-release-plugin</artifactId>\n          <version>3.0.1</version>\n        </plugin>\n        <plugin>\n          <groupId>biz.aQute.bnd</groupId>\n          <artifactId>bnd-maven-plugin</artifactId>\n          <version>6.4.0</version>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n  </build>\n  <reporting>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-javadoc-plugin</artifactId>\n        <configuration>\n          <detectJavaApiLink>true</detectJavaApiLink>\n          <tags>\n            <tag>\n              <name>api.note</name>\n              <placement>a</placement>\n              <head>API Note</head>\n            </tag>\n          </tags>\n        </configuration>\n        <reportSets>\n          <reportSet>\n            <id>aggregate</id>\n            <inherited>false</inherited>\n            <reports>\n              <report>aggregate</report>\n            </reports>\n          </reportSet>\n        </reportSets>\n      </plugin>\n    </plugins>\n  </reporting>\n  <profiles>\n    <profile>\n      <!-- Used with the phase 'site' to check plugins and dependency versions -->\n      <id>versions</id>\n      <reporting>\n        <plugins>\n          <plugin>\n            <groupId>org.codehaus.mojo</groupId>\n            <artifactId>versions-maven-plugin</artifactId>\n            <reportSets>\n              <reportSet>\n                <reports>\n                  <report>dependency-updates-report</report>\n                  <report>plugin-updates-report</report>\n                  <report>property-updates-report</report>\n                </reports>\n              </reportSet>\n            </reportSets>\n          </plugin>\n        </plugins>\n      </reporting>\n    </profile>\n    <profile>\n      <!-- Activate the checkstyle plugin, to ensure conformance with code style -->\n      <id>checkstyle</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-checkstyle-plugin</artifactId>\n            <executions>\n              <execution>\n                <phase>validate</phase>\n                <goals>\n                  <goal>check</goal>\n                </goals>\n                <configuration>\n                  <consoleOutput>true</consoleOutput>\n                  <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                  <configLocation>${checkstyle.file}</configLocation>\n                  <failOnViolation>true</failOnViolation>\n                  <excludes>**/guide/*</excludes>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>sonar</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.sonarsource.scanner.maven</groupId>\n            <artifactId>sonar-maven-plugin</artifactId>\n          </plugin>\n          <plugin>\n            <groupId>org.jacoco</groupId>\n            <artifactId>jacoco-maven-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>prepare-agent</id>\n                <goals>\n                  <goal>prepare-agent</goal>\n                </goals>\n              </execution>\n              <execution>\n                <id>report</id>\n                <goals>\n                  <goal>report</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <!-- Used to sign a release -->\n      <id>gpgsign</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-gpg-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>sign-artifacts</id>\n                <phase>verify</phase>\n                <goals>\n                  <goal>sign</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n   </profiles>\n</project>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}