{
  "metadata": {
    "timestamp": 1736608978681,
    "page": 186,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jboss-javassist/javassist",
      "stars": 4138,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3212890625,
          "content": "# https://editorconfig.org/\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\n\ntab_width = 8\nindent_size = 2\nij_continuation_indent_size = 4\nindent_style = space\n\ntrim_trailing_whitespace = true\n\n\n[*.{java,j}]\nindent_size = 4\nij_continuation_indent_size = 8\n\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1142578125,
          "content": ".idea/\nbin/\neclipse-output/\ntarget/\nruntest/\nhtml/\nlib/\ntmp/\n\n.DS_Store\n.classpath\n.project\n.settings\nTestLog.xml\n*~\n"
        },
        {
          "name": "Changes.md",
          "type": "blob",
          "size": 16.3056640625,
          "content": "### Changes\n\n### version 3.31\n\n* GitHub PR #480, #484, #486, #491, #492\n\n### version 3.30.2 on December 25, 2023\n\n* GitHub PR #473, 475, 476\n\n#### version 3.30.1 on December 17, 2023\n\n* GitHub Issue #471\n\n#### version 3.30 on December 17, 2023\n\n* GitHub PR #434, 448, 463 (Issue #462), 466, 467, 468, 469, 470,\n\n#### version 3.29.2 on September 14, 2022\n\n- GitHub Issue #427.\n\n#### version 3.29.1 on August 11, 2022\n\n* GitHub Issue #423.\n\n* `Readme.html` was deleted (GitHub Issue #414).\n\n#### version 3.29 on May 13, 2022\n\n* GitHub Issue #378, PR #278, #299, #382, #383, #390, #391, #395, #399, #409.\n\n#### version 3.28 on May 8, 2021\n\n* GitHub Issue #305, #328, #339, #350, #357, and PR #363.\n\n#### version 3.27 on March 19, 2020\n\n* GitHub Issue #271 (PR #279), #280 (PR #281), #282, and PR #294.\n\n#### version 3.26 on October 3, 2019\n\n* GitHub Issue #270 (PR #272), #265 (PR #267), #271, #222, and #275.\n\n#### version 3.25 on April 16, 2019\n\n* GitHub Issue #72 (PR #231), #241, #242 (PR #243), PR #244,\n#246 (PR #247), PR #250, #252 (PR #253), PR #254.\n\n#### version 3.24.1 on December 9, 2018\n\n* GitHub Issue #228, #229\n\n#### version 3.24 on November 1, 2018\n\n* Java 11 supports.\n* JIRA JASSIST-267.\n* Github PR #218.\n\n#### version 3.23.1 on July 2, 2018\n\n* Github PR #171.\n\n#### version 3.23 on June 21, 2018\n\n* Fix leaking file handlers in ClassPool and removed ClassPath.close(). Github issue #165.\n\n#### version 3.22 on October 10, 2017\n\n* Java 9 supports.\n* JIRA JASSIST-261.\n\n#### version 3.21 on October 4, 2016\n\n* JIRA JASSIST-244, 245, 248, 250, 255, 256, 259, 262.\n* `javassist.tools.Callback` was modified to be Java 1.4 compatible.\n    The parameter type of `Callback#result()` was changed.\n* The algorithm for generating a stack-map table was modified to fix github issue #83.\n* A bug of ProxyFactory related to default methods was fixed.  It is github issue #45. \n\n#### version 3.20 on June 25, 2015\n\n* JIRA JASSIST-241, 242, 246.\n\n#### version 3.19 on January 6, 2015\n\n* JIRA JASSIST-158, 205, 206, 207, 208, 209, 211, 212, 216, 220, 223, 224,\n            227, 230, 234, 235, 236, 237, 238, 240.\n\n#### version 3.18 on June 3, 2013\n\n* The source code repository has been moved to [GitHub](https://github.com/jboss-javassist/javassist).\n\n* JIRA JASSIST-181, 183, 184, 189, 162, 185, 186, 188, 190, 195, 199, 201.\n\n#### version 3.17.1 on December 3, 2012\n\n* JIRA JASSIST-177, 178, 182.\n\n#### version 3.17 on November 8, 2012\n\n* OSGi bundle info is now included in the jar file.\n\n* A stackmap generator has been rewritten.\n\n* JIRA JASSIST-160, 163, 166, 168, 170, 171, 174, 175, 176 have been fixed.\n\n#### version 3.16.1 on March 6, 2012\n\n* Maven now works.  JIRA JASSIST-44, 106, 156 have been fixed.\n\n#### version 3.16 on February 19, 2012\n\n* JIRA JASSIST-126, 127, 144, 145, 146, 147, 149, 150, 151, 152, 153, 155.\n\n* `javassist.bytecode.analysis.ControlFlow` was added.\n\n* Java 7 compatibility.\n\n#### version 3.15 on July 8, 2011\n\n* The license was changed to MPL/LGPL/Apache triple.\n\n* JIRA JASSIST-138 and 142 were fixed.\n\n#### version 3.14 on October 5, 2010\n\n* JIRA JASSIST-121, 123, 128, 129, 130, 131, 132.\n\n#### version 3.13 on July 19, 2010\n\n* JIRA JASSIST-118, 119, 122, 124, 125.\n\n#### version 3.12.1 on June 10, 2010\n\n#### version 3.12 on April 16, 2010\n\n#### version 3.11 on July 3, 2009\n\n* JIRA JASSIST-67, 68, 74, 75, 76, 77, 81, 83, 84, 85, 86, 87 were fixed.\n\n* Now javassist.bytecode.CodeIterator can insert a gap into\n    \ta large method body more than 32KB.  (JIRA JASSIST-79, 80)\n\n#### version 3.10 on March 5, 2009\n\n* JIRA JASSIST-69, 70, 71 were fixed.\n\n#### version 3.9 on October 9, 2008\n\n* ClassPool.makeClassIfNew(InputStream) was implemented.\n\n* CtNewMethod.wrapped(..) and CtNewConstructor.wrapped(..)\n    \timplicitly append a method like _added_m$0.\n    \tThis method now has a synthetic attribute.\n\n* JIRA JASSIST-66 has been fixed.\n\n#### version 3.8.1 on July 17, 2008\n\n* CtClass.rebuildClassFile() has been added.\n\n* A few bugs of javassist.bytecode.analysis have been fixed.\n    \t3.8.0 could not correctly deal with one letter class name\n    \tsuch as I and J.\n\n#### version 3.8.0 on June 13, 2008\n\n* javassist.bytecode.analysis was implemented.\n\n* JASSIST-45, 47, 51, 54-57, 60, 62 were fixed.\n\n#### version 3.7.1 on March 10, 2008\n\n* a bug of javassist.util.proxy has been fixed.\n\n#### version 3.7 on January 20, 2008\n\n* Several minor bugs have been fixed.\n\n#### version 3.6.0 on September 13, 2007\n\n#### version 3.6.0.CR1 on July 27, 2007\n\n* The stack map table introduced since Java 6 has been supported.\n\n* CtClass#getDeclaredBehaviors() now returns a class initializer\n            as well as methods and constructors.\n\n* The default status of automatic pruning was made off.\n    Instead of pruning, this version of Javassist compresses\n    the data structure of a class file after toBytecode() is called.\n    The compressed class file is automatically decompressed when needed.\n    This saves memory space better than pruning.\n\n* [JIRA JASSIST-33](http://jira.jboss.com/jira/browse/JASSIST-33) has been fixed.\n\n#### version 3.5 on April 29, 2007\n\n* Various minor updates.\n\n#### version 3.4 on November 17, 2006\n\n* A bug in CodeConverter#replaceFieldRead() and CodeConverter#replaceFieldWrite()\n    \twas fixed. [JBAOP-284](http://jira.jboss.com/jira/browse/JBAOP-284).\n\n\n\n* A synchronization bug and a performance bug in `javassist.util.proxy`\n        have been fixed\n        ([JASSIST-28](http://jira.jboss.com/jira/browse/JASSIST-28)).\n        Now generated proxy classes are cached.  To turn the caching off,\n        set `ProxyFactory.useCache` to `false`.\n\n#### version 3.3 on August 17, 2006\n\n* CtClass#toClass() and ClassPool#toClass() were modified to accept a\n        `ProtectionDomain`\n        ([JASSIST-23](http://jira.jboss.com/jira/browse/JASSIST-23)).\n        Now ClassPool#toClass(CtClass, ClassLoader) should not be overridden.  All\n        subclasses of ClassPool must override toClass(CtClass, ClassLoader,\n        ProtectionDomain).\n\n\n\n* CtClass#getAvailableAnnotations() etc. have been implemented.\n\n\n\n* A bug related to a way of dealing with a bridge method was fixed\n        ([HIBERNATE-37](http://jira.jboss.com/jira/browse/HIBERNATE-37)).\n\n\n\n* javassist.scopedpool package was added.\n\n#### version 3.2 on June 21, 2006\n\n* The behavior of CtBehavior#getParameterAnnotations() has been changed.\n    \tIt is now compatible to Java Reflection API\n    \t([JASSIST-19](http://jira.jboss.com/jira/browse/JASSIST-19)).\n\n#### version 3.2.0.CR2 on May 9, 2006\n\n* A bug of replace(String,ExprEditor) in javassist.expr.Expr has been fixed.\n\n* Updated ProxyFactory getClassLoader to choose the javassit class loader\n       when the proxy superclass has a null class loader (a jdk/endorsed class)\n       ([JASSIST-18](http://jira.jboss.com/jira/browse/JASSIST-18)).\n\n* Updated the throws clause of the javassist.util.proxy.MethodHandler\n       to be Throwable rather than Exception\n       ([JASSIST-16](http://jira.jboss.com/jira/browse/JASSIST-16)).\n\n#### version 3.2.0.CR1 on March 18, 2006\n\n* Annotations enhancements to javassist.bytecode.MethodInfo.\n\n* Allow a ClassPool to override the \"guess\" at the classloader to use.\n\n#### version 3.1 on February 23, 2006\n\n* getFields(), getMethods(), and getConstructors() in CtClass\n        were changed to return non-private memebers instead of only\n        public members.\n\n* getEnclosingClass() in javassist.CtClass was renamed\n          to getEnclosingMethod().\n\n* getModifiers() was extended to return Modifier.STATIC if the class\n          is a static inner class.\n\n* The return type of CtClass.stopPruning() was changed from void\n        to boolean.\n\n* toMethod() in javassist.CtConstructor has been implemented.\n\n* It includes new javassist.util.proxy package\n          similar to Enhancer of CGLIB.\n\n* The subpackages of Javassist were restructured.\n\n    * javassist.tool package was renamed to javassist.tools.\n\n    * HotSwapper was moved to javassist.util.\n\n    * Several subpackages were moved to javassist.tools.\n\n    * javassist.preproc package was elminated and the source was\n                moved to the sample directory.\n\n\n#### version 3.1 RC2 on September 7, 2005\n\n* RC2 is released mainly for an administrative reason.\n\n* A few bugs have been fixed.\n\n#### version 3.1 RC1 on August 29, 2005\n\n* Better annotation supports.  See `CtClass.getAnnotations()`\n* javassist.tool.HotSwapper was added.\n\n* javassist.ClassPool.importPackage() was added.\n\n* The compiler now accepts array initializers\n        (only one dimensional arrays).\n\n* javassist.Dump was moved to javassist.tool.Dump.\n\n* Many bugs were fixed.\n\n#### version 3.0 on January 18, 2005\n\n* The compiler now supports synchronized statements and finally\n      clauses.\n\n* You can now remove a method and a field.\n\n#### version 3.0 RC1 on September 13, 2004.\n\n* CtClass.toClass() has been reimplemented.  The behavior has been\n          changed.\n\n* javassist.expr.NewArray has been implemented.  It enables modifying\n          an expression for array creation.\n\n* `.class` notation has been supported.  The modified class\n          file needs javassist.runtime.DotClass at runtime.\n\n* a bug in `CtClass.getMethods()` has been fixed.\n\n* The compiler supports a switch statement.\n\n#### version 3.0 beta on May 18th, 2004.\n\n* The ClassPool framework has been redesigned.\n\n    * writeFile(), write(), ... in ClassPool have been moved to CtClass.\n\n    * The design of javassist.Translator has been changed.\n\n* javassist.bytecode.annotation has been added for meta tags.\n\n* CtClass.makeNestedClass() has been added.\n\n* The methods declared in javassist.bytecode.InnerClassesAttribute\n          have been renamed a bit.\n\n* Now local variables were made available in the source text passed to\n      CtBehavior.insertBefore(), MethodCall.replace(), etc.\n\n* CtClass.main(), which prints the version number, has been added.\n\n* ClassPool.SimpleLoader has been public.\n\n* javassist.bytecode.DeprecatedAttribute has been added.\n\n* javassist.bytecode.LocalVariableAttribute has been added.\n\n* CtClass.getURL() and javassist.ClassPath.find() has been added.\n\n* CtBehavior.insertAt() has been added.\n\n* CtClass.detach() has been added.\n\n* CodeAttribute.computeMaxStack() has been added.\n\n#### version 2.6 in August, 2003.\n\n* The behavior of CtClass.setSuperclass() was changed.\n          To obtain the previous behavior, call CtClass.replaceClassName().\n\n* CtConstructor.setBody() now works for class initializers.\n\n* CtNewMethod.delegator() now works for static methods.\n\n* javassist.expr.Expr.indexOfBytecode() has been added.\n\n* javassist.Loader has been modified so that getPackage() returns\n          a package object.\n\n* Now, the compiler can correctly compile a try statement and an\n          infinite while-loop.\n\n#### version 2.5.1 in May, 2003.\nSimple changes for integration with JBoss AOP\n\n* Made ClassPool.get0 protected so that subclasses of ClassPool can call it.\n\n* Moved all access to the class cache (the field ClassPool.classes) to a method called getCached(String classname).  This is so subclasses of ClassPool can override this behavior.\n\n#### version 2.5 in May, 2003.\nFrom this version, Javassist is part of the JBoss project.\n\n* The license was changed from MPL to MPL/LGPL dual.\n\n* ClassPool.removeClassPath() and ClassPath.close() have been added.\n\n* ClassPool.makeClass(InputStream) has been added.\n\n* CtClass.makeClassInitializer() has been added.\n\n* javassist.expr.Expr has been changed to a public class.\n\n* javassist.expr.Handler has been added.\n\n* javassist.expr.MethodCall.isSuper() has been added.\n\n* CtMethod.isEmpty() and CtConstructor.isEmpty() have been added.\n\n* LoaderClassPath has been implemented.\n\n#### version 2.4 in February, 2003.\n\n* The compiler included in Javassist did not correctly work with\n    \tinterface methods.  This bug was fixed.\n\n* Now javassist.bytecode.Bytecode allows more than 255 local\n    \tvariables in the same method.\n\n* javassist.expr.Instanceof and Cast have been added.\n\n* javassist.expr.{MethodCall,NewExpr,FieldAccess,Instanceof,Cast}.where()\n            have been added.  They return the caller-side method surrounding the\n    \texpression.\n\n* javassist.expr.{MethodCall,NewExpr,FieldAccess,Instanceof,Cast}.mayThrow()\n            have been added.\n\n* $class has been introduced.\n\n* The parameters to replaceFieldRead(), replaceFieldWrite(),\n          and redirectFieldAccess() in javassist.CodeConverter are changed.\n\n* The compiler could not correctly handle a try-catch statement.\n          This bug has been fixed.\n\n#### version 2.3 in December, 2002.\n\n* The tutorial has been revised a bit.\n\n* SerialVersionUID class was donated by Bob Lee.  Thanks.\n\n* CtMethod.setBody() and CtConstructor.setBody() have been added.\n\n* javassist.reflect.ClassMetaobject.useContextClassLoader has been added.\n      If true, the reflection package does not use Class.forName() but uses\n      a context class loader specified by the user.\n\n* $sig and $type are now available.\n\n* Bugs in Bytecode.write() and read() have been fixed.\n\n#### version 2.2 in October, 2002.\n\n* The tutorial has been revised.\n\n* A new package `javassist.expr` has been added.\n            This is replacement of classic `CodeConverter`.\n\n* javassist.ConstParameter was changed into\n    \tjavassist.CtMethod.ConstParameter.\n\n* javassist.FieldInitializer was renamed into\n    \tjavassist.CtField.Initializer.\n\n* A bug in javassist.bytecode.Bytecode.addInvokeinterface() has been\n    \tfixed.\n\n* In javassist.bytecode.Bytecode, addGetfield(), addGetstatic(),\n    \taddInvokespecial(), addInvokestatic(), addInvokevirtual(),\n    \tand addInvokeinterface()\n    \thave been modified to update the current statck depth.\n\n#### version 2.1 in July, 2002.\n\n* javassist.CtMember and javassist.CtBehavior have been added.\n\n* javassist.CtClass.toBytecode() has been added.\n\n* javassist.CtClass.toClass() and javassist.ClassPool.writeAsClass()\n    \thas been added.\n\n* javassist.ByteArrayClassPath has been added.\n\n* javassist.bytecode.Mnemonic has been added.\n\n* Several bugs have been fixed.\n\n#### version 2.0 (major update) in November, 2001.\n\n* The javassist.bytecode package has been provided.  It is a\n        lower-level API for directly modifying a class file although\n        the users must have detailed knowledge of the Java bytecode.\n\n* The mechanism for creating CtClass objects have been changed.\n\n* javassist.tool.Dump moves to the javassist package.\n\nversion 1.0 in July, 2001.\n\n* javassist.reflect.Metaobject and ClassMetaobject was changed.\n        Now they throw the same exception that they receive from a\n        base-level object.\n\n#### version 0.8\n\n* javassist.tool.Dump was added.  It is a class file viewer.\n\n* javassist.FiledInitializer.byNewArray() was added.  It is for\n        initializing a field with an array object.\n\n* javassist.CodeConverter.redirectMethodCall() was added.\n\n* javassist.Run was added.\n\n#### version 0.7\n\n* javassit.Loader was largely modified.  javassist.UserLoader was\n        deleted.  Instead, Codebase was renamed to ClassPath\n        and UserClassPath was added.  Now programmers who want to\n        customize Loader must write a class implementing UserClassPath\n        instead of UserLoader.  This change is for sharing class search paths\n        between Loader and CtClass.CtClass(String).\n\n* CtClass.addField(), addMethod(), addConstructor(), addWrapper() were\n        also largely modified so that it receives CtNewMethod, CtNewConstructor,\n        or CtNewField.  The static methods for creating these objects were\n        added to the API.\n\n* Constructors are now represented by CtConstructor objects.\n  CtConstructor is a subclass of CtMethod.\n\n* CtClass.getUserAttribute() was removed.  Use CtClass.getAttribute().\n\n* javassist.rmi.RmiLoader was added.\n\n* javassist.reflect.Metalevel._setMetaobject() was added.  Now\n        metaobjects can be replaced at runtime.\n\n#### version 0.6\n\n* Javassist was modified to correctly deal with array types appearing\n        in signatures.\n\n* A bug crashed resulting bytecode if a class includes a private static\n        filed.  It has been fixed.\n\n* javassist.CtNewInterface was added.\n\n* javassist.Loader.recordClass() was renamed into makeClass().\n\n* javassist.UserLoader.loadClass() was changed to take the second\nparameter.\n\n#### version 0.5\n\n* a bug-fix version.\n\n#### version 0.4\n\n* Major update again.  Many classes and methods were changed.\nMost of methods taking java.lang.Class have been changed to\ntake javassist.CtClass.\n\n#### version 0.3\n\n* Major update.  Many classes and methods were changed.\n\n#### version 0.2\n\n* Jar/zip files are supported.\n\n#### version 0.1 on April 16, 1999.\n\n* The first release.\n"
        },
        {
          "name": "Examples.md",
          "type": "blob",
          "size": 4.5556640625,
          "content": "How to run program examples\n---------------------------\n\nJDK 1.4 or later is needed.\n\n### 0. If you have Apache Ant\n\nRun the sample-all task.\nOtherwise, follow the instructions below.\n\n### 1. Move to the directory where this `Examples.md` file is located.\n\nIn the following instructions, we assume that the `javassist.jar`\nfile is included in the class path.\nFor example, the javac and java commands must receive\nthe following `classpath` option:\n\n```\n-classpath \".:javassist.jar\"\n```\n\nIf the operating system is Windows, the path\nseparator must be not `:` (colon) but\n`;` (semicolon).  The java command can receive\nthe `-cp` option\nas well as `-classpath`.\n\nIf you don't want to use the class-path option, you can make\n`javassist.jar` included in the `CLASSPATH`\nenvironment:\n\n```\nexport CLASSPATH=.:javassist.jar\n```\n\nor if the operating system is Windows:\n\n```\nset CLASSPATH=.;javassist.jar\n```\n\nOtherwise, you can copy  `javassist.jar` to the directory\n<_java-home_>`/jre/lib/ext`.\n\n\n<_java-home_> depends on the system.  It is usually\n`/usr/local/java` or `c:\\j2sdk1.4\\`, etc.\n\n### 2. `sample/Test.java`\n\nThis is a very simple program using Javassist.\n\nTo run, type the commands:\n\n```\n% javac sample/Test.java\n% java sample.Test\n```\n\nFor more details, see `sample/Test.java`\n\n### 3. `sample/reflect/*.java`\n\nThis is the \"verbose metaobject\" example well known in reflective\nprogramming.  This program dynamically attaches a metaobject to\na Person object.  The metaobject prints a message if a method\nis called on the Person object.\n\nTo run, type the commands:\n\n```\n% javac sample/reflect/*.java\n% java javassist.tools.reflect.Loader sample.reflect.Main Joe\n```\n\nCompare this result with that of the regular execution without reflection:\n\n```\n% java sample.reflect.Person Joe\n```\n\nFor more details, see sample/reflect/Main.java\n\nFurthermore, the Person class can be statically modified so that\nall the Person objects become reflective without sample.reflect.Main.\nTo do this, type the commands:\n\n```\n% java javassist.tools.reflect.Compiler sample.reflect.Person -m sample.reflect.VerboseMetaobj\n```\n\nThen,\n\n```\n% java sample.reflect.Person Joe\n```\n\n### 4. `sample/duplicate/*.java`\n\nThis is another example of reflective programming.\nTo run, type the commands:\n\n```\n% javac sample/duplicate/*.java\n% java sample.duplicate.Main\n```\n\nCompare this result with that of the regular execution without reflection:\n\n```\n% java sample.duplicate.Viewer\n```\n\nFor more details, see\n`sample/duplicate/Main.java`\n\n### 5. `sample/vector/*.java`\n\nThis example shows the use of Javassit for producing a class representing\na vector of a given type at compile time.\n\nTo run, type the commands:\n\n```\n% javac sample/vector/*.java\n% java sample.preproc.Compiler sample/vector/Test.j\n% javac sample/vector/Test.java\n% java sample.vector.Test\n```\n\nNote: `javassist.jar` is unnecessary to compile and execute\n`sample/vector/Test.java`.\nFor more details, see\n`sample/vector/Test.j` and `sample/vector/VectorAssistant.java`.\n\n### 6. `sample/rmi/*.java`\n\nThis demonstrates the `javassist.rmi` package.\nTo run, type the commands:\n\n```\n% javac sample/rmi/*.java\n% java sample.rmi.Counter 5001\n```\n\nThe second line starts a web server listening to port 5001.\n\nThen, open sample/rmi/webdemo.html\nwith a web browser running\non the local host.  (`webdemo.html` trys to fetch an applet from\n`http://localhost:5001/`, which is the web server we started above.)\n\nOtherwise, run `sample.rmi.CountApplet` as an application:\n\n```\n% java javassist.web.Viewer localhost 5001 sample.rmi.CountApplet\n```\n\n### 7. `sample/evolve/*.java`\n\nThis is a demonstration of the class evolution mechanism implemented\nwith Javassist.  This mechanism enables a Java program to reload an\nexisting class file under some restriction.\n\nTo run, type the commands:\n\n```\n% javac sample/evolve/*.java\n% java sample.evolve.DemoLoader 5003\n```\n\nThe second line starts a class loader DemoLoader, which runs a web\nserver DemoServer listening to port 5003.\n\nThen, open `http://localhost:5003/demo.html` with a web browser running\non the local host.\n(Or, see sample/evolve/start.html.)\n\n### 8. `sample/hotswap/*.java`\n\nThis shows dynamic class reloading by the JPDA.  It needs JDK 1.4 or later.\nTo run, first type the following commands:\n\n```\n% cd sample/hotswap\n% javac *.java\n% cd logging\n% javac *.java\n% cd ..\n```\n\nIf your Java is 1.4, then type:\n\n```\n% java -Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000 Test\n```\n\nIf you are using Java 5, then type:\n\n```\n% java -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000 Test\n```\n\nNote that the class path must include `JAVA_HOME/lib/tools.jar`.\n"
        },
        {
          "name": "License.html",
          "type": "blob",
          "size": 25.6396484375,
          "content": "<HTML>\n<HEAD>\n<TITLE>Javassist License</TITLE>\n<META http-equiv=Content-Type content=\"text/html; charset=iso-8859-1\">\n<META content=\"MSHTML 5.50.4916.2300\" name=GENERATOR></HEAD>\n\n<BODY text=#000000 vLink=#551a8b aLink=#ff0000 link=#0000ee bgColor=#ffffff>\n<CENTER><B><FONT size=+2>MOZILLA PUBLIC LICENSE</FONT></B> <BR><B>Version \n1.1</B> \n<P>\n<HR width=\"20%\">\n</CENTER>\n<P><B>1. Definitions.</B> \n<UL><B>1.0.1. \"Commercial Use\" </B>means distribution or otherwise making the \n  Covered Code available to a third party. \n  <P><B>1.1. ''Contributor''</B> means each entity that creates or contributes \n  to the creation of Modifications. \n  <P><B>1.2. ''Contributor Version''</B> means the combination of the Original \n  Code, prior Modifications used by a Contributor, and the Modifications made by \n  that particular Contributor. \n  <P><B>1.3. ''Covered Code''</B> means the Original Code or Modifications or \n  the combination of the Original Code and Modifications, in each case including \n  portions thereof<B>.</B> \n  <P><B>1.4. ''Electronic Distribution Mechanism''</B> means a mechanism \n  generally accepted in the software development community for the electronic \n  transfer of data. \n  <P><B>1.5. ''Executable''</B> means Covered Code in any form other than Source \n  Code. \n  <P><B>1.6. ''Initial Developer''</B> means the individual or entity identified \n  as the Initial Developer in the Source Code notice required by <B>Exhibit \n  A</B>. \n  <P><B>1.7. ''Larger Work''</B> means a work which combines Covered Code or \n  portions thereof with code not governed by the terms of this License. \n  <P><B>1.8. ''License''</B> means this document. \n  <P><B>1.8.1. \"Licensable\"</B> means having the right to grant, to the maximum \n  extent possible, whether at the time of the initial grant or subsequently \n  acquired, any and all of the rights conveyed herein. \n  <P><B>1.9. ''Modifications''</B> means any addition to or deletion from the \n  substance or structure of either the Original Code or any previous \n  Modifications. When Covered Code is released as a series of files, a \n  Modification is: \n  <UL><B>A.</B> Any addition to or deletion from the contents of a file \n    containing Original Code or previous Modifications. \n    <P><B>B.</B> Any new file that contains any part of the Original Code or \n    previous Modifications. <BR>&nbsp;</P></UL><B>1.10. ''Original Code''</B> \n  means Source Code of computer software code which is described in the Source \n  Code notice required by <B>Exhibit A</B> as Original Code, and which, at the \n  time of its release under this License is not already Covered Code governed by \n  this License. \n  <P><B>1.10.1. \"Patent Claims\"</B> means any patent claim(s), now owned or \n  hereafter acquired, including without limitation,&nbsp; method, process, and \n  apparatus claims, in any patent Licensable by grantor. \n  <P><B>1.11. ''Source Code''</B> means the preferred form of the Covered Code \n  for making modifications to it, including all modules it contains, plus any \n  associated interface definition files, scripts used to control compilation and \n  installation of an Executable, or source code differential comparisons against \n  either the Original Code or another well known, available Covered Code of the \n  Contributor's choice. The Source Code can be in a compressed or archival form, \n  provided the appropriate decompression or de-archiving software is widely \n  available for no charge. \n  <P><B>1.12. \"You'' (or \"Your\")&nbsp;</B> means an individual or a legal entity \n  exercising rights under, and complying with all of the terms of, this License \n  or a future version of this License issued under Section 6.1. For legal \n  entities, \"You'' includes any entity which controls, is controlled by, or is \n  under common control with You. For purposes of this definition, \"control'' \n  means (a) the power, direct or indirect, to cause the direction or management \n  of such entity, whether by contract or otherwise, or (b) ownership of more \n  than fifty percent (50%) of the outstanding shares or beneficial ownership of \n  such entity.</P></UL><B>2. Source Code License.</B> \n<UL><B>2.1. The Initial Developer Grant.</B> <BR>The Initial Developer hereby \n  grants You a world-wide, royalty-free, non-exclusive license, subject to third \n  party intellectual property claims: \n  <UL><B>(a)</B>&nbsp;<B> </B>under intellectual property rights (other than \n    patent or trademark) Licensable by Initial Developer to use, reproduce, \n    modify, display, perform, sublicense and distribute the Original Code (or \n    portions thereof) with or without Modifications, and/or as part of a Larger \n    Work; and \n    <P><B>(b)</B> under Patents Claims infringed by the making, using or selling \n    of Original Code, to make, have made, use, practice, sell, and offer for \n    sale, and/or otherwise dispose of the Original Code (or portions thereof). \n    <UL>\n      <UL></UL></UL><B>(c) </B>the licenses granted in this Section 2.1(a) and (b) \n    are effective on the date Initial Developer first distributes Original Code \n    under the terms of this License. \n    <P><B>(d) </B>Notwithstanding Section 2.1(b) above, no patent license is \n    granted: 1) for code that You delete from the Original Code; 2) separate \n    from the Original Code;&nbsp; or 3) for infringements caused by: i) the \n    modification of the Original Code or ii) the combination of the Original \n    Code with other software or devices. <BR>&nbsp;</P></UL><B>2.2. Contributor \n  Grant.</B> <BR>Subject to third party intellectual property claims, each \n  Contributor hereby grants You a world-wide, royalty-free, non-exclusive \n  license \n  <UL> <BR><B>(a)</B>&nbsp;<B> </B>under intellectual property rights (other \n    than patent or trademark) Licensable by Contributor, to use, reproduce, \n    modify, display, perform, sublicense and distribute the Modifications \n    created by such Contributor (or portions thereof) either on an unmodified \n    basis, with other Modifications, as Covered Code and/or as part of a Larger \n    Work; and \n    <P><B>(b)</B> under Patent Claims infringed by the making, using, or selling \n    of&nbsp; Modifications made by that Contributor either alone and/or in<FONT \n    color=#000000> combination with its Contributor Version (or portions of such \n    combination), to make, use, sell, offer for sale, have made, and/or \n    otherwise dispose of: 1) Modifications made by that Contributor (or portions \n    thereof); and 2) the combination of&nbsp; Modifications made by that \n    Contributor with its Contributor Version (or portions of such \n    combination).</FONT> \n    <P><B>(c) </B>the licenses granted in Sections 2.2(a) and 2.2(b) are \n    effective on the date Contributor first makes Commercial Use of the Covered \n    Code. \n    <P><B>(d)&nbsp;</B>&nbsp;&nbsp; Notwithstanding Section 2.2(b) above, no \n    patent license is granted: 1) for any code that Contributor has deleted from \n    the Contributor Version; 2)&nbsp; separate from the Contributor \n    Version;&nbsp; 3)&nbsp; for infringements caused by: i) third party \n    modifications of Contributor Version or ii)&nbsp; the combination of \n    Modifications made by that Contributor with other software&nbsp; (except as \n    part of the Contributor Version) or other devices; or 4) under Patent Claims \n    infringed by Covered Code in the absence of Modifications made by that \n    Contributor.</P></UL></UL>\n<P><BR><B>3. Distribution Obligations.</B> \n<UL><B>3.1. Application of License.</B> <BR>The Modifications which You create \n  or to which You contribute are governed by the terms of this License, \n  including without limitation Section <B>2.2</B>. The Source Code version of \n  Covered Code may be distributed only under the terms of this License or a \n  future version of this License released under Section <B>6.1</B>, and You must \n  include a copy of this License with every copy of the Source Code You \n  distribute. You may not offer or impose any terms on any Source Code version \n  that alters or restricts the applicable version of this License or the \n  recipients' rights hereunder. However, You may include an additional document \n  offering the additional rights described in Section <B>3.5</B>. \n  <P><B>3.2. Availability of Source Code.</B> <BR>Any Modification which You \n  create or to which You contribute must be made available in Source Code form \n  under the terms of this License either on the same media as an Executable \n  version or via an accepted Electronic Distribution Mechanism to anyone to whom \n  you made an Executable version available; and if made available via Electronic \n  Distribution Mechanism, must remain available for at least twelve (12) months \n  after the date it initially became available, or at least six (6) months after \n  a subsequent version of that particular Modification has been made available \n  to such recipients. You are responsible for ensuring that the Source Code \n  version remains available even if the Electronic Distribution Mechanism is \n  maintained by a third party. \n  <P><B>3.3. Description of Modifications.</B> <BR>You must cause all Covered \n  Code to which You contribute to contain a file documenting the changes You \n  made to create that Covered Code and the date of any change. You must include \n  a prominent statement that the Modification is derived, directly or \n  indirectly, from Original Code provided by the Initial Developer and including \n  the name of the Initial Developer in (a) the Source Code, and (b) in any \n  notice in an Executable version or related documentation in which You describe \n  the origin or ownership of the Covered Code. \n  <P><B>3.4. Intellectual Property Matters</B> \n  <UL><B>(a) Third Party Claims</B>. <BR>If Contributor has knowledge that a \n    license under a third party's intellectual property rights is required to \n    exercise the rights granted by such Contributor under Sections 2.1 or 2.2, \n    Contributor must include a text file with the Source Code distribution \n    titled \"LEGAL'' which describes the claim and the party making the claim in \n    sufficient detail that a recipient will know whom to contact. If Contributor \n    obtains such knowledge after the Modification is made available as described \n    in Section 3.2, Contributor shall promptly modify the LEGAL file in all \n    copies Contributor makes available thereafter and shall take other steps \n    (such as notifying appropriate mailing lists or newsgroups) reasonably \n    calculated to inform those who received the Covered Code that new knowledge \n    has been obtained. \n    <P><B>(b) Contributor APIs</B>. <BR>If Contributor's Modifications include \n    an application programming interface and Contributor has knowledge of patent \n    licenses which are reasonably necessary to implement that API, Contributor \n    must also include this information in the LEGAL file. \n  <BR>&nbsp;</P></UL>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; \n  <B>(c)&nbsp;&nbsp;&nbsp; Representations.</B> \n  <UL>Contributor represents that, except as disclosed pursuant to Section \n    3.4(a) above, Contributor believes that Contributor's Modifications are \n    Contributor's original creation(s) and/or Contributor has sufficient rights \n    to grant the rights conveyed by this License.</UL>\n  <P><BR><B>3.5. Required Notices.</B> <BR>You must duplicate the notice in \n  <B>Exhibit A</B> in each file of the Source Code.&nbsp; If it is not possible \n  to put such notice in a particular Source Code file due to its structure, then \n  You must include such notice in a location (such as a relevant directory) \n  where a user would be likely to look for such a notice.&nbsp; If You created \n  one or more Modification(s) You may add your name as a Contributor to the \n  notice described in <B>Exhibit A</B>.&nbsp; You must also duplicate this \n  License in any documentation for the Source Code where You describe \n  recipients' rights or ownership rights relating to Covered Code.&nbsp; You may \n  choose to offer, and to charge a fee for, warranty, support, indemnity or \n  liability obligations to one or more recipients of Covered Code. However, You \n  may do so only on Your own behalf, and not on behalf of the Initial Developer \n  or any Contributor. You must make it absolutely clear than any such warranty, \n  support, indemnity or liability obligation is offered by You alone, and You \n  hereby agree to indemnify the Initial Developer and every Contributor for any \n  liability incurred by the Initial Developer or such Contributor as a result of \n  warranty, support, indemnity or liability terms You offer. \n  <P><B>3.6. Distribution of Executable Versions.</B> <BR>You may distribute \n  Covered Code in Executable form only if the requirements of Section \n  <B>3.1-3.5</B> have been met for that Covered Code, and if You include a \n  notice stating that the Source Code version of the Covered Code is available \n  under the terms of this License, including a description of how and where You \n  have fulfilled the obligations of Section <B>3.2</B>. The notice must be \n  conspicuously included in any notice in an Executable version, related \n  documentation or collateral in which You describe recipients' rights relating \n  to the Covered Code. You may distribute the Executable version of Covered Code \n  or ownership rights under a license of Your choice, which may contain terms \n  different from this License, provided that You are in compliance with the \n  terms of this License and that the license for the Executable version does not \n  attempt to limit or alter the recipient's rights in the Source Code version \n  from the rights set forth in this License. If You distribute the Executable \n  version under a different license You must make it absolutely clear that any \n  terms which differ from this License are offered by You alone, not by the \n  Initial Developer or any Contributor. You hereby agree to indemnify the \n  Initial Developer and every Contributor for any liability incurred by the \n  Initial Developer or such Contributor as a result of any such terms You offer. \n\n  <P><B>3.7. Larger Works.</B> <BR>You may create a Larger Work by combining \n  Covered Code with other code not governed by the terms of this License and \n  distribute the Larger Work as a single product. In such a case, You must make \n  sure the requirements of this License are fulfilled for the Covered \nCode.</P></UL><B>4. Inability to Comply Due to Statute or Regulation.</B> \n<UL>If it is impossible for You to comply with any of the terms of this \n  License with respect to some or all of the Covered Code due to statute, \n  judicial order, or regulation then You must: (a) comply with the terms of this \n  License to the maximum extent possible; and (b) describe the limitations and \n  the code they affect. Such description must be included in the LEGAL file \n  described in Section <B>3.4</B> and must be included with all distributions of \n  the Source Code. Except to the extent prohibited by statute or regulation, \n  such description must be sufficiently detailed for a recipient of ordinary \n  skill to be able to understand it.</UL><B>5. Application of this License.</B> \n<UL>This License applies to code to which the Initial Developer has attached \n  the notice in <B>Exhibit A</B> and to related Covered Code.</UL><B>6. Versions \nof the License.</B> \n<UL><B>6.1. New Versions</B>. <BR>Netscape Communications Corporation \n  (''Netscape'') may publish revised and/or new versions of the License from \n  time to time. Each version will be given a distinguishing version number. \n  <P><B>6.2. Effect of New Versions</B>. <BR>Once Covered Code has been \n  published under a particular version of the License, You may always continue \n  to use it under the terms of that version. You may also choose to use such \n  Covered Code under the terms of any subsequent version of the License \n  published by Netscape. No one other than Netscape has the right to modify the \n  terms applicable to Covered Code created under this License. \n  <P><B>6.3. Derivative Works</B>. <BR>If You create or use a modified version \n  of this License (which you may only do in order to apply it to code which is \n  not already Covered Code governed by this License), You must (a) rename Your \n  license so that the phrases ''Mozilla'', ''MOZILLAPL'', ''MOZPL'', \n  ''Netscape'', \"MPL\", ''NPL'' or any confusingly similar phrase do not appear \n  in your license (except to note that your license differs from this License) \n  and (b) otherwise make it clear that Your version of the license contains \n  terms which differ from the Mozilla Public License and Netscape Public \n  License. (Filling in the name of the Initial Developer, Original Code or \n  Contributor in the notice described in <B>Exhibit A</B> shall not of \n  themselves be deemed to be modifications of this License.)</P></UL><B>7. \nDISCLAIMER OF WARRANTY.</B> \n<UL>COVERED CODE IS PROVIDED UNDER THIS LICENSE ON AN \"AS IS'' BASIS, WITHOUT \n  WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT \n  LIMITATION, WARRANTIES THAT THE COVERED CODE IS FREE OF DEFECTS, MERCHANTABLE, \n  FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE \n  QUALITY AND PERFORMANCE OF THE COVERED CODE IS WITH YOU. SHOULD ANY COVERED \n  CODE PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL DEVELOPER OR ANY \n  OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR \n  CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS \n  LICENSE. NO USE OF ANY COVERED CODE IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS \n  DISCLAIMER.</UL><B>8. TERMINATION.</B> \n<UL><B>8.1.&nbsp; </B>This License and the rights granted hereunder will \n  terminate automatically if You fail to comply with terms herein and fail to \n  cure such breach within 30 days of becoming aware of the breach. All \n  sublicenses to the Covered Code which are properly granted shall survive any \n  termination of this License. Provisions which, by their nature, must remain in \n  effect beyond the termination of this License shall survive. \n  <P><B>8.2.&nbsp; </B>If You initiate litigation by asserting a patent \n  infringement claim (excluding declatory judgment actions) against Initial \n  Developer or a Contributor (the Initial Developer or Contributor against whom \n  You file such action is referred to as \"Participant\")&nbsp; alleging that: \n  <P><B>(a)&nbsp; </B>such Participant's Contributor Version directly or \n  indirectly infringes any patent, then any and all rights granted by such \n  Participant to You under Sections 2.1 and/or 2.2 of this License shall, upon \n  60 days notice from Participant terminate prospectively, unless if within 60 \n  days after receipt of notice You either: (i)&nbsp; agree in writing to pay \n  Participant a mutually agreeable reasonable royalty for Your past and future \n  use of Modifications made by such Participant, or (ii) withdraw Your \n  litigation claim with respect to the Contributor Version against such \n  Participant.&nbsp; If within 60 days of notice, a reasonable royalty and \n  payment arrangement are not mutually agreed upon in writing by the parties or \n  the litigation claim is not withdrawn, the rights granted by Participant to \n  You under Sections 2.1 and/or 2.2 automatically terminate at the expiration of \n  the 60 day notice period specified above. \n  <P><B>(b)</B>&nbsp; any software, hardware, or device, other than such \n  Participant's Contributor Version, directly or indirectly infringes any \n  patent, then any rights granted to You by such Participant under Sections \n  2.1(b) and 2.2(b) are revoked effective as of the date You first made, used, \n  sold, distributed, or had made, Modifications made by that Participant. \n  <P><B>8.3.&nbsp; </B>If You assert a patent infringement claim against \n  Participant alleging that such Participant's Contributor Version directly or \n  indirectly infringes any patent where such claim is resolved (such as by \n  license or settlement) prior to the initiation of patent infringement \n  litigation, then the reasonable value of the licenses granted by such \n  Participant under Sections 2.1 or 2.2 shall be taken into account in \n  determining the amount or value of any payment or license. \n  <P><B>8.4.</B>&nbsp; In the event of termination under Sections 8.1 or 8.2 \n  above,&nbsp; all end user license agreements (excluding distributors and \n  resellers) which have been validly granted by You or any distributor hereunder \n  prior to termination shall survive termination.</P></UL><B>9. LIMITATION OF \nLIABILITY.</B> \n<UL>UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER TORT (INCLUDING \n  NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL YOU, THE INITIAL DEVELOPER, ANY \n  OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF COVERED CODE, OR ANY SUPPLIER OF ANY \n  OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY INDIRECT, SPECIAL, \n  INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT \n  LIMITATION, DAMAGES FOR LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR \n  MALFUNCTION, OR ANY AND ALL OTHER COMMERCIAL DAMAGES OR LOSSES, EVEN IF SUCH \n  PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES. THIS \n  LIMITATION OF LIABILITY SHALL NOT APPLY TO LIABILITY FOR DEATH OR PERSONAL \n  INJURY RESULTING FROM SUCH PARTY'S NEGLIGENCE TO THE EXTENT APPLICABLE LAW \n  PROHIBITS SUCH LIMITATION. SOME JURISDICTIONS DO NOT ALLOW THE EXCLUSION OR \n  LIMITATION OF INCIDENTAL OR CONSEQUENTIAL DAMAGES, SO THIS EXCLUSION AND \n  LIMITATION MAY NOT APPLY TO YOU.</UL><B>10. U.S. GOVERNMENT END USERS.</B> \n<UL>The Covered Code is a ''commercial item,'' as that term is defined in 48 \n  C.F.R. 2.101 (Oct. 1995), consisting of ''commercial computer software'' and \n  ''commercial computer software documentation,'' as such terms are used in 48 \n  C.F.R. 12.212 (Sept. 1995). Consistent with 48 C.F.R. 12.212 and 48 C.F.R. \n  227.7202-1 through 227.7202-4 (June 1995), all U.S. Government End Users \n  acquire Covered Code with only those rights set forth herein.</UL><B>11. \nMISCELLANEOUS.</B> \n<UL>This License represents the complete agreement concerning subject matter \n  hereof. If any provision of this License is held to be unenforceable, such \n  provision shall be reformed only to the extent necessary to make it \n  enforceable. This License shall be governed by California law provisions \n  (except to the extent applicable law, if any, provides otherwise), excluding \n  its conflict-of-law provisions. With respect to disputes in which at least one \n  party is a citizen of, or an entity chartered or registered to do business in \n  the United States of America, any litigation relating to this License shall be \n  subject to the jurisdiction of the Federal Courts of the Northern District of \n  California, with venue lying in Santa Clara County, California, with the \n  losing party responsible for costs, including without limitation, court costs \n  and reasonable attorneys' fees and expenses. The application of the United \n  Nations Convention on Contracts for the International Sale of Goods is \n  expressly excluded. Any law or regulation which provides that the language of \n  a contract shall be construed against the drafter shall not apply to this \n  License.</UL><B>12. RESPONSIBILITY FOR CLAIMS.</B> \n<UL>As between Initial Developer and the Contributors, each party is \n  responsible for claims and damages arising, directly or indirectly, out of its \n  utilization of rights under this License and You agree to work with Initial \n  Developer and Contributors to distribute such responsibility on an equitable \n  basis. Nothing herein is intended or shall be deemed to constitute any \n  admission of liability.</UL><B>13. MULTIPLE-LICENSED CODE.</B> \n<UL>Initial Developer may designate portions of the Covered Code as \n  \"Multiple-Licensed\".&nbsp; \"Multiple-Licensed\" means that the Initial \n  Developer permits you to utilize portions of the Covered Code under Your \n  choice of the MPL or the alternative licenses, if any, specified by the \n  Initial Developer in the file described in Exhibit A.</UL>\n<P><BR><B>EXHIBIT A -Mozilla Public License.</B> \n<UL>The contents of this file are subject to the Mozilla Public License \n  Version 1.1 (the \"License\"); you may not use this file except in compliance \n  with the License. You may obtain a copy of the License at \n  <BR>http://www.mozilla.org/MPL/ \n  <P>Software distributed under the License is distributed on an \"AS IS\" basis, \n  WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n  for the specific language governing rights and limitations under the\n  License.\n  <P>The Original Code is Javassist. \n  <P>The Initial Developer of the Original Code is Shigeru Chiba. \n  Portions created by the Initial Developer are<BR>&nbsp;\n  Copyright (C) 1999- Shigeru Chiba. All Rights Reserved. \n  <P>Contributor(s):  __Bill Burke, Jason T. Greene______________.\n\n<p>Alternatively, the contents of this software may be used under the\nterms of the GNU Lesser General Public License Version 2.1 or later\n(the \"LGPL\"), or the Apache License Version 2.0 (the \"AL\"),\nin which case the provisions of the LGPL or the AL are applicable\ninstead of those above. If you wish to allow use of your version of\nthis software only under the terms of either the LGPL or the AL, and not to allow others to\nuse your version of this software under the terms of the MPL, indicate\nyour decision by deleting the provisions above and replace them with\nthe notice and other provisions required by the LGPL or the AL. If you do not\ndelete the provisions above, a recipient may use your version of this\nsoftware under the terms of any one of the MPL, the LGPL or the AL.</p>\n\n<p>If you obtain this software as part of JBoss,\n  the contents of this software may be used under only the terms of the LGPL.\n  To use them under the MPL, you must obtain a separate package including only\n  Javassist but not the other part of JBoss.</p>\n\n<p>All the contributors to the original source tree have agreed to the original\n license term described above.</p>\n\n  <P></P></UL>\n</BODY>\n</HTML>\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.9658203125,
          "content": "[![Java CI with Maven](https://github.com/jboss-javassist/javassist/actions/workflows/maven.yml/badge.svg)](https://github.com/jboss-javassist/javassist/actions/workflows/maven.yml)\n\nJava bytecode engineering toolkit\n### [Javassist version 3](http://www.javassist.org)\n\nCopyright (C) 1999-2023 by Shigeru Chiba, All rights reserved.\n\nJavassist (JAVA programming ASSISTant) makes Java bytecode manipulation\nsimple. It is a class library for editing bytecodes in Java; it enables Java\nprograms to define a new class at runtime and to modify a class file when the\nJVM loads it. Unlike other similar bytecode editors, Javassist provides two\nlevels of API: source level and bytecode level. If the users use the source-\nlevel API, they can edit a class file without knowledge of the specifications\nof the Java bytecode. The whole API is designed with only the vocabulary of\nthe Java language. You can even specify inserted bytecode in the form of\nsource text; Javassist compiles it on the fly. On the other hand, the\nbytecode-level API allows the users to directly edit a class file as other\neditors.\n\nThis software is distributed under the Mozilla Public License Version 1.1,\nthe GNU Lesser General Public License Version 2.1 or later, or\nthe Apache License Version 2.0.\n\n#### Files\n\n  * [README.md](README.md)\nThis readme file.\n\n  * [Changes.md](Changes.md)\n  Release notes.\n\n  * [License.html](License.html)\nLicense file.\n\n  * [tutorial/tutorial.html](https://www.javassist.org/tutorial/tutorial.html)\nTutorial.\n\n  * ./javassist.jar\nThe Javassist jar file (class files).\n\n  * ./src/main\nThe source files\n\n  * [Examples.md](Examples.md)\nHow to run examples.\n\n  * [html/index.html](https://www.javassist.org/html/index.html)\nThe top page of the Javassist API document.\n\n#### Hints\n\nTo print the version number, type this command:\n\n```\njava -jar javassist.jar\n```\n\n#### Acknowledgments\n\nThe development of this software is sponsored in part by the PRESTO\nand CREST programs of [Japan\nScience and Technology Agency](http://www.jst.go.jp/).\n\nI'd like to thank Michiaki Tatsubori, Johan Cloetens,\nPhilip Tomlinson, Alex Villazon, Pascal Rapicault, Dan HE, Eric Tanter,\nMichael Haupt, Toshiyuki Sasaki, Renaud Pawlak, Luc Bourlier,\nEric Bui, Lewis Stiller, Susumu Yamazaki, Rodrigo Teruo Tomita,\nMarc Segura-Devillechaise, Jan Baudisch, Julien Blass, Yoshiki Sato,\nFabian Crabus, Bo Norregaard Jorgensen, Bob Lee, Bill Burke,\nRemy Sanlaville, Muga Nishizawa, Alexey Loubyansky, Saori Oki,\nAndreas Salathe, Dante Torres estrada, S. Pam, Nuno Santos,\nDenis Taye, Colin Sampaleanu, Robert Bialek, Asato Shimotaki,\nHoward Lewis Ship, Richard Jones, Marjan Sterjev,\nBruce McDonald, Mark Brennan, Vlad Skarzhevskyy,\nBrett Randall, Tsuyoshi Murakami, Nathan Meyers, Yoshiyuki Usui\nYutaka Sunaga, Arjan van der Meer, Bruce Eckel, Guillaume Pothier,\nKumar Matcha, Andreas Salathe, Renat Zubairov, Armin Haaf,\nEmmanuel Bernard, Jason T. Greene, Omer Kaspi,\nand all other contributors for their contributions.\n\nby [Shigeru Chiba](https://github.com/chibash)\n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 12.1669921875,
          "content": "<?xml version=\"1.0\"?>\n\n<!-- =================================================================== -->\n<!-- JBoss build file                                                    -->\n<!-- =================================================================== -->\n\n<project name=\"javassist\" default=\"jar\" basedir=\".\">\n\n  <property name=\"dist-version\" value=\"javassist-3.30.2-GA\"/>\n\n  <property environment=\"env\"/>\n  <property name=\"target.jar\" value=\"javassist.jar\"/>\n  <property name=\"target-src.jar\" value=\"javassist-src.jar\"/>\n  <property name=\"lib.dir\" value=\"${basedir}/lib\"/>\n  <property name=\"src.dir\" value=\"${basedir}/src/main\"/>\n  <property name=\"build.dir\" value=\"${basedir}/target\"/>\n  <property name=\"build.classes.dir\" value=\"${build.dir}/classes\"/>\n  <property name=\"test.src.dir\" value=\"${basedir}/src/test\"/>\n  <property name=\"test.lib.dir\" value=\"${test.src.dir}/resources\"/>\n  <property name=\"test.build.dir\" value=\"${build.dir}/test-classes\"/>\n  <property name=\"test.run.dir\" value=\"${build.dir}/runtest\"/>\n  <property name=\"test.reports.dir\" value = \"${build.dir}/test-output\"/>\n\n  <property name=\"run.dir\" value=\"${build.classes.dir}\"/>\n\n  <!-- Build classpath -->\n  <path id=\"classpath\">\n    <pathelement location=\"${build.classes.dir}\"/>\n  </path>\n\n  <property name=\"build.classpath\" refid=\"classpath\"/>\n\n  <path id=\"test.compile.classpath\">\n    <pathelement location=\"${build.classes.dir}\"/>\n    <pathelement location=\"${lib.dir}/junit.jar\"/>\n    <pathelement location=\"${lib.dir}/hamcrest.jar\"/>\n  </path>\n\n  <property name=\"test.compile.classpath\" refid=\"test.compile.classpath\"/>\n\n  <path id=\"test.classpath\">\n    <pathelement location=\"${test.build.dir}\"/>\n    <pathelement location=\"${test.lib.dir}\"/>\n    <pathelement location=\"${lib.dir}/junit.jar\"/>\n    <pathelement location=\"${lib.dir}/hamcrest.jar\"/>\n    <pathelement location=\"${build.classes.dir}\"/>\n  </path>\n\n  <property name=\"test.classpath\" refid=\"test.classpath\"/>\n\n  <!-- =================================================================== -->\n  <!-- Prepares the build directory                                        -->\n  <!-- =================================================================== -->\n  <target name=\"prepare\" >\n    <mkdir dir=\"${build.dir}\"/>\n    <mkdir dir=\"${build.classes.dir}\"/>\n    <mkdir dir=\"${test.build.dir}\"/>\n  \t<mkdir dir=\"${test.reports.dir}\"/>\n  \t<mkdir dir=\"${test.run.dir}\"/>\n  </target>\n\n  <!-- =================================================================== -->\n  <!-- Compiles the source code                                            -->\n  <!-- =================================================================== -->\n  <target name=\"compile\" depends=\"prepare\">\n    <javac srcdir=\"${src.dir}\"\n           destdir=\"${build.classes.dir}\"\n           debug=\"on\"\n           deprecation=\"on\"\n           optimize=\"off\"\n    \t   includeantruntime=\"true\"\n           includes=\"**\">\n            <classpath refid=\"classpath\"/>\n    </javac>\n  </target>\n\n  <target name=\"compile18\" depends=\"prepare\">\n    <javac srcdir=\"${src.dir}\"\n           destdir=\"${build.classes.dir}\"\n           debug=\"on\"\n           deprecation=\"on\"\n\t       source=\"1.8\"\n\t       target=\"1.8\"\n           optimize=\"off\"\n    \t   includeantruntime=\"true\"\n           includes=\"**\">\n      <classpath refid=\"classpath\"/>\n    </javac>\n  </target>\n\n  <target name=\"test-compile\" depends=\"compile\">\n    <javac srcdir=\"${test.src.dir}\"\n           destdir=\"${test.build.dir}\"\n           debug=\"on\"\n           deprecation=\"on\"\n           optimize=\"off\"\n    \t   includeantruntime=\"false\"\n           includes=\"**\">\n            <classpath refid=\"test.compile.classpath\"/>\n            <compilerarg value=\"-parameters\" />        \n    </javac>\n  </target>\n\n  <target name=\"runtest\" depends=\"jar,test-compile\">\n    <copy file=\"${test.lib.dir}/empty.jar\"\n          tofile=\"${test.lib.dir}/emptyorig.jar\"\n          preservelastmodified=\"true\" />\n    <junit fork=\"true\" printsummary=\"true\" dir=\"${test.run.dir}\">\n      <classpath refid=\"test.classpath\"/>\n      <formatter type=\"xml\" extension=\".xml\"/>\n      <test name=\"javassist.JvstTest\" outfile=\"TestLog\" />\n    </junit>\n    <move file=\"${test.lib.dir}/emptyorig.jar\"\n          tofile=\"${test.lib.dir}/empty.jar\" />\n  </target>\n\n  <target name=\"runtest8\" depends=\"jar,test-compile\">\n    <copy file=\"${test.lib.dir}/empty.jar\"\n          tofile=\"${test.lib.dir}/emptyorig.jar\"\n          preservelastmodified=\"true\" />\n    <junit fork=\"true\" printsummary=\"true\" dir=\"${test.run.dir}\">\n      <jvmarg value=\"-XX:-FailOverToOldVerifier\"/>\n      <classpath refid=\"test.classpath\"/>\n      <formatter type=\"xml\" extension=\".xml\"/>\n      <test name=\"javassist.JvstTest\" outfile=\"TestLog\" />\n    </junit>\n    <move file=\"${test.lib.dir}/emptyorig.jar\"\n          tofile=\"${test.lib.dir}/empty.jar\" />\n  </target>\n\n  <target name=\"runtest9\" depends=\"jar,test-compile\">\n    <copy file=\"${test.lib.dir}/empty.jar\"\n          tofile=\"${test.lib.dir}/emptyorig.jar\"\n          preservelastmodified=\"true\" />\n    <junit fork=\"true\" printsummary=\"true\" dir=\"${test.run.dir}\">\n      <jvmarg line=\"--add-opens java.base/java.lang=ALL-UNNAMED\" />\n      <jvmarg value=\"-XX:-FailOverToOldVerifier\"/>\n      <classpath refid=\"test.classpath\"/>\n      <formatter type=\"xml\" extension=\".xml\"/>\n      <test name=\"javassist.JvstTest\" outfile=\"TestLog\" />\n    </junit>\n    <move file=\"${test.lib.dir}/emptyorig.jar\"\n          tofile=\"${test.lib.dir}/empty.jar\" />\n  </target>\n\n  <target name=\"sample\" depends=\"compile\">\n    <javac srcdir=\"${basedir}\"\n           destdir=\"${build.classes.dir}\"\n           debug=\"on\"\n           deprecation=\"on\"\n           optimize=\"off\"\n           includes=\"sample/**\"\n           excludes=\"sample/hotswap/**,sample/evolve/sample/**\">\n            <classpath refid=\"classpath\"/>\n    </javac>\n\n    <copy file=\"sample/vector/Test.j\"\n          todir=\"${build.classes.dir}/sample/vector\"/>\n\n    <javac srcdir=\"${basedir}/sample/evolve\"\n           destdir=\"${build.classes.dir}/sample/evolve/\"\n           debug=\"on\"\n           deprecation=\"on\"\n           optimize=\"off\"\n           includes=\"sample/**\">\n            <classpath refid=\"classpath\"/>\n    </javac>\n    <copy todir=\"${build.classes.dir}/sample/evolve\">\n      <fileset dir=\"sample/evolve\"/>\n    </copy>\n    <copy file=\"${build.classes.dir}/sample/evolve/WebPage.class\"\n          tofile=\"${build.classes.dir}/sample/evolve/WebPage.class.0\"/>\n    <copy file=\"${build.classes.dir}/sample/evolve/sample/evolve/WebPage.class\"\n          tofile=\"${build.classes.dir}/sample/evolve/WebPage.class.1\"/>\n\n    <javac srcdir=\"${basedir}/sample/hotswap\"\n           destdir=\"${build.classes.dir}\"\n           debug=\"on\"\n           deprecation=\"on\"\n           optimize=\"off\"\n           includes=\"*\">\n            <classpath refid=\"classpath\"/>\n    </javac>\n    <mkdir dir=\"${build.classes.dir}/logging\"/>\n    <javac srcdir=\"${basedir}/sample/hotswap/logging\"\n           destdir=\"${build.classes.dir}/logging\"\n           debug=\"on\"\n           deprecation=\"on\"\n           optimize=\"off\"\n           includes=\"*\">\n            <classpath refid=\"classpath\"/>\n    </javac>\n    <echo>To run the sample programs without ant, change the current directory \nto ${build.classes.dir}.</echo>\n  </target>\n\n  <target name=\"jar\" depends=\"compile18\">\n    <jar jarfile=\"${target.jar}\" update=\"true\" manifest=\"${src.dir}/META-INF/MANIFEST.MF\">\n      <fileset dir=\"${build.classes.dir}\">\n      \t  <include name=\"**/*.class\"/>\n      </fileset>\n     </jar>\n    <jar jarfile=\"${target-src.jar}\" manifest=\"${src.dir}/META-INF/MANIFEST.MF\">\n      <fileset dir=\"${src.dir}\">\n        <include name=\"javassist/**\"/>\n      </fileset>\n    </jar>\n  </target>\n\n  <target name=\"javadocs\">\n  \t<mkdir dir=\"html\"/>\n    <javadoc\n           Locale=\"en_US\"\n           packagenames=\"javassist.*\"\n           excludepackagenames=\"javassist.compiler.*,javassist.convert.*,javassist.scopedpool.*,javassist.bytecode.stackmap.*\"\n           sourcepath=\"src/main\"\n           defaultexcludes=\"yes\"\n           destdir=\"html\"\n           author=\"true\"\n           version=\"true\"\n           use=\"true\"\n           public=\"true\"\n           nohelp=\"true\"\n           windowtitle=\"Javassist API\">\n      <doctitle><![CDATA[<h1>Javassist</h1>]]></doctitle>\n      <bottom><![CDATA[<i>Javassist, a Java-bytecode translator toolkit.<br>\nCopyright (C) 1999- Shigeru Chiba. All Rights Reserved.</i>]]></bottom>\n    </javadoc>\n  </target>\n\n  <target name=\"dist\" depends=\"jar,javadocs\">\n  \t<delete file=\"${dist-version}.zip\"/>\n  \t<delete file=\"TestLog.xml\"/>\n    <zip zipfile=\"${dist-version}.zip\">\n       <zipfileset dir=\"${basedir}\" prefix=\"${dist-version}\">\n       \t  <include name=\"html/**\"/>\n       \t  <include name=\"sample/**\"/>\n       \t  <include name=\"src/main/**\"/>\n       \t  <include name=\"tutorial/**\"/>\n       \t  <include name=\"*.html\"/>\n       \t  <include name=\"*.xml\"/>\n       \t  <include name=\"${target.jar}\"/>\n       </zipfileset>\n    </zip>\n  </target>\n\n  <target name=\"clean\">\n    <delete dir=\"html\"/>\n    <delete dir=\"${build.dir}\"/>\n    <delete file=\"${target.jar}\"/>\n    <delete file=\"${dist-version}.zip\"/>\n  </target>\n\n  <!-- =================================================================== -->\n  <!-- Run samples                                                         -->\n  <!-- =================================================================== -->\n\n  <target name = \"sample-all\"\n          depends=\"sample-test,sample-reflect,sample-duplicate,sample-vector\">\n    <echo>** please run sample-rmi, sample-evolve, and</echo>\n    <echo>   sample-hotswap (or -hotswap5) separately **</echo>\n  </target>\n\n  <target name = \"sample-test\" depends=\"sample\" >\n    <java fork=\"true\" dir=\"${run.dir}\" classname=\"sample.Test\">\n      <classpath refid=\"classpath\"/>\n    </java>\n  </target>\n\n  <target name = \"sample-reflect\" depends=\"sample\" >\n    <java fork=\"true\" dir=\"${run.dir}\" classname=\"javassist.tools.reflect.Loader\">\n      <classpath refid=\"classpath\"/>\n      <arg line=\"sample.reflect.Main Joe\" />\n    </java>\n  </target>\n\n  <target name = \"sample-duplicate\" depends=\"sample\" >\n    <echo>run sample.duplicate.Viewer without reflection</echo>\n    <java fork=\"true\" dir=\"${run.dir}\" classname=\"sample.duplicate.Viewer\">\n      <classpath refid=\"classpath\"/>\n    </java>\n    <echo>run sample.duplicate.Viewer with reflection</echo>\n    <java fork=\"true\" dir=\"${run.dir}\" classname=\"sample.duplicate.Main\">\n      <classpath refid=\"classpath\"/>\n    </java>\n  </target>\n\n  <target name = \"sample-vector\" depends=\"sample\" >\n    <echo>sample.preproc.Compiler sample/vector/Test.j</echo>\n    <java fork=\"true\" dir=\"${run.dir}\" classname=\"sample.preproc.Compiler\">\n      <classpath refid=\"classpath\"/>\n      <arg line=\"sample/vector/Test.j\"/>\n    </java>\n    <echo>javac sample/vector/Test.java</echo>\n    <javac srcdir=\"${build.classes.dir}\"\n           destdir=\"${build.classes.dir}\"\n           includes=\"sample/vector/Test.java\">\n            <classpath refid=\"classpath\"/>\n    </javac>\n    <java fork=\"true\" dir=\"${run.dir}\" classname=\"sample.vector.Test\" />\n  </target>\n\n  <target name = \"sample-rmi\" depends=\"sample\" >\n    <echo>** Please open sample/rmi/webdemo.html with your browser **</echo>\n    <java fork=\"true\" dir=\"${run.dir}\" classname=\"sample.rmi.Counter\">\n      <classpath refid=\"classpath\"/>\n      <arg value=\"5001\" />\n    </java>\n  </target>\n\n  <target name = \"sample-evolve\" depends=\"sample\" >\n    <echo>** Please open http://localhost:5003/demo.html with your browser **</echo>\n    <java fork=\"true\" dir=\"${run.dir}\" classname=\"sample.evolve.DemoLoader\">\n      <classpath refid=\"classpath\"/>\n      <arg value=\"5003\" />\n    </java>\n  </target>\n\n  <!-- for JDK 1.4 -->\n  <target name = \"sample-hotswap\" depends=\"sample\">\n    <echo>** JAVA_HOME/lib/tools.jar must be included in CLASS_PATH</echo>\n    <echo>** for JDK 1.4</echo>\n    <java fork=\"true\" dir=\"${run.dir}\" classname=\"Test\">\n      <jvmarg line=\"-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000\" />\n      <classpath refid=\"classpath\"/>\n    </java>\n  </target>\n\n  <!-- for Java 5 -->\n  <target name = \"sample-hotswap5\" depends=\"sample\">\n    <echo>** JAVA_HOME/lib/tools.jar must be included in CLASS_PATH</echo>\n    <echo>** for JDK 1.5 or later</echo>\n    <java fork=\"true\" dir=\"${run.dir}\" classname=\"Test\">\n      <jvmarg line=\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000\" />\n      <classpath refid=\"classpath\"/>\n    </java>\n  </target>\n</project>\n"
        },
        {
          "name": "javassist.jar",
          "type": "blob",
          "size": 776.0888671875,
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 11.576171875,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>org.javassist</groupId>\n  <artifactId>javassist</artifactId>\n  <version>3.30.2-GA</version>\n  <packaging>bundle</packaging>\n  <name>Javassist</name>\n  <description>\n    Javassist (JAVA programming ASSISTant) makes Java bytecode manipulation\n    simple. It is a class library for editing bytecodes in Java.\n  </description>\n  <url>https://www.javassist.org/</url>\n  <inceptionYear>1999</inceptionYear>\n\n  <licenses>\n    <!-- this is the license under which javassist is usually distributed\n      -->\n    <license>\n      <name>MPL 1.1</name>\n      <url>https://www.mozilla.org/en-US/MPL/1.1/</url>\n    </license>\n    <!-- this is the license under which javassist is distributed when\n         it is bundled with JBoss\n      -->\n    <license>\n      <name>LGPL 2.1</name>\n      <url>https://www.gnu.org/licenses/lgpl-2.1.html</url>\n    </license>\n    <!-- this is the license under which javassist can be distributed.\n      -->\n    <license>\n      <name>Apache License 2.0</name>\n      <url>https://www.apache.org/licenses/LICENSE-2.0</url>\n    </license>\n  </licenses>\n\n  <organization>\n    <name>Shigeru Chiba, www.javassist.org</name>\n  </organization>\n  <issueManagement>\n    <system>JIRA</system>\n    <url>https://jira.jboss.org/jira/browse/JASSIST/</url>\n  </issueManagement>\n  <scm>\n    <connection>scm:git:git@github.com:jboss-javassist/javassist.git</connection>\n    <developerConnection>scm:git:git@github.com:jboss-javassist/javassist.git</developerConnection>\n    <url>scm:git:git@github.com:jboss-javassist/javassist.git</url>\n  </scm>\n\n  <developers>\n    <developer>\n      <id>chiba</id>\n      <name>Shigeru Chiba</name>\n      <email>chiba@javassist.org</email>\n      <organization>The Javassist Project</organization>\n      <organizationUrl>https://www.javassist.org/</organizationUrl>\n      <roles>\n        <role>project lead</role>\n      </roles>\n      <timezone>9</timezone>\n    </developer>\n\n    <developer>\n      <id>adinn</id>\n      <name>Andrew Dinn</name>\n      <email>adinn@redhat.com</email>\n      <organization>JBoss</organization>\n      <organizationUrl>https://www.jboss.org/</organizationUrl>\n      <roles>\n        <role>contributing developer</role>\n      </roles>\n      <timezone>0</timezone>\n    </developer>\n\n    <developer>\n      <id>kabir.khan@jboss.com</id>\n      <name>Kabir Khan</name>\n      <email>kabir.khan@jboss.com</email>\n      <organization>JBoss</organization>\n      <organizationUrl>https://www.jboss.org/</organizationUrl>\n      <roles>\n        <role>contributing developer</role>\n      </roles>\n      <timezone>0</timezone>\n    </developer>\n\n    <developer>\n      <id>scottmarlow</id>\n      <name>Scott Marlow</name>\n      <email>smarlow@redhat.com</email>\n      <organization>JBoss</organization>\n      <organizationUrl>https://www.jboss.org/</organizationUrl>\n      <roles>\n        <role>contributing developer</role>\n      </roles>\n      <timezone>-5</timezone>\n    </developer>\n  </developers>\n\n  <distributionManagement>\n  <!--\n      You need entries in your .m2/settings.xml like this:\n   <servers>\n    <server>\n       <id>jboss-releases-repository</id>\n       <username>your_jboss.org_username</username>\n       <password>password</password>\n    </server>\n    <server>\n       <id>jboss-snapshots-repository</id>\n       <username>your_jboss.org_username</username>\n       <password>password</password>\n    </server>\n  </servers>\n\n  To deploy a snapshot, you need to run\n\n  mvn deploy -Dversion=3.x.y-SNAPSHOT\n\n  To deploy a release you need to change the version to 3.x.y-GA and run\n\n  mvn deploy\n    -->\n    <repository>\n      <id>jboss-releases-repository</id>\n      <name>JBoss Releases Repository</name>\n      <url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</url>\n    </repository>\n    <snapshotRepository>\n      <id>jboss-snapshots-repository</id>\n      <name>JBoss Snapshots Repository</name>\n      <url>https://repository.jboss.org/nexus/content/repositories/snapshots/</url>\n    </snapshotRepository>\n  </distributionManagement>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>[4.13.1,)</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.hamcrest</groupId>\n      <artifactId>hamcrest-all</artifactId>\n      <version>1.3</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <sourceDirectory>src/main/</sourceDirectory>\n    <testSourceDirectory>src/test/</testSourceDirectory>\n    <testResources>\n      <testResource>\n        <directory>src/test/resources</directory>\n      </testResource>\n    </testResources>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>3.2</version>\n        <configuration>\n          <source>1.8</source>\n          <target>1.8</target>\n          <testSource>11</testSource>\n          <testTarget>11</testTarget>\n          <testCompilerArgument>-parameters</testCompilerArgument>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <version>2.18.1</version>\n        <configuration>\n          <includes>\n            <include>javassist/JvstTest.java</include>\n          </includes>\n          <forkMode>once</forkMode>\n          <additionalClasspathElements>\n            <additionalClasspathElement>resources</additionalClasspathElement>\n          </additionalClasspathElements>\n          <workingDirectory>${project.build.directory}/runtest</workingDirectory>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <version>2.6</version>\n        <configuration>\n          <archive>\n            <manifest>\n              <mainClass>javassist.CtClass</mainClass>\n              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n            </manifest>\n            <manifestFile>src/main/META-INF/MANIFEST.MF</manifestFile>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <artifactId>maven-source-plugin</artifactId>\n        <version>2.0.4</version>\n        <executions>\n          <execution>\n            <id>attach-sources</id>\n            <goals>\n              <goal>jar</goal>\n            </goals>\n          </execution>\n        </executions>\n        <inherited>true</inherited>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-javadoc-plugin</artifactId>\n        <version>3.2.0</version>\n        <configuration>\n          <attach>true</attach>\n          <excludePackageNames>javassist.compiler:javassist.convert:javassist.scopedpool:javassist.bytecode.stackmap</excludePackageNames>\n          <bottom><![CDATA[<i>Javassist, a Java-bytecode translator toolkit.<br>\nCopyright (C) ${project.inceptionYear}- Shigeru Chiba. All Rights Reserved.</i>]]></bottom>\n          <show>public</show>\n          <nohelp>true</nohelp>\n          <doclint>none</doclint>\n          <source>8</source>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-enforcer-plugin</artifactId>\n        <version>3.4.1</version>\n        <executions>\n          <execution>\n            <id>enforces</id>\n            <goals>\n              <goal>enforce</goal>\n            </goals>\n            <configuration>\n              <rules>\n                <!-- official docs: https://maven.apache.org/enforcer/enforcer-rules/index.html -->\n                <requireMavenVersion>\n                  <version>3.2.5</version>\n                </requireMavenVersion>\n                <requireJavaVersion>\n                  <version>11</version>\n                </requireJavaVersion>\n              </rules>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.felix</groupId>\n        <artifactId>maven-bundle-plugin</artifactId>\n        <version>5.1.9</version>\n        <executions>\n          <execution>\n            <id>bundle-manifest</id>\n            <phase>process-classes</phase>\n            <goals>\n              <goal>manifest</goal>\n            </goals>\n          </execution>\n        </executions>\n        <configuration>\n          <supportedProjectTypes>\n            <supportedProjectType>jar</supportedProjectType>\n            <supportedProjectType>bundle</supportedProjectType>\n            <supportedProjectType>war</supportedProjectType>\n          </supportedProjectTypes>\n          <instructions>\n            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n            <Bundle-Version>${project.version}</Bundle-Version>\n            <Import-Package>!com.sun.jdi.*</Import-Package>\n            <Export-Package>!com.sun.jdi.*,javassist.*;version=\"${project.version}\"</Export-Package>\n          </instructions>\n        </configuration>\n        <extensions>true</extensions>\n      </plugin>\n    </plugins>\n  </build>\n  <profiles>\n    <!-- profile for releasing to sonatype repo\n         exercise with mvn -PcentralRelease\n      -->\n    <profile>\n      <id>centralRelease</id>\n      <!-- obviously we need to use the Sonatype staging repo for upload -->\n      <distributionManagement>\n        <repository>\n          <id>sonatype-releases-repository</id>\n          <name>Sonatype Releases Repository</name>\n          <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>\n        </repository>\n      </distributionManagement>\n      <!-- we need to be able to sign the jars we install -->\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-gpg-plugin</artifactId>\n            <version>3.1.0</version>\n            <configuration>\n              <passphrase>${gpg.passphrase}</passphrase>\n              <useAgent>${gpg.useAgent}</useAgent>\n            </configuration>\n            <executions>\n              <execution>\n                <id>sign-artifacts</id>\n                <phase>verify</phase>\n                <goals>\n                  <goal>sign</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <!-- profiles to add tools jar containing com.sun.jdi code\n         needed by sample code\n      -->\n    <profile>\n      <id>default-tools</id>\n      <activation>\n        <jdk>[,1.8]</jdk>\n      </activation>\n      <dependencies>\n        <dependency>\n          <groupId>com.sun</groupId>\n          <artifactId>tools</artifactId>\n          <version>${java.version}</version>\n          <scope>system</scope>\n          <optional>true</optional>\n          <systemPath>${java.home}/../lib/tools.jar</systemPath>\n        </dependency>\n      </dependencies>\n    </profile>\n    <profile>\n      <id>java9-tools</id>\n      <activation>\n        <jdk>[1.9,]</jdk>\n      </activation>\n      <dependencies>\n        <dependency>\n          <groupId>com.sun</groupId>\n          <artifactId>tools</artifactId>\n          <version>${java.version}</version>\n          <scope>system</scope>\n          <optional>true</optional>\n          <systemPath>${java.home}/lib/jrt-fs.jar</systemPath>\n        </dependency>\n      </dependencies>\n    </profile>\n  </profiles>\n</project>\n"
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorial",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}