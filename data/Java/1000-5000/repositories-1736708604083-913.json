{
  "metadata": {
    "timestamp": 1736708604083,
    "page": 913,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "commonmark/commonmark-java",
      "stars": 2337,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.0390625,
          "content": "comment:\n  layout: \"diff, flags, files\"\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.150390625,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\n\n[*.java]\nindent_style = space\nindent_size = 4\ncontinuation_indent_size = 8\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.103515625,
          "content": "# Eclipse\n.project\n.classpath\n.settings/\n\n# IntelliJ IDEA\n.idea\n*.iml\n\n# Maven\ntarget/\n\n# macOS\n.DS_Store\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 24.5283203125,
          "content": "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/).\nThis project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html),\nwith the exception that 0.x versions can break between minor versions.\n\n## [0.24.0] - 2024-10-21\n### Added\n- `SourceSpan` on nodes now have a `getInputIndex` to get the index within the\n  original input string (in addition to the existing line/column indexes).\n  This is useful when looking up the input source: It can now be done using\n  `substring` instead of having to split the input into lines first (#348)\n- Configurable line break rendering for `TextContentRenderer` via `lineBreakRendering`\n  on the builder; e.g. `LineBreakRendering.SEPARATE_BLOCKS` will render an empty\n  line between blocks (#344)\n### Changed\n- Adopted small changes from OpenJDK vendoring to make updates easier for them (#343)\n### Fixed\n- Enable overriding of built-in node rendering for `TextContentRenderer` (#346)\n\n## [0.23.0] - 2024-09-16\n### Added\n- New extension for footnotes!\n  - Syntax:\n    ```\n    Main text[^1]\n    \n    [^1]: Additional text in a footnote\n    ```\n  - Inline footnotes like `^[inline footnote]` are also supported when enabled\n    via an option in `FootnotesExtension.Builder`\n  - Use class `FootnotesExtension` in artifact `commonmark-ext-footnotes` (#332)\n- New option `omitSingleParagraphP` in `HtmlRenderer.Builder` for not using `<p>` \n  tags for when a document only has one paragraph (#150)\n- Support for custom link processing during inline parsing (e.g. `[foo]`),\n  see `Parser.Builder#linkProcessor`\n- Support for extending inline parsing with custom inline content parsers. See\n  `Parser.Builder#customInlineContentParserFactory`. This allows users/extensions\n  to hook into inline parsing on a deeper level than before (e.g. with delimiter\n  processors). It can be used to add support for math/latex formulas or other inline\n  syntax. (#321)\n### Changed\n- The default `DefaultUrlSanitizer` now also allows `data` as a protocol. Use the\n  constructor with a list to customize this. (#329)\n- `LinkReferenceDefinition` now extends `Block` (it was extending `Node`\n  directly before)\n- `MarkdownRenderer`: Don't escape `=` text if it's the first node in a block (#335)\n### Fixed\n- Fix parsing of link reference definitions with incorrect title syntax (followed\n  by characters other than space/tab). In that case, the title was set to the\n  partially-parsed title and the source spans were wrong. (#315)\n- Fix source spans of blocks with lazy continuation lines (#337)\n- `MarkdownRenderer`: Preserve thematic break literals (#331)\n\n## [0.22.0] - 2024-03-15\n### Added\n- New `MarkdownRenderer` for rendering nodes to Markdown (CommonMark) (#306)!\n  Note that while care is taken to produce equivalent Markdown, some differences\n  in the original Markdown (if parsed) are not preserved, such as:\n  - The type of heading used\n  - The type of link used (reference links will be rendered as inline links)\n  - Whether special characters are escaped or not\n  - Leading and trailing whitespace\n- Modular JAR (JPMS): All artifacts now include module descriptors (module-info)\n  so jlink can be used; the old `Automatic-Module-Name` manifest entries were removed\n- New package `org.commonmark.parser.beta` containing classes that are not part of\n  the stable API but are exported from the module because they might be useful for\n  extension parsers\n- New package `org.commonmark.text` for text related utilities that are useful for\n  both parsing and rendering\n- `TableCell` now has `getWidth` returning the number of dash and colon characters\n  in the delimiter row, useful for rendering proportional width tables (#296)\n- `ThematicBreak` now has `getLiteral` containing the string that was used in the\n  source when parsing (#309)\n- `ListItem` now has `getMarkerIndent` and `getContentIndent` for retrieving the\n  space between the start of the line and the marker/content\n- Deprecated a some properties of `BulletList`, `OrderedList`, `FencedCodeBlock`\n  and replaced with nullable ones because they might not be set when constructing\n  these nodes manually instead of via parsing\n### Changed\n- Java 11 or later is now required (dropping support for Java 8)\n- Update to CommonMark spec 0.31.2\n### Fixed\n- Fix `LinkReferenceDefinition` having null `SourceSpan` when title is present\n  and parsing with source spans option enabled (#310)\n\n## [0.21.0] - 2022-11-17\n### Added\n- GitHub strikethrough: With the previous version we adjusted the\n  extension to also accept the single tilde syntax. But if you use\n  another extension that uses the single tilde syntax, you will get a\n  conflict. To avoid that, `StrikethroughExtension` can now be\n  configured to require two tildes like before, see Javadoc.\n\n## [0.20.0] - 2022-10-20\n### Fixed\n- GitHub tables: A single pipe (optional whitespace) now ends a table\n  instead of crashing or being treated as an empty row, for consistency\n  with GitHub (#255).\n- GitHub strikethrough: A single tilde now also works, and more than two\n  tildes are not accepted anymore. This brings us in line with what\n  GitHub actually does, which is a bit underspecified (#267)\n- The autolink extension now handles source spans correctly (#209)\n\n## [0.19.0] - 2022-06-02\n### Added\n- YAML front matter extension: Limited support for single and double\n  quoted string values (#260)\n### Changed\n- Check argument of `enabledBlockTypes` when building parser instead of NPEing later\n\n## [0.18.2] - 2022-02-24\n### Changed\n- Test against Java 17\n- Bundle LICENSE.txt with artifacts (in addition to Maven metadata)\n\n## [0.18.1] - 2021-11-29\n### Fixed\n- Fix tables with leading/trailing header pipes and trailing spaces (#244).\n  This was a regression in 0.16.1 which is now fixed.\n\n## [0.18.0] - 2021-06-30\n### Changed\n- Update to CommonMark spec 0.30:\n  - Add `textarea` to list of literal HTML block tags.\n    Like `script`, `style`, and `pre`, `textarea` blocks can contain\n    blank lines without the contents being interpreted as commonmark.\n  - Fix case folding for link reference labels in some cases\n    (e.g. `áºž` and `SS` should match)\n  - Allow lowercase ASCII in HTML declaration\n  - Don't let type 7 HTML blocks interrupt lazy paragraphs either\n- Preserve the original case for the label of `LinkReferenceDefinition`.\n  Before, we used to store the normalized version (lowercase, collapsed whitespace).\n\n## [0.17.2] - 2021-05-14\n### Changed\n- Pass original instead of normalized label to `InlineParserContext` for lookup (#204).\n  This allows custom contexts to change the lookup logic and have access to the original\n  label content.\n  In case you have a custom implementation of `InlineParserContext`, you might need to adjust\n  it to do normalization.\n\n## [0.17.1] - 2021-02-03\n### Fixed\n- Fix emphasis surrounded by non-BMP punctuation/whitespace characters\n  (characters that are longer than one UTF-16 \"char\"). Note that this is\n  an edge case with rarely used Unicode characters, which a lot of other\n  implementations don't handle correctly.\n- Fix tables where the row starts with spaces and then the first `|` -\n  rows that didn't have spaces before were not affected (#199). This bug\n  is present in 0.16.1 and 0.17.0.\n\n## [0.17.0] - 2021-01-15\n### Changed\n- **ACTION REQUIRED**: Maven groupId has changed from `com.atlassian.commonmark` to `org.commonmark`\n  - To continue getting new versions of commonmark-java, change the Maven coordinates in your dependencies:\n  - Old: `<groupId>com.atlassian.commonmark</groupId>`\n  - New: `<groupId>org.commonmark</groupId>`\n\n## [0.16.1] - 2020-12-11\n### Added\n- Support for including source spans on block and inline nodes (#1):\n  - Answer for \"Where in the source input (line/column position and length) does this node come from?\"\n  - Useful for things like editors that want to keep the input and rendered output scrolled to the same lines,\n    or start editing on the node that was selected.\n  - Use `includeSourceSpans` on `Parser.Builder` to enable,\n    either with `IncludeSourceSpans.BLOCKS` or `IncludeSourceSpans.BLOCKS_AND_INLINES`\n  - Read data with `Node.getSourceSpans`\n  - Note that enabling this has a small performance impact on parsing (about 10%)\n### Changed\n- In order to support source spans (see above), a few of the extension\n  APIs changed. It should only affect users implementing their own\n  extensions. See the Javadoc to see what changed.\n- YAML front matter extension: Support dots in key names\n\n## [0.15.2] - 2020-07-20\n### Fixed\n- image-attributes extension: Fix unexpected altering of text in case\n  parsing of attributes fails, e.g. `{NN} text` -> `{NN text}`, thanks @jk1\n\n## [0.15.1] - 2020-05-29\n### Added\n- Add text content rendering support for `InsExtension`\n\n## [0.15.0] - 2020-05-21\n### Added\n- Extension for width/height attributes for images, thanks @dohertyfjatl\n  - Syntax: `![text](/url.png){width=640 height=480}`\n  - Use class `ImageAttributesExtension` in artifact `commonmark-ext-image-attributes`\n- Extension for task lists (GitHub-style), thanks @dohertyfjatl\n  - Syntax:\n    ```\n    - [x] task #1\n    - [ ] task #2\n    ```\n  - Use class `TaskListItemsExtension` in artifact `commonmark-ext-task-list-items`\n\n## [0.14.0] - 2020-01-22\n### Added\n- Add `sanitizeUrls` to `HtmlRenderer.Builder` to enable sanitizing URLs\n  of `<a>` and `<img>` tags. Sanitizing logic can be customized via\n  `urlSanitizer`. Thanks @VandorpeDavid\n\n## [0.13.1] - 2019-11-25\n### Fixed\n- Fix potential `StackOverflowError` for regular expressions used in the\n  inline parser (e.g. when parsing long HTML), thanks @lehvolk\n\n## [0.13.0] - 2019-07-15\n### Added\n- `LinkReferenceDefinition` nodes are now part of the document (not\n  rendered by default).\n- `InlineParserContext.getLinkReferenceDefinition` was added to allow\n  custom inline parsers to look up definitions for reference links.\n### Changed\n- Performance improvements compared to previous version:\n  - Parsing 7-10% faster\n  - HTML rendering 105% faster - or in other words, twice as fast!\n- Update to CommonMark spec 0.29 (#156):\n  - Change how newlines/spaces are handled in inline code\n  - Info strings for tilde code blocks can contain backticks and tildes\n  - Allow spaces inside link destinations in pointy brackets\n  - Disallow link destination beginning with `<` unless it is inside `<..>`\n  - Disallow unescaped '(' in link title in parens\n  - Disallow indenting list item marker by more than 3 spaces\n  - No longer treat `<meta>` as a block tag\n  - Link reference definitions can now be in setext headings too\n- Tables extension: Changes to match GitHub implementation:\n  - Escaping now only considers pipe characters when parsing tables:\n    `\\|` results in a literal `|` instead of a column, everything else\n    is passed through to inline parsing.\n  - Table body can now contain lazy continuation lines (without `|`).\n    An empty line or another block is needed to interrupt the table.\n  - For tables without a body, `<tbody>` is no longer rendered in HTML\n  - See https://github.github.com/gfm/#tables-extension- for details\n- Check non-null arguments early and provide a nicer message\n### Fixed\n- Fix incorrectly preserving HTML entities when rendering attributes\n- Fix pathological case with input `[\\\\\\\\...` (a lot of backslashes)\n- Fix pathological case with input `[]([]([](...`\n\n## [0.12.1] - 2018-11-13\n### Changed\n- Speed up parsing significantly: Compared to the previous version, the\n  benchmarks show up to 55% faster parsing for both small and large\n  documents! (#137, #140)\n- Parse backslash followed by unescapable character the same way as\n  the reference implementations.\n- Build and test on Java 11 as well.\n- autolink: Stop URLs at \" and \\` as well\n### Fixed\n- Fix tab handling in ATX and Setext headings.\n\n## [0.11.0] - 2018-01-17\n### Added\n- The extension for tables now also renders to plain text\n  (when using a `TextContentRenderer`), thanks @ahjaworski\n### Changed\n- Add `Automatic-Module-Name` manifest entries so that library can be used\n  nicely in Java 9 modules. The module names correspond to the root\n  package name: `org.commonmark`, `org.commonmark.ext.autolink`, etc.\n- Java 7 is now only supported on a best-effort basis (but it has been\n  EOL for quite some time, so yeah)\n\n## [0.10.0] - 2017-09-14\n### Added\n- Support multiple `DelimiterProcessor` with the same delimiter char as long\n  as they have different length, thanks @szeiger\n- Add tests for thread-safety and a section to the readme (#83)\n### Changed\n- Update to CommonMark spec 0.28 (#94):\n  - Adapt to changed emphasis parsing rule\n  - Allow nested parentheses in inline link destinations\n### Fixed\n- Fixes for text content rendering, thanks @JinneeJ:\n  - Support for mixed lists\n  - Fixed that whitespaces between text elements are removed in \"stripped\" mode.\n    For example `**text** and text` had rendered as `textand text`\n  - Improved rendering for auto links\n- Fix `[\\]` being parsed as link label\n- Fix `[foo](<\\>)` resulting in `\\` in href\n- Fix multiple of 3 rule for emphasis parsing (see commonmark/cmark#177)\n- Fix text node merging when opening/closing delimiters are adjacent (#96)\n- autolink: Fix linking of URLs without host, e.g. `http://.` (#99)\n\n## [0.9.0] - 2017-03-03\n### Added\n- Support restricting which block types are parsed, see `enabledBlockTypes`\n  method on `Parser.Builder` (#43), thanks @marksliva, @pivotal-graham-bell and\n  @lalunamel. This allows you to disable parsing of e.g. headings, they will\n  just be parsed as paragraphs instead.\n- Allow customizing the inline parser, see `inlineParserFactory` method on\n  `Parser.Builder` (#68), thanks @vreynolds and @lalunamel. Note that this is\n  experimental and currently requires using internal classes.\n### Changed\n- Wrap escaped HTML blocks in a `<p>` tag (#78)\n- Add missing `ext-heading-anchor` to `dependencyManagement` in parent pom,\n  thanks @drobert \n\n## [0.8.0] - 2016-12-09\n### Changed\n- Update to CommonMark spec 0.27 (#73):\n  - Treat h2..h6 as HTML blocks well\n  - Allow shortcut reference link before open parenthesis (if parenthesis is not\n    part of a valid inline link)\n- `AttributeProvider.setAttributes` now has an additional `tagName` argument and\n  is called for all HTML tags of a block. This allows users to add attributes\n  for the `pre` tag of a code block in addition to `code`. Also added attribute\n  provider support for additional HTML tags, namely `em`, `strong`, `code` and\n  `br`. (#74)\n### Fixed\n- ext-heading-anchor: Fix IllegalArgumentException on Android (#71)\n\n## [0.7.1] - 2016-10-05\n### Added\n- Allow to configure prefix/suffix for ID on `HeadingAnchorExtension` (#66),\n  thanks @paulthom12345\n\n## [0.7.0] - 2016-09-23\n### Added\n- Plain text content renderer (#58), thanks to @JinneeJ!\n  - Renders a plain text representation of a document instead of HTML, see\n    `TextContentRenderer` in core.\n  - Extensible in the same way as HTML rendering.\n- Heading anchor extension (#26), thanks to @paulthom12345!\n  - Adds \"id\" attribute to heading tags (e.g. `<h1 id=\"heading\">Heading</h1>`),\n    useful for linking to sections of a document.\n  - ID generation logic can also be used by itself via the `IdGenerator` class.\n  - Use class `HeadingAnchorExtension` in artifact `commonmark-ext-heading-anchor`\n- Ins (underline) extension (#54), thanks to @pabranch!\n  - Enables underlining of text by enclosing it in `++`. It's rendered as an\n    `ins` tag in HTML.\n  - Use class `InsExtension` in artifact `commonmark-ext-ins`.\n### Changed\n- `HtmlRenderer` and related classes moved from `org.commonmark.html` to\n  `org.commonmark.renderer.html`\n- `HtmlRenderer.Builder` no longer takes an `AttributeProvider`, but uses a\n  `AttributeProviderFactory` to instantiate a new provider for each rendering.\n  Code needs to be changed to create a factory and then return the existing\n  provider from its `create` method, similar to node renderers.\n- `NodeRendererFactory` was renamed to `HtmlNodeRendererFactory`, same for\n  related classes (there's a corresponsing interface for text content rendering)\n\n## [0.6.0] - 2016-07-25\n### Added\n- Add coverage data to build. Currently at 97 %.\n### Changed\n- Update to CommonMark spec 0.26 (#55)\n  - empty list items can no longer interrupt a paragraph; this resolves an\n    ambiguity with setext headers\n  - ordered lists can interrupt a paragraph only when beginning with 1\n  - the two-blank-lines-breaks-out-of-lists rule has been removed\n  - the spec for emphasis and strong emphasis has been refined to give more\n    intuitive results in some cases\n  - tabs can be used after the # in an ATX header and between the markers in a\n    thematic break\n- Simplify and speed up brackets processing (links/images)\n  - Improves the nested brackets pathological case (e.g. `[[[[a]]]]` with a lot\n    of brackets)\n  - Also contributed these changes upstream to\n    [commonmark.js](https://talk.commonmark.org/t/ann-commonmark-0-26-cmark-0-26-0-commonmark-js-0-26-0/2165)\n- Simplify merging of adjacent text nodes\n- Extended `DelimiterProcessor` interface so that implementations get more\n  information in `getDelimiterUse` and can reject delimiters by returning `0`\n  from it. Also rename the methods:\n  - `getOpeningDelimiterChar` -> `getOpeningCharacter`\n  - `getClosingDelimiterChar` -> `getClosingCharacter`\n  - `getMinDelimiterCount` -> `getMinLength`\n### Fixed\n- Fix max length for link labels (999, not 1000)\n- autolink: Stop URLs at more invalid characters, notably '<' and '>'.\n  According to RFC 3987, angle brackets are not allowed in URLs, and\n  other linkers don't seem to allow them either.\n\n## [0.5.1] - 2016-05-25\n### Fixed\n- Fix `StringIndexOutOfBoundsException` on line after tab (#52)\n\n## [0.5.0] - 2016-04-22\n### Added\n- Add YAML front matter extension for document metadata blocks (#24), thanks to\n  @chiwanpark \n- Add information about delimiter character and length to delimiter nodes (#10),\n  thanks to @pcj\n- Make HTML rendering for nodes extensible (#35)\n- Add support for asymmetric delimiters (#17):\n  `DelimiterProcessor#getDelimiterChar` was split into `getOpeningDelimiterChar`\n  and `getClosingDelimiterChar`\n### Changed\n- Make `AttributeProvider` work for image and table nodes (#31)\n- Update to CommonMark spec 0.25:\n  - Changes how partially consumed tabs are handled.\n- Add Android test project to build so that we won't break Android support\n  (#38), thanks to @JinneeJ\n- Replace `CustomHtmlRenderer` with `NodeRenderer` which also allows overriding\n  rendering for built-in node types (#35)\n### Fixed\n- Fix blank line after empty list item to terminate list\n- Fix nested bullet list indented with mix of tab and spaces (#41), thanks to\n  @derari \n- Fix package name in Javadoc, thanks to @jiakuan\n- autolink: Treat more special characters as trailing delimiters to not include\n  `\">`, `\"/>` and `\");` at the end of URLs\n- autolink: Fix unexpected link end with unfinished delimiter pairs in URLs\n- autolink: Fix Android incompatibility by not using `java.util.Objects`\n\n## [0.4.1] - 2016-02-11\n### Fixed\n- Fix problematic regex that doesn't work on some Java versions and Android\n- Fix problems with Android (usage of `java.util.Objects`, `StandardCharsets`,\n  ProGuard, see #30), thanks to @JinneeJ!\n### Changed\n- autolink extension: Update to autolink 0.3.0. This stops recognizing\n  \"abc://foo\" within \"1abc://foo\" as a link\n\n## [0.4.0] - 2016-01-18\n### Changed\nUpdate to CommonMark spec 0.24 (#28):\n- No longer allow whitespace between link text and link label\n- Don't allow whitespace in link destination even with <>\n- Don't use whitelist for schemes in autolinks, recognize all 2-32 length\n  schemes (see [spec](http://spec.commonmark.org/0.24/#scheme))\n- Allow multi-line content in setext headings\n\nAPI breaking changes (caused by changes in spec):\n- Rename `Header` to `Heading`\n- Rename `HorizontalRule` to `ThematicBreak`\n- Rename `HtmlTag` to `HtmlInline`\n- Replace `MatchedBlockParser#getParagraphStartLine` with `#getParagraphContent`\n  that returns the current content if the matched block is a paragraph\n\n## [0.3.2] - 2016-01-07\n### Fixed\n- Add more bounds checks to internal Substring class (might affect extensions)\n\n## [0.3.1] - 2015-12-01\n### Fixed\n-  Fix StringIndexOutOfBoundsException with unclosed inline link (#27)\n\n## [0.3.0] - 2015-10-15\n### Changed\n- Update to spec 0.22 (#14)\n- Allow block parsers from extensions to override core behavior (#18)\n- Fix compilation without `install` (#19)\n- Parent pom, build and README updates\n\n## [0.2.0] - 2015-08-20\n### Added\n- Add method `Node parseReader(java.io.Reader)` to `Parser` (#2)\n- Extend Javadoc and publish online (#4)\n### Fixed\n- Fix StringIndexOutOfBoundsException on some inputs (#13)\n- ext-gfm-tables: Implement single-column tables (#7)\n\n## [0.1.0] - 2015-07-22\n### Added\nInitial release of commonmark-java, a port of commonmark.js with extensions\nfor autolinking URLs, GitHub flavored strikethrough and tables.\n\n[0.24.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.23.0...commonmark-parent-0.24.0\n[0.23.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.22.0...commonmark-parent-0.23.0\n[0.22.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.21.0...commonmark-parent-0.22.0\n[0.21.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.20.0...commonmark-parent-0.21.0\n[0.20.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.19.0...commonmark-parent-0.20.0\n[0.19.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.18.2...commonmark-parent-0.19.0\n[0.18.2]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.18.1...commonmark-parent-0.18.2\n[0.18.1]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.18.0...commonmark-parent-0.18.1\n[0.18.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.17.2...commonmark-parent-0.18.0\n[0.17.2]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.17.1...commonmark-parent-0.17.2\n[0.17.1]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.17.0...commonmark-parent-0.17.1\n[0.17.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.16.1...commonmark-parent-0.17.0\n[0.16.1]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.15.2...commonmark-parent-0.16.1\n[0.15.2]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.15.1...commonmark-parent-0.15.2\n[0.15.1]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.15.0...commonmark-parent-0.15.1\n[0.15.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.14.0...commonmark-parent-0.15.0\n[0.14.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.13.1...commonmark-parent-0.14.0\n[0.13.1]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.13.0...commonmark-parent-0.13.1\n[0.13.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.12.1...commonmark-parent-0.13.0\n[0.12.1]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.11.0...commonmark-parent-0.12.1\n[0.11.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.10.0...commonmark-parent-0.11.0\n[0.10.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.9.0...commonmark-parent-0.10.0\n[0.9.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.8.0...commonmark-parent-0.9.0\n[0.8.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.7.1...commonmark-parent-0.8.0\n[0.7.1]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.7.0...commonmark-parent-0.7.1\n[0.7.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.6.0...commonmark-parent-0.7.0\n[0.6.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.5.1...commonmark-parent-0.6.0\n[0.5.1]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.5.0...commonmark-parent-0.5.1\n[0.5.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.4.1...commonmark-parent-0.5.0\n[0.4.1]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.4.0...commonmark-parent-0.4.1\n[0.4.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.3.2...commonmark-parent-0.4.0\n[0.3.2]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.3.1...commonmark-parent-0.3.2\n[0.3.1]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.3.0...commonmark-parent-0.3.1\n[0.3.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.2.0...commonmark-parent-0.3.0\n[0.2.0]: https://github.com/commonmark/commonmark-java/compare/commonmark-parent-0.1.0...commonmark-parent-0.2.0\n[0.1.0]: https://github.com/commonmark/commonmark-java/commits/commonmark-parent-0.1.0\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.421875,
          "content": "# Contributor Code of Conduct\n\nAs contributors and maintainers of this project, and in the interest of fostering an open and welcoming community, we pledge to respect all people who contribute through reporting issues, posting feature requests, updating documentation, submitting pull requests or patches, and other activities.\n\nWe are committed to making participation in this project a harassment-free experience for everyone, regardless of level of experience, gender, gender identity and expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion, or nationality.\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery\n* Personal attacks\n* Trolling or insulting/derogatory comments\n* Public or private harassment\n* Publishing other's private information, such as physical or electronic addresses, without explicit permission\n* Submitting contributions or comments that you know to violate the intellectual property or privacy rights of others\n* Other unethical or unprofessional conduct\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\nBy adopting this Code of Conduct, project maintainers commit themselves to fairly and consistently applying these principles to every aspect of managing this project. Project maintainers who do not follow or enforce the Code of Conduct may be permanently removed from the project team.\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community.\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting a project maintainer. Complaints will result in a response and be reviewed and investigated in a way that is deemed necessary and appropriate to the circumstances. Maintainers are obligated to maintain confidentiality with regard to the reporter of an incident.\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.3.0, available at [http://contributor-covenant.org/version/1/3/0/][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/3/0/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.1982421875,
          "content": "Contributing\n============\n\nHey, thanks for your interest in contributing to this library! We welcome any\ntype of pull request, issues and comments! ðŸ˜€\n\nFor pull requests, make sure you:\n\n* Add tests for new features and bug fixes\n* Follow the existing style (always use braces, 4 space indent)\n* Separate unrelated changes into multiple pull requests\n\nIf you are interested in working on something but don't know what, see the\nexisting issues with label \"help wanted\".\n\nFor bigger changes, make sure you start a discussion first by creating\nan issue and explaining the intended change.\n\nThe [sourcespy dashboard](https://sourcespy.com/github/commonmarkcommonmarkjava/)\nprovides a high level overview of the repository including\n[class diagram](https://sourcespy.com/github/commonmarkcommonmarkjava/xx-omodel-.html),\n[module dependencies](https://sourcespy.com/github/commonmarkcommonmarkjava/xx-omodulesc-.html),\n[module hierarchy](https://sourcespy.com/github/commonmarkcommonmarkjava/xx-omodules-.html),\n[external libraries](https://sourcespy.com/github/commonmarkcommonmarkjava/xx-ojavalibs-.html),\nand other components of the system.\n\nReleasing\n---------\n\nReleases are done from the \"release\" workflow on GitHub Actions.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.265625,
          "content": "Copyright (c) 2015, Robin Stocker\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.20703125,
          "content": "commonmark-java\n===============\n\nJava library for parsing and rendering [Markdown] text according to the\n[CommonMark] specification (and some extensions).\n\n[![Maven Central status](https://img.shields.io/maven-central/v/org.commonmark/commonmark.svg)](https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.commonmark%22)\n[![javadoc](https://www.javadoc.io/badge/org.commonmark/commonmark.svg?color=blue)](https://www.javadoc.io/doc/org.commonmark/commonmark)\n[![ci](https://github.com/commonmark/commonmark-java/workflows/ci/badge.svg)](https://github.com/commonmark/commonmark-java/actions?query=workflow%3Aci)\n[![codecov](https://codecov.io/gh/commonmark/commonmark-java/branch/main/graph/badge.svg)](https://codecov.io/gh/commonmark/commonmark-java)\n[![SourceSpy Dashboard](https://sourcespy.com/shield.svg)](https://sourcespy.com/github/commonmarkcommonmarkjava/)\n\nIntroduction\n------------\n\nProvides classes for parsing input to an abstract syntax tree (AST),\nvisiting and manipulating nodes, and rendering to HTML or back to Markdown.\nIt started out as a port of [commonmark.js], but has since evolved into an\nextensible library with the following features:\n\n* Small (core has no dependencies, extensions in separate artifacts)\n* Fast (10-20 times faster than [pegdown] which used to be a popular Markdown\n  library, see benchmarks in repo)\n* Flexible (manipulate the AST after parsing, customize HTML rendering)\n* Extensible (tables, strikethrough, autolinking and more, see below)\n\nThe library is supported on Java 11 and later. It works on Android too,\nbut that is on a best-effort basis, please report problems. For Android the\nminimum API level is 19, see the\n[commonmark-android-test](commonmark-android-test)\ndirectory.\n\nCoordinates for core library (see all on [Maven Central]):\n\n```xml\n<dependency>\n    <groupId>org.commonmark</groupId>\n    <artifactId>commonmark</artifactId>\n    <version>0.24.0</version>\n</dependency>\n```\n\nThe module names to use in Java 9 are `org.commonmark`,\n`org.commonmark.ext.autolink`, etc, corresponding to package names.\n\nNote that for 0.x releases of this library, the API is not considered stable\nyet and may break between minor releases. After 1.0, [Semantic Versioning] will\nbe followed. A package containing `beta` means it's not subject to stable API\nguarantees yet; but for normal usage it should not be necessary to use.\n\nSee the [spec.txt](commonmark-test-util/src/main/resources/spec.txt)\nfile if you're wondering which version of the spec is currently\nimplemented. Also check out the [CommonMark dingus] for getting familiar\nwith the syntax or trying out edge cases. If you clone the repository,\nyou can also use the `DingusApp` class to try out things interactively.\n\n\nUsage\n-----\n\n#### Parse and render to HTML\n\n```java\nimport org.commonmark.node.*;\nimport org.commonmark.parser.Parser;\nimport org.commonmark.renderer.html.HtmlRenderer;\n\nParser parser = Parser.builder().build();\nNode document = parser.parse(\"This is *Markdown*\");\nHtmlRenderer renderer = HtmlRenderer.builder().build();\nrenderer.render(document);  // \"<p>This is <em>Markdown</em></p>\\n\"\n```\n\nThis uses the parser and renderer with default options. Both builders have\nmethods for configuring their behavior:\n\n* `escapeHtml(true)` on `HtmlRenderer` will escape raw HTML tags and blocks.\n* `sanitizeUrls(true)` on `HtmlRenderer` will strip potentially unsafe URLs\n  from `<a>` and `<img>` tags\n* For all available options, see methods on the builders.\n\nNote that this library doesn't try to sanitize the resulting HTML with regards\nto which tags are allowed, etc. That is the responsibility of the caller, and\nif you expose the resulting HTML, you probably want to run a sanitizer on it\nafter this.\n\n#### Render to Markdown\n\n```java\nimport org.commonmark.node.*;\nimport org.commonmark.renderer.markdown.MarkdownRenderer;\n\nMarkdownRenderer renderer = MarkdownRenderer.builder().build();\nNode document = new Document();\nHeading heading = new Heading();\nheading.setLevel(2);\nheading.appendChild(new Text(\"My title\"));\ndocument.appendChild(heading);\n\nrenderer.render(document);  // \"## My title\\n\"\n```\n\nFor rendering to plain text with minimal markup, there's also `TextContentRenderer`.\n\n#### Use a visitor to process parsed nodes\n\nAfter the source text has been parsed, the result is a tree of nodes.\nThat tree can be modified before rendering, or just inspected without\nrendering:\n\n```java\nNode node = parser.parse(\"Example\\n=======\\n\\nSome more text\");\nWordCountVisitor visitor = new WordCountVisitor();\nnode.accept(visitor);\nvisitor.wordCount;  // 4\n\nclass WordCountVisitor extends AbstractVisitor {\n    int wordCount = 0;\n\n    @Override\n    public void visit(Text text) {\n        // This is called for all Text nodes. Override other visit methods for other node types.\n\n        // Count words (this is just an example, don't actually do it this way for various reasons).\n        wordCount += text.getLiteral().split(\"\\\\W+\").length;\n\n        // Descend into children (could be omitted in this case because Text nodes don't have children).\n        visitChildren(text);\n    }\n}\n```\n\n#### Source positions\n\nIf you want to know where a parsed `Node` appeared in the input source text,\nyou can request the parser to return source positions like this:\n\n```java\nvar parser = Parser.builder().includeSourceSpans(IncludeSourceSpans.BLOCKS_AND_INLINES).build();\n```\n\nThen parse nodes and inspect source positions:\n\n```java\nvar source = \"foo\\n\\nbar *baz*\";\nvar doc = parser.parse(source);\nvar emphasis = doc.getLastChild().getLastChild();\nvar s = emphasis.getSourceSpans().get(0);\ns.getLineIndex();    // 2 (third line)\ns.getColumnIndex();  // 4 (fifth column)\ns.getInputIndex();   // 9 (string index 9)\ns.getLength();       // 5\nsource.substring(s.getInputIndex(), s.getInputIndex() + s.getLength());  // \"*baz*\"\n```\n\nIf you're only interested in blocks and not inlines, use `IncludeSourceSpans.BLOCKS`.\n\n#### Add or change attributes of HTML elements\n\nSometimes you might want to customize how HTML is rendered. If all you\nwant to do is add or change attributes on some elements, there's a\nsimple way to do that.\n\nIn this example, we register a factory for an `AttributeProvider` on the\nrenderer to set a `class=\"border\"` attribute on `img` elements.\n\n```java\nParser parser = Parser.builder().build();\nHtmlRenderer renderer = HtmlRenderer.builder()\n        .attributeProviderFactory(new AttributeProviderFactory() {\n            public AttributeProvider create(AttributeProviderContext context) {\n                return new ImageAttributeProvider();\n            }\n        })\n        .build();\n\nNode document = parser.parse(\"![text](/url.png)\");\nrenderer.render(document);\n// \"<p><img src=\\\"/url.png\\\" alt=\\\"text\\\" class=\\\"border\\\" /></p>\\n\"\n\nclass ImageAttributeProvider implements AttributeProvider {\n    @Override\n    public void setAttributes(Node node, String tagName, Map<String, String> attributes) {\n        if (node instanceof Image) {\n            attributes.put(\"class\", \"border\");\n        }\n    }\n}\n```\n\n#### Customize HTML rendering\n\nIf you want to do more than just change attributes, there's also a way\nto take complete control over how HTML is rendered.\n\nIn this example, we're changing the rendering of indented code blocks to\nonly wrap them in `pre` instead of `pre` and `code`:\n\n```java\nParser parser = Parser.builder().build();\nHtmlRenderer renderer = HtmlRenderer.builder()\n        .nodeRendererFactory(new HtmlNodeRendererFactory() {\n            public NodeRenderer create(HtmlNodeRendererContext context) {\n                return new IndentedCodeBlockNodeRenderer(context);\n            }\n        })\n        .build();\n\nNode document = parser.parse(\"Example:\\n\\n    code\");\nrenderer.render(document);\n// \"<p>Example:</p>\\n<pre>code\\n</pre>\\n\"\n\nclass IndentedCodeBlockNodeRenderer implements NodeRenderer {\n\n    private final HtmlWriter html;\n\n    IndentedCodeBlockNodeRenderer(HtmlNodeRendererContext context) {\n        this.html = context.getWriter();\n    }\n\n    @Override\n    public Set<Class<? extends Node>> getNodeTypes() {\n        // Return the node types we want to use this renderer for.\n        return Set.of(IndentedCodeBlock.class);\n    }\n\n    @Override\n    public void render(Node node) {\n        // We only handle one type as per getNodeTypes, so we can just cast it here.\n        IndentedCodeBlock codeBlock = (IndentedCodeBlock) node;\n        html.line();\n        html.tag(\"pre\");\n        html.text(codeBlock.getLiteral());\n        html.tag(\"/pre\");\n        html.line();\n    }\n}\n```\n\n#### Add your own node types\n\nIn case you want to store additional data in the document or have custom\nelements in the resulting HTML, you can create your own subclass of\n`CustomNode` and add instances as child nodes to existing nodes.\n\nTo define the HTML rendering for them, you can use a `NodeRenderer` as\nexplained above.\n\n#### Customize parsing\n\nThere are a few ways to extend parsing or even override built-in parsing,\nall of them via methods on `Parser.Builder`\n(see [Blocks and inlines](https://spec.commonmark.org/0.31.2/#blocks-and-inlines) in the spec for an overview of blocks/inlines):\n\n- Parsing of specific block types (e.g. headings, code blocks, etc) can be\n  enabled/disabled with `enabledBlockTypes`\n- Parsing of blocks can be extended/overridden with `customBlockParserFactory`\n- Parsing of inline content can be extended/overridden with `customInlineContentParserFactory`\n- Parsing of [delimiters](https://spec.commonmark.org/0.31.2/#emphasis-and-strong-emphasis) in inline content can be\n  extended with `customDelimiterProcessor`\n- Processing of links can be customized with `linkProcessor` and `linkMarker`\n\n#### Thread-safety\n\nBoth the `Parser` and `HtmlRenderer` are designed so that you can\nconfigure them once using the builders and then use them multiple\ntimes/from multiple threads. This is done by separating the state for\nparsing/rendering from the configuration.\n\nHaving said that, there might be bugs of course. If you find one, please\nreport an issue.\n\n### API documentation\n\nJavadocs are available online on\n[javadoc.io](https://www.javadoc.io/doc/org.commonmark/commonmark).\n\n\nExtensions\n----------\n\nExtensions need to extend the parser, or the HTML renderer, or both. To\nuse an extension, the builder objects can be configured with a list of\nextensions. Because extensions are optional, they live in separate\nartifacts, so additional dependencies need to be added as well.\n\nLet's look at how to enable tables from GitHub Flavored Markdown.\nFirst, add an additional dependency (see [Maven Central] for others):\n\n```xml\n<dependency>\n    <groupId>org.commonmark</groupId>\n    <artifactId>commonmark-ext-gfm-tables</artifactId>\n    <version>0.24.0</version>\n</dependency>\n```\n\nThen, configure the extension on the builders:\n\n```java\nimport org.commonmark.ext.gfm.tables.TablesExtension;\n\nList<Extension> extensions = List.of(TablesExtension.create());\nParser parser = Parser.builder()\n        .extensions(extensions)\n        .build();\nHtmlRenderer renderer = HtmlRenderer.builder()\n        .extensions(extensions)\n        .build();\n```\n\nTo configure another extension in the above example, just add it to the list.\n\nThe following extensions are developed with this library, each in their\nown artifact.\n\n### Autolink\n\nTurns plain links such as URLs and email addresses into links (based on [autolink-java]).\n\nUse class `AutolinkExtension` from artifact `commonmark-ext-autolink`.\n\n### Strikethrough\n\nEnables strikethrough of text by enclosing it in `~~`. For example, in\n`hey ~~you~~`, `you` will be rendered as strikethrough text.\n\nUse class `StrikethroughExtension` in artifact `commonmark-ext-gfm-strikethrough`.\n\n### Tables\n\nEnables tables using pipes as in [GitHub Flavored Markdown][gfm-tables].\n\nUse class `TablesExtension` in artifact `commonmark-ext-gfm-tables`.\n\n### Footnotes\n\nEnables footnotes like in [GitHub](https://docs.github.com/en/get-started/writing-on-github/getting-started-with-writing-and-formatting-on-github/basic-writing-and-formatting-syntax#footnotes)\nor [Pandoc](https://pandoc.org/MANUAL.html#footnotes):\n\n```\nMain text[^1]\n\n[^1]: Additional text in a footnote\n```\n\nInline footnotes like `^[inline footnote]` are also supported when enabled via `FootnotesExtension.Builder#inlineFootnotes`.\n\nUse class `FootnotesExtension` in artifact `commonmark-ext-footnotes`.\n\n### Heading anchor\n\nEnables adding auto generated \"id\" attributes to heading tags. The \"id\"\nis based on the text of the heading.\n\n`# Heading` will be rendered as:\n\n```\n<h1 id=\"heading\">Heading</h1>\n```\n\nUse class `HeadingAnchorExtension` in artifact `commonmark-ext-heading-anchor`.\n\nIn case you want custom rendering of the heading instead, you can use\nthe `IdGenerator` class directly together with a\n`HtmlNodeRendererFactory` (see example above).\n\n### Ins\n\nEnables underlining of text by enclosing it in `++`. For example, in\n`hey ++you++`, `you` will be rendered as underline text. Uses the &lt;ins&gt; tag.\n\nUse class `InsExtension` in artifact `commonmark-ext-ins`.\n\n### YAML front matter\n\nAdds support for metadata through a YAML front matter block. This extension only supports a subset of YAML syntax. Here's an example of what's supported:\n\n```\n---\nkey: value\nlist:\n  - value 1\n  - value 2\nliteral: |\n  this is literal value.\n\n  literal values 2\n---\n\ndocument start here\n```\n\nUse class `YamlFrontMatterExtension` in artifact `commonmark-ext-yaml-front-matter`. To fetch metadata, use `YamlFrontMatterVisitor`.\n\n### Image Attributes\n\nAdds support for specifying attributes (specifically height and width) for images.\n\nThe attribute elements are given as `key=value` pairs inside curly braces `{ }` after the image node to which they apply,\nfor example:\n```\n![text](/url.png){width=640 height=480}\n```\nwill be rendered as:\n```\n<img src=\"/url.png\" alt=\"text\" width=\"640\" height=\"480\" />\n```\n\nUse class `ImageAttributesExtension` in artifact `commonmark-ext-image-attributes`.\n\nNote: since this extension uses curly braces `{` `}` as its delimiters (in `StylesDelimiterProcessor`), this means that\nother delimiter processors *cannot* use curly braces for delimiting.\n\n### Task List Items\n\nAdds support for tasks as list items.\n\nA task can be represented as a list item where the first non-whitespace character is a left bracket `[`, then a single\nwhitespace character or the letter `x` in lowercase or uppercase, then a right bracket `]` followed by at least one\nwhitespace before any other content.\n\nFor example:\n```\n- [ ] task #1\n- [x] task #2\n```\nwill be rendered as:\n```\n<ul>\n<li><input type=\"checkbox\" disabled=\"\"> task #1</li>\n<li><input type=\"checkbox\" disabled=\"\" checked=\"\"> task #2</li>\n</ul>\n```\n\nUse class `TaskListItemsExtension` in artifact `commonmark-ext-task-list-items`.\n\n### Third-party extensions\n\nYou can also find other extensions in the wild:\n\n* [commonmark-ext-notifications](https://github.com/McFoggy/commonmark-ext-notifications): this extension allows to easily create notifications/admonitions paragraphs like `INFO`, `SUCCESS`, `WARNING` or `ERROR`\n\nUsed by\n-------\n\nSome users of this library (feel free to raise a PR if you want to be added):\n* [Atlassian](https://www.atlassian.com/) (where the library was initially developed)\n* Java (OpenJDK) ([link](https://github.com/openjdk/jdk/blob/3895b8fc0b2c6d187080dba6fe08297adad4a480/src/jdk.internal.md/share/classes/module-info.java))\n* [Gerrit](https://www.gerritcodereview.com/) code review/Gitiles ([link](https://gerrit-review.googlesource.com/c/gitiles/+/353794))\n* [Clerk](https://clerk.vision/) moldable live programming for Clojure\n* [Znai](https://github.com/testingisdocumenting/znai)\n\nSee also\n--------\n\n* [Markwon](https://github.com/noties/Markwon): Android library for rendering markdown as system-native Spannables\n* [flexmark-java](https://github.com/vsch/flexmark-java): Fork that added support for a lot more syntax and flexibility\n\nContributing\n------------\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) file.\n\nLicense\n-------\n\nCopyright (c) 2015, Robin Stocker\n\nBSD (2-clause) licensed, see LICENSE.txt file.\n\n[CommonMark]: https://commonmark.org/\n[Markdown]: https://daringfireball.net/projects/markdown/\n[commonmark.js]: https://github.com/commonmark/commonmark.js\n[pegdown]: https://github.com/sirthias/pegdown\n[CommonMark Dingus]: https://spec.commonmark.org/dingus/\n[Maven Central]: https://search.maven.org/#search|ga|1|g%3A%22org.commonmark%22\n[Semantic Versioning]: https://semver.org/\n[autolink-java]: https://github.com/robinst/autolink-java\n[gfm-tables]: https://help.github.com/articles/organizing-information-with-tables/\n"
        },
        {
          "name": "commonmark-android-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-ext-autolink",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-ext-footnotes",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-ext-gfm-strikethrough",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-ext-gfm-tables",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-ext-heading-anchor",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-ext-image-attributes",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-ext-ins",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-ext-task-list-items",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-ext-yaml-front-matter",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-integration-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark-test-util",
          "type": "tree",
          "content": null
        },
        {
          "name": "commonmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.4150390625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.3.2\n#\n# Optional ENV vars\n# -----------------\n#   JAVA_HOME - location of a JDK home dir, required when download maven via java source\n#   MVNW_REPOURL - repo url base for downloading maven distribution\n#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output\n# ----------------------------------------------------------------------------\n\nset -euf\n[ \"${MVNW_VERBOSE-}\" != debug ] || set -x\n\n# OS specific support.\nnative_path() { printf %s\\\\n \"$1\"; }\ncase \"$(uname)\" in\nCYGWIN* | MINGW*)\n  [ -z \"${JAVA_HOME-}\" ] || JAVA_HOME=\"$(cygpath --unix \"$JAVA_HOME\")\"\n  native_path() { cygpath --path --windows \"$1\"; }\n  ;;\nesac\n\n# set JAVACMD and JAVACCMD\nset_java_home() {\n  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched\n  if [ -n \"${JAVA_HOME-}\" ]; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n      JAVACCMD=\"$JAVA_HOME/jre/sh/javac\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n      JAVACCMD=\"$JAVA_HOME/bin/javac\"\n\n      if [ ! -x \"$JAVACMD\" ] || [ ! -x \"$JAVACCMD\" ]; then\n        echo \"The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run.\" >&2\n        echo \"JAVA_HOME is set to \\\"$JAVA_HOME\\\", but \\\"\\$JAVA_HOME/bin/java\\\" or \\\"\\$JAVA_HOME/bin/javac\\\" does not exist.\" >&2\n        return 1\n      fi\n    fi\n  else\n    JAVACMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v java\n    )\" || :\n    JAVACCMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v javac\n    )\" || :\n\n    if [ ! -x \"${JAVACMD-}\" ] || [ ! -x \"${JAVACCMD-}\" ]; then\n      echo \"The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run.\" >&2\n      return 1\n    fi\n  fi\n}\n\n# hash string like Java String::hashCode\nhash_string() {\n  str=\"${1:-}\" h=0\n  while [ -n \"$str\" ]; do\n    char=\"${str%\"${str#?}\"}\"\n    h=$(((h * 31 + $(LC_CTYPE=C printf %d \"'$char\")) % 4294967296))\n    str=\"${str#?}\"\n  done\n  printf %x\\\\n $h\n}\n\nverbose() { :; }\n[ \"${MVNW_VERBOSE-}\" != true ] || verbose() { printf %s\\\\n \"${1-}\"; }\n\ndie() {\n  printf %s\\\\n \"$1\" >&2\n  exit 1\n}\n\ntrim() {\n  # MWRAPPER-139:\n  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.\n  #   Needed for removing poorly interpreted newline sequences when running in more\n  #   exotic environments such as mingw bash on Windows.\n  printf \"%s\" \"${1}\" | tr -d '[:space:]'\n}\n\n# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties\nwhile IFS=\"=\" read -r key value; do\n  case \"${key-}\" in\n  distributionUrl) distributionUrl=$(trim \"${value-}\") ;;\n  distributionSha256Sum) distributionSha256Sum=$(trim \"${value-}\") ;;\n  esac\ndone <\"${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n[ -n \"${distributionUrl-}\" ] || die \"cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n\ncase \"${distributionUrl##*/}\" in\nmaven-mvnd-*bin.*)\n  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/\n  case \"${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)\" in\n  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;\n  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;\n  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;\n  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;\n  *)\n    echo \"Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version\" >&2\n    distributionPlatform=linux-amd64\n    ;;\n  esac\n  distributionUrl=\"${distributionUrl%-bin.*}-$distributionPlatform.zip\"\n  ;;\nmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;\n*) MVN_CMD=\"mvn${0##*/mvnw}\" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;\nesac\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\n[ -z \"${MVNW_REPOURL-}\" ] || distributionUrl=\"$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*\"$_MVNW_REPO_PATTERN\"}\"\ndistributionUrlName=\"${distributionUrl##*/}\"\ndistributionUrlNameMain=\"${distributionUrlName%.*}\"\ndistributionUrlNameMain=\"${distributionUrlNameMain%-bin}\"\nMAVEN_USER_HOME=\"${MAVEN_USER_HOME:-${HOME}/.m2}\"\nMAVEN_HOME=\"${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string \"$distributionUrl\")\"\n\nexec_maven() {\n  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :\n  exec \"$MAVEN_HOME/bin/$MVN_CMD\" \"$@\" || die \"cannot exec $MAVEN_HOME/bin/$MVN_CMD\"\n}\n\nif [ -d \"$MAVEN_HOME\" ]; then\n  verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  exec_maven \"$@\"\nfi\n\ncase \"${distributionUrl-}\" in\n*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;\n*) die \"distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'\" ;;\nesac\n\n# prepare tmp dir\nif TMP_DOWNLOAD_DIR=\"$(mktemp -d)\" && [ -d \"$TMP_DOWNLOAD_DIR\" ]; then\n  clean() { rm -rf -- \"$TMP_DOWNLOAD_DIR\"; }\n  trap clean HUP INT TERM EXIT\nelse\n  die \"cannot create temp dir\"\nfi\n\nmkdir -p -- \"${MAVEN_HOME%/*}\"\n\n# Download and Install Apache Maven\nverbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nverbose \"Downloading from: $distributionUrl\"\nverbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n# select .zip or .tar.gz\nif ! command -v unzip >/dev/null; then\n  distributionUrl=\"${distributionUrl%.zip}.tar.gz\"\n  distributionUrlName=\"${distributionUrl##*/}\"\nfi\n\n# verbose opt\n__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''\n[ \"${MVNW_VERBOSE-}\" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v\n\n# normalize http auth\ncase \"${MVNW_PASSWORD:+has-password}\" in\n'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nhas-password) [ -n \"${MVNW_USERNAME-}\" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nesac\n\nif [ -z \"${MVNW_USERNAME-}\" ] && command -v wget >/dev/null; then\n  verbose \"Found wget ... using wget\"\n  wget ${__MVNW_QUIET_WGET:+\"$__MVNW_QUIET_WGET\"} \"$distributionUrl\" -O \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" || die \"wget: Failed to fetch $distributionUrl\"\nelif [ -z \"${MVNW_USERNAME-}\" ] && command -v curl >/dev/null; then\n  verbose \"Found curl ... using curl\"\n  curl ${__MVNW_QUIET_CURL:+\"$__MVNW_QUIET_CURL\"} -f -L -o \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" \"$distributionUrl\" || die \"curl: Failed to fetch $distributionUrl\"\nelif set_java_home; then\n  verbose \"Falling back to use Java to download\"\n  javaSource=\"$TMP_DOWNLOAD_DIR/Downloader.java\"\n  targetZip=\"$TMP_DOWNLOAD_DIR/$distributionUrlName\"\n  cat >\"$javaSource\" <<-END\n\tpublic class Downloader extends java.net.Authenticator\n\t{\n\t  protected java.net.PasswordAuthentication getPasswordAuthentication()\n\t  {\n\t    return new java.net.PasswordAuthentication( System.getenv( \"MVNW_USERNAME\" ), System.getenv( \"MVNW_PASSWORD\" ).toCharArray() );\n\t  }\n\t  public static void main( String[] args ) throws Exception\n\t  {\n\t    setDefault( new Downloader() );\n\t    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );\n\t  }\n\t}\n\tEND\n  # For Cygwin/MinGW, switch paths to Windows format before running javac and java\n  verbose \" - Compiling Downloader.java ...\"\n  \"$(native_path \"$JAVACCMD\")\" \"$(native_path \"$javaSource\")\" || die \"Failed to compile Downloader.java\"\n  verbose \" - Running Downloader.java ...\"\n  \"$(native_path \"$JAVACMD\")\" -cp \"$(native_path \"$TMP_DOWNLOAD_DIR\")\" Downloader \"$distributionUrl\" \"$(native_path \"$targetZip\")\"\nfi\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\nif [ -n \"${distributionSha256Sum-}\" ]; then\n  distributionSha256Result=false\n  if [ \"$MVN_CMD\" = mvnd.sh ]; then\n    echo \"Checksum validation is not supported for maven-mvnd.\" >&2\n    echo \"Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  elif command -v sha256sum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | sha256sum -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  elif command -v shasum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | shasum -a 256 -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n    echo \"Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  fi\n  if [ $distributionSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified distributionSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\n# unzip and move\nif command -v unzip >/dev/null; then\n  unzip ${__MVNW_QUIET_UNZIP:+\"$__MVNW_QUIET_UNZIP\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -d \"$TMP_DOWNLOAD_DIR\" || die \"failed to unzip\"\nelse\n  tar xzf${__MVNW_QUIET_TAR:+\"$__MVNW_QUIET_TAR\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -C \"$TMP_DOWNLOAD_DIR\" || die \"failed to untar\"\nfi\nprintf %s\\\\n \"$distributionUrl\" >\"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url\"\nmv -- \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" \"$MAVEN_HOME\" || [ -d \"$MAVEN_HOME\" ] || die \"fail to move MAVEN_HOME\"\n\nclean || :\nexec_maven \"$@\"\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 11.9638671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <packaging>pom</packaging>\n\n    <groupId>org.commonmark</groupId>\n    <artifactId>commonmark-parent</artifactId>\n    <version>0.24.1-SNAPSHOT</version>\n    <name>commonmark-java parent</name>\n    <description>\n        Java implementation of CommonMark, a specification of the Markdown format for turning plain text into formatted\n        text.\n    </description>\n    <url>https://github.com/commonmark/commonmark-java</url>\n\n    <modules>\n        <module>commonmark</module>\n        <module>commonmark-ext-autolink</module>\n        <module>commonmark-ext-footnotes</module>\n        <module>commonmark-ext-gfm-strikethrough</module>\n        <module>commonmark-ext-gfm-tables</module>\n        <module>commonmark-ext-heading-anchor</module>\n        <module>commonmark-ext-image-attributes</module>\n        <module>commonmark-ext-ins</module>\n        <module>commonmark-ext-task-list-items</module>\n        <module>commonmark-ext-yaml-front-matter</module>\n        <module>commonmark-integration-test</module>\n        <module>commonmark-test-util</module>\n    </modules>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <commonmark.javadoc.location>${project.basedir}/../commonmark/target/apidocs/</commonmark.javadoc.location>\n    </properties>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.13.0</version>\n                    <configuration>\n                        <release>11</release>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>3.4.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-install-plugin</artifactId>\n                    <version>3.1.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <version>3.6.3</version>\n                    <configuration>\n                        <excludePackageNames>*.internal,*.internal.*</excludePackageNames>\n                        <!-- The offline links make links from extensions to core work. -->\n                        <detectOfflineLinks>false</detectOfflineLinks>\n                        <offlineLinks>\n                            <offlineLink>\n                                <url>https://static.javadoc.io/org.commonmark/commonmark/${project.version}/\n                                </url>\n                                <location>${commonmark.javadoc.location}</location>\n                            </offlineLink>\n                        </offlineLinks>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>3.2.5</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <groupId>org.sonatype.plugins</groupId>\n                <artifactId>nexus-staging-maven-plugin</artifactId>\n                <version>1.6.13</version>\n                <extensions>true</extensions>\n                <configuration>\n                    <serverId>ossrh</serverId>\n                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                    <autoReleaseAfterClose>true</autoReleaseAfterClose>\n                    <stagingProgressTimeoutMinutes>10</stagingProgressTimeoutMinutes>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-release-plugin</artifactId>\n                <version>3.0.1</version>\n                <configuration>\n                    <autoVersionSubmodules>true</autoVersionSubmodules>\n                    <useReleaseProfile>false</useReleaseProfile>\n                    <releaseProfiles>release</releaseProfiles>\n                    <goals>deploy</goals>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <dependencyManagement>\n        <dependencies>\n            <!-- For dependencies between modules -->\n            <dependency>\n                <groupId>org.commonmark</groupId>\n                <artifactId>commonmark</artifactId>\n                <version>0.24.1-SNAPSHOT</version>\n            </dependency>\n            <dependency>\n                <groupId>org.commonmark</groupId>\n                <artifactId>commonmark-ext-autolink</artifactId>\n                <version>0.24.1-SNAPSHOT</version>\n            </dependency>\n            <dependency>\n                <groupId>org.commonmark</groupId>\n                <artifactId>commonmark-ext-image-attributes</artifactId>\n                <version>0.24.1-SNAPSHOT</version>\n            </dependency>\n            <dependency>\n                <groupId>org.commonmark</groupId>\n                <artifactId>commonmark-ext-ins</artifactId>\n                <version>0.24.1-SNAPSHOT</version>\n            </dependency>\n            <dependency>\n                <groupId>org.commonmark</groupId>\n                <artifactId>commonmark-ext-gfm-strikethrough</artifactId>\n                <version>0.24.1-SNAPSHOT</version>\n            </dependency>\n            <dependency>\n                <groupId>org.commonmark</groupId>\n                <artifactId>commonmark-ext-gfm-tables</artifactId>\n                <version>0.24.1-SNAPSHOT</version>\n            </dependency>\n            <dependency>\n                <groupId>org.commonmark</groupId>\n                <artifactId>commonmark-ext-heading-anchor</artifactId>\n                <version>0.24.1-SNAPSHOT</version>\n            </dependency>\n            <dependency>\n                <groupId>org.commonmark</groupId>\n                <artifactId>commonmark-ext-task-list-items</artifactId>\n                <version>0.24.1-SNAPSHOT</version>\n            </dependency>\n            <dependency>\n                <groupId>org.commonmark</groupId>\n                <artifactId>commonmark-ext-yaml-front-matter</artifactId>\n                <version>0.24.1-SNAPSHOT</version>\n            </dependency>\n            <dependency>\n                <groupId>org.commonmark</groupId>\n                <artifactId>commonmark-test-util</artifactId>\n                <version>0.24.1-SNAPSHOT</version>\n            </dependency>\n\n            <!-- Common test dependencies -->\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>4.13.1</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openjdk.jmh</groupId>\n                <artifactId>jmh-core</artifactId>\n                <version>1.37</version>\n            </dependency>\n            <dependency>\n                <groupId>org.openjdk.jmh</groupId>\n                <artifactId>jmh-generator-annprocess</artifactId>\n                <version>1.37</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <profiles>\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>3.3.1</version>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>3.2.4</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                                <configuration>\n                                    <gpgArguments>\n                                        <arg>--pinentry-mode</arg>\n                                        <arg>loopback</arg>\n                                    </gpgArguments>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>coverage</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.jacoco</groupId>\n                        <artifactId>jacoco-maven-plugin</artifactId>\n                        <version>0.8.12</version>\n                        <configuration>\n                            <excludes>\n                                <!-- Classes from test-util -->\n                                <exclude>org/commonmark/spec/*</exclude>\n                                <exclude>org/commonmark/test/*</exclude>\n                            </excludes>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>prepare-agent</id>\n                                <goals>\n                                    <goal>prepare-agent</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n    <licenses>\n        <license>\n            <name>BSD-2-Clause</name>\n            <url>https://opensource.org/licenses/BSD-2-Clause</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <developers>\n        <developer>\n            <name>Robin Stocker</name>\n        </developer>\n    </developers>\n\n    <scm>\n        <connection>scm:git:https://github.com/commonmark/commonmark-java</connection>\n        <developerConnection>scm:git:https://github.com/commonmark/commonmark-java</developerConnection>\n        <url>https://github.com/commonmark/commonmark-java</url>\n        <tag>HEAD</tag>\n    </scm>\n\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n\n</project>\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.0400390625,
          "content": "{\n  \"extends\": [\n    \"config:base\"\n  ]\n}\n"
        }
      ]
    }
  ]
}