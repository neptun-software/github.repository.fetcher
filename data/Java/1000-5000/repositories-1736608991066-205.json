{
  "metadata": {
    "timestamp": 1736608991066,
    "page": 205,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "oldmanpushcart/greys-anatomy",
      "stars": 4027,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1787109375,
          "content": "/core/greys-core.iml\n/agent/greys-agent.iml\n/core/core.iml\n/agent/agent.iml\n/target\n/core/target\n/agent/target\n/.settings\n/.classpath\n/.project\n/.idea\n/greys.iml\n/nb-configuration.xml"
        },
        {
          "name": "Greys_en.md",
          "type": "blob",
          "size": 6.3056640625,
          "content": "### Greys online diagnosis tools on Java\n---\n> why there has tons of exception in production server?\n>\n> who change the production data\n>\n> what's the reason of system calling failed\n>\n> What's the root cause of a recurse exception\n>\n> Hundreds production servers breakdown just like an avalanche, what happens? the murder of the server is application itself or the hardware?\n\nAll these questions will be answered if you come to learn the Greys.\n\n#### The birth\nearlier time, we use BTrace to diagnosis online issue. In the time of praising how powerful BTrace is, we also cause online accidents due to unstable BTrace scripts. So in 2012, Taobao developer team deliveried HouseMD, combine some usual BTrace scripts feature together. But HouseMD is written by Scala, which we were not familiar with. And sometimes we had to admire the HouseMD but can't add any customized features.\nThen the Greys is born! \n\nPS: so far Greys support JDK 6+ ONLY, and didn't have Windows version.\n\n#### What's Greys\nGreys is a JVM diagnosis tool in process level, without interruptting the JVM execution it could do lots of JVM tuning and diagnosis work.\n\n> Same as HouseMD, the name of 'Greys' coming from the USA TV show \"Grey's Anatomy\" with respect. Some coding ideas also refer from HouseMD and BTrace too.\n\n#### Target User\n> Sometimes you need to locate an online issue, there has parameters but no logs, so writing code, build it and deploy it, hours past and your problem still have no progress. \n> \n> You try to avoid this situation, so you put debug level log in your parameters and return values, but this time, the issue is caused by external module.\n> \n> Suddenly there has a performance issue online, and you can't find out the root cause, just use JStack repeatly, try to get a chance, does there have a better choice?\n\nif you was bothered by above problems, then you are the target user of Greys, it implement diagnosising with the JDK 6 feature, Instrumentation, enhance your working classes dynamically, and get what you want.\n\n#### Highlights\n- ClassLoader Isolation\n\nwe spent lots of effert on classloader isolation during the design and coding phase. You can use Greys anywhere and no need to warry about the class interference or conflict.\n\n- Runtime loading\n\nIf your JVM is running on JDK 6+, and the user has same privilege with JVM, then you can run Greys without restart JVM, it's runtime loading and diagnosising.\n\n- Command for usual JVM problems\n\nThe biggest difference between Greys and BTrace or HouseMD is, I build my personal develop and diagnosis experience in this tool, and make them be common command, sharing it.\n\n- Expression supporting\n\nComparing with BTrace, HouseMD is more powerful to define a class or method to be intercepted, but it can't view the intercepted object detail, condition filtering either. User could create the BTrace scripts by themselves, which is more flexible for filtering or viewing inner object, but script is hard to learn and maintain.\n\nUsing expression in Greys take the advantages and more convenient, by the way OGNL expression is supported currently;\n\n- Multiple user access\n\nThe biggest problem of remote debugging is, only one user could connect to the debugging port, and the breakpoint would break every signle thread if the setting of debugging is unsuited, and the business flow will be affected.\n\nThe idea of Greys is being an observer, the breakpoint will not break any flow, but user could watch the detail data which was intercepted by the breakpoint.\n\n- High performance\n\nUsing ASM library to enhance java bytecode, the core data structure was optimized for the actual scenario, you can use Greys even the environment load is tight.  \n\n- Pure Java \n\nThe purpose of Greys is being \"Professional JVM problem locating tool\", since it's for JVM, and I also want to share my Java experience and ideas, make more Java programer get benefits.\n\nSo Greys is written by 100% pure Java, and any code contribution is welcome!\n\n#### Inappropriate Case / Limitation\n\nGreys is not suitable for every case, and for the belowing scenarios, you should use more professional tools.\n\n- Performance cost tuning\n\nPerformance tuning requires professional tools, I use JProfiler mostly. Although Greys has little performance cost, but the analyzing is too simple, only for performance cost locating, and professional tools is better.\n\n- Remote debugging\n\nGreys can only substitute some remote debugging functionality, for example variable watching, but it's not a real debugging tool, which could step into or watching local variable. \n\n- Large scale deployment\n\nSame as BTrace, Greys need higher privilege, so large scale deployment is too dangerous for hacking. In future we plan to add permisson management module.\n\n- Class anaylsis on JDK lib\n\nJDK lib is in rt.jar, and will be loaded into BootStrapClassLoader after JVM lunched(HotSpotJVM). Because Greys also need to run on JVM, so by default we shutdown the enhancing of JDK classes.\nExcept of Springframework, Ibatis, Tomcat and other third class library.\n\n- Other`\n\nBTrace, HouseMD, Greys such tools all affect PermGen and CodeCache, so if your application is sensitive on them, please do not use it.\n\n#### Our motto\n\nLet code do the coding things.\n\n#### Features\n\n- Commandline interactive\n\n  - Commandline\n\t\n\tIn most cases, we are analyze problem remotely(if it's local debugging is better), and most Java application will run in Linux/BSD or other Unix like system, so commandline is the first choice, and the best too. \n\t\n  - UI\n\n  In version 2.x.x.x we will support web accessing, using HTTP and websocket to communicate with background service, ETA this year.\n  \n- Usage\n  \n  - Watching informace of JVM loaded classes and method\n  - Method execution monitoring\n\t - QPS, successful rate, response time  \n  - Method execution context watching  \n     - Parameter, return value, exception, execution replay supported  \n  - Performance cost  \n\t - trace method in execution tree, check the calling stack and cost time.   \n  - Watching method stacktrace\n- Advantages\n  - Pure Java implementation, open-sourcing\n  - Easily deployment, only a jar\n  - Diagnosis without restart JVM\n  - Variable/Parameters watching\n  - OGNL expression, conditional filter, detail data watching\n  - Combine common command together, monitor、trace ie.\n  - Time tunel, command 'tt' could record every single method execution detail by time\n  - Multiple user supporting\n  \n  >\n\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.501953125,
          "content": "![LOGO icon](https://raw.githubusercontent.com/oldmanpushcart/images/master/greys/greys-logo-readme.png)\n\n>\n线上系统为何经常出错？数据库为何屡遭黑手？业务调用为何频频失败？连环异常堆栈案，究竟是哪次调用所为？\n数百台服务器意外雪崩背后又隐藏着什么？是软件的扭曲还是硬件的沦丧？\n走进科学带你了解Greys, Java线上问题诊断工具。\n\n# 相关文档\n\n* [关于软件](https://github.com/oldmanpushcart/greys-anatomy/wiki/Home)\n* [程序安装](https://github.com/oldmanpushcart/greys-anatomy/wiki/installing)\n* [入门说明](https://github.com/oldmanpushcart/greys-anatomy/wiki/Getting-Started)\n* [常见问题](https://github.com/oldmanpushcart/greys-anatomy/wiki/FAQ)\n* [更新记事](https://github.com/oldmanpushcart/greys-anatomy/wiki/Chronicle)\n* [详细文档](https://github.com/oldmanpushcart/greys-anatomy/wiki/greys-pdf)\n* [English-README](https://github.com/oldmanpushcart/greys-anatomy/blob/master/Greys_en.md)\n\n# 程序安装\n\n- 远程安装\n\n  ```shell\n  curl -sLk http://ompc.oss.aliyuncs.com/greys/install.sh|sh\n  ```\n  \n- 远程安装(短链接)\n  \n  ```shell\n  curl -sLk http://t.cn/R2QbHFc|sh\n  ```\n\n## 最新版本\n\n### **VERSION :** 1.7.6.6\n\n1. 支持JDK9\n2. greys.sh脚本支持tar的解压缩模式（有些机器没有unzip），默认unzip\n3. 修复 #219 问题\n\n### 版本号说明\n\n`主版本`.`大版本`.`小版本`.`漏洞修复`\n\n* 主版本\n\n  这个版本更新说明程序架构体系进行了重大升级，比如之前的0.1版升级到1.0版本，整个软件的架构从单机版升级到了SOCKET多机版。并将Greys的性质进行的确定：Java版的HouseMD，但要比前辈们更强。\n\n* 大版本\n\n  程序的架构设计进行重大改造，但不影响用户对这款软件的定位。\n\n* 小版本\n\n  增加新的命令和功能\n\n* 漏洞修复\n\n  对现有版本进行漏洞修复和增强\n  \n  - `主版本`、`大版本`、之间不做任何向下兼容的承诺，即`0.1`版本的Client不保证一定能正常访问`1.0`版本的Server。\n\n  - `小版本`不兼容的版本会在版本升级中指出\n\n  - `漏洞修复`保证向下兼容\n\n# 维护者\n\n* [李夏驰](http://www.weibo.com/vlinux)\n* [姜小逸又胖了](http://weibo.com/chengtd)\n\n\n# 程序编译\n\n- 打开终端\n\n  ```shell\n  git clone git@github.com:oldmanpushcart/greys-anatomy.git\n  cd greys-anatomy/bin\n  ./greys-packages.sh\n  ```\n  \n- 程序执行\n\n  在`target/`目录下生成对应版本的release文件，比如当前版本是`1.7.0.4`，则生成文件`target/greys-1.7.0.4-bin.zip`\n  \n  程序在本地编译时会主动在本地安装当前编译的版本，所以编译完成后即相当在本地完成了安装。\n  \n  \n# 写在后边\n\n## 心路感悟\n\n我编写和维护这款软件已经5年了，5年中Greys也从`0.1`版本一直重构到现在的`1.7`。在这个过程中我得到了许多人的帮助与建议，并在年底我计划发布`2.0`版本，将开放Greys的底层通讯协议，支持websocket访问。\n\n多年的问题排查经验我没有过多的分享，一个Java程序员个中的苦闷也无从分享，一切我都融入到了这款软件的命令中，希望这些沉淀能帮助到可能需要到的你少走一些弯路，同时我也非常期待你们对她的反馈，这样我将感到非常开心和有成就感。\n\n## 帮助我们\n\nGreys的成长需要大家的帮助。\n\n- **分享你使用Greys的经验**\n\n   我非常希望能得到大家的使用反馈和经验分享，如果你有，请将分享文章敏感信息脱敏之后邮件给我：[oldmanpushcart@gmail.com](mailto:oldmanpushcart@gmail.com)，我将会分享给更多的同行。\n\n- **帮助我完善代码或文档**\n\n  一款软件再好，也需要详细的帮助文档；一款软件再完善，也有很多坑要埋。今天我的精力非常有限，希望能得到大家共同的帮助。\n\n- **如果你喜欢这款软件，欢迎打赏一杯咖啡**\n\n  嗯，说实话，我是指望用这招来买辆玛莎拉蒂...当然是个玩笑～你们的鼓励将会是我的动力，钱不在乎多少，重要的是我将能从中得到大家善意的反馈，这将会是我继续前进的动力。\n  \n  ![alipay](https://raw.githubusercontent.com/oldmanpushcart/images/master/alipay-vlinux.png)\n\n## 联系我们\n\n有问题阿里同事可以通过旺旺找到我，阿里外的同事可以通过[我的微博](http://weibo.com/vlinux)联系到我。今晚的杭州大雪纷飞，明天西湖应该非常的美丽，大家晚安。\n\n菜鸟-杜琨（dukun@alibaba-inc.com）\n  \n"
        },
        {
          "name": "agent",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 5.658203125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.github.ompc.greys</groupId>\n    <artifactId>greys</artifactId>\n    <version>1.0.0-SNAPSHOT</version>\n    <packaging>pom</packaging>\n\n    <name>greys</name>\n    <url>https://github.com/oldmanpushcart/greys-anatomy</url>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    </properties>\n\n\n    <!--<profiles>-->\n    <!--<profile>-->\n    <!--<id>java-home-parent-lib-tools-jar</id>-->\n    <!--<activation>-->\n    <!--<activeByDefault>false</activeByDefault>-->\n    <!--<file>-->\n    <!--<exists>${java.home}/../lib/tools.jar</exists>-->\n    <!--</file>-->\n    <!--</activation>-->\n    <!--<dependencies>-->\n    <!--<dependency>-->\n    <!--<groupId>sun.jdk</groupId>-->\n    <!--<artifactId>tools</artifactId>-->\n    <!--<version>1.6.0</version>-->\n    <!--<scope>system</scope>-->\n    <!--<systemPath>${java.home}/../lib/tools.jar</systemPath>-->\n    <!--</dependency>-->\n    <!--</dependencies>-->\n    <!--</profile>-->\n    <!--<profile>-->\n    <!--<id>java-home-parent-classes-classes-jar</id>-->\n    <!--<activation>-->\n    <!--<activeByDefault>false</activeByDefault>-->\n    <!--<file>-->\n    <!--<exists>${java.home}/../Classes/classes.jar</exists>-->\n    <!--</file>-->\n    <!--</activation>-->\n    <!--<dependencies>-->\n    <!--<dependency>-->\n    <!--<groupId>sun.jdk</groupId>-->\n    <!--<artifactId>tools</artifactId>-->\n    <!--<version>1.6.0</version>-->\n    <!--<scope>system</scope>-->\n    <!--<systemPath>${java.home}/../Classes/classes.jar</systemPath>-->\n    <!--</dependency>-->\n    <!--</dependencies>-->\n    <!--</profile>-->\n    <!--</profiles>-->\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>4.9</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>net.sf.jopt-simple</groupId>\n                <artifactId>jopt-simple</artifactId>\n                <version>4.3</version>\n            </dependency>\n            <dependency>\n                <groupId>org.ow2.asm</groupId>\n                <artifactId>asm</artifactId>\n                <version>6.0</version>\n            </dependency>\n            <dependency>\n                <groupId>org.ow2.asm</groupId>\n                <artifactId>asm-commons</artifactId>\n                <version>6.0</version>\n                <!--<exclusions>-->\n                <!--<exclusion>-->\n                <!--<groupId>org.ow2.asm</groupId>-->\n                <!--<artifactId>asm-tree</artifactId>-->\n                <!--</exclusion>-->\n                <!--</exclusions>-->\n            </dependency>\n            <dependency>\n                <groupId>org.ow2.asm</groupId>\n                <artifactId>asm-util</artifactId>\n                <version>6.0</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>3.4</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-io</groupId>\n                <artifactId>commons-io</artifactId>\n                <version>2.4</version>\n            </dependency>\n            <dependency>\n                <groupId>jline</groupId>\n                <artifactId>jline</artifactId>\n                <version>2.12</version>\n            </dependency>\n            <dependency>\n                <groupId>ognl</groupId>\n                <artifactId>ognl</artifactId>\n                <version>3.0.8</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>1.7.5</version>\n            </dependency>\n            <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-classic</artifactId>\n                <version>1.0.13</version>\n            </dependency>\n            <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-core</artifactId>\n                <version>1.0.13</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.code.gson</groupId>\n                <artifactId>gson</artifactId>\n                <version>2.3.1</version>\n            </dependency>\n            <!--<dependency>-->\n            <!--<groupId>org.springframework</groupId>-->\n            <!--<artifactId>spring-context</artifactId>-->\n            <!--<version>4.0.2.RELEASE</version>-->\n            <!--</dependency>-->\n            <!--<dependency>-->\n            <!--<groupId>org.codehaus.groovy</groupId>-->\n            <!--<artifactId>groovy-all</artifactId>-->\n            <!--<version>2.4.3</version>-->\n            <!--</dependency>-->\n\n            <!--<dependency>-->\n                <!--<groupId>org.mozilla</groupId>-->\n                <!--<artifactId>rhino</artifactId>-->\n                <!--<version>1.7.7.1</version>-->\n            <!--</dependency>-->\n            <!--<dependency>-->\n                <!--<groupId>de.christophkraemer</groupId>-->\n                <!--<artifactId>rhino-script-engine</artifactId>-->\n                <!--<version>1.1.0</version>-->\n            <!--</dependency>-->\n        </dependencies>\n    </dependencyManagement>\n\n    <modules>\n        <module>core</module>\n        <module>agent</module>\n    </modules>\n</project>"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}