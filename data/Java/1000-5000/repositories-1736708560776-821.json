{
  "metadata": {
    "timestamp": 1736708560776,
    "page": 821,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "githubwing/ZoomHeader",
      "stars": 2463,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1220703125,
          "content": "*.iml\n/.idea\n.gradle\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n/build\n/captures\n.externalNativeBuild\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.6103515625,
          "content": "#zoomheaderview\r\n\r\n\r\n![image](https://github.com/githubwing/ZoomHeader/raw/master/img.gif)\r\n\r\n\r\n\r\n\r\n## [下载体验](https://github.com/githubwing/ZoomHeader/raw/master/app-debug.apk)\r\n\r\n### 不是共享元素！不是共享元素！不是共享元素！重要的话说三遍。共享元素不可以随手指移动的。\r\n\r\n\r\n**先吐槽下饿了么。不提示左右可以滑动。我还是无意中发现的。不提示我怎么知道可以滑动？？**\r\n\r\n这是一个模仿饿了么详情页的例子。**并非一个库，并非拿来就可以用，主要讲解思路以及如何实现，可能有一些细节没有处理。**\r\n讲述了如何实现。具体祥见源码。\r\n\r\n\r\n### 他是一个Activity还是两个？\r\n\r\n相信你肯定有这样的疑问，答案是一个。所以这**不是**用共享元素实现的，使用共享元素会导致图片无法跟随手指移动。\r\n\r\n你看到的中间imageview是viewpager。在Viewpager上面是一个透明的View。当然，这个Activity的背景也是透明的。\r\n\r\n### 实现思路\r\n\r\n我使用CoordinatorLayout+Behavior实现的。说实话，Behavior真心强大。。\r\n\r\n\r\n### viewpager+头部\r\n\r\n整个实现的思路是这样的。整体布局从上到下依次是：\r\n\r\n* 透明View\r\n* viewpager\r\n* RecyclerView\r\n\r\n\r\n其中透明View和Viewpager 合并成一个自定义的Header。当这个Header上移的时候，图片放大，并且RecyclerView联动上衣，从透明转向并且不透明。\r\n\r\n\r\n所以首先要定制一个透明的可移动的HeaderView。\r\n\r\n在onTouchEvent处理一下手势。。\r\n\r\n```java\r\n@Override public boolean onTouchEvent(MotionEvent ev) {\r\n    switch (ev.getAction()) {\r\n      case MotionEvent.ACTION_DOWN:\r\n        return true;\r\n      case MotionEvent.ACTION_MOVE:\r\n\t\t if(上下移动到阀值){\r\n\t\t \t展开为详情()\r\n\t\t }else if(上下滑动到阀值，恢复viewpager){\r\n\t\t }else if(下滑，则关闭Activity)\r\n```\r\n\r\n将header分为三种状态：\r\n\r\n* 上移。则展开为详情页。\r\n* 下移，则恢复为viewpager。\r\n* 再下移，则finish Activity。\r\n\r\n\r\n在上移的过程中，遇到了一点小挑战，这里分享下：\r\n\r\n上移的过程中，图片需要放大。但是在做的过程中，不能使用LayoutParams实现。这里就关系到一些动画的小细节。\r\n\r\n**动画使用LayoutParams实现是一个禁忌。他会导致不停requestLayout，从而影响UI性能。**\r\n\r\n所以这里我的一个解法就是，我放大图片，不是真正的改变ImageView大小，而是去Scale图片。即使看起来变大了，他的View真正大小也不会变。\r\n\r\n所以，有一句话叫做**真亦是假、假亦是真** 真真假假，你又何必当真呢？动画效果只要遵循这句话，基本上都是可以实现的。你所看到的效果都是假的。都是障眼法。View变大不是真正的变大。View悬浮不是真正的悬浮(有可能是显隐)。就像变魔术一样。。其实很简单。\r\n\r\n接下来又遇到问题了。图片放大了，文字如何对齐？ 文字的位置当然也不能真正改变。所以这里使用TranslationX实现。在图片放大的过程中，使用scale的系数，与两个端点值进行一个线性变化计算。主要文字对齐代码如下：\r\n\r\n```java\r\n\t  bottom.offsetLeftAndRight(\r\n            (int) (target.getWidth() / 2 - target.getWidth() * (1 + progress) / 2\r\n                + MarginConfig.MARGIN_LEFT_RIGHT - bottom.getX()));\r\n\r\n```\r\n\r\n第二个点。就是在图片放大过程中，底部文字和按钮左右padding不能变。这也是我没有封装成一个拿来就用的View的原因(其实还是水平不够)。因为这些空间需要全部按照上方的方法进行动态计算。。所以也是比较坑爹的。。\r\n\r\n### ViewPager\r\n\r\n拿了网上一个画廊的效果。直接\r\n\r\n```java\r\n    setPageTransformer(true, new ZoomOutPageTransformer());\r\n```\r\n\r\n这里注意，需要改变一下view的绘制顺序，保证当前view是最后绘制处于最上层\r\n\r\n```java\r\n/改变系统绘制顺序\r\n  @Override protected int getChildDrawingOrder(int childCount, int i) {\r\n\r\n    int position = getCurrentItem();\r\n    if(position<0){\r\n      return i;\r\n    }else{\r\n      if(i == childCount - 1){//这是最后一个需要刷新的item\r\n        if(position>i){\r\n          position=i;\r\n        }\r\n        return position;\r\n      }\r\n      if(i == position){//这是原本要在最后一个刷新的item\r\n        return childCount - 1;\r\n      }\r\n    }\r\n    return i;\r\n  }\r\n}\r\n\r\n```\r\n\r\n### RecyclerView\r\n\r\nRecyclerView最开始是完全透明的。并且跟随HeaderView上移而上移，在上移的过程中渐渐显示出来。 需要监听RecyclerView滚动，当RecyclerView滚动到顶部的时候。告知Header，该恢复最初原样了。\r\n\r\n```java\r\n@Override\r\n  public boolean onNestedFling(CoordinatorLayout coordinatorLayout, View child, View target,\r\n      float velocityX, float velocityY, boolean consumed) {\r\n\r\n    //向下Fling并且到顶部\r\n    if (velocityY < 0 && ((RecyclerView) target).getChildAt(0).getY() == 0) {\r\n      mDependency.restore(mDependency.getY());\r\n    }\r\n    return super.onNestedFling(coordinatorLayout, child, target, velocityX, velocityY, consumed);\r\n  }\r\n\r\n  @Override\r\n  public void onNestedPreScroll(CoordinatorLayout coordinatorLayout, View child, View target,\r\n      int dx, int dy, int[] consumed) {\r\n\r\n    //如果在顶部\r\n    if (((RecyclerView) target).getChildAt(0).getY() == 0) {\r\n      //向下滑动\r\n      if (dy < 0) {\r\n        mDependency.setY(mDependency.getY() - dy);\r\n        //小于阀值\r\n        if (mDependency.getY() < 500) {\r\n          mDependency.restore(mDependency.getY());\r\n        }\r\n      }\r\n    }\r\n    super.onNestedPreScroll(coordinatorLayout, child, target, dx, dy, consumed);\r\n  }\r\n}\r\n```\r\n\r\n\r\n### Behavior\r\n\r\n让header和RecyclerView关联起来的就是Behavior了。Behavior之前写过几篇介绍过了，这里就不再啰嗦。\r\n\r\ndenpendcy为HeaderView。并且监听RecyclerView的滑动。\r\n\r\n\r\n具体的细节还是看源码吧~\r\n\r\n如果你觉得还不错，欢迎Star  \r\n欢迎加入我的qq群: 425983695\r\n\r\n\r\n\r\n# License\r\n\r\n    Copyright 2016 androidwing1992\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    \r\n        http://www.apache.org/licenses/LICENSE-2.0\r\n    \r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n"
        },
        {
          "name": "app-debug.apk",
          "type": "blob",
          "size": 1678.3486328125,
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.4912109375,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n  repositories {\n    jcenter()\n  }\n  dependencies {\n    classpath 'com.android.tools.build:gradle:2.2.2'\n\n    // NOTE: Do not place your application dependencies here; they belong\n    // in the individual module build.gradle files\n  }\n}\n\nallprojects {\n  repositories {\n    jcenter()\n    maven { url \"https://jitpack.io\" }\n  }\n}\n\ntask clean(type: Delete) {\n  delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8291015625,
          "content": "## Project-wide Gradle settings.\n#\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n#\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx1024m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n#\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n#Sat Nov 19 22:07:14 CST 2016\nsystemProp.http.proxyHost=127.0.0.1\norg.gradle.jvmargs=-Xmx1536m\nsystemProp.http.proxyPort=1080\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "img.gif",
          "type": "blob",
          "size": 1100.861328125,
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0146484375,
          "content": "include ':app'\n"
        }
      ]
    }
  ]
}