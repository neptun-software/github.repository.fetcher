{
  "metadata": {
    "timestamp": 1736708533993,
    "page": 765,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alibaba/jvm-sandbox-repeater",
      "stars": 2557,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".DS_Store",
          "type": "blob",
          "size": 6.00390625,
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.021484375,
          "content": ".idea\n*.iml\n**/target/"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4775390625,
          "content": "language: generic\n\njdk:\n  - openjdk6\n  - oraclejdk6\n\ncache:\n  directories:\n    - \"$HOME/.m2/repository\"\n\nscript:\n  # boot repeater console\n  - cd ./bin\n  - rm -rf ${HOME}/sandbox ${HOME}/.sandbox-module\n  - nohup sh ./bootstrap.sh > ${HOME}/repeater-bootstrap.log &\n  - sh ./health.sh\n  - cd -\n\nafter_success:\n  - mvn clean cobertura:cobertura\n  - kill -9 $(ps -ef | grep \"repeater-bootstrap.jar\" | grep \"java\" | grep -v grep | awk '{print $2}')\n  - bash <(curl -s https://codecov.io/bash)"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0947265625,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 1999-2019 Alibaba Group Holding Ltd.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "Readme.md",
          "type": "blob",
          "size": 10.39453125,
          "content": "![logo](https://github.com/alibaba/jvm-sandbox-repeater/releases/download/v1.0.0/repeater-logo.png)\n\n[![Build Status](https://travis-ci.org/alibaba/jvm-sandbox-repeater.svg?branch=master)](https://travis-ci.org/alibaba/jvm-sandbox-repeater)\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![GitHub issues](https://img.shields.io/github/issues/alibaba/jvm-sandbox-repeater.svg)](https://github.com/alibaba/jvm-sandbox-repeater/issues)\n\n# 基于[JVM-Sandbox](https://github.com/alibaba/JVM-Sandbox)的录制/回放通用解决方案\n\n> [jvm-sandbox-repeater](https://github.com/alibaba/jvm-sandbox-repeater)是[JVM-Sandbox](https://github.com/alibaba/JVM-Sandbox)生态体系下的重要模块，它具备了JVM-Sandbox的所有特点，插件式设计便于快速适配各种中间件，封装请求录制/回放基础协议，也提供了通用可扩展的各种丰富API。\n\n## 目标人群 - 面向测试开发工程师\n\n- 线上有个用户请求一直不成功，我想在测试环境Debug一下，能帮我复现一下吗？\n- 压测流量不知道怎么构造，数据结构太复杂，压测模型也难以评估，有什么好的办法吗？\n- 不想写接口测试脚本了，我想做一个流量录制系统，把线上用户场景做业务回归，可能会接入很多服务系统，不想让每个系统都进行改造，有好的框架选择吗？\n- 我想做一个业务监控系统，对线上核心接口采样之后做一些业务校验，实时监控业务正确性。\n\n如果你有以上的想法或需求，[jvm-sandbox-repeater](https://github.com/alibaba/jvm-sandbox-repeater) 都将是你的不二选择方案；框架基于JVM-Sandbox，拥有JVM-Sandbox的一切特性，同时封装了以下能力：\n\n- 录制/回放基础协议，可快速配置/编码实现一类中间件的录制/回放\n- 开放数据上报，对于录制结果可上报到自己的服务端，进行监控、回归、问题排查等上层平台搭建\n\n## 项目简介\n\n### repeater的核心能力是什么？\n\n#### 1. 通用录制/回放能力\n\n- 无侵入式录制HTTP/Java/Dubbo入参/返回值录制能力（业务系统无感知）\n- 基于[TTL](https://github.com/alibaba/transmittable-thread-local)提供多线程子调用追踪，完整追踪一次请求的调用路径\n- 入口请求（HTTP/Dubbo/Java）流量回放、子调用（Java/Dubbo）返回值Mock能力\n\n#### 2. 快速可扩展API实现\n\n- 录制/回放插件式架构\n- 提供标准接口，可通过配置/简单编码实现一类通用插件\n\n#### 3. standalone工作模式\n\n- 无需依赖任何服务端/存储，可以单机工作，提供录制/回放能力\n\n### repeater的可以应用到哪些场景？\n\n#### 1. 业务快速回归\n\n- 基于线上流量的录制/回放，无需人肉准备自动化测试脚本、准备测试数据\n\n#### 2. 线上问题排查\n\n- 录制回放提供\"昨日重现\"能力，还原线上真实场景到线下做问题排查和Debug\n- 动态方法入参/返回值录制，提供线上快速问题定位\n\n#### 3. 压测流量准备\n\n- 0成本录制HTTP/Dubbo等入口流量，作为压测流量模型进行压测\n\n#### 4. 实时业务监控\n\n- 动态业务监控，基于核心接口数据录制回流到平台，对接口返回数据正确性进行校验和监控\n\n## 核心原理\n\n### 流量录制\n\n对于Java调用，一次流量录制包括一次入口调用(`entranceInvocation`)（eg：HTTP/Dubbo/Java）和若干次子调用(`subInvocations`)。流量的录制过程就是把入口调用和子调用绑定成一次完整的记录，框架抽象了基础录制协议，调用的组装由调用插件([InvokePlugin](/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/spi/InvokePlugin.java))来完成，需要考虑解决的核心问题：\n\n- 快速开发和适配新插件\n- 绑定入口调用和子调用（解决多线程上下文传递问题）\n- `invocation`唯一定位，保障回放时精确匹配\n- 自定义流量采样、过滤、发送、存储\n\n框架的核心逻辑录制协议基于JVM-Sandbox的`BEFORE`、`RETRUN`、`THROW`事件机制进行录制流程控制，详见[DefaultEventListener](/repeater-plugin-core/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/core/impl/api/DefaultEventListener.java)：\n\n> 基于[TTL](https://github.com/alibaba/transmittable-thread-local)解决跨线程上下文传递问题，开启`RepeaterConfig.useTtl`之后支持多线程子调用录制\n>\n> 开放插件定义enhance埋点/自定义调用组装方式快速实现插件适配\n>\n> [Invocation](/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/domain/Invocation.java)抽象[Identity](/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/domain/Identity.java)统一定位由插件自己扩展实现\n>\n> 基于[Tracer](/repeater-plugin-core/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/core/trace/Tracer.java)实现应用内链路追踪、采样；同时支持多种过滤方式，插件可自由扩展；\n\n```java\npublic void onEvent(Event event) throws Throwable {\n    try {\n        /*\n         * event过滤；针对单个listener，只处理top的事件\n         */\n        /** -------- **/\n        /*\n         * 初始化Tracer开启上下文追踪[基于TTL，支持多线程上下文传递]\n         */\n        /** -------- **/\n        /*\n         * 执行基础过滤\n         */\n        /** -------- **/\n        /*\n         * 执行采样计算\n         */\n        /** -------- **/\n        /*\n         * processor filter\n         */\n        /** -------- **/\n        /*\n         * 分发事件处理\n         */\n    } catch (ProcessControlException pe) {\n        /*\n         * sandbox流程干预\n         */\n    } catch (Throwable throwable) {\n    \t /*\n    \t  * 统计异常\n    \t  */\n    } finally {\n        /*\n         * 清理上下文\n         */\n    }\n}\n\n```\n\n### 流量回放\n\n流量回放，获取录制流量的入口调用入参，再次发起调用。注意：**读接口或者幂等写接口可以直接回放，否则在生产环境请谨慎使用，可能会造成脏数据**；用户可自行选择mock回放或者非mock，回放过程要解决的核心问题：\n\n- 多种入口(HTTP/Dubbo/Java)的回放发起\n- 自定义回放流量数据来源、回放结果的上报\n- 自定义mock/非mock回放、回放策略\n- 开放回放流程关键节点hook\n\n回放过程通过异步EventBus方式订阅回放请求；基于[FlowDispather](/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/api/FlowDispatcher.java)进行回放流量分发，每个类型回放插件实现[Repeater](/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/spi/Repeater.java)SPI完成回放请求发起；每次回放请求可决定本地回放是否mock，插件也自由实现mock逻辑，mock流程代码\n\n> mock回放：回放流量子调用（eg:mybatis/dubbo)不发生真实调用，从录制子调用中根据 [MockStrategy](/repeater-plugin-api/src/main/java/com/alibaba/jvm/sandbox/repeater/plugin/spi/MockStrategy.java) 搜索匹配的子调用，利用JVM-Sandbox的流程干预能力，有匹配结果，进行`throwReturnImmediately`返回，没有匹配结果则抛出异常阻断流程，避免重复调用污染数据\n\n```java\npublic void doMock(BeforeEvent event, Boolean entrance, InvokeType type) throws ProcessControlException {\n    /*\n     * 获取回放上下文\n     */\n    RepeatContext context = RepeatCache.getRepeatContext(Tracer.getTraceId());\n    /*\n     * mock执行条件\n     */\n    if (!skipMock(event, entrance, context) && context != null && context.getMeta().isMock()) {\n        try {\n            /*\n             * 构建mock请求\n             */\n            final MockRequest request = MockRequest.builder()\n                    ...\n                    .build();\n            /*\n             * 执行mock动作\n             */\n            final MockResponse mr = StrategyProvider.instance().provide(context.getMeta().getStrategyType()).execute(request);\n            /*\n             * 处理策略推荐结果\n             */\n            switch (mr.action) {\n  \t\t\t\t\t...\n            }\n        } catch (ProcessControlException pce) {\n            throw pce;\n        } catch (Throwable throwable) {\n            ProcessControlException.throwThrowsImmediately(new RepeatException(\"unexpected code snippet here.\", throwable));\n        }\n    }\n}\n```\n## 合作共建的公司团队\n<img src=\"https://raw.githubusercontent.com/lemon-simple/jvm-sandbox-repeater/master/vLogo.png\" alt=\"v\" style=\"width:25%;height:25%;float:left\" />\n<br/><br/>\n\n\n## 已支持的插件列表\n\n> Java生态中间件及各种框架众多，各公司技术选型差异较大没办法统一适配，目前适配了几款常用插件作为示例，如有需求可以通过issue方式提交，同时也欢迎大家来贡献开发插件\n\n|    \t\t\t\t      \t插件类型     \t\t             | 录制   |  回放 | Mock  | 支持时间  |                  贡献者                   |\n| -----------------------------------------------------------| ----- | :---: | :---: | :-----: |   :----------------------------------:    |\n| [http-plugin](/repeater-plugins/http-plugin)               |   √   |   √   |   ×   | 201906  |[zhaoyb1990](https://github.com/zhaoyb1990)|\n| [dubbo-plugin](/repeater-plugins/dubbo-plugin)             |   √   |   ×   |   √   | 201906  |[zhaoyb1990](https://github.com/zhaoyb1990)|\n| [ibatis-plugin](/repeater-plugins/ibatis-plugin)           |   √   |   ×   |   √   | 201906  |[zhaoyb1990](https://github.com/zhaoyb1990)|\n| [mybatis-plugin](/repeater-plugins/mybatis-plugin)         |   √   |   ×   |   √   | 201906  |[ztbsuper](https://github.com/ztbsuper)    |\n| [java-plugin](/repeater-plugins/java-plugin)               |   √   |   √   |   √   | 201906  |[zhaoyb1990](https://github.com/zhaoyb1990)|\n| [redis-plugin](/repeater-plugins/redis-plugin)             |   √   |   ×   |   √   | 201910  |[ElesG](https://github.com/ElesG)          |\n| [hibernate](/repeater-plugins/hibernate-plugin)            |   √   |   ×   |   √   | 201910  |[zhaoyb1990](https://github.com/zhaoyb1990)|\n| [spring-data-jpa](/repeater-plugins/spring-data-jpa-plugin)|   √   |   ×   |   √   | 201910  |[zhaoyb1990](https://github.com/zhaoyb1990)|\n\n## 相关文档\n\n- [用户使用手册](/docs/user-guide-cn.md)\n- [插件开发手册](/docs/plugin-development.md)\n\n## 钉钉交流群\n![pic](https://github.com/alibaba/jvm-sandbox-repeater/releases/download/v1.0.0/DingTalkGroup.jpeg)\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "hessian-lite",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 8.4091796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <artifactId>jvm-sandbox-repeater</artifactId>\n    <groupId>com.alibaba.jvm.sandbox</groupId>\n    <version>1.0.0-SNAPSHOT</version>\n    <packaging>pom</packaging>\n\n    <properties>\n        <sandbox.api.version>1.2.0</sandbox.api.version>\n        <metainf-services.version>1.8</metainf-services.version>\n        <org.slf4j.version>1.7.24</org.slf4j.version>\n        <logback.version>1.2.1</logback.version>\n        <ttl.version>2.10.2</ttl.version>\n        <guava.version>19.0</guava.version>\n        <fastjson.version>1.2.67.sec10</fastjson.version>\n        <commons-io.version>2.5</commons-io.version>\n        <commons-lang3.version>3.6</commons-lang3.version>\n        <commons-io.version>2.5</commons-io.version>\n        <commons-collections4.version>4.1</commons-collections4.version>\n        <okhttp.version>3.12.1</okhttp.version>\n        <testng.version>6.14.3</testng.version>\n        <commons-csv.version>1.7</commons-csv.version>\n    </properties>\n\n    <modules>\n        <module>repeater-plugin-core</module>\n        <module>repeater-plugin-api</module>\n        <module>repeater-plugins</module>\n        <module>repeater-module</module>\n        <module>repeater-client</module>\n        <module>repeater-console</module>\n        <module>hessian-lite</module>\n        <module>repeater-aide</module>\n    </modules>\n\n    <developers>\n        <developer>\n            <id>zhaoyb1990</id>\n            <name>赵跃兵</name>\n            <email>zhaoyb1990(AT)foxmail(DOT)com</email>\n            <organization>Alibaba Open Source</organization>\n            <organizationUrl>https://github.com/alibaba</organizationUrl>\n            <roles>\n                <role>Developer</role>\n            </roles>\n        </developer>\n    </developers>\n\n    <organization>\n        <name>Alibaba Open Source</name>\n        <url>https://github.com/alibaba</url>\n    </organization>\n\n    <dependencyManagement>\n        <dependencies>\n            <!-- = = = = = = = = ==-->\n            <!-- self dependencies -->\n            <dependency>\n                <groupId>com.alibaba.jvm.sandbox</groupId>\n                <artifactId>repeater-plugin-api</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba.jvm.sandbox</groupId>\n                <artifactId>repeater-aide</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba.jvm.sandbox</groupId>\n                <artifactId>hessian-lite</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba.jvm.sandbox</groupId>\n                <artifactId>repeater-plugin-core</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <!-- = = = = = = = = = = = =-->\n            <!--sandbox api dependencies-->\n            <dependency>\n                <groupId>com.alibaba.jvm.sandbox</groupId>\n                <artifactId>sandbox-api</artifactId>\n                <version>${sandbox.api.version}</version>\n            </dependency>\n            <!-- = = = = = = = = = = = =-->\n            <!--third party dependencies-->\n            <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>transmittable-thread-local</artifactId>\n                <version>${ttl.version}</version>\n            </dependency>\n            <!-- logger -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${org.slf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-classic</artifactId>\n                <version>${logback.version}</version>\n            </dependency>\n            <!-- well known third party -->\n            <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>guava</artifactId>\n                <version>${guava.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>fastjson</artifactId>\n                <version>${fastjson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-io</groupId>\n                <artifactId>commons-io</artifactId>\n                <version>${commons-io.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>${commons-lang3.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-collections4</artifactId>\n                <version>${commons-collections4.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-csv</artifactId>\n                <version>${commons-csv.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.squareup.okhttp3</groupId>\n                <artifactId>okhttp</artifactId>\n                <version>${okhttp.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.kohsuke.metainf-services</groupId>\n                <artifactId>metainf-services</artifactId>\n                <version>${metainf-services.version}</version>\n                <scope>compile</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.testng</groupId>\n                <artifactId>testng</artifactId>\n                <version>${testng.version}</version>\n                <scope>test</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.5.1</version>\n                <configuration>\n                    <source>1.6</source>\n                    <target>1.6</target>\n                    <encoding>UTF-8</encoding>\n                </configuration>\n            </plugin>\n            <!--<plugin>-->\n                <!--<groupId>org.apache.maven.plugins</groupId>-->\n                <!--<artifactId>maven-javadoc-plugin</artifactId>-->\n                <!--<version>3.0.0-M1</version>-->\n                <!--<executions>-->\n                    <!--<execution>-->\n                        <!--<id>attach-javadocs</id>-->\n                        <!--<goals>-->\n                            <!--<goal>jar</goal>-->\n                        <!--</goals>-->\n                    <!--</execution>-->\n                <!--</executions>-->\n            <!--</plugin>-->\n            <!--<plugin>-->\n                <!--<groupId>org.apache.maven.plugins</groupId>-->\n                <!--<artifactId>maven-source-plugin</artifactId>-->\n                <!--<version>3.0.1</version>-->\n                <!--<executions>-->\n                    <!--<execution>-->\n                        <!--<goals>-->\n                            <!--<goal>jar-no-fork</goal>-->\n                        <!--</goals>-->\n                    <!--</execution>-->\n                <!--</executions>-->\n            <!--</plugin>-->\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>cobertura-maven-plugin</artifactId>\n                <version>2.7</version>\n                <configuration>\n                    <formats>\n                        <format>html</format>\n                        <format>xml</format>\n                    </formats>\n                    <check />\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>cobertura</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>"
        },
        {
          "name": "repeater-aide",
          "type": "tree",
          "content": null
        },
        {
          "name": "repeater-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "repeater-console",
          "type": "tree",
          "content": null
        },
        {
          "name": "repeater-module",
          "type": "tree",
          "content": null
        },
        {
          "name": "repeater-plugin-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "repeater-plugin-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "repeater-plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "travis.sh",
          "type": "blob",
          "size": 0.427734375,
          "content": "#!/usr/bin/env bash\n\n# simulator travis build\n\ncd ./bin/\n\n# boot repeater console\nrm -rf ${HOME}/sandbox ${HOME}/.sandbox-module\n\nnohup sh ./bootstrap.sh > ${HOME}/repeater-bootstrap.log &\n\nsh ./health.sh\n\ncd -\n\n# run cobertura\n\nmvn clean cobertura:cobertura\n\nkill -9 $(ps -ef | grep \"repeater-bootstrap.jar\" | grep \"java\" | grep -v grep | awk '{print $2}')\n\nbash <(curl -s https://codecov.io/bash) -t acfa5b67-54e4-45a2-875e-6f2cf79fe181"
        }
      ]
    }
  ]
}