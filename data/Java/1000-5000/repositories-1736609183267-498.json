{
  "metadata": {
    "timestamp": 1736609183267,
    "page": 498,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "halirutan/IntelliJ-Key-Promoter-X",
      "stars": 3059,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.044921875,
          "content": ".idea/\n*.iml\n.gradle/\nbuild/\n.intellijPlatform"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.9599609375,
          "content": "# Key Promoter X Changelog\n\n## [Unreleased]\n\n## [2024.2.2] - 2024-11-13\n\n- Fix possible performance problem in\n  Rider ([RIDER-118966](https://youtrack.jetbrains.com/issue/RIDER-118966/Long-pauses-on-copy-paste))\n\n### Added\n\n- Add support for 2024 EAP\n- Fix API deprecations\n- Introduced separate instantiation for handling Platform actions and raw AWT events\n- Enabled the plugin to be a dynamic plugin which no longer requires a restart when updating\n- Added `KeyPromoterAWTListener` for listening to AWT events.\n- Added `KeyPromoterActionListener` for listening to action events.\n\n### Fixed\n\n- Modified multiple locations to ensure services are acquired dynamically\n- Update build system and dependencies\n- Updated the `plugin.xml` to use application listeners instead of application components\n\n## [2024.1.0] - 2024-04-10\n\n### Fixed\n\n- Add support for JetBrains IDEs 2024.1\n- Update description\n\n## [2023.3.0] - 2023-11-12\n\n### Added\n\n- Support for JetBrains IDEs version 2023.3\n\n### Fixed\n\n- Icons for new UI\n  ([Issue 101](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/104))\n\n## [2023.2.0] - 2023-07-30\n\n### Added\n\n- Support for JetBrains IDEs version 2023.2\n\n### Changed\n\n- Update GH actions for building and deploying the plugin\n- Update plugin build setup to match with the recent IntelliJ Plugin Template\n\n### Fixed\n\n- Tool window buttons are working now with the new UI\n  ([Issue 101](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/101))\n\n## [2022.3.1]\n\n### Changed\n\n- Update build system\n\n### Fixed\n\n- Issue with notifications on Win11 where the shortcut and the suppress action is not directly visible in the\n  notification\n  ([Issue 100](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/100))\n- Possible fix for tool window buttons not firing a Key Promoter notification with the new UI\n  ([Issue 101](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/101))\n\n## [2019.3.0]\n\n- Make compatible with 2019.3 EAP products\n- Fix display of Run and Debug actions which will from now not display the specific run configuration and therefore\n  count all these as one entry ([Issue 44](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/44))\n- Fix regression where editor popup action won't show\n  up ([Issue 43](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/42))\n- Add features that lets you snooze the KPX\n  notifications ([Issue 42](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/42))\n- Add features that lets you turn off KPX in Presentation and Distraction Free\n  Mode ([Issue 39](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/39))\n- Fix instances where the KPX would not recognize a mouse-click.\n  See [this IDEA issue.](https://youtrack.jetbrains.com/issue/IDEA-219133)\n- Fix wrong icon for actions without icon ([Issue 37](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/37))\n\n## [2019.2.0]\n\n- Make Key Promoter X work on EAP versions like PhpStorm 2019.2\n- Increase minimum required IntelliJ version to get rid of deprecated code\n- \"Do not show again\" action dismisses the tip\n  immediately ([Issue 34](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/34))\n- Increase possible settings for notification limits\n  ([Issue 30](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/30))\n- Add plugin icon shown in the settings and the repository\n- New icons that better integrate into the UI\n- Implemented a setting to only show \"Keyboard\" shortcuts. This is default and can be adjusted.\n- Fixed\n  exception [that occurred on closing Keymap dialog in 2018.3](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/27)\n  .\n- Removed setting for maximum visible notifications. IDEA 2018.3 seems to restrict this itself.\n- Implemented feature-request:\n  [Minimum count before notification](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/20#event-1720427835)\n- Fixed empty tool-window with several windows open\n- Fixed version range to make it work for EAP\n- Fixed null-action tip on tool-window title buttons\n- Fixed exception with wrong entries in the statistic\n- Should work on Android Studio now\n- Fixed re-appearing tips when custom shortcuts are used\n- Made tips for context menus more consistent\n- Fixed issue that would show suppressed shortcuts\n- Implemented \"do not show again\"\n- Tool-window updates automatically\n- Icons for the Key Promoter X\n- Tool-window shows now icons of the actions that were called\n- Better visualization of the statistics tool-window\n- Fix bug to catch tool-window buttons successfully\n- Re-implemented the algorithm that catches button clicks and extracts their information\n- Change to internal notification system instead of a custom AWT window\n\n## [2020.1.0]\n\n- Add scrollbars in the toolwindow for bottom\n  placement ([Issue 55](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/55))\n- Revert back to non-dynamic plugin for now\n- Fix icon sizes\n- Make extension reloadable without requiring a restart of the IDE\n- Fix all deprecation issues\n- Fix bug that prevents settings from being\n  saved ([Issue 51](https://github.com/halirutan/IntelliJ-Key-Promoter-X/issues/51))\n- Include \"Organization\" requirement for plugins\n- Make compatible with 2020.1 EAP products\n\n[Unreleased]: https://github.com/halirutan/IntelliJ-Key-Promoter-X/compare/v2024.2.2...HEAD\n[2024.2.2]: https://github.com/halirutan/IntelliJ-Key-Promoter-X/compare/v2024.1.0...v2024.2.2\n[2024.1.0]: https://github.com/halirutan/IntelliJ-Key-Promoter-X/compare/v2023.3.0...v2024.1.0\n[2023.3.0]: https://github.com/halirutan/IntelliJ-Key-Promoter-X/compare/v2023.2.0...v2023.3.0\n[2023.2.0]: https://github.com/halirutan/IntelliJ-Key-Promoter-X/compare/v2022.3.1...v2023.2.0\n[2022.3.1]: https://github.com/halirutan/IntelliJ-Key-Promoter-X/compare/v2019.3.0...v2022.3.1\n[2020.1.0]: https://github.com/halirutan/IntelliJ-Key-Promoter-X/commits/v2020.1.0\n[2019.3.0]: https://github.com/halirutan/IntelliJ-Key-Promoter-X/compare/v2019.2.0...v2019.3.0\n[2019.2.0]: https://github.com/halirutan/IntelliJ-Key-Promoter-X/compare/v2020.1.0...v2019.2.0\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.453125,
          "content": "Copyright (c) 2019 Patrick Scheibe, Dmitry Kashin, Athiele.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products\nderived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\nOR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\nOR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\nTHE POSSIBILITY OF SUCH DAMAGE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.3935546875,
          "content": "![Downloads Badge](https://img.shields.io/jetbrains/plugin/d/9792-key-promoter-x.svg)\n[![Build Status](https://github.com/halirutan/IntelliJ-Key-Promoter-X/actions/workflows/build.yml/badge.svg)](https://github.com/halirutan/IntelliJ-Key-Promoter-X/actions/workflows/build.yml)\n[![Slack](https://img.shields.io/badge/Slack-%23plugin--keypromoter--x-blue)](https://plugins.jetbrains.com/slack)\n[![Banner](doc/img/kpxBanner.png)](https://github.com/sponsors/halirutan)\n\n---\n\nI'm grateful this project is currently receives sponsorship of \\$4/month from\n[Indrek Toom](https://github.com/m2ger),\n\\$2/month from\n[Mac Adamarczuk](https://github.com/macalac),\n[Frank Harper](https://github.com/franklinharper),\n[PCoetzeeDev](https://github.com/PCoetzeeDev),\n[baffler](https://github.com/baffler)\nand \\$1/month from [13 other people](https://github.com/sponsors/halirutan).\n\n- [Become a GitHub Sponsor and support the Key Promoter X development](https://github.com/sponsors/halirutan)\n\n---\n\nThe Key Promoter X is a plugin for IntelliJ-based products like IDEA, Android Studio, or CLion, and it helps to learn\nessential keyboard shortcuts from mouse actions while you are working.\nWhen you use the mouse on a button inside the IDE, the Key Promoter X shows you the keyboard shortcut that you should\nhave used instead. This provides an easy way to learn how\nto replace tedious mouse work with keyboard keys and helps to transition to a faster, mouse free development.\nCurrently, it supports toolbar buttons, menu buttons, tool windows and the actions therein.\n\n![Teaser](http://i.imgur.com/2zBdMT8.gif)\n\n## ![Docs][doc-image] Features and Documentation\n\n### Features\n\n- non-intrusive notifications about shortcuts using IDEA's built-in message framework\n- easy shortcut customization for buttons by active links in the notification\n- easy creation of shortcuts for buttons that don't have one\n- a persistent hit-list of missed shortcuts as IDEA tool-window\n- list of suppressed tips for certain shortcuts you don't want to use\n\n## Installation\n\nThe plugin can be installed with **Settings | Plugins | Market Place** and searching for Key Promoter X. When a button is\nclicked with the mouse, a notification pops up that shows the shortcut which can be used instead. If a button has no shortcut and\nis pressed several times, a notification is shown that lets you easily create a shortcut for this action.\n\n## Documentation\n\n### How does it work?\n\nIf you click something with the mouse, the plugin will try to find out if your mouse-click invoked some IDEA action. If this is the case\nand we can find a so-called `ActionID`, the plugin registers this event. If your action is already connected to a shortcut, the plugin will\nshow you how the invoked action is called (e.g. Open Settings) and what the shortcut for the action is. \n\n![Notification](doc/img/notification.png)\n\nAdditionally, it will save your mouse-click\nin the Key Promoter X statistics tool-windows so that you see which actions you are using the most and which shortcuts you should learn first.\n\nIf the action is not connected to a shortcut but has an `ActionID` (which basically means we can assign a shortcut), the plugin still registers\nyour click. Depending on your settings under **Settings | Tools | Key Promoter X**, you will get a notification every x clicks on the\nsame action that asks you if you want to create a shortcut for this.\n\nBe aware that there are certain mouse-clicks that, although they do something, cannot be successfully inspected and the plugin won't be able\nto help you with those. This for instance happens for some of the buttons in the tool-windows.\n\n### The Key Promoter X tool-window\n\nThe Key Promoter X comes with built in tool-window on the right side that gives you access to your hit-list of missed shortcuts and to the\nthe list of suppressed items.\n\n![Tool-window](doc/img/tool-window.png)\n\nEvery mouse click that is connected to an action with a shortcut will be registered in the statistic. The items in this list are ordered by\n how often you missed this shortcut.\n \nThere might be some mouse actions that you don't want to replace by its shortcut.\nFor those, you can press *Don't show again* in the notification and all suppressed shortcuts will appear in the list below the statistics.\nYou can re-activate a suppressed item by double-clicking on it in the suppressed list.\n\nThe Key Promoter X toolwindow additionally allows you to clear your statistics and make a fresh start, and you can\nsnooze the Key Promoter X notification until the restart of IDEA (or you turn it off again).\n\n### Settings for the Key Promoter X\n\n Settings for the plugin can be found under **Settings | Tools | Key Promoter X**.\n\n![Settings Panel](doc/img/settings.png)\n\n#### General\n\n- Show only keyboard shortcuts prevents the display of notifications of short-cuts for the mouse. One example is the\n*Go to declaration* action, which also has certain mouse combination to invoke the action. Enabling this option will\nonly show valid keyboard short-cuts.\n- Disable in presentation or distraction free mode will disable the Key Promoter X when you are giving a presentation or\nyou explicitly don't wan to be disturbed.\n\n#### Settings\n\n- Clicks before notification is shown adjusts whether the Key Promoter X should display a notification each time you press\na button with the mouse that has a key combination available.\nE.g., with a setting of 2, every second click will show a notification.\n- Number of invocations before suggesting to create adjusts how often a button without a short-cut needs to be clicked\nbefore you see a message suggesting to create one for it.\n\n#### Enable for\n\nAdjusts which buttons are allowed to show a tip. Note that the *All Buttons* checkbox will try\nto catch as many mouse-clicks as possible, even if you are not pressing a real button. This will show you for instance a tip when you\nhold Ctrl and press on a Java method to jump to its declaration which can be replaced by Ctrl+B.\n\n\n## ![dev image][dev-image] Development  [![Build Status](https://travis-ci.org/halirutan/IntelliJ-Key-Promoter.svg?branch=KeyPromoterX)](https://travis-ci.org/halirutan/IntelliJ-Key-Promoter)\n\nThe plugin is written in Java using IntelliJ's plugin framework.\nThe code-base is small and contains only a handful of well documented classes, which makes it an excellent candidate to \nlearn how to implement IntelliJ plugins.\n\nThe code is hosted on GitHub and has a [Travis-CI](https://travis-ci.org/) integration for automatic building.\nCompilation is done with Gradle using the IntelliJ Gradle plugin and should work out of the box with a recent (v3.5) version.\n\n## ![bug image][issues-image] Reporting issues\n\nIf you experience bugs or weird behavior please create an issue [on the bug tracker](https://github.com/halirutan/IntelliJ-Key-Promoter/issues).\n\n\n## ![contact image][contact-image] Credits\n\nThe initial version was [implemented by\nDmitry Kashin](https://code.google.com/p/key-promoter/)\nwho unfortunately stopped maintaining the code and pushed the\nlast version in 2012, more than 7 years ago.\n\n[User athiele](https://github.com/athiele/key-promoter-fork/commits/master)\ntook the time to fork the original code, fix issues and provide\na version that can be used on more recent IDEA versions but stopped working on it a few years ago.\n\n\n[logo-image]: http://i.imgur.com/p3u3ehU.png\n[doc-image]: http://i.stack.imgur.com/erf8e.png\n[dev-image]: http://i.stack.imgur.com/D9G2G.png\n[issues-image]: http://i.stack.imgur.com/K4fGd.png\n[contact-image]: http://i.stack.imgur.com/tCbmW.png\n"
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 3.189453125,
          "content": "import org.jetbrains.changelog.Changelog\nimport org.jetbrains.intellij.platform.gradle.IntelliJPlatformType\nimport org.jetbrains.intellij.platform.gradle.TestFrameworkType\n\nfun properties(key: String) = providers.gradleProperty(key)\n\nplugins {\n    id(\"java\")\n    alias(libs.plugins.kotlin)\n    alias(libs.plugins.gradleIntelliJPlugin)\n    alias(libs.plugins.changelog)\n}\n\ngroup = properties(\"pluginGroup\").get()\nversion = properties(\"pluginVersion\").get()\n\nrepositories {\n    mavenCentral()\n    intellijPlatform {\n        defaultRepositories()\n    }\n}\n\ndependencies {\n    implementation(libs.annotations)\n    intellijPlatform {\n        create(properties(\"platformType\"), properties(\"platformVersion\"))\n        instrumentationTools()\n        pluginVerifier()\n        zipSigner()\n        testFramework(TestFrameworkType.Platform)\n    }\n}\n\njava {\n    toolchain {\n        languageVersion.set(JavaLanguageVersion.of(17))\n    }\n}\n\nsourceSets {\n    main {\n        java.srcDir(\"src\")\n        resources.srcDir(\"resources\")\n    }\n}\n\nintellijPlatform {\n    buildSearchableOptions = false\n    instrumentCode = true\n    projectName = project.name\n\n    pluginConfiguration {\n        name = properties(\"pluginName\")\n        version = properties(\"pluginVersion\")\n        description = htmlFixer(\"resources/META-INF/description.html\")\n        changeNotes = properties(\"pluginVersion\").map { pluginVersion ->\n            with(changelog) {\n                renderItem(\n                    (getOrNull(pluginVersion) ?: getUnreleased())\n                        .withHeader(false)\n                        .withEmptySections(false),\n                    Changelog.OutputType.HTML,\n                )\n            }\n        }\n\n        vendor {\n            name = \"halirutan\"\n            url = properties(\"pluginRepositoryUrl\")\n        }\n\n        ideaVersion {\n            sinceBuild = properties(\"pluginSinceBuild\")\n            untilBuild = provider { null }\n        }\n    }\n\n    publishing {\n        token = System.getenv(\"PUBLISH_TOKEN\")\n\n        // Use beta versions like 2020.3-beta-1\n        channels = properties(\"pluginVersion\").map {\n            listOf(it\n                .split('-')\n                .getOrElse(1) { \"default\" }\n                .split('.')\n                .first()\n            )\n        }\n    }\n\n    pluginVerification {\n        ides {\n            recommended()\n        }\n    }\n\n}\n\nchangelog {\n    groups.empty()\n    repositoryUrl.set(properties(\"pluginRepositoryUrl\"))\n}\n\n/**\n * Simple function to load HTML files and remove the surrounding `<html>` tags. This is useful for maintaining changes-notes\n * and the description of plugins in separate HTML files which makes them much more readable.\n */\nfun htmlFixer(filename: String): String {\n    if (!File(filename).exists()) {\n        logger.error(\"File $filename not found.\")\n    } else {\n        return File(filename).readText().replace(\"<html>\", \"\").replace(\"</html>\", \"\")\n    }\n    return \"\"\n}\n\ntasks {\n    wrapper {\n        gradleVersion = properties(\"gradleVersion\").get()\n    }\n\n    withType<JavaCompile> {\n        options.encoding = \"UTF-8\"\n        options.compilerArgs.add(\"-Xlint:all\")\n    }\n\n    val runRider by intellijPlatformTesting.runIde.registering {\n        type = IntelliJPlatformType.Rider\n    }\n}\n\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.6748046875,
          "content": "pluginGroup=de.halirutan.keypromoterx\npluginName=Key Promoter X\npluginRepositoryUrl=https://github.com/halirutan/IntelliJ-Key-Promoter-X\npluginVersion=2024.2.2\npluginSinceBuild=241\npluginUntilBuild=\n# Plugin Verifier integration -> https://github.com/JetBrains/gradle-intellij-plugin#plugin-verifier-dsl\n# See https://jb.gg/intellij-platform-builds-list for available build versions\nplatformType=IC\nplatformVersion=2024.1.4\ngradleVersion=8.10.2\nkotlin.stdlib.default.dependency=false\norg.gradle.configuration-cache=false\norg.gradle.caching=false\n# suppress inspection \"WrongPropertyKeyValueDelimiter\"\n# suppress inspection \"UnusedProperty\"\n--add-exports java.base/jdk.internal.vm=ALL-UNNAMED"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.48828125,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.7109375,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 0.2666015625,
          "content": "pluginManagement {\n    repositories {\n        maven(\"https://oss.sonatype.org/content/repositories/snapshots/\")\n        gradlePluginPortal()\n    }\n}\n\nplugins {\n    id(\"org.gradle.toolchains.foojay-resolver-convention\") version \"0.7.0\"\n}\n\nrootProject.name = \"Key Promoter X\""
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}