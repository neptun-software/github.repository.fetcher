{
  "metadata": {
    "timestamp": 1736608945396,
    "page": 145,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Sayi/poi-tl",
      "stars": 4339,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.0830078125,
          "content": "root = true\n\n\n[*.{groovy,java,kt,kts,xml,xsd}]\nindent_style = space\nindent_size = 4\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3671875,
          "content": "*.class\n.classpath\n.project\n.settings/\n*.iml\n**/**/.idea/\nbin/\n.idea/*\n\n# Package Files #\n*.jar\n*.war\n*.ear\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n/target/\nout*.docx\nout_*\nmerge_all\n\n/doc/*\n\n#private\n**/**/mk.md\ncomplex.docx\n~$*.docx\npoi-tl-cli/target/\npoi-tl-jsonmodel-support/target/\npoi-tl/.DS_Store\n.DS_Store\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1689453125,
          "content": "language: java\nscript: mvn clean install -f poi-tl/pom.xml\n\nafter_success:\n  - cd poi-tl\n  - mvn clean cobertura:cobertura org.eluder.coveralls:coveralls-maven-plugin:report"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.751953125,
          "content": "# poi-tl(poi-template-language)\n\n[![Build Status](https://app.travis-ci.com/Sayi/poi-tl.svg?branch=master)](https://app.travis-ci.com/Sayi/poi-tl) ![jdk1.6+](https://img.shields.io/badge/jdk-1.6%2B-orange.svg) ![jdk1.8](https://img.shields.io/badge/jdk-1.8-orange.svg) ![poi3.16%2B](https://img.shields.io/badge/apache--poi-3.16%2B-blue.svg) ![poi5.1.0](https://img.shields.io/badge/apache--poi-5.1.0-blue.svg) [![Gitter](https://badges.gitter.im/Sayi/poi-tl.svg)](https://gitter.im/Sayi/poi-tl?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\nA better way to generate word(docx) with template，based on Apache POI。\n\n## What is poi-tl\nFreeMarker or Velocity generates new html pages or configuration files based on text template and data. poi-tl is a Word template engine that generates **new documents** based on **Word template** and **data**.\n\nThe Word template has rich styles. Poi-tl will perfectly retain the styles in the template in the generated documents. You can also set styles for the tags. The styles of the tags will be applied to the replaced text, so you can focus on the template design. \n\npoi-tl is a *\"logic-less\"* template engine. There is no complicated control structure and variable assignment, only **tags**, some tags can be replaced with text, pictures, tables, etc., some tags will hide certain some document content, while other tags will loop a series of document content.\n\n> \"Powerful\" constructs like variable assignment or conditional statements make it easy to modify the look of an application within the template system exclusively... however, at the cost of separation, turning the templates themselves into part of the application logic.\n> \n> [《Google CTemplate》](https://github.com/OlafvdSpek/ctemplate/blob/master/doc/guide.html)\n\npoi-tl supports **custom functions (plug-ins)**, functions can be executed anywhere in the Word template, do anything anywhere in the document is the goal of poi-tl.\n\n|Feature |Description|\n| ------------- |-------------|\n|:white_check_mark: Text |Render the tag as text|\n|:white_check_mark: Picture |Render the tag as a picture|\n|:white_check_mark: Table |Render the tag as a table|\n|:white_check_mark: Numbering |Render the tag as a numbering|\n|:white_check_mark: Chart|Bar chart (3D bar chart), column chart (3D column chart), area chart (3D area chart), line chart (3D line chart), radar chart, pie chart (3D pie Figure) and other chart rendering |\n|:white_check_mark: If Condition |Hide or display certain document content (including text, paragraphs, pictures, tables, lists, charts, etc.) according to conditions|\n|:white_check_mark: Foreach Loop | Loop through certain document content (including text, paragraphs, pictures, tables, lists, charts, etc.) according to the collection|\n|:white_check_mark: Loop table row | Loop to copy a row of the rendered table|\n|:white_check_mark: Loop table column | Loop copy and render a column of the table|\n|:white_check_mark: Loop ordered list |Support the loop of ordered list, and support multi-level list at the same time|\n|:white_check_mark: Highlight code |Word highlighting of code blocks, supporting 26 languages ​​and hundreds of coloring styles|\n|:white_check_mark: Markdown |Convert Markdown to a word document|\n|:white_check_mark: Word attachment |Insert attachment in Word|\n|:white_check_mark: Word Comments |Complete support comment, create comment, modify comment, etc.|\n|:white_check_mark: Word SDT |Complete support structured document tag |\n|:white_check_mark: Textbox |Tag support in text box|\n|:white_check_mark: Picture replacement |Replace the original picture with another picture|\n|:white_check_mark: bookmarks, anchors, hyperlinks |Support setting bookmarks, anchors and hyperlinks in documents|\n|:white_check_mark: Expression Language |Fully supports SpringEL expressions and can extend more expressions: OGNL, MVEL...|\n|:white_check_mark: Style |The template is the style, and the code can also set the style|\n|:white_check_mark: Template nesting |The template contains sub-templates, and the sub-templates then contain sub-templates|\n|:white_check_mark: Merge |Word merge Merge, you can also merge in the specified position|\n|:white_check_mark: custom functions (plug-ins) | Plug-in design, execute function anywhere in the document|\n\n## TOC\n* [Maven](#Maven)\n* [Quick start](#Quick-start)\n* [Tags](#Tags)\n  * [Text](#Text)\n  * [Picture](#Picture)\n  * [Table](#Table)\n  * [Numbering](#Numbering)\n  * [Sections](#Sections)\n    * [False Values or Empty collection](#False-Values-or-Empty-collection)\n    * [Non-False Values and Not a collection](#Non-False-Values-and-Not-a-collection)\n    * [Non-Empty collection](#Non-Empty-collection)\n  * [Nesting](#Nesting)\n* [Documentation and examples](#Documentation-and-examples)\n* [Contributing](#Contributing)\n* [FAQ](#FAQ)\n\n\n## Maven\n\n```xml\n<dependency>\n  <groupId>com.deepoove</groupId>\n  <artifactId>poi-tl</artifactId>\n  <version>1.12.2</version>\n</dependency>\n```\n\n> NOTE: poi-tl `1.12.x` requires POI version `5.2.2+`.\n\n## Quick start\nStart with a deadly simple example: replace `{{title}}` with \"poi-tl template engine\".\n\n1. Create a new document `template.docx`, including the content `{{title}}`\n2. TDO mode: Template + data-model = output\n\n```java\n//The core API uses a minimalist design, only one line of code is required\nXWPFTemplate.compile(\"template.docx\").render(new HashMap<String, Object>(){{\n         put(\"title\", \"poi-tl template engine\");\n}}).writeToFile(\"out_template.docx\");\n```\nOpen the `out_template.docx` document, everything is as you wish.\n\n## Tags\nThe tag consists of two curly braces, `{{title}}` is a tag, `{{?title}}` is also a tag, `title` is the name of the tag, and `?` identifies the type of tag. Next, we Let’s see what tag types are there.\n\n### Text\nThe text tag is the most basic tag type in the Word template. `{{name}}` will be replaced by the value of key `name` in the data model. If the key is not exist, the tag will be cleared(The program can configure whether to keep the tag or throw an exception).\n\nThe style of the text tag will be applied to the replaced text, as shown in the following example.\n\nCode:\n\n```java\nput(\"name\", \"Mama\");\nput(\"thing\", \"chocolates\");\n```\n\nTemplate:\n\n**{{name}}** always said life was like a box of {{thing}}.  \n\nOutput:\n\n**Mama** always said life was like a box of chocolates.  \n\n### Picture\nThe image tag starts with `@`, for example, `{{@logo}}` will look for the value with the key of `logo` in the data model, and then replace the tag with the image. The data corresponding to the image tag can be a simple URL or Path string, or a structure containing the width and height of the image.\n\nCode:\n```java\nput(\"watermelon\", \"assets/watermelon.png\");\nput(\"watermelon\", \"http://x/lemon.png\");\nput(\"lemon\", Pictures.ofLocal(\"sob.jpeg\", PictureType.JPEG).size(24, 24).create());\n```\n\nTemplate:\n\n```\nFruit Logo:\nwatermelon {{@watermelon}}\nlemon {{@lemon}}\nbanana {{@banana}}\n```\n\nOutput:\n\n```\nFruit Logo:\nwatermelon 🍉\nlemon 🍋\nbanana 🍌\n```\n\n### Table\nThe table tag starts with `#`, such as `{{#table}}`, it will be rendered as a Word table with N rows and N columns. The value of N depends on the data of the `table` tag.\n\nCode:\n\n```java\nput(\"table\", Tables.of(new String[][] {\n                new String[] { \"Song name\", \"Artist\" }\n            }).border(BorderStyle.DEFAULT).create());\n```\n\nTemplate:\n\n```\n{{#table}}\n```\n\nOutput:\n\n<table>\n<tr><td>Song name</td><td>Artist</td></tr>\n</table>\n\n### Numbering\nThe list tag corresponds to Word's symbol list or numbered list, starting with `*`, such as `{{*number}}`.\n\nCode:\n```java\nput(\"list\", Numberings.create(\"Plug-in grammar\",\n                  \"Supports word text, pictures, table...\",\n                  \"Template, not just template, but also style template\"));\n```\n\nTemplate:\n\n```\n{{*list}}\n```\n\nOutput:\n\n```\n● Plug-in grammar\n● Supports word text, pictures, table...\n● Templates, not just templates, but also style templates\n```\n\n### Sections\nA section is composed of two tags before and after, the start tag is identified by `?`, and the end tag is identified by `/`, such as `{{?section}}` as the start tag of the sections block, `{{/section} }` is the end tag, and `section` is the name of this section.\n\nSections are very useful when processing a series of document elements. Document elements (text, pictures, tables, etc.) located in a section can be rendered zero, one or N times, depending on the value of the section.\n\n#### False Values or Empty collection\nIf the value of the section is `null`, `false` or an empty collection, all document elements located in the section will **not be displayed**, similar to the condition of the if statement is `false`.\n\nDatamodel:\n```json\n{\n  \"announce\": false\n}\n```\n\nTemplate:\n\n```\nMade it,Ma!{{?announce}}Top of the world!{{/announce}}\nMade it,Ma!\n{{?announce}}\nTop of the world!🎋\n{{/announce}}\n```\n\nOutput:\n\n```\nMade it,Ma!\nMade it,Ma!\n```\n\n#### Non-False Values and Not a collection\nIf the value of the section is not `null`, `false`, and is not a collection, all document elements in the section will be **rendered once**, similar to the condition of the if statement is `true`.\n\nDatamodel:\n```json\n{\n  \"person\": { \"name\": \"Sayi\" }\n}\n```\n\nTemplate:\n\n```\n{{?person}}\n  Hi {{name}}!\n{{/person}}\n```\n\nOutput:\n\n```\n  Hi Sayi!\n```\n\n#### Non-Empty collection\nIf the value of the section is a non-empty collection, the document elements in the section will be **looped once or N times**, depending on the size of the collection, similar to the foreach syntax.\n\nDatamodel:\n```json\n{\n  \"songs\": [\n    { \"name\": \"Memories\" },\n    { \"name\": \"Sugar\" },\n    { \"name\": \"Last Dance\" }\n  ]\n}\n```\n\nTemplate:\n\n```\n{{?songs}}\n{{name}}\n{{/songs}}\n```\n\nOutput:\n\n```\nMemories\nSugar\nLast Dance\n```\n\nIn the loop, a special tag `{{=#this}}` can be used to directly refer to the object of the current iteration.\n\nDatamodel:\n```json\n{\n  \"produces\": [\n    \"application/json\",\n    \"application/xml\"\n  ]\n}\n```\n\nTemplate:\n\n```\n{{?produces}}\n{{=#this}}\n{{/produces}}\n```\n\nOutput:\n\n```\napplication/json\napplication/xml\n```\n\n### Nesting\nNesting is the merging of another Word template in a Word template, which can be understood as import, include or word document merging, marked with `+`, such as `{{+nested}}`.\n\nCode:\n\n```java\nclass AddrModel {\n  String addr;\n  public AddrModel(String addr) {\n    this.addr = addr;\n  }\n}\n\nList<AddrModel> subData = new ArrayList<>();\nsubData.add(new AddrModel(\"Hangzhou,China\"));\nsubData.add(new AddrModel(\"Shanghai,China\"));\nput(\"nested\", Includes.ofLocal(\"sub.docx\").setRenderModel(subData).create());\n```\n\nTwo Word Template:\n\nmain.docx:\n\n```\nHello, World\n{{+nested}}\n```\n\nsub.docx:\n\n```\nAddress: {{addr}}\n```\n\nOutput:\n\n```\nHello, World\nAddress: Hangzhou,China\nAddress: Shanghai,China\n```\n\n## Documentation and examples\n\n[中文文档](http://deepoove.com/poi-tl)\n\n* [Basic Example](http://deepoove.com/poi-tl/#_%E8%BD%AF%E4%BB%B6%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3)\n* [Table Example](http://deepoove.com/poi-tl/#example-table)\n* [Sections and chart Example](http://deepoove.com/poi-tl/#example-animal)\n* [Textbox Example](http://deepoove.com/poi-tl/#example-certificate)\n* [Comment Example](http://deepoove.com/poi-tl/#plugin-comment)\n* [Example: Write Resume](http://deepoove.com/poi-tl/#example-resume)\n* [Example: Highlighting Code](http://deepoove.com/poi-tl/#plugin-highlight)\n* [Example: Convert Markdown to word](http://deepoove.com/poi-tl/#plugin-markdown)\n* [Example: Convert Swagger to word](http://deepoove.com/poi-tl/#example-swagger)\n\nFor more examples and the source code of all examples, see JUnit testcases.\n\n![](http://deepoove.com/poi-tl/demo.png)\n![](http://deepoove.com/poi-tl/demo_result.png)\n\n## Contributing\nYou can join this project in many ways, not limited to the following ways:\n* Feedback problems encountered in use\n* Share the joy of success\n* Update and improve documentation\n* Solve and discuss issues\n\n## FAQ\nSee [FAQ](http://deepoove.com/poi-tl/#_%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98).\n"
        },
        {
          "name": "poi-ooxml-schemas-extra",
          "type": "tree",
          "content": null
        },
        {
          "name": "poi-tl-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "poi-tl-jsonmodel-support",
          "type": "tree",
          "content": null
        },
        {
          "name": "poi-tl-plugin-highlight",
          "type": "tree",
          "content": null
        },
        {
          "name": "poi-tl-plugin-markdown",
          "type": "tree",
          "content": null
        },
        {
          "name": "poi-tl",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}