{
  "metadata": {
    "timestamp": 1736708614431,
    "page": 933,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "modelmapper/modelmapper",
      "stars": 2307,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1220703125,
          "content": "*~\r\ntarget/\r\ndocs/\r\ntest-output/\r\nrelease.properties\r\n.project\r\n.classpath\r\n.settings/\r\n_site/\r\nuser-manual/\r\n*.iml\r\n.idea/\r\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 12.3251953125,
          "content": "# 3.2.0\n\n* Bump asm and byte-buddy for JDK 21 support\n\n# 3.1.0\n\n* Migrates optional converters from modelmapper-module-java8\n\n# 3.0.0\n\n* Minimum JDK 8\n* Makes the option collectionsMergeEnabled disable by default\n\n# 2.4.5\n\n### New Features\n\n* Bump asm for JDK 18 support\n* Bump byte-buddy\n\n# 2.4.4\n\n### Bug Fixes\n\n* Fix anonymous enum conversion\n\n\n# 2.4.3\n\n### Bug Fixes\n\n* Fixed #606 - Fix random ClassCastException on java 11\n* Fixed #613 - Fix java internal api usage issue on java 16\n\n# 2.4.2\n\n### Bug Fixes\n\n* Fixed #608 - addMappings failed while adding multiple mappings\n\n# 2.4.1\n\n### Bug Fixes\n\n* Bump dependency for better support on Java 12 and Java 16\n* Fix anonymous enum conversion\n* Fixed #512 - Create intermediate object depends on if match source found\n* Fixed #573 - Keep parent source chain to have correct source in context\n* Fixed #547 - Fixed generic type info for Map's value type\n* Fixed #563 - Resolve more specific instead of generic one in value reader\n\n# 2.4.0\n\n### New Features\n\n* New API `when(condition).skip(src, dest)`\n* New configuration `preferNestedProperties` for better support circular reference mapping\n\n### Bug Fixes\n\n* Fixed #414 - Eliminates warnings while defining explicit mapping on collections\n* Fixed #462 - Improves performance when creating explicit mapping on a giant model\n* Fixed #392 - Fixes handling protobuf iterable\n* Fixed #581 - Fix wrong circular reference\n* Fixed #550 - Resolve key value types correctly\n\n# 2.3.9\n\n### New Features\n\n* Upgrade ASM for Java 15\n\n### Bug Fixes\n\n* Fixed #553 - the result of post converter was dropped\n\n# 2.3.8\n\n### New Features\n\n* Update typetools to 0.6.2\n\n### Bug Fixes\n\n* #482: NullPointerException on openJDK 11\n\n# 2.3.7\n\n### Bug Fixes\n\n* Fixed issues #520 and #528, which caused excessive locking in PropertyInfoRegistry.\n\n# 2.3.6\n\n### New Features\n\n* Supports Java 13\n\n# 2.3.5\n\n### New Features\n\n* Supports expression chain (when -> with -> using -> map)\n\n### Bug Fixes\n\n* Fixes deproxy when implicit mapping is disabled\n* Improves on configuration converter store\n\n# 2.3.4\n\n### New Features\n\n* Supports protocol buffer with model in snake case\n\n# 2.3.3\n\n### New Features\n\n* Provides setCollectionsMergeEnabled configuration\n\n### Bug Fixes\n\n* Date converter supports java.util.Date\n* Supports HibernateProxy\n\n# 2.3.2\n\n* #416: asm7.0 support\n\n# 2.3.1\n\n### Bug Fixes\n\n* #411: Fix NoSuchElementException when iterating through Collection interface using iterator\n* #407: OSGi issue\n\n# 2.3.0\n\n### New Features\n\n* Support Java 11\n\n### Bug Fixes\n\n* Fixed #389: Provides helper function for collection mapping\n* Fixed #397: SortedMap support\n\n# 2.2.0\n\n### New Features\n\n* Provides ModelMapper.addConverter(sourceType, destinationType, converter)\n* Provides Converters.Collection.map() to create converter for collection\n* Provides builder pattern support\n\n### Bug Fixes\n\n* Fixed #379: Mapping generic types not working\n* Fixed #151: Converter not working properly\n* Fixed #386: Mapping Source object to Destination object for iterable correctly\n\n# 2.1.1\n\n### New Features\n\n* Protocol buffer module\n\n### Bug Fixes\n\n* Fixed #363: Fixes OSGi loading issue\n* Fixed #364: Resolves type correctly\n* Fixed #370: Fixes MapValueReader get wrong field type\n* Fixed #372: Explicit property mapping will be failed when using source(propertyPath) with List type\n\n# 2.1.0\n\n### New Features\n\n* Provided Jackson module\n* Provided TypeMap::addImplicitMappings and ModelMapper::emptyTypeMap\n* Provided deepCopy configuration\n* Lambda api improvement: mapping from source\n* Inherit TypeMap from source's property\n\n### Bug Fixes\n\n* Fixed #360: only assign the destination value if it was created by provider\n\n# 2.0.0\n\n### New Features\n\n* ModelMapper with modules\n* Minimum JDK support to 1.6\n\n### Bug Fixes\n\n* Fixed #322 - Java 10\n* Fixed #331 - Convert nested objects\n\n# 1.1.3\n\n### Bug Fixes\n\n*  Fixed #296 - Updates dependency for Java 9 issue\n\n# 1.1.2\n\n### Bug Fixes\n\n* Fixed #284 - OSGi Import-Package list is wrong\n* Fixed #287 - NullPointerException when mapping final class by using lambda mapping\n\n# 1.1.1\n\n### Bug Fixes\n\n* Fixed #260 - handling well on explicit mapping, like EnumSet\n* Fixed #267 - propertyCondition won't be used by skip\n\n# 1.1.0\n\n### New Features\n\n* Added a new configuration option: skipNull\n* Added example for Type Map inheritance\n* Includes example as a module of ModelMapper\n* Includes typetools as dependency for lambda expression type resolver\n\n### Bug Fixes\n\n* Fixed #194 - Returns null when read inexist value using ValueReader\n* Fixed #249 - Fixed NullPointerException when getting destination property\n\n# 1.0.0\n\n### New Features\n\n* Add support ExpressionMap for lambda friendly API\n* Add support TypeMap inheritance\n* Added `ModelMapper.typeMap` for shortcut to create or get TypeMap\n\n### Bug Fixes\n\n* Fixed #168 - TypeMap won't cache wrong mapping result when using ValueReader\n* Fixed #171 - Destination properties won't be erased when not mapping.\n* Fixed #219 - Reduced the jar size\n* Fixed #220 - Resolved ASM type correctly\n\n# 0.7.8\n\n### Bug Fixes\n\n* Fixed #197 - Fix conditional skip bug\n* Fixed #200 - Improve converter selection from ConverterStore\n* Fixed #204 - Fix handling mutator/accessor had same signature problem\n\n# 0.7.7\n\n### Bug Fixes\n\n* Fixed #153 - Reusable Generic PropertyMap\n* Fixed #185 - Deproxy dynamic proxies\n\n# 0.7.6\n\n### Bug Fixes\n\n* Fixed #176 - Reuse of Converters\n\n# 0.7.4\n\n### Bug Fixes\n\n* Fixed #141 - Add cglib reflect package to shadowed jar\n* Fixed #143 - Prevent StringIndexOutOfBoundsException when matching underscore tokens\n* Fixed #138 - Add support for mapping to SortedSets destinations\n* Fixed #129 - Add support for converting empty strings to primitives and primitive wrappers\n\n# 0.7.3\n\n### Bug Fixes\n\n* Fixed #115 - Fixed mapping of arrays\n* Fixed #119 - Fix the use of Providers with circular/hierarchical references\n* Fixed #120 - Added support for fragile proxies\n* Fixed #126 - Ignore synthetic and bridge methods when resolving methods for explicit mappings\n\n# 0.7.2\n\n### Bug Fixes\n\n* Fixed #113 - Proxies should ignore overriden equals methods\n* Fixed #114 - Use specific classloader for loading PropertyMap classes\n\n# 0.7.1\n\n### New Features\n\n* Add support for mapping destination fields using a Converter\n\n### Bug Fixes\n\n* Fixed #111 - Ignore synthetic members and bridge methods\n\n# 0.7.0\n\n### New Features\n\n* Added #92 - Map properties using field references\n* Added #102 - Skip properties using field references\n\n### Bug Fixes\n\n* Fixed #47 - Handle explicitly provided convertable properties\n* Fixed #79 - Use Objenesis to construct proxies\n* Fixed #101 - Handle circular references for boxed primitives\n* Fixed #104 - Mapping to existing instances of the same type\n* Fixed #106 - Missing null check\n* Fixed #109 - Support for mapping primitive wrappers\n* Fixed #110 - Problem mapping proxied interfaces to POJOs\n\n### API Changes\n\nFor field references:\n\n* Added `PropertyMap.map(Object, Object)`\n* Added `PropertyMap.skip(Object)`\n* Added `PropertyMap.skip(Object, Object)`\n\n# 0.6.5\n4/15/2014\n\n* Fixed #100 - Problem mapping nested collections\n\n# 0.6.4\n3/31/2014\n\n* Fixed #95 - Empower ConditionalConverters to handle null properties in source objects\n* Fixed #96 - Inherited shaded paths preventing customer converters from running\n\n# 0.6.3 \n1/24/2014\n\n* Fixed #80 - ModelMapper extensions use maven backward dependencies\n* Fixed #82 - Ignore enums when traversing Enum types\n* Fixed #85 - Allow non-void setter return types\n* Fixed #91 - Add shaded cglib to Export-Package for better OSGi-support\n\n### API Changes\n\n* For #83 - `MappingContext.create(CS source, CD destination)`\n\n# 0.6.2 \n11/5/2013\n\n### New Features\n\n* Added support for mapping Groovy properties\n* Improved jOOQ support\n\n### Bug Fixes\n\n* Fixed #74 - Null intermediate values possible when instance requested via global provider\n\n# 0.6.0 \n8/2/2013\n\n### New Features\n\n* Added support for named TypeMaps\n* Added support for ValueReaders\n* Added 3rd party integration for Jackson, Gson and jOOQ\n* Added Simpler mapper EDSL for dealing with providers\n* Added #61 - Added UNDERSCORE NameTokenizer\n* Added support for explicit mapping of source path strings\n\n### Bug Fixes\n\n* Fixed #8 - Introduced global property conditions\n* Fixed #39 - Issue when mapping to a String\n* Fixed #49 - Allow implicit mapping to be skipped globally\n* Fixed #54 - Fixed OSGI support\n* Fixed #56 - Allow full type matching to be required\n* Fixed issue with Javabeans name transformers for get/set methods\n* Fixed issue with merged TypeMap Providers not being copied\n\n### API Changes\n\nFor named TypeMaps:\n\n* Added `ModelMapper.createTypeMap(Class, Class, String)`\n* Added `ModelMapper.createTypeMap(Class, Class, String, Configuration)`\n* Added `ModelMapper.createTypeMap(Object, Class, String)`\n* Added `ModelMapper.createTypeMap(Object, Class, String, Configuration)`\n* Added `ModelMapper.map(Object, Class, String)`\n* Added `ModelMapper.map(Object, Object, String)`\n* Added `ModelMapper.map(Object, Type, String)`\n\nFor Value Readers:\n\n* Added `ValueReader` interface to the SPI\n* Added `Configuration.getValueReaders()`\n* Added `Configuration.addValueReader(ValueReader)`\n\nFor mapping source path Strings:\n\n* Added `PropertyMap.source(String)`\n\nOther changes:\n\n* Added `NameTokenizers.UNDERSCORE`\n* Changed `Configuration.enableFieldMatching(boolean)` to `setFieldMatchingEnabled(boolean)`\n* Changed `Configuration.ignoreAmbiguity(boolean)` to `setAmbiguityIgnored(boolean)`\n\n# 0.5.6 \n3/21/2013\n\n### New Features\n\n* Fixed #46 - Property map difficult to construct types\n* Added #45 - Android compatibility\n* Added #42 - Support for pre and post mapping Converters\n* Added #40 - Enhance TypeTokens support\n\n### Bug Fixes\n\n* Fixed #31 - Multiple source properties hierarchy matching problem\n* Fixed #38 - Map mocked objects\n\n# 0.5.5 \n2/14/2013\n\n### New Features\n\n* Added #34 - Added support for TypeTokens\n* Added #23 - Support for combined token matching\n\n### Bug Fixes\n\n* Fixed #32 - Mapping creates instances for null objects\n* Fixed #37 - Mappings being incorrectly created\n\n### API Changes\n\nFor TypeTokens:\n\n* Added `TypeToken` class\n* Added `ModelMapper.map(Object, Type)`\n\n\n# 0.5.4 \n12/22/2012\n\n* Fixed #18 - Updated manifest.mf to contain OSGI bundle information for shaded packages\n* Fixed #26 - MM attempts to instantiate primitive wrapper when used in destination Converter\n* Fixed #27 - Destinations values are not set in MappingContext\n* Fixed #30 - Cannot proxy types without a default constructor\n\n# 0.5.3 \n10/22/2012\n\n* Fixed #22 - Destination properties being cached by mutator\n* Fixed #21 - Added support for XMLGregorianCalendar conversion\n* Fixed issue when merging from a TypeMap with a Converter\n\n# 0.5.2 \n10/18/2012\n\n* Fixed #19 - Merged mappings should respect MatchingStrategy\n* Fixed #20 - Enum conversion should support String->Enum\n\n# 0.5.1 \n9/26/2012\n\n* Fixed scenario where a circular mapping can overrides an existing mapping\n* Fixed #11 - Improper shading\n* Fixed #10 - Added support for mapped enum conversion\n\n# 0.5.0 \n9/12/2012\n\n* Fixed #2 - Add support for circular references\n* Fixed #9 - Overriding intermediate objects in provided destinations\n* Fixed conversion of char[] to String\n* Fixed GC #20 - Improved hashCode in TypeInfoRegistry\n* Completed GC #21 - Implement strict matching strategy\n* Fixed GC #22 - PropertyMap doesn't work when token matches exist\n\n# 0.4.0 \n7/22/2012\n\n* Added support for TypeMap-wide property conditions, converters and providers\n* Improved generic type resolution\n* Added support for auto-TypeMap merging\n* Fixed #3: Disambiguation enhancements\n* Fixed #4: Added source to ProvisionRequest\n* Fixed #5: Incorrect shading of null parameters\n* Fixed #7: Conversion skipped when source is null\n* Fixed GC #8: Skipped circular properties\n* Fixed GC #10: Incorrect mappings created for multiple source mappings\n\n# 0.3.5 \n8/8/2011\n\n* Fixed GC #9: Compatibility with Java 5\n\n# 0.3.4 \n7/30/2011\n\n* Simplified the ConditionalConverter SPI\n* Fixed GC #4: Exposed conditional converters for mutation via Configuration.getConverters()\n* Fixed GC #5: Copy null values for primitives\n\n# 0.3.3 \n7/26/2011\n\n* Fixed GC #3: Missing repackaged cglib dependencies\n* Fixed GC #2: UnsupportedOperationException when adding ConditionalConverters to configuration\n\n# 0.3.2 \n7/19/2011\n\n* Rolled back class file target version to 1.5\n\n# 0.3.1 \n6/27/2011\n\n* Added better handling of inherited generic component types\n* Added support for shaded properties when using a converter, a skipped mapping or a null source constant\n\n# 0.3.0 \n6/20/2011\n\n* Initial public release"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.951171875,
          "content": "### Reporting Bugs\n\nBug reports are welcome and appreciated. When filing an issue, please include a small code snippet that demonstrates the bug if you can, else include a good description of how to reproduce the bug.\n\n### Contributing Bug Fixes\n\nPull requests for bug fixes on existing features are always welcome.\n\n### Contributing Features\n\nIf you have an idea for a new feature, the best place to start is not with a pull request but rather  by opening an issue describing how the feature or API change should work and why you think it is necessary. The reason we suggest starting with an issue rather than a pull request is that we like to make sure every feature and API change is widely useful and a good fit for the library, and would hate to reject a PR that someone puts a lot of time into if it's not a good fit.\n\nIf your feature idea sounds good, you'll be welcome to submit a PR at that time, else the maintainer(s) will schedule the feature for implementation."
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 9.9345703125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.52734375,
          "content": "# ModelMapper \n[![CI](https://github.com/modelmapper/modelmapper/actions/workflows/ci.yml/badge.svg)](https://github.com/modelmapper/modelmapper/actions/workflows/ci.yml) \n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.modelmapper/modelmapper/badge.svg)](https://maven-badges.herokuapp.com/maven-central/org.modelmapper/modelmapper)\n[![License](http://img.shields.io/:license-apache-brightgreen.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)\n\nModelMapper is an intelligent object mapping library that automatically maps objects to each other. It uses a convention based approach while providing a simple refactoring safe API for handling specific use cases.\n\nVisit [modelmapper.org](http://modelmapper.org) to learn more.\n\n## Modules\n\nIn v2.0, ModelMapper provides modules for 3rd library integration you can easily register by ```modelMapper.registerModule(new TheModule())```.\n\n- [Java 8](https://github.com/chhsiao90/modelmapper-module-java8)\n- [Protocol Buffer](https://github.com/modelmapper/modelmapper/tree/master/extensions/protobuf)\n- [Vavr](https://github.com/julianps/modelmapper-module-vavr)\n\n## Related Projects\n\n- [Spring Boot ModelMapper Starter](https://github.com/jmnarloch/modelmapper-spring-boot-starter)\n\n## Contributing\n\nBug reports and feature requests are welcome via the [issue tracker](https://github.com/modelmapper/modelmapper/issues). Fixes and enhancements are also welcome via pull requests. If you're unsure about a contribution idea, feel free to [contact me][me].\n\n[me]: mailto:jhalterman@gmail.com\n"
        },
        {
          "name": "benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "groovy",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 10.8095703125,
          "content": "<?xml version=\"1.0\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>org.sonatype.oss</groupId>\n    <artifactId>oss-parent</artifactId>\n    <version>7</version>\n  </parent>\n\n  <packaging>pom</packaging>\n  <groupId>org.modelmapper</groupId>\n  <artifactId>modelmapper-parent</artifactId>\n  <version>3.2.3-SNAPSHOT</version>\n  <name>ModelMapper Parent</name>\n  <description>Simple, Intelligent, Object Mapping</description>\n  <url>http://modelmapper.org</url>\n  <inceptionYear>2011</inceptionYear>\n\n  <properties>\n    <maven.compiler.target>1.8</maven.compiler.target>\n    <maven.compiler.source>1.8</maven.compiler.source>\n    <cglib.version>3.3.0</cglib.version>\n    <asm.version>9.7.1</asm.version>\n    <objenesis.version>3.2</objenesis.version>\n    <typetools.version>0.6.3</typetools.version>\n    <bytebuddy.version>1.15.10</bytebuddy.version>\n    <javassist.version>3.12.1.GA</javassist.version>\n    <h2.version>2.2.220</h2.version>\n    <hibernate.version>5.6.3.Final</hibernate.version>\n    <slf4j.version>1.5.8</slf4j.version>\n    <testng.version>7.5</testng.version>\n    <mockito.version>4.2.0</mockito.version>\n    <dozer.version>5.5.1</dozer.version>\n    <orika.version>1.5.4</orika.version>\n    <dagger.version>1.0.1</dagger.version>\n    <gson.version>2.8.9</gson.version>\n    <guice.version>5.0.1</guice.version>\n    <jackson.version>2.13.1</jackson.version>\n    <jooq.version>3.1.0</jooq.version>\n    <protobuf.version>3.19.3</protobuf.version>\n    <spring.version>5.3.14</spring.version>\n  </properties>\n\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>http://apache.org/licenses/LICENSE-2.0</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <developers>\n    <developer>\n      <name>Jonathan Halterman</name>\n    </developer>\n    <developer>\n      <name>Chun Han Hsiao</name>\n    </developer>\n  </developers>\n\n  <scm>\n    <connection>scm:git:git@github.com:modelmapper/modelmapper.git</connection>\n    <developerConnection>scm:git:git@github.com:modelmapper/modelmapper.git</developerConnection>\n    <url>http://github.com/modelmapper/modelmapper/</url>\n  </scm>\n\n  <issueManagement>\n    <system>GitHub</system>\n    <url>http://github.com/modelmapper/modelmapper/issues</url>\n  </issueManagement>\n\n  <mailingLists>\n    <mailingList>\n      <name>ModelMapper List</name>\n      <archive>http://groups.google.com/group/modelmapper/topics</archive>\n      <subscribe>http://groups.google.com/group/modelmapper/subscribe</subscribe>\n      <unsubscribe>http://groups.google.com/group/modelmapper/subscribe</unsubscribe>\n      <post>http://groups.google.com/group/modelmapper/post</post>\n    </mailingList>\n  </mailingLists>\n\n  <modules>\n    <module>core</module>\n    <module>extensions</module>\n    <module>examples</module>\n    <module>benchmarks</module>\n  </modules>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.ow2.asm</groupId>\n        <artifactId>asm-tree</artifactId>\n        <version>${asm.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.objenesis</groupId>\n        <artifactId>objenesis</artifactId>\n        <version>${objenesis.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>net.jodah</groupId>\n        <artifactId>typetools</artifactId>\n        <version>${typetools.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>net.bytebuddy</groupId>\n        <artifactId>byte-buddy-dep</artifactId>\n        <version>${bytebuddy.version}</version>\n      </dependency>\n\n      <!-- Test Dependencies -->\n      <dependency>\n        <groupId>org.testng</groupId>\n        <artifactId>testng</artifactId>\n        <version>${testng.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>javassist</groupId>\n        <artifactId>javassist</artifactId>\n        <version>${javassist.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.mockito</groupId>\n        <artifactId>mockito-core</artifactId>\n        <version>${mockito.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>com.h2database</groupId>\n        <artifactId>h2</artifactId>\n        <version>${h2.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.hibernate</groupId>\n        <artifactId>hibernate-entitymanager</artifactId>\n        <version>${hibernate.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>cglib</groupId>\n        <artifactId>cglib</artifactId>\n        <version>${cglib.version}</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- Benchmarking dependencies -->\n      <dependency>\n        <groupId>net.sf.dozer</groupId>\n        <artifactId>dozer</artifactId>\n        <version>${dozer.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>ma.glasnost.orika</groupId>\n        <artifactId>orika-core</artifactId>\n        <version>${orika.version}</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- Extension dependencies -->\n      <dependency>\n        <groupId>com.squareup.dagger</groupId>\n        <artifactId>dagger</artifactId>\n        <version>${dagger.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.code.gson</groupId>\n        <artifactId>gson</artifactId>\n        <version>${gson.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.inject</groupId>\n        <artifactId>guice</artifactId>\n        <version>${guice.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.fasterxml.jackson.core</groupId>\n        <artifactId>jackson-core</artifactId>\n        <version>${jackson.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.fasterxml.jackson.core</groupId>\n        <artifactId>jackson-databind</artifactId>\n        <version>${jackson.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.jooq</groupId>\n        <artifactId>jooq</artifactId>\n        <version>${jooq.version}</version>\n        <scope>provided</scope>\n      </dependency>\n      <dependency>\n        <groupId>com.google.protobuf</groupId>\n        <artifactId>protobuf-java</artifactId>\n        <version>${protobuf.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-beans</artifactId>\n        <version>${spring.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <dependency>\n      <groupId>org.testng</groupId>\n      <artifactId>testng</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>3.8.1</version>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-release-plugin</artifactId>\n        <version>2.1</version><!--$NO-MVN-MAN-VER$ -->\n        <configuration>\n          <releaseProfiles>release</releaseProfiles>\n          <arguments>-Prelease</arguments>\n          <allowTimestampedSnapshots>true</allowTimestampedSnapshots>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-javadoc-plugin</artifactId>\n        <version>2.8.1</version>\n        <configuration>\n          <author>false</author>\n          <excludePackageNames>*.internal</excludePackageNames>\n          <additionalparam>\n            -Xdoclint:none\n            -notimestamp\n            -link http://docs.oracle.com/javase/8/docs/api/\n          </additionalparam>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n\n  <profiles>\n    <profile>\n      <id>release</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-javadoc-plugin</artifactId>\n            <version>2.8.1</version>\n            <executions>\n              <execution>\n                <id>attach-javadocs</id>\n                <goals>\n                  <goal>jar</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-source-plugin</artifactId>\n            <version>2.1.2</version>\n            <executions>\n              <execution>\n                <id>attach-sources</id>\n                <goals>\n                  <goal>jar-no-fork</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-gpg-plugin</artifactId>\n            <version>1.1</version>\n            <executions>\n              <execution>\n                <id>sign-artifacts</id>\n                <phase>verify</phase>\n                <goals>\n                  <goal>sign</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.sonatype.plugins</groupId>\n            <artifactId>nexus-staging-maven-plugin</artifactId>\n            <version>1.6.7</version>\n            <extensions>true</extensions>\n            <configuration>\n              <serverId>sonatype-nexus-staging</serverId>\n              <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n              <autoReleaseAfterClose>true</autoReleaseAfterClose>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-release-plugin</artifactId>\n            <configuration>\n              <goals>deploy nexus-staging:release</goals>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>groovy</id>\n      <modules>\n        <module>groovy</module>\n      </modules>\n    </profile>\n    <profile>\n      <id>coverage</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.jacoco</groupId>\n            <artifactId>jacoco-maven-plugin</artifactId>\n            <version>0.7.7.201606060606</version>\n            <executions>\n              <execution>\n                <id>jacoco-prepare-agent</id>\n                <goals>\n                  <goal>prepare-agent</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n  </profiles>\n</project>\n"
        }
      ]
    }
  ]
}