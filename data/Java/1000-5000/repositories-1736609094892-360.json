{
  "metadata": {
    "timestamp": 1736609094892,
    "page": 360,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dariuszseweryn/RxAndroidBle",
      "stars": 3461,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".buildscript",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.7509765625,
          "content": "# Handle line endings automatically for files detected as text\n# and leave all files detected as binary untouched.\n* text=auto\n\n# Never modify line endings of our bash scripts\n*.sh -crlf\n\n#\n# The above will handle all files NOT found below\n#\n# These files are text and should be normalized (Convert crlf => lf)\n*.css           text\n*.gradle        text\n*.html          text\n*.java          text\n*.js            text\n*.json          text\n*.kt            text\n*.md            text\n*.properties    text\n*.txt           text\n*.xml           text\n*.yml           text\n\n# These files are binary and should be left untouched\n# (binary is macro for -text -diff)\n*.class         binary\n*.jar           binary\n*.gif           binary\n*.jpg           binary\n*.png           binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1376953125,
          "content": ".idea\n.gradle\nlocal.properties\n*.iml\n/build\ndagger-compiler-shadow/build\ndagger-library-shadow/build\nrxandroidble3/src\nmockrxandroidble3/src\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.4794921875,
          "content": "language: android\n\nandroid:\n  components:\n    - tools\n    - build-tools-29.0.2\n    - android-29\n    - extra-android-m2repository\n  licenses:\n    - 'android-sdk-license-.+'\n\njdk:\n  - oraclejdk8\n\nafter_success:\n  - .buildscript/deploy_snapshot.sh\n\nnotifications:\n  email: false\n\nbefore_cache:\n  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock\n\ncache:\n  directories:\n  - $HOME/.m2\n  - $HOME/.gradle/caches/\n  - $HOME/.gradle/wrapper/\n\nscript:\n  - ./gradlew checkstyle assembleRelease test"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 22.5224609375,
          "content": "Change Log\n==========\nVersion 1.19.0\n* Added `ScanResult#getAdvertisingSid`, thanks @KrzysztofMamak (https://github.com/dariuszseweryn/RxAndroidBle/pull/856)\n\nVersion 1.18.1\n* Fixed `CharacteristicLongWriteOperation` defaults for API 33 (Android 13) (https://github.com/dariuszseweryn/RxAndroidBle/pull/847)\n\nVersion 1.18.0\n* Added `RxBleConnection#readPhy` and `RxBleConnection#setPreferredPhy`, thanks @JamesDougherty (https://github.com/dariuszseweryn/RxAndroidBle/pull/840)\n\nVersion 1.17.2\n* Fixed log tags generation on builds with Proguard enabled (https://github.com/Polidea/RxAndroidBle/pull/814)\n\nVersion 1.17.1\n* No changes over 1.17.0. Mistake release.\n\nVersion 1.17.0\n* Changed RxBleConnection.GATT_MTU_MAXIMUM to 515 to fix Android 13, thanks @marsounjan! (https://github.com/Polidea/RxAndroidBle/pull/808)\n\nVersion 1.16.0\n* Added `ScanSettingsBuilder#setLegacy` option, thanks @danielstuart14! (https://github.com/Polidea/RxAndroidBle/pull/801)\n\nVersion 1.15.2\n* Fixed `RxBleDevice#toString` crashing when runtime permission BLUETOOTH_CONNECT is not granted on API 31 (Android 12) (https://github.com/Polidea/RxAndroidBle/pull/800)\n* Added granted permissions cache (https://github.com/Polidea/RxAndroidBle/pull/802)\n* Updated `RxBleClient#getBondedDevices` Javadoc for usage on API 31 (Android 12) (https://github.com/Polidea/RxAndroidBle/pull/804)\n\nVersion 1.15.1\n* Fixed duplicate 'META-INF/com.google.dagger_dagger.version' file (regression) (https://github.com/Polidea/RxAndroidBle/pull/794)\n\nVersion 1.15.0\n* No functional changes. First release of RxAndroidBle based on RxJava 3. RxJava 2 version is still supported. (https://github.com/Polidea/RxAndroidBle/pull/793)\n\nVersion 1.14.1\n* Fixed duplicate 'META-INF/com.google.dagger_dagger.version' file (https://github.com/Polidea/RxAndroidBle/pull/790)\n\nVersion 1.14.0\n* Added `RxBleClient#getConnectedPeripherals` for retrieving all BLE peripherals connected to the device, thanks @DaBs! (https://github.com/Polidea/RxAndroidBle/pull/765)\n* Updated URL for native GATT statuses in `BleGattException`, thanks @ariccio! (https://github.com/Polidea/RxAndroidBle/pull/779)\n* Added `BleScanResult#isConnectable` for getting info if the scanned peripheral is connectable, thanks @MartinSadovy! (https://github.com/Polidea/RxAndroidBle/pull/781)\n* Added helper functions `RxBleClient#isConnectRuntimePermissionGranted` and `RxBleClient#getRecommendedConnectRuntimePermissions` (https://github.com/Polidea/RxAndroidBle/pull/787)\n\nVersion 1.13.1\n* Fixed 'BLUETOOTH_SCAN' permission entry in Android Manifest for apps that do not build using Android 12 target (https://github.com/Polidea/RxAndroidBle/pull/767)\n\nVersion 1.13.0\n* **Changed behaviour** of `RxBleClient#getRecommendedScanRuntimePermissions` (https://github.com/Polidea/RxAndroidBle/pull/762)\n* Adjusted checks for scanning in regards to API 31 (Android 12) (https://github.com/Polidea/RxAndroidBle/pull/762)\n* Adjusted readme for new BLE permission system introduced with API 31 (https://github.com/Polidea/RxAndroidBle/pull/762)\n\nVersion 1.12.1\n* Added a new location check for API 28+ (https://github.com/Polidea/RxAndroidBle/pull/747)\n* Fixed requirements for location services check (https://github.com/Polidea/RxAndroidBle/pull/748)\n\nVersion 1.12.0\n* Fixed a leak in `ScanOperationApi21`, thanks @seotrader (https://github.com/Polidea/RxAndroidBle/pull/708)\n* Added Service Solicitation UUIDs support, thanks @nrbrook! (https://github.com/Polidea/RxAndroidBle/pull/711)\n* [mockclient] Added builder for `RxBleScanRecordMock`, thanks @nrbrook! (https://github.com/Polidea/RxAndroidBle/pull/703)\n* [mockclient] Changed `RxBleClientMock.DeviceBuilder()` => `RxBleDeviceMock.Builder`. Structural changes to creating devices, thanks @nrbrook! (https://github.com/Polidea/RxAndroidBle/pull/706)\n* [mockclient] Added builder functions to provide callbacks for characteristic/descriptor writes/reads, thanks @nrbrook! (https://github.com/Polidea/RxAndroidBle/pull/707)\n* [mockclient] Added constructor for `RxScanRecordMock`, thanks @nrbrook! (https://github.com/Polidea/RxAndroidBle/pull/712)\n* [mockclient] Fixed behaviour of `RxBleClientMock.observeStateChanges()` (https://github.com/Polidea/RxAndroidBle/pull/744)\n\nVersion 1.11.1\n* Fixed `NullPointerException` when logging failed `BluetoothGattCharacteristic` initial reads (https://github.com/Polidea/RxAndroidBle/pull/679)\n* [mockclient] Added support for `BluetoothDevice` in `RxBleDeviceMock` (https://github.com/Polidea/RxAndroidBle/pull/676)\n\nVersion 1.11.0\n* Added workaround for scans with settings match found and/or lost but no filters (https://github.com/Polidea/RxAndroidBle/pull/612)\n* Fixed typo in `BleCharacteristicNotFoundException` (https://github.com/Polidea/RxAndroidBle/pull/625)\n* Added scan permission helper functions (https://github.com/Polidea/RxAndroidBle/pull/642)\n\nVersion 1.10.5\n* Fixed possibly incorrect order of notifications and operation completions (https://github.com/Polidea/RxAndroidBle/pull/639)\n* Fixed possibility of library being stalled on operation cancelling (https://github.com/Polidea/RxAndroidBle/pull/650)\n* Fixed a silenced `IllegalStateException` after a scan is stopped because `BluetoothAdapter` being disabled (https://github.com/Polidea/RxAndroidBle/pull/649)   \n\nVersion 1.10.4\n* Fixed location permission check for Android 10 (https://github.com/Polidea/RxAndroidBle/pull/640)\n\nVersion 1.10.3\n* Fixed `RxBleConnection.observeConnectionParametersUpdates()` not working in obfuscated apps. Added consumer `proguard-rules.pro` Proguard config file. (https://github.com/Polidea/RxAndroidBle/pull/634) \n* Fixed log statement on reading RSSI of connection (https://github.com/Polidea/RxAndroidBle/pull/631)\n* Fixed log statement on setting `CONNECTION_PRIORITY_HIGH` (https://github.com/Polidea/RxAndroidBle/pull/623)\n\nVersion 1.10.2\n* Fixed possible `UndeliverableException` when scan subscription is quickly disposed (https://github.com/Polidea/RxAndroidBle/pull/609)\n* Minor allocation decrease in `ScanSetupBuilderImplApi21` (https://github.com/Polidea/RxAndroidBle/pull/613)\n\nVersion 1.10.1\n* Fixed `IllegalStateException` in `RxBleAdapterStateObservable` (https://github.com/Polidea/RxAndroidBle/pull/596)\n\nVersion 1.10.0\n* Added possibility to disable logs of scanned peripherals via `LogOptions.Builder.setShouldLogScannedPeripherals()` (https://github.com/Polidea/RxAndroidBle/pull/579)\n* Added `RxBleConnection.observeConnectionParametersUpdates()` function (https://github.com/Polidea/RxAndroidBle/pull/565)\n* Minor allocation decrease in `LocationServicesOkObservable` (https://github.com/Polidea/RxAndroidBle/pull/574)\n* Fixed leaking `RxBleAdapterStateObservable` (https://github.com/Polidea/RxAndroidBle/pull/575)\n\nVersion 1.9.2\n* Fixed `IllegalArgumentException` in `LocationServicesOkObservableApi23Factory` (https://github.com/Polidea/RxAndroidBle/pull/573)\n\nVersion 1.9.1\n* Fixed `RxBleClient.observeStateChanges()` emissions (https://github.com/Polidea/RxAndroidBle/pull/556)\n* Fixed `RxBleDevice.establishConnection(boolean, Timeout)` Javadoc (https://github.com/Polidea/RxAndroidBle/pull/558)\n\nVersion 1.9.0\n* Added possibility to disable Location Services check before scan (https://github.com/Polidea/RxAndroidBle/pull/533)\n* Reworked library logging API and behaviour (https://github.com/Polidea/RxAndroidBle/pull/551) \n\nVersion 1.8.2\n* Fixed sporadic NullPointerException in DisconnectionRouter (https://github.com/Polidea/RxAndroidBle/pull/553)\n\nVersion 1.8.1\n* Added more GATT status descriptions (https://github.com/Polidea/RxAndroidBle/pull/543)\n\nVersion 1.8.0\n* Added `NotificationSetupMode.QUICK_SETUP` for devices which start notifying right after CCC descriptor write (https://github.com/Polidea/RxAndroidBle/pull/478)\n* Migrated to androidx usage (https://github.com/Polidea/RxAndroidBle/pull/497) \n\nVersion 1.7.2\n* Fixed stalled library (race condition) when trying to connect while BluetoothAdapter is OFF (https://github.com/Polidea/RxAndroidBle/pull/522)\n* Fixed logs in DisconnectionRouter (https://github.com/Polidea/RxAndroidBle/pull/523) \n\nVersion 1.7.1\n* Fixed possible `IllegalArgumentException` while parsing UUIDs from advertisements (https://github.com/Polidea/RxAndroidBle/pull/485)\n* Fixed `NullPointerException` when calling `BackgroundScanner` start / stop scan while `BluetoothAdapter` was not turned ON (https://github.com/Polidea/RxAndroidBle/pull/487)\n\nVersion 1.7.0\n* Introduced a new API that allows for background scanning in modern Android OS versions (https://github.com/Polidea/RxAndroidBle/issues/369)\n* Fixed LocationServicesOkObservable (https://github.com/Polidea/RxAndroidBle/pull/438)\n* Added GATT status code to `BleDisconnectionException` (https://github.com/Polidea/RxAndroidBle/pull/405)\n* Fixed possible concurrent access to `DisconnectionRouter` (https://github.com/Polidea/RxAndroidBle/pull/442)\n* Fixed race condition in `CharacteristicLongWriteOperation` (https://github.com/Polidea/RxAndroidBle/pull/465) \n\nVersion 1.6.0\n* Deprecated ConnectionSharingAdapter (https://github.com/Polidea/RxAndroidBle/pull/397)\n* Fixed unexpected behaviour of LocationServicesOkObservable if unsubscribed immediately after first emission (https://github.com/Polidea/RxAndroidBle/pull/430)\n* Added possibility to modify CustomOperation priority (https://github.com/Polidea/RxAndroidBle/pull/414)\n* Fixed stalled library if a just started operation was already unsubscribed (https://github.com/Polidea/RxAndroidBle/pull/428) \n\nVersion 1.5.0\n* Added possibility to change default operation timeout (https://github.com/Polidea/RxAndroidBle/pull/321)\n* Fixed Dagger2 compatibility (https://github.com/Polidea/RxAndroidBle/pull/342 https://github.com/Polidea/RxAndroidBle/pull/348)\n* Fixed DisconnectionRouter leaking subscription to RxBleAdapterStateObservable (https://github.com/Polidea/RxAndroidBle/pull/353)\n* Improved Location Services status check (https://github.com/Polidea/RxAndroidBle/issues/327)\n* Added logger that prints out GATT server structure on a successful discovery. The log is generated when the logger is in a VERBOSE level (https://github.com/Polidea/RxAndroidBle/pull/355)\n* Enhanced operation logger so it displays how long the operation performed. (https://github.com/Polidea/RxAndroidBle/pull/356)\n* Added retry strategies for long write operations (https://github.com/Polidea/RxAndroidBle/pull/357)\n* Introduced API in RxJava2\n* Removed deprecated establishConnection method\n* Removed deprecated writeCharacteristic method\n* Introduced BleDescriptorNotFoundException\n\nVersion 1.5.0 (RxJava1)\n* Added possibility to change default operation timeout (https://github.com/Polidea/RxAndroidBle/pull/321)\n* Fixed Dagger2 compatibility (https://github.com/Polidea/RxAndroidBle/pull/342 https://github.com/Polidea/RxAndroidBle/pull/348)\n* Fixed DisconnectionRouter leaking subscription to RxBleAdapterStateObservable (https://github.com/Polidea/RxAndroidBle/pull/353)\n* Improved Location Services status check (https://github.com/Polidea/RxAndroidBle/issues/327)\n* Added logger that prints out GATT server structure on a successful discovery. The log is generated when the logger is in a VERBOSE level (https://github.com/Polidea/RxAndroidBle/pull/355)\n* Enhanced operation logger so it displays how long the operation performed. (https://github.com/Polidea/RxAndroidBle/pull/356)\n* Added retry strategies for long write operations (https://github.com/Polidea/RxAndroidBle/pull/357)\n\nVersion 1.4.3 (RxJava1)\n* Log informing that the underlying semaphore in a QueueSemaphore has been interrupted will be printed only when the situation was unexpected.(https://github.com/Polidea/RxAndroidBle/issues/317)\n* Fixed possible race condition when calling `.doOnSubscribe()` and `.doOnUnsubscribe()` which lead to calling `ConnectionOperationQueueImpl.onConnectionUnsubscribed()` before the `.onConnectionSubscribed()` has returned. (https://github.com/Polidea/RxAndroidBle/issues/308)\n* Updated RxJava dependency (https://github.com/Polidea/RxAndroidBle/issues/312)\n* Updated to Gradle 3.0.0/Android Studio 3.0 (https://github.com/Polidea/RxAndroidBle/issues/302)\n* Nicer exception messages (https://github.com/Polidea/RxAndroidBle/issues/303)\n\nVersion 1.4.2 (RxJava1)\n* Fixed MTU value not being updated when changed by the peripheral (https://github.com/Polidea/RxAndroidBle/issues/293)\n* Added info logs regarding start/stop of scans (https://github.com/Polidea/RxAndroidBle/pull/295) \n* Fixed routing of the actual disconnection error to all queued operations (https://github.com/Polidea/RxAndroidBle/issues/297)\n\nVersion 1.4.1 (RxJava1)\n* Fixed issue hasObservers conditional for Output class (https://github.com/Polidea/RxAndroidBle/issues/283)\n\nVersion 1.4.0 (RxJava1)\n* Added native callback usage support in custom operations. You may consider this API if your implementation is performance critical. (https://github.com/Polidea/RxAndroidBle/issues/165)\n* Added pre-scan verification for excessive scan (undocumented Android 7.0 \"feature\") (https://github.com/Polidea/RxAndroidBle/issues/227)\n* Adjusted `BleCannotSetCharacteristicNotificationException` to contain the cause exception if available. `RxBleConnection.setupNotification()`/`RxBleConnection.setupIndication()` will now throw the cause of disconnection if subscribed after connection was disconnected. (https://github.com/Polidea/RxAndroidBle/issues/225) \n* _Changed Behaviour_ of `RxBleDevice.observeConnectionStateChanges()` - does not emit initial state and reflects best `BluetoothGatt` state. (https://github.com/Polidea/RxAndroidBle/issues/50)\n* Added support for a custom Logger `RxBleLog.setLogger(Logger)` as alternative to Logcat (https://github.com/Polidea/RxAndroidBle/pull/248)\n* Added a warning log if user tries to use a characteristic against it's properties (https://github.com/Polidea/RxAndroidBle/issues/224)\n* _Changed Behaviour_ — `BluetoothGatt` is now called on a single background thread instead of the main thread (https://github.com/Polidea/RxAndroidBle/pull/255)\n* Decoupled command queues for different connections. (https://github.com/Polidea/RxAndroidBle/issues/250)\n\nVersion 1.3.4 (RxJava1)\n* Added @Nullable annotation to `RxBleDevice.getName()`. (https://github.com/Polidea/RxAndroidBle/issues/263)\n* Fixed connection not being disconnected when `DeadObjectException` was raised. (https://github.com/Polidea/RxAndroidBle/issues/275)\n\nVersion 1.3.3 (RxJava1)\n* Fixed scan filtering by name on API <21 (https://github.com/Polidea/RxAndroidBle/pull/243)\n* Fixed race condition (which would cause the library to hang) when using `.first()` on calls to `RxBleConnection` that emit a single result. (https://github.com/Polidea/RxAndroidBle/issues/244) \n\nVersion 1.3.2 (RxJava1)\n* Fixed completing the `Observable<byte[]>` emitted by `RxBleConnection.setupNotification()`/`RxBleConnection.setupIndication()` when unsubscribed (https://github.com/Polidea/RxAndroidBle/issues/231)\n\nVersion 1.3.1 (RxJava1)\n* Fixed unsubscribing from operations before `onComplete()`/`onError()` causing the library to hang. (https://github.com/Polidea/RxAndroidBle/issues/218)\n\nVersion 1.3.0 (RxJava1)\n* _Changed Behaviour_ of `RxBleConnection` - connection is no longer closed on individual operation errors. (https://github.com/Polidea/RxAndroidBle/issues/26) \n* Added partial support for API 21 BLE scan in a backwards compatible manner. (https://github.com/Polidea/RxAndroidBle/issues/16)\n* Added support for filtering by Manufacturer Data (https://github.com/Polidea/RxAndroidBle/issues/127)\n* Added RxBleClient State observing for determining what functionality of the library may work (https://github.com/Polidea/RxAndroidBle/issues/55)\n* Added `ValueInterpreter` for interpreting standardized (Bluetooth Specification) int/float/String values from byte[] (https://github.com/Polidea/RxAndroidBle/issues/199)\n* Added support for requesting connection priority on API 21+ (https://github.com/Polidea/RxAndroidBle/issues/111)\n\nVersion 1.2.4 (RxJava1)\n* Lowered memory pressure caused by `RxBleLog` when logs are disabled (https://github.com/Polidea/RxAndroidBle/issues/212)\n\nVersion 1.2.3 (RxJava1)\n* Fixed scan when filter with 32-bit UUID was specified (https://github.com/Polidea/RxAndroidBle/issues/207)\n* Fixed memory leak of scan operation (and potentially any other that would emit an infinite stream of events) (https://github.com/Polidea/RxAndroidBle/issues/194)\n* Lowered memory pressure when using functions that accept `UUID`.\n* Changed `RxBleConnectionState` from a class to an enum for convenience.\n* Minor optimisations to `RxBleRadio` queue processing time.\n* Updated `RxJava` to 1.3.0\n\nVersion 1.2.2 (RxJava1)\n* Fixed visibility of `UUIDUtil`. Deprecated it. Introduced `AdvertisedServiceUUIDExtractor` helper, thanks @marciogranzotto! (https://github.com/Polidea/RxAndroidBle/pull/184)\n\nVersion 1.2.1 (RxJava1)\n* Added `ByteArrayBatchObservable` helper for splitting long byte arrays\n* Fixed behaviour in non-Bluetooth environments. (https://github.com/Polidea/RxAndroidBle/issues/158)\n* Fixed `RxBleConnectionMock` overwriting `BluetoothCharacteristic` value on setting notification. (https://github.com/Polidea/RxAndroidBle/issues/160)\n* Fixed default payload size of Long Write operation when non-standard MTU was negotiated (https://github.com/Polidea/RxAndroidBle/issues/161)\n* Added possibility to get the current MTU value of `RxBleConnection` (https://github.com/Polidea/RxAndroidBle/issues/166)\n* Fixed retrying of `RxBleClient.scanBleDevices(UUID...)`, thanks @BharathMG! (https://github.com/Polidea/RxAndroidBle/pull/174)\n* Fixed connection not being noticed as established due to a race condition (https://github.com/Polidea/RxAndroidBle/issues/178)\n* Fixed `BleBluetoothGattCallbackTimeout` macAddress being null on connection (https://github.com/Polidea/RxAndroidBle/issues/178)\n* Fixed disconnect operation behaviour in an edge case situation (https://github.com/Polidea/RxAndroidBle/issues/178)\n\nVersion 1.2.0 (RxJava1)\n* Added Proguard rules for the library. (https://github.com/Polidea/RxAndroidBle/issues/104)\n* Added support for MTU negotiation, thanks @pregno!\n* Fixed connecting with autoConnect = true on Android 7.0.0+, thanks @JIUgia!\n* Fixed notifications for characteristics with the same UUID\n* Adjusted scan location services check for various scenarios (https://github.com/Polidea/RxAndroidBle/issues/106)\n* Fixed occasional out-of-order emissions from notifications (https://github.com/Polidea/RxAndroidBle/issues/75)\n* Fixed stalled operations by adding timeouts (https://github.com/Polidea/RxAndroidBle/issues/118)\n* Added `LocationServicesOkObservable` helper for observing if scan can be successfully started\n* Added Jack compatibility (https://github.com/Polidea/RxAndroidBle/issues/123)\n* Added compatibility mode for notifications on characteristic that do not contain a Client Characteristic Config descriptor\n* Fixed logic of UUID filtering during scan\n* Added long write support (https://github.com/Polidea/RxAndroidBle/issues/68)\n* Fixed issue with a stalled library when write operations were too quick (https://github.com/Polidea/RxAndroidBle/issues/135)\n* Optimised logging\n* Added support for custom `BluetoothGatt` operations (https://github.com/Polidea/RxAndroidBle/issues/137)\n* Updated `RxJava` to 1.2.9\n* Added support for scanning on Android Wear\n* Internal refactoring introducing Dagger2 support\n\nVersion 1.1.0 (RxJava1)\n* Fixed issue that sometimes happened where `RxBleRadioOperationConnect` was not yet subscribed while running. (https://github.com/Polidea/RxAndroidBle/issues/94)\n* Fixed issue with descriptor writing using parent characteristic write type. (https://github.com/Polidea/RxAndroidBle/issues/93)\n* Added `BleScanException.toString()` for a more descriptive stacktrace.\n* Added a workaround for a bug while discovering services. (https://github.com/Polidea/RxAndroidBle/issues/86)\n* Added a timeout for discovering services. (https://github.com/Polidea/RxAndroidBle/issues/86)\n* Fixed calling `BluetoothGatt.disconnect()` on a correct thread. (https://github.com/Polidea/RxAndroidBle/issues/84)\n* Fixed library stuck if disconnection happened during operation execution. (https://github.com/Polidea/RxAndroidBle/issues/81)\n* Removed reflection call to `BluetoothGatt.connect()` on Android 7.0.0+. (https://github.com/Polidea/RxAndroidBle/issues/83)\n* Removed android.support.v4 dependency.\n* Added cancelling of connection establishing process. \n* Reduced method count.\n* Fixed `RejectedExecutionException` when processing `BluetoothGattCallback`. (https://github.com/Polidea/RxAndroidBle/issues/25) (https://github.com/Polidea/RxAndroidBle/issues/75)\n\nVersion 1.0.2 (RxJava1)\n\n* Added Mock RxAndroidBle to the repository\n* Added indications handling on RxBleConnection\n* Fixed scan operation concurrency issue (https://github.com/Polidea/RxAndroidBle/issues/17)\n* Exposed android.bluetooth.BluetoothDevice in RxBleDevice (https://github.com/Polidea/RxAndroidBle/issues/23)\n* Fixed stale RxBleRadio on RxBleOperation unhandled throw (https://github.com/Polidea/RxAndroidBle/issues/18)\n* Fixed possible BluetoothCharacteristic value overwrites with multiple writes (https://github.com/Polidea/RxAndroidBle/issues/27)\n* Updated `RxJava` (1.1.0 -> 1.1.7) and `RxAndroid` (1.1.0 -> 1.2.1) libraries dependency\n* Added interface methods for usage with BluetoothCharacteristic object (https://github.com/Polidea/RxAndroidBle/issues/38)\n* Fixed lost connection when BluetoothAdapter disabled before the connection established (https://github.com/Polidea/RxAndroidBle/issues/45)\n* Added RxBleClient.getBondedDevices() method, thanks @fracturedpsyche! (https://github.com/Polidea/RxAndroidBle/pull/46)\n\nVersion 1.0.1 (RxJava1)\n\n* Fixed scan operation concurrency issue, thanks @artem-zinnatullin! (https://github.com/Polidea/RxAndroidBle/issues/5)\n* Fixed location permission requirement check (Android >=6.0)\n\nVersion 1.0.0 (RxJava1)\n\n* Changed RxBleClient factory method name.\n* After this version the public API will be maintained to avoid conflicts.\n\nVersion 0.0.4 (RxJava1)\n\n* Removed duplicated API for connection state from RxBleConnection\n* Renamed API for connection state observation in RxBleDevice\n* Renamed API for notification setup, not it is RxBleConnection#setupNotification(UUID)\n* Added convenience method to check current connection state\n* Added ability to filter scan results with one service more easily\n* Reject establishConnection calls if connection is already established\n* Added adapter for sharing connections\n\nVersion 0.0.3 (RxJava1)\n\n* Added location permission for APIs >=23\n* Check if location permission is granted and location services are enabled on Android 6.0\n* Fixed error callback notifying about disconnects\n\nVersion 0.0.2 (RxJava1)\n\n* Bugfixes\n* Changed API for instantiation of the client\n* Added caches in sensitive places\n\nVersion 0.0.1 (RxJava1)\n\nInitial release\n* Support for main bluetooth operations (discovery, connection, read, write, notifications)\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.115234375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2016 Polidea Sp. z o.o\n   Copyright 2021 Dariusz Seweryn\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.4375,
          "content": "# RxAndroidBle ![Build Status](https://github.com/dariuszseweryn/rxandroidble/actions/workflows/gradle-actions.yml/badge.svg?branch=master) [![Maven Central](https://img.shields.io/maven-central/v/com.polidea.rxandroidble2/rxandroidble.svg)](http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22com.polidea.rxandroidble2%22%20AND%20a%3A%22rxandroidble%22)\n<p align=\"center\">\n  <img \n    alt=\"Tailored software services including concept, design, development and testing\"\n    src=\"site/RX-Android.png\"\n    height=\"300\"\n    style=\"margin-top: 20px; margin-bottom: 20px;\"\n  />\n</p>\n\n## Introduction\n\nRxAndroidBle is a powerful painkiller for Android's Bluetooth Low Energy headaches. It is backed by RxJava, implementing complicated APIs as handy reactive observables. The library does for you:\n\n * Fancy asynchronous operations support (read, write, notifications)\n * Threading management in order to meet Android contracts\n * Connection and operation error handling\n\nFor support head to [StackOverflow #rxandroidble](http://stackoverflow.com/questions/tagged/rxandroidble?sort=active)\n\n## RxAndroidBLE @ Mobile Central Europe 2016\n[![RxAndroidBLE @ Mobile Central Europe 2016](https://img.youtube.com/vi/0aKfUGCxUDM/0.jpg)](https://www.youtube.com/watch?v=0aKfUGCxUDM)\n\n## Getting Started\n\nThe first step is to include RxAndroidBle into your project.\n\n### Gradle\nIf you use Gradle to build your project — as a Gradle project implementation dependency:\n```groovy\nimplementation \"com.polidea.rxandroidble3:rxandroidble:1.19.0\"\n```\nor for RxJava 2 based artifact\n```groovy\nimplementation \"com.polidea.rxandroidble2:rxandroidble:1.19.0\"\n```\n### Maven\nIf you use Maven to build your project — as a Maven project dependency:\n```xml\n<dependency>\n  <groupId>com.polidea.rxandroidble3</groupId>\n  <artifactId>rxandroidble</artifactId>\n  <version>1.19.0</version>\n  <type>aar</type>\n</dependency>\n```\nor for RxJava 2 based artifact\n```xml\n<dependency>\n  <groupId>com.polidea.rxandroidble2</groupId>\n  <artifactId>rxandroidble</artifactId>\n  <version>1.19.0</version>\n  <type>aar</type>\n</dependency>\n```\n\n### Snapshot\nIf your are interested in cutting-edge build you can get a `x.y.z-SNAPSHOT` version of the library.\nNOTE: Snapshots are built from the top of the `master` and `develop` branches and a subject to more frequent changes that may break the API and/or change behavior.\n\nTo be able to download it you need to add Sonatype Snapshot repository site to your `build.gradle` file:\n```groovy\nmaven { url \"https://oss.sonatype.org/content/repositories/snapshots\" }\n```\n\n### Permissions\nAndroid requires additional permissions declared in the manifest for an app to run a BLE scan since API 23 (6.0 / Marshmallow) and perform a BLE connection since API 31 (Android 12). RxAndroidBle provides a minimal set of commonly used bluetooth permissions for you in its `AndroidManifest.xml`. These permissions currently assume scanning is only used when the App is in the foreground, and that the App wants to derive the user's location from BLE signal (on API >= 23). Below are a number of additions you can make to your `AndroidManifext.xml` for your specific use case.\n\n#### If you want to derive the user's location in your App\nRxAndroidBle uses the `uses-permission-sdk-23` tag to require location only on APIs >= 23, where it is required for BLE scanning. Additionally, in a future version of RxAndroidBle, these permissions will be restricted to only APIs 23-30. To ensure you can derive the user's location in your App with all API versions, and avoid any issues with merging of permissions when uploading to the Play Store, add the following to your `AndroidManifest.xml`:\n```xml\n<uses-permission-sdk-23 android:name=\"android.permission.ACCESS_FINE_LOCATION\" tools:node=\"remove\" />\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" />\n<uses-permission-sdk-23 android:name=\"android.permission.ACCESS_COARSE_LOCATION\" tools:node=\"remove\" />\n<uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" />\n```\n\n#### If you do not want to derive user's location in your App\nIf you only want to scan for BLE peripherals and do not access location otherwise you can request only the required permissions by adding the following to your `AndroidManifest.xml`:\n```xml\n<uses-permission-sdk-23 android:name=\"android.permission.ACCESS_COARSE_LOCATION\" android:maxSdkVersion=\"30\" tools:node=\"replace\" />\n<uses-permission-sdk-23 android:name=\"android.permission.ACCESS_FINE_LOCATION\" android:maxSdkVersion=\"30\" tools:node=\"replace\" />\n```\n\n#### If you want to scan in the background and support APIs 29 & 30\nYou should add the following to your `AndroidManifest.xml`:\n```xml\n<uses-permission android:name=\"android.permission.ACCESS_BACKGROUND_LOCATION\" android:maxSdkVersion=\"30\" />\n```\nIf you want to access the user's location in the background on APIs > 30, remove the `android:maxSdkVersion` attribute.\n\n#### If you want to derive the user's location from BLE scanning in API >= 31\n\nAPI 31 (Android 12) introduced new Bluetooth permissions. RxAndroidBle uses the `android:usesPermissionFlags=\"neverForLocation\"` attribute on the `BLUETOOTH_SCAN` permission, which indicates scanning will not be used to derive the user's location, so location permissions are not required. If you need to locate the user with BLE scanning, use this instead, but keep in mind that you will still need `ACCESS_FINE_LOCATION`:\n```xml\n<uses-permission android:name=\"android.permission.BLUETOOTH_SCAN\" tools:node=\"replace\" />\n```\n\n#### If you do not need to connect to peripherals\nYou can remove the `BLUETOOTH_CONNECT` permission that RxAndroidBle requests in APIs >= 31:\n```xml\n<uses-permission android:name=\"android.permission.BLUETOOTH_CONNECT\" tools:node=\"remove\" />\n```\n\n#### Summary of available permissions\n##### Scanning\nA summary of available runtime permissions used for BLE scanning:\n\n| from API | to API (inclusive) | Acceptable runtime permissions |\n|:---:|:---:| --- |\n| 18 | 22 | (No runtime permissions needed) |\n| 23 | 28 | One of below:<br>- `android.permission.ACCESS_COARSE_LOCATION`<br>- `android.permission.ACCESS_FINE_LOCATION` |\n| 29 | 30 | - `android.permission.ACCESS_FINE_LOCATION`<br>- `android.permission.ACCESS_BACKGROUND_LOCATION`\\* |\n| 31 | current | - `android.permission.BLUETOOTH_SCAN`<br>- `android.permission.ACCESS_FINE_LOCATION`\\*\\* |\n\n\\* Needed if [scan is performed in background](https://developer.android.com/about/versions/10/privacy/changes#app-access-device-location)\n\n\\*\\* Only needed if you want to obtain user's location with BLE scanning (`BLUETOOTH_SCAN` is not using `neverForLocation` attribute in your App)\n\n##### Connecting\nA summary of available runtime permissions used for BLE connections:\n| from API | to API (inclusive) | Acceptable runtime permissions |\n|:---:|:---:| --- |\n| 18 | 30 | (No runtime permissions needed) |\n| 31 | current | - `android.permission.BLUETOOTH_CONNECT` |\n\n## Usage\n### Obtaining the client\nIt's your job to maintain single instance of the client. You can use singleton, scoped [Dagger](http://google.github.io/dagger/) component or whatever else you want.\n\n```java\nRxBleClient rxBleClient = RxBleClient.create(context);\n```\n\n### Turning the bluetooth on / off\nThe library does _not_ handle managing the state of the BluetoothAdapter.\n<br>Direct managing of the state is not recommended as it violates the application user's right to manage the state of their phone. See `Javadoc` of [BluetoothAdapter.enable()](https://developer.android.com/reference/android/bluetooth/BluetoothAdapter.html#enable()) method.\n<br>It is the user's responsibility to inform why the application needs Bluetooth to be turned on and for ask the application's user consent.\n<br>It is possible to show a native activity for turning the Bluetooth on by calling:\n```java\nIntent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);\nint REQUEST_ENABLE_BT = 1;\ncontext.startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);\n```\n\n### Device discovery\nScanning devices in the area is simple as that:\n\n```java\nDisposable scanSubscription = rxBleClient.scanBleDevices(\n        new ScanSettings.Builder()\n            // .setScanMode(ScanSettings.SCAN_MODE_LOW_LATENCY) // change if needed\n            // .setCallbackType(ScanSettings.CALLBACK_TYPE_ALL_MATCHES) // change if needed\n            .build()\n        // add filters if needed\n)\n    .subscribe(\n        scanResult -> {\n            // Process scan result here.\n        },\n        throwable -> {\n            // Handle an error here.\n        }\n    );\n\n// When done, just dispose.\nscanSubscription.dispose();\n```\nFor devices with API <21 (before Lollipop) the scan API is emulated to get the same behaviour.\n\n### Observing client state\nOn Android it is not always trivial to determine if a particular BLE operation has a potential to succeed. e.g. to scan on Android 6.0 the device needs to have a `BluetoothAdapter`, the application needs to have a granted [runtime permission](https://github.com/dariuszseweryn/RxAndroidBle#permissions) for either `ACCESS_COARSE_LOCATION` or `ACCESS_FINE_LOCATION`, additionally `Location Services` need to be turned on.\nTo be sure that the scan will work only when everything is ready you could use:\n\n```java\nDisposable flowDisposable = rxBleClient.observeStateChanges()\n    .switchMap(state -> { // switchMap makes sure that if the state will change the rxBleClient.scanBleDevices() will dispose and thus end the scan\n        switch (state) {\n\n            case READY:\n                // everything should work\n                return rxBleClient.scanBleDevices();\n            case BLUETOOTH_NOT_AVAILABLE:\n                // basically no functionality will work here\n            case LOCATION_PERMISSION_NOT_GRANTED:\n                // scanning and connecting will not work\n            case BLUETOOTH_NOT_ENABLED:\n                // scanning and connecting will not work\n            case LOCATION_SERVICES_NOT_ENABLED:\n                // scanning will not work\n            default:\n                return Observable.empty();\n        }\n    })\n    .subscribe(\n    \trxBleScanResult -> {\n    \t    // Process scan result here.\n    \t},\n    \tthrowable -> {\n    \t    // Handle an error here.\n    \t}\n    );\n\n// When done, just dispose.\nflowDisposable.dispose();\n```\n\n### Connection\nFor further BLE interactions the connection is required.\n\n```java\nString macAddress = \"AA:BB:CC:DD:EE:FF\";\nRxBleDevice device = rxBleClient.getBleDevice(macAddress);\n\nDisposable disposable = device.establishConnection(false) // <-- autoConnect flag\n    .subscribe(\n        rxBleConnection -> {\n            // All GATT operations are done through the rxBleConnection.\n        },\n        throwable -> {\n            // Handle an error here.\n        }\n    );\n\n// When done... dispose and forget about connection teardown :)\ndisposable.dispose();\n```\n\n#### Auto connect\nFrom <a href=\"https://developer.android.com/reference/android/bluetooth/BluetoothDevice.html#connectGatt(android.content.Context, boolean, android.bluetooth.BluetoothGattCallback)\">BluetoothDevice.connectGatt() Javadoc</a>:\n> autoConnect\tboolean: Whether to directly connect to the remote device (false) or to automatically connect as soon as the remote device becomes available (true).\n\nAuto connect concept may be misleading at first glance. With the autoconnect flag set to false the connection will end up with an error if a BLE device is not advertising when the `RxBleDevice#establishConnection` method is called. From platform to platform timeout after which the error is emitted differs, but in general it is rather tens of seconds than single seconds (~30 s).\n\nSetting the auto connect flag to true allows you to wait until the BLE device becomes discoverable. The `RxBleConnection` instance won't be emitted until the connection is fully set up. From experience it also handles acquiring wake locks, so it's safe to assume that your Android device will be woken up after the connection has been established - but it is not a documented feature and may change in the future system releases. Unlike the native Android API, if `autoConnect=true` while using this library there will be NO attempts to automatically reconnect if the original connection is lost.\n\nBe careful not to overuse the autoConnect flag. On the other side it has negative impact on the connection initialization speed. Scanning window and interval is lowered as it is optimized for background use and depending on Bluetooth parameters it may (and usually do) take more time to establish the connection.\n\n### Read / write operations\n#### Read\n```java\ndevice.establishConnection(false)\n    .flatMapSingle(rxBleConnection -> rxBleConnection.readCharacteristic(characteristicUUID))\n    .subscribe(\n        characteristicValue -> {\n            // Read characteristic value.\n        },\n        throwable -> {\n            // Handle an error here.\n        }\n    );\n```\n#### Write\n```java\ndevice.establishConnection(false)\n    .flatMapSingle(rxBleConnection -> rxBleConnection.writeCharacteristic(characteristicUUID, bytesToWrite))\n    .subscribe(\n        characteristicValue -> {\n            // Characteristic value confirmed.\n        },\n        throwable -> {\n            // Handle an error here.\n        }\n    );\n```\n#### Multiple reads\n```java\ndevice.establishConnection(false)\n    .flatMap(rxBleConnection -> Single.zip(\n        rxBleConnection.readCharacteristic(firstUUID),\n        rxBleConnection.readCharacteristic(secondUUID),\n        YourModelCombiningTwoValues::new\n    ))\n    .subscribe(\n        model -> {\n            // Process your model.\n        },\n        throwable -> {\n            // Handle an error here.\n        }\n    );\n```\n#### Long write\n```java\ndevice.establishConnection(false)\n    .flatMap(rxBleConnection -> rxBleConnection.createNewLongWriteBuilder()\n        .setCharacteristicUuid(uuid) // required or the .setCharacteristic()\n        // .setCharacteristic() alternative if you have a specific BluetoothGattCharacteristic\n        .setBytes(byteArray)\n        // .setWriteOperationRetryStrategy(retryStrategy) // if you'd like to retry batch write operations on failure, provide your own retry strategy\n        // .setMaxBatchSize(maxBatchSize) // optional -> default 20 or current MTU\n        // .setWriteOperationAckStrategy(ackStrategy) // optional to postpone writing next batch\n        .build()\n    )\n    .subscribe(\n        byteArray -> {\n            // Written data.\n        },\n        throwable -> {\n            // Handle an error here.\n        }\n    );\n```\n#### Read and write combined\n\n```java\ndevice.establishConnection(false)\n    .flatMapSingle(rxBleConnection -> rxBleConnection.readCharacteristic(characteristicUuid)\n        .doOnSuccess(bytes -> {\n            // Process read data.\n        })\n        .flatMap(bytes -> rxBleConnection.writeCharacteristic(characteristicUuid, bytesToWrite))\n    )\n    .subscribe(\n        writeBytes -> {\n            // Written data.\n        },\n        throwable -> {\n            // Handle an error here.\n        }\n    );\n```\n### Change notifications\n```java\ndevice.establishConnection(false)\n    .flatMap(rxBleConnection -> rxBleConnection.setupNotification(characteristicUuid))\n    .doOnNext(notificationObservable -> {\n        // Notification has been set up\n    })\n    .flatMap(notificationObservable -> notificationObservable) // <-- Notification has been set up, now observe value changes.\n    .subscribe(\n        bytes -> {\n            // Given characteristic has been changes, here is the value.\n        },\n        throwable -> {\n            // Handle an error here.\n        }\n    );\n```\n### Observing connection state\nIf you want to observe changes in device connection state just subscribe like below. On subscription you will receive the most current state instantly.\n\n```java\ndevice.observeConnectionStateChanges()\n    .subscribe(\n        connectionState -> {\n            // Process your way.\n        },\n        throwable -> {\n            // Handle an error here.\n        }\n    );\n```\n### Logging\nFor connection debugging you can use extended logging\n\n```java\nRxBleClient.setLogLevel(RxBleLog.DEBUG);\n```\n\nBy default `RxBleLog` uses logcat to print the messages. You can provide your own logger implementation to forward it to other logging libraries such as Timber.\n```java\nRxBleLog.setLogger((level, tag, msg) -> Timber.tag(tag).log(level, msg));\n```\n\n### Error handling\nEvery error you may encounter is provided via `onError` callback. Each public method has JavaDoc explaining possible errors.\n\n### Observable behaviour\nFrom different interfaces, you can obtain different `Observable`s which exhibit different behaviours.\nThere are two types of `Observable`s that you may encounter.\n1. Multiple values - i.e. `RxBleClient.scan()`, `RxBleDevice.observeConnectionStateChanges()` and `Observable` emitted by `RxBleConnection.setupNotification()` / `RxBleConnection.setupIndication()`\n2. One value — these usually are meant for auto cleanup upon disposing i.e. `setupNotification()` / `setupIndication()` — when you will dispose the notification / indication will be disabled\n\n`RxBleDevice.establishConnection()` is an `Observable` that will emit a single `RxBleConnection` but will not complete as the connection may be later a subject to an error (i.e. external disconnection). Whenever you are no longer interested in keeping the connection open you should dispose it which will cause disconnection and cleanup of resources.\n\nThe below table contains an overview of used `Observable` patterns\n\n| Interface | Function | Number of values | [Hot/Cold](https://medium.com/@benlesh/hot-vs-cold-observables-f8094ed53339)\n| --- | --- | --- | --- |\n| RxBleClient | scanBleDevices()* | Infinite | cold |\n| RxBleClient | observeStateChanges() | Infinite** | hot |\n| RxBleDevice | observeConnectionStateChanges() | Infinite | hot |\n| RxBleDevice | establishConnection()* | One | cold |\n| RxBleConnection | setupNotification()* | One | cold |\n| RxBleConnection | setupNotification() emitted Observable | Infinite** | hot |\n| RxBleConnection | setupIndication()* | One | cold |\n| RxBleConnection | setupIndication() emitted Observable | Infinite** | hot |\n| RxBleConnection | queue() | User defined | cold |\n\n\\* this `Observable` when disposed closes/cleans up internal resources (i.e. finishes scan, closes a connection, disables notifications)<br>\n\\** this `Observable` may complete. For example `observeStateChanges()` does emit only a single value and finishes in exactly one situation — when Bluetooth Adapter is not available on the device. There is no reason to monitor other states as the adapter does not appear during runtime. A second example: Observables emitted from `setupNotification` / `setupIndication` may complete when the parent Observable is disposed.\n\n### Helpers\nWe encourage you to check the package [`com.polidea.rxandroidble2.helpers`](https://github.com/dariuszseweryn/RxAndroidBle/tree/master/rxandroidble/src/main/java/com/polidea/rxandroidble2/helpers) and [`com.polidea.rxandroidble2.utils`](https://github.com/dariuszseweryn/RxAndroidBle/tree/master/rxandroidble/src/main/java/com/polidea/rxandroidble2/utils) which contain handy reactive wrappers for some typical use-cases.\n\n#### Value interpretation\nBluetooth Specification specifies formats in which `int`/`float`/`String` values may be stored in characteristics. `BluetoothGattCharacteristic` has functions for retrieving those (`.getIntValue()`/`.getFloatValue()`/`.getStringValue()`).\nSince `RxAndroidBle` reads and notifications emit `byte[]` you may want to use `ValueIntepreter` helper to retrieve the same data easily.\n\n#### Observing BluetoothAdapter state\nIf you would like to observe `BluetoothAdapter` state changes you can use `RxBleAdapterStateObservable`.\n\n## More examples\n\nUsage examples are located in:\n- [`/sample`](https://github.com/dariuszseweryn/RxAndroidBle/tree/master/sample/src/main/java/com/polidea/rxandroidble2/sample)\n- [`/sample-kotlin`](https://github.com/dariuszseweryn/RxAndroidBle/tree/master/sample-kotlin/src/main/kotlin/com/polidea/rxandroidble2/samplekotlin)\n\nKeep in mind that these are only _samples_ to show how the library can be used. These are not meant for being role model of a good application architecture.\n\n## Testing\nUsing RxAndroidBle enables you to test your application easily.\n\n### Unit tests\nMost of the objects that the library uses are implementations of interfaces which can be mocked.\n\nAlternatively one could use `MockRxAndroidBle` (more info below). Note: Using `MockRxAndroidBle` in unit tests needs [Robolectric](https://github.com/robolectric/robolectric).\n\n### Integration tests\nSometimes there is a need to develop the application without the access to a physical device. We have created [MockRxAndroidBle](https://github.com/dariuszseweryn/RxAndroidBle/tree/master/mockrxandroidble) as a drop-in addon for mocking a simple peripheral.\n\nUnfortunately it is not under active development—PRs are welcomed though. ;)\n\n## [Small performance comparison](https://github.com/dariuszseweryn/RxAndroidBle/issues/41#issuecomment-333513707)\n\n## Contributing\nIf you would like to contribute code you can do so through GitHub by forking the repository and sending a pull request.\n\nWhen submitting code, please make every effort to follow existing conventions and style in order to keep the code as readable as possible. Please also make sure your code compiles by running ```./gradlew clean checkstyle test```.\n\n## FAQ\nIf you encounter seemingly incorrect behaviour in your application that is regarding this library please check the below list of Frequently Asked Questions:\n- [Cannot connect / Status 133](https://github.com/dariuszseweryn/RxAndroidBle/wiki/FAQ:-Cannot-connect)\n- [UndeliverableException](https://github.com/dariuszseweryn/RxAndroidBle/wiki/FAQ:-UndeliverableException)\n\n## Support\n* non-commercial — head to [StackOverflow #rxandroidble](https://stackoverflow.com/questions/tagged/rxandroidble)\n* commercial — contact the maintainer\n\n## Discussions\nWant to talk about it? Join our discussion on [Gitter](https://gitter.im/RxBLELibraries/RxAndroidBle)\n\n## Maintainers\n* Dariusz Seweryn (github: dariuszseweryn)\n\n## [Contributors](https://github.com/dariuszseweryn/RxAndroidBle/graphs/contributors), thank you!\n\n## License\n\n    Copyright 2016 Polidea Sp. z o.o\n    Copyright 2021 Dariusz Seweryn \n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.0283203125,
          "content": "theme: jekyll-theme-architect"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 2.216796875,
          "content": "apply from: 'dependencies.gradle'\napply from: 'checkstyle.gradle'\n\nbuildscript {\n    apply from: 'dependencies.gradle'\n\n    repositories {\n        gradlePluginPortal()\n        google()\n        mavenCentral()\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:7.2.0'\n        classpath 'com.github.ben-manes:gradle-versions-plugin:0.21.0'\n        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.19.0'\n        classpath 'gradle.plugin.org.codehaus.groovy:groovy-android-gradle-plugin:3.0.0'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion\"\n        classpath 'gradle.plugin.org.jetbrains.gradle.plugin.idea-ext:gradle-idea-ext:1.1.4'\n    }\n}\n\nallprojects {\n    apply plugin: 'com.github.ben-manes.versions'\n    \n    repositories {\n        mavenLocal()\n        google()\n        mavenCentral()\n        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }\n        maven { url 'https://jitpack.io' }\n    }\n\n    buildscript {\n        repositories {\n            gradlePluginPortal()\n            google()\n            mavenCentral()\n        }\n    }\n\n    configurations {\n        doclava\n    }\n\n    dependencies {\n        doclava 'com.google.doclava:doclava:1.0.6'\n    }\n\n    dependencyUpdates.resolutionStrategy {\n        componentSelection { rules ->\n            rules.all { ComponentSelection selection ->\n                boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview'].any { qualifier ->\n                    selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\\d-]*/\n                }\n                if (rejected) {\n                    selection.reject('Release candidate')\n                }\n            }\n        }\n    }\n\n    gradle.projectsEvaluated {\n        tasks.withType(JavaCompile) {\n            options.compilerArgs << \"-Xlint:unchecked\" << \"-Xlint:deprecation\"\n        }\n\n        tasks.withType(Test) {\n            useJUnitPlatform()\n            testLogging {\n                exceptionFormat \"full\"\n                events \"started\", \"skipped\", \"passed\", \"failed\"\n                showStandardStreams true\n            }\n        }\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\napply from: rootProject.file('gradle/shadow-consumer-fix.gradle')\n"
        },
        {
          "name": "checkstyle.gradle",
          "type": "blob",
          "size": 0.392578125,
          "content": "subprojects { project ->\n    group = GROUP\n    version = VERSION_NAME\n\n    apply plugin: 'checkstyle'\n\n    checkstyle {\n        toolVersion = '8.20'\n    }\n\n    task checkstyle(type: Checkstyle) {\n        configFile rootProject.file('checkstyle.xml')\n        source 'src/main/java'\n        ignoreFailures false\n        showViolations true\n        include '**/*.java'\n\n        classpath = files()\n    }\n}"
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 5.2783203125,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n    \"-//Puppy Crawl//DTD Check Configuration 1.2//EN\"\n    \"http://www.puppycrawl.com/dtds/configuration_1_2.dtd\">\n\n<module name=\"Checker\">\n    <!--module name=\"NewlineAtEndOfFile\"/-->\n    <module name=\"FileLength\"/>\n    <module name=\"FileTabCharacter\"/>\n\n    <!-- Trailing spaces -->\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"\\s+$\"/>\n        <property name=\"message\" value=\"Line has trailing spaces.\"/>\n    </module>\n\n    <!-- Space after 'for' and 'if' -->\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"^\\s*(for|if)[^ ]\"/>\n        <property name=\"message\" value=\"Space needed before opening parenthesis.\"/>\n    </module>\n\n    <!-- For each spacing -->\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"^\\s*for \\(.*?([^ ]:|:[^ ])\"/>\n        <property name=\"message\" value=\"Space needed around ':' character.\"/>\n    </module>\n\n    <module name=\"TreeWalker\">\n        <!--<property name=\"cacheFile\" value=\"${checkstyle.cache.file}\"/>-->\n\n        <!-- Checks for Javadoc comments.                     -->\n        <!-- See http://checkstyle.sf.net/config_javadoc.html -->\n        <!--module name=\"JavadocMethod\"/-->\n        <!--module name=\"JavadocType\"/-->\n        <!--module name=\"JavadocVariable\"/-->\n        <!--module name=\"JavadocStyle\"/-->\n\n\n        <!-- Checks for Naming Conventions.                  -->\n        <!-- See http://checkstyle.sf.net/config_naming.html -->\n        <module name=\"ConstantName\"/>\n        <module name=\"LocalFinalVariableName\"/>\n        <module name=\"LocalVariableName\"/>\n        <module name=\"MemberName\"/>\n        <module name=\"MethodName\">\n            <property name=\"format\" value=\"^[a-z][a-zA-Z0-9_]*$\"/>\n        </module>\n        <module name=\"PackageName\"/>\n        <module name=\"ParameterName\"/>\n        <module name=\"StaticVariableName\"/>\n        <module name=\"TypeName\">\n            <property name=\"format\" value=\"^[A-Z][a-zA-Z0-9_]*$\"/>\n        </module>\n\n        <!-- Checks for imports                              -->\n        <!-- See http://checkstyle.sf.net/config_import.html -->\n        <module name=\"AvoidStarImport\"/>\n        <module name=\"IllegalImport\"/>\n        <module name=\"RedundantImport\"/>\n        <module name=\"UnusedImports\">\n            <property name=\"processJavadoc\" value=\"true\"/>\n        </module>\n\n\n        <!-- Checks for Size Violations.                    -->\n        <!-- See http://checkstyle.sf.net/config_sizes.html -->\n        <module name=\"LineLength\">\n            <property name=\"max\" value=\"140\"/>\n            <property name=\"ignorePattern\" value=\"^ *\\* *[^ ]+$\"/>\n        </module>\n        <!--<module name=\"MethodLength\"/>-->\n        <!--<module name=\"ParameterNumber\"/>-->\n\n\n        <!-- Checks for whitespace                               -->\n        <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n        <module name=\"GenericWhitespace\"/>\n        <module name=\"EmptyForIteratorPad\"/>\n        <module name=\"MethodParamPad\"/>\n        <module name=\"NoWhitespaceAfter\"/>\n        <module name=\"NoWhitespaceBefore\"/>\n        <module name=\"OperatorWrap\"/>\n        <module name=\"ParenPad\"/>\n        <module name=\"TypecastParenPad\"/>\n        <module name=\"WhitespaceAfter\"/>\n        <module name=\"WhitespaceAround\"/>\n\n\n        <!-- Modifier Checks                                    -->\n        <!-- See http://checkstyle.sf.net/config_modifiers.html -->\n        <!--module name=\"ModifierOrder\"/-->\n        <module name=\"RedundantModifier\"/>\n\n\n        <!-- Checks for blocks. You know, those {}'s         -->\n        <!-- See http://checkstyle.sf.net/config_blocks.html -->\n        <module name=\"AvoidNestedBlocks\"/>\n        <module name=\"EmptyBlock\"/>\n        <module name=\"LeftCurly\"/>\n        <module name=\"NeedBraces\">\n            <property name=\"tokens\" value=\"LITERAL_DO, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE\"/>\n        </module>\n        <module name=\"RightCurly\"/>\n\n\n        <!-- Checks for common coding problems               -->\n        <!-- See http://checkstyle.sf.net/config_coding.html -->\n        <!--<module name=\"AvoidInlineConditionals\"/>-->\n        <module name=\"CovariantEquals\"/>\n        <!--<module name=\"DoubleCheckedLocking\"/>-->\n        <module name=\"EmptyStatement\"/>\n        <module name=\"EqualsAvoidNull\"/>\n        <module name=\"EqualsHashCode\"/>\n        <!--<module name=\"HiddenField\"/>-->\n        <module name=\"IllegalInstantiation\"/>\n        <module name=\"InnerAssignment\"/>\n        <!--<module name=\"MagicNumber\"/>-->\n        <module name=\"MissingSwitchDefault\"/>\n        <module name=\"SimplifyBooleanExpression\"/>\n        <module name=\"SimplifyBooleanReturn\"/>\n\n        <!-- Checks for class design                         -->\n        <!-- See http://checkstyle.sf.net/config_design.html -->\n        <!--module name=\"DesignForExtension\"/-->\n        <!--module name=\"FinalClass\"/-->\n        <module name=\"HideUtilityClassConstructor\"/>\n        <module name=\"InterfaceIsType\"/>\n        <!--<module name=\"VisibilityModifier\"/>-->\n\n\n        <!-- Miscellaneous other checks.                   -->\n        <!-- See http://checkstyle.sf.net/config_misc.html -->\n        <module name=\"ArrayTypeStyle\"/>\n        <!--module name=\"FinalParameters\"/-->\n        <!--<module name=\"TodoComment\"/>-->\n        <module name=\"UpperEll\"/>\n    </module>\n</module>\n"
        },
        {
          "name": "dagger-compiler-shadow",
          "type": "tree",
          "content": null
        },
        {
          "name": "dagger-library-shadow",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependencies.gradle",
          "type": "blob",
          "size": 1.8671875,
          "content": "ext {\n    kotlinVersion = '1.6.21'\n    rxJava2Version = '2.2.17'\n    rxJava3Version = '3.1.4'\n    sourceCompatibilityVersion = JavaVersion.VERSION_1_8\n    targetCompatibilityVersion = JavaVersion.VERSION_1_8\n    shadowPluginVersion = '7.1.2'\n    daggerVersion = '2.42'\n    junitVersion = '5.10.2'\n    libs = [\n            /* Library-only dependencies */\n            rxjava2               : \"io.reactivex.rxjava2:rxjava:$rxJava2Version\",\n            rxjava3               : \"io.reactivex.rxjava3:rxjava:$rxJava3Version\",\n            rxandroid             : 'io.reactivex.rxjava2:rxandroid:2.1.1',\n            rxrelay2              : 'com.jakewharton.rxrelay2:rxrelay:2.1.1',\n            rxrelay3              : 'com.jakewharton.rxrelay3:rxrelay:3.0.1',\n            junit                 : [\"org.junit.jupiter:junit-jupiter:$junitVersion\", \"org.mockito:mockito-junit-jupiter:5.11.0\"],\n            junit_platform        : \"org.junit:junit-bom:$junitVersion\",\n            junit_runtime         : 'org.junit.platform:junit-platform-launcher',\n            groovy                : ['org.codehaus.groovy:groovy:3.0.9', 'org.codehaus.groovy:groovy-test:3.0.9'],\n            spock                 : 'org.spockframework:spock-core:2.0-groovy-3.0',\n            dagger                : \"com.google.dagger:dagger:$daggerVersion\",\n            dagger_compiler       : \"com.google.dagger:dagger-compiler:$daggerVersion\",\n            /* Shared library-sample apps dependencies */\n            annotations           : \"androidx.annotation:annotation:1.1.0\",\n            /* Sample apps-only dependencies */\n            rxjava_replayingshare : 'com.jakewharton.rx2:replaying-share:2.2.0',\n            rxjava_binding        : 'com.jakewharton.rxbinding3:rxbinding:3.1.0',\n            appcompat             : 'androidx.appcompat:appcompat:1.1.0',\n            material_design       : 'com.google.android.material:material:1.0.0'\n    ]\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.9228515625,
          "content": "GROUP=com.polidea.rxandroidble2\nVERSION_NAME=1.19.0\n\nPOM_DESCRIPTION=RxJava backed support for Bluetooth Low Energy in Android\n\nPOM_URL=https://github.com/dariuszseweryn/RxAndroidBle\nPOM_SCM_URL=https://github.com/dariuszseweryn/RxAndroidBle\nPOM_SCM_CONNECTION=scm:git:git://github.com/dariuszseweryn/RxAndroidBle.git\nPOM_SCM_DEV_CONNECTION=scm:git:ssh://git@github.com/dariuszseweryn/RxAndroidBle.git\n\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\n\nPOM_DEVELOPER_ID=dariuszseweryn\nPOM_DEVELOPER_NAME=Dariusz Seweryn\n\nandroid.useAndroidX=true\nandroid.enableJetifier=false\nandroid.disableAutomaticComponentCreation=true\n\norg.gradle.jvmargs=-Xmx4g \\\n\t--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED \\\n\t--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED \\\n\t--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED\n\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.77734375,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8720703125,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      http://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "mockrxandroidble",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockrxandroidble3",
          "type": "tree",
          "content": null
        },
        {
          "name": "rxandroidble",
          "type": "tree",
          "content": null
        },
        {
          "name": "rxandroidble3",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample-kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.2109375,
          "content": "include ':rxandroidble', ':dagger-compiler-shadow', ':dagger-library-shadow'\ninclude ':sample', ':sample-kotlin', ':mockrxandroidble', ':rxandroidble3', ':mockrxandroidble3'\n\nrootProject.name = 'rxandroidble-parent'\n"
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}