{
  "metadata": {
    "timestamp": 1736609079319,
    "page": 339,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JFormDesigner/FlatLaf",
      "stars": 3537,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 9.9970703125,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = latin1\nindent_style = tab\nindent_size = 4\n\n[*.java]\nindent_style = tab\nij_continuation_indent_size = 4\nij_java_align_consecutive_assignments = false\nij_java_align_consecutive_variable_declarations = false\nij_java_align_group_field_declarations = false\nij_java_align_multiline_annotation_parameters = false\nij_java_align_multiline_array_initializer_expression = false\nij_java_align_multiline_assignment = false\nij_java_align_multiline_binary_operation = false\nij_java_align_multiline_chained_methods = false\nij_java_align_multiline_extends_list = false\nij_java_align_multiline_for = true\nij_java_align_multiline_method_parentheses = false\nij_java_align_multiline_parameters = false\nij_java_align_multiline_parameters_in_calls = false\nij_java_align_multiline_parenthesized_expression = false\nij_java_align_multiline_resources = false\nij_java_align_multiline_ternary_operation = false\nij_java_align_multiline_text_blocks = false\nij_java_align_multiline_throws_list = false\nij_java_align_subsequent_simple_methods = false\nij_java_align_throws_keyword = false\nij_java_annotation_parameter_wrap = off\nij_java_array_initializer_new_line_after_left_brace = false\nij_java_array_initializer_right_brace_on_new_line = false\nij_java_array_initializer_wrap = normal\nij_java_assert_statement_colon_on_next_line = false\nij_java_assert_statement_wrap = off\nij_java_assignment_wrap = off\nij_java_binary_operation_sign_on_next_line = false\nij_java_binary_operation_wrap = off\nij_java_blank_lines_after_anonymous_class_header = 0\nij_java_blank_lines_after_class_header = 0\nij_java_blank_lines_after_imports = 1\nij_java_blank_lines_after_package = 1\nij_java_blank_lines_around_class = 1\nij_java_blank_lines_around_field = 0\nij_java_blank_lines_around_field_in_interface = 0\nij_java_blank_lines_around_initializer = 1\nij_java_blank_lines_around_method = 1\nij_java_blank_lines_around_method_in_interface = 1\nij_java_blank_lines_before_class_end = 0\nij_java_blank_lines_before_imports = 1\nij_java_blank_lines_before_method_body = 0\nij_java_blank_lines_before_package = 0\nij_java_block_brace_style = next_line_if_wrapped\nij_java_block_comment_at_first_column = true\nij_java_call_parameters_new_line_after_left_paren = false\nij_java_call_parameters_right_paren_on_new_line = false\nij_java_call_parameters_wrap = normal\nij_java_case_statement_on_separate_line = true\nij_java_catch_on_new_line = false\nij_java_class_annotation_wrap = split_into_lines\nij_java_class_brace_style = next_line\nij_java_class_count_to_use_import_on_demand = 99\nij_java_class_names_in_javadoc = 1\nij_java_do_not_indent_top_level_class_members = false\nij_java_do_not_wrap_after_single_annotation = false\nij_java_do_while_brace_force = never\nij_java_doc_add_blank_line_after_description = true\nij_java_doc_add_blank_line_after_param_comments = false\nij_java_doc_add_blank_line_after_return = false\nij_java_doc_add_p_tag_on_empty_lines = true\nij_java_doc_align_exception_comments = true\nij_java_doc_align_param_comments = true\nij_java_doc_do_not_wrap_if_one_line = false\nij_java_doc_enable_formatting = true\nij_java_doc_enable_leading_asterisks = true\nij_java_doc_indent_on_continuation = false\nij_java_doc_keep_empty_lines = true\nij_java_doc_keep_empty_parameter_tag = true\nij_java_doc_keep_empty_return_tag = true\nij_java_doc_keep_empty_throws_tag = true\nij_java_doc_keep_invalid_tags = true\nij_java_doc_param_description_on_new_line = false\nij_java_doc_preserve_line_breaks = false\nij_java_doc_use_throws_not_exception_tag = true\nij_java_else_on_new_line = false\nij_java_enum_constants_wrap = off\nij_java_extends_keyword_wrap = split_into_lines\nij_java_extends_list_wrap = normal\nij_java_field_annotation_wrap = split_into_lines\nij_java_finally_on_new_line = false\nij_java_for_brace_force = never\nij_java_for_statement_new_line_after_left_paren = false\nij_java_for_statement_right_paren_on_new_line = false\nij_java_for_statement_wrap = off\nij_java_generate_final_locals = false\nij_java_generate_final_parameters = false\nij_java_if_brace_force = never\nij_java_imports_layout = java.**,javax.**,*,$*\nij_java_indent_case_from_switch = true\nij_java_insert_inner_class_imports = false\nij_java_insert_override_annotation = true\nij_java_keep_blank_lines_before_right_brace = 1\nij_java_keep_blank_lines_between_package_declaration_and_header = 1\nij_java_keep_blank_lines_in_code = 1\nij_java_keep_blank_lines_in_declarations = 1\nij_java_keep_control_statement_in_one_line = false\nij_java_keep_first_column_comment = false\nij_java_keep_indents_on_empty_lines = false\nij_java_keep_line_breaks = false\nij_java_keep_multiple_expressions_in_one_line = false\nij_java_keep_simple_blocks_in_one_line = false\nij_java_keep_simple_classes_in_one_line = false\nij_java_keep_simple_lambdas_in_one_line = false\nij_java_keep_simple_methods_in_one_line = false\nij_java_label_indent_absolute = false\nij_java_label_indent_size = 0\nij_java_lambda_brace_style = end_of_line\nij_java_layout_static_imports_separately = true\nij_java_line_comment_add_space = false\nij_java_line_comment_at_first_column = true\nij_java_method_annotation_wrap = split_into_lines\nij_java_method_brace_style = next_line_if_wrapped\nij_java_method_call_chain_wrap = normal\nij_java_method_parameters_new_line_after_left_paren = false\nij_java_method_parameters_right_paren_on_new_line = false\nij_java_method_parameters_wrap = normal\nij_java_modifier_list_wrap = false\nij_java_names_count_to_use_import_on_demand = 3\nij_java_parameter_annotation_wrap = off\nij_java_parentheses_expression_new_line_after_left_paren = false\nij_java_parentheses_expression_right_paren_on_new_line = false\nij_java_place_assignment_sign_on_next_line = false\nij_java_prefer_longer_names = true\nij_java_prefer_parameters_wrap = false\nij_java_repeat_synchronized = true\nij_java_replace_instanceof_and_cast = false\nij_java_replace_null_check = true\nij_java_replace_sum_lambda_with_method_ref = true\nij_java_resource_list_new_line_after_left_paren = false\nij_java_resource_list_right_paren_on_new_line = false\nij_java_resource_list_wrap = normal\nij_java_space_after_closing_angle_bracket_in_type_argument = false\nij_java_space_after_colon = true\nij_java_space_after_comma = true\nij_java_space_after_comma_in_type_arguments = true\nij_java_space_after_for_semicolon = true\nij_java_space_after_quest = true\nij_java_space_after_type_cast = true\nij_java_space_before_annotation_array_initializer_left_brace = true\nij_java_space_before_annotation_parameter_list = false\nij_java_space_before_array_initializer_left_brace = true\nij_java_space_before_catch_keyword = true\nij_java_space_before_catch_left_brace = true\nij_java_space_before_catch_parentheses = false\nij_java_space_before_class_left_brace = true\nij_java_space_before_colon = true\nij_java_space_before_colon_in_foreach = true\nij_java_space_before_comma = false\nij_java_space_before_do_left_brace = true\nij_java_space_before_else_keyword = true\nij_java_space_before_else_left_brace = true\nij_java_space_before_finally_keyword = true\nij_java_space_before_finally_left_brace = true\nij_java_space_before_for_left_brace = true\nij_java_space_before_for_parentheses = false\nij_java_space_before_for_semicolon = false\nij_java_space_before_if_left_brace = true\nij_java_space_before_if_parentheses = false\nij_java_space_before_method_call_parentheses = false\nij_java_space_before_method_left_brace = true\nij_java_space_before_method_parentheses = false\nij_java_space_before_opening_angle_bracket_in_type_parameter = false\nij_java_space_before_quest = true\nij_java_space_before_switch_left_brace = true\nij_java_space_before_switch_parentheses = false\nij_java_space_before_synchronized_left_brace = true\nij_java_space_before_synchronized_parentheses = false\nij_java_space_before_try_left_brace = true\nij_java_space_before_try_parentheses = false\nij_java_space_before_type_parameter_list = false\nij_java_space_before_while_keyword = true\nij_java_space_before_while_left_brace = true\nij_java_space_before_while_parentheses = false\nij_java_space_inside_one_line_enum_braces = false\nij_java_space_within_empty_array_initializer_braces = false\nij_java_space_within_empty_method_call_parentheses = false\nij_java_space_within_empty_method_parentheses = false\nij_java_spaces_around_additive_operators = true\nij_java_spaces_around_assignment_operators = true\nij_java_spaces_around_bitwise_operators = true\nij_java_spaces_around_equality_operators = true\nij_java_spaces_around_lambda_arrow = true\nij_java_spaces_around_logical_operators = true\nij_java_spaces_around_method_ref_dbl_colon = false\nij_java_spaces_around_multiplicative_operators = true\nij_java_spaces_around_relational_operators = true\nij_java_spaces_around_shift_operators = true\nij_java_spaces_around_type_bounds_in_type_parameters = true\nij_java_spaces_around_unary_operator = false\nij_java_spaces_within_angle_brackets = false\nij_java_spaces_within_annotation_parentheses = true\nij_java_spaces_within_array_initializer_braces = true\nij_java_spaces_within_braces = false\nij_java_spaces_within_brackets = false\nij_java_spaces_within_cast_parentheses = false\nij_java_spaces_within_catch_parentheses = true\nij_java_spaces_within_for_parentheses = true\nij_java_spaces_within_if_parentheses = true\nij_java_spaces_within_method_call_parentheses = true\nij_java_spaces_within_method_parentheses = true\nij_java_spaces_within_parentheses = false\nij_java_spaces_within_switch_parentheses = true\nij_java_spaces_within_synchronized_parentheses = true\nij_java_spaces_within_try_parentheses = true\nij_java_spaces_within_while_parentheses = true\nij_java_special_else_if_treatment = true\nij_java_subclass_name_suffix = Impl\nij_java_ternary_operation_signs_on_next_line = true\nij_java_ternary_operation_wrap = on_every_item\nij_java_test_name_suffix = Test\nij_java_throws_keyword_wrap = normal\nij_java_throws_list_wrap = normal\nij_java_use_external_annotations = false\nij_java_use_fq_class_names = false\nij_java_use_relative_indents = false\nij_java_use_single_class_imports = true\nij_java_variable_annotation_wrap = off\nij_java_visibility = public\nij_java_while_brace_force = never\nij_java_while_on_new_line = false\nij_java_wrap_comments = false\nij_java_wrap_first_method_in_call_chain = false\nij_java_wrap_long_lines = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.40625,
          "content": "# always use LF line endings\n\n# ALL FILES:\n#   Normalize line endings to LF on checkin and\n#   prevent conversion to CRLF when the file is checked out.\n\n* text eol=lf\n\n\n# TEXT FILES:\n\n*.bat text eol=crlf\n\n\n# BINARY FILES:\n#   Disable line ending normalize on checkin.\n\n*.dll binary\n*.dylib binary\n*.gif binary\n*.jar binary\n*.lib binary\n*.otf binary\n*.png binary\n*.sketch binary\n*.so binary\n*.ttf binary\n*.zip binary\n"
        },
        {
          "name": ".gitbugtraq",
          "type": "blob",
          "size": 0.271484375,
          "content": "# links issue numbers in git commit messages to issue tracker \n# https://github.com/mstrap/bugtraq\n# for SmartGit - https://www.syntevo.com/smartgit/\n\n[bugtraq]\nurl = \"https://github.com/JFormDesigner/FlatLaf/issues/%BUGID%\"\nloglinkregex = \"#[0-9]{1,5}\"\nlogregex = \"[0-9]{1,5}\"\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.125,
          "content": "bin/\nbuild/\n.gradle/\n.classpath\n.project\n.settings/\n.idea/\nout/\n*.iml\n*.ipr\n*.iws\n*.xcuserstate\n*.xcworkspacedata\n.vs/\n.vscode/\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 94.35546875,
          "content": "FlatLaf Change Log\n==================\n\n## 3.6-SNAPSHOT\n\n#### New features and improvements\n\n- CheckBox: Support styling indeterminate state of\n  [tri-state check boxes](https://www.javadoc.io/doc/com.formdev/flatlaf-extras/latest/com/formdev/flatlaf/extras/components/FlatTriStateCheckBox.html).\n  (PR #936; issue #919)\n- List: Support for alternate row highlighting. (PR #939)\n- Tree: Support for alternate row highlighting. (PR #903)\n- Tree: Support wide cell renderer. (issue #922)\n- Extras: `FlatSVGIcon` color filters now can access painting component to\n  implement component state based color mappings. (issue #906)\n\n#### Fixed bugs\n\n- Button: Fixed background and foreground colors for `borderless` and\n  `toolBarButton` style default buttons (`JButton.isDefaultButton()` is `true`).\n  (issue #947)\n- FileChooser: Improved performance when navigating to large directories with\n  thousands of files. (issue #953)\n- PopupFactory: Fixed NPE on Windows 10 when `owner` is `null`. (issue #952)\n- FlatLaf window decorations: Minimize and maximize icons were not shown for\n  custom scale factors less than 100% (e.g. `-Dflatlaf.uiScale=75%`). (issue\n  #951)\n\n\n## 3.5.4\n\n#### Fixed bugs\n\n- HTML: Fixed NPE when using HTML text on a component with `null` font. (issue\n  #930; PR #931; regression in 3.5)\n- Linux: Fixed NPE when using FlatLaf window decorations and switching theme.\n  (issue #933; regression in 3.5.3)\n\n\n## 3.5.3\n\n#### Fixed bugs\n\n- HTML: Fixed wrong rendering if HTML text contains `<style>` tag with\n  attributes (e.g. `<style type='text/css'>`). (issue #905; regression in 3.5.1)\n- FlatLaf window decorations:\n  - Windows: Fixed possible deadlock with TabbedPane in window title area in\n    \"full window content\" mode. (issue #909)\n  - Windows: Fixed wrong layout in maximized frame after changing screen scale\n    factor. (issue #904)\n  - Linux: Fixed continuous cursor toggling between resize and standard cursor\n    when resizing window. (issue #907)\n  - Fixed sometimes broken window moving with SplitPane in window title area in\n    \"full window content\" mode. (issue #926)\n- Popup: On Windows 10, fixed misplaced popup drop shadow. (issue #911;\n  regression in 3.5)\n- Popup: Fixed NPE if `GraphicsConfiguration` is `null` on Windows. (issue #921)\n- Theme Editor: Fixed using color picker on secondary screen.\n- Fixed detection of Windows 11 if custom exe launcher does not specify Windows\n  10+ compatibility in application manifest. (issue #916)\n- Linux: Fixed slightly different font size (or letter width) used to paint HTML\n  text when default font family is _Cantarell_ (e.g. on Fedora). (issue #912)\n\n#### Other Changes\n\n- Class `FlatPropertiesLaf` now supports FlatLaf macOS themes as base themes.\n\n\n## 3.5.2\n\n#### Fixed bugs\n\n- Windows: Fixed repaint issues (ghosting) on some systems (probably depending\n  on graphics card/driver). This is done by setting Java system property\n  `sun.java2d.d3d.onscreen` to `false` (but only if `sun.java2d.d3d.onscreen`,\n  `sun.java2d.d3d` and `sun.java2d.noddraw` are not yet set), which disables\n  usage of Windows Direct3D (DirectX) onscreen surfaces. Component rendering\n  still uses Direct3D. (issue #887)\n- FlatLaf window decorations:\n  - Iconify/maximize/close buttons did not fill whole title bar height, if some\n    custom component in menu bar increases title bar height. (issue #897)\n  - Windows: Fixed possible application freeze when using custom component that\n    overrides `Component.contains(int x, int y)` and invokes\n    `SwingUtilities.convertPoint()` (or similar) from the overridden method.\n    (issue #878)\n- TextComponents: Fixed too fast scrolling in multi-line text components when\n  using touchpads (e.g. on macOS). (issue #892)\n- ToolBar: Fixed endless loop if button in Toolbar has focus and is made\n  invisible. (issue #884)\n\n#### Other Changes\n\n- FlatLaf window decorations: Added client property `JRootPane.titleBarHeight`\n  to allow specifying a (larger) preferred height for the title bar. (issue\n  #897)\n- Added system property `flatlaf.useRoundedPopupBorder` to allow disabling\n  native rounded popup borders on Windows 11 and macOS. On macOS 14.4+, where\n  rounded popup borders are disabled since FlatLaf 3.5 because of occasional\n  problems, you can use this to enable rounded popup borders (at your risk).\n\n\n## 3.5.1\n\n#### Fixed bugs\n\n- HTML: Fixed occasional cutoff wrapped text when using multi-line text in HTML\n  tags `<h1>`...`<h6>`, `<code>`, `<kbd>`, `<big>`, `<small>` or `<samp>`.\n  (issue #873; regression in 3.5)\n- Popup: Fixed `UnsupportedOperationException: PERPIXEL_TRANSLUCENT translucency\n  is not supported` exception on Haiku OS when showing popup (partly) outside of\n  window. (issue #869)\n- HiDPI: Fixed occasional wrong repaint areas when using\n  `HiDPIUtils.installHiDPIRepaintManager()`. (see PR #864)\n- Added system property `flatlaf.useSubMenuSafeTriangle` to allow disabling\n  submenu safe triangle (PR #490) for\n  [SWTSwing](https://github.com/Chrriis/SWTSwing). (issue #870)\n\n\n## 3.5\n\n#### New features and improvements\n\n- Table: Support rounded selection. (PR #856)\n- Button and ToggleButton: Added border colors for pressed and selected states.\n  (issue #848)\n- Label: Support painting background with rounded corners. (issue #842)\n- Popup: Fixed flicker of popups (e.g. tooltips) while they are moving (e.g.\n  following mouse pointer). (issues #832 and #672)\n- FileChooser: Wrap shortcuts in scroll pane. (issue #828)\n- Theme Editor: On macOS, use larger window title bar. (PR #779)\n\n#### Fixed bugs\n\n- macOS: Disabled rounded popup border (see PR #772) on macOS 14.4+ because it\n  may freeze the application and crash the macOS WindowServer process (reports\n  vary from Finder restarts to OS restarts). This is a temporary change until a\n  solution is found. See NetBeans issues\n  [apache/netbeans#7560](https://github.com/apache/netbeans/issues/7560#issuecomment-2226439215)\n  and\n  [apache/netbeans#6647](https://github.com/apache/netbeans/issues/6647#issuecomment-2070124442).\n- FlatLaf window decorations: Window top border on Windows 10 in \"full window\n  content\" mode was not fully repainted when activating or deactivating window.\n  (issue #809)\n- Button and ToggleButton: UI properties `[Toggle]Button.selectedForeground` and\n  `[Toggle]Button.pressedForeground` did not work for HTML text. (issue #848)\n- HTML: Fixed font sizes for HTML tags `<h1>`...`<h6>`, `<code>`, `<kbd>`,\n  `<big>`, `<small>` and `<samp>` in HTML text for components Button, CheckBox,\n  RadioButton, MenuItem (and subclasses), JideLabel, JideButton, JXBusyLabel and\n  JXHyperlink. Also fixed for Label and ToolTip if using Java 11+.\n- ScrollPane: Fixed/improved border painting at 125% - 175% scaling to avoid\n  different border thicknesses. (issue #743)\n- Table: Fixed painting of alternating rows below table if auto-resize mode is\n  `JTable.AUTO_RESIZE_OFF` and table width is smaller than scroll pane (was not\n  updated when table width changed and was painted on wrong side in\n  right-to-left component orientation).\n- Theme Editor: Fixed occasional empty window on startup on macOS.\n- FlatLaf window decorations: Fixed black line sometimes painted on top of\n  (native) window border on Windows 11. (issue #852)\n- HiDPI: Fixed incomplete component paintings at 125% or 175% scaling on Windows\n  where sometimes a 1px wide area at the right or bottom component edge is not\n  repainted. E.g. ScrollPane focus indicator border. (issues #860 and #582)\n\n#### Incompatibilities\n\n- ProgressBar: Log warning (including stack trace) when uninstalling\n  indeterminate progress bar UI or using `JProgressBar.setIndeterminate(false)`\n  not on AWT thread, because this may throw NPE in `FlatProgressBarUI.paint()`.\n  (issues #841 and #830)\n- Panel: Rounded background of panel with rounded corners is now painted even if\n  panel is not opaque. (issue #840)\n\n\n## 3.4.1\n\n#### Fixed bugs\n\n- SplitPane: Update divider when client property `JSplitPane.expandableSide`\n  changed.\n- TabbedPane: Fixed swapped back and forward scroll buttons when using\n  `TabbedPane.scrollButtonsPlacement = trailing` (regression in FlatLaf 3.3).\n- Fixed missing window top border on Windows 10 in \"full window content\" mode.\n  (issue #809)\n- Extras:\n  - `FlatSVGIcon` color filters now support linear gradients. (PR #817)\n  - `FlatSVGIcon`: Use log level `CONFIG` instead of `SEVERE` and allow\n    disabling logging. (issue #823)\n  - Added support for `JSplitPane.expandableSide` client property to\n    `FlatSplitPane`.\n- Native libraries: Added API version check to test whether native library\n  matches the JAR (bad builds could e.g. ship a newer JAR with an older\n  incompatible native library) and to test whether native methods can be invoked\n  (some security software allows loading native library but blocks method\n  invocation).\n- macOS: Fixed crash when running in WebSwing. (issue #826; regression in 3.4)\n\n#### Incompatibilities\n\n- File names of custom properties files for nested Laf classes now must include\n  name of enclosing class name. E.g. nested Laf class `IntelliJTheme.ThemeLaf`\n  used `ThemeLaf.properties` in previous versions, but now needs to be named\n  `IntelliJTheme$ThemeLaf.properties`.\n\n\n## 3.4\n\n#### New features and improvements\n\n- FlatLaf window decorations (Windows 10/11 and Linux): Support \"full window\n  content\" mode, which allows you to extend the content into the window title\n  bar. (PR #801)\n- macOS: Support larger window title bar close/minimize/zoom buttons spacing in\n  [full window content](https://www.formdev.com/flatlaf/macos/#full_window_content)\n  mode and introduced \"buttons placeholder\". (PR #779)\n- Native libraries:\n  - System property `flatlaf.nativeLibraryPath` now supports loading native\n    libraries named the same as on Maven central.\n  - Published `flatlaf-<version>-no-natives.jar` to Maven Central. This JAR is\n    equal to `flatlaf-<version>.jar`, except that it does not contain the\n    FlatLaf native libraries. The Maven \"classifier\" to use this JAR is\n    `no-natives`. You need to distribute the FlatLaf native libraries with your\n    application.\n    See https://www.formdev.com/flatlaf/native-libraries/ for more details.\n  - Improved log messages for loading fails.\n- Fonts: Updated **Inter** to\n  [v4.0](https://github.com/rsms/inter/releases/tag/v4.0).\n- Table: Select all text in cell editor when starting editing using `F2` key on\n  Windows or Linux. (issue #652)\n\n#### Fixed bugs\n\n- macOS: Setting window background (of undecorated window) to translucent color\n  (alpha < 255) did not show the window translucent. (issue #705)\n- JIDE CommandMenuBar: Fixed `ClassCastException` when JIDE command bar displays\n  `JideMenu` in popup. (PR #794)\n\n\n## 3.3\n\n#### New features and improvements\n\n- macOS (10.14+): Popups (`JPopupMenu`, `JComboBox`, `JToolTip`, etc.) now use\n  native macOS rounded borders. (PR #772; issue #715)\n- Native libraries: Added `libflatlaf-macos-arm64.dylib` and\n  `libflatlaf-macos-x86_64.dylib`. See also\n  https://www.formdev.com/flatlaf/native-libraries/.\n- ScrollPane: Support rounded border. (PR #713)\n- SplitPane: Support divider hover and pressed background colors. (PR #788)\n- TabbedPane: Support vertical tabs. (PR #758, issue #633)\n- TabbedPane: Paint rounded tab area background for rounded cards. (issue #717)\n- ToolBar: Added styling properties `separatorWidth` and `separatorColor`.\n\n#### Fixed bugs\n\n- Button and ToggleButton: Selected buttons did not use explicitly set\n  foreground color. (issue #756)\n- FileChooser: Catch NPE in Java 21 when getting icon for `.exe` files that use\n  default Windows exe icon. (see\n  [JDK-8320692](https://bugs.openjdk.org/browse/JDK-8320692))\n- OptionPane: Fixed styling custom panel background in `JOptionPane`. (issue\n  #761)\n- ScrollPane: Styling ScrollPane border properties did not work if view\n  component is a Table.\n- Table:\n  - Switching theme looses table grid and intercell spacing. (issues #733 and\n    #750)\n  - Fixed background of `boolean` columns when using alternating row colors.\n    (issue #780)\n  - Fixed border arc of components in complex table cell editors. (issue #786)\n- TableHeader:\n  - No longer temporary replace header cell renderer while painting. This avoids\n    a `StackOverflowError` in case that custom renderer does this too. (see\n    [NetBeans issue #6835](https://github.com/apache/netbeans/issues/6835)) This\n    also improves compatibility with custom table header implementations.\n  - Header cell renderer background/foreground colors were not restored after\n    hover if renderer uses `null` for background/foreground. (PR #790)\n- TabbedPane:\n  - Avoid unnecessary repainting whole tabbed pane content area when layouting\n    leading/trailing components.\n  - Avoid unnecessary repainting of selected tab on temporary changes.\n  - Fixed \"endless\" layouting and repainting when using nested tabbed panes (top\n    and bottom tab placement) and RSyntaxTextArea (with enabled line-wrapping)\n    as tab content. (see\n    [jadx issue #2030](https://github.com/skylot/jadx/issues/2030))\n- Fixed broken rendering after resizing window to minimum size and then\n  increasing size again. (issue #767)\n\n#### Incompatibilities\n\n- Removed support for JetBrains custom decorations, which required\n  [JetBrains Runtime](https://github.com/JetBrains/JetBrainsRuntime/wiki) (JBR)\n  8 or 11. It did not work for JBR 17. System property\n  `flatlaf.useJetBrainsCustomDecorations` is now ignored. **Note**: FlatLaf\n  window decorations continue to work with JBR.\n\n\n## 3.2.5\n\n#### Fixed bugs\n\n- Popup: Fixed NPE if popup invoker is `null` on Windows 10. (issue #753;\n  regression in 3.2.1 in fix for #626)\n\n\n## 3.2.4\n\n#### Fixed bugs\n\n- Popup: Fixed NPE if popup invoker is `null` on Linux with Wayland and Java 21.\n  (issue #752; regression in 3.2.3)\n\n\n## 3.2.3\n\n#### Fixed bugs\n\n- Popup: Popups that request focus were not shown on Linux with Wayland and Java 21.\n  (issue #752)\n\n\n## 3.2.2\n\n#### Fixed bugs\n\n- Button: Fixed painting icon and text at wrong location when using HTML text,\n  left/right vertical alignment and running in Java 19+. (issue #746)\n- CheckBox and RadioButton: Fixed cut off right side when border is removed and\n  horizontal alignment is set to `right`. (issue #734)\n- TabbedPane: Fixed NPE when using focusable component as tab component and\n  switching theme. (issue #745)\n\n\n## 3.2.1\n\n#### Fixed bugs\n\n- Fixed memory leak in\n  `MultiResolutionImageSupport.create(int,Dimension[],Function<Dimension,Image>)`,\n  which caches images created by the producer function. Used by\n  `FlatSVGIcon.getImage()` and `FlatSVGUtils.createWindowIconImages()`. If you\n  use one of these methods, it is **strongly recommended** to upgrade to this\n  version, because if the returned image is larger and painted very often it may\n  result in an out-of-memory situation. (issue #726)\n- FileChooser: Fixed occasional NPE in `FlatShortcutsPanel` on Windows. (issue\n  #718)\n- TextField: Fixed placeholder text painting, which did not respect horizontal\n  alignment property of `JTextField`. (issue #721)\n- Popup: Fixed drop shadow if popup overlaps a heavyweight component. (Windows\n  10 only; issue #626)\n\n\n## 3.2\n\n#### New features and improvements\n\n- TabbedPane: Support rounded underline selection and rounded card tabs. (PR\n  #703)\n- FlatLaf window decorations:\n  - Support for Windows on ARM 64-bit. (issue #443, PR #707)\n  - Support toolbox-style \"small\" window title bar. (issue #659, PR #702)\n- Extras: Class `FlatSVGIcon` now uses [JSVG](https://github.com/weisJ/jsvg)\n  library (instead of svgSalamander) for rendering. JSVG provides improved SVG\n  rendering and uses less memory compared to svgSalamander. (PR #684)\n- ComboBox: Improved location of selected item in popup if list is large and\n  scrollable.\n- FileChooser: Show localized text for all locales supported by Java's Metal\n  look and feel. (issue #680)\n- Added system property `flatlaf.useNativeLibrary` to allow disabling loading of\n  FlatLaf native library. (issue #674)\n- IntelliJ Themes:\n  - Reduced memory footprint by releasing Json data and ignoring IntelliJ UI\n    properties that are not used in FlatLaf.\n  - Updated \"Hiberbee Dark\" and \"Gradianto\" themes.\n\n#### Fixed bugs\n\n- Styling: Fixed scaling of some styling properties (`rowHeight` for Table and\n  Tree; `iconTextGap` for Button, CheckBox and RadioButton). (issue #682)\n- Fixed `IllegalComponentStateException` when invoker is not showing in\n  `SubMenuUsabilityHelper`. (issue #692)\n- macOS themes: Changing `@accentColor` variable in FlatLaf properties files did\n  not change all accent related colors for all components.\n- IntelliJ Themes:\n  - \"Light Owl\" theme: Fixed wrong (unreadable) text color in selected menu\n    items, selected text in text components, and selection in ComboBox popup\n    list. (issue #687)\n  - \"Gradianto Midnight Blue\" theme: Fixed color of ScrollBar track, which was\n    not visible. (issue #686)\n  - \"Monocai\" theme: Fixed unreadable text color of default buttons. (issue\n    #693)\n  - \"Vuesion\" theme: Fixed foreground colors of disabled text.\n  - \"Material UI Lite\" themes: Fixed non-editable ComboBox button background.\n  - CheckBox and RadioButton: Fixed unselected icon colors for themes \"Atom One\n    Light\", \"Cyan Light\", \"GitHub\", \"Light Owl\", \"Material Lighter\" and\n    \"Solarized Light\".\n  - TabbedPane: Fixed focused tab background color for themes \"Arc *\", \"Material\n    Design Dark\", \"Monocai\", \"One Dark\", \"Spacegray\" and \"Xcode-Dark\". (issue\n    #697)\n  - TextComponents, ComboBox and Spinner: Fixed background colors of enabled\n    text components, to distinguish from disabled, for themes \"Carbon\", \"Cobalt\n    2\", \"Gradianto *\", \"Gruvbox *\", \"Monocai\", \"Spacegray\", \"Vuesion\",\n    \"Xcode-Dark\", \"GitHub\", and \"Light Owl\". (issue #528)\n  - Fixed wrong disabled text colors in \"Dark Flat\", \"Hiberbee Dark\", \"Light\n    Flat\", \"Nord\", \"Solarized Dark\" and \"Solarized Light\" themes.\n  - Fixed colors for selection background/foreground, Separator, Slider track\n    and ProgressBar background in various themes.\n- Native Windows libraries: Fixed crash when running in Java 8 and newer Java\n  version is installed in `PATH` environment variable and using class\n  `SystemInfo` before AWT initialization. (issue #673)\n- ComboBox: Fixed search in item list for text with spaces. (issue #691)\n- FormattedTextField: On Linux, fixed `IllegalArgumentException: Invalid\n  location` if `JFormattedTextField.setDocument()` is invoked in a focus gained\n  listener on that formatted text field. (issue #698)\n- PopupMenu: Make sure that popup menu does not overlap any operating system\n  task bar. (issue #701)\n- FileChooser: Use system icons on Windows with Java 17.0.3 (and later) 32-bit.\n  Only Java 17 - 17.0.2 32-bit do not use system icons because of a bug in Java\n  32-bit that crashes the application. (PR #709)\n- FileChooser: Fixed crash on Windows with Java 17 to 17.0.2 32-bit. Java 17\n  64-bit is not affected. (regression since FlatLaf 2.3; PR #522, see also issue\n  #403)\n\n#### Incompatibilities\n\n- Extras: Class `FlatSVGIcon` now uses [JSVG](https://github.com/weisJ/jsvg)\n  library for SVG rendering. You need to replace svgSalamander with JSVG in your\n  build scripts and distribute `jsvg.jar` with your application. Also replace\n  `com.kitfox.svg` with `com.github.weisj.jsvg` in `module-info.java` files.\n- IntelliJ Themes: Removed all \"Contrast\" themes from \"Material UI Lite\".\n\n\n## 3.1.1\n\n- IntelliJ Themes:\n  - Fixed too large menu item paddings and too large table/tree row heights (all\n    \"Material Theme UI Lite\" themes; issue #667; regression in FlatLaf 3.1).\n  - Fixed too large tree row height in \"Carbon\", \"Dark Purple\", \"Gray\",\n    \"Material Design Dark\", \"Monokai Pro\", \"One Dark\" and \"Spacegray\" themes.\n- Native libraries: Fixed `IllegalArgumentException: URI scheme is not \"file\"`\n  when using FlatLaf in WebStart. (issue #668; regression in FlatLaf 3.1)\n\n\n## 3.1\n\n#### New features and improvements\n\n- Windows 11: Popups (`JPopupMenu`, `JComboBox`, `JToolTip`, etc.) now use\n  native Windows 11 rounded borders and drop shadows. (PR #643)\n- Fonts:\n  - Added **Roboto Mono** (https://fonts.google.com/specimen/Roboto+Mono). (PR\n    #639, issue #638)\n  - Updated **JetBrains Mono** to\n    [v2.304](https://github.com/JetBrains/JetBrainsMono/releases/tag/v2.304).\n- Theme Editor: Support macOS light and dark themes.\n- TabbedPane: Support hover and focused tab foreground colors. (issue #627)\n- TabbedPane: `tabbedPane.getBackgroundAt(tabIndex)` now has higher priority\n  than `TabbedPane.focusColor` and `TabbedPane.selectedBackground`. If\n  `tabbedPane.setBackgroundAt(tabIndex)` is used to set a color for a single\n  tab, then this color is now used even if the tab is focused or selected.\n- TableHeader: Support column hover and pressed background and foreground\n  colors. (issue #636)\n- Native libraries: Made it easier to distribute FlatLaf native libraries\n  (Windows `.dll` and Linux `.so`) to avoid problems on operating systems with\n  enabled execution restrictions.\n  See https://www.formdev.com/flatlaf/native-libraries/ for more details. (issue #624)\n  - Published native libraries to Maven Central for easy using them as\n    dependencies in Gradle and Maven.\n  - If available, native libraries are now loaded from same location as\n    `flatlaf.jar`, otherwise they are extract from `flatlaf.jar` to temporary\n    folder and loaded from there.\n  - Windows DLLs are now digitally signed with FormDev Software GmbH\n    certificate.\n\n#### Fixed bugs\n\n- FlatLaf window decorations:\n  - Fixed inconsistent size of glass pane depending on whether FlatLaf window\n    decorations are used (e.g. Windows 10/11) or not (e.g. macOS). Now the glass\n    pane no longer overlaps the FlatLaf window title bar. (issue #630)\n  - Linux: Fixed broken window resizing on multi-screen setups. (issue #632)\n  - Linux: Fixed behavior of maximize/restore button when tiling window to left\n    or right half of screen. (issue #647)\n- IntelliJ Themes:\n  - Fixed default button hover background in \"Solarized Light\" theme. (issue\n    #628)\n  - Avoid that accent color affect some colors in some IntelliJ themes. (issue\n    #625)\n  - Updated \"Hiberbee Dark\" and \"Material Theme UI Lite\" themes.\n- Styling: Fixed resolving of UI variables in styles that use other variables.\n- MenuItem: Fixed horizontal alignment of icons. (issue #631)\n- Table: Fixed potential performance issue with paint cell focus indicator\n  border. (issue #654)\n- Tree: Fixed missing custom closed/opened/leaf icons of a custom\n  `DefaultTreeCellRenderer`. (issue #653; regression since implementing PR #609\n  in FlatLaf 3.0)\n- Tree: Fixed truncated node text and too small painted non-wide node background\n  if custom cell renderer sets icon, but not disabled icon, and tree is\n  disabled. (issue #640)\n- Fixed `HiDPIUtils.paintAtScale1x()`, which painted at wrong location if\n  graphics is rotated, is scaled and `x` or `y` parameters are not zero. (issue\n  #646)\n\n\n## 3.0\n\n#### New features and improvements\n\n- **macOS light and dark themes**: The two new themes `FlatMacLightLaf` and\n  `FlatMacDarkLaf` use macOS colors and look similar to native macOS controls.\n  (PRs #533, #612 and #607)\n- **Fonts**: Packaged some fonts into JARs and provide an easy way to use them\n  with FlatLaf. (PRs #545, #614 and #615) At the moment there are three fonts:\n  - **Inter** (https://rsms.me/inter/) - a typeface carefully crafted & designed\n    for computer screens\n  - **Roboto** (https://fonts.google.com/specimen/Roboto) - default font on\n    Android and recommended for Material Design\n  - **JetBrains Mono** (https://www.jetbrains.com/mono) - a monospaced typeface\n- **Rounded selection**: Optionally use rounded selection in:\n  - Menus (PR #536)\n  - ComboBox (PR #548)\n  - List (PR #547)\n  - Tree (PR #546)\n- Tree: Hide default closed/opened/leaf icons by default. Set UI value\n  `Tree.showDefaultIcons` to `true` to show them.\n- ToolBar: Hover effect for button groups. (PR #534)\n- Icons: New modern **rounded outlined icons** for `JFileChooser`,\n  `JOptionPane`, `JPasswordField` and `JTree`. (PR #577)\n\n#### Fixed bugs\n\n- FileChooser: Fixed layout of (optional) accessory component and fixed too\n  large right margin. (issue #604; regression since implementing PR #522 in\n  FlatLaf 2.3)\n- Tree:\n  - Fixed missing tree lines (if enabled) for wide-selected rows. (issue #598)\n  - Fixed scaling of tree lines and fixed alignment to expand/collapse arrows.\n  - Removed support for dashed tree lines. `Tree.lineTypeDashed` is now ignored.\n- SwingX: Fonts in `JXHeader`, `JXMonthView`, `JXTaskPane` and `JXTitledPanel`\n  were not updated when changing default font.\n\n\n## 2.6\n\n#### New features and improvements\n\n- If value of system property `flatlaf.nativeLibraryPath` is `system`, then\n  `System.loadLibrary(String)` is used to load the native library.\n- TabbedPane: Switch and close tabs on left mouse click only. (PR #595)\n\n#### Fixed bugs\n\n- ComboBox and Spinner: Fixed missing arrow buttons if preferred height is zero.\n  Minimum width of arrow buttons is 3/4 of default width.\n- MenuBar: Fixed NPE in `FlatMenuItemRenderer.getTopLevelFont()` if menu item\n  does not have a parent. (issue #600; regression since implementing #589 in\n  FlatLaf 2.5)\n- ScrollBar: Show \"pressed\" feedback on track/thumb only for left mouse button.\n  If absolute positioning is enabled (the default), then also for middle mouse\n  button.\n- Arrow buttons in ComboBox, Spinner, ScrollBar and TabbedPane: Show \"pressed\"\n  feedback only for left mouse button.\n- ScaledImageIcon: Do not throw exceptions if image was has invalid size (e.g.\n  not found). Instead, paint a red rectangle (similar to `FlatSVGIcon`).\n- Fixed NPE in `FlatUIUtils.isCellEditor()`. (issue #601)\n\n\n## 2.5\n\n#### New features and improvements\n\n- Linux: Use X11 window manager events to move window and to show window menu\n  (right-click on window title bar), if custom window decorations are enabled.\n  This gives FlatLaf windows a more \"native\" feeling. (issue #482)\n- MenuBar: Support different menu selection style UI defaults for `MenuBar` and\n  `MenuItem`. (issue #587)\n- MenuBar: Top level menus now use `MenuBar.font` instead of `Menu.font`. (issue\n  #589)\n- PasswordField: Reveal button is now hidden (and turned off) if password field\n  is disabled. (issue #501)\n- TabbedPane: New option to disable tab run rotation in wrap layout. Set UI\n  value `TabbedPane.rotateTabRuns` to `false`. (issue #574)\n- Window decorations:\n  - Added client property to mark components in embedded menu bar as \"caption\"\n    (allow moving window). (issue #569)\n  - Option to show window icon only in frames, but not in dialogs. Set UI value\n    `TitlePane.showIconInDialogs` to `false`. (issue #589)\n  - Added UI value `TitlePane.font` to customize window title font. (issue #589)\n- Added system property `flatlaf.updateUIOnSystemFontChange` to allow disabling\n  automatic UI update when system font changes. (issue #580)\n\n#### Fixed bugs\n\n- Fixed missing UI value `MenuItem.acceleratorDelimiter` on macOS. (was `null`,\n  is now an empty string)\n- Fixed possible exception in `FlatUIUtils.resetRenderingHints()`. (issue #575)\n- Fixed AWT components on macOS, which use Swing components internally. (issue\n  #583)\n- SwingX: Fixed missing highlighting of \"today\" in `JXMonthView` and\n  `JXDatePicker`.\n\n\n## 2.4\n\n#### New features and improvements\n\n- Native window decorations (Windows 10/11 only):\n  - There is now a small area at top of the embedded menu bar to resize the\n    window.\n  - Improved window title bar layout for small window widths:\n    - Width of iconify/maximize/close buttons is reduced (if necessary) to give\n      more space to embedded menu bar and title.\n    - Window title now has a minimum width to always allow moving window\n      (click-and-drag on window title). Instead, embedded menu bar is made\n      smaller.\n    - Option to show window icon beside window title, if menu bar is embedded or\n      title is centered. Set UI value `TitlePane.showIconBesideTitle` to `true`.\n  - No longer reduce height of window title bar if it has an embedded menu bar\n    and is maximized.\n\n#### Fixed bugs\n\n- ComboBox: Fixed vertical alignment of text in popup list with text in combo\n  box in IntelliJ/Darcula themes.\n- Menus: Fixed application freeze under very special conditions (invoking\n  `FlatLaf.initialize()` twice in NetBeans GUI builder) and using menu that has\n  submenus. See\n  [NetBeans issue #4231](https://github.com/apache/netbeans/issues/4231#issuecomment-1179611682)\n  for details.\n- MenuItem: Fixed sometimes wrapped HTML text on HiDPI screens on Windows.\n- TableHeader: Fixed exception when changing table structure (e.g. removing\n  column) from a table header popup menu action. (issue #532)\n- `HiDPIUtils.paintAtScale1x()` now supports rotated graphics. (issue #557)\n- Typography: No longer use `Consolas` or `Courier New` as monospaced font on\n  Windows because they have bad vertically placement.\n- Native window decorations (Windows 10/11 only):\n  - Do not center window title if embedded menu bar is empty or has no menus at\n    left side, but some components at right side. (issue #558)\n  - Do not use window decorations if system property `sun.java2d.opengl` is\n    `true` on Windows 10. (issue #540)\n  - Fixed missing top window border in dark themes if window drop shadows are\n    disabled in system settings. (issue #554; Windows 10 only)\n  - Right-to-left component orientation of title bar was lost when switching\n    theme.\n\n\n## 2.3\n\n#### New features and improvements\n\n- FileChooser: Added (optional) shortcuts panel. On Windows it contains \"Recent\n  Items\", \"Desktop\", \"Documents\", \"This PC\" and \"Network\". On macOS and Linux it\n  is empty/hidden. (issue #100)\n- Button and ToggleButton: Added missing foreground colors for hover, pressed,\n  focused and selected states. (issue #535)\n- Table: Optionally paint alternating rows below table if table is smaller than\n  scroll pane. Set UI value `Table.paintOutsideAlternateRows` to `true`.\n  Requires that `Table.alternateRowColor` is set to a color. (issue #504)\n- ToggleButton: Made the underline placement of tab-style toggle buttons\n  configurable. (PR #530; issue #529)\n- Added spanish translation. (PR #525)\n\n#### Fixed bugs\n\n- IntelliJ Themes: Fixed `TitledBorder` text color in \"Monokai Pro\" theme.\n  (issue #524)\n\n\n## 2.2\n\n#### New features and improvements\n\n- SplitPane: Allow limiting one-touch expanding to a single side (set client\n  property `JSplitPane.expandableSide` to `\"left\"` or `\"right\"`). (issue #355)\n- TabbedPane: Selected tab underline color now changes depending on whether the\n  focus is within the tab content. (issue #398)\n- IntelliJ Themes:\n  - Added \"Monokai Pro\" and \"Xcode-Dark\" themes.\n  - TabbedPane now use different background color for selected tabs in all \"Arc\"\n    themes, in \"Hiberbee Dark\" and in all \"Material UI Lite\" themes.\n\n#### Fixed bugs\n\n- Native window decorations (Windows 10/11 only): Fixed wrong window title\n  character encoding used in Windows taskbar. (issue #502)\n- Button: Fixed icon layout and preferred width of default buttons that use bold\n  font. (issue #506)\n- FileChooser: Enabled full row selection for details view to fix alternate row\n  coloring. (issue #512)\n- SplitPane: Fixed `StackOverflowError` caused by layout loop that may occur\n  under special circumstances. (issue #513)\n- Table: Slightly changed grid colors to make grid better recognizable. (issue\n  #514)\n- ToolBar: Fixed endless loop in focus navigation that may occur under special\n  circumstances. (issue #505)\n- IntelliJ Themes: `Component.accentColor` UI property now has useful theme\n  specific values. (issue #507)\n\n\n## 2.1\n\n#### New features and improvements\n\n- Menus: Improved usability of submenus. (PR #490; issue #247)\n- Menus: Scroll large menus using mouse wheel or up/down arrows. (issue #225)\n- Linux: Support using custom window decorations. Enable with\n  `JFrame.setDefaultLookAndFeelDecorated(true)` and\n  `JDialog.setDefaultLookAndFeelDecorated(true)` before creating a window.\n  (issue #482)\n- ScrollBar: Added UI value `ScrollBar.minimumButtonSize` to specify minimum\n  scroll arrow button size (if shown). (issue #493)\n\n#### Fixed bugs\n\n- PasswordField: Fixed reveal button appearance in IntelliJ themes. (issue #494)\n- ScrollBar: Center and scale arrows in scroll up/down buttons (if shown).\n  (issue #493)\n- TextArea, TextPane and EditorPane: No longer select all text when component is\n  focused for the first time. (issue #498; regression in FlatLaf 2.0)\n- TabbedPane: Disable all items in \"Show Hidden Tabs\" popup menu if tabbed pane\n  is disabled.\n\n#### Incompatibilities\n\n- Method `FlatUIUtils.paintArrow()` (and class `FlatArrowButton`) now paints\n  arrows one pixel smaller than before. To fix this, increase parameter\n  `arrowSize` by one.\n\n\n## 2.0.2\n\n- Native window decorations (Windows 10/11 only): Fixed rendering artifacts on\n  HiDPI screens when dragging window partly offscreen and back into screen\n  bounds. (issue #477)\n- Repaint component when setting client property `JComponent.outline` (issue\n  #480).\n- macOS: Fixed NPE when using some icons in main menu items. (issue #483)\n\n\n## 2.0.1\n\n- Fixed memory leak in Panel, Separator and ToolBarSeparator. (issue #471;\n  regression in FlatLaf 2.0)\n- ToolTip: Fixed wrong tooltip location if component overrides\n  `JComponent.getToolTipLocation()` and wants place tooltip under mouse\n  location. (issue #468)\n- Extras: Added copy constructor to `FlatSVGIcon`. (issue #465)\n- Moved `module-info.class` from `META-INF\\versions\\9\\` to root folder of JARs.\n  (issue #466)\n\n\n## 2.0\n\n- Added system property `flatlaf.nativeLibraryPath` to load native libraries\n  from a directory. (PR #453)\n- Fixed \"endless recursion in font\" exception in\n  `FlatLaf$ActiveFont.createValue()` if `UIManager.getFont()` is invoked from\n  multiple threads. (issue #456)\n- PasswordField: Preserve reveal button state when switching theme. (PR #442;\n  issue #173)\n- PasswordField: Reveal button did not show password if\n  `JPasswordField.setEchoChar()` was invoked from application. (PR #442; issue\n  #173)\n- Slider: Fixed/improved focused indicator color when changing accent color. (PR\n  #375)\n- TextField:\n  - Improved hover/pressed/selected colors of leading/trailing buttons (e.g.\n    \"reveal\" button in password field). (issue #452)\n  - Clear button no longer paints over round border. (issue #451)\n- Extras: Fixed concurrent loading of SVG icons on multiple threads. (issue\n  #459)\n- Use FlatLaf native window decorations by default when running in\n  [JetBrains Runtime](https://github.com/JetBrains/JetBrainsRuntime/wiki)\n  (instead of using JetBrains custom decorations). System variable\n  `flatlaf.useJetBrainsCustomDecorations` is now `false` by default (was `true`\n  in FlatLaf 1.x). (issue #454)\n- Native window decorations:\n  - Fixed blurry iconify/maximize/close button hover rectangles at 125%, 150% or\n    175% scaling. (issue #431)\n  - Updated maximize and restore icons for Windows 11 style. (requires Java\n    8u321, 11.0.14, 17.0.2 or 18+)\n  - Updated hover and pressed colors of iconify/maximize/close buttons for\n    Windows 11 style.\n\n\n## 2.0-rc1\n\n#### New features and improvements\n\n- Styling:\n  - Styling individual components using string in CSS syntax or `java.util.Map`.\n    (PR #341)\\\n    E.g.: `mySlider.putClientProperty( \"FlatLaf.style\", \"trackWidth: 2\" );`\n  - Style classes allow defining style rules at a single place (in UI defaults)\n    and use them in any component. (PR #388)\\\n    E.g.: `mySlider.putClientProperty( \"FlatLaf.styleClass\", \"myclass\" );`\n- Typography defines several font styles for headers and various text sizes,\n  which makes it easy to use consistent font styles across the application. (PR\n  #396)\n- Native window decorations (Windows 10/11 only):\n  - Unified backgrounds for window title bar is now enabled by default (window\n    title bar has now same background color as window content). Bottom separator\n    for menu bars is no longer painted (if unified background is enabled).\n  - Show Windows 11 snap layouts menu when hovering the mouse over the maximize\n    button. (issues #397 and #407)\n  - Possibility to hide window title bar icon (for single window set client\n    property `JRootPane.titleBarShowIcon` to `false`; for all windows set UI\n    value `TitlePane.showIcon` to `false`).\n  - OptionPane: Hide window title bar icon by default. Can be made visibly by\n    setting UI default `OptionPane.showIcon` to `true`. (issue #416)\n  - No longer show the Java \"duke/cup\" icon if no window icon image is set.\n    (issue #416)\n- TextField, FormattedTextField and PasswordField:\n  - Support leading and trailing icons (set client property\n    `JTextField.leadingIcon` or `JTextField.trailingIcon` to a\n    `javax.swing.Icon`). (PR #378; issue #368)\n  - Support leading and trailing components (set client property\n    `JTextField.leadingComponent` or `JTextField.trailingComponent` to a\n    `java.awt.Component`). (PR #386)\n  - Support \"clear\" (or \"cancel\") button to empty text field. Only shown if text\n    field is not empty, editable and enabled. (set client property\n    `JTextField.showClearButton` to `true`). (PR #442)\n- PasswordField: Support reveal (or \"eye\") button to show password. (see UI\n  value `PasswordField.showRevealButton`) (PR #442; issue #173)\n- TextComponents: Double/triple-click-and-drag now extends selection by whole\n  words/lines.\n- Theming improvements: Reworks core themes to make it easier to create new\n  themes (e.g. reduced explicit colors by using color functions). **Note**:\n  There are minor incompatible changes in FlatLaf properties files. (PR #390)\n- ToolBar:\n  - Toolbars are no longer floatable by default (dots on left side of toolbar\n    that allows dragging toolbar). Use `UIManager.put( \"ToolBar.floatable\", true\n    )` if you want the old behavior.\n  - Skip components with empty input map (e.g. `JLabel`) when using arrow keys\n    to navigate in focusable buttons (if UI value `ToolBar.focusableButtons` is\n    `true`).\n  - Support arrow-keys-only navigation within focusable buttons of toolbar (if\n    UI value `ToolBar.focusableButtons` is `true`):\n    - arrow keys move focus within toolbar\n    - tab-key moves focus out of toolbar\n    - if moving focus into the toolbar, focus recently focused toolbar button\n- ComboBox, Spinner, TextField and subclasses: Support specifying width of\n  border (see UI value `Component.borderWidth`).\n- CheckBox and RadioButton:\n  - Made selected icon better recognizable in **FlatLaf Light** (use blue\n    border), **Dark** and **Darcula** (use lighter border) themes. **IntelliJ**\n    theme is not changed.\n  - Support specifying width of icon border (see UI value\n    `CheckBox.icon.borderWidth`).\n  - Reworked icon UI defaults and added missing ones. **Note**: There are minor\n    incompatible changes in FlatLaf properties files.\n- Slider: Support specifying width of thumb border (see UI value\n  `Slider.thumbBorderWidth`).\n- TabbedPane: Optionally paint selected tab as card. (PR #343)\n- MenuItem:\n  - Paint the selected icon when the item is selected. (PR #415)\n  - Vertically align text if icons have different widths. (issue #437)\n- Panel: Support painting background with rounded corners. (issue #367)\n- Added more color functions to class `ColorFunctions` for easy use in\n  applications: `lighten()`, `darken()`, `saturate()`, `desaturate()`, `spin()`,\n  `tint()`, `shade()` and `luma()`.\n- Support defining fonts in FlatLaf properties files. (issue #384)\n- Added method `FlatLaf.registerCustomDefaultsSource(URL packageUrl)` for JPMS.\n  (issue #325)\n- Extras:\n  - Added class `FlatDesktop` for easy integration into macOS screen menu\n    (About, Preferences and Quit) when using Java 8.\n  - `FlatSVGIcon`: Support loading SVG from `URL` (for JPMS), `URI`, `File` or\n    `InputStream`. (issues #419 and #325)\n  - `FlatSVGUtils`: Support loading SVG from `URL` (for JPMS). (issue #325)\n- SwingX:\n  - New \"column control\" icon for `JXTable` that scales and uses antialiasing.\n    (issue #434)\n\n#### Fixed bugs\n\n- Native window decorations: Fixed `UnsatisfiedLinkError` on Windows 11 for ARM\n  processors. (issue #443)\n- MenuBar: Do not fill background if non-opaque and having custom background\n  color. (issue #409)\n- InternalFrame: Fill background to avoid that parent may shine through internal\n  frame if it contains non-opaque components. (better fix for issue #274)\n- SwingX: Fixed `NullPointerException` in `FlatCaret` when using\n  `org.jdesktop.swingx.prompt.PromptSupport.setPrompt()` on a text field and\n  then switching theme.\n\n\n## 1.6.5\n\n#### Fixed bugs\n\n- Linux: Fixed font problems when running on Oracle Java (OpenJDK is not\n  affected):\n  - oversized text if system font is \"Inter\" (issue #427)\n  - missing text if system font is \"Cantarell\" (on Fedora)\n- MenuItem: Changed accelerator delimiter from `-` to `+`. (Windows and Linux).\n- ComboBox: Fixed occasional `StackOverflowError` when modifying combo box not\n  on AWT thread. (issue #432)\n- macOS: Fixed `NullPointerException` when using AWT component\n  `java.awt.Choice`. (issue #439)\n- Native window decorations: Do not exit application with `UnsatisfiedLinkError`\n  in case that FlatLaf DLL cannot be executed because of restrictions on\n  temporary directory. Instead, continue with default window decorations. (issue\n  #436)\n\n\n## 1.6.4\n\n#### Fixed bugs\n\n- ComboBox: Fixed regression in FlatLaf 1.6.3 that makes selected item invisible\n  in popup list if `DefaultListCellRenderer` is used as renderer. If using\n  default renderer, it works. (issue #426)\n\n\n## 1.6.3\n\n#### Fixed bugs\n\n- ComboBox (not editable): Fixed regression in FlatLaf 1.6.2 that may display\n  text in non-editable combo boxes in bold. (issue #423)\n- Tree: Fixed editing cell issue with custom cell renderer and cell editor that\n  use same component for rendering and editing. (issue #385)\n\n\n## 1.6.2\n\n#### Fixed bugs\n\n- ComboBox (not editable): Fixed background painted outside of border if round\n  edges are enabled (client property `JComponent.roundRect` is `true`). (similar\n  to issue #382; regression since fixing #330 in FlatLaf 1.4)\n- ComboBox: Fixed `NullPointerException`, which may occur under special\n  circumstances. (issue #408)\n- Table: Do not select text in cell editor when it gets focus (when\n  `JTable.surrendersFocusOnKeystroke` is `true`) and\n  `TextComponent.selectAllOnFocusPolicy` is `once` (the default) or `always`.\n  (issue #395)\n- Linux: Fixed NPE when using `java.awt.TrayIcon`. (issue #405)\n- FileChooser: Workaround for crash on Windows with Java 17 32-bit (disabled\n  Windows icons). Java 17 64-bit is not affected. (issue #403)\n- Native window decorations: Fixed layout loop, which may occur under special\n  circumstances and slows down the application. (issue #420)\n\n\n## 1.6.1\n\n#### Fixed bugs\n\n- Native window decorations: Catch `UnsatisfiedLinkError` when trying to load\n  `jawt.dll` to avoid an application crash (Java 8 on Windows 10 only).\n\n\n## 1.6\n\n#### New features and improvements\n\n- InternalFrame: Double-click on icon in internal frame title bar now closes the\n  internal frame. (issue #374)\n- IntelliJ Themes: Removed deprecated `install()` methods.\n\n#### Fixed bugs\n\n- Menus: Fixed missing modifiers flags in `ActionEvent` (e.g. `Ctrl` key\n  pressed) when running in Java 9+ on Linux, macOS. Occurs also on Windows in\n  large popup menus that do not fit into the window. (issue #371; regression\n  since FlatLaf 1.3)\n- OptionPane: Fixed `OptionPane.sameSizeButtons`, which did not work as expected\n  when setting to `false`.\n- OptionPane: Fixed rendering of longer HTML text if it is passed as\n  `StringBuilder`, `StringBuffer`, or any other object that returns HTML text in\n  method `toString()`. (similar to issue #12)\n- ComboBox: Fixed popup border painting on HiDPI screens (e.g. at 150% scaling).\n- ComboBox: Fixed popup location if shown above of combo box (Java 8 only).\n- ComboBox (editable): Fixed wrong border of internal text field under special\n  circumstances.\n- Spinner: Fixed painting of border corners on left side. (issue #382;\n  regression since fixing #330 in FlatLaf 1.4)\n- TableHeader: Do not show resize cursor for last column if resizing last column\n  is not possible because auto resize mode of table is not off. (issue #332)\n- TableHeader: Fixed missing trailing vertical separator line if used in upper\n  left corner of scroll pane. (issue #332)\n- TextField, FormattedTextField, PasswordField and ComboBox: Fixed alignment of\n  placeholder text in right-to-left component orientation.\n- Slider: Fixed calculation of baseline, which was wrong under some\n  circumstances.\n\n\n## 1.5\n\n#### New features and improvements\n\n- SwingX: Added search and clear icons to `JXSearchField`. (issue #359)\n\n#### Fixed bugs\n\n- Button and TextComponent: Do not apply minimum width/height if margins are\n  set. (issue #364)\n- ComboBox and Spinner: Limit arrow button width if component has large\n  preferred height. (issue #361)\n- FileChooser: Fixed missing (localized) texts when FlatLaf is loaded in special\n  classloader (e.g. plugin system in Apache NetBeans).\n- InternalFrame: Limit internal frame bounds to parent bounds on resize. Also\n  honor maximum size of internal frame. (issue #362)\n- Popup: Fixed incorrectly placed drop shadow for medium-weight popups in\n  maximized windows. (issue #358)\n- Native window decorations (Windows 10 only):\n  - Fixed occasional application crash in `flatlaf-windows.dll`. (issue #357)\n  - When window is initially shown, fill background with window background color\n    (instead of white), which avoids flickering in dark themes. (issue #339)\n  - When resizing a window at the right/bottom edge, then first fill the new\n    space with the window background color (instead of black) before the layout\n    is updated.\n  - When resizing a window at the left/top edge, then first fill the new space\n    with the window background color (instead of garbage) before the layout is\n    updated.\n\n\n## 1.4\n\n#### New features and improvements\n\n- TextField, FormattedTextField and PasswordField: Support adding extra padding\n  (set client property `JTextField.padding` to an `Insets`).\n- PasswordField: UI delegate `FlatPasswordFieldUI` now extends `FlatTextFieldUI`\n  (instead of `BasicPasswordFieldUI`) to avoid duplicate code and for easier\n  extensibility.\n- Table and PopupFactory: Use `StackWalker` in Java 9+ for better performance.\n  (issue #334)\n- ToolBar: Paint focus indicator for focused button in toolbar. (issue #346)\n- ToolBar: Support focusable buttons in toolbar (set UI value\n  `ToolBar.focusableButtons` to `true`). (issue #346)\n\n#### Fixed bugs\n\n- ComboBox (editable) and Spinner: Increased size of internal text field to the\n  component border so that it behaves like plain text field (mouse click to left\n  of text now positions caret to first character instead of opening ComboBox\n  popup; mouse cursor is now of type \"text\" within the whole component, except\n  for arrow buttons). (issue #330)\n- ComboBox (not editable): Increased size of internal renderer pane to the\n  component border so that it can paint within the whole component. Also\n  increase combo box size if a custom renderer uses a border with insets that\n  are larger than the default combo box padding (`2,6,2,6`).\n- Fixed component heights at `1.25x`, `1.75x` and `2.25x` scaling factors (Java\n  8 only) so that Button, ComboBox, Spinner and TextField components (including\n  subclasses) have same heights. This increases heights of Button and TextField\n  components by:\n  - `2px` at `1.75x` in **Light** and **Dark** themes\n  - `2px` at `1.25x` and `2.25x` in **IntelliJ** and **Darcula** themes\n- OptionPane: Do not make child components, which are derived from `JPanel`,\n  non-opaque. (issue #349)\n- OptionPane: Align wrapped lines to the right if component orientation is\n  right-to-left. (issue #350)\n- PasswordField: Caps lock icon no longer painted over long text. (issue #172)\n- PasswordField: Paint caps lock icon on left side in right-to-left component\n  orientation.\n- Window decorations: Window title bar width is no longer considered when\n  calculating preferred/minimum width of window. (issue #351)\n\n\n## 1.3\n\n#### New features and improvements\n\n- TextComponents, ComboBox and Spinner: Support different background color when\n  component is focused (use UI values `TextField.focusedBackground`,\n  `PasswordField.focusedBackground`, `FormattedTextField.focusedBackground`,\n  `TextArea.focusedBackground`, `TextPane.focusedBackground`,\n  `EditorPane.focusedBackground`, `ComboBox.focusedBackground`,\n  `ComboBox.buttonFocusedBackground`, `ComboBox.popupBackground` and\n  `Spinner.focusedBackground`). (issue #335)\n\n#### Fixed bugs\n\n- Fixed white lines at bottom and right side of window (in dark themes on HiDPI\n  screens with scaling enabled).\n- ScrollBar: Fixed left/top arrow icon location (if visible). (issue #329)\n- Spinner: Fixed up/down arrow icon location.\n- ToolTip: Fixed positioning of huge tooltips. (issue #333)\n\n\n## 1.2\n\n#### New features and improvements\n\n- Renamed `Flat*Laf.install()` methods to `Flat*Laf.setup()` to avoid confusion\n  with `UIManager.installLookAndFeel(LookAndFeelInfo info)`. The old\n  `Flat*Laf.install()` methods are still there, but marked as deprecated. They\n  will be removed in a future version.\n- Button and ToggleButton: Support borderless button style (set client property\n  `JButton.buttonType` to `borderless`). (PR #276)\n- ComboBox: Support using as cell renderer (e.g. in `JTable`).\n- DesktopPane: Improved layout of iconified internal frames in dock:\n  - Always placed at bottom-left in desktop pane.\n  - Newly iconified frames are added to the right side of the dock.\n  - If frame is deiconified, dock is compacted (icons move to the left).\n  - If dock is wider than desktop width, additional rows are used.\n  - If desktop pane is resized, layout of dock is updated.\n- TableHeader: Moved table header column border painting from\n  `FlatTableHeaderUI` to new border `FlatTableHeaderBorder` to improve\n  compatibility with custom table header implementations. (issue #228)\n- Linux: Enable text anti-aliasing if no Gnome or KDE Desktop properties are\n  available. (issue #218)\n- IntelliJ Themes: Added \"Material Theme UI Lite / GitHub Dark\" theme.\n- JIDE Common Layer: Improved support for `JideTabbedPane`. (PR #306)\n- Extras: `FlatSVGIcon` improvements:\n  - Each icon can now have its own color filter. (PR #303)\n  - Use mapper function in color filter to dynamically map colors. (PR #303)\n  - Color filter supports light and dark themes.\n  - Getters for icon name, classloader, etc.\n- Extras: UI Inspector: Show class hierarchies when pressing <kbd>Alt</kbd> key\n  and prettified class names (dimmed package name).\n- Extras: `FlatSVGUtils.createWindowIconImages()` now returns a single\n  multi-resolution image that creates requested image sizes on demand from SVG\n  (only on Windows with Java 9+).\n\n#### Fixed bugs\n\n- CheckBox and RadioButton: Do not fill background if used as cell renderer,\n  except if cell is selected or has different background color. (issue #311)\n- DesktopPane:\n  - Fixed missing preview of iconified internal frames in dock when using a\n    custom desktop manager. (PR #294)\n  - Fixed incomplete preview of iconified internal frames in dock when switching\n    LaF.\n  - On HiDPI screens, use high-resolution images for preview of iconified\n    internal frames in dock.\n- PopupFactory: Fixed occasional `NullPointerException` in\n  `FlatPopupFactory.fixToolTipLocation()`. (issue #305)\n- Tree: Fill cell background if\n  `DefaultTreeCellRenderer.setBackgroundNonSelectionColor(Color)` was used.\n  (issue #322)\n- IntelliJ Themes: Fixed background colors of DesktopPane and DesktopIcon in all\n  themes.\n- Native window decorations:\n  - Fixed slow application startup under particular conditions. (e.g. incomplete\n    custom JRE) (issue #319)\n  - Fixed occasional double window title bar when creating many frames or\n    dialogs. (issue #315)\n  - Fixed broken maximizing window (under special conditions) when restoring\n    frame state at startup.\n  - Title icon: For multi-resolution images now use `getResolutionVariant(width,\n    height)` (instead of `getResolutionVariants()`) to allow creation of\n    requested size on demand. This also avoids creation of all resolution\n    variants.\n  - Double-click at upper-left corner of maximized frame did not close window.\n    (issue #326)\n- Linux: Fixed/improved detection of user font settings. (issue #309)\n\n\n## 1.1.2\n\n#### New features and improvements\n\n- Native window decorations: Added API to check whether current platform\n  supports window decorations (`FlatLaf.supportsNativeWindowDecorations()`) and\n  to toggle window decorations of all windows\n  (`FlatLaf.setUseNativeWindowDecorations(boolean)`).\n- Native window decorations: Support changing title bar background and\n  foreground colors per window. (set client properties\n  `JRootPane.titleBarBackground` and `JRootPane.titleBarForeground` on root pane\n  to a `java.awt.Color`).\n\n#### Fixed bugs\n\n- Native window decorations: Fixed loading of native library when using Java\n  Platform Module System (JPMS) for application. (issue #289)\n- Native window decorations: Removed superfluous pixel-line at top of screen\n  when window is maximized. (issue #296)\n- Window decorations: Fixed random window title bar background in cases were\n  background is not filled by custom window or root pane components and unified\n  background is enabled.\n- IntelliJ Themes: Fixed window title bar background if unified background is\n  enabled.\n- IntelliJ Themes: Fixed system colors.\n- Button and ToggleButton: Do not paint background of disabled (and unselected)\n  toolBar buttons. (issue #292; regression since fixing #112)\n- ComboBox and Spinner: Fixed too wide arrow button if component is higher than\n  preferred. (issue #302)\n- SplitPane: `JSplitPane.setContinuousLayout(false)` did not work. (issue #301)\n- TabbedPane: Fixed NPE when creating/modifying in another thread. (issue #299)\n- Fixed crash when running in Webswing. (issue #290)\n\n\n## 1.1.1\n\n#### New features and improvements\n\n- Native window decorations: Support disabling native window decorations per\n  window. (set client property `JRootPane.useWindowDecorations` on root pane to\n  `false`).\n- Support running on WinPE. (issue #279)\n\n#### Fixed bugs\n\n- Native window decorations: Fixed missing animations when minimizing,\n  maximizing or restoring a window using window title bar buttons. (issue #282)\n- Native window decorations: Fixed broken maximizing window when restoring frame\n  state at startup. (issue #283)\n- Native window decorations: Fixed double window title bar when first disposing\n  a window with `frame.dispose()` and then showing it again with\n  `frame.setVisible(true)`. (issue #277)\n- Custom window decorations: Fixed NPE in `FlatTitlePane.findHorizontalGlue()`.\n  (issue #275)\n- Custom window decorations: Fixed right aligned progress bar in embedded menu\n  bar was overlapping window title. (issue #272)\n- Fixed missing focus indicators in heavy-weight popups. (issue #273)\n- InternalFrame: Fixed translucent internal frame menu bar background if\n  `TitlePane.unifiedBackground` is `true`. (issue #274)\n- Extras: UI Inspector: Fixed `InaccessibleObjectException` when running in Java 16.\n\n\n## 1.1\n\n#### New features and improvements\n\n- Windows 10 only:\n  - Native window decorations for Windows 10 enables dark frame/dialog title bar\n    and embedded menu bar with all JREs, while still having native Windows 10\n    border drop shadows, resize behavior, window snapping and system window\n    menu. (PR #267)\n  - Custom window decorations: Support right aligned components in `JFrame`\n    title bar with embedded menu bar (using `Box.createHorizontalGlue()`). (PR\n    #268)\n  - Custom window decorations: Improved centering of window title with embedded\n    menu bar. (PR #268; issue #252)\n  - Custom window decorations: Support unified backgrounds for window title bar,\n    menu bar and main content. If enabled with `UIManager.put(\n    \"TitlePane.unifiedBackground\", true );` then window title bar and menu bar\n    use same background color as main content. (PR #268; issue #254)\n- JIDE Common Layer: Support `JideButton`, `JideLabel`, `JideSplitButton`,\n  `JideToggleButton` and `JideToggleSplitButton`.\n- JIDE Common Layer: The library on Maven Central no longer depends on\n  `com.jidesoft:jide-oss:3.6.18` to avoid problems when another JIDE library\n  should be used. (issue #270)\n- SwingX: The library on Maven Central no longer depends on\n  `org.swinglabs.swingx:swingx-all:1.6.5-1` to avoid problems when another\n  SwingX library should be used.\n- Support running in [JetBrains Projector](https://jetbrains.com/projector/).\n\n#### Fixed bugs\n\n- IntelliJ Themes: Fixed text color of CheckBoxMenuItem and RadioButtonMenuItem\n  in all \"Arc\" themes. (issue #259)\n\n\n## 1.0\n\n#### New features and improvements\n\n- Extras: UI Inspector: Tooltip is no longer limited to window bounds.\n\n#### Fixed bugs\n\n- TabbedPane: Custom `TabbedPane.selectedForeground` color did not work when\n  `TabbedPane.foreground` has also custom color. (issue #257)\n- FileChooser: Fixed display of date in details view if current user is selected\n  in \"Look in\" combobox. (Windows 10 only; issue #249)\n- Table: Fixed wrong grid line thickness in dragged column on HiDPI screens on\n  Java 9+. (issue #236)\n- PopupFactory: Fixed `NullPointerException` when `PopupFactory.getPopup()` is\n  invoked with parameter `owner` set to `null`.\n\n\n## 1.0-rc3\n\n#### New features and improvements\n\n- Extras:\n  - UI Inspector: Use HTML in tooltip. Display color value in same format as\n    used in FlatLaf properties files. Added color preview.\n\n#### Fixed bugs\n\n- Label and ToolTip: Fixed font sizes for `<code>`, `<kbd>`, `<big>`, `<small>`\n  and `<samp>` tags in HTML text.\n- Fixed color of `<address>` tag in HTML text.\n- IntelliJ Themes: Fixed table header background when dragging column in \"Dark\n  Flat\" and \"Light Flat\" themes.\n- CheckBox: Fixed background of check boxes in JIDE `CheckBoxTree`. (regression\n  in 1.0-rc2)\n\n\n## 1.0-rc2\n\n#### New features and improvements\n\n- Button:\n  - In \"Flat Light\" theme, use a slightly thinner border for focused buttons\n    (because they already have light blue background).\n  - In \"Flat Dark\" theme, use slightly wider border for focused buttons.\n- CheckBox and RadioButton: In \"Flat Dark\" theme, use blueish background for\n  focused components.\n- Tree: Support disabling wide selection per component. (set client property\n  `JTree.wideSelection` to `false`). (PR #245)\n- Tree: Support disabling selection painting per component. Then the tree cell\n  renderer is responsible for selection painting. (set client property\n  `JTree.paintSelection` to `false`).\n- JIDE Common Layer: Support `JidePopupMenu`.\n\n#### Fixed bugs\n\n- Button: Fixed behavior of <kbd>Enter</kbd> key on focused button on Windows\n  and Linux, which now clicks the focused button (instead of the default\n  button).\n  - On Windows, this is a regression in 1.0-rc1.\n  - On macOS, the <kbd>Enter</kbd> key always clicks the default button, which\n    is the platform behavior.\n  - On all platforms, the default button can be always clicked with\n    <kbd>Ctrl+Enter</kbd> keys, even if another button is focused.\n- CheckBox and RadioButton: Fill component background as soon as background\n  color is different to default background color, even if component is not\n  opaque (which is the default). This paints selection if using the component as\n  cell renderer in Table, Tree or List.\n- TextComponents: Border of focused non-editable text components had wrong\n  color.\n- Custom window decorations: Fixed top window border in dark themes when running\n  in JetBrains Runtime.\n\n\n## 1.0-rc1\n\n#### New features and improvements\n\n- Button: Disabled `Button.defaultButtonFollowsFocus` on Windows (as on other\n  platforms). If you like to keep the old behavior in your application, use:\n  `if(SystemInfo.isWindows)\n  UIManager.put(\"Button.defaultButtonFollowsFocus\",true);`.\n- ComboBox, Spinner and SplitPaneDivider: Added pressed feedback to arrow\n  buttons.\n- Slider: Support per component custom thumb and track colors via\n  `JSlider.setForeground(Color)` and `JSlider.setBackground(Color)`.\n- Slider: Improved thumb hover and pressed colors.\n- TextComponent: Clip placeholder text if it does not fit into visible area. (PR\n  #229)\n- macOS: Improved font rendering on macOS when using JetBrains Runtime. (PRs\n  #237, #239 and #241)\n- Extras: UI defaults inspector:\n  - Support embedding UI defaults inspector panel into any window. See\n    `FlatUIDefaultsInspector.createInspectorPanel()`.\n  - Copy selected keys and values into clipboard via context menu.\n  - Support wildcard matching in filter (`*` matches any number of characters,\n    `?` matches a single character, `^` beginning of line, `$` end of line).\n- IntelliJ Themes:\n  - Added hover and pressed feedback to Button, CheckBox, RadioButton and\n    ToggleButton. (issue #176)\n  - Added \"Material Theme UI Lite / Moonlight\" theme.\n  - Updated \"Dracula\", \"Gradianto\" and \"Material Theme UI Lite\" themes.\n\n#### Fixed bugs\n\n- Button and ToggleButton: Threat Unicode surrogate character pair as single\n  character and make button square. (issue #234)\n- Button and ToggleButton: ToolBar buttons now respect explicitly set background\n  color. If no background color is set, then the button background is not\n  painted anymore. (issue #191)\n- ToggleButton: Tab style buttons (client property `JButton.buttonType` is\n  `tab`) now respect explicitly set background color.\n- TabbedPane: Fixed `IndexOutOfBoundsException` when using tooltip text on close\n  buttons and closing last/rightmost tab. (issue #235)\n- TabbedPane: Fixed scrolling tabs with touchpads and high-resolution mouse\n  wheels.\n- Extras: Added missing export of package\n  `com.formdev.flatlaf.extras.components` to Java 9 module descriptor.\n- JIDE Common Layer:\n  - Invoke `LookAndFeelFactory.installJideExtension()` when using FlatLaf UI\n    delegates. (issue #230)\n  - RangeSlider: Fixed slider focused colors in IntelliJ themes.\n- IntelliJ Themes:\n  - Fixed menu item check colors.\n  - Fixed `MenuItem.underlineSelectionColor`.\n  - Fixed List, Tree and Table `selectionInactiveForeground` in light Arc\n    themes.\n  - Fixed List and Table background colors in Material UI Lite themes.\n  - Fixed menu accelerator colors in Monocai theme. (issue #243)\n\n\n## 0.46\n\n#### New features and improvements\n\n- Slider and JIDE RangeSlider: Clicking on track now immediately moves the thumb\n  to mouse location and starts dragging the thumb. Use `UIManager.put(\n  \"Slider.scrollOnTrackClick\", true )` to enable old behavior that scrolls the\n  thumb when clicking on track.\n- Slider: Snap to ticks is now done while dragging the thumb. Use\n  `UIManager.put( \"Slider.snapToTicksOnReleased\", true )` to enable old behavior\n  that snaps to ticks on mouse released.\n- Extras: Added standard component extension classes that provides easy access\n  to FlatLaf specific client properties (see package\n  `com.formdev.flatlaf.extras.components`).\n- Extras: Renamed tri-state check box class from\n  `com.formdev.flatlaf.extras.TriStateCheckBox` to\n  `com.formdev.flatlaf.extras.components.FlatTriStateCheckBox`. Also\n  changed/improved API and added javadoc.\n- Extras: Renamed SVG utility class from `com.formdev.flatlaf.extras.SVGUtils`\n  to `com.formdev.flatlaf.extras.FlatSVGUtils`.\n- IntelliJ Themes: Added flag whether a theme is dark to\n  `FlatAllIJThemes.INFOS`. (issue #221)\n- JIDE Common Layer: Support `TristateCheckBox`.\n\n\n#### Fixed bugs\n\n- Slider: Fixed painting of colored track if `JSlider.inverted` is `true`.\n- Table and TableHeader: Fixed missing right vertical grid line if using table\n  as row header in scroll pane. (issues #152 and #46)\n- TableHeader: Fixed position of column separators in right-to-left component\n  orientation.\n- ToolTip: Fixed drop shadow for wide tooltips on Windows and Java 9+. (issue\n  #224)\n- SwingX: Fixed striping background highlighting color (e.g. alternating table\n  rows) in dark themes.\n- Fixed: If text antialiasing is disabled (in OS system settings or via\n  `-Dawt.useSystemAAFontSettings=off`), then some components still did use\n  antialiasing to render text (not-editable ComboBox, ProgressBar, Slider,\n  TabbedPane and multiline ToolTip). (issue #227)\n\n\n## 0.45\n\n#### New features and improvements\n\n- Slider: New design, added hover and pressed feedback and improved customizing.\n  (PR #214)\n- JIDE Common Layer: Support `RangeSlider`. (PR #209)\n- IntelliJ Themes:\n  - Added \"Gradianto Nature Green\" theme.\n  - Updated \"Arc Dark\", \"Cyan\", \"Dark purple\", \"Gradianto\", \"Gray\", \"Gruvbox\"\n    and \"One Dark\" themes.\n- TabbedPane: Support hiding tab area if it contains only one tab. (set client\n  property `JTabbedPane.hideTabAreaWithOneTab` to `true`)\n- MenuBar: Support different underline menu selection style UI defaults for\n  `MenuBar` and `MenuItem`. (PR #217; issue #216)\n\n\n#### Fixed bugs\n\n- Table: Do not paint last vertical grid line if auto-resize mode is not off.\n  (issue #46)\n- Table: Fixed unstable grid line thickness when scaled on HiDPI screens. (issue\n  #152)\n- TabbedPane: No longer add (internal) tab close button component as child to\n  `JTabbedPane`. (issue #219)\n- Custom window decorations: Title bar was not hidden if window is in\n  full-screen mode. (issue #212)\n\n\n## 0.44\n\n#### New features and improvements\n\n- TabbedPane: In scroll tab layout, added \"Show Hidden Tabs\" button to trailing\n  side of tab area. If pressed, it shows a popup menu that contains (partly)\n  hidden tabs and selecting one activates that tab. (PR #190; issue #40)\n- TabbedPane: Support forward/backward scroll arrow buttons on both sides of tab\n  area. Backward button on left side, forward button on right side. Not\n  applicable scroll buttons are hidden. (PR #211; issue #40)\n- TabbedPane: Support specifying default tab layout policy for all tabbed panes\n  in the application via UI value `TabbedPane.tabLayoutPolicy`. E.g. invoke\n  `UIManager.put( \"TabbedPane.tabLayoutPolicy\", \"scroll\" );` to use scroll\n  layout.\n- TabbedPane: Support tab scrolling with mouse wheel (in scroll tab layout). (PR\n  #187; issue #40)\n- TabbedPane: Repeat scrolling as long as scroll arrow buttons are pressed. (PR\n  #187; issue #40)\n- TabbedPane: Support adding custom components to left and right sides of tab\n  area. (set client property `JTabbedPane.leadingComponent` or\n  `JTabbedPane.trailingComponent` to a `java.awt.Component`) (PR #192; issue\n  #40)\n- TabbedPane: Support closable tabs. (PR #193; issues #31 and #40)\n- TabbedPane: Support minimum or maximum tab widths. (set client property\n  `JTabbedPane.minimumTabWidth` or `JTabbedPane.maximumTabWidth` to an integer)\n  (PR #199)\n- TabbedPane: Support alignment of tab area. (set client property\n  `JTabbedPane.tabAreaAlignment` to `\"leading\"`, `\"trailing\"`, `\"center\"` or\n  `\"fill\"`) (PR #199)\n- TabbedPane: Support horizontal alignment of tab title and icon. (set client\n  property `JTabbedPane.tabAlignment` to `SwingConstants.LEADING`,\n  `SwingConstants.TRAILING` or `SwingConstants.CENTER`)\n- TabbedPane: Support equal and compact tab width modes. (set client property\n  `JTabbedPane.tabWidthMode` to `\"preferred\"`, `\"equal\"` or `\"compact\"`) (PR\n  #199)\n- TabbedPane: Support left, right, top and bottom tab icon placement. (set\n  client property `JTabbedPane.tabIconPlacement` to `SwingConstants.LEADING`,\n  `SwingConstants.TRAILING`, `SwingConstants.TOP` or `SwingConstants.BOTTOM`)\n  (PR #199)\n- Support painting separator line between window title and content (use UI value\n  `TitlePane.borderColor`). (issue #184)\n- Extras: `FlatSVGIcon` now allows specifying icon width and height in\n  constructors. (issue #196)\n- SplitPane: Hide not applicable expand/collapse buttons. Added tooltips to\n  expand/collapse buttons. (issue #198)\n- SplitPane: Added grip to divider. Can be disabled with `UIManager.put(\n  \"SplitPaneDivider.style\", \"plain\" )`. (issue #179)\n\n\n#### Fixed bugs\n\n- Custom window decorations: Not visible menu bar is now ignored in layout.\n- Popups using `JToolTip` components did not respect their location. (issue\n  #188; regression in 0.42 in fix for #164)\n- IntelliJ Themes: Added suffix \"(Material)\" to names of all Material UI Lite\n  themes to avoid duplicate theme names. (issue #201)\n- Extras: `FlatSVGIcon` icons were not painted in disabled labels and disabled\n  tabs. (issue #205)\n\n\n## 0.43\n\n#### New features and improvements\n\n- TabbedPane: Made tabs separator color lighter in dark themes so that it is\n  easier to recognize the tabbed pane.\n- TabbedPane: Added top and bottom tab insets to avoid that large tab icons are\n  painted over active tab underline.\n- TabbedPane: Support hiding separator between tabs and content area (set client\n  property `JTabbedPane.showContentSeparator` to `false`).\n- CheckBoxMenuItem and RadioButtonMenuItem: Improved checkmark background colors\n  of selected menu items that have also an icon. This makes it is easier to\n  recognize selected menu items.\n- Windows: Made scaling compatible with Windows OS scaling, which distinguish\n  between \"screen scaling\" and \"text scaling\". (issue #175)\n\n#### Fixed bugs\n\n- ComboBox: If using own `JTextField` as editor, default text field border is\n  now removed to avoid duplicate border.\n- ComboBox: Limit popup width to screen width for very long items. (issue #182)\n- FileChooser: Fixed localizing special Windows folders (e.g. \"Documents\") and\n  enabled hiding known file extensions (if enabled in Windows Explorer). (issue\n  #178)\n- Spinner: Fixed `NullPointerException` in case that arrow buttons were removed\n  to create button-less spinner. (issue #181)\n\n\n## 0.42\n\n#### New features and improvements\n\n- Demo: Improved \"SplitPane & Tabs\" and \"Data Components\" tabs.\n- Demo: Menu items \"File > Open\" and \"File > Save As\" now show file choosers.\n- InternalFrame: Support draggable border for resizing frame inside of the\n  visible frame border. (issue #121)\n- `FlatUIDefaultsInspector` added (see [FlatLaf Extras](flatlaf-extras)). A\n  simple UI defaults inspector that shows a window with all UI defaults used in\n  current theme (look and feel).\n- Made disabled text color slightly lighter in dark themes for better\n  readability. (issue #174)\n- PasswordField: Support disabling Caps Lock warning icon. (issue #172)\n\n#### Fixed bugs\n\n- TextComponents: Fixed text color of disabled text components in dark themes.\n- Custom window decorations: Fixed wrong window placement when moving window to\n  another screen with different scaling factor. (issue #166)\n- Custom window decorations: Fixed wrong window bounds when resizing window to\n  another screen with different scaling factor. (issue #166)\n- Fixed occasional wrong positioning of heavy weight popups when using multiple\n  screens with different scaling factors. (issue #166)\n- ToolTip: Avoid that tooltip hides owner component. (issue #164)\n\n\n## 0.41\n\n#### New features and improvements\n\n- Added API to register packages or folders where FlatLaf searches for\n  application specific properties files with custom UI defaults (see\n  `FlatLaf.registerCustomDefaultsSource(...)` methods).\n- Demo: Show hint popups to guide users to some features of the FlatLaf Demo\n  application.\n- Extras: `FlatSVGIcon` now allows specifying `ClassLoader` that is used to load\n  SVG file. (issue #163)\n- Smoother transition from old to new theme, independent of UI complexity, when\n  using animated theme change (see [FlatLaf Extras](flatlaf-extras)).\n\n#### Fixed bugs\n\n- Button: \"selected\" state was not shown. (issue #161)\n- TextArea: Update background color property if enabled or editable state\n  changes in the same way as Swing does it for all other text components. (issue\n  #147)\n- Demo: Fixed restoring last used theme on startup. (regression in 0.39)\n- Custom window decorations: Fixed iconify, maximize and close icon colors if\n  window is inactive.\n- Custom window decorations: Fixed title pane background color in IntelliJ\n  themes if window is inactive.\n- Fixed sub-pixel text rendering in animated theme change (see\n  [FlatLaf Extras](flatlaf-extras)).\n\n#### Other Changes\n\n- Extras: Updated dependency\n  [svgSalamander](https://github.com/JFormDesigner/svgSalamander) to version\n  1.1.2.3.\n\n\n## 0.40\n\n#### New features\n\n- Table: Detect whether component is used in cell editor and automatically\n  disable round border style and reduce cell editor outer border width (used for\n  focus indicator) to zero. (issue #148)\n- ComboBox, Spinner and TextField: Support disabling round border style per\n  component, if globally enabled (set client property `JComponent.roundRect` to\n  `false`). (issue #148)\n\n#### Fixed bugs\n\n- Custom window decorations: Embedded menu bar did not always respond to mouse\n  events after adding menus and when running in JetBrains Runtime. (issue #151)\n- IntelliJ Themes: Fixed NPE in Solarized themes on scroll bar hover.\n\n\n## 0.39\n\n#### New features\n\n- Animated theme change (see [FlatLaf Extras](flatlaf-extras)). Used in Demo.\n- Demo: Added combo box above themes list to show only light or dark themes.\n- IntelliJ Themes:\n  - Added \"Arc Dark\", \"Arc Dark - Orange\", \"Carbon\" and \"Cobalt 2\" themes.\n  - Replaced \"Solarized\" themes with much better ones from 4lex4.\n  - Updated \"Arc\", \"One Dark\" and \"Vuesion\" themes.\n- ScrollPane: Enable/disable smooth scrolling per component if client property\n  \"JScrollPane.smoothScrolling\" is set to a `Boolean` on `JScrollPane`.\n- ScrollBar: Increased minimum thumb size on macOS and Linux from 8 to 18\n  pixels. On Windows, it is now 10 pixels. (issue #131)\n- Button: Support specifying button border width.\n- ComboBox: Changed maximum row count of popup list to 15 (was 20). Set UI value\n  `ComboBox.maximumRowCount` to any integer to use a different value.\n\n#### Fixed bugs\n\n- Custom window decorations: Fixed maximized window bounds when programmatically\n  maximizing window. E.g. restoring window state at startup. (issue #129)\n- InternalFrame: Title pane height was too small when iconify, maximize and\n  close buttons are hidden. (issue #132)\n- ToolTip: Do not show empty tooltip component if tooltip text is an empty\n  string. (issue #134)\n- ToolTip: Fixed truncated text in HTML formatted tooltip on HiDPI displays.\n  (issue #142)\n- ComboBox: Fixed width of popup, which was too small if popup is wider than\n  combo box and vertical scroll bar is visible. (issue #137)\n- MenuItem on macOS: Removed plus characters from accelerator text and made\n  modifier key order conform with macOS standard. (issue #141)\n- FileChooser: Fixed too small text field when renaming a file/directory in Flat\n  IntelliJ/Darcula themes. (issue #143)\n- IntelliJ Themes: Fixed text colors in ProgressBar. (issue #138)\n\n\n## 0.38\n\n- Hide focus indicator when window is inactive.\n- Custom window decorations: Improved/fixed window border color in dark themes.\n- Custom window decorations: Hide window border if window is maximized.\n- Custom window decorations: Center title if menu bar is embedded.\n- Custom window decorations: Cursor of components (e.g. TextField) was not\n  changed. (issue #125)\n- CheckBox: Fixed colors in light IntelliJ themes. (issue #126; regression in\n  0.37)\n- InternalFrame: Use default icon in internal frames. (issue #122)\n\n\n## 0.37\n\n- Custom window decorations (Windows 10 only; PR #108; issues #47 and #82)\n  support:\n  - dark window title panes\n  - embedding menu bar into window title pane\n  - native Windows 10 borders and behavior when running in\n    [JetBrains Runtime 11](https://confluence.jetbrains.com/display/JBR/JetBrains+Runtime)\n    or later (the JRE that IntelliJ IDEA uses)\n- CheckBox and RadioButton: Support changing selected icon style from outline to\n  filled (as in FlatLaf IntelliJ theme) with `UIManager.put(\n  \"CheckBox.icon.style\", \"filled\" );`.\n- Button and ToggleButton: Support disabled background color (use UI values\n  `Button.disabledBackground` and `ToggleButton.disabledBackground`). (issue\n  #112)\n- Button and ToggleButton: Support making buttons square (set client property\n  `JButton.squareSize` to `true`). (issue #118)\n- ScrollBar: Support pressed track, thumb and button colors (use UI values\n  `ScrollBar.pressedTrackColor`, `ScrollBar.pressedThumbColor` and\n  `ScrollBar.pressedButtonBackground`). (issue #115)\n- ComboBox: Support changing arrow button style (set UI value\n  `ComboBox.buttonStyle` to `auto` (default), `button` or `none`). (issue #114)\n- Spinner: Support changing arrows button style (set UI value\n  `Spinner.buttonStyle` to `button` (default) or `none`).\n- TableHeader: Support top/bottom/left positioned sort arrow when using\n  [Glazed Lists](https://github.com/glazedlists/glazedlists). (issue #113)\n- Button, CheckBox, RadioButton and ToggleButton: Do not paint focus indicator\n  if `AbstractButton.isFocusPainted()` returns `false`.\n- ComboBox: Increase maximum row count of popup list to 20 (was 8). Set UI value\n  `ComboBox.maximumRowCount` to any integer to use a different value.\n- Fixed/improved vertical position of text when scaled on HiDPI screens on\n  Windows.\n- IntelliJ Themes: Updated Gradianto Themes.\n- IntelliJ Themes: Fixed menu bar and menu item margins in all Material UI Lite\n  themes.\n\n\n## 0.36\n\n- ScrollBar: Made styling more flexible by supporting insets and arc for track\n  and thumb. (issue #103)\n- ScrollBar: Use round thumb on macOS and Linux to make it look similar to\n  native platform scroll bars. (issue #103)\n- ComboBox: Minimum width is now 72 pixels (was ~50 for non-editable and ~130\n  for editable comboboxes).\n- ComboBox: Support custom borders in combobox editors. (issue #102)\n- Button: Support non-square icon-only buttons. (issue #110)\n- Ubuntu Linux: Fixed poorly rendered font. (issue #105)\n- macOS Catalina: Use Helvetica Neue font.\n- `FlatInspector` added (see [FlatLaf Extras](flatlaf-extras)).\n\n\n## 0.35\n\n- Added drop shadows to popup menus, combobox popups, tooltips and internal\n  frames. (issue #94)\n- Support different component border colors to indicate errors, warnings or\n  custom state (set client property `JComponent.outline` to `error`, `warning`\n  or any `java.awt.Color`).\n- Button and ToggleButton: Support round button style (set client property\n  `JButton.buttonType` to `roundRect`).\n- ComboBox, Spinner and TextField: Support round border style (set client\n  property `JComponent.roundRect` to `true`).\n- Paint nicely rounded buttons, comboboxes, spinners and text fields when\n  setting `Button.arc`, `Component.arc` or `TextComponent.arc` to a large value\n  (e.g. 1000).\n- Added Java 9 module descriptor to `flatlaf-extras-<version>.jar` and\n  `flatlaf-swingx-<version>.jar`.\n- CheckBox and RadioButton: Flag `opaque` is no longer ignored when checkbox or\n  radio button is used as table cell renderer. (issue #77)\n- FileChooser: Use system icons. (issue #100)\n- FileChooser: Fixed missing labels in file chooser when running on Java 9 or\n  later. (issue #98)\n- PasswordField: Do not apply minimum width if `columns` property is greater\n  than zero.\n\n\n## 0.34\n\n- Menus: New menu item renderer brings stable left margins, right aligned\n  accelerators and larger gap between text and accelerator. This makes menus\n  look more modern and more similar to native platform menus.\n- New underline menu selection style that displays selected menu items similar\n  to tabs (to enable use `UIManager.put( \"MenuItem.selectionType\", \"underline\"\n  );`).\n- Menus: Fixed text color of selected menu items that use HTML. (issue #87)\n- Menus: On Windows, pressing <kbd>F10</kbd> now activates the menu bar without\n  showing a menu popup (as usual on Windows platform). On other platforms the\n  first menu popup is shown.\n- Menus: On Windows, releasing <kbd>Alt</kbd> key now activates the menu bar (as\n  usual on Windows platform). (issue #43)\n- Menus: Fixed inconsistent left padding in menu items. (issue #3)\n- Menus: Fixed: Setting `iconTextGap` property on a menu item did increase left\n  and right margins. (issue #54)\n- Hide mnemonics if window is deactivated (e.g. <kbd>Alt+Tab</kbd> to another\n  window). (issue #43)\n- macOS: Enabled drop shadows for popup menus and combobox popups. (issue #94)\n- macOS: Fixed NPE if using `JMenuBar` in `JInternalFrame` and macOS screen menu\n  bar is enabled (with `-Dapple.laf.useScreenMenuBar=true`). (issue #90)\n\n\n## 0.33\n\n- Improved creation of disabled grayscale icons used in disabled buttons, labels\n  and tabs. They now have more contrast and are lighter in light themes and\n  darker in dark themes. (issue #70)\n- IntelliJ Themes: Fixed ComboBox size and Spinner border in all Material UI\n  Lite themes and limit tree row height in all Material UI Lite themes and some\n  other themes.\n- IntelliJ Themes: Material UI Lite themes did not work when using\n  [IntelliJ Themes Pack](flatlaf-intellij-themes) addon. (PR #88, issue #89)\n- IntelliJ Themes: Added Java 9 module descriptor to\n  `flatlaf-intellij-themes-<version>.jar`.\n\n\n## 0.32\n\n- New [IntelliJ Themes Pack](flatlaf-intellij-themes) addon bundles many popular\n  open-source 3rd party themes from JetBrains Plugins Repository into a JAR and\n  provides Java classes to use them.\n- IntelliJ Themes: Fixed button and toggle button colors. (issue #86)\n- Updated IntelliJ Themes in demo to the latest versions.\n- ToggleButton: Compute selected background color based on current component\n  background. (issue #32)\n\n\n## 0.31\n\n- Focus indication border (or background) no longer hidden when temporary\n  loosing focus (e.g. showing a popup menu).\n- List, Table and Tree: Item selection color of focused components no longer\n  change from blue to gray when temporary loosing focus (e.g. showing a popup\n  menu).\n\n\n## 0.30\n\n- Windows: Fixed rendering of Unicode characters. Previously not all Unicode\n  characters were rendered on Windows. (issue #81)\n\n\n## 0.29\n\n- Linux: Fixed scaling if `GDK_SCALE` environment variable is set or if running\n  on JetBrains Runtime. (issue #69)\n- Tree: Fixed repainting wide selection on focus gained/lost.\n- ComboBox: No longer ignore `JComboBox.prototypeDisplayValue` when computing\n  popup width. (issue #80)\n- Support changing default font used for all components with automatic scaling\n  UI if using larger font. Use `UIManager.put( \"defaultFont\", myFont );`\n- No longer use system property `sun.java2d.uiScale`. (Java 8 only)\n- Support specifying custom scale factor in system property `flatlaf.uiScale`\n  also for Java 9 and later.\n- Demo: Support using own FlatLaf themes (`.properties` files) that are located\n  in working directory of Demo application. Shown in the \"Themes\" list under\n  category \"Current Directory\".\n\n\n## 0.28\n\n- PasswordField: Warn about enabled Caps Lock.\n- TabbedPane: Support <kbd>Ctrl+TAB</kbd> / <kbd>Ctrl+Shift+TAB</kbd> to switch\n  to next / previous tab.\n- TextField, FormattedTextField and PasswordField: Support round borders (see UI\n  default value `TextComponent.arc`). (issue #65)\n- IntelliJ Themes: Added Gradianto themes to demo.\n- Button, CheckBox and RadioButton: Fixed NPE when button has children. (PR #68)\n- ScrollBar: Improved colors.\n- Reviewed (and tested) all key bindings on Windows and macOS. Linux key\n  bindings are equal to Windows key bindings. macOS key bindings are slightly\n  different for platform specific behavior.\n- UI default values are no longer based on Metal/Aqua UI defaults.\n\n\n## 0.27\n\n- Support `JInternalFrame` and `JDesktopPane`. (issues #39 and #11)\n- Table: Support positioning the column sort arrow in header right, left, top or\n  bottom. (issue #34)\n- ProgressBar: Fixed visual artifacts in indeterminate mode, on HiDPI screens at\n  125%, 150% and 175% scaling, when the progress moves around.\n- TabbedPane: New option to allow tab separators to take full height (to enable\n  use `UIManager.put( \"TabbedPane.tabSeparatorsFullHeight\", true );`). (issue\n  #59, PR #62)\n- CheckBox and RadioButton: Do not fill background if `contentAreaFilled` is\n  `false`. (issue #58, PR #63)\n- ToggleButton: Make toggle button square if it has an icon but no text or text\n  is \"...\" or a single character.\n- ToolBar: No longer use special rollover border for buttons in toolbar. (issue\n  #36)\n- ToolBar: Added empty space around buttons in toolbar and toolbar itself (see\n  UI default values `Button.toolbar.spacingInsets` and `ToolBar.borderMargins`).\n  (issue #56)\n- Fixed \"illegal reflective access operation\" warning on macOS when using Java\n  12 or later. (issue #60, PR #61)\n\n\n## 0.26\n\n- Menus:\n  - Changed menu bar and popup menu background colors (made brighter in light\n    themes and darker in dark themes).\n  - Highlight items in menu bar on mouse hover. (issue #49)\n  - Popup menus now have empty space at the top and bottom.\n  - Menu items now have larger left and right margins.\n  - Made `JMenu`, `JMenuItem`, `JCheckBoxMenuItem` and `JRadioButtonMenuItem`\n    non-opaque.\n- TextField, FormattedTextField and PasswordField: Select all text when a text\n  field gains focus for the first time and selection was not set explicitly.\n  This can be configured to newer or always select all text on focus gain (see\n  UI default value `TextComponent.selectAllOnFocusPolicy`).\n- ProgressBar: Made progress bar paint smooth in indeterminate mode.\n\n\n## 0.25.1\n\nRe-release of 0.25 because of problems with Maven Central.\n\n\n## 0.25\n\n- Hide menu mnemonics by default and show them only when <kbd>Alt</kbd> key is\n  pressed. (issue #43)\n- Menu: Fixed vertical alignment of sub-menus. (issue #42)\n- TabbedPane: In scroll-tab-layout, the cropped line is now hidden. (issue #40)\n- Tree: UI default value `Tree.textBackground` now has a valid color and is no\n  longer `null`.\n- Tree on macOS: Fixed <kbd>Left</kbd> and <kbd>Right</kbd> keys to collapse or\n  expand nodes.\n- ComboBox on macOS: Fixed keyboard navigation and show/hide popup.\n- Button and ToggleButton: Support per component minimum height (set client\n  property `JComponent.minimumHeight` to an integer). (issue #44)\n- Button and ToggleButton: Do not apply minimum width if button border was\n  changed (is no longer an instance of `FlatButtonBorder`).\n- ToggleButton: Renamed toggle button type \"underline\" to \"tab\" (value of client\n  property `JButton.buttonType` is now `tab`).\n- ToggleButton: Support per component styling for tab-style toggle buttons with\n  client properties `JToggleButton.tab.underlineHeight` (integer),\n  `JToggleButton.tab.underlineColor` (Color) and\n  `JToggleButton.tab.selectedBackground` (Color). (issue #45)\n- ToggleButton: No longer use focus width for tab-style toggle buttons to\n  compute component size, which reduces/fixes component size in \"Flat IntelliJ\"\n  and \"Flat Darcula\" themes.\n- TabbedPane: Support per component tab height (set client property\n  `JTabbedPane.tabHeight` to an integer).\n- ProgressBar: Support square painting (set client property\n  `JProgressBar.square` to `true`) and larger height even if no string is\n  painted (set client property `JProgressBar.largeHeight` to `true`).\n\n\n## 0.24\n\n- Support smooth scrolling with touchpads and high precision mouse wheels.\n  (issue #27)\n- Changed `.properties` file loading order: Now all core `.properties` files are\n  loaded before loading addon `.properties` files. This makes it easier to\n  overwrite core values in addons. Also, addon loading order can be specified.\n- TableHeader: Paint column borders if renderer has changed, but delegates to\n  the system default renderer (e.g. done in NetBeans).\n- Label and ToolTip: Fixed font sizes for HTML headings.\n- Button and ToggleButton: Support square button style (set client property\n  `JButton.buttonType` to `square`).\n- ToggleButton: Support underline toggle button style (set client property\n  `JButton.buttonType` to `underline`).\n- Button and TextComponent: Support per component minimum width (set client\n  property `JComponent.minimumWidth` to an integer).\n- ScrollPane with Table: The border of buttons that are added to one of the four\n  scroll pane corners are now removed if the center component is a table. Also,\n  these corner buttons are made not focusable.\n- Table: Replaced `Table.showGrid` with `Table.showHorizontalLines` and\n  `Table.showVerticalLines`. (issue #38)\n- ProgressBar: Now uses blueish color for the progress part in \"Flat Dark\"\n  theme. In the \"Flat Darcula\" theme, it remains light gray.\n- Improved Swing system colors `controlHighlight`, `controlLtHighlight`,\n  `controlShadow` and `controlDkShadow`.\n\n\n## 0.23.1\n\n- Tree: Fixed wide selection if scrolled horizontally.\n- ComboBox: Fixed NPE in Oracle SQL Developer settings.\n- IntelliJ Themes: Fixed checkbox colors in Material UI Lite dark themes.\n\n\n## 0.23\n\n- Updated colors in \"Flat Light\" and \"Flat IntelliJ\" themes with colors from\n  \"IntelliJ Light Theme\", which provides blue coloring that better matches\n  platform colors.\n- Tree: Support wide selection (enabled by default).\n- Table: Hide grid and changed intercell spacing to zero.\n- List, Table and Tree: Added colors for drag-and-drop. Added \"enable drag and\n  drop\" checkbox to Demo on \"Data Components\" tab.\n- List and Tree: Hide cell focus indicator (black rectangle) by default. Can be\n  enabled with `List.showCellFocusIndicator=true` /\n  `Tree.showCellFocusIndicator=true`, but then the cell focus indicator is shown\n  only if more than one item is selected.\n- Table: Hide cell focus indicator (black rectangle) by default if none of the\n  selected cells is editable. Can be show always with\n  `Table.showCellFocusIndicator=true`.\n- Support basic color functions in `.properties` files: `rgb(red,green,blue)`,\n  `rgba(red,green,blue,alpha)`, `hsl(hue,saturation,lightness)`,\n  `hsla(hue,saturation,lightness,alpha)`, `lighten(color,amount[,options])` and\n  `darken(color,amount[,options])`.\n- Replaced prefix `@@` with `$` in `.properties` files.\n- Fixed link color (in HTML text) and separator color in IntelliJ platform\n  themes.\n- Use logging instead of printing errors to `System.err`.\n- Updated IntelliJ Themes in demo to the latest versions.\n- IntelliJ Themes: Fixed link and separator colors.\n\n\n## 0.22\n\n- TextComponent: Support placeholder text that is displayed if text field is\n  empty (set client property \"JTextField.placeholderText\" to a string).\n- TextComponent: Scale caret width on HiDPI screens when running on Java 8.\n- ProgressBar: If progress text is visible:\n  - use smaller font\n  - reduced height\n  - changed style to rounded rectangle\n  - fixed painting issues on low values\n- ProgressBar: Support configure of arc with `ProgressBar.arc`.\n- ProgressBar: Reduced thickness from 6 to 4.\n- TabbedPane: Support background color for selected tabs\n  (`TabbedPane.selectedBackground`) and separators between tabs\n  (`TabbedPane.showTabSeparators`).\n- CheckBox: changed `CheckBox.arc` from radius to diameter to be consistent with\n  `Button.arc` and `Component.arc`\n- Button: Enabled `Button.defaultButtonFollowsFocus` on Windows, which allows\n  pressing focused button with <kbd>Enter</kbd> key (as in Windows LaF).\n- Fixed clipped borders at 125%, 150% and 175% scaling when outer focus width is\n  zero (default in \"Flat Light\" and \"Flat Dark\" themes).\n- On Mac show mnemonics only when <kbd>Ctrl</kbd> and <kbd>Alt</kbd> keys are\n  pressed. (issue #4)\n\n\n## 0.21\n\n- ScrollBar: Show decrease/increase arrow buttons if client property\n  \"JScrollBar.showButtons\" is set to `true` on `JScrollPane` or `JScrollBar`.\n  (issue #25)\n- `FlatLaf.isNativeLookAndFeel()` now returns `false`.\n- Button: Optionally support gradient borders, gradient backgrounds and shadows\n  for improved compatibility with IntelliJ platform themes (e.g. for Vuesion,\n  Spacegray and Material Design Dark themes).\n- Button: Fixed help button styling in IntelliJ platform themes.\n- ScrollPane: Paint disabled border if view component (e.g. JTextPane) is\n  disabled.\n- Fixed Swing system colors in dark themes.\n\n\n## 0.20\n\n- Support using IntelliJ platform themes (.theme.json files).\n- Support `JFileChooser`. (issue #5)\n- Look and feel identifier returned by `FlatLaf.getID()` now always starts with\n  \"FlatLaf\". Use `UIManager.getLookAndFeel().getID().startsWith( \"FlatLaf\" )` to\n  check whether the current look and feel is FlatLaf.\n- Fixed selection background of checkbox in table cell.\n- Fixed color of links in HTML text.\n- Fixed jittery submenu rendering on Mac. (issue #10)\n- Fixed \"cannot find symbol\" error in NetBeans editor, when source/binary format\n  is set to JDK 9 (or later) in NetBeans project. (issue #13)\n- Button: Make button square if button text is \"...\" or a single character.\n- ComboBox: Fixed issues with NetBeans `org.openide.awt.ColorComboBox`\n  component.\n- Hex color values in `.properties` files now must start with a `#` character.\n- SwingX: Support `JXTitledPanel`. (issue #22)\n- SwingX: Fixed too wide border when using date picker as table cell editor.\n  (issue #24)\n- JIDE Common Layer: Fixed `JidePopup` border.\n\n\n## 0.18\n\n- TextField and TextArea: Do not apply minimum width if `columns` property is\n  greater than zero.\n- TabbedPane: In scroll-tab-layout, the separator line now spans the whole width\n  and is no longer interrupted by the scroll buttons.\n- TabbedPane: Content pane is no longer opaque. Use antialiasing for painting\n  separator and content border.\n- ToolTip: Use anti-aliasing to render multi-line tooltips.\n- JIDE Common Layer: Support `JideTabbedPane`.\n\n\n## 0.17\n\n- CheckBox: Support painting a third state (set client property\n  \"JButton.selectedState\" to \"indeterminate\").\n- `TriStateCheckBox` component added (see [FlatLaf Extras](flatlaf-extras)).\n- Made `JComboBox`, `JProgressBar`, `JSpinner` and `JXDatePicker` non-opaque.\n  `JPasswordField`, `JScrollPane` and `JTextField` are non-opaque if they have\n  an outside focus border (e.g. IntelliJ and Darcula themes). (issues #20 and\n  #17)\n- Button: Hover and pressed background colors are now derived from actual button\n  background color. (issue #21)\n- Table: Fixed missing upper right corner (e.g. in SwingX JXTable with column\n  control visible).\n\n\n## 0.16\n\n- Made some fixes for right-to-left support in ComboBox, Slider and ToolTip.\n  (issue #18)\n- Fixed Java 9 module descriptor (broken since 0.14).\n- Made `JButton`, `JCheckBox`, `JRadioButton`, `JToggleButton` and `JSlider`\n  non-opaque. (issue #20)\n\n\n## 0.15\n\n- ToolTip: Improved styling of dark tooltips (darker background, no border).\n- ToolTip: Fixed colors in tooltips of disabled components. (issue #15)\n- ComboBox: Fixed NPE in combobox with custom renderer after switching to\n  FlatLaf. (issue #16; regression in 0.14)\n\n\n## 0.14\n\n- ComboBox: Use small border if used as table editor.\n- ToolBar: Disable focusability of buttons in toolbar.\n- OptionPane: Fixed rendering of longer HTML text. (issue #12)\n- EditorPane and TextPane: Fixed font and text color when using HTML content.\n  (issue #9)\n- ComboBox: Fixed `StackOverflowError` when switching LaF. (issue #14)\n- SwingX: Support `JXBusyLabel`, `JXDatePicker`, `JXHeader`, `JXHyperlink`,\n  `JXMonthView`, `JXTaskPaneContainer` and `JXTaskPane`. (issue #8)\n\n\n## 0.13\n\n- Added developer information to Maven POM for Maven Central publishing.\n\n\n## 0.12\n\n- Support Linux. (issue #2)\n- Added `Flat*Laf.install()` methods.\n- macOS: Use native screen menu bar if system property\n  `apple.laf.useScreenMenuBar` is `true`.\n- Windows: Update fonts (and scaling) when user changes Windows text size\n  (Settings > Ease of Access > Display > Make text bigger).\n\n\n## 0.11\n\n- Changed Maven groupId to `com.formdev` and artifactId to `flatlaf`.\n\n\n## 0.10\n\n- Use new chevron arrows in \"Flat Light\" and \"Flat Dark\" themes, but keep\n  triangle arrows in \"Flat IntelliJ\" and \"Flat Darcula\" themes. (issue #7)\n- Use bold font for default buttons in \"Flat IntelliJ\" and \"Flat Darcula\"\n  themes.\n- Hide label, button and tab mnemonics by default and show them only when\n  <kbd>Alt</kbd> is pressed. (issue #4)\n- If a JButton has an icon and no text, then it does not get a minimum width\n  (usually 72 pixel) and the left and right insets are same as top/bottom insets\n  so that it becomes square (if the icon is square).\n- Changed styling of default button in \"Flat Light\" theme (wide blue border\n  instead of blue background).\n- Added Java 9 module descriptor `module-info.class` to `flatlaf.jar` (in\n  `META-INF/versions/9`). But FlatLaf remains Java 8 compatible. (issue #1)\n- Support specifying custom scale factor in system properties `flatlaf.uiScale`\n  or `sun.java2d.uiScale`. E.g. `-Dflatlaf.uiScale=1.5`. (Java 8 only)\n\n\n## 0.9\n\n- Initial release\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.06640625,
          "content": "FlatLaf - Flat Look and Feel\n============================\n\n**FlatLaf** is a modern **open-source** cross-platform Look and Feel for Java\nSwing desktop applications.\n\nIt looks almost flat (no shadows or gradients), clean, simple and elegant.\nFlatLaf comes with **Light**, **Dark**, **IntelliJ** and **Darcula** themes,\nscales on **HiDPI** displays and runs on Java 8 or newer (LTS and latest).\n\nThe look is heavily inspired by **Darcula** and **IntelliJ** themes from\nIntelliJ IDEA 2019.2+ and uses almost the same colors and icons.\n\n![FlatLaf Light](images/flat_light.png)\n\n![FlatLaf Dark](images/flat_dark.png)\n\nmacOS Themes\n------------\n\n![FlatLaf macOS themes](images/flat_macos_themes.png)\n\n\nIntelliJ Platform Themes\n------------------------\n\nFlatLaf can use 3rd party themes created for IntelliJ Platform (see\n[IntelliJ Themes Pack](flatlaf-intellij-themes)):\n\n![IntelliJ Platform Themes](images/intellij_platform_themes.png)\n\n\nSponsors\n--------\n\n### Current Sponsors\n\n<a href=\"https://exocharts.com/\"><img src=\"https://www.formdev.com/flatlaf/sponsor/Exocharts.png\" width=\"200\" alt=\"Exocharts\" title=\"Exocharts - Professional Grade OrderFlow\"></a>\n\n<!-- [![None Sponsors](images/none-sponsors.png)](https://www.formdev.com/flatlaf/sponsor/) -->\n\n[Become a Sponsor](https://www.formdev.com/flatlaf/sponsor/)\n\n### Previous Sponsors\n\n<a href=\"https://www.ej-technologies.com/\"><img src=\"https://www.formdev.com/flatlaf/sponsor/ej-technologies.png\" width=\"200\" alt=\"ej-technologies\" title=\"ej-technologies - Java APM, Java Profiler, Java Installer Builder\"></a>\n&nbsp; &nbsp; &nbsp; &nbsp;\n<a href=\"https://www.dbvis.com/\"><img src=\"https://www.formdev.com/flatlaf/sponsor/dbvisualizer.svg\" width=\"200\" alt=\"DbVisualizer\" title=\"DbVisualizer - SQL Client and Editor\"></a>\n&nbsp; &nbsp; &nbsp; &nbsp;\n<a href=\"https://www.dscsag.com/\"><img src=\"https://www.formdev.com/flatlaf/sponsor/DSC.png\" height=\"48\" alt=\"DSC Software AG\" title=\"DSC Software AG - Your Companion for Integrative PLM\"></a>\n\nDemo\n----\n\n[![Download Demo](https://download.formdev.com/flatlaf/images/download-demo.svg)](https://download.formdev.com/flatlaf/flatlaf-demo-latest.jar)\n\nRun demo with `java -jar flatlaf-demo-<version>.jar` (or double-click it).\nRequires Java 8 or newer.\n\n\nDownload\n--------\n\nFlatLaf binaries are available on **Maven Central**.\n\nIf you use Maven or Gradle, add a dependency with following coordinates to your\nbuild script:\n\n    groupId:     com.formdev\n    artifactId:  flatlaf\n    version:     (see button below)\n\nOtherwise, download `flatlaf-<version>.jar` here:\n\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.formdev/flatlaf/badge.svg?style=flat-square&color=007ec6)](https://maven-badges.herokuapp.com/maven-central/com.formdev/flatlaf)\n\nSee also\n[Native Libraries distribution](https://www.formdev.com/flatlaf/native-libraries/)\nfor instructions on how to redistribute FlatLaf native libraries with your\napplication.\n\n\n### Snapshots\n\nFlatLaf snapshot binaries are available on\n[Sonatype OSSRH](https://oss.sonatype.org/content/repositories/snapshots/com/formdev/flatlaf/).\nTo access the latest snapshot, change the FlatLaf version in your dependencies\nto `<version>-SNAPSHOT` (e.g. `0.27-SNAPSHOT`) and add the repository\n`https://oss.sonatype.org/content/repositories/snapshots/` to your build (see\n[Maven](https://maven.apache.org/guides/mini/guide-multiple-repositories.html)\nand\n[Gradle](https://docs.gradle.org/current/userguide/declaring_repositories.html#sec:declaring_custom_repository)\ndocs).\n\n\nAddons\n------\n\n- [IntelliJ Themes Pack](flatlaf-intellij-themes) - bundles many popular\n  open-source 3rd party themes\n- [Extras](flatlaf-extras) - SVG icon, tri-state check box, UI inspectors, and\n  more\n- [SwingX](flatlaf-swingx) - support for SwingX components\n- [JIDE Common Layer](flatlaf-jide-oss) - support for JIDE Common Layer\n  components\n- [Fonts](flatlaf-fonts) - some font families bundled in easy-to-use and\n  redistributable JARs\n\n\nGetting started\n---------------\n\nTo use FlatLaf, add following code to your main method before you create any\nSwing component:\n\n~~~java\nFlatLightLaf.setup();\n\n// create UI here...\n~~~\n\n\nDocumentation\n-------------\n\nFor more information and documentation visit\n[FlatLaf Home](https://www.formdev.com/flatlaf/):\n\n- [Themes](https://www.formdev.com/flatlaf/themes/)\n- [Customizing](https://www.formdev.com/flatlaf/customizing/)\n- [How to Customize](https://www.formdev.com/flatlaf/how-to-customize/)\n- [Properties Files](https://www.formdev.com/flatlaf/properties-files/)\n- [Components UI Properties](https://www.formdev.com/flatlaf/components/)\n- [Typography](https://www.formdev.com/flatlaf/typography/)\n- [Client Properties](https://www.formdev.com/flatlaf/client-properties/)\n- [System Properties](https://www.formdev.com/flatlaf/system-properties/)\n\n\nTheme Editor\n------------\n\nThe Theme Editor that supports editing FlatLaf theme properties files. See\n[Theme Editor documentation](https://www.formdev.com/flatlaf/theme-editor/) for\ndetails and downloads.\n\n![Theme Editor](images/theme-editor@1.5x.png)\n\n\nBuzz\n----\n\n- [FlatLaf 3.1 (and 3.0) announcement on Reddit](https://www.reddit.com/r/java/comments/12xgrsu/flatlaf_31_and_30_swing_look_and_feel/)\n- [FlatLaf 1.0 announcement on Reddit](https://www.reddit.com/r/java/comments/lsbcwe/flatlaf_10_swing_look_and_feel/)\n- [FlatLaf announcement on Reddit](https://www.reddit.com/r/java/comments/dl0hu3/flatlaf_flat_look_and_feel/)\n\n\nApplications using FlatLaf\n--------------------------\n\n### Featured\n\n- ![Sponsor](images/sponsor.svg) [JFormDesigner](https://www.formdev.com/)\n  (**commercial**) - Java/Swing GUI Designer (from the FlatLaf creators)\n- ![Sponsor](images/sponsor.svg)\n  [JProfiler](https://www.ej-technologies.com/products/jprofiler/overview.html)\n  (**commercial**) - the award-winning all-in-one Java profiler\n- ![Sponsor](images/sponsor.svg)\n  [install4j](https://www.ej-technologies.com/products/install4j/overview.html)\n  (**commercial**) - the powerful multi-platform Java installer builder\n- ![Sponsor](images/sponsor.svg) [DbVisualizer](https://www.dbvis.com/)\n  (**commercial**) - the universal database tool for developers, analysts and\n  DBAs\n- ![Hot](images/hot.svg) [Apache NetBeans](https://netbeans.apache.org/) - IDE\n  for Java, PHP, HTML and much more\n- ![Sponsor](images/sponsor.svg)\n  [Thermo-Calc](https://thermocalc.com/products/thermo-calc/) (**commercial**) -\n  Thermodynamics and Properties Software\n\n### Data\n\n- ![Hot](images/hot.svg) [Ultorg](https://www.ultorg.com/) (**commercial**) - a\n  visual query system for relational databases\n- [Jailer](https://github.com/Wisser/Jailer) - database subsetting and\n  relational data browsing tool\n- ![Hot](images/hot.svg) [MagicPlot](https://magicplot.com/) (**commercial**) -\n  Software for nonlinear fitting, plotting and data analysis\n- ![New](images/new.svg) [Constellation](https://www.constellation-app.com/) -\n  Data Visualization and Analytics (based on NetBeans platform)\n- ![New](images/new.svg)\n  [Kafka Visualizer](https://github.com/kumait/kafkavisualizer) - Kafka GUI\n  client\n\n### Security\n\n- ![Hot](images/hot.svg) [ZAP](https://www.zaproxy.org/) - the world's most\n  widely used web app scanner\n- ![Hot](images/hot.svg)\n  [Burp Suite Professional and Community Edition](https://portswigger.net/burp/pro)\n  (**commercial**) - the leading software for web security testing\n- ![New](images/new.svg)\n  [Ghidra](https://github.com/NationalSecurityAgency/ghidra) - a software\n  reverse engineering (SRE) framework\n- ![New](images/new.svg) [jadx](https://github.com/skylot/jadx) - Dex to Java\n  decompiler\n- [BurpCustomizer](https://github.com/CoreyD97/BurpCustomizer) - adds more\n  FlatLaf themes to Burp Suite\n- [Total Validator](https://www.totalvalidator.com/) (**commercial**) - checks\n  your website\n- [JPass](https://github.com/gaborbata/jpass) - password manager with strong\n  encryption\n\n### Software Development\n\n- [jclasslib bytecode viewer](https://github.com/ingokegel/jclasslib)\n- [KeyStore Explorer](https://keystore-explorer.org/)\n- ![New](images/new.svg)\n  [muCommander](https://github.com/mucommander/mucommander) - lightweight\n  cross-platform file manager\n- ![New](images/new.svg) [Guiffy](https://www.guiffy.com/) (**commercial**) -\n  advanced cross-platform Diff/Merge\n- ![New](images/new.svg) [HashGarten](https://github.com/jonelo/HashGarten) -\n  cross-platform Swing GUI for Jacksum\n- [Pseudo Assembler IDE](https://github.com/tomasz-herman/PseudoAssemblerIDE) -\n  IDE for Pseudo-Assembler\n- [Linotte](https://github.com/cpc6128/LangageLinotte) - French programming\n  language created to learn programming\n- [lsfusion platform](https://github.com/lsfusion/platform) - information\n  systems development platform\n\n### Electrical\n\n- [Antares](https://www.antarescircuit.io/) - a free, powerful platform for\n  designing, simulating and explaining digital circuits\n- [Logisim-evolution](https://github.com/logisim-evolution/logisim-evolution) -\n  Digital logic design tool and simulator\n- [Makelangelo Software](https://github.com/MarginallyClever/Makelangelo-software) -\n  for plotters, especially the wall-hanging polargraph\n- [GUIslice Builder](https://github.com/ImpulseAdventure/GUIslice-Builder) - GUI\n  builder for [GUIslice](https://github.com/ImpulseAdventure/GUIslice), a\n  lightweight GUI framework for embedded displays\n- [ThunderFocus](https://github.com/marcocipriani01/ThunderFocus) -\n  Arduino-based telescope focuser\n- [RemoteLight](https://github.com/Drumber/RemoteLight) - multifunctional LED\n  control software\n\n### Media\n\n- ![Hot](images/hot.svg) [jAlbum](https://jalbum.net/) (**commercial**) -\n  creates photo album websites\n- ![New](images/new.svg) [MediathekView](https://mediathekview.de/) - search in\n  media libraries of various German broadcasters\n- [Cinecred](https://loadingbyte.com/cinecred/) - create beautiful film credit\n  sequences\n- [tinyMediaManager](https://www.tinymediamanager.org/) (**commercial**) - a\n  media management tool\n- [Weasis](https://nroduit.github.io/) - medical DICOM viewer used in healthcare\n  by hospitals, health networks, etc\n- [Shutter Encoder](https://www.shutterencoder.com/)\n  ([source code](https://github.com/paulpacifico/shutter-encoder)) -\n  professional video converter and compression tool\n- [Sound Analysis](https://github.com/tomasz-herman/SoundAnalysis) - analyze\n  sound files in time or frequency domain\n- [Novel-Grabber](https://github.com/Flameish/Novel-Grabber) - download novels\n  from any webnovel and lightnovel site\n- [lectureStudio](https://www.lecturestudio.org/) - digitize your lectures with\n  ease\n\n### Modelling\n\n- ![New](images/new.svg) [Astah](https://astah.net/) (**commercial**) - create\n  UML, ER Diagram, Flowchart, Data Flow Diagram, Requirement Diagram, SysML\n  diagrams and more\n- [IGMAS+](https://www.gfz-potsdam.de/igmas) - Interactive Gravity and Magnetic\n  Application System\n\n### Documents\n\n- ![New](images/new.svg) [Big Faceless (BFO) PDF Viewer](https://bfo.com/)\n  (**commercial**) - Swing PDF Viewer\n- [PDF Studio](https://www.qoppa.com/pdfstudio/) (**commercial**) - create,\n  review and edit PDF documents\n- [XMLmind XML Editor](https://www.xmlmind.com/xmleditor/) (**commercial**)\n\n### Geo\n\n- ![Hot](images/hot.svg) [JOSM](https://josm.openstreetmap.de/) - an extensible\n  editor for [OpenStreetMap](https://www.openstreetmap.org/) (requires FlatLaf\n  JOSM plugin)\n- [Mapton](https://mapton.org/)\n  ([source code](https://github.com/trixon/mapton)) - some kind of map\n  application (based on NetBeans platform)\n- [MeteoInfo](https://github.com/meteoinfo/MeteoInfo) - GIS and scientific\n  computation environment for meteorological community\n\n### Business / Legal\n\n- ![Sponsor](images/sponsor.svg)\n  [j-lawyer](https://github.com/jlawyerorg/j-lawyer-org) - Kanzleisoftware\n- ![Sponsor](images/sponsor.svg) [Jeyla Studio](https://www.jeylastudio.com/) -\n  Salon Software\n- [Fanurio](https://www.fanuriotimetracking.com/) (**commercial**) - time\n  tracking and billing for freelancers and teams\n- [Jes](https://www.jes-eur.de) - Die Java-EÜR\n- [mendelson AS2](https://sourceforge.net/projects/mec-as2/),\n  [AS4](https://sourceforge.net/projects/mendelson-as4/) and\n  [OFTP2](https://sourceforge.net/projects/mendelson-oftp2/) (open-source) and\n  [mendelson AS2](https://mendelson-e-c.com/as2/),\n  [AS4](https://mendelson-e-c.com/as4/) and\n  [OFTP2](https://mendelson-e-c.com/oftp2) (**commercial**)\n\n### Messaging\n\n- ![New](images/new.svg) [Spark](https://github.com/igniterealtime/Spark) -\n  cross-platform IM client optimized for businesses and organizations\n- ![New](images/new.svg) [Chatty](https://github.com/chatty/chatty) - Twitch\n  Chat Client\n\n### Gaming\n\n- ![New](images/new.svg) ![Sponsor](images/sponsor.svg)\n  [BGBlitz](https://www.bgblitz.com/) (**commercial**) - professional Backgammon\n- ![New](images/new.svg) [MCreator](https://github.com/MCreator/MCreator) - \n  software used to make Minecraft Java Edition mods, Minecraft Bedrock Edition Add-Ons, \n  and data packs without programming knowledge\n- ![New](images/new.svg) [MapTool](https://github.com/RPTools/maptool) - virtual\n  Tabletop for playing role-playing games\n- [MegaMek](https://github.com/MegaMek/megamek),\n  [MegaMekLab](https://github.com/MegaMek/megameklab) and\n  [MekHQ](https://github.com/MegaMek/mekhq) - a sci-fi tabletop BattleTech\n  simulator suite handling battles, unit building, and campaigns\n- [ControllerBuddy](https://github.com/bwRavencl/ControllerBuddy) - advanced\n  gamepad mapping software\n\n### Utilities\n\n- [MooInfo](https://github.com/rememberber/MooInfo) - visual implementation of\n  OSHI, to view information about the system and hardware\n- ![New](images/new.svg)\n  [Linux Task Manager (LTM)](https://github.com/ajee10x/LTM-LinuxTaskManager) -\n  GUI for monitoring and managing various aspects of a Linux system\n- [Rest Suite](https://github.com/supanadit/restsuite) - Rest API testing\n- [SpringRemote](https://github.com/HaleyWang/SpringRemote) - remote Linux SSH\n  connections manager\n- [jEnTunnel](https://github.com/ggrandes/jentunnel) - manage SSH Tunnels made\n  easy\n- [Android Tool](https://github.com/fast-geek/Android-Tool) - makes popular adb\n  and fastboot commands easier to use\n\n### Miscellaneous\n\n- [MEKA](https://github.com/Waikato/meka) - multi-label classifiers and\n  evaluation procedures using the Weka machine learning framework\n"
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 4.3583984375,
          "content": "/*\n * Copyright 2019 FormDev Software GmbH\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport net.ltgt.gradle.errorprone.errorprone\n\nversion = property( if( hasProperty( \"release\" ) ) \"flatlaf.releaseVersion\" else \"flatlaf.developmentVersion\" ) as String\n\n// for PR snapshots change version to 'PR-<pr_number>-SNAPSHOT'\nval pullRequestNumber = findProperty( \"github.event.pull_request.number\" )\nif( pullRequestNumber != null )\n\tversion = \"PR-${pullRequestNumber}-SNAPSHOT\"\n\n\nallprojects {\n\tversion = rootProject.version\n\n\trepositories {\n\t\tmavenCentral()\n\t}\n}\n\n// check required Java version\nif( JavaVersion.current() < JavaVersion.VERSION_1_8 )\n\tthrow RuntimeException( \"Java 8 or later required (running ${System.getProperty( \"java.version\" )})\" )\n\n// log version, Gradle and Java versions\nprintln()\nprintln( \"-------------------------------------------------------------------------------\" )\nprintln( \"FlatLaf Version: ${version}\" )\nprintln( \"Gradle ${gradle.gradleVersion} at ${gradle.gradleHomeDir}\" )\nprintln( \"Java ${System.getProperty( \"java.version\" )}\" )\nval toolchainJavaVersion = System.getProperty( \"toolchain\" )\nif( !toolchainJavaVersion.isNullOrEmpty() )\n\tprintln( \"Java toolchain ${toolchainJavaVersion}\" )\nprintln()\n\n\nplugins {\n\talias( libs.plugins.errorprone ) apply false\n}\n\nallprojects {\n\ttasks {\n\t\twithType<JavaCompile>().configureEach {\n\t\t\tsourceCompatibility = \"1.8\"\n\t\t\ttargetCompatibility = \"1.8\"\n\n\t\t\toptions.encoding = \"ISO-8859-1\"\n\t\t\toptions.isDeprecation = false\n\t\t}\n\n\t\twithType<Jar>().configureEach {\n\t\t\t// manifest for all created JARs\n\t\t\tmanifest.attributes(\n\t\t\t\t\"Implementation-Vendor\" to \"FormDev Software GmbH\",\n\t\t\t\t\"Implementation-Copyright\" to \"Copyright (C) 2019-${java.time.LocalDate.now().year} FormDev Software GmbH. All rights reserved.\",\n\t\t\t\t\"Implementation-Version\" to project.version\n\t\t\t)\n\n\t\t\t// add META-INF/LICENSE to all created JARs\n\t\t\tfrom( \"${rootDir}/LICENSE\" ) {\n\t\t\t\tinto( \"META-INF\" )\n\t\t\t}\n\t\t}\n\n\t\twithType<Javadoc>().configureEach {\n\t\t\toptions {\n\t\t\t\tthis as StandardJavadocDocletOptions\n\n\t\t\t\ttitle = \"${project.name} $version\"\n\t\t\t\theader = title\n\t\t\t\tisUse = true\n\t\t\t\ttags = listOf( \"uiDefault\", \"clientProperty\" )\n\t\t\t\taddStringOption( \"Xdoclint:all,-missing\", \"-Xdoclint:all,-missing\" )\n\t\t\t\tlinks( \"https://docs.oracle.com/en/java/javase/11/docs/api/\" )\n\t\t\t}\n\t\t\tisFailOnError = false\n\t\t}\n\t}\n\n\n\t//---- Error Prone ----\n\n\ttasks.register( \"errorprone\" ) {\n\t\tgroup = \"verification\"\n\t\ttasks.withType<JavaCompile>().forEach {\n\t\t\tdependsOn( it )\n\t\t}\n\t}\n\n\tval useErrorProne = gradle.startParameter.taskNames.contains( \"errorprone\" )\n\tif( useErrorProne ) {\n\t\tplugins.withType<JavaPlugin> {\n\t\t\tapply( plugin = libs.plugins.errorprone.get().pluginId )\n\n\t\t\tdependencies {\n\t\t\t\t\"errorprone\"( libs.errorprone )\n\t\t\t}\n\n\t\t\ttasks.withType<JavaCompile>().configureEach {\n\t\t\t\toptions.compilerArgs.add( \"-Werror\" )\n\t\t\t\toptions.errorprone {\n\t\t\t\t\tdisable(\n\t\t\t\t\t\t\"ReferenceEquality\",\t// reports usage of '==' for objects\n\t\t\t\t\t\t\"StringSplitter\",\t\t// reports String.split()\n\t\t\t\t\t\t\"JavaTimeDefaultTimeZone\",\t// reports Year.now()\n\t\t\t\t\t\t\"MissingSummary\",\t\t// reports `/** @since 2 */`\n\t\t\t\t\t\t\"InvalidBlockTag\",\t\t// reports @uiDefault in javadoc\n\t\t\t\t\t\t\"AlreadyChecked\",\t\t// reports false positives\n\t\t\t\t\t\t\"InlineMeSuggester\",\t// suggests using Error Prone annotations for deprecated methods\n\t\t\t\t\t\t\"TypeParameterUnusedInFormals\",\n\t\t\t\t\t\t\"UnsynchronizedOverridesSynchronized\",\n\t\t\t\t\t\t\"NonApiType\",\t\t\t// reports ArrayList/HashSet in parameter or return type\n\t\t\t\t\t)\n\t\t\t\t\twhen( project.name ) {\n\t\t\t\t\t\t\"flatlaf-intellij-themes\" -> disable(\n\t\t\t\t\t\t\t\"MutablePublicArray\",\t// reports FlatAllIJThemes.INFOS\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\"flatlaf-theme-editor\" -> disable(\n\t\t\t\t\t\t\t\"CatchAndPrintStackTrace\",\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\"flatlaf-testing\" -> disable(\n\t\t\t\t\t\t\t\"CatchAndPrintStackTrace\",\n\t\t\t\t\t\t\t\"JdkObsolete\",\t\t\t// reports Hashtable used for JSlider.setLabelTable()\n\t\t\t\t\t\t\t\"JavaUtilDate\",\t\t\t// reports usage of class Date\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatlaf-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatlaf-demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatlaf-extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatlaf-fonts",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatlaf-intellij-themes",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatlaf-jide-oss",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatlaf-natives",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatlaf-swingx",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatlaf-testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "flatlaf-theme-editor",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.7109375,
          "content": "#\n# Copyright 2023 FormDev Software GmbH\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nflatlaf.releaseVersion     = 3.5.4\nflatlaf.developmentVersion = 3.6-SNAPSHOT\n\norg.gradle.parallel = true\n# org.gradle.warning.mode = all\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.5576171875,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8046875,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 1.9140625,
          "content": "/*\n * Copyright 2019 FormDev Software GmbH\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nrootProject.name = \"FlatLaf\"\n\ninclude( \"flatlaf-core\" )\ninclude( \"flatlaf-extras\" )\ninclude( \"flatlaf-swingx\" )\ninclude( \"flatlaf-jide-oss\" )\ninclude( \"flatlaf-intellij-themes\" )\ninclude( \"flatlaf-demo\" )\ninclude( \"flatlaf-testing\" )\ninclude( \"flatlaf-theme-editor\" )\n\nincludeProject( \"flatlaf-fonts-inter\",          \"flatlaf-fonts/flatlaf-fonts-inter\" )\nincludeProject( \"flatlaf-fonts-jetbrains-mono\", \"flatlaf-fonts/flatlaf-fonts-jetbrains-mono\" )\nincludeProject( \"flatlaf-fonts-roboto\",         \"flatlaf-fonts/flatlaf-fonts-roboto\" )\nincludeProject( \"flatlaf-fonts-roboto-mono\",    \"flatlaf-fonts/flatlaf-fonts-roboto-mono\" )\n\nincludeProject( \"flatlaf-natives-windows\", \"flatlaf-natives/flatlaf-natives-windows\" )\nincludeProject( \"flatlaf-natives-macos\",   \"flatlaf-natives/flatlaf-natives-macos\" )\nincludeProject( \"flatlaf-natives-linux\",   \"flatlaf-natives/flatlaf-natives-linux\" )\nincludeProject( \"flatlaf-natives-jna\",     \"flatlaf-natives/flatlaf-natives-jna\" )\n\nincludeProject( \"flatlaf-testing-modular-app\", \"flatlaf-testing/flatlaf-testing-modular-app\" )\n\nfun includeProject( projectPath: String, projectDir: String ) {\n\tinclude( projectPath )\n\tproject( \":$projectPath\" ).projectDir = file( projectDir )\n}\n\n\n// for using newer Java version via toolchain\nplugins {\n\tid( \"org.gradle.toolchains.foojay-resolver-convention\" ) version( \"0.5.0\" )\n}\n"
        }
      ]
    }
  ]
}