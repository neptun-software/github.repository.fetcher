{
  "metadata": {
    "timestamp": 1736609033431,
    "page": 270,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Ereza/CustomActivityOnCrash",
      "stars": 3740,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.07421875,
          "content": "build\n*/build\n*/*.iml\n*.iml\nlocal.properties\n.idea\n.idea/**\n.gradle\n*.hprof\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.21875,
          "content": "Custom Activity on Crash library\nCopyright (c) 2014-2017 Eduard Ereza, http://www.eduardereza.com/\n\nThis product is licensed under the terms of the Apache Software License 2.0. See the LICENSE file for the full license text."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.072265625,
          "content": "# Custom Activity On Crash library\n\nThis library allows launching a custom activity when the app crashes, instead of showing the hated \"Unfortunately, X has stopped\" dialog.\n\n![](https://github.com/Ereza/CustomActivityOnCrash/blob/master/images/frontpage.png)\n\n## How to use\n\n### One-step install\n\nAdd the following dependency to your build.gradle:\n```gradle\ndependencies {\n    implementation 'cat.ereza:customactivityoncrash:2.4.0'\n}\n```\n\n...and you are done!\n\n**You can combine this library with other crash handlers such as Firebase Crashlytics or ACRA.**\n\nIf you are using Firebase Crashlytics, you **must** call `FirebaseApp.initializeApp(this);` inside `onCreate` in your `Application` class.\n\nIf you are using ACRA, you **must** initialize it inside `onCreate` in your `Application` class, instead of `attachBaseContext`, and enable `alsoReportToAndroidFramework`, otherwise, CustomActivityOnCrash will not work.\n\n### Try it\n\nForce an app crash by throwing an uncaught exception, using something like this in your code:\n```java\nthrow new RuntimeException(\"Boom!\");\n```\n\n### Advanced setup\n\nYou can customize the behavior of this library in several ways by setting its configuration at any moment.\nHowever, it's recommended to do it on your `Application` class so it becomes available as soon as possible.\n\nAdd a snippet like this to your `Application` class:\n```java\n@Override\npublic void onCreate() {\n    super.onCreate();\n\n    CaocConfig.Builder.create()\n        .backgroundMode(CaocConfig.BACKGROUND_MODE_SILENT) //default: CaocConfig.BACKGROUND_MODE_SHOW_CUSTOM\n        .enabled(false) //default: true\n        .showErrorDetails(false) //default: true\n        .showRestartButton(false) //default: true\n        .logErrorOnRestart(false) //default: true\n        .trackActivities(true) //default: false\n        .minTimeBetweenCrashesMs(2000) //default: 3000\n        .errorDrawable(R.drawable.ic_custom_drawable) //default: bug image\n        .restartActivity(YourCustomActivity.class) //default: null (your app's launch activity)\n        .errorActivity(YourCustomErrorActivity.class) //default: null (default error activity)\n        .eventListener(new YourCustomEventListener()) //default: null\n        .customCrashDataCollector(new YourCustomCrashDataCollector()) //default: null\n        .apply();\n\n    //If you use Firebase Crashlytics or ACRA, please initialize them here as explained above.\n}\n```\n\n## Customization options\n\n### Custom behavior\n\n**Here is a more detailed explanation of each option that can be set using `CaocConfig.Builder`:**\n\n```java\nlaunchWhenInBackground(int);\n```\n> This method defines if the error activity should be launched when the app crashes while on background.\n> There are three modes:\n> - `CaocConfig.BACKGROUND_MODE_SHOW_CUSTOM`: launch the error activity even if the app is in background.\n> - `CaocConfig.BACKGROUND_MODE_CRASH`: launch the default system error when the app is in background.\n> - `CaocConfig.BACKGROUND_MODE_SILENT`: crash silently when the app is in background.\n>\n> The default is `CaocConfig.BACKGROUND_MODE_SHOW_CUSTOM`.\n\n```java\nenabled(boolean);\n```\n> Defines if CustomActivityOnCrash crash interception mechanism is enabled.\n> Set it to `true` if you want CustomActivityOnCrash to intercept crashes,\n> `false` if you want them to be treated as if the library was not installed.\n> This can be used to enable or disable the library depending on flavors or buildTypes.\n> The default is `true`.\n\n```java\nshowErrorDetails(boolean);\n```\n> This method defines if the error activity must show a button with error details.\n> If you set it to `false`, the button on the default error activity will disappear, thus disabling the user from seeing the stack trace.\n> The default is `true`.\n\n```java\ntrackActivities(boolean);\n```\n> This method defines if the library must track the activities the user visits and their lifecycle calls.\n> This is displayed on the default error activity as part of the error details.\n> The default is `false`.\n\n```java\nshowRestartButton(boolean);\n```\n> This method defines if the error activity must show a \"Restart app\" button or a \"Close app\" button.\n> If you set it to `false`, the button on the default error activity will close the app instead of restarting.\n> If you set it to `true` and your app has no launch activity, it will still display a \"Close app\" button!\n> The default is `true`.\n\n```java\nlogErrorOnRestart(boolean);\n```\n> This controls if the stack trace must be relogged when the custom error activity is launched.\n> This functionality exists because the Android Studio default Logcat view only shows the output for the\n> current process. This makes it easier to see the stack trace of the crash. You can disable it if you\n> don't want an extra log.\n> The default is `true`.\n\n```java\nminTimeBetweenCrashesMs(boolean);\n```\n> Defines the time that must pass between app crashes to determine that we are not in a crash loop.\n> If a crash has occurred less that this time ago, the error activity will not be launched and the system\n> crash screen will be invoked.\n> The default is `3000`.\n\n```java\nerrorDrawable(Integer);\n```\n> This method allows changing the default upside-down bug image with an image of your choice.\n> You can pass a resource id for a drawable or a mipmap.\n> The default is `null` (the bug image is used).\n\n```java\nrestartActivity(Class<? extends Activity>);\n```\n> This method sets the activity that must be launched by the error activity when the user presses the button to restart the app.\n> If you don't set it (or set it to null), the library will use the first activity on your manifest that has an intent-filter with action\n> `cat.ereza.customactivityoncrash.RESTART`, and if there is none, the default launchable activity on your app.\n> If no launchable activity can be found and you didn't specify any, the \"restart app\" button will become a \"close app\" button,\n> even if `showRestartButton` is set to `true`.\n>\n> As noted, you can also use the following intent-filter to specify the restart activity:\n> ```xml\n> <intent-filter>\n>     <!-- ... -->\n>     <action android:name=\"cat.ereza.customactivityoncrash.RESTART\" />\n> </intent-filter>\n> ```\n\n```java\nerrorActivity(Class<? extends Activity>);\n```\n> This method allows you to set a custom error activity to be launched, instead of the default one.\n> Use it if you need further customization that is not just strings, colors or themes (see below).\n> If you don't set it (or set it to null), the library will use the first activity on your manifest that has an intent-filter with action\n> `cat.ereza.customactivityoncrash.ERROR`, and if there is none, a default error activity from the library.\n> If you use this, the activity **must** be declared in your `AndroidManifest.xml`, with `process` set to `:error_activity`.\n>\n> Example:\n> ```xml\n> <activity\n>     android:name=\"cat.ereza.customactivityoncrash.sample.CustomErrorActivity\"\n>     android:label=\"@string/error_title\"\n>     android:process=\":error_activity\" />\n> ```\n>\n> As noted, you can also use the following intent-filter to specify the error activity:\n> ```xml\n> <intent-filter>\n>     <!-- ... -->\n>     <action android:name=\"cat.ereza.customactivityoncrash.ERROR\" />\n> </intent-filter>\n> ```\n\n```java\neventListener(EventListener);\n```\n> This method allows you to specify an event listener in order to get notified when the library shows the error activity, restarts or closes the app.\n> The EventListener you provide can not be an anonymous or non-static inner class, because it needs to be serialized by the library. The library will throw an exception if you try to set an invalid class.\n> If you set it to `null`, no event listener will be invoked.\n> The default is `null`.\n\n```java\ncustomCrashDataCollector(CustomCrashDataCollector);\n```\n> This method allows you to specify a custom crash data collector that will be invoked when a crash occurs.\n> This additional data will be added to the \"error details\" view on the default error activity, or you can use it in your custom error activity.\n> The CustomCrashDataCollector you provide can not be an anonymous or non-static inner class, because it needs to be serialized by the library. The library will throw an exception if you try to set an invalid class.\n> If you set it to `null`, no custom crash data will be collected.\n> The default is `null`.\n\n### Customization of the default activity\n\nYou can override several resources to customize the default activity:\n\n**Theme:**\n\nThe activity uses your application theme by default. It must be a child of `Theme.AppCompat` or a default one will be used.\nIf you want to specify a specific theme only for the error activity, you can do so by redeclaring it on your manifest like this:\n\n```xml\n<activity\n    android:name=\"cat.ereza.customactivityoncrash.activity.DefaultErrorActivity\"\n    android:theme=\"@style/YourThemeHere\"\n    android:process=\":error_activity\" />\n```\n\n**Image:**\n\nBy default, an image of a bug is displayed. You can change it to any image by using the provided `errorDrawable(int)` method.\nYou can also do it the old way and create a `customactivityoncrash_error_image` drawable on all density buckets (mdpi, hdpi, xhdpi, xxhdpi and xxxhdpi).\n\n**Strings:**\n\nYou can provide new strings and translations for the default error activity strings by overriding the following strings:\n```xml\n<string name=\"customactivityoncrash_error_activity_error_occurred_explanation\">An unexpected error occurred.\\nSorry for the inconvenience.</string>\n<string name=\"customactivityoncrash_error_activity_restart_app\">Restart app</string>\n<string name=\"customactivityoncrash_error_activity_close_app\">Close app</string>\n<string name=\"customactivityoncrash_error_activity_error_details\">Error details</string>\n<string name=\"customactivityoncrash_error_activity_error_details_title\">Error details</string>\n<string name=\"customactivityoncrash_error_activity_error_details_close\">Close</string>\n<string name=\"customactivityoncrash_error_activity_error_details_copy\">Copy to clipboard</string>\n<string name=\"customactivityoncrash_error_activity_error_details_copied\">Copied to clipboard</string>\n<string name=\"customactivityoncrash_error_activity_error_details_clipboard_label\">Error information</string>\n```\n\n*There is a `sample` project module with examples of these overrides. If in doubt, check the code in that module.*\n\n### Completely custom error activity\n\nIf you choose to create your own completely custom error activity, you can use these methods:\n\n```java\nCustomActivityOnCrash.getAllErrorDetailsFromIntent(getIntent());\n```\n> Returns several error details including the stack trace that caused the error, the activity log (if available) and the custom crash data (if available), as a string. This is used in the default error activity error details dialog.\n\n```java\nCustomActivityOnCrash.getStackTraceFromIntent(getIntent());\n```\n> Returns the stack trace that caused the error as a string.\n\n```java\nCustomActivityOnCrash.getActivityLogFromIntent(getIntent());\n```\n> Returns the activity log as a string if `trackActivities` was enabled, `null` otherwise.\n\n```java\nCustomActivityOnCrash.getCustomCrashDataFromIntent(getIntent());\n```\n> Returns the custom crash data collected with your `CustomCrashDataCollector` if `customCrashDataCollector` was enabled, `null` otherwise.\n\n```java\nCustomActivityOnCrash.getConfigFromIntent(getIntent());\n```\n> Returns the config of the library when the crash happened. Used to call some methods.\n\n```java\nCustomActivityOnCrash.restartApplication(activity, config);\n```\n> Kills the current process and restarts the app again with a `startActivity()` to the passed intent.\n> You **MUST** call this to restart the app, or you will end up having several `Application` class instances and experience multiprocess issues.\n\n```java\nCustomActivityOnCrash.restartApplicationWithIntent(activity, intent, config);\n```\n> The same as `CustomActivityOnCrash.restartApplication`, but allows you to specify a custom intent.\n\n```java\nCustomActivityOnCrash.closeApplication(activity, eventListener);\n```\n> Closes the app and kills the current process.\n> You **MUST** call this to close the app, or you will end up having several Application class instances and experience multiprocess issues.\n\n**The `sample` project module includes an example of a custom error activity. If in doubt, check the code in that module.**\n\n## Using Proguard?\n\nNo need to add special rules, the library should work even with obfuscation.\n\n## Inner workings\n\nThis library relies on the `Thread.setDefaultUncaughtExceptionHandler` method.\nWhen an exception is caught by the library's `UncaughtExceptionHandler` it does the following:\n\n1. Captures the stack trace that caused the crash\n2. Launches a new intent to the error activity in a new process passing the crash info as an extra.\n3. Kills the current process.\n\nThe inner workings are based on [ACRA](https://github.com/ACRA/acra)'s dialog reporting mode with some minor tweaks. Look at the code if you need more detail about how it works.\n\n## Incompatibilities\n\n* CustomActivityOnCrash will not work with any custom `UncaughtExceptionHandler` set after initializing the library that does not call back to the original handler.\n* If your app initialization or error activity crash, there is a possibility of entering an infinite restart loop (this is checked by the library for the most common cases, but could happen in rarer cases).\n* The library has not been tested with multidex enabled. It uses Class.forName() to load classes, so maybe that could cause some problem in API<21. If you test it with such configuration, please provide feedback!\n* The library has not been tested with multiprocess apps. If you test it with such configuration, please provide feedback too!\n\n## Disclaimers\n\n* This will not avoid ANRs from happening.\n* This will not catch native errors.\n* There is no guarantee that this will work on every device.\n* This library will not make you toast for breakfast :)\n\n## Contributing & license\n\nAny contribution in order to make this library better will be welcome!\n\nThe library is licensed under the [Apache License 2.0](https://github.com/Ereza/CustomActivityOnCrash/blob/master/LICENSE).\n\nThe bug image used in the default error activity is licensed under CC-BY by Riff: https://www.sketchport.com/drawing/6119265933459456/lady-bug\nIf you use the image in your app, don't forget to mention that!"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.337890625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        mavenCentral()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:7.2.1'\n    }\n}\n\nallprojects {\n    repositories {\n        mavenCentral()\n        google()\n    }\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.884765625,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Settings specified in this file will override any Gradle settings\n# configured through the IDE.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\nandroid.useAndroidX=true\nandroid.enableJetifier=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.029296875,
          "content": "include ':sample', ':library'\n"
        }
      ]
    }
  ]
}