{
  "metadata": {
    "timestamp": 1736708501341,
    "page": 696,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "code-troopers/android-betterpickers",
      "stars": 2666,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".ctproject",
          "type": "blob",
          "size": 0.0654296875,
          "content": "release='./gradlew clean build uploadArchives' #upload to sonatype\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3212890625,
          "content": "# Built application files\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\nout/\nbuild/\n.gradle/\n\n# idea project files\n*.iml\n*.idea\n*.iws\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# junk\n.DS_Store\n\n# Proguard folder generated by Eclipse\nproguard/\n"
        },
        {
          "name": "CHANGE_LOG.md",
          "type": "blob",
          "size": 7.95703125,
          "content": "\nChangelog\n=========\n**3.1.0**\n* Fix Calendar#getTimeInMillis with millis correctly set to 0 (#327)\n* Reduce width of erase button for all pickers (#337 #330 #287)\n* Add onDismissListener to all pickers (#338 #326)\n\n**3.0.2**\n* Update libs\n* Fix lint errors (#331 #332 Thx mtrakal)\n\n**3.0.1**\n* Fix setExpiration being called before setMinYear (#319)\n* Fix leading zeroes issue in HMS Picker (#311)\n\n**3.0.0**\n* Fix Fragment already added Exception (#298)\n* Remove deprecated methods :\n    - CalendarDatePickerDialogFragment#setThemeDark(boolean dark) replaced by CalendarDatePickerDialogFragment#setThemeDark()\n    - CalendarDatePickerDialogFragment#newInstance(...) repalced by CalendarDatePickerDialogFragment#setOnDateSetListener() and CalendarDatePickerDialogFragment#setPreselectedDate()\n    - CalendarDatePickerDialogFragment#initialize(...) replaced by CalendarDatePickerDialogFragment#setOnDateSetListener() and CalendarDatePickerDialogFragment#setPreselectedDate()\n    - HmsPickerDialogFragment#HmsPickerDialogHandler replaced by HmsPickerDialogFragment#HmsPickerDialogHandlerV2\n    - HmsPickerDialogFragment#setHmsPickerDialogHandlers(...) replaced by HmsPickerDialogFragment#setHmsPickerDialogHandlersV2(...)\n    - HmsPickerBuilder#addHmsPickerDialogHandler(HmsPickerDialogHandler) replaced by HmsPickerBuilder#addHmsPickerDialogHandler(HmsPickerDialogHandlerV2)\n    - HmsPickerBuilder#removeHmsPickerDialogHandler(HmsPickerDialogHandler) replaced by HmsPickerBuilder#removeHmsPickerDialogHandler(HmsPickerDialogHandlerV2)\n    - NumberPickerDialogFragment#NumberPickerDialogHandler replaced by NumberPickerDialogFragment#NumberPickerDialogHandlerV2\n    - NumberPickerDialogFragment#setNumberPickerDialogHandlers(...) replaced by NumberPickerDialogFragment#setNumberPickerDialogHandlersV2(...)\n    - NumberPickerBuilder#addNumberPickerDialogHandler(NumberPickerDialogHandler) replaced by NumberPickerBuilder#addNumberPickerDialogHandler(NumberPickerDialogHandlerV2)\n    - NumberPickerBuilder#removeNumberPickerDialogHandler(NumberPickerDialogHandler) replaced by NumberPickerBuilder#removeNumberPickerDialogHandler(NumberPickerDialogHandlerV2)\n    - RadialTimePickerDialogFragment#newInstance(...) replaced by RadialTimePickerDialogFragment#setOnTimeSetListener(...) and RadialTimePickerDialogFragment#setStartTime(...)\n    - RadialTimePickerDialogFragment#initialize(...) replaced by RadialTimePickerDialogFragment#setOnTimeSetListener(...) and RadialTimePickerDialogFragment#setStartTime(...)\n    - RadialTimePickerDialogFragment#setThemeDark(boolea) replaced by RadialTimePickerDialogFragment#setThemeDark()\n\n**2.5.next**\n* Fix disable day color for CalendarDatePicker with range limit (#294)\n\n**2.5.6**\n* Fix typo in RecurrenceEvent (#290)\n* Update support library (#296)\n* Fix style of header of radial picker (#291)\n\n**2.5.5**\n* Fix recurrence picker exception (#282)\n\n**2.5.4**\n* Add Czech translations (#267)\n* Added min/max limits to RadialTimePicker (#272)\n* Fix Recurrence To string formatter for monthly and yearly events (#270)\n* Add HMSPicker negative duration option (#281)\n\n**2.5.3**\n* Add setter for changing cancel button label of RadialDatePicker (#266) \n* Add setter for changing ok and cancel button label of CalendarDatePicker (#268) \n\n**2.5.2**\n* Fix Chinese translations (#256)\n* Fix aapt error (#261)\n* Update roboto font (#258)\n\n**2.5.1**\n* Fix day dates not visible in CalendarDatePicker (#252)\n* Fix Fragment restoration for NumberPicker (#254)\n\n**2.5.0**\n* Improve auto detect for 12/24h date format for radialTimePicker (#246)\n* Add Feature to set disabled (non selectable) dates in calendarDatePicker (#223)\n\n**2.4.0**\n* Add auto detect and use of primaryColor by default for CalendarDatePicker and RadialDatePicker (#238)\n* Fix UnknownFormatConversionException (#240)\n* Better autodetect of 12/24h format for radialTimePicker (#244)\n\n**2.3.0**\n* Fix numberPicker exception (#230, #220, #183). Add new Handler that return BigDecimal for user entered value\n* Fix CalendarDatePicker Header cutted (#226, #222)\n* Clean unused resources (#229)\n* Add Ripple Effect on all picker numbers (#231)\n* Fix NumberPicker display for some big screens (#227, #224, #225)\n\n**2.2.2**\n* Fix layout for date picker on large screens\n* add param to hide switch button of recurrence picker (#204)\n\n**2.2.1**\n* Remove annoying warning when compiling (#208)\n* Fix italian translation (#207)\n\n**2.2.0**\n* Fix Number Picker Double issues (#206)\n* Add customizable methods on DatePicker and RadialTimePicker (#198)\n\n\n**2.1.2**\n* Fix Landscape height issue on small dpi devices (#203)\n* Add min or max value for datepicker (#200 #202)\n* Fix Leap Years calculation (#201)\n\n**2.1.0**\n* Set all dialogs buttons to material requirements\n* Rename CalendarDatePickerDialog to CalendarDatePickerDialogFragment\n* Rename RadialTimePickerDialog to RadialTimePickerDialogFragment\n* Rename RecurrencePickerDialog to RecurrencePickerDialogFragment\n* Rename TimeZonePickerDialog to TimeZonePickerDialogFragment\n* update support-appcompat-v7\n* Add year as optionnal in DatePicker (#187)\n\n**2.0.3**\n* add setTimeInSeconds and setTimeInMilliseconds to HmsPickerBuilder (#185)\n* Fix DatePicker button size issues\n\n**2.0.2**\n* Fix NullPointerException in HMSPicker (#190)\n\n**2.0.1**\n* add spanish translations (#184)\n* add onDismissListener on DatePickerDialog in the same way that for RadialTimePickerDialog (#189)\n\n**2.0.0**\n* remove switch-backport import\n* add support-appcompat import (which break integration/compatibility with project using actionBarSherlock)\n* change package name from _com.doomonafireball.betterpickers_ to _com.codetroopers.betterpickers_ (change of maintainer for project)\n\n**1.5.5**\n* updated dependency to android-switch-backport:1.4.0 (fix for `1.5.4` problems)\n\n**1.5.4**\n* remove transitive dependency to org.jraf:android-switch-backport\n* add setTime() in HMSPicker\n* add some translations\n\n**1.5.3**\n* allow proper use of appcompat 21\n* added a few translations\n* first release made from the new support team (Code-Troopers)\n\n**1.5.2**\n* Bugfix for Gradle resource processing Switch backport attrs.\n\n**1.5.1**\n* Package assets in library since we are now producing an .aar\n\n**1.5.0**\n* Package as an .aar\n* Add RecurrencePicker (from AOSP calendar app)\n* Add TimeZonePicker (from AOSP calendar app)\n* Resolve bold typeface errors on KitKat\n* Add dismiss listener for RadialTimePicker\n* Add option to set \"Done\" text for RadialTimePicker\n* Add Italian translations\n\n**1.4.2**\n* Fix the ordering of months in the DatePicker\n* Add header to DatePicker keyboards for better UX\n\n**1.4.1**\n* Fix pom.xml file in Maven Central due to an improper Gradle commit of 1.4.0 (Gradle is still a work-in-progress)\n\n**1.4.0**\n* Addition of ExpirationPicker for e.g. credit card expiration date\n* Addition of CalendarPicker from AOSP (see stock Calendar app) <a href=\"https://raw.github.com/derekbrameyer/android-betterpickers/master/sample/imagery/phone_render_calendar_date.png\">[screenshot here]</a>\n* Addition of RadialTimePicker from AOSP (see stock Calendar app) <a href=\"https://raw.github.com/derekbrameyer/android-betterpickers/master/sample/imagery/phone_render_radial_time_picker.png\">[screenshot here]</a>\n* Improved localization of months in DatePicker\n* Removed dependency on ViewPagerIndicator\n* Fix for Android 4.3 font rendering\n* Fix for year field of DatePicker when using e.g. year/month/day format\n\n**1.3.1**\n* Improve UX for min/max for NumberPicker\n* Added ListView demos to the sample app\n\n**1.3.0**\n* Add Catalan, Spanish\n* Enable min/max for NumberPicker\n* Added Javadoc comments\n* Added universal handlers\n* Added picker references\n* UX tweak for DatePicker indicator\n\n**1.2.0**\n* Removed some unused fonts from sample/ project\n* Refactor to Builder pattern\n* Fix for Gingerbread font in DatePicker\n* Added optional label text to NumberPicker\n* DatePicker reorders text and keyboards based on locale\n* NumberPicker scrolls horizontally to allow for more numbers\n\n**1.1.0**\n* Added HMS (hours:minutes:seconds) PickerFragment\n* Allow for PickerFragments within target fragments\n* Allow for February 29th input\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.62890625,
          "content": "# /!\\ This Project is no longer maintained /!\\ \n\n\n[![Maven Central](https://img.shields.io/maven-central/v/com.code-troopers.betterpickers/library.svg?style=flat)](https://repo1.maven.org/maven2/com/code-troopers/betterpickers/library/)\n[![API](https://img.shields.io/badge/API-9%2B-brightgreen.svg?style=flat)](https://android-arsenal.com/api?level=9)\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Android%20Betterpickers-brightgreen.svg?style=flat)](https://android-arsenal.com/details/1/118)\n\n[![Built With Cloudbees](https://www.cloudbees.com/sites/default/files/styles/large/public/Button-Built-on-CB-1.png?itok=3Tnkun-C)](https://codetroopers.ci.cloudbees.com/job/betterpickers-master/)\n\n\n<img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_calendar_date.png\" width=\"120\">  <img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_radial_time.png\" width=\"120\">  <img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_recurrence.png\" width=\"120\">  <img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_time_zone.png\" width=\"120\">\n\n<img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_date.png\" width=\"120\">  <img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_expiration.png\" width=\"120\">  <img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_hms.png\" width=\"120\">  <img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_number.png\" width=\"120\">  <img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_time.png\" width=\"120\">\n\n\nDialogFragments modeled after the AOSP Clock and Calendar apps to improve UX for picking time, date, numbers, and other things.\n\nTry out the sample application on [Google Play][6].\n\n<a href=\"https://play.google.com/store/apps/details?id=com.codetroopers.betterpickersapp\">\n  <img alt=\"BetterPickers Samples on Google Play\"\n         src=\"https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png\" width=\"140\" />\n</a>\n\nIncluding in Your Project\n=========================\n### Gradle\n\n```groovy\ncompile 'com.code-troopers.betterpickers:library:3.1.0'\n```\n\n### Maven\n\n```xml\n<dependency>\n  <groupId>com.code-troopers.betterpickers</groupId>\n  <artifactId>library</artifactId>\n  <version>3.1.0</version>\n  <type>aar</type>\n</dependency>\n```\n\nUsage\n=====\n\n*For a working implementation of this project see the `sample/` folder.*\n\n### Calendar Date Picker\n\n```java\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        CalendarDatePickerDialogFragment cdp = new CalendarDatePickerDialogFragment()\n                .setOnDateSetListener(SampleCalendarDateBasicUsage.this)\n                .setFirstDayOfWeek(Calendar.SUNDAY)\n                .setPreselectedDate(towDaysAgo.getYear(), towDaysAgo.getMonthOfYear() - 1, towDaysAgo.getDayOfMonth())\n                .setDateRange(minDate, null)\n                .setDoneText(\"Yay\")\n                .setCancelText(\"Nop\")\n                .setThemeDark(true);\n        cdp.show(getSupportFragmentManager(), FRAG_TAG_DATE_PICKER);\n    }\n});\n```\n\n### Radial Time Picker\n\n```java\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        RadialTimePickerDialogFragment rtpd = new RadialTimePickerDialogFragment()\n                .setOnTimeSetListener(SampleRadialTimeBasicUsage.this)\n                .setStartTime(10, 10)\n                .setDoneText(\"Yay\")\n                .setCancelText(\"Nop\")\n                .setThemeDark(true);\n        rtpd.show(getSupportFragmentManager(), FRAG_TAG_TIME_PICKER);\n    }\n});\n```\n\n### Recurrence Picker\n\n```java\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        FragmentManager fm = getSupportFragmentManager();\n        Bundle bundle = new Bundle();\n        Time time = new Time();\n        time.setToNow();\n        bundle.putLong(RecurrencePickerDialogFragment.BUNDLE_START_TIME_MILLIS, time.toMillis(false));\n        bundle.putString(RecurrencePickerDialogFragment.BUNDLE_TIME_ZONE, time.timezone);\n        bundle.putString(RecurrencePickerDialogFragment.BUNDLE_RRULE, mRrule);\n        bundle.putBoolean(RecurrencePickerDialogFragment.BUNDLE_HIDE_SWITCH_BUTTON, true);\n\n        RecurrencePickerDialogFragment rpd = new RecurrencePickerDialogFragment();\n        rpd.setArguments(bundle);\n        rpd.setOnRecurrenceSetListener(SampleRecurrenceBasicUsage.this);\n        rpd.show(fm, FRAG_TAG_RECUR_PICKER);\n    }\n});\n```\n\n### Timezone Picker\n\n```java\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        FragmentManager fm = getSupportFragmentManager();\n        Bundle bundle = new Bundle();\n        Time time = new Time();\n        time.setToNow();\n        bundle.putLong(TimeZonePickerDialogFragment.BUNDLE_START_TIME_MILLIS, time.toMillis(false));\n        bundle.putString(TimeZonePickerDialogFragment.BUNDLE_TIME_ZONE, time.timezone);\n        bundle.putString(RecurrencePickerDialogFragment.BUNDLE_RRULE, mRrule);\n\n        TimeZonePickerDialogFragment tzpd = new TimeZonePickerDialogFragment();\n        tzpd.setArguments(bundle);\n        tzpd.setOnTimeZoneSetListener(SampleTimeZoneBasicUsage.this);\n        tzpd.show(fm, FRAG_TAG_TIME_ZONE_PICKER);\n    }\n});\n```\n\n### Date Picker\n\n```java\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        DatePickerBuilder dpb = new DatePickerBuilder()\n                .setFragmentManager(getSupportFragmentManager())\n                .setStyleResId(R.style.BetterPickersDialogFragment)\n                .setYearOptional(true);\n        dpb.show();\n    }\n});\n```\n\n### Expiration Picker\n\n```java\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        ExpirationPickerBuilder epb = new ExpirationPickerBuilder()\n                  .setFragmentManager(getSupportFragmentManager())\n                  .setStyleResId(R.style.BetterPickersDialogFragment)\n                  .setMinYear(2000);\n        epb.show();\n    }\n});\n```\n\n### HMS Picker\n\n```java\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        HmsPickerBuilder hpb = new HmsPickerBuilder()\n                .setFragmentManager(getSupportFragmentManager())\n                .setStyleResId(R.style.BetterPickersDialogFragment);\n        hpb.show();\n    }\n});\n```\n\n### Number Picker\n\n```java\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        NumberPickerBuilder npb = new NumberPickerBuilder()\n                .setFragmentManager(getSupportFragmentManager())\n                .setStyleResId(R.style.BetterPickersDialogFragment)\n                .setLabelText(\"LBS.\");\n        npb.show();\n}\n});\n```\n\n### Time Picker\n\n```java\nbutton.setOnClickListener(new View.OnClickListener() {\n    @Override\n    public void onClick(View v) {\n        TimePickerBuilder tpb = new TimePickerBuilder()\n                .setFragmentManager(getSupportFragmentManager())\n                .setStyleResId(R.style.BetterPickersDialogFragment);\n        tpb.show();\n    }\n});\n```\n\nTheming\n=======\n*For a demonstration of theming, see the `sample/` folder.*\n\n### Calendar Date Picker / Radial Time Picker\n\n  1. Use attributes that allow you to customize pickers\n\n        bpHeaderBackgroundColor     ::\n        bpHeaderUnselectedTextColor ::\n        bpHeaderSelectedTextColor   ::\n        bpBodyBackgroundColor       ::\n        bpBodySelectedTextColor     ::\n        bpBodyUnselectedTextColor   ::\n        bpButtonsBackgroundColor    ::\n        bpButtonsTextColor          ::\n        -- Calendar Date Picker\n        bpPreHeaderBackgroundColor  ::\n        bpDisabledDayTextColor      ::\n        -- Radial Time Picker\n        bpRadialBackgroundColor     ::\n        bpRadialTextColor           ::\n        bpRadialPointerColor        ::\n        bpAmPmCircleColor           ::\n\n  2. Create your own custom theme in `styles.xml`:\n\n    ```xml\n    <style name=\"MyCustomBetterPickersDialogs\" parent=\"BetterPickersRadialTimePickerDialog.PrimaryColor\">\n        <item name=\"bpPreHeaderBackgroundColor\">@color/holo_red_dark</item>\n        <item name=\"bpHeaderBackgroundColor\">@color/holo_red_light</item>\n        <item name=\"bpHeaderSelectedTextColor\">@color/holo_orange_dark</item>\n        <item name=\"bpHeaderUnselectedTextColor\">@android:color/white</item>\n\n        <item name=\"bpBodyBackgroundColor\">@color/holo_blue_dark</item>\n        <item name=\"bpBodySelectedTextColor\">@color/holo_orange_dark</item>\n        <item name=\"bpBodyUnselectedTextColor\">@android:color/white</item>\n\n        <item name=\"bpRadialBackgroundColor\">@color/holo_orange_dark</item>\n        <item name=\"bpRadialTextColor\">@color/holo_purple</item>\n        <item name=\"bpRadialPointerColor\">@android:color/black</item>\n\n        <item name=\"bpButtonsBackgroundColor\">@color/holo_green_dark</item>\n        <item name=\"bpButtonsTextColor\">@color/holo_orange_dark</item>\n    </style>\n    ```\n\n  3. Instantiate your `DialogFragment` using your custom theme:\n\n  ```java\n  RadialTimePickerDialogFragment rtpd = new RadialTimePickerDialogFragment()\n         .setOnTimeSetListener(SampleRadialTimeThemeCustom.this)\n         .setThemeCustom(R.style.MyCustomBetterPickersDialogs);\n  rtpd.show(getSupportFragmentManager(), FRAG_TAG_TIME_PICKER);\n  ```\n  4. Result\n\n  <img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_calendar_date_customized.png\" width=\"120\">\n  <img src=\"https://raw.githubusercontent.com/code-troopers/android-betterpickers/master/sample/imagery/screenshot_radial_time_customized.png\" width=\"120\">\n\n### Date Picker / Expiration Picker / HMS Picker / Number Picker / Time Picker\n\n\n  1. You can use your own themes if you'd like to change certain attributes.  BetterPickers currently allows for customization of the following attributes:\n\n        bpDialogBackground       :: the drawable (preferably a 9-patch) used as a window background for the DialogFragment\n        bpTextColor              :: the color (optionally state list) for all text in the DialogFragment\n        bpDeleteIcon             :: the drawable (optionally state list) for the delete button\n        bpCheckIcon              :: the drawable (optionally state list) for the check button in the DateDialogPicker\n        bpKeyBackground          :: the drawable (optionally state list) for the keyboard buttons\n        bpButtonBackground       :: the drawable (optionally state list) for the Set, Cancel, and Delete buttons\n        bpDividerColor           :: the color used for the DialogFragment dividers\n        bpKeyboardIndicatorColor :: the color used for the ViewPagerIndicator on the DateDialogPicker\n\n  2. Create your own custom theme in `styles.xml`:\n\n  ```xml\n  <style name=\"MyCustomBetterPickerTheme\">\n      <item name=\"bpDialogBackground\">@drawable/custom_dialog_background</item>\n      <item name=\"bpTextColor\">@color/custom_text_color</item>\n      <item name=\"bpDeleteIcon\">@drawable/ic_backspace_custom</item>\n      <item name=\"bpCheckIcon\">@drawable/ic_check_custom</item>\n      <item name=\"bpKeyBackground\">@drawable/key_background_custom</item>\n      <item name=\"bpButtonBackground\">@drawable/button_background_custom</item>\n      <item name=\"bpDividerColor\">@color/custom_divider_color</item>\n      <item name=\"bpKeyboardIndicatorColor\">@color/custom_keyboard_indicator_color</item>\n  </style>\n  ```\n\n  3. Instantiate your `DialogFragment` using your custom theme:\n\n  ```java\n  DatePickerBuilder dpb = new DatePickerBuilder()\n      .setFragmentManager(getSupportFragmentManager())\n      .setStyleResId(R.style.MyCustomBetterPickerTheme);\n  dpb.show();\n  ```\n\nActionbarsherlock compatibility\n===============================\nIf you use actionbarsherlock which is not compatible with appcompat-v7 you can use the latest version of the library on the 1.x.x branch.\n\nYou can view the readme [here](README_1.6.0.md)\n\nChangeLog\n=========\nChange log file is available [here](CHANGE_LOG.md)\n\nContribution\n============\n\n### Pull requests are welcome!\n\nFeel free to contribute to BetterPickers.\n\nIf you've fixed a bug or have a feature you've added, just create a pull request.\n\nIf you've found a bug, want a new feature, or have other questions, [file an issue][10]. We will try to answer as soon as possible.\n\n\n### Applications using BetterPickers\n\nPlease send a pull request if you would like to be added here.\n\nIcon | Application\n------------ | -------------\n<img src=\"https://lh6.ggpht.com/wG3RSgReZcIcKsqFfsKSibR-j1UYfOekNmtY8x0n0mjWJT84U2V3l2lh3TmxeXfJis0z=w300\" width=\"48\" height=\"48\" /> | [Trello]\n<img src=\"https://lh3.ggpht.com/OuJF91ba0PiNItxw_zAqwjarenly_LiaeaPJQOHBrVWPsGzydjUZ1ANp1wVDpU4cLsE=w300\" width=\"48\" height=\"48\" /> | [Navig'Tours]\n<img src=\"https://lh3.googleusercontent.com/wgzBdz0-R999n1uo6qKJmIzPCt3ShM2lSM6oHmpz9HQKHhbuU0hGYwYhTJx_2QmAhic=w300\" width=\"48\" height=\"48\" /> | [Sleep Well]\n<img src=\"https://lh3.googleusercontent.com/h30IiTNjNayoas5zhbeE38ajB-rsW9Cpz-AOnZnBIuwoOVMMnKZxDQ1RYRLZYLW8Jxc=w300\" width=\"48\" height=\"48\" /> | [Dayon Alarm]\n<img src=\"http://imgur.com/ayz4NSY.png\" width=\"48\" height=\"48\" /> | [Driving Timer]\n<img src=\"https://lh6.ggpht.com/p_j7PAV7YnvGl1ONtQ3OcqtIBpEeocH0okXpy2Hmaztwz8k9BBPLMvUnup6ptG4HxjE=w300\" width=\"48\" height=\"48\" /> | [TVShow Time]\n\n\n\n\nCredits\n=======\n\nThanks to [Derek Brameyer][15] for the initial version.\n\nThanks to [JakeWharton][11] for his work on [ViewPagerIndicator][9].\n\nThanks to [OAK][12] and [WillowTree Apps][13] for Maven assistance and possible future improvements.\n\nThanks to all contributors !\n\nLicense\n=======\n\n    Copyright 2013 Derek Brameyer, Code-Troopers\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n [5]: https://raw.github.com/code-troopers/android-betterpickers/master/sample/imagery/web_feature_graphic.png\n [6]: https://play.google.com/store/apps/details?id=com.codetroopers.betterpickersapp\n [7]: http://developer.android.com/guide/developing/projects/projects-eclipse.html\n [8]: http://developer.android.com/guide/developing/projects/projects-eclipse.html#ReferencingLibraryProject\n [9]: http://viewpagerindicator.com/\n [10]: https://github.com/code-troopers/android-betterpickers/issues/new\n [11]: https://plus.google.com/108284392618554783657/posts\n [12]: http://willowtreeapps.github.io/OAK/\n [13]: http://www.willowtreeapps.com/\n [15]: https://github.com/derekbrameyer/\n\n [Trello]:https://play.google.com/store/apps/details?id=com.trello\n [Navig'Tours]: https://play.google.com/store/apps/details?id=com.codetroopers.transport.tours\n [Sleep Well]: https://play.google.com/store/apps/details?id=com.processingbox.jevaisbiendormir\n [Dayon Alarm]: https://play.google.com/store/apps/details?id=com.atesfactory.dayon\n [Driving Timer]: https://play.google.com/store/apps/details?id=tk.leoforney.drivingtimer\n [TVShow Time]: https://play.google.com/store/apps/details?id=com.tozelabs.tvshowtime\n"
        },
        {
          "name": "README_1.6.0.md",
          "type": "blob",
          "size": 1.0009765625,
          "content": "Version 1.6.0\n=============\n\nIf you don't want appcompat-v7 you can use last release of library before this change : 1.6.0\nRelease 1.6.0 was build with _support-v4_ and _android-switch-backport_\n\n### Maven\n\nIncluding this release in your pom.xml\n\n```xml\n<dependency>\n  <groupId>com.doomonafireball.betterpickers</groupId>\n  <artifactId>library</artifactId>\n  <version>1.6.0</version>\n  <type>aar</type>\n</dependency>\n```\n\n### Gradle\n\nIncluding this release in your build.gradle\n\n```groovy\ncompile 'com.doomonafireball.betterpickers:library:1.6.0'\n```\n\nIf you are bringing in the support library you may need to add an exclusion:\n\n```groovy\ncompile (\"com.doomonafireball.betterpickers:library:1.6.0\") {\n    exclude group: 'com.android.support', module: 'support-v4'\n}\n```\n\n_You MUST manually add dependency to android-switch-backport_\n\n```\ncompile 'org.jraf:android-switch-backport:1.4.0@aar'\n```\nAnd as it not available on maven central add a new maven repository\n```\nmaven {\n    url \"http://JRAF.org/static/maven/2\"\n}\n```\n\n\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.9365234375,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n        mavenLocal()\n        mavenCentral()\n        maven { url 'https://jitpack.io' }\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.3'\n        // to auto install sdk components when building see #248\n        // classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.+'\n        classpath 'com.github.plastiv:sdk-manager-plugin:b04aea1cddf87e78db9a4372794d678f9e568c48'\n\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n\n    version = VERSION_NAME\n    group = GROUP\n    repositories {\n        jcenter()\n        mavenLocal()\n        mavenCentral()\n    }\n    apply plugin: 'android-sdk-manager' //see #248\n}\n\ntask wrapper(type: Wrapper) {\n    gradleVersion = '3.2'\n}\n"
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 4.55078125,
          "content": "<?xml version=\"1.0\"?>\r\n<!DOCTYPE module PUBLIC\r\n    \"-//Puppy Crawl//DTD Check Configuration 1.2//EN\"\r\n    \"http://www.puppycrawl.com/dtds/configuration_1_2.dtd\">\r\n\r\n<module name=\"Checker\">\r\n    <!--module name=\"NewlineAtEndOfFile\"/-->\r\n    <module name=\"FileLength\"/>\r\n    <module name=\"FileTabCharacter\"/>\r\n\r\n    <!-- Trailing spaces -->\r\n    <module name=\"RegexpSingleline\">\r\n        <property name=\"format\" value=\"\\s+$\"/>\r\n        <property name=\"message\" value=\"Line has trailing spaces.\"/>\r\n    </module>\r\n\r\n    <module name=\"TreeWalker\">\r\n        <property name=\"cacheFile\" value=\"${checkstyle.cache.file}\"/>\r\n\r\n        <!-- Checks for Javadoc comments.                     -->\r\n        <!-- See http://checkstyle.sf.net/config_javadoc.html -->\r\n        <!--module name=\"JavadocMethod\"/-->\r\n        <!--module name=\"JavadocType\"/-->\r\n        <!--module name=\"JavadocVariable\"/-->\r\n        <!--module name=\"JavadocStyle\"/-->\r\n\r\n\r\n        <!-- Checks for Naming Conventions.                  -->\r\n        <!-- See http://checkstyle.sf.net/config_naming.html -->\r\n        <module name=\"ConstantName\"/>\r\n        <module name=\"LocalFinalVariableName\"/>\r\n        <module name=\"LocalVariableName\"/>\r\n        <module name=\"MemberName\"/>\r\n        <module name=\"MethodName\"/>\r\n        <module name=\"PackageName\"/>\r\n        <module name=\"ParameterName\"/>\r\n        <module name=\"StaticVariableName\"/>\r\n        <module name=\"TypeName\"/>\r\n\r\n\r\n        <!-- Checks for imports                              -->\r\n        <!-- See http://checkstyle.sf.net/config_import.html -->\r\n        <module name=\"AvoidStarImport\"/>\r\n        <module name=\"IllegalImport\"/> <!-- defaults to sun.* packages -->\r\n        <module name=\"RedundantImport\"/>\r\n        <module name=\"UnusedImports\"/>\r\n\r\n\r\n        <!-- Checks for Size Violations.                    -->\r\n        <!-- See http://checkstyle.sf.net/config_sizes.html -->\r\n        <!--module name=\"LineLength\"/-->\r\n        <!--module name=\"MethodLength\"/-->\r\n        <!--module name=\"ParameterNumber\"/-->\r\n\r\n\r\n        <!-- Checks for whitespace                               -->\r\n        <!-- See http://checkstyle.sf.net/config_whitespace.html -->\r\n        <!--module name=\"EmptyForIteratorPad\"/-->\r\n        <!--module name=\"MethodParamPad\"/-->\r\n        <!--module name=\"NoWhitespaceAfter\"/-->\r\n        <!--module name=\"NoWhitespaceBefore\"/-->\r\n        <!--module name=\"OperatorWrap\"/-->\r\n        <!--module name=\"ParenPad\"/-->\r\n        <!--module name=\"TypecastParenPad\"/-->\r\n        <!--module name=\"WhitespaceAfter\"/-->\r\n        <!--module name=\"WhitespaceAround\"/-->\r\n\r\n\r\n        <!-- Modifier Checks                                    -->\r\n        <!-- See http://checkstyle.sf.net/config_modifiers.html -->\r\n        <!--module name=\"ModifierOrder\"/-->\r\n        <!--module name=\"RedundantModifier\"/-->\r\n\r\n\r\n        <!-- Checks for blocks. You know, those {}'s         -->\r\n        <!-- See http://checkstyle.sf.net/config_blocks.html -->\r\n        <!--module name=\"AvoidNestedBlocks\"/-->\r\n        <!--module name=\"EmptyBlock\"/-->\r\n        <!--module name=\"LeftCurly\"/-->\r\n        <!--module name=\"NeedBraces\"/-->\r\n        <!--module name=\"RightCurly\"/-->\r\n\r\n\r\n        <!-- Checks for common coding problems               -->\r\n        <!-- See http://checkstyle.sf.net/config_coding.html -->\r\n        <!--module name=\"AvoidInlineConditionals\"/-->\r\n        <!--module name=\"DoubleCheckedLocking\"/-->    <!-- MY FAVOURITE -->\r\n        <!--module name=\"EmptyStatement\"/-->\r\n        <!--module name=\"EqualsHashCode\"/-->\r\n        <!--module name=\"HiddenField\"/-->\r\n        <!--module name=\"IllegalInstantiation\"/-->\r\n        <!--module name=\"InnerAssignment\"/-->\r\n        <!--module name=\"MagicNumber\"/-->\r\n        <!--module name=\"MissingSwitchDefault\"/-->\r\n        <!--module name=\"RedundantThrows\"/-->\r\n        <!--module name=\"SimplifyBooleanExpression\"/-->\r\n        <!--module name=\"SimplifyBooleanReturn\"/-->\r\n\r\n        <!-- Checks for class design                         -->\r\n        <!-- See http://checkstyle.sf.net/config_design.html -->\r\n        <!--module name=\"DesignForExtension\"/-->\r\n        <!--module name=\"FinalClass\"/-->\r\n        <!--module name=\"HideUtilityClassConstructor\"/-->\r\n        <!--module name=\"InterfaceIsType\"/-->\r\n        <!--module name=\"VisibilityModifier\"/-->\r\n\r\n\r\n        <!-- Miscellaneous other checks.                   -->\r\n        <!-- See http://checkstyle.sf.net/config_misc.html -->\r\n        <!--module name=\"ArrayTypeStyle\"/-->\r\n        <!--module name=\"FinalParameters\"/-->\r\n        <!--module name=\"TodoComment\"/-->\r\n        <!--module name=\"UpperEll\"/-->\r\n    </module>\r\n</module>\r\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.6455078125,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Settings specified in this file will override any Gradle settings\n# configured through the IDE.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\nVERSION_NAME=3.1.0\nVERSION_CODE=310\nGROUP=com.code-troopers.betterpickers\n\nANDROID_BUILD_MIN_SDK_VERSION=9\nANDROID_BUILD_TARGET_SDK_VERSION=25\nANDROID_BUILD_SDK_VERSION=25\nANDROID_BUILD_TOOLS_VERSION=25.0.0\n\nPOM_DESCRIPTION=Android library for better number/date/time-picker DialogFragments.\nPOM_URL=http://github.com/derekbrameyer/android-betterpickers\nPOM_SCM_URL=http://github.com/derekbrameyer/android-betterpickers\nPOM_SCM_CONNECTION=scm:git@github.com/derekbrameyer/android-betterpickers.git\nPOM_SCM_DEV_CONNECTION=scm:git@github.com/derekbrameyer/android-betterpickers.git\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\nPOM_DEVELOPER_ID=codetroopers\nPOM_DEVELOPER_NAME=Code Troopers\nPOM_DEVELOPER_EMAIL=contact@code-troopers.com"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.1181640625,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nfor s in \"${@}\" ; do\n    s=\\\"$s\\\"\n    APP_ARGS=$APP_ARGS\" \"$s\ndone\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- \"$DEFAULT_JVM_OPTS\" \"$JAVA_OPTS\" \"$GRADLE_OPTS\" \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windows variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.029296875,
          "content": "include ':library', ':sample'\n"
        }
      ]
    }
  ]
}