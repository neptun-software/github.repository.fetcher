{
  "metadata": {
    "timestamp": 1736708606562,
    "page": 918,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mabe02/lanterna",
      "stars": 2330,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.013671875,
          "content": "*.java eol=lf\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0712890625,
          "content": ".classpath\n.project\n.settings/\n.idea/\nnb-configuration.xml\ntarget/\n*.iml\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 10.6796875,
          "content": "# Changelog\n\n## Table of contents\n* [**3.0.0**](#3.0.0)\n* [2.1.9](#2.1.9)\n* [2.1.8](#2.1.8)\n* [2.1.7](#2.1.7)\n* [2.1.6](#2.1.6)\n* [2.1.5](#2.1.5)\n* [2.1.3](#2.1.3)\n* [2.1.2](#2.1.2)\n* [2.1.1](#2.1.1)\n* [**2.1.0**](#2.1.0)\n* [2.0.4](#2.0.4)\n* [2.0.3](#2.0.3)\n* [2.0.2](#2.0.3)\n* [2.0.1](#2.0.1)\n* [**2.0.0**](#2.0.0)\n\n## 3.0.0\nLanterna 3 is a large, and probably final, update to the Lanterna library. Many parts have been completely rewritten and the parts not rewritten have been touched in at least some way. The reason for this major overhaul is to finally get it 'right' and fix all those API mistakes that have been highlighted over the years since Lanterna was first published.\n\nThis section can in no way summarize all the changes but will try to highlight some of the new features and redesigns.\nPlease note that Lanterna 3 is **not** API compatible with Lanterna 2.X and earlier.\n\n**NOTE**: Lanterna 3 is still under development. The majority of the features below are implemented but not all.\n\n## Added\n* Proper support for CJK characters and handling of them\n* New GUI system: The old GUI system has been deprecated and a new one is replacing it, giving you much more control over how you want your GUI to look. You can do any kind of old-school interface, not just dialog-based ones and even things like multi-tasking windows if you like. Please note that this is currently under development.\n* New `SwingTerminal`: `SwingTerminal` in Lanterna 2.X was limited in many ways. For Lanterna 3.0 some of those limitations have been addressed. The actual class is no longer a `JFrame` but a `JComponent`, meaning you can easily embed it into any Swing application. Furthermore, it does not require to be run in private mode anymore. You can switch between normal and private mode as you like and it will keep track of the content. Additionally, it finally supports a backlog history and scrolling. A helper class, `ScrollingSwingTerminal`, can easily get you started with this. If you want the classic behaviour there is `SwingTerminalFrame` which behaves much like `SwingTerminal` used to.\n* Telnet server: In addition to the terminal implementations that have been around since the earlier builds of Lanterna, version 3 introduces a Telnet server class that allows you to program multiple terminals against clients connecting in through standard Telnet. A small subset of the Telnet protocol is implemented so far, however, it supports features such as window resizing, line mode setting and echo control.\n* `ScreenWriter` now supports not just text and filled rectangles but also lines and both filled and unfilled triangles.\n\n## Changed\n* Made `Screen` an interface and cleaned up its API. The default implementation behaves like `Screen` used to with improvements such as full color support\n* The code and API more closely follows Java conventions on naming and style\n\n## 2.1.9\n### Added\n* Better ESC key detection\n* Enable EOF 'key' when the input stream is closed (requires setting system property 'com.googlecode.lanterna.enable-eof' to 'true')\n* `TextBox` now accepts input of non-Latin characters\n\n### Changed\n* Better ESC key detection\n* Regression fixed with high CPU load when opening a window with no interactable components\n* `KeyMappingProfile` patterns now public\n\n## 2.1.8\n### Added\n* Ability to set the fill character of `TextBox` components (other than space)\n* Ability to disable shadows for windows\n* Added a file dialog component\n* Added a method to make it easier to wrap components in a border\n* Added `SwingTerminal` function key support\n* Window-deriving classes can inspect which component has input focus\n\n### Changed\n* Input focus bug fixes\n* `InputDecoder` fixes backported from master branch\n\n## 2.1.7\n### Added\n* Added support for the PageUp, PageDown, Home and End keys inside `AbstractListBox` and its subclasses\n\n### Changed\n* Change visibility of `LayoutParameter` constructor to public, making it easier to create custom layout managers\n* Fixed `TextArea` crash on pressing End when horizontal size is too big\n* Miscellaneous bug fixes\n* Terminals will remember if they are in private mode and will not attempt to enter twice\n* `Screen` will drain the input queue upon exiting\n\n## 2.1.6\n### Added\n* Added an experimental `TextArea`, a user-contributed component\n* Added `Screen.updateScreenSize()` to manually check and update internal data structures, allowing you to redraw the screen before calling `Screen.refresh()`\n* Proper `Key.equals(...)` and `Key.hashCode()` methods\n* Proper `TerminalPosition.equals(...)` and `TerminalPosition.hashCode()` methods\n\n### Changed\n* Fixed a deadlock in `GUIScreen`\n* `ActionListBox` has a new parameter that closes the dialog before running the selected `Action`\n* `SwingTerminal` AWT threading fixes\n\n## 2.1.5\n### Added\n* Added a new method to invalidate the `Screen` buffer and force a complete redraw\n\n### Changed\n* Visibility changed on `GUIScreen` to make it easier to extend\n\n## 2.1.3\n### Added\n* Customization of screen padding character\n* More input key combinations detecting ALT down\n\n### Changed\n* Background color fix with `Screen`\n* Expanded `Table` API\n* Improved (but still incomplete) CJK character handling\n* OS X input compatibility fix\n\n## 2.1.2\n### Added\n* `RadioCheckBoxList.getCheckedItem()`\n\n### Changed\n* Enhanced restoration of the terminal control codes (especially on Solaris)\n* Fixed a bug that occurred when `SwingTerminal` is reduced to 0 rows\n* Fixed a bug that prevented the cursor from becoming visible again after leaving private mode\n* `ActionListDialog` now increases in size as you add items\n* `TextBox` can now tell you the current edit cursor position\n\n## 2.1.1\n### Added\n* Re-added `GUIScreen.closeWindow()` (as deprecated)\n* Re-added `Panel.setBetweenComponentsPadding(...)` (as deprecated)\n\n### Changed\n* Owner window can now be correctly derived from a component\n* Classes extending `AbstractListBox` now follow the preferred size override correctly\n\n### Added\n* Added a new component, `ActivityIndicator`\n* Added support for showing and hiding the text cursor\n* Included ANSI colour palettes for the `SwingTerminal` to mimic the appearance of several popular terminal emulators\n* Introduced the `BorderLayout` layout managed\n* Support 8-bit and 24-bit colours (not supported by all terminal emulators)\n* Support detection of CTRL and ALT key status\n* `GUIScreen` backgrounds can now be customized\n\n### Changed\n* Close windows using `Window.close()` instead of `GUIScreen.closeWindow(...)`\n* Generalized component alignment\n* GUI windows can now be display in full-screen mode, taking up the entire terminal\n* Lots of bug fixes\n* Reworked GUI layout system\n* Reworked the theme system\n* Window size is overridable\n* `SwingTerminal` now uses a new class, `TerminalAppearance`, to retrieve the visual settings, such as fonts and colours\n\n### Removed\n* Removed dependencies on proprietary Sun API\n\n## 2.1.0\n2.1.X is **not** strictly API compatible with 2.0.X but compared to going from 1.0.X to 2.0.X there will be fewer API breaking changes\n\n## 2.0.4\n### Added\n* The PageUp, PageDown, Home, and End keys now work in the `TextArea` component\n\n### Changed\n* Adding rows to a `Table` will trigger the screen to redraw\n* Improved API for `RadioCheckBoxList`\n\n## 2.0.3\n### Added\n* Added experimental support for F1-F12 keys\n* `TextArea` can now be modified (experimental feature)\n\n### Changed\n* Font fixes. Hopefully it will look better on Linux now\n* Invisible components no longer receive focus\n* The size policies are working better now but they are still somewhat mysterious. I will try to come up with something better for the 2.1.0 release\n\n### What about 2.0.2?\nThere is no 2.0.2. I did a mistake staging the new release and had to start over again but 2.0.2 had already been tagged in Mercurial so I could not re-release it. Instead we skipped a number and landed on 2.0.3\n\n## 2.0.1\n### Added\n* Added `Screen.clear()` that allows resetting the content of the screen\n* Added `Terminal.getTerminalSize()` to synchronously retrieve the current size of the terminal\n* Added new overloads so that you can specify a separate font to use for bold text in `SwingTerminal`\n* `SwingTerminal` will now render underlined text\n* `SwingTerminal` will expose its internal `JFrame` through a new method `getJFrame()`, allowing you to set a custom title, icon, image list etc.\n\n### Changed\n* `queryTerminalSize()` has been marked as deprecated but will still work as before\n* `TextBox` and `PasswordBox` constructors that did not take a width parameter were broken, fixed and changed so that the initial size (unless forced) will be at least 10 columns wide\n\n## 2.0.0\n### Added\n* Added a new facade class, `TerminalFacade`, which provides some convenience methods for creating terminal objects\n* Added experimental, but not very functional, support for Cygwin\n* Expanded `Interactable.Result` and `Interactable.FocusChangeDirection` to allow focus switching in four directions instead of only two\n* Introduced `AbstractListBox` which has standardized the format and the methods of the list-based GUI elements\n* Mavenized the project, will try to push it to Maven Central somehow\n\n### Changed\n* ~~Moved `com.googlecode.lanterna.TerminalFactory` to `com.googlecode.lanterna.terminal` where it belongs~~\n* Moved `Terminal.addInputProfile(...)` to `InputProvider`\n* Moved `Terminal.Style` to an outer class in `com.googlecode.lanterna.screen`\n* Moved `SwingTerminal` to `com.googlecode.lanterna.terminal.swing`\n* Moved `Terminal.setCBreak(...)` and `Terminal.setEcho(...)` into `ANSITerminal`. You probably don't need to call these directly anyway, since they are automatically called for the `UnixTerminal` when entering private mode\n* Rearranged the `Terminal` hierarchy. This is mostly internal but you might have been using `CommonUnixTerminal` before which is now known as `com.googlecode.lanterna.terminal.text.UnixTerminal`\n* Renamed the project's package name from `org.lantern` to `com.googlecode.lanterna`\n* Renamed `LanternException` to `LanternaException` for consistency\n* `LanternaException` is now a `RuntimeException` since `IOException`s coming from stdin and stdout are quite rare\n* Renamed some enums and an internal class in `Theme`. You probably will not be affected by this unless you have defined your own theme\n\n### Removed\n* Removed `LanternTerminal` and `TerminalFactory` as they were quite confusing and not really necessary\n* Removed `ListBox` as there is not much purpose for it in this environment\n* Removed `RadioCheckBox` and `RadioCheckBoxGroup`. `RadioCheckBoxList` acts as a replacement\n* Removed `TermInfo` classes (they did not really work so hopefully no one was using them)\n\n### Maven\nStarting with the 2.0.0 release, Lanterna has been using Maven and the Sonatype OSS repository which is synchronized with Maven Central. Please see the [Maven information page](Maven.md) for more details\n"
        },
        {
          "name": "License.txt",
          "type": "blob",
          "size": 7.470703125,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.177734375,
          "content": "Lanterna\n---\n\n![Lanterna screenshot](http://mabe02.github.io/lanterna/resources/lanterna.png)\n\nLanterna is a Java library allowing you to write easy semi-graphical user interfaces in a text-only environment,\nvery similar to the C library [curses](http://en.wikipedia.org/wiki/Curses_(programming_library)) but with more functionality.\nLanterna is supporting xterm compatible terminals and terminal emulators such as konsole, gnome-terminal, putty, xterm and many more.\nOne of the main benefits of lanterna is that it's not dependent on any native library but runs 100% in pure Java.\n\nAlso, when running Lanterna on computers with a graphical environment (such as Windows or Xorg), a bundled terminal emulator\nwritten in Swing will be used rather than standard output. This way, you can develop as usual from your IDE\n(most of them doesn't support ANSI control characters in their output window) and then deploy to your headless server without changing any code.\n\nLanterna is structured into three layers, each built on top of the other and you can easily choose which one fits your needs best.\n\n1. The first is a low level terminal interface which gives you the most basic control of the terminal text area.\n   You can move around the cursor and enable special modifiers for characters put to the screen. You will find these classes in package com.googlecode.lanterna.terminal.\n\n2. The second level is a full screen buffer, the whole text screen in memory and allowing you to write to this before flushing the changes to the actual terminal.\n   This makes writing to the terminal screen similar to modifying a bitmap. You will find these classes in package com.googlecode.lanterna.screen.\n\n3. The third level is a full GUI toolkit with windows, buttons, labels and some other components.\n   It's using a very simple window management system (basically all windows are modal) that is quick and easy to use.\n   You will find these classes in package com.googlecode.lanterna.gui2.\n\n\nMaven\n---\n\nLanterna is available on [Maven Central](http://search.maven.org/), through [Sonatype OSS hosting](http://oss.sonatype.org/). Here's what you want to use:\n\n```xml\n    <dependency>\n        <groupId>com.googlecode.lanterna</groupId>\n        <artifactId>lanterna</artifactId>\n        <version>3.1.2</version>\n    </dependency>\n```\n\nDiscussions\n---\nThere is a [google group](https://groups.google.com/forum/#!forum/lanterna-discuss) for discussions and announcements related to Lanterna.\nYou are recommended to raise issues directly on Github though.\n\n\nProjects using Lanterna\n---\nIncomplete list of projects using Lanterna, feel free to let us know something we can add to this list:\n * https://github.com/MultiMUD/clojure-lanterna\n * https://github.com/datacron/project-lanterminal\n\n\nDevelopment Guide\n---\nSee [docs](docs/contents.md) for examples and guides.\n\nJavaDoc is available here:\n * http://mabe02.github.io/lanterna/apidocs/3.1/\n\nThe JavaDocs for the previous versions (2.1 and 3.0) are also available here:\n* http://mabe02.github.io/lanterna/apidocs/2.1/\n* http://mabe02.github.io/lanterna/apidocs/3.0/\n\nThere is also a development guide and some tutorials available [right here on Github](https://github.com/mabe02/lanterna/blob/master/docs/contents.md).\n"
        },
        {
          "name": "RELEASE.txt",
          "type": "blob",
          "size": 0.072265625,
          "content": "mvn release:clean release:prepare -Prelease\nmvn release:perform -Prelease\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "jitpack.yml",
          "type": "blob",
          "size": 0.017578125,
          "content": "jdk:\n  - openjdk9\n"
        },
        {
          "name": "licenseheader.txt",
          "type": "blob",
          "size": 0.7705078125,
          "content": "/*\n * This file is part of lanterna (https://github.com/mabe02/lanterna).\n *\n * lanterna is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n *\n * Copyright (C) 2010-2024 Martin Berglund\n */"
        },
        {
          "name": "native-integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 8.90234375,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.googlecode.lanterna</groupId>\n    <artifactId>lanterna</artifactId>\n    <packaging>jar</packaging>\n    <name>Lanterna</name>\n    <description>Java library for creating text-based terminal GUIs</description>\n    <version>3.2.0-SNAPSHOT</version>\n    <url>https://github.com/mabe02/lanterna</url>\n\n    <licenses>\n        <license>\n            <name>GNU Lesser General Public License</name>\n            <url>http://www.gnu.org/licenses/lgpl-3.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n    </properties>\n\n    <scm>\n        <connection>scm:git:git@github.com:mabe02/lanterna.git</connection>\n        <developerConnection>scm:git:git@github.com:mabe02/lanterna.git</developerConnection>\n        <url>https://github.com/mabe02/lanterna</url>\n      <tag>HEAD</tag>\n  </scm>\n\n    <dependencies>\n        <!-- Optional JNA dependencies -->\n        <dependency>\n            <groupId>net.java.dev.jna</groupId>\n            <artifactId>jna</artifactId>\n            <version>5.5.0</version>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>net.java.dev.jna</groupId>\n            <artifactId>jna-platform</artifactId>\n            <version>5.5.0</version>\n            <optional>true</optional>\n        </dependency>\n\n        <!-- Test dependencies -->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.13.1</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.sun.xml.ws</groupId>\n            <artifactId>jaxws-ri</artifactId>\n            <version>2.3.2</version>\n            <type>pom</type>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <executions>\n                    <execution>\n                        <id>default-compile</id>\n                        <goals>\n                            <goal>compile</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>java9</id>\n                        <goals>\n                            <goal>compile</goal>\n                        </goals>\n                        <phase>compile</phase>\n                        <configuration>\n                            <source>1.9</source>\n                            <target>1.9</target>\n                            <release>9</release>\n                            <multiReleaseOutput>true</multiReleaseOutput>\n                            <compileSourceRoots>\n                                <compileSourceRoot>${basedir}/src/main/java9</compileSourceRoot>\n                            </compileSourceRoots>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>3.2.0</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>test-jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <archive>\n                        <manifestEntries>\n                            <Multi-Release>true</Multi-Release>\n                        </manifestEntries>\n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>3.0.0-M3</version>\n                <executions>\n                    <execution>\n                        <id>enforce-maven</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <requireMavenVersion>\n                                    <version>3.3.9</version>\n                                </requireMavenVersion>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>clirr-maven-plugin</artifactId>\n                <version>2.8</version>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.10</version>\n                <executions>\n                    <execution>\n                        <id>default-prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>default-report</id>\n                        <phase>prepare-package</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.sonatype.plugins</groupId>\n                <artifactId>nexus-staging-maven-plugin</artifactId>\n                <version>1.6.8</version>\n                <extensions>true</extensions>\n                <configuration>\n                    <serverId>ossrh</serverId>\n                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                    <autoReleaseAfterClose>true</autoReleaseAfterClose>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n    </distributionManagement>\n\n    <profiles>\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>2.2.1</version>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>2.9.1</version>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>1.6</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n    <developers>\n        <developer>\n            <id>Martin</id>\n            <name>Martin Berglund</name>\n            <email>mabe02@gmail.com</email>\n        </developer>\n    </developers>\n</project>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}