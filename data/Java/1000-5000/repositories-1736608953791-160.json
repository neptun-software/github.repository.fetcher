{
  "metadata": {
    "timestamp": 1736608953791,
    "page": 160,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "angryip/ipscan",
      "stars": 4261,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0693359375,
          "content": "/out\n/generated\n/test-coverage\n/.gradle\n/build\n/lib/*src.zip\n.DS_Store\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG",
          "type": "blob",
          "size": 9.5947265625,
          "content": "Changes in 3.9.1:\n- Mac: fix permissions in bundled JRE, so that MAC address scanning would work #384\n- Linux startup fix if JAVA_HOME has spaces #391\n- Update MAC vendors\n\nChanges in 3.9.0:\n- Mac: bundle Java 17 runtime, so that Java doesn't need to be installed separately\n- Mac: change next alive host shortcut to Cmd+N (Cmd+H is conflicting with hide window)\n- Windows installer: update bundled Java runtime to 17\n- Linux XFCE: execute terminal properly #379\n- Remember last window position #278\n- Faster File Feeder when loading large files #347\n- Update SWT for all platforms\n- Update MAC vendors\n\nChanges in 3.8.2:\n- Allow building if .git is not present (e.g. from source zip) #319\n- Windows installer now includes a stripped-down JRE to avoid downloading Java separately\n- Windows 32-bit build has been removed\n- Linux deb & rpm packages now correctly specify Java 11 dependency, not 8\n- Mac: display a notification if java not in PATH #279\n- If scanning a local network, then ARP will be used in addition to chosen Pinger to detect more hosts #280\n- Improved storing/finding of MAC-based host comments. In LAN, they will always be MAC-based now #311\n- Removed root-only ICMPPinger that worked using RawSockets, JavaPinger will use ICMP if has permissions to do so\n\nChanges in 3.8.1:\n- Make 32-bit Windows build still run under Oracle Java 8 - it seems to still be popular #324\n- Make deb files install on older Debian without zst compression support #327\n- Add \"allow anonymous error reports\" checkbox also to Preferences to make it more discoverable #326\n\nChanges in 3.8.0:\n- Support for Mac M1 (provided that it runs an arm64 build of Java) - thanks to @aplr #284\n- SWT updated for all platforms\n- Java 11 is now the minimum required (due to SWT), source can now be built with Java 17\n- If real network netmask is known (e.g. LAN), then skipping of broadcast addresses will respect that instead of always skipping .0 and .255 #309\n- Pressing IP^ button to prefill local network interfaces will now set netmask in Range Feeder\n- LinuxMACFetcher will now read Kernel ARP table directly, not relying on the arp utility to be available #320\n- Keywords added to Linux desktop file/launcher to make searching easier #321\n- Introduce ARPPinger for pinging LAN hosts that don't respond to ICMP, etc #308\n- Mac vendors updated\n\nChanges in 3.7.6:\n- Many rare bug/crash fixes reported to Google Analytics\n- Translations updated\n- Mac vendors updated\n\nChanges in 3.7.5:\n- Upgrade SWT for all platforms, some UI alignment improvements\n- Fix resolving of MAC vendors and Comments if MAC separator is changed to non-standard\n- Support for NetBIOS (NBSTAT) responses containing no names (often returned by Apple devices)\n- Mac vendors updated\n\nChanges in 3.7.4:\n- Allow changing of MAC address separator (many tools use \"-\" instead of \":\") #261\n- Cleanup some GUI resource leaks\n- Fix \"ghost hosts\" on macOS if using TCPPinger #269\n- Comments for hosts on LAN (tied to MAC address) will now display even if MAC fetcher is not selected, or is after the Comments fetcher #124\n- Preference added to opt-out of checking for new versions #270\n- Calculate IPv6 range scanning percent correctly #267\n- Mac vendors updated\n\nChanges in 3.7.3:\n- Local IP address popup will now list IPv6 addresses and support IPv6 netmasks\n- Support for silent uninstall on Windows #263\n- Improve detection of the default primary network interface on Windows #257\n- Update Linux SWT for better support for KDE dark themes #247\n- Support installing of .deb packages with Java 15 #266\n- Do not show first run dialog nor check version updates if run with any command-line arguments (for automation)\n\nChanges in 3.7.2:\n- Fix choosing openers from main menu on macOS #243\n- Install 64-bit binary by Windows installer if Java is not detected at all #245\n\nChanges in 3.7.1:\n- Enable ICMP Echo pinger for Linux x64 only, as it requires the corresponding native .so implementation that is not available for Mac and not needed for Windows\n- Add a new Java Built-in pinger by default (InetAddress.isReachable()), which uses ICMP if enough privileges or falls back to TCP port 7\n- Fix handling of escape sequences in HTTP Sender\n- Fix macOS dark mode switching for some users\n- Some fixes in Russian translation\n- Internally, replaced Dagger with much simpler DI implementation. Plugins can now declare non-default constructors to benefit from Dependency Injection as well.\n- Mac vendors updated\n\nChanges in 3.7.0:\n- Windows: use latest NSIS for installer generation, fixing DLL hijacking\n- Mac: dark mode support\n- Linux: add helpful error message when X Session is not available / running under full root in terminal\n- Linux/Ubuntu: fix launching of terminal in openers for newer versions of Gnome\n- Raspbian/ARM: New experimental builds without bundled SWT, using the one provided by system\n- Updated SWT for all 64-bit platforms\n- Updated Chinese translations\n- Mac vendors updated\n\nChanges in 3.6.2:\n- New launcher for Windows that respects JAVA_HOME and PATH environment variables and thus works with AdoptOpenJDK\n- Improve detection of 32/64-bit JVM in Windows installer. Assume 64-bit if detection fails (was 32-bit before)\n- Checkbox allowing opt-out of crash reports to Google Analytics to Getting Started dialog\n- Mac vendors updated\n\nChanges in 3.6.1:\n- Fix exporting for Mac\n- Improve display of unexpected errors on Mac\n- Mac vendors updated\n\nChanges in 3.6.0:\n- HTTP Proxy is now available\n- Java 8 is now the minimum required\n- Experimental (and incomplete yet) IPv6 support\n- Try to select the real network interface by default on launch\n- KDE launching support & other small fixes\n- Windows Java detection has an improved error message\n- Translation updates, added Chinese traditional and simplified\n- Mac vendors updated\n\nChanges in 3.5.5:\n- Translation updates, added Brazilian Portuguese\n- Small bugfixes\n- Mac vendor updates\n- JDK 11 support in Windows exe\n- Linux version will now use GTK 3 by default, enabling touch screen support\n- New build system using gradle and proguard\n- This is the last release to support running under Java 7\n\nChanges in 3.5.4:\n- Was a broken release, replaced by 3.5.5\n\nChanges in 3.5.3:\n- Translation updates\n- Ping Packet Loss fetcher\n- Mac vendor updates\n- Debian packages have updated licensing and Java 10 support\n\nChanges in 3.5.2:\n- Support for Java 9 in Windows installer and executable as well as deb packages\n- Easier testing of new translations by putting the messages* file to the same directory as executable\n- Support for lang_COUNTRY locales, e.g. pt_BR\n- Some common error cases improved (using gathered data from GA)\n- Increased maximum number of addresses generated by Random Feeder\n- Added Russian translation, updated other languages\n\nChanges in 3.5.1:\n- Restore support for Java 7\n- Allow editing of preferences even of deselected fetchers\n- Improve detection of IPs/hostnames in file import and file feeder\n- New HTTPProxyFetcher that checks for working HTTP proxies\n- Remove scanning progress from Dock on MacOS X, as it reverts to an incorrect icon\n- Improve fetchers prefs icon for MacOS X\n\nChanges in 3.5:\n- HiDPI/retina display support\n- Flatter icons\n- Select fetchers added to columns menu for easier discoverability\n- Show scanning progress in the system taskbar (no Linux support due to SWT)\n- Details window size is really persisted now\n- Mac vendors updated and are no longer cut to 8 characters\n- Smaller bugfixes\n- Java 6 support dropped due to SWT update\n\nChanges in 3.4.2:\n- Launch4J upgraded to fix finding the 1.8.0b101 JRE on Windows\n- Show version check dialog only if it was requested by the user\n- Italian translation added\n- Rename IP List file feeder to Text File for clarity\n- Mac vendors updated\n\nChanges in 3.4.1:\n- Favorites saving bug fixed\n- More forgiving importing of previously saved scanning results\n- IP details and some other functions now work properly for imported results\n- Mac vendors updated\n- Other small stability improvements\n\nChanges in 3.4:\n- Openers can open several IPs at once\n- More bugfixes in opener editor + OK/Cancel buttons\n- File Feeder now supports extracting of hostnames in addition to IP addresses\n- Loading of exported files will no longer try to rescan the last loaded IP\n- User is asked whether to resume the loaded scan if it seems unfinished\n- Fixed MAC address fetcher for Mac OS\n- MAC vendors updated\n- Check for new version automatically once per month\n- Internal and plugins: Dagger is now used instead of PicoContainer for dependency injection\n- New translations: Turkish, German\n\nChanges in 3.3.3:\n- Fixed a bug in opener editor when switching between openers could overwrite them\n- Bind comments to MAC addresses if possible, making comments for local hosts persist even for dynamic IPs\n\nChanges in 3.3.2:\n- Much smarter HostnameFetcher, which queries mDNS and NetBIOS in case standart DNS reverse lookup doesn't provide results\n- Packaging fix for Windows, which could prevent \"display alive only\" from working\n- Fixed prepopulation of feeder from command-line\n- Fixed dimensions on command-line usage dialog\n- Updated MAC vendors\n\nChanges in 3.3.1:\n- Fix Linux 64-bit (and probably 32-bit as well) build - add missing swt native libraries\n- Quicker hostname lookups\n- Small optimizations in UDP/TCP pingers\n\nChanges in 3.3:\n- IP range now defaults to the current netmask on start to make it easier to start scanning the current network\n- Can load previously saved .txt file with incomplete scanning results and resume the scan\n- IP range can now be scanned in reverse\n- Language can now be selected in preferences\n- Hungarian translation added\n- Fixed links in the Help menu\n- SWT upgraded to 4.3\n- Use 64-bit SWT on Mac, supporting Oracle Java 1.7+\n- Use sheets instead of some dialogs on Mac\n\n(thanks to contributors)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.9140625,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\r\n\t\t       Version 2, June 1991\r\n\r\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\r\n                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\r\n Everyone is permitted to copy and distribute verbatim copies\r\n of this license document, but changing it is not allowed.\r\n\r\n\t\t\t    Preamble\r\n\r\n  The licenses for most software are designed to take away your\r\nfreedom to share and change it.  By contrast, the GNU General Public\r\nLicense is intended to guarantee your freedom to share and change free\r\nsoftware--to make sure the software is free for all its users.  This\r\nGeneral Public License applies to most of the Free Software\r\nFoundation's software and to any other program whose authors commit to\r\nusing it.  (Some other Free Software Foundation software is covered by\r\nthe GNU Library General Public License instead.)  You can apply it to\r\nyour programs, too.\r\n\r\n  When we speak of free software, we are referring to freedom, not\r\nprice.  Our General Public Licenses are designed to make sure that you\r\nhave the freedom to distribute copies of free software (and charge for\r\nthis service if you wish), that you receive source code or can get it\r\nif you want it, that you can change the software or use pieces of it\r\nin new free programs; and that you know you can do these things.\r\n\r\n  To protect your rights, we need to make restrictions that forbid\r\nanyone to deny you these rights or to ask you to surrender the rights.\r\nThese restrictions translate to certain responsibilities for you if you\r\ndistribute copies of the software, or if you modify it.\r\n\r\n  For example, if you distribute copies of such a program, whether\r\ngratis or for a fee, you must give the recipients all the rights that\r\nyou have.  You must make sure that they, too, receive or can get the\r\nsource code.  And you must show them these terms so they know their\r\nrights.\r\n\r\n  We protect your rights with two steps: (1) copyright the software, and\r\n(2) offer you this license which gives you legal permission to copy,\r\ndistribute and/or modify the software.\r\n\r\n  Also, for each author's protection and ours, we want to make certain\r\nthat everyone understands that there is no warranty for this free\r\nsoftware.  If the software is modified by someone else and passed on, we\r\nwant its recipients to know that what they have is not the original, so\r\nthat any problems introduced by others will not reflect on the original\r\nauthors' reputations.\r\n\r\n  Finally, any free program is threatened constantly by software\r\npatents.  We wish to avoid the danger that redistributors of a free\r\nprogram will individually obtain patent licenses, in effect making the\r\nprogram proprietary.  To prevent this, we have made it clear that any\r\npatent must be licensed for everyone's free use or not licensed at all.\r\n\r\n  The precise terms and conditions for copying, distribution and\r\nmodification follow.\r\n\r\n\t\t    GNU GENERAL PUBLIC LICENSE\r\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\r\n\r\n  0. This License applies to any program or other work which contains\r\na notice placed by the copyright holder saying it may be distributed\r\nunder the terms of this General Public License.  The \"Program\", below,\r\nrefers to any such program or work, and a \"work based on the Program\"\r\nmeans either the Program or any derivative work under copyright law:\r\nthat is to say, a work containing the Program or a portion of it,\r\neither verbatim or with modifications and/or translated into another\r\nlanguage.  (Hereinafter, translation is included without limitation in\r\nthe term \"modification\".)  Each licensee is addressed as \"you\".\r\n\r\nActivities other than copying, distribution and modification are not\r\ncovered by this License; they are outside its scope.  The act of\r\nrunning the Program is not restricted, and the output from the Program\r\nis covered only if its contents constitute a work based on the\r\nProgram (independent of having been made by running the Program).\r\nWhether that is true depends on what the Program does.\r\n\r\n  1. You may copy and distribute verbatim copies of the Program's\r\nsource code as you receive it, in any medium, provided that you\r\nconspicuously and appropriately publish on each copy an appropriate\r\ncopyright notice and disclaimer of warranty; keep intact all the\r\nnotices that refer to this License and to the absence of any warranty;\r\nand give any other recipients of the Program a copy of this License\r\nalong with the Program.\r\n\r\nYou may charge a fee for the physical act of transferring a copy, and\r\nyou may at your option offer warranty protection in exchange for a fee.\r\n\r\n  2. You may modify your copy or copies of the Program or any portion\r\nof it, thus forming a work based on the Program, and copy and\r\ndistribute such modifications or work under the terms of Section 1\r\nabove, provided that you also meet all of these conditions:\r\n\r\n    a) You must cause the modified files to carry prominent notices\r\n    stating that you changed the files and the date of any change.\r\n\r\n    b) You must cause any work that you distribute or publish, that in\r\n    whole or in part contains or is derived from the Program or any\r\n    part thereof, to be licensed as a whole at no charge to all third\r\n    parties under the terms of this License.\r\n\r\n    c) If the modified program normally reads commands interactively\r\n    when run, you must cause it, when started running for such\r\n    interactive use in the most ordinary way, to print or display an\r\n    announcement including an appropriate copyright notice and a\r\n    notice that there is no warranty (or else, saying that you provide\r\n    a warranty) and that users may redistribute the program under\r\n    these conditions, and telling the user how to view a copy of this\r\n    License.  (Exception: if the Program itself is interactive but\r\n    does not normally print such an announcement, your work based on\r\n    the Program is not required to print an announcement.)\r\n\r\nThese requirements apply to the modified work as a whole.  If\r\nidentifiable sections of that work are not derived from the Program,\r\nand can be reasonably considered independent and separate works in\r\nthemselves, then this License, and its terms, do not apply to those\r\nsections when you distribute them as separate works.  But when you\r\ndistribute the same sections as part of a whole which is a work based\r\non the Program, the distribution of the whole must be on the terms of\r\nthis License, whose permissions for other licensees extend to the\r\nentire whole, and thus to each and every part regardless of who wrote it.\r\n\r\nThus, it is not the intent of this section to claim rights or contest\r\nyour rights to work written entirely by you; rather, the intent is to\r\nexercise the right to control the distribution of derivative or\r\ncollective works based on the Program.\r\n\r\nIn addition, mere aggregation of another work not based on the Program\r\nwith the Program (or with a work based on the Program) on a volume of\r\na storage or distribution medium does not bring the other work under\r\nthe scope of this License.\r\n\r\n  3. You may copy and distribute the Program (or a work based on it,\r\nunder Section 2) in object code or executable form under the terms of\r\nSections 1 and 2 above provided that you also do one of the following:\r\n\r\n    a) Accompany it with the complete corresponding machine-readable\r\n    source code, which must be distributed under the terms of Sections\r\n    1 and 2 above on a medium customarily used for software interchange; or,\r\n\r\n    b) Accompany it with a written offer, valid for at least three\r\n    years, to give any third party, for a charge no more than your\r\n    cost of physically performing source distribution, a complete\r\n    machine-readable copy of the corresponding source code, to be\r\n    distributed under the terms of Sections 1 and 2 above on a medium\r\n    customarily used for software interchange; or,\r\n\r\n    c) Accompany it with the information you received as to the offer\r\n    to distribute corresponding source code.  (This alternative is\r\n    allowed only for noncommercial distribution and only if you\r\n    received the program in object code or executable form with such\r\n    an offer, in accord with Subsection b above.)\r\n\r\nThe source code for a work means the preferred form of the work for\r\nmaking modifications to it.  For an executable work, complete source\r\ncode means all the source code for all modules it contains, plus any\r\nassociated interface definition files, plus the scripts used to\r\ncontrol compilation and installation of the executable.  However, as a\r\nspecial exception, the source code distributed need not include\r\nanything that is normally distributed (in either source or binary\r\nform) with the major components (compiler, kernel, and so on) of the\r\noperating system on which the executable runs, unless that component\r\nitself accompanies the executable.\r\n\r\nIf distribution of executable or object code is made by offering\r\naccess to copy from a designated place, then offering equivalent\r\naccess to copy the source code from the same place counts as\r\ndistribution of the source code, even though third parties are not\r\ncompelled to copy the source along with the object code.\r\n\r\n  4. You may not copy, modify, sublicense, or distribute the Program\r\nexcept as expressly provided under this License.  Any attempt\r\notherwise to copy, modify, sublicense or distribute the Program is\r\nvoid, and will automatically terminate your rights under this License.\r\nHowever, parties who have received copies, or rights, from you under\r\nthis License will not have their licenses terminated so long as such\r\nparties remain in full compliance.\r\n\r\n  5. You are not required to accept this License, since you have not\r\nsigned it.  However, nothing else grants you permission to modify or\r\ndistribute the Program or its derivative works.  These actions are\r\nprohibited by law if you do not accept this License.  Therefore, by\r\nmodifying or distributing the Program (or any work based on the\r\nProgram), you indicate your acceptance of this License to do so, and\r\nall its terms and conditions for copying, distributing or modifying\r\nthe Program or works based on it.\r\n\r\n  6. Each time you redistribute the Program (or any work based on the\r\nProgram), the recipient automatically receives a license from the\r\noriginal licensor to copy, distribute or modify the Program subject to\r\nthese terms and conditions.  You may not impose any further\r\nrestrictions on the recipients' exercise of the rights granted herein.\r\nYou are not responsible for enforcing compliance by third parties to\r\nthis License.\r\n\r\n  7. If, as a consequence of a court judgment or allegation of patent\r\ninfringement or for any other reason (not limited to patent issues),\r\nconditions are imposed on you (whether by court order, agreement or\r\notherwise) that contradict the conditions of this License, they do not\r\nexcuse you from the conditions of this License.  If you cannot\r\ndistribute so as to satisfy simultaneously your obligations under this\r\nLicense and any other pertinent obligations, then as a consequence you\r\nmay not distribute the Program at all.  For example, if a patent\r\nlicense would not permit royalty-free redistribution of the Program by\r\nall those who receive copies directly or indirectly through you, then\r\nthe only way you could satisfy both it and this License would be to\r\nrefrain entirely from distribution of the Program.\r\n\r\nIf any portion of this section is held invalid or unenforceable under\r\nany particular circumstance, the balance of the section is intended to\r\napply and the section as a whole is intended to apply in other\r\ncircumstances.\r\n\r\nIt is not the purpose of this section to induce you to infringe any\r\npatents or other property right claims or to contest validity of any\r\nsuch claims; this section has the sole purpose of protecting the\r\nintegrity of the free software distribution system, which is\r\nimplemented by public license practices.  Many people have made\r\ngenerous contributions to the wide range of software distributed\r\nthrough that system in reliance on consistent application of that\r\nsystem; it is up to the author/donor to decide if he or she is willing\r\nto distribute software through any other system and a licensee cannot\r\nimpose that choice.\r\n\r\nThis section is intended to make thoroughly clear what is believed to\r\nbe a consequence of the rest of this License.\r\n\r\n  8. If the distribution and/or use of the Program is restricted in\r\ncertain countries either by patents or by copyrighted interfaces, the\r\noriginal copyright holder who places the Program under this License\r\nmay add an explicit geographical distribution limitation excluding\r\nthose countries, so that distribution is permitted only in or among\r\ncountries not thus excluded.  In such case, this License incorporates\r\nthe limitation as if written in the body of this License.\r\n\r\n  9. The Free Software Foundation may publish revised and/or new versions\r\nof the General Public License from time to time.  Such new versions will\r\nbe similar in spirit to the present version, but may differ in detail to\r\naddress new problems or concerns.\r\n\r\nEach version is given a distinguishing version number.  If the Program\r\nspecifies a version number of this License which applies to it and \"any\r\nlater version\", you have the option of following the terms and conditions\r\neither of that version or of any later version published by the Free\r\nSoftware Foundation.  If the Program does not specify a version number of\r\nthis License, you may choose any version ever published by the Free Software\r\nFoundation.\r\n\r\n  10. If you wish to incorporate parts of the Program into other free\r\nprograms whose distribution conditions are different, write to the author\r\nto ask for permission.  For software which is copyrighted by the Free\r\nSoftware Foundation, write to the Free Software Foundation; we sometimes\r\nmake exceptions for this.  Our decision will be guided by the two goals\r\nof preserving the free status of all derivatives of our free software and\r\nof promoting the sharing and reuse of software generally.\r\n\r\n\t\t\t    NO WARRANTY\r\n\r\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\r\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\r\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\r\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\r\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\r\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\r\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\r\nREPAIR OR CORRECTION.\r\n\r\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\r\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\r\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\r\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\r\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\r\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\r\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\r\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\r\nPOSSIBILITY OF SUCH DAMAGES.\r\n\r\n\t\t     END OF TERMS AND CONDITIONS\r\n\r\n\t    How to Apply These Terms to Your New Programs\r\n\r\n  If you develop a new program, and you want it to be of the greatest\r\npossible use to the public, the best way to achieve this is to make it\r\nfree software which everyone can redistribute and change under these terms.\r\n\r\n  To do so, attach the following notices to the program.  It is safest\r\nto attach them to the start of each source file to most effectively\r\nconvey the exclusion of warranty; and each file should have at least\r\nthe \"copyright\" line and a pointer to where the full notice is found.\r\n\r\n    <one line to give the program's name and a brief idea of what it does.>\r\n    Copyright (C) <year>  <name of author>\r\n\r\n    This program is free software; you can redistribute it and/or modify\r\n    it under the terms of the GNU General Public License as published by\r\n    the Free Software Foundation; either version 2 of the License, or\r\n    (at your option) any later version.\r\n\r\n    This program is distributed in the hope that it will be useful,\r\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n    GNU General Public License for more details.\r\n\r\n    You should have received a copy of the GNU General Public License\r\n    along with this program; if not, write to the Free Software\r\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\r\n\r\n\r\nAlso add information on how to contact you by electronic and paper mail.\r\n\r\nIf the program is interactive, make it output a short notice like this\r\nwhen it starts in an interactive mode:\r\n\r\n    Gnomovision version 69, Copyright (C) year name of author\r\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\r\n    This is free software, and you are welcome to redistribute it\r\n    under certain conditions; type `show c' for details.\r\n\r\nThe hypothetical commands `show w' and `show c' should show the appropriate\r\nparts of the General Public License.  Of course, the commands you use may\r\nbe called something other than `show w' and `show c'; they could even be\r\nmouse-clicks or menu items--whatever suits your program.\r\n\r\nYou should also get your employer (if you work as a programmer) or your\r\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\r\nnecessary.  Here is a sample; alter the names:\r\n\r\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\r\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\r\n\r\n  <signature of Ty Coon>, 1 April 1989\r\n  Ty Coon, President of Vice\r\n\r\nThis General Public License does not permit incorporating your program into\r\nproprietary programs.  If your program is a subroutine library, you may\r\nconsider it more useful to permit linking proprietary applications with the\r\nlibrary.  If this is what you want to do, use the GNU Library General\r\nPublic License instead of this License.\r\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.3056640625,
          "content": "# This file is for those not familiar with Java\n# Use ./gradlew instead of make!\n\ninfo:\n\t./gradlew info\n\t\nclean:\n\t./gradlew clean\n\nall:\n\t./gradlew all\n\t\ncurrent:\n\t./gradlew current\n\t\nlinux:\n\t./gradlew linux\n\t\nlinux64:\n\t./gradlew linux64\n\t\nwin32:\n\t./gradlew win32\n\t\nwin64:\n\t./gradlew win64\n\t\nmac:\n\t./gradlew mac\n\t\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.72265625,
          "content": "# Angry IP Scanner\n\nThis is the source code of Angry IP Scanner, licensed with GPL v2. [Official site](https://angryip.org/)\n\nThe code is written mostly in Java (currently, source level 11).\n[SWT library from Eclipse project](https://eclipse.org/swt/) is used for GUI that provides native components for each supported platform.\n\nThe project runs on Linux, Windows and macOS. \n\n## Helping / Contributing\n\nAs there are millions of different networks, configurations and devices, please help with submitting a **Pull Request** if something\ndoesn't work as you expect (especially macOS users). Any problem is easy to fix if you have an environment to reproduce it 😀\n\nFor that, download [Intellij IDEA community edition](https://www.jetbrains.com/idea/download/) and open the cloned project.\nThen, you can run Angry IP Scanner in Debug mode and put a breakpoint into the [desired Fetcher class](src/net/azib/ipscan/fetchers).\n\n## Building [![Actions Status](https://github.com/angryip/ipscan/workflows/CI/badge.svg)](https://github.com/angryip/ipscan/actions)\n\nUse Gradle for building a package for your desired platform:\n\n`./gradlew` or `make` in the project dir for the list of available targets.\n\n`./gradlew current` would build the app for your current platform\n\nThe resulting binaries will be put into the `build/libs` directory.\nRun jar files with `java -jar <jar-file>`.\n\nDeb and rpm packages can be built only on Linux (tested on Ubuntu). \nWindows installer can be built on Windows only.\n\n`./gradlew all` will build packages for all OS (tested on Ubuntu only, see dependencies below).\n\n### Dependencies\n\nOn Ubuntu install the following packages:\n```\nsudo apt install openjdk-11-jdk rpm fakeroot\n```\n\nInstall OpenJDK on other platforms as you usually do it.\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 1.587890625,
          "content": "* SWT Error: no more handles (empty modal window appears)\n* Retrieve value for any fetcher from context menu\n* Monitoring mode (which IPs appear/disappear)\n* UX: button for netmask application?\n* Graalvm native-image to build binary\n\n* Use ServiceLoader for plugins\n* Use ipify for /iplocate\n* Add URLFetcher with configurable URL and JSON/XPath expression\n* WHOIS fetcher\n\n* Windows: net stop SharedAccess\n* gtk sort direction arrows\n* advanced exporting options dialog (with append checkbox)\n* Enable/Disable ports (without resetting)\n* Opener Launchers to the details window\n* multiple port support web-detect, opening in browser selects scanned ports if available\n* add new fetchers by configuration of PortTextFetcher\n* public XSL for XMLExporter\n* Easier adding/removing of columns to the result table (without resetting the results)\n* command-line: support favorites\n* command-line: add netmask support to the range feeder \n* find not-null for column\n* export/import of settings (profiles or tie with Favorites?)\n* display friendly names of ports\n* preferences profiles (tied to favorites?)\n* free text (advanced) feeder\n* saving and restoring of results together with all options\n* advanced find (firefox-like) with options Find Next, Find Previoius, Select all matches\n* count occurencies of search (either separate or included)\n* diff with saved\n* show distinct values for a column\n* SWT bug: deleting of many IPs at once is very slow (freezes the ipscan) due to the sorting of provided indices\n\n* use jpcap for raw packet injection and ARP scanning\n* startup as root option\n* compile librocksaw for mac and linux64\n"
        },
        {
          "name": "build-native-image.sh",
          "type": "blob",
          "size": 0.2265625,
          "content": "~/apps/graalvm-ce-java11-20.3.0/bin/native-image -jar build/libs/ipscan-linux64-*.jar --no-fallback --allow-incomplete-classpath -H:IncludeResources='messages.*$' -H:IncludeResources=mac-vendors.txt -H:IncludeResources='images/.*$'\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 12.1591796875,
          "content": "buildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath \"com.guardsquare:proguard-gradle:7.3.0\"\n    }\n}\n\nplugins {\n    id \"java\"\n}\n\ndef osName = System.getProperty(\"os.name\")\ndef is64 = System.getProperty(\"os.arch\").contains(\"64\")\ndef isArm = System.getProperty(\"os.arch\").equals(\"aarch64\")\ndef platform = osName.contains(\"Linux\") ? 'linux' + (is64 ? '64' : '32') :\n               osName.contains(\"Windows\") ? 'win' + (is64 ? '64' : '32') :\n               osName.contains(\"OS X\") ? 'mac' + (isArm ? \"Arm64\" : \"X86\") : 'unknown'\n\nString exec(def line, String dir = \".\", boolean failOnError = true) {\n    def proc = Runtime.getRuntime().exec(line, null, project.file(dir))\n    if (proc.waitFor() == 0) return new String(proc.inputStream.readAllBytes()).trim()\n    else {\n        if (failOnError) throw new Exception(line + \"\\n\" + new String(proc.errorStream.readAllBytes()))\n        else return null\n    }\n}\n\nversion = exec(\"git describe --tags\", \".\", false) ?: \"unknown\"\n\nsourceCompatibility = targetCompatibility = 11\n\ndef javaModules = [\"java.base\", \"java.prefs\", \"java.logging\", \"jdk.crypto.ec\"]\nproject.ext.set(\"javaModules\", javaModules)\n\nsourceSets {\n    main {\n        java { srcDirs \"src\" }\n        resources { srcDirs \"config\", \"src\", \"resources\" }\n    }\n    test {\n        java { srcDir \"test\" }\n        resources { srcDir \"test\" }\n    }\n}\n\nrepositories {\n    mavenCentral()\n}\n\nconfigurations {\n    jna\n    any\n    linux64\n    win64.extendsFrom(jna)\n    macX86\n    macArm64\n\n    // compile and test with current platform's SWT and JNA\n    compileOnly.extendsFrom(getAt(platform), jna)\n    testImplementation.extendsFrom(compileOnly)\n    runtimeClasspath.extendsFrom(compileOnly)\n    all*.exclude module: 'org.eclipse.swt' // transitive dependency in Maven that fails\n}\n\ndependencies {\n    def swtVersion = '3.123.0'\n    linux64 \"org.eclipse.platform:org.eclipse.swt.gtk.linux.x86_64:${swtVersion}\"\n    win64 \"org.eclipse.platform:org.eclipse.swt.win32.win32.x86_64:${swtVersion}\"\n    macX86 \"org.eclipse.platform:org.eclipse.swt.cocoa.macosx.x86_64:${swtVersion}\"\n    macArm64 \"org.eclipse.platform:org.eclipse.swt.cocoa.macosx.aarch64:${swtVersion}\"\n    jna 'net.java.dev.jna:jna:5.9.0'\n    testImplementation 'junit:junit:4.13.2'\n    testImplementation 'org.mockito:mockito-core:2.23.0'\n}\n\ntest {\n    if (platform.startsWith(\"mac\")) {\n        // jvmArgs \"-XstartOnFirstThread\"\n        println(\"WARNING: tests that touch GUI will fail on Mac due to Cocoa restrictions and Gradle unable to run tests on main thread\")\n        filter {\n            includeTestsMatching \"net.azib.ipscan.core.net.*\"\n        }\n    }\n}\n\ndef packageTask(String platform, Closure doMore) {\n    return tasks.create(platform, Jar) {\n        dependsOn = ['classes']\n        manifest {\n           attributes 'Implementation-Title': 'Angry IP Scanner',\n               'Implementation-Version': version,\n               'Main-Class': 'net.azib.ipscan.Main',\n               'Class-Path': platform == \"any\" ? \"/usr/share/java/swt4.jar /usr/lib/eclipse/swt.jar ./\" : \"./\",\n               'Title': 'Angry IP Scanner',\n               'Version': version,\n               'Build-Date': java.time.LocalDate.now().toString(),\n               'URL': 'https://angryip.org/'\n        }\n        archiveBaseName.set(project.name + '-' + platform)\n        from {\n           configurations[platform].collect {\n               it.isDirectory() ? it : zipTree(it)\n           }\n        }\n        exclude(\n           'images/**/*.svg',\n           'META-INF/ECLIPSE*',\n           'about_files/*',\n           'version.txt',\n           '.api_description',\n           'about.html',\n           'fragment.properties',\n           'chrome.manifest',\n           // Linux/GTK\n           'libswt-awt-gtk-*.so',\n           'libswt-glx-gtk-*.so',\n           'libswt-webkit-gtk-*.so',\n           'webkitextensions*/*',\n           // Win32\n           'swt-awt-*.dll',\n           'swt-wgl-*.dll',\n           'swt-gdip-*.dll',\n           'swt-webkit-*.dll',\n           // Mac\n           'libswt-awt-*.jnilib',\n            // JNA\n            'com/sun/jna/*/*.a',\n            'com/sun/jna/*/*.so',\n            'com/sun/jna/*/*.jnilib',\n            \"com/sun/jna/win32-${platform == 'win32' ? 'x86-64' : platform == 'win64' ? 'x86' : '*'}/*.dll\",\n            // Win-specific stuff\n            !platform.startsWith('win') ? 'net/azib/ipscan/core/net/Win*' : '',\n            !platform.startsWith('win') ? 'net/azib/ipscan/fetchers/Win*' : ''\n        )\n        with jar\n\n        if (platform != \"any\")\n            finalizedBy minimizeTask(platform, doMore)\n        else\n            doLast(doMore)\n    }\n}\n\ndef minimizeTask(String platform, Closure doMore) {\n    return tasks.create(\"${platform}.min\", proguard.gradle.ProGuardTask) {\n        injars \"build/libs/${project.name}-${platform}-${version}.jar\"\n        outjars \"build/libs/${project.name}-${platform}-${version}.min.jar\"\n        (project.ext.javaModules + \"java.desktop\").each {\n            libraryjars System.getProperty('java.home') + \"/jmods/${it}.jmod\"\n        }\n        dontobfuscate\n        dontoptimize\n        dontnote '**'\n        configuration 'ext/swt.pro'\n        configuration 'ext/jna.pro'\n\n        def keepClasses = [\n            'net.azib.ipscan.**',\n        ]\n\n        for (keepClass in keepClasses) {\n            keep access: 'public', name: keepClass, {\n                method access: 'public'\n            }\n        }\n\n        doLast {\n            ant.move(file: \"build/libs/${project.name}-${platform}-${version}.min.jar\", tofile: \"build/libs/${project.name}-${platform}-${version}.jar\")\n            doMore()\n        }\n    }\n}\n\ndef winLauncher(def platform) {\n    ant.concat(destfile: \"build/libs/${project.name}-${platform}-${version}.exe\", binary: true) {\n        ant.fileset(file: \"ext/win-launcher/launcher.exe\")\n        ant.fileset(file: \"build/libs/${project.name}-${platform}-${version}.jar\")\n    }\n    ant.delete(file: \"build/libs/${project.name}-${platform}-${version}.jar\")\n}\n\ndef deb(def platform, def arch, def moreDeps = '') {\n    def dist = buildDir.path + \"/libs/deb\"\n    ant.mkdir(dir: dist)\n    ant.copy(todir: dist) {\n        ant.fileset(dir: \"ext/deb-bundle\")\n    }\n    ant.copy(file: \"build/libs/${project.name}-${platform}-${version}.jar\", todir: \"${dist}/usr/lib/ipscan\")\n    ant.copy(file: \"resources/images/icon128.png\", tofile: \"${dist}/usr/share/pixmaps/ipscan.png\")\n\n    ant.replace(file: \"${dist}/DEBIAN/control\") {\n        ant.replacefilter(token: \"VERSION\", value: version)\n        ant.replacefilter(token: \"ARCH\", value: arch)\n        ant.replacefilter(token: \"DEPENDS \", value: moreDeps)\n    }\n\n    exec(\"chmod +x usr/bin/ipscan usr/lib/ipscan/${project.name}-${platform}-${version}.jar\", dist)\n    exec(\"fakeroot dpkg-deb -Zxz -b deb ${project.name}_${version}_${arch}.deb\", \"$dist/..\")\n    ant.delete(dir: dist)\n}\n\ndef rpm(def platform, def arch) {\n    def dist = buildDir.path + '/libs/rpm'\n    def rpmVersion = version.replace('-', '.')\n    ant.mkdir(dir: dist)\n    ant.copy(todir: dist) {\n        ant.fileset(dir: \"ext/rpmbuild\")\n    }\n    ant.replace(file: \"${dist}/SPECS/ipscan.spec\") {\n        ant.replacefilter(token: \"RPM_VERSION\", value: rpmVersion)\n        ant.replacefilter(token: \"VERSION\", value: version)\n    }\n    exec(new String[] {\"sh\", \"-c\", \"rpmbuild --target ${arch} --define \\\"_topdir ${new File(dist).absolutePath}\\\" --define \\\"platform ${platform}\\\" -bb SPECS/ipscan.spec\"}, dist)\n    ant.move(file: \"${dist}/RPMS/${arch}/ipscan-${rpmVersion}-1.${arch}.rpm\", todir:'build/libs')\n    ant.delete(dir: dist)\n}\n\ndef macLauncher(def platform) {\n    def dist = buildDir.path + '/libs'\n    def name = 'Angry IP Scanner'\n    exec(\"cp -rp ext/mac-bundle/. $dist\")\n    ant.copy(todir: dist) {\n        ant.fileset(dir: \"ext/mac-bundle\")\n    }\n\n    def target = \"${dist}/${name}.app/Contents/MacOS\"\n    ant.move(file: \"${dist}/${project.name}-${platform}-${version}.jar\", todir: target)\n    jlink(target, \"jre\")\n\n    ant.replace(file: \"${dist}/${name}.app/Contents/Info.plist\") {\n        ant.replacefilter(token: \"APPNAME\", value: name)\n        ant.replacefilter(token: \"VERSION_NUM\", value: version.replaceFirst('-.*', ''))\n        ant.replacefilter(token: \"VERSION\", value: version)\n    }\n\n    ant.delete(file: \"${dist}/${name}.app/Contents/MacOS/jre/bin/keytool\")\n\n    def zipName = \"${dist}/${project.name}-${platform}-${version}.zip\"\n    exec(\"zip -R $zipName * -x*.zip\", dist)\n\n    if (System.getenv(\"APPLE_USER\")) {\n        // TODO: codesign --sign Example --options runtime --entitlements test/test.entitlements --force build/Release/test.app\n        // TODO: https://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution/customizing_the_notarization_workflow\n        println(\"Sending zip file to Apple for notarization\")\n        exec(\"xcrun altool --list-providers --username ${System.getenv(\"APPLE_USER\")} --password ${System.getenv(\"APPLE_PASSWORD\")}\", \".\", false)\n        exec(\"xcrun altool --notarize-app --primary-bundle-id net.azib.ipscan.zip --username ${System.getenv(\"APPLE_USER\")} --password ${System.getenv(\"APPLE_PASSWORD\")} --file ${zipName}\", \".\", false)\n    }\n\n    ant.delete(dir: \"${dist}/${name}.app\")\n}\n\npackageTask('linux64') {\n    deb('linux64', 'amd64')\n    rpm('linux64', 'x86_64')\n}\n\npackageTask('any') {\n    deb('any', 'all', 'libswt-gtk-4-java, libswt-cairo-gtk-4-jni,')\n}\n\npackageTask('win64') {\n    winLauncher('win64')\n}\n\npackageTask('macX86') {\n    macLauncher(\"macX86\")\n}\n\npackageTask('macArm64') {\n    macLauncher(\"macArm64\")\n}\n\ndef jlink(String target, String jrePath, String extraOpts = System.getenv(\"JLINK_OPTS\") ?: \"\") {\n    def jreDir = new File(target, jrePath)\n    if (!jreDir.exists()) {\n        jreDir.getParentFile().mkdirs()\n        exec(\"jlink --output $jrePath $extraOpts --vm=client --compress=2 --no-header-files --no-man-pages --strip-debug --add-modules \" + javaModules.join(\",\"), target)\n        ant.delete(dir: new File(jreDir, \"legal\"))\n    }\n}\n\ntask 'win-installer'(dependsOn: 'win64') {\n    doLast {\n        def nsisVersion = \"3.08\"\n        def nsis = \"nsis-$nsisVersion\"\n        def installerDir = 'ext/win-installer'\n        ant.get(src: \"https://sourceforge.net/projects/nsis/files/NSIS%203/${nsisVersion}/${nsis}.zip/download\", dest: \"$installerDir/${nsis}.zip\", skipexisting: 'true')\n        ant.unzip(src: \"${installerDir}/${nsis}.zip\", dest: installerDir)\n        ant.replace(file: \"${installerDir}/InstallerConfig.nsh\") {\n            ant.replacefilter(token: \"VERSION_MINOR\", value: \"8\")\n            ant.replacefilter(token: \"VERSION\", value: version)\n        }\n        jlink(installerDir, \"AppFiles/jre\")\n        ant.copy(file: \"resources/images/icon.ico\", todir: \"${installerDir}/AppFiles\")\n        ant.copy(file: \"LICENSE\", tofile: \"${installerDir}/AppFiles/license.txt\")\n        ant.copy(file: \"build/libs/${project.name}-win64-${version}.exe\", tofile:\"${installerDir}/AppFiles/ipscan.exe\")\n        if (platform.startsWith('win')) {\n            exec(\"cmd /c $nsis\\\\makensis.exe Installer\\\\Installer.nsi\", installerDir)\n        }\n        else {\n            println(\"Building of Windows Installer is not supported on other platforms\")\n            exec(\"wine $nsis/makensis.exe Installer/Installer.nsi\", installerDir)\n        }\n        ant.move(file: \"${installerDir}/ipscan-$version-setup.exe\", todir: \"build/libs\")\n        exec(\"git checkout ${installerDir}/InstallerConfig.nsh\")\n    }\n}\n\ntask mac(dependsOn: ['macX86', 'macArm64'])\n\ntask linux(dependsOn: ['any', 'linux64'])\ntask current(dependsOn: [platform])\n\ntask info {\n    doLast {\n        println \"This script will build ${project.name} ${version}\"\n        println \"Targets:\"\n        println \"  current       - build for current platform ($platform)\"\n        println \"  linux         - builds all Linux binaries\"\n        println \"  linux64       - builds only Linux 64-bit binary\"\n        println \"  any           - doesn't bundle SWT, making it possible to run on ARM/Raspbian with libswt provided by OS (Experimental)\"\n        println \"  mac           - builds all Mac binaries\"\n        println \"  macX86        - builds only MacX86 binary\"\n        println \"  macArm64      - builds only MacArm64 binary\"\n        println \"  win64         - builds only Windows 64-bit binary\"\n        println \"  win-installer - packages a Windows installer (with included JRE)\"\n    }\n}\n\ndefaultTasks 'info'\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.060546875,
          "content": "org.gradle.jvmargs=--add-opens java.base/java.net=ALL-UNNAMED\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windows variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "update-mac-vendors.sh",
          "type": "blob",
          "size": 0.8720703125,
          "content": "#!/bin/bash\n# This scripts downloads and optimizes IEEE MAC vendor list\n\nSED_APP='sed'\nif [ \"$(uname)\" = \"Darwin\" ]; then\n  # Mac users: bundled sed doesn't have -r\n  brew install gnu-sed\n  SED_APP='gsed'\nfi\n\ncurl 'https://standards-oui.ieee.org/oui/oui.txt' |\\\nfgrep '(base 16)' | $SED_APP -r '\n\ts/\\r//g; s/     \\(base 16\\)\\t\\t//\n\ts/,? ?(Inc)\\.?$//I\n\ts/(,|, | )(Ltd|CO,\\.LTD|Limited|GmbH|LLC|A\\/S|AB|AS|SAS|AG|KG|PLC|SRL|OY|Oy|BV|Nederland BV|SAN VE TIC)\\.?$//Ig\n\ts/(,|, | )(Co|Corp|Corporation|Company|Incorporated)\\.?$//Ig\n\ts/\\(.+\\)//\n\ts/ (Electronics?|Technology|Technologies|Telecommunication|Communications?|Corporation|Systems|Solutions|International|Industry|Industries|Networks?|Holdings?|Device$) ?//Ig\n\ts/ (Registration Authority| MobilityCommunication)//\n\ts/SAMSUNG ELECTRO[- ]MECHANICS/Samsung/\n' | cut -c -42 | sort \\\n> resources/mac-vendors.txt\n\nwc -l resources/mac-vendors.txt\n"
        }
      ]
    }
  ]
}