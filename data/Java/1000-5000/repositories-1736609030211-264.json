{
  "metadata": {
    "timestamp": 1736609030211,
    "page": 264,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mpusher/mpush",
      "stars": 3768,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3388671875,
          "content": "*.class\n*.classpath\n*.project\n*/.settings/\n*/target/\n*/bin/\n*/WebContent/\n*/.DS_Store\n\n.idea/\n\ntarget/\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.ear\n*.iml\n.DS_Store\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\nmpush-test/src/test/resources/application.conf\n"
        },
        {
          "name": "Changelog.md",
          "type": "blob",
          "size": 5.7626953125,
          "content": "#### v0.8.0\n\n1. 增加本地ip和外网ip配置项\n2. ConnServer和GatewayServer增加bind ip和register ip 配置项\n3. ConnServer增加权重等扩展属性配置项\n4. 系统模块化重构：SPI增加Plugin接口及其init方法，增加MPushContext对象，方便插件初始化时控制系统内部对象\n5. 广播推送增加RedisBroadcastController存储推送结果到redis, 并通过redis控制推送任务\n6. 启动脚本优化修复不能加载自定义SPI的bug\n7. EventBus订阅方法增加@AllowConcurrentEvents注解，提高高并发性能\n8. 代码优化，当GatewayClient启动时从ZK获取的链接为空时，后续会尝试重新获取\n9. 优化ServerLauncher和PushClient代码，方便自定义系统配置和spring方式启动\n10. 依赖类库升级，日志优化，及其他bug fix\n\n\n\n\n#### v0.7.1\n\n1. 修复网关客户端获取连接失败bug\n2. 修复ZK临时节点在连接断开未重新注册bug\n3. PushClient代码优化，依赖服务启动／停止顺序优化\n4. 增加查询在线用户列表接口，修复Json转换bug\n5. 修改http代理request.copy引用计数bug\n6. 依赖类库升级，日志优化，及其他bug fix\n\n\n\n\n#### v0.7.0\n\n1. 网关新增udp, sctp协议支持，目前支持的协议有tcp/udp/sctp/udt, 推荐tcp\n2. 增加websocket接入层，和原接入层共享线程资源，增加websocket js client\n3. 抽象出cache层，不再直接依赖redis模块，支持自定义缓存实现\n4. 抽象出服务注册与发现层，不再直接依赖Zookeeper模块, 支持自定义服务注册发现\n5. 添加测试用的默认缓存实现以及注册发现实现，在不安装redis,zk的情况下也能进行源码测试\n6. 推送中心模块重构，支持不同的消息来源，支持自定义消息来源，编写从MQ订阅消息demo\n7. Gateway Client代码重构，支持多线程，多连接数配置\n8. 线程池优化，重新设计各模块线程配置方式，EventBus使用动态线程池，增加Netty线程池监控\n9. PushClient任务超时代码优化, 优化Timer任务线程池，在任务取消后直接从队列里删除\n10. PushSender同步调用直接返回PushResult不再兼容老的返回Boolean类型\n11. 修改TimeLine多线程bug，优化PushRequest多线程下代码 \n12. 修复ID_SEQ在高并发下重复的问题，不再使用LongAdder\n13. 代码优化，内存优化，修复推送超时问题\n14. 增加推送压测代码，增加推送统计及流控QPS监控等\n15. 增加tcp/udp 发送接收缓冲区配置\n16. 增netty write-buffer-water-mark配置\n17. 代码优化, 内存优化，及时释放无用的对象\n18. 流控调优，默认关闭流量整形\n19. 增加jmx监控统计, 脚本加入JMX设置，jvm设置\n20. 增加PushCenter消息流转时间线, 方便监控消息的各个生命周期的耗时(PushClient -> GatewayClient -> GatewayServer -> PushCenter -> ConnServer -> Client)\n21. 服务启动/停止流程优化，boot chain正序启动，逆序停止，启动流程日志优化\n\n\n\n\n#### v0.6.1\n\n1. 产品版本策略修改，主版本前移一位，最后一位用于小版本bug fix\n2. 新增支持单机多实例部署方式\n3. 升级依赖类库，解决由于版本升级引起的jedis和zk兼容性问题\n4. 核心日志打印内容优化，更利于问题排查\n5. 修复connId高并发下可能重复的bug\n6. 增加压测代码，优化测试模块\n7. 配置文件优化，增加相应的注释说明\n8. 修复流控发送计数引起的bug\n9. 优化内存占用，连接断开后立即释放Connection的引用\n10. 其他bug fix及代码优化\n\n\n\n\n#### v0.0.6\n\n1. 网关服务增加UDP及组播支持，后续网关部分的TCP部分将逐步淘汰\n2. 新增用户打标，修改标签，取消标签功能\n3. 全网推送增加按标签过滤，按条件过滤，条件表达式目前支持javascript\n4. Service模块代码优化，增加同步启动/停止，超时监控\n5. 推送模块增加流控功能, 分为全局流控和广播流控，以及基于Redis实现的实时流控\n6. 由于网关采用了UDP，PushClient模块和踢人模块增加UDP支持\n7. 线程池代码优化，线程命名调整, 支持配置调整Netty boss和work的线程数\n8. 路由模块:客户端定义增加SPI支持, 用户可自定义控制多端在线策略\n9. 日志及配置项优化，增加mp.home配置项\n10. 心跳检测优化，连接一建立就开始检测心跳，防止客户端握手失败或未握手的情况\n\n\n\n\n#### v0.0.5\n\n1. redis 增加redis3.x集群支持， 配置项不再兼容\n2. 绑定用户调整，校验重复绑定，以及未解绑，就绑定的场景\n3. 新增client push上行功能, 并支持用户以SPI方式集成自己的Handler\n4. 全网推送增加按标签过滤推送用户\n5. 增加流量控制，tcp发送缓冲区检测代码优化\n6. 修复ACK超时方法调用错误bug，增加ack超时时间设置\n7. 解码优化, 不再抛出解码异常，取消循环解码\n8. NettyServer 增加IoRate设置，优雅停止流程优化，先关闭main reactor\n9. 心跳优化，连接建立后就开始计算心跳\n10. sessionId生成器性能优化，采用jdk8 LongAdder\n11. Service模块开始使用java8 CompletableFuture\n12. SPI模块优化增加@Spi注解，多个实现可以指定顺序\n13. Profile 性能分析模块优化，增加性能监控开关配置，加入javassist优化性能\n14. zk client 代码优化，修改临时节点重复注册问题，增加DNS ZK Node\n15. 脚步修改start-foreground不能加载配置项bug, 修改windows启动命令bug\n16. 其他bug fix\n\n\n\n\n#### v0.0.4\n\n1. push client API 调整\n2. push 接口增加了全网推送功能\n3. 用户下线后路由信息不再删除，而是修改为下线状态\n4. 修复ZK Client临时节点断开后，不能恢复注册的bug\n5. 其他bug fix\n\n#### v0.0.3\n\n1. 增加了消息ACK功能\n2. 修复脚本换行问题\n3. bug fix\n\n### v0.0.2\n\n1. 增加多端同时在线攻能\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.81640625,
          "content": "## [详细教程](http://mpush.mydoc.io)\n\n* 官网：[https://mpusher.github.io](https://mpusher.github.io)\n* 文档：[http://mpush.mydoc.io](http://mpush.mydoc.io)\n* QQ群：__114583699__ <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=1de86266c76d00c246c3c7f29cc002667d1c26fcc2f14d2a7b75b3126708e2e1\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"MPUSH开源消息推送系统\" title=\"MPUSH开源消息推送系统\"></a>\n\n## 源码\n* group [https://github.com/mpusher/](https://github.com/mpusher/) 源代码空间\n* server [https://github.com/mpusher/mpush](https://github.com/mpusher/mpush) 服务端源码\n* alloc [https://github.com/mpusher/alloc](https://github.com/mpusher/alloc)  调度器源码\n* mpns [https://github.com/mpusher/mpns](https://github.com/mpusher/mpns)     个性化推送中心源码\n* java-client [https://github.com/mpusher/mpush-client-java](https://github.com/mpusher/mpush-client-java) 纯java客户端源码\n* android sdk&demo [https://github.com/mpusher/mpush-android](https://github.com/mpusher/mpush-android)    安卓SDK和DEMO源码\n* IOS sdk(swift) [https://github.com/mpusher/mpush-client-swift](https://github.com/mpusher/mpush-client-swift) swift版客户端源码\n* IOS sdk(OC) [https://github.com/mpusher/mpush-client-oc](https://github.com/mpusher/mpush-client-oc)  Object C 客户端源码\n\nps:由于源码分别在github和码云有两份，最新的代码以github为主\n\n## 服务调用关系\n![](https://mpusher.github.io/docs/服务依赖关系.png)\n\n## 源码测试\n1. ```git clone https://github.com/mpusher/mpush.git```\n2. 导入到eclipse或Intellij IDEA\n3. 打开```mpush-test```模块，所有的测试代码都在该模块下\n4. 修改配置文件```src/test/resource/application.conf```文件修改方式参照 服务部署第6点\n5. 运行```com.mpush.test.sever.ServerTestMain.java```启动长链接服务\n6. 运行```com.mpush.test.client.ConnClientTestMain.java``` 模拟一个客户端\n7. 运行```com.mpush.test.push.PushClientTestMain``` 模拟给用户下发消息\n8. 可以在控制台观察日志看服务是否正常运行，消息是否下发成功\n\n## 服务部署\n\n###### 说明：mpush 服务只依赖于zookeeper和redis，当然还有JDK>=1.8\n\n1. 安装```jdk 1.8``` 以上版本并设置```%JAVA_HOME％```\n\n2. 安装```zookeeper``` (安装配置步骤略)\n\n3. 安装```Redis``` (安装配置步骤略)\n\n4. 下载mpush server 最新的正式包[https://github.com/mpusher/mpush/releases](https://github.com/mpusher/mpush/releases)\n\n5. 解压下载的tar包`tar -zvxf mpush-release-0.0.2.tar.gz`到 mpush 目录, 结构如下\n\n   ><pre class=\"md-fences\">\n   >drwxrwxr-x 2 shinemo shinemo  4096 Aug 20 09:30 bin —> 启动脚本\n   >drwxrwxr-x 2 shinemo shinemo  4096 Aug 20 09:52 conf —> 配置文件\n   >drwxrwxr-x 2 shinemo shinemo  4096 Aug 20 09:29 lib —> 核心类库\n   >-rw-rw-r-- 1 shinemo shinemo 11357 May 31 11:07 LICENSE\n   >drwxrwxr-x 2 shinemo shinemo  4096 Aug 20 09:32 logs —> 日志目录\n   >-rw-rw-r-- 1 shinemo shinemo    21 May 31 11:07 README.md\n   >drwxrwxr-x 2 shinemo shinemo  4096 Aug 20 09:52 tmp\n   ></pre>\n\n6. 修改 conf 目录下的 ```vi mpush.conf```文件, ```mpush.conf```里的配置项会覆盖同目录下的```reference.conf```文件\n   ```java\n      #主要修改以下配置\n      mp.net.connect-server-port=3000//长链接服务对外端口, 公网端口\n      mp.zk.server-address=\"127.0.0.1:2181\"//zk 机器的地址\n      mp.redis={//redis 相关配置\n            nodes:[\"127.0.0.1:6379\"] //格式是ip:port\n            cluster-model:single //single, cluster\n      }\n      //还有用于安全加密的RSA mp.security.private-key 和 mp.security.public-key 等...\n   ```\n    如果要修改其他配置请参照reference.conf文件\n\n7. 给bin目录下的脚本增加执行权限```chmod u+x *.sh```\n\n8. 执行```./mp.sh start``` 启动服务, 查看帮助```./mp.sh``` 目前支持的命令：\n\n   ```Usage: ./mp.sh {start|start-foreground|stop|restart|status|upgrade|print-cmd}```\n\n   ```set-env.sh``` 用于增加和修改jvm启动参数，比如堆内存、开启远程调试端口、开启jmx等\n\n9. ```cd logs```目录，```cat mpush.out```查看服务是否启动成功\n10. 集成部署，比如集成到现有web工程一起部署到tomcat,可以添加如下依赖\n   \n   ```xml\n   <dependency>\n      <groupId>com.github.mpusher</groupId>\n      <artifactId>mpush-boot</artifactId>\n      <version>0.0.2</version>\n   </dependency>\n   ```\n   启动入口`com.mpush.bootstrap.ServerLauncher.java` \n   \n## 配置文件详解\n   ```java\n##################################################################################################################\n#\n# NOTICE：\n#\n# 系统配置文件，所有列出的项是系统所支持全部配置项\n# 如果要覆盖某项的值可以添加到mpush.conf中。\n#\n# 配置文件格式采用HOCON格式。解析库由https://github.com/typesafehub/config提供。\n# 具体可参照说明文档，比如含有特殊字符的字符串必须用双引号包起来。\n#\n##################################################################################################################\n\nmp {\n    #基础配置\n    home=${user.dir} //程序工作目录\n\n    #日志配置\n    log-level=warn\n    log-dir=${mp.home}/logs\n    log-conf-path=${mp.home}/conf/logback.xml\n\n    #核心配置\n    core {\n        max-packet-size=10k //系统允许传输的最大包的大小\n        compress-threshold=10k //数据包启用压缩的临界值，超过该值后对数据进行压缩\n        min-heartbeat=3m //最小心跳间隔\n        max-heartbeat=3m //最大心跳间隔\n        max-hb-timeout-times=2 //允许的心跳连续超时的最大次数\n        session-expired-time=1d //用于快速重连的session 过期时间默认1天\n        epoll-provider=netty //nio:jdk自带，netty:由netty实现\n    }\n\n    #安全配置\n    security {\n        #rsa 私钥、公钥key长度为1024;可以使用脚本bin/rsa.sh生成, @see com.mpush.tools.crypto.RSAUtils#main\n        private-key=\"MIIBNgIBADANBgkqhkiG9w0BAQEFAASCASAwggEcAgEAAoGBAKCE8JYKhsbydMPbiO7BJVq1pbuJWJHFxOR7L8Hv3ZVkSG4eNC8DdwAmDHYu/wadfw0ihKFm2gKDcLHp5yz5UQ8PZ8FyDYvgkrvGV0ak4nc40QDJWws621dm01e/INlGKOIStAAsxOityCLv0zm5Vf3+My/YaBvZcB5mGUsPbx8fAgEAAoGAAy0+WanRqwRHXUzt89OsupPXuNNqBlCEqgTqGAt4Nimq6Ur9u2R1KXKXUotxjp71Ubw6JbuUWvJg+5Rmd9RjT0HOUEQF3rvzEepKtaraPhV5ejEIrB+nJWNfGye4yzLdfEXJBGUQzrG+wNe13izfRNXI4dN/6Q5npzqaqv0E1CkCAQACAQACAQACAQACAQA=\"\n        public-key=\"MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCghPCWCobG8nTD24juwSVataW7iViRxcTkey/B792VZEhuHjQvA3cAJgx2Lv8GnX8NIoShZtoCg3Cx6ecs+VEPD2fBcg2L4JK7xldGpOJ3ONEAyVsLOttXZtNXvyDZRijiErQALMTorcgi79M5uVX9/jMv2Ggb2XAeZhlLD28fHwIDAQAB\"\n        aes-key-length=16 //AES key 长度\n    }\n\n    #网络配置\n    net {\n        local-ip=\"\"  //本地ip, 默认取第一个网卡的本地IP\n        public-ip=\"\" //外网ip, 默认取第一个网卡的外网IP\n\n        connect-server-bind-ip=\"\"  //connSrv 绑定的本地ip (默认anyLocalAddress 0.0.0.0 or ::0)\n        connect-server-register-ip=${mp.net.public-ip}  //公网ip, 注册到zk中的ip, 默认是public-ip\n        connect-server-port=3000 //长链接服务对外端口, 公网端口\n        connect-server-register-attr { //注册到zk里的额外属性，比如配置权重，可在alloc里排序\n            weight:1\n        }\n\n        gateway-server-bind-ip=\"\"  //gatewaySrv 绑定的本地ip (默认anyLocalAddress 0.0.0.0 or ::0)\n        gateway-server-register-ip=${mp.net.local-ip}  //本地ip, 注册到zk中的ip, 默认是local-ip\n        gateway-server-port=3001 //网关服务端口, 内部端口\n        gateway-server-net=tcp //网关服务使用的网络类型tcp/udp/sctp/udt\n\n        gateway-client-port=4000 //UDP 客户端端口\n        gateway-server-multicast=\"239.239.239.88\" //239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效\n        gateway-client-multicast=\"239.239.239.99\" //239.0.0.0～239.255.255.255为本地管理组播地址，仅在特定的本地范围内有效\n        gateway-client-num=1 //网关客户端连接数\n\n        admin-server-port=3002 //控制台服务端口, 内部端口\n        ws-server-port=0 //websocket对外端口, 公网端口, 0表示禁用websocket\n        ws-path=\"/\" //websocket path\n\n        public-host-mapping { //本机局域网IP和公网IP的映射关系, 该配置后续会被废弃\n            //\"10.0.10.156\":\"111.1.32.137\"\n            //\"10.0.10.166\":\"111.1.33.138\"\n        }\n\n        snd_buf { //tcp/udp 发送缓冲区大小\n            connect-server=32k\n            gateway-server=0\n            gateway-client=0 //0表示使用操作系统默认值\n        }\n\n        rcv_buf { //tcp/udp 接收缓冲区大小\n            connect-server=32k\n            gateway-server=0\n            gateway-client=0 //0表示使用操作系统默认值\n        }\n\n        write-buffer-water-mark { //netty 写保护\n            connect-server-low=32k\n            connect-server-high=64k\n            gateway-server-low=10m\n            gateway-server-high=20m\n        }\n\n        traffic-shaping { //流量整形配置\n            gateway-client {\n                enabled:false\n                check-interval:100ms\n                write-global-limit:30k\n                read-global-limit:0\n                write-channel-limit:3k\n                read-channel-limit:0\n            }\n\n            gateway-server {\n                enabled:false\n                check-interval:100ms\n                write-global-limit:0\n                read-global-limit:30k\n                write-channel-limit:0\n                read-channel-limit:3k\n            }\n\n            connect-server {\n                enabled:false\n                check-interval:100ms\n                write-global-limit:0\n                read-global-limit:100k\n                write-channel-limit:3k\n                read-channel-limit:3k\n            }\n        }\n    }\n\n    #Zookeeper配置\n    zk {\n        server-address=\"127.0.0.1:2181\" //多台机器使用\",\"分隔如：\"10.0.10.44:2181,10.0.10.49:2181\" @see org.apache.zookeeper.ZooKeeper#ZooKeeper()\n        namespace=mpush\n        digest=mpush //zkCli.sh acl 命令 addauth digest mpush\n        watch-path=/\n        retry {\n            #initial amount of time to wait between retries\n            baseSleepTimeMs=3s\n            #max number of times to retry\n            maxRetries=3\n            #max time in ms to sleep on each retry\n            maxSleepMs=5s\n        }\n        connectionTimeoutMs=5s\n        sessionTimeoutMs=5s\n    }\n\n    #Redis集群配置\n    redis {\n        cluster-model=single //single,cluster,sentinel\n        sentinel-master:\"\"\n        nodes:[] s//[\"127.0.0.1:6379\"]格式ip:port\n        password=\"\" //your password\n        config {\n            maxTotal:8,\n            maxIdle:4,\n            minIdle:1,\n            lifo:true,\n            fairness:false,\n            maxWaitMillis:5000,\n            minEvictableIdleTimeMillis:300000,\n            softMinEvictableIdleTimeMillis:1800000,\n            numTestsPerEvictionRun:3,\n            testOnCreate:false,\n            testOnBorrow:false,\n            testOnReturn:false,\n            testWhileIdle:false,\n            timeBetweenEvictionRunsMillis:60000,\n            blockWhenExhausted:true,\n            jmxEnabled:false,\n            jmxNamePrefix:pool,\n            jmxNameBase:pool\n        }\n    }\n\n    #HTTP代理配置\n    http {\n        proxy-enabled=false //启用Http代理\n        max-conn-per-host=5 //每个域名的最大链接数, 建议web服务nginx超时时间设长一点, 以便保持长链接\n        default-read-timeout=10s //请求超时时间\n        max-content-length=5m //response body 最大大小\n        dns-mapping { //域名映射外网地址转内部IP, 域名部分不包含端口号\n            //\"mpush.com\":[\"127.0.0.1:8080\", \"127.0.0.1:8081\"]\n        }\n    }\n\n    #线程池配置\n    thread {\n        pool {\n            conn-work:0 //接入服务线程池大小，0表示线程数根据cpu核数动态调整(2*cpu)\n            gateway-server-work:0 //网关服务线程池大小，0表示线程数根据cpu核数动态调整(2*cpu)\n            http-work:0 //http proxy netty client work pool size，0表示线程数根据cpu核数动态调整(2*cpu)\n            ack-timer:1 //处理ACK消息超时\n            push-task:0 //消息推送中心，推送任务线程池大小, 如果为0表示使用Gateway Server的work线程池，tcp下推荐0\n            gateway-client-work:0 //网关客户端线程池大小，0表示线程数根据cpu核数动态调整(2*cpu)，该线程池在客户端运行\n            push-client:2 //消息推送回调处理，该线程池在客户端运行\n\n            event-bus { //用户处理内部事件分发\n                min:1\n                max:16\n                queue-size:10000 //大量的online，offline\n            }\n\n            mq { //用户上下线消息, 踢人等\n                min:1\n                max:4\n                queue-size:10000\n            }\n        }\n    }\n\n    #推送消息流控\n    push {\n       flow-control { //qps = limit/(duration)\n            global:{ //针对非广播推送的流控，全局有效\n                limit:5000 //qps = 5000\n                max:0 //UN limit\n                duration:1s //1s\n            }\n\n            broadcast:{ //针对广播消息的流控，单次任务有效\n                limit:3000 //qps = 3000\n                max:100000 //10w\n                duration:1s //1s\n            }\n       }\n    }\n\n    #系统监控配置\n    monitor {\n        dump-dir=${mp.home}/tmp\n        dump-stack=false //是否定时dump堆栈\n        dump-period=1m  //多久监控一次\n        print-log=true //是否打印监控日志\n        profile-enabled=false //开启性能监控\n        profile-slowly-duration=10ms //耗时超过10ms打印日志\n    }\n\n    #SPI扩展配置\n    spi {\n        thread-pool-factory:\"com.mpush.tools.thread.pool.DefaultThreadPoolFactory\"\n        dns-mapping-manager:\"com.mpush.common.net.HttpProxyDnsMappingManager\"\n    }\n}\n```\n11. 未完待续...\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-boot",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-monitor",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-netty",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "mpush-zk",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 12.5390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.sonatype.oss</groupId>\n        <artifactId>oss-parent</artifactId>\n        <version>9</version>\n    </parent>\n\n    <groupId>com.github.mpusher</groupId>\n    <artifactId>mpush</artifactId>\n    <packaging>pom</packaging>\n    <version>0.8.1</version>\n    <name>mpush</name>\n    <description>MPUSH消息推送系统</description>\n    <url>https://github.com/mpusher/mpush</url>\n\n    <licenses>\n        <license>\n            <name>The Apache Software License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <scm>\n        <tag>v${project.version}</tag>\n        <url>https://github.com/mpusher/mpush</url>\n        <connection>scm:git:git://github.com/mpusher/mpush.git</connection>\n        <developerConnection>scm:git:ssh://github.com/mpusher/mpush.git</developerConnection>\n    </scm>\n\n    <issueManagement>\n        <system>GitHub Issues</system>\n        <url>https://github.com/mpusher/mpush/issues</url>\n    </issueManagement>\n\n    <organization>\n        <name>MPusher, Inc.</name>\n        <url>https://mpusher.io</url>\n    </organization>\n\n    <developers>\n        <developer>\n            <name>夜色</name>\n            <email>ohun@live.cn</email>\n            <organization>mpusher</organization>\n        </developer>\n    </developers>\n\n    <modules>\n        <module>mpush-api</module>\n        <module>mpush-boot</module>\n        <module>mpush-core</module>\n        <module>mpush-tools</module>\n        <module>mpush-netty</module>\n        <module>mpush-common</module>\n        <module>mpush-client</module>\n        <module>mpush-test</module>\n        <module>mpush-monitor</module>\n        <module>mpush-zk</module>\n        <module>mpush-cache</module>\n    </modules>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <java.encoding>UTF-8</java.encoding>\n        <java.version>1.8</java.version>\n        <netty.version>4.1.25.Final</netty.version>\n        <slf4j.version>1.7.25</slf4j.version>\n        <os.detected.classifier>linux-x86_64</os.detected.classifier>\n    </properties>\n\n\n    <dependencyManagement>\n        <dependencies>\n            <!-- ======================================== -->\n            <!-- netty依赖 -->\n            <!-- ======================================== -->\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport-native-epoll</artifactId>\n                <version>${netty.version}</version>\n                <classifier>${os.detected.classifier}</classifier>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-http</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-handler</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport-udt</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport-sctp</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <!-- ======================================== -->\n            <!-- 子模块依赖 -->\n            <!-- ======================================== -->\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-test</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-api</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-tools</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-common</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-netty</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-core</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-client</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-monitor</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-boot</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-zk</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mpush-cache</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <!-- ================================================= -->\n            <!-- 日志 -->\n            <!-- ================================================= -->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <!--log4j dispatch to slf4j-->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>log4j-over-slf4j</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <!--java.util.log dispatch to slf4j-->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>jul-to-slf4j</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <!--common logging dispatch to slf4j-->\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>jcl-over-slf4j</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>ch.qos.logback</groupId>\n                <artifactId>logback-classic</artifactId>\n                <version>1.2.3</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-logging</groupId>\n                <artifactId>commons-logging</artifactId>\n                <version>1.1.3</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>log4j</groupId>\n                <artifactId>log4j</artifactId>\n                <version>1.2.17</version>\n                <scope>provided</scope>\n            </dependency>\n            <!-- ======================================== -->\n            <!-- 第三方依赖 -->\n            <!-- ======================================== -->\n            <!-- junit -->\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>4.10</version>\n                <scope>test</scope>\n            </dependency>\n            <!-- apache commons -->\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>3.6</version>\n            </dependency>\n            <!-- guava -->\n            <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>guava</artifactId>\n                <version>20.0</version>\n            </dependency>\n            <!-- json lib -->\n            <dependency>\n                <groupId>com.alibaba</groupId>\n                <artifactId>fastjson</artifactId>\n                <version>1.2.47</version>\n            </dependency>\n            <!-- zookeeper client -->\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-recipes</artifactId>\n                <version>2.12.0</version><!--(client 2.x.x <==> server 3.4.x) (client 3.x.x <==> server 3.5.x)-->\n                <exclusions>\n                    <exclusion>\n                        <artifactId>netty</artifactId>\n                        <groupId>io.netty</groupId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-x-discovery</artifactId>\n                <version>2.12.0</version><!--(client 2.x.x <==> server 3.4.x) (client 3.x.x <==> server 3.5.x)-->\n            </dependency>\n            <!-- redis client -->\n            <dependency>\n                <groupId>redis.clients</groupId>\n                <artifactId>jedis</artifactId>\n                <version>2.9.0</version>\n            </dependency>\n            <!-- config -->\n            <dependency>\n                <groupId>com.typesafe</groupId>\n                <artifactId>config</artifactId>\n                <version>1.3.3</version>\n            </dependency>\n            <!-- javassist -->\n            <dependency>\n                <groupId>org.javassist</groupId>\n                <artifactId>javassist</artifactId>\n                <version>3.22.0-GA</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <!-- 编译配置 -->\n    <build>\n        <plugins>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.6.2</version>\n                <configuration>\n                    <source>${java.version}</source>\n                    <target>${java.version}</target>\n                    <encoding>${java.encoding}</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>3.0.2</version>\n                <configuration>\n                    <encoding>${java.encoding}</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>2.20</version>\n                <configuration>\n                    <skip>true</skip>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>dev</id>\n            <activation>\n                <activeByDefault>true</activeByDefault>\n            </activation>\n            <properties>\n                <deploy.env>dev</deploy.env>\n            </properties>\n        </profile>\n        <profile>\n            <id>pub</id>\n            <properties>\n                <deploy.env>pub</deploy.env>\n            </properties>\n        </profile>\n    </profiles>\n</project>\n"
        }
      ]
    }
  ]
}