{
  "metadata": {
    "timestamp": 1736708524407,
    "page": 744,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bonigarcia/webdrivermanager",
      "stars": 2584,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0966796875,
          "content": "*~\ntarget\n.classpath\n.project\n.settings\n/.idea\n*.iml\nphantomjsdriver.log\n*.pem\n*.mp4\n.DS_Store\nbin/"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 33.611328125,
          "content": "# Changelog\n\n## [5.9.2] - 2024-07-25\n\n### Fixed\n- HTTP 404 when downloading microsoft edgedriver in macOS or Linux (#1320)\n\n\n## [5.9.1] - 2024-06-24\n\n### Removed\n- Remove using jackson-databind 2.17.1\n\n\n## [5.9.0] - 2024-06-24\n\n### Fixed\n- Fix architecture label to build URL for Edge ARM64\n\n### Changed\n- Force to use jackson-databind 2.17.1\n\n### Removed\n- Exclude org.bouncycastle:bcpkix-jdk18on from docker-java\n\n\n## [5.8.0] - 2024-04-04\n\n### Fixed\n- Check resolved browser version in Firefox manager (#1240)\n\n### Changed\n- Updated how we check if Docker is running to work with the new cgroup v2 system (#1259)\n\n### Added\n- Support for chromedriver 115+ (CfT endpoints) for NPM mirror (#1264)\n\n\n## [5.7.0] - 2024-02-21\n\n### Fixed\n- Fix CFT label used to get chromedriver version from the URLs (#1226)\n\n### Changed\n- Calculate operadriver version using major Opera version plus 14\n\n### Added\n- Use online geckodriver-support.json to discover geckodriver versions (https://raw.githubusercontent.com/SeleniumHQ/selenium/trunk/common/geckodriver/geckodriver-support.json)\n\n### Removed\n- Remove logic for using local or online versions.properties\n- Remove wdm.versionsPropertiesOnlineFirst and wdm.versionsPropertiesUrl and associated logic\n- Remove wdm.avoidReadReleaseFromRepository configuration key and associated logic\n\n\n## [5.6.4] - 2024-02-19\n\n### Fixed\n- Update Chrome download URL pattern (#1222)\n\n\n## [5.6.3] - 2023-12-30\n\n### Added\n- Include method to set Docker default arguments in wdm API\n- Expose dockerEnvVariables method in wdm API\n\n### Changed\n- Change NTCredentials (deprecated) by UsernamePasswordCredentials in HTTP client\n\n\n## [5.6.2] - 2023-11-07\n\n### Fixed\n- Fix logic to find driver version from CfT URL (#1160)\n\n\n## [5.6.1] - 2023-11-02\n\n### Fixed\n- Leveraging buildUrl method with avoidExternalConnections to replace place holders in the provided URL (#1158)\n- Filter by architecture also in Edge ARM64 (#1155)\n\n\n## [5.6.0] - 2023-10-27\n\n### Added\n- Enable CDP support in browsers in Docker using host as Docker network\n\n### Fixed\n- Use same number of exposed ports when using host as Docker network\n- Unable to use chromeDownloadUrlPattern (#1141)\n\n### Changed\n- Avoid fallback to old chromedriver repo if CfT fails (#1137)\n\n\n## [5.5.3] - 2023-09-01\n\n### Fixed\n- Fix meta-inf path to find wdm version in jar distribution\n\n### Changed\n- Get driver URL list from CfT endpoints for chromedriver 115+\n\n\n## [5.5.2] - 2023-08-25\n\n### Fixed\n- Bug-fix reading wdm version\n\n\n## [5.5.1] - 2023-08-25\n\n### Added\n- Use default CfT URL when some problem requesting the CfT endpoints happens\n\n\n## [5.5.0] - 2023-08-22\n\n### Changed\n- Downgrade to Java 8\n\n\n## [5.4.1] - 2023-07-19\n\n### Fixed\n- Use last good versions CfT endpoint only when driver version is unknown (#1076)\n\n\n## [5.4.0] - 2023-06-21\n\n### Changed\n- Bump to Java 11 (required in Selenium as of September 30, 2023). See https://www.selenium.dev/blog/2023/java-8-support/\n\n### Added\n- Use Chrome for Testing (CfT) JSON endpoints for version discovering as of chromedriver 115. See https://chromedriver.chromium.org/downloads\n- Create config option to enable/disable tracing for RemoteWebDriver (#1043)\n\n### Removed\n- Remove all deprecated methods in WebDriverManager API\n\n\n## [5.3.3] - 2023-05-11\n\n### Added\n- Include extra condition to find driver in the extracted files (#983)\n\n### Fixed\n- Use --whitelisted-extension-id for Chromium 112+ (fixes BrowserWathcher)\n- Fix support for WebDriverManager server\n\n\n## [5.3.2] - 2023-01-19\n\n### Fixed\n- Fix chrome image download on m1 (#953)\n\n### Removed\n- Remove default Docker lang (EN) due to a problem with Edge 108\n\n\n## [5.3.1] - 2022-11-04\n\n### Changed\n- Support naming convention for chromedriver 106+ in macOS ARM64\n\n### Fixed\n- Fix support for edgedriver on macOS ARM64 (#897 #921)\n- Fix resolution geckodriver 0.32.0 (issue #923)\n\n\n## [5.3.0] - 2022-08-21\n\n### Added\n- Include workflow to create mirror of geckodriver, operadriver, and selenium from api.github.com\n- Replace api.github.com URLs to mirrors on raw.githubusercontent.com (to avoid error 403 for good)\n\n### Changed\n- Install BrowserWatcher extension through augment (which allows remote Firefox, e.g., in Docker)\n- Use browser version as the second parameter of the CLI argument for resolving drivers\n\n\n## [5.2.3] - 2022-08-03\n\n### Added\n- Use resolution cache also when latest driver is downloaded (for preventing 403 error for geckodriver)\n\n\n## [5.2.2] - 2022-07-29\n\n### Added\n- Include wait for Docker bind port\n- Include config key for Safari version (for WebKit version)\n\n### Changed\n- Don't swallow exception root cause when creating a RemoteWebDriver (issue #873)\n- Method wdm.create() does not return null if failed to create a webdriver (issue #874)\n- Include port bindings in host config for docker containers\n\n### Fixed\n- Check opera binary browser path only if not using Docker\n\n### Removed\n- Documentation in EPUB format\n\n\n## [5.2.1] - 2022-06-26\n\n### Added\n- Include fallback mechanism for gathering logs based on LoggingPreferences for Chrome/Edge headless\n- Include wdm.avoidShutdownHook config key and avoidShutdownHook() API method (issue #839)\n\n### Changed\n- Use capabilities getClass() method (required as of Selenium 4.3.0)\n- Bump to BrowserWatcher 1.2.0\n\n\n## [5.2.0] - 2022-05-25\n\n### Added\n- Include monitoring features by integrating BrowserWatcher (https://bonigarcia.dev/browserwatcher/) extension. The new API methods supporting these features are: watch(), watchAndDisplay(), getLogs(), startRecording(), stopRecording(), and disableCsp()\n\n### Changed\n- Use ChromeDriver instead of OperaDriver for Opera browser\n\n\n## [5.1.1] - 2022-04-08\n\n### Added\n- Improve OperaDriver support, to make it compatible with Selenium 4.1.3 (issue #808)\n\n### Changed\n- Include httpclient5 dependency explicitly (issue #802)\n\n### Fixed\n- Detection for snap installed browser (issue #795)\n- Support for msedgedriver in Mac M1 (issues #804 and #812)\n- Normalize path separators in WebDriverManager.zipFolder() (PR #815)\n\n\n## [5.1.0] - 2022-02-17\n### Added\n- Add Docker Extra Hosts API method: dockerExtraHosts(String[]) (PR #788)\n- Include static method isDockerAvailable() in WebDriverManager class\n- Include static method zipFolder(Path sourceFolder) in WebDriverManager class\n- Include static method isOnline(URL url) in WebDriverManager class\n- Include API method to get Docker VNC URL\n- Include API method to accept remote address as URL\n\n### Fixed\n- Use https://registry.npmmirror.com/ instead of https://npm.taobao.org/ for driver mirror (fix #781)\n- Create config-dependent objects in setup logic (fix #751)\n- Include arguments for whitelisted and allowed origins for chromedriver in Docker (fix #733)\n\n### Changed\n- Updated dependencies (e.g. docker-java) to the latest version\n- Use varargs in setter for Docker volumes\n- Include Apache Commons Lang3 as dependency\n\n### Removed\n- Remove Guava dependency (issue #779)\n- Deprecated several API methods (recordingPrefix, recordingOutput, dockerImage)\n- Deprecated several config methods (e.g. isAvoidingResolutionCache) (PR #769)\n\n\n## [5.0.3] - 2021-09-17\n### Added\n- Include viewOnly (for noVNC) as API method and config parameter (issue #704)\n\n### Fixed\n- Filter ARM64 architecture using all possible labels (issue #700)\n\n\n## [5.0.2] - 2021-09-13\n### Added\n- Support for ARM64 architecture in chromedriver for Mac (issue #697)\n- Include current timestamp in recordings file name\n\n### Changed\n- Enhance cachePath and resolutionCachePath mkdir (issue #696)\n- Postpone initialing DockerService (issue #691)\n\n\n## [5.0.1] - 2021-08-31\n### Changed\n- Downgrade to Java 8\n\n\n## [5.0.0] - 2021-08-30\n### Added\n- New documentation: https://bonigarcia.dev/webdrivermanager/ (sources: AsciiDoc, generated: HTML, PDF, EPUB)\n- New high-level feature: browser finder (using the info of the commands database)\n- New high-level feature: WebDriver builder (using local/remote browsers)\n- New high-level feature: Browsers in Docker containers (using Aerokube images, with recording, VNC access, etc.)\n- Improved CLI mode: allow to run browsers in Docker container and inspect them through noVNC\n- Improved Sever mode: use WDM server as a Selenium Server (a \"hub\" in the classical Selenium Grid jargon)\n- Include manager for safaridriver, used to get Safari path and dockerized browser (WebKit engine)\n- Include shutdown hook for closing WebDriver objects (and release Docker containers, if any)\n- Include API method gitHubToken() to specify a personal access token for authenticated GitHub requests\n- Include API method avoidTmpFolder() to avoid the use of the temporal folder when downloading drivers (issue #657)\n- Include API method arm64() to specify ARM64 architecture\n- Bypass notarization requirement for geckodriver on Mac OS\n- Include support for generic driver (using config key wdm.defaultBrowser)\n- Allow to specify different driver version per operating system in the versions database (needed for problem detected in geckodriver 0.29.1 in Mac, but required for Windows when using Firefox 90)\n\n### Fixed\n- Register decompression for HTTP client (issue #677)\n- Use --disable-gpu flag as default arguments for Docker containers (in Chrome and Edge)\n\n### Changed\n- Not using singletons in managers (e.g. chromedriver(), firefoxdriver()). Now, each manager returns a new instance each time\n- Change name of configuration keys (and corresponding API methods) containing the word internetExplorer to iExplorer\n- Download driver for IExplorer (IEDriverServer.exe) from GitHub (instead of Google storage)\n- Use Java 11\n- Use JUnit 5 in tests\n- Use Selenium 4 in tests\n- Use AssertJ for assertions in tests\n- Use selenium-java as provided dependency\n\n### Removed\n- Remove managers for PhantomJS (deprecated browser) and SeleniumServerStandalone (scarce use)\n- Remove API method globalConfig() (it has no sense since managers are not singleton anymore)\n- Remove API methods gitHubTokenName() and gitHubTokenSecret(), replaced by gitHubToken()\n- Remove API localRepositoryUser() and localRepositoryPassword() (redundant)\n- Remove commons-io, commons-lang3, jarchivelib (compile), and okhttp (provided) artifacts\n\n\n## [4.4.3] - 2021-05-09\n### Added\n- Support for ARM64 (Aarch64) architecture (issue #634)\n- Include method arm64() in WDM API to specify ARM64 architecture\n\n### Fixed\n- Fix execution of registry query commands to detect browser version (for Windows)\n\n\n## [4.4.2] - 2021-05-09\n- Due to a problem in the release procedure, version 4.4.2 is identical to 4.4.1\n\n\n## [4.4.1] - 2021-04-22\n### Fixed\n- Fix browser version detection in Mac (issue #632)\n\n\n## [4.4.0] - 2021-03-06\n### Added\n- Automatic module name in MANIFEST.MF for JDK 9+ support (PR #615)\n- Include config key wdm.browserVersionDetectionRegex, equivalent to API method browserVersionDetectionRegex()\n- Expose method .exportParameter() in WebDriverManager API\n- Include config key wdm.useChromiumDriverSnap to use Chromium snap package (false by default)\n- Support local URLs (file://) for versions and commands properties\n- Include new API methods: useLocalCommandsPropertiesFirst(), versionsPropertiesUrl(URL), and commandsPropertiesUrl(URL)\n\n### Changed\n- Extract commands database as a properties file (commands.properties)\n\n### Removed\n- Remove method browserPath() in WebDriverManager API (changed by browserVersionDetectionCommand())\n\n\n## [4.3.1] - 2021-01-18\n### Fixed\n- Include dylib libraries together with msedgedriver (issue #593)\n\n### Changed\n- Clean logic for operating system handling\n\n\n## [4.3.0] - 2021-01-14\n### Added\n- Detect Edge version also in Linux\n- Read LATEST_RELEASE_version_OS (where OS=WINDOWS|LINUX|MACOS) for msedgedriver\n\n### Fixed\n- Make more robust browser distro detection (issue #586)\n\n### Changed\n- Make more robust browser major version detection from POSIX output (issue #576)\n\n\n## [4.2.2] - 2020-09-21\n### Fixed\n- Actual fixed for issue #554 (Windows Edge driver download fails with 404)\n\n\n## [4.2.1] - 2020-09-21\n### Added\n- Include syntactic sugar methods for operating systems in the API: win(), linux(), and mac()\n\n### Fixed\n- Init resolution cache also when clearResolutionCache() method is invoked\n\n### Changed\n- Avoid read release from repository in the retry process to resolve driver (issue #554)\n\n\n## [4.2.0] - 2020-08-21\n### Added\n- Check ignoredVersion when resolving driver version (issue #529)\n- Include configuration key (wdm.resolutionCachePath) to specify a path for resolution cache\n\n### Fixed\n- Fix filtering based on ignored versions\n- Use Locale.ROOT in String case conversion (fix issue #521, which happens in Turkey locale)\n- Fix support of WebDriverManager Docker container to resolve drivers\n\n### Changed\n- Change default cache path location to ~/.cache/selenium\n- Store drivers in cache using the same folder structure: {cachePath}/driverName/os+arch/driverVersion\n- Rename getBinaryPath() method to getDownloadedDriverPath() in WebDriverManager API\n- Rename getDownloadedVersion() method to getDownloadedDriverVersion() in WebDriverManager API\n- Rename clearCache() method to clearDriverCache() in WebDriverManager API\n- Rename configuration key wdm.binaryPath to wdm.browserPath\n- Build URL from pattern when no candidate is found after the filtering process\n\n\n## [4.1.0] - 2020-07-14\n### Added\n- New method in WebDriverManager API: ttlBrowsers(int) -> TTL to store browser versions in resolution cache (issue #483)\n- New method in WebDriverManager API: avoidReadReleaseFromRepository() -> to avoid reading driver version from repository\n- Build download URL from pattern when it is no available in chromedriver and msedgedriver repository\n\n### Fixed\n- Add namespace context for Saxon compatibility (issue #503)\n- Change default headers in HTTP client (fix support for msedgedriver)\n\n### Changed\n- Store value in resolution cache only when TTL (for drivers and browsers) is upper 0\n- Parse BitBucket API to download PhantomJS drivers\n\n### Removed\n- Remove WebDriverManager survey link from log traces\n\n\n## [4.0.0] - 2020-05-03\n### Added\n- Full support for Edge (Chromium-based) using https://msedgedriver.azureedge.net/\n- Include resolution cache (former preferences) stored as properties (resolution.properties) in the cache folder\n- Read Chrome version from registry when wmic does not discover the version (issue #394)\n- Add Safari support for DriverManagerType\n- Look for wmic.exe program also in wbem folder (issue #438)\n- Improve driver version resolution algorithm\n- Include label \"alpha\" for detecting beta versions\n- Include WebDriverManager as Java agent using premain entry point\n- Release WebDriverManager as Docker container (for CLI and Server) in Docker Hub\n- Include WebDriverManager survey link in INFO traces: http://tiny.cc/wdm-survey\n- New method in WebDriverManager API: browserVersion() -> to specify major browser version\n- New method in WebDriverManager API: avoidFallback() -> to avoid the fallback mechanism if some exception happens\n- New method in WebDriverManager API: getDriverManagerType() -> to get manager type (enum)\n\n### Fixed\n- Support Windows short names in cachePath\n- Fix proxy credentials never set from env vars\n- Bump Apache HttpClient to version 5.0 (fix issue #461)\n- Remove hard coded values on Travis SonarCloud addon (issue #471)\n\n### Changed\n- Use LATEST_RELEASE_x from chromedriver and msedgedriver repository (x = given version)\n- Use latest from cache as primary fallback mechanism\n- Support for different locations of Opera in Windows (also in LOCALAPPDATA env)\n- Refactor main and test logic in different packages\n- Use streams for filtering URLs and cache\n- Bump all dependencies (main and test) to latest stable versions\n- Changed method in WebDriverManager API: clearPreferences() -> to path of cache, old clearResolutionCache()\n- Changed method in WebDriverManager API: cachePath() -> to path of cache, old targetPath()\n- Changed method in WebDriverManager API: driverVersion() -> to specify driver version, old version()\n- Changed method in WebDriverManager API: avoidBrowserDetection() -> to avoid the detection of the browser version, old avoidAutoVersion()\n- Changed method in WebDriverManager API: getDriverVersions() -> to get the list of available driver versions, old getVersions()\n- Logo\n\n### Removed\n- Support for old versions of Edge (pre Chromium-based)\n- Use of Java preferences (now: resolution.properties)\n- Use of mirror in fallback mechanism\n- Methods of WebDriverManager API: targetPath(), version(), avoidAutoVersion(), forceCache() (cache is used always)\n\n\n## [3.8.1] - 2020-01-19\n### Fixed\n- Fix Chromium support (issue #429, PR #430)\n- Avoid filtering for architecture with chromedriver in Windows\n- Order files in cache alphabetically\n- Include last / in URL for chromedriver mirror (to read properly LATEST_RELEASE)\n\n### Changed\n- Read from env LOCALAPPDATA first to detect Chromium version in Windows\n- Update msedgedriver version 80.0.361.33 for Edge 80 in versions.properties\n- Set geckodriver version 0.26.0 for Firefox 70, 71, and 72 in versions.properties\n\n\n## [3.8.0] - 2020-01-11\n### Added\n- Chromium support, included snap package (issues #400 and #403)\n- Include 2nd fallback mechanism using latest driver from cache (issue #415)\n- Enhance artifact mirror support (issue #390)\n\n### Changed\n- Include clearPreferences() as a builder method of WebDriverManager\n- Improve cache filtering by version (issue #391)\n- Check different versions of Edge (stable, beta, dev) to find out version\n- Set chromedriver version 80.0.3987.16 for Chrome 80 in versions.properties\n- Set chromedriver version 79.0.3945.16 for Chrome 79 in versions.properties\n- Set geckodriver version 0.26.0 for Firefox 69 in versions.properties\n- Set operadriver version 79.0.3945.79 for Opera 66 in versions.properties\n- Set operadriver version 78.0.3904.87 for Opera 65 in versions.properties\n- Set operadriver version 77.0.3865.120 for Opera 64 in versions.properties\n- Set msedgedriver version 80.0.361.23 for Edge 80 in versions.properties\n- Set msedgedriver version 79.0.313.0 for Edge 79 in versions.properties\n- Set msedgedriver version 78.0.277.0 for Edge 78 in versions.properties\n\n\n## [3.7.1] - 2019-09-17\n### Added\n- Read LOCALAPPDATA env to find out Chrome version in Windows (issue #381)\n- Add useLocalVersionsPropertiesFirst() in WebDriverManager API\n\n### Changed\n- Set chromedriver version 78.0.3904.11 for Chrome 78 in versions.properties\n- Set operadriver version 76.0.3809.132 for Opera 63 in versions.properties\n- Set geckodriver version 0.25.0 for Firefox 69 in versions.properties\n- Update geckodriver version 0.25.0 for Firefox 68 in versions.properties\n\n\n## [3.7.0] - 2019-09-10\n### Added\n- Store detected version of browser as preference\n\n### Fixed\n- Do not restrict mirrors to ones hosted on npm.taobao.org page (issue #379)\n\n### Removed\n- Remove avoidAutoVersion() by default in CLI mode (issue #369)\n\n### Changed\n- Read online version.properties by default to find driver version (configurable with wdm.versionsPropertiesOnlineFirst)\n- Set geckodriver version 0.24.0 for Firefox 66, 67, and 68 in versions.properties\n- Set operadriver version 75.0.3770.100 for Opera 62 in versions.properties\n- Set chromedriver version 77.0.3865.10 for Chrome 77 in versions.properties\n- Set msedgedriver version 77.0.237.0 for Edge 77 in versions.properties\n- Update chromedriver version 76.0.3809.126 for Chrome 76 in versions.properties\n- Update chromedriver version 77.0.3865.40 for Chrome 77 in versions.properties\n\n\n## [3.6.2] - 2019-07-18\n### Added\n- Check PROGRAMFILES and PROGRAMFILES(X86) to find out browser versions in Windows (issue #351)\n\n### Fixed\n- Support for Edge driver 76 (issue #338 and #347)\n\n### Changed\n- Remove Edge 77 key from versions.properties for release (it will be maintained online)\n- Update edgedriver version 76.0.183.0 for Edge 76 in versions.properties\n- Update edgedriver version 75.0.139.20 for Edge 75 in versions.properties\n- Update chromedriver version 76.0.3809.68 for Chrome 76 in versions.properties\n- Update chromedriver version 75.0.3770.140 for Chrome 75 in versions.properties\n\n\n## [3.6.1] - 2019-06-07\n### Added\n- Special case to find out Chromium version instead of Chrome (issue #348)\n\n### Fixed\n- Support for Edge driver 76 (issue #338 and #347)\n\n\n## [3.6.0] - 2019-05-17\n### Added\n- Read chromedriver LATEST_RELEASE page when not using useBetaVersions() (issues #333, #341, #342)\n\n### Fixed\n- Enable Edge Dev test (issue #337)\n\n### Changed\n- Increase default value of TTL to 86400 seconds (i.e. one day)\n- Change changelog format to Markdown (issue #331)\n\n\n## [3.5.0] - 2019-05-05\n### Added\n- Support for msedgedriver (Edge based on Chromium)\n- Allow WDM_ARCHITECTURE environment values (32, 64) in addition to the new ones (issue #334)\n- Set msedgedriver version 75.0.137.0 for Edge 75 in versions.properties\n- Set chromedriver version 75.0.3770.8 for Chrome 75 in versions.properties\n\n### Fixed\n- Fix Edge support, broken due to changes in web page (issues #335 #338 #339)\n\n### Changed\n- Rename version for Edge 44 as pre-installed\n\n\n## [3.4.0] - 2019-03-27\n### Added\n- Allow global configuration with method globalConfig() (issue #313)\n- Include clearCache() method in WebDriverManager API to clear cache\n- Set chromedriver version 73.0.3683.68 for Chrome 73 in versions.properties\n- Set chromedriver version 74.0.3729.6 for Chrome 74 in versions.properties\n\n### Changed\n- Improve logging when driver version in unknown\n\n\n## [3.3.0] - 2019-02-06\n### Added\n- Force using mirror when first exception happens, e.g. 403 error (issue #302)\n- Include version.properties URL as configuration key\n- Set chromedriver version 2.46 for Chrome 71, 72, and 73 in versions.properties\n- Include geckodriver version 0.24.0 for Firefox 65 in versions.properties\n- Include operadriver version 2.42 for Opera 58 in versions.properties\n\n### Changed\n- Improve cache handling for retries\n\n\n## [3.2.0] - 2019-01-07\n### Added\n- Update versions.properties: Chrome 72; Firefox 64; Opera 57\n- Use single configuration instance per driver manager singleton\n- Read beta versions for driver from versions.properties\n- Read also https_proxy (in lower case) from environment variables (issue #292)\n- Add method to clear preferences in WebDriverManager API\n\n### Fixed\n- Fix issue #296 (Chrome version not being detected on Windows)\n\n### Changed\n- Change preference key format to browser name plus version (e.g. chrome69)\n- Use local (online if not found) versions.properties for stable and online (always) for beta versions\n\n\n## [3.1.1] - 2018-12-10\n### Added\n- Update versions.properties: Opera 57\n\n### Fixed\n- Bug-fix: browser binary path for Linux and Mac was not correctly set\n\n\n## [3.1.0] - 2018-12-09\n### Added\n- Store resolved latest versions as Java preferences with a time to live (ttl, by default 60 seconds)\n- Reading versions.properties from GitHub if browser version not found in local\n- Read Windows program file env depending on the platform (32|64 bits)\n- Implement manager to download selenium-server-standalone jar files\n- Support for Edge 44 (insiders)\n- New API methods: ttl(), browserPath()\n- Include clear-preferences option in CLI\n- Update versions.properties: Chrome 68, 69, 70, 71; Firefox 63; Opera 56; Edge 44\n\n### Changed\n- Using default properties is some value is missing\n\n\n## [3.0.0] - 2018-07-04\n### Added\n- Auto driver check for Chrome in Window, Linux, and Mac\n- Auto driver check for Firefox in Window, Linux, and Mac\n- Auto driver check for Opera in Window, Linux, and Mac\n- Auto driver check for Edge in Window\n- WebDriverManager Server\n\n### Changed\n- Set minimum Java compatibility version to 1.8\n\n### Removed\n- Drop compatibility with 1.x API, i.e. DriverManager.getInstance()\n\n### Deprecated\n- Use a unique name for driver name (deprecate the use of wires for Firefox)\n\n\n## [2.2.5] - 2018-08-16\n### Fixed\n- Bug-fix: logic for checking drivers in cache (issue #232)\n\n### Changed\n- Improve cache logic (issue #229)\n\n\n## [2.2.4] - 2018-07-04\n### Fixed\n- Bug-fix: Filter by driver name when seeking binaries in cache (issue #223)\n\n\n## [2.2.3] - 2018-06-21\n### Fixed\n- Bug-fix: Avoid filtering by OS in the case of IEDriverServer\n- Bug-fix: Update EdgeDriverManager due to changes in web repository\n\n\n## [2.2.2] - 2018-06-08\n### Changed\n- Improve cache handling (issue #216)\n- Remove unnecessary reverse of URL lists (issue #206)\n- Exclude logback-classic from compile scope (issue #202)\n\n\n## [2.2.1] - 2018-04-09\n### Added\n- Force architecture filtering when explicit setup (issue #200)\n- Keep latest version value by manager instance (issue #197)\n\n### Changed\n- Clean Downloader logic and logging\n- Rename operativeSystem() method to operatingSystem() (issue #196)\n- Move post downloader logic for Edge binary into the proper manager\n\n\n## [2.2.0] - 2018-03-23\n### Added\n- Configuration manager: WebDriverManager.config()\n- Interactive mode #1: mvn exec:java -Dexec.args=\"browserName\"\n- Interactive mode #2: java -jar webdrivermanager.jar browserName\n- Create fat-jar from source code: mvn compile assembly:single\n- Method getVersions() to get all driver versions available (issue #191)\n\n### Fixed\n- Bug-fix: intermittently fails to download driver when running in parallel (issue #186)\n- Bug-fix: Improve exit condition looking for binary file in post download logic (issues #193 and #194)\n- Bug-fix: honor forceDownload() option (related to issue #186)\n\n### Removed\n- Remove envs WDM_GIT_HUB_TOKEN_NAME and WDM_GIT_HUB_TOKEN_SECRET (use WDM_GITHUBTOKENNAME and WDM_GITHUBTOKENSECRET instead)\n\n\n## [2.1.0] - 2018-01-04\n### Added\n- Include class diagram using ObjectAid\n\n### Changed\n- Use multiton pattern (WebDriverManager class) to provide unique access point\n- Keep getInstance() method for backwards compatibility, e.g. ChromeDriverManager.getInstance().setup();\n- Rename forceOperativeSystem() method to operativeSystem()\n- Rename useTaobaoMirror() method by useMirror()\n- Remove logback.xml from packaged jar (issue #181 and #184)\n- Change configuration key wdm.forceOs by wdm.os\n\n\n## [2.0.1] - 2017-12-12\n### Added\n- Include configuration key wdm.forceOs to force operative system\n- Include configuration keys wdm.proxy, wdm.proxyUser, and wdm.proxyPass for proxy settings\n- Include configuration key wdm.useTaobaoMirror to use Taobao mirror\n\n### Changed\n- Configuration keys (wdm.*) are now optional (default values: false, \"\", 0)\n\n\n## [2.0.0] - 2017-11-27\n### Added\n- New method in BrowserManager API: forceOperativeSystem(OperativeSystem operativeSystem)\n- New method in BrowserManager API: ignoreVersions(String... versions)\n- Use logback instead of simplelogger for logging\n- Use SonarCloud to keep a good level of internal code quality\n- Use Codecov to keep a good level of code coverage\n- Reset state of browser managers after setup\n\n### Changed\n- Relicense to Apache 2.0\n- Stop using typesafe config library for handling properties\n- Override configuration values with environmental variables (e.g. WDM_TARGETPATH)\n- Improve management of proxy\n- Upgrade to Selenium 3.7 for end-to-end tests\n- Improve test performance\n\n### Removed\n- Remove deprecated methods from version 1.x (MarionetteDriverManager, etc)\n\n\n## [1.7.2] - 2017-09-17\n### Added\n- Add wdm.architecture configuration key (issue #154)\n- Read properties values from system environment as fallback to properties\n\n\n## [1.7.1] - 2017-07-10\n### Added\n- Use NTCredentials for NTLM AuthSchemes (PR #149 from andrew-sumner)\n- Avoid throwing exception in the case of non supported managers (e.g. RemoteWebDriver)\n\n### Changed\n- Improve support for new versions of operadriver (e.g. 2.27 and 2.29)\n\n\n## [1.7.0] - 2017-06-18\n### Added\n- Automatic retry forcing the use of cache on exception (issue #125)\n- Skip beta versions by default (issue #127 and #136)\n- Added getBinaryPath() method to BrowserManager API\n- Prevent non-executable files being picked as driver executables (PR #133 from Konfuzzyus)\n\n### Fixed\n- Bug-fix: added connection manager shared (PR #140 from tharakadesilva)\n- Bug-fix: Improve support for Edge (issue #135)\n- Bug-fix: Support for latest version of operadriver (issues #134 and #146)\n\n### Changed\n- Format code with spaces instead of tabs\n\n### Removed\n- Remove guava, commons-codec dependencies\n\n\n## [1.6.2] - 2017-04-04\n### Added\n- New method in BrowserManager API: forceDownload()\n- Support proxy server with authentication (isee #118, PR #120 by kazuki43zoo)\n- Checking that binary files are actually executable (issue #114 and #121)\n\n### Fixed\n- Bug-fix: issue #115 number format exception due to IEDriver beta\n- Bug-fix: issue #116 Ensure files aren't folders to check distro name\n\n### Changed\n- Downgrade com.typesafe:config to 1.2.1 (for Java 7 compliance)\n- Ignore Taobao test due to connection reset error\n\n\n## [1.6.1] - 2017-03-08\n### Added\n- New method in BrowserManager API: proxy()\n\n### Fixed\n- Bug-fix: forceCache() method was not working properly\n\n\n## [1.6.0] - 2017-02-07\n### Added\n- Support for taobao.org mirror in FirefoxDriverManager\n- Support for taobao.org mirror in ChromeDriverManager\n- Expose BrowserManager API following the builder pattern\n- New methods in BrowserManager API: version(), forceCache(), architecture(Architecture), arch32(), arch64(), useTaobaoMirror(), driverRepositoryUrl(URL)\n\n### Deprecated\n- Deprecate setup method with parameters (now builder pattern is used)\n\n\n## [1.5.1] - 2017-01-19\n### Added\n- Allow running in separate classloader (PR #83 from phillcunnington)\n- Improve download internal logic (add pre/post download methods)\n\n### Fixed\n- Bug-fix: update EdgeDriverManager (PR #87 from oscarcarlsson)\n- Bug-fix: support for PhantomJS 2.5.0-beta (issue #96)\n\n### Changed\n- Change default URL for PhantomJS from npm.taobao.org to bitbucket.org\n- Change default URL for PhantomJS from npm.taobao.org to bitbucket.org\n\n\n## [1.5.0] - 2016-11-15\n### Fixed\n- Issue #77: bug-fix for phantomjs 32-bit artifact\n\n### Changed\n- Change default name of properties file to webdrivermanager.properties\n- Use of Selenium 3 in internal tests\n\n### Deprecated\n- Deprecate MarionetteDriverManager (use instead FirefoxDriverManager)\n\n\n## [1.4.10] - 2016-10-13\n### Added\n- Compatibility with Selenium 3\n- Support for taobao mirror for chromedriver and  (wdm.chromeDriverUrl=https://npm.taobao.org/mirrors/chromedriver/)\n- Support for taobao mirror for operadriver (wdm.operaDriverUrl=https://npm.taobao.org/mirrors/operadriver/)\n- Issue #61: Support HTTP proxy by means of env var HTTP_PROXY or HTTPS_PROXY (PR #62 from Sebl29)\n\n### Changed\n- Stop using htmlunit to download edge binaries (jsoup instead)\n\n\n## [1.4.9] - 2016-09-11\n### Added\n- Issue #52: Force the use of cache when network is not available\n- Add Travis support (thanks to PR #57, #58, #59 by hennr)\n\n### Fixed\n- Bug-fix issue #19 (regression): getDriverName returns a list of string\n\n### Changed\n- Issue #40 and #56: Replace bitbucket PhantomJS source by mirror using jsoup instead HtmlUnit\n\n\n## [1.4.8] - 2016-08-15\n### Fixed\n- Bug-fix issue #51: Determine correct geckodriver to download (PR #48 from phillcunnington)\n\n\n## [1.4.7] - 2016-08-01\n### Fixed\n- Bug-fix issue #44: Fixed PhantomJS downloads page change (PR #45 from ndtreviv)\n\n\n## [1.4.6] - 2016-07-01\n### Added\n- Handle exceptions when parsing URLs, reading next if necessary\n- Use unTarGz method if needed\n\n\n## [1.4.5] - 2016-05-12\n### Added\n- Support for multiple binary names (caused by geckodriver)\n- Key wdm.forceCache to force using the latest version of binaries in cache\n\n### Fixed\n- Bug-fix: correct support for Marionette in generic manager\n\n### Changed\n- Improve the way of handling the version number of Edge driver\n\n\n## [1.4.4] - 2016-06-05\n### Added\n- Include several HTTP headers to connect with server in downloads\n- Include token/secret configuration keys for GitHub credentials\n\n\n## [1.4.3] - 2016-05-10\n### Added\n- Exception for seeking PhantomJS in the binary cache\n\n\n## [1.4.2] - 2016-04-05\n### Added\n- Check that repository target folder exits (otherwise create)\n- Honor property (wdm.*Url) if available for driver version\n\n### Fixed\n- Bug-fix issue #24: search driver in cache by architecture\n\n\n## [1.4.1] - 2016-03-12\n### Fixed\n- Bug-fix issue #19: WDM is unable to download the 64-bit IEDriverServer\n- Bug-fix issue #20: PhantomJsDriverManager exception\n\n### Changed\n- Change URL to download Edge driver (exe instead of msi)\n- Improve compatibility with Microsoft Windows and Mac OS X\n- Improve test coverage\n\n\n## [1.4.0] - 2016-01-13\n### Added\n- Add PhantomJS support (pull request #13 from wilx/master-phantomjs)\n- Add Marionette support (pull request #14 from rosolko:master)\n\n### Changed\n- Improve tests\n\n\n## [1.3.1] - 2015-11-07\n### Added\n- Check that existing binaries are valid before exporting variable\n- Retries when seeking remote URL to find out latest version of binaries\n\n### Changed\n- Change log level of important messages to INFO\n\n\n## [1.3.0] - 2015-11-01\n### Added\n- Support for Microsoft Edge\n\n\n## [1.2.4] - 2015-10-20\n### Added\n- Assess that binary exists in cache to avoid seeking remote server\n\n\n## [1.2.3] - 2015-09-01\n### Fixed\n- Bug-fix: redirection of setup call to the proper method\n\n\n## [1.2.2] - 2015-08-19\n### Changed\n- Improved automatic discover of latest version to be downloaded (GitHub issue #5)\n- Improved test coverage\n- Changed log level to DEBUG\n\n\n## [1.2.1] - 2015-08-14\n### Added\n- Added getter to read the downloaded version\n\n### Changed\n- Improved driver version management\n\n\n## [1.2.0] - 2015-03-27\n### Added\n- Thread safe download. Pull request thanks to Ivan Gracia (izanmail@gmail.com)\n\n\n## [1.1.2] - 2015-07-06\n### Changed\n- Manager classes as singlentons\n\n\n## [1.1.1] - 2015-06-23\n### Added\n- Added provided scope to slf4j-simple\n\n### Fixed\n- Bug-fix: store binary in path using version instead of LATEST\n\n\n## [1.1.0] - 2015-06-23\n### Added\n- Added parameter to force the use of a concrete WebDriver binary version\n\n### Changed\n- Changed log dependency from slf4j-log4j12 to slf4j-simple\n- Changed setup from static method to instantiation of DriverManager\n\n\n## [1.0.1] - 2015-06-09\n### Fixed\n- Bug-fix: Wrong chromedriver version downloaded (GitHub issue #1)\n\n\n## [1.0.0] - 2015-03-19\n### Added\n- Automated download of WebDriver binaries\n- Automated export of WebDriver binaries path\n- Supported WebDriver binaries: Chrome, Opera, Internet Explorer\n- Customizable configuration parameters using Java system properties\n- Capability to force WebDriver binary architecture (32/64 bits)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.59765625,
          "content": "[![Maven Central](https://img.shields.io/maven-central/v/io.github.bonigarcia/webdrivermanager.svg)](https://search.maven.org/search?q=g:io.github.bonigarcia%20a:webdrivermanager)\n[![Build Status](https://github.com/bonigarcia/webdrivermanager/workflows/build/badge.svg)](https://github.com/bonigarcia/webdrivermanager/actions)\n[![Quality Gate](https://sonarcloud.io/api/project_badges/measure?project=io.github.bonigarcia:webdrivermanager&metric=alert_status)](https://sonarcloud.io/summary/new_code?id=io.github.bonigarcia%3Awebdrivermanager)\n[![codecov](https://codecov.io/gh/bonigarcia/webdrivermanager/branch/master/graph/badge.svg)](https://codecov.io/gh/bonigarcia/webdrivermanager)\n[![badge-jdk](https://img.shields.io/badge/jdk-8-green.svg)](https://www.oracle.com/java/technologies/javase-downloads.html)\n[![License badge](https://img.shields.io/badge/license-Apache2-green.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n[![Backers on Open Collective](https://opencollective.com/webdrivermanager/backers/badge.svg)](#backers)\n[![Sponsors on Open Collective](https://opencollective.com/webdrivermanager/sponsors/badge.svg)](#sponsors)\n[![Support badge](https://img.shields.io/badge/stackoverflow-webdrivermanager_java-green.svg?logo=stackoverflow)](https://stackoverflow.com/questions/tagged/webdrivermanager-java)\n[![Twitter Follow](https://img.shields.io/twitter/follow/boni_gg.svg?style=social)](https://twitter.com/boni_gg)\n\n# [![][Logo]][WebDriverManager]\n[WebDriverManager] is an open-source Java library that carries out the management (i.e., download, setup, and maintenance) of the drivers required by [Selenium WebDriver] (e.g., chromedriver, geckodriver, msedgedriver, etc.) in a fully automated manner. In addition, WebDriverManager provides other relevant features, such as the capability to discover browsers installed in the local system, building WebDriver objects (such as `ChromeDriver`, `FirefoxDriver`, `EdgeDriver`, etc.), and running browsers in Docker containers seamlessly.\n\n## Documentation\nAs of version 5, the documentation of WebDriverManager has moved [here][WebDriverManager]. This site contains all the features, examples, configuration, and advanced capabilities of WebDriverManager.\n\n## Driver Management\nThe primary use of WebDriverManager is the automation of driver management. For using this feature, you need to select a given manager in the WebDriverManager API (e.g., `chromedriver()` for Chrome) and invoke the method `setup()`. The following example shows the skeleton of a test case using [JUnit 5], [Selenium WebDriver], and [WebDriverManager].\n\n```java\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeAll;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.chrome.ChromeDriver;\n\nimport io.github.bonigarcia.wdm.WebDriverManager;\n\nclass ChromeTest {\n\n    WebDriver driver;\n\n    @BeforeAll\n    static void setupAll() {\n        WebDriverManager.chromedriver().setup();\n    }\n\n    @BeforeEach\n    void setup() {\n        driver = new ChromeDriver();\n    }\n\n    @AfterEach\n    void teardown() {\n        driver.quit();\n    }\n\n    @Test\n    void test() {\n        // Your test logic here\n    }\n\n}\n```\n\nAlternatively, you can use the method `create()` to manage automatically the driver and instantiate the `WebDriver` object in a single line. For instance, as follows:\n\n```java\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.chrome.ChromeDriver;\n\nimport io.github.bonigarcia.wdm.WebDriverManager;\n\nclass ChromeCreateTest {\n\n    WebDriver driver;\n\n    @BeforeEach\n    void setup() {\n        driver = WebDriverManager.chromedriver().create();\n    }\n\n    @AfterEach\n    void teardown() {\n        driver.quit();\n    }\n\n    @Test\n    void test() {\n        // Your test logic here\n    }\n\n}\n```\n\nFor further information about the driver resolution algorithm implemented by WebDriverManager and configuration capabilities, read the [documentation][WebDriverManager].\n\n## Browsers in Docker\nAnother relevant new feature available in WebDriverManager 5 is the ability to create browsers in [Docker] containers out of the box. The requirement to use this feature is to have installed a [Docker Engine] in the machine running the tests. To use it, we need to invoke the method `browserInDocker()` in conjunction with `create()` of a given manager. This way, WebDriverManager pulls the image from [Docker Hub], starts the container, and instantiates the WebDriver object to use it. The following test shows a simple example using Chrome in Docker. This example also enables the recording of the browser session and remote access using [noVNC]:\n\n```java\nimport org.junit.jupiter.api.AfterEach;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.openqa.selenium.WebDriver;\n\nimport io.github.bonigarcia.wdm.WebDriverManager;\n\nclass DockerChromeVncTest {\n\n    WebDriver driver;\n\n    WebDriverManager wdm = WebDriverManager.chromedriver().browserInDocker()\n            .enableVnc().enableRecording();\n\n    @BeforeEach\n    void setup() {\n        driver = wdm.create();\n    }\n\n    @AfterEach\n    void teardown() {\n        wdm.quit();\n    }\n\n    @Test\n    void test() {\n        // Your test logic here\n    }\n\n}\n```\n\n## Support\nWebDriverManager is part of [OpenCollective], an online funding platform for open and transparent communities. You can support the project by contributing as a backer (i.e., a personal [donation] or [recurring contribution]) or as a [sponsor] (i.e., a recurring contribution by a company).\n\n### Backers\n<a href=\"https://opencollective.com/webdrivermanager\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/backers.svg?width=890\"></a>\n\n### Sponsors\n<a href=\"https://opencollective.com/webdrivermanager/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/webdrivermanager/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/webdrivermanager/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/webdrivermanager/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/webdrivermanager/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/webdrivermanager/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/webdrivermanager/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/webdrivermanager/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/webdrivermanager/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/webdrivermanager/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/webdrivermanager/sponsor/9/avatar.svg\"></a>\n\nAlternatively, you can acknowledge my work by buying me a coffee:\n\n<p><a href=\"https://www.buymeacoffee.com/bonigarcia\"> <img align=\"left\" src=\"https://cdn.buymeacoffee.com/buttons/v2/default-yellow.png\" height=\"50\" width=\"210\"/></a></p><br><br>\n\n## About\nWebDriverManager (Copyright &copy; 2015-2024) is a project created and maintained by [Boni Garcia] and licensed under the terms of the [Apache 2.0 License].\n\n[Logo]: https://bonigarcia.github.io/img/wdm.png\n[WebDriverManager]: https://bonigarcia.dev/webdrivermanager/\n[Selenium WebDriver]: https://www.selenium.dev/documentation/webdriver/\n[JUnit 5]: https://junit.org/junit5/\n[Docker]: https://www.docker.com/\n[Docker Engine]: https://docs.docker.com/engine/\n[Docker Hub]: https://hub.docker.com/\n[noVNC]: https://novnc.com/\n[OpenCollective]: https://opencollective.com/webdrivermanager\n[donation]: https://opencollective.com/webdrivermanager/donate\n[recurring contribution]: https://opencollective.com/webdrivermanager/contribute/backer-8132/checkout\n[sponsor]: https://opencollective.com/webdrivermanager/contribute/sponsor-8133/checkout\n[Boni Garcia]: https://bonigarcia.dev/\n[Apache 2.0 License]: https://www.apache.org/licenses/LICENSE-2.0\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 18.37890625,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>io.github.bonigarcia</groupId>\n    <artifactId>webdrivermanager</artifactId>\n    <version>5.9.3-SNAPSHOT</version>\n\n    <properties>\n        <!-- compile -->\n        <slf4j.version>2.0.16</slf4j.version>\n        <gson.version>2.11.0</gson.version>\n        <docker-java.version>3.4.1</docker-java.version>\n        <brotli.version>0.1.2</brotli.version>\n        <commons-lang3.version>3.17.0</commons-lang3.version>\n        <commons-compress.version>1.27.1</commons-compress.version>\n        <httpclient5.version>5.2.1</httpclient5.version>\n\n        <!-- provided -->\n        <selenium.version>4.27.0</selenium.version>\n        <javalin.version>4.6.8</javalin.version>\n\n        <!-- test -->\n        <logback.version>1.3.11</logback.version>\n        <junit.version>5.11.4</junit.version>\n        <assertj.version>3.27.2</assertj.version>\n        <mockserver.version>5.15.0</mockserver.version>\n        <mockito-junit-jupiter.version>5.15.2</mockito-junit-jupiter.version>\n\n        <!-- plugins -->\n        <maven-release-plugin.version>3.1.1</maven-release-plugin.version>\n        <maven-surefire-plugin.version>3.5.2</maven-surefire-plugin.version>\n        <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>\n        <maven-gpg-plugin.version>3.2.7</maven-gpg-plugin.version>\n        <exec-maven-plugin.version>3.5.0</exec-maven-plugin.version>\n        <maven-jar-plugin.version>3.4.2</maven-jar-plugin.version>\n        <maven-asciidoctor-plugin.version>3.1.1</maven-asciidoctor-plugin.version>\n        <asciidoctorj-pdf.version>2.3.19</asciidoctorj-pdf.version>\n        <maven-site.version>3.21.0</maven-site.version>\n        <maven-project-info-reports.version>3.8.0</maven-project-info-reports.version>\n        <maven-javadoc-plugin.version>3.11.2</maven-javadoc-plugin.version>\n\n        <!-- Java version -->\n        <java.version>8</java.version>\n        <maven.compiler.target>${java.version}</maven.compiler.target>\n        <maven.compiler.source>${java.version}</maven.compiler.source>\n\n        <!-- encoding -->\n        <project.encondig>UTF-8</project.encondig>\n        <project.build.sourceEncoding>${project.encondig}</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>${project.encondig}</project.reporting.outputEncoding>\n\n        <!-- format date -->\n        <maven.build.timestamp.format>dd-MM-yyyy</maven.build.timestamp.format>\n\n        <!-- custom -->\n        <wdm.mainClass>io.github.bonigarcia.wdm.WebDriverManager</wdm.mainClass>\n        <wdm.agentClass>io.github.bonigarcia.wdm.WdmAgent</wdm.agentClass>\n        <wdm.manifest>src/main/resources/META-INF/MANIFEST.MF</wdm.manifest>\n    </properties>\n\n    <name>WebDriverManager</name>\n    <description>\n        Automated driver management and other helper features for Selenium\n        WebDriver in Java\n    </description>\n    <url>https://bonigarcia.dev/webdrivermanager/</url>\n\n    <developers>\n        <developer>\n            <id>bonigarcia</id>\n            <name>Boni Garcia</name>\n            <url>https://bonigarcia.dev/</url>\n        </developer>\n    </developers>\n\n    <licenses>\n        <license>\n            <name>Apache 2.0</name>\n            <url>https://www.apache.org/licenses/LICENSE-2.0</url>\n        </license>\n    </licenses>\n\n    <scm>\n        <connection>scm:git:git://github.com/bonigarcia/webdrivermanager.git</connection>\n        <developerConnection>\n            scm:git:git@github.com:bonigarcia/webdrivermanager.git</developerConnection>\n        <url>https://github.com/bonigarcia/webdrivermanager</url>\n        <tag>webdrivermanager-5.0.0</tag>\n    </scm>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>${slf4j.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.google.code.gson</groupId>\n            <artifactId>gson</artifactId>\n            <version>${gson.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>com.github.docker-java</groupId>\n            <artifactId>docker-java</artifactId>\n            <version>${docker-java.version}</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>com.github.docker-java</groupId>\n                    <artifactId>docker-java-transport-jersey</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.github.docker-java</groupId>\n                    <artifactId>docker-java-transport-netty</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.bouncycastle</groupId>\n                    <artifactId>bcpkix-jdk18on</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>com.github.docker-java</groupId>\n            <artifactId>docker-java-transport-httpclient5</artifactId>\n            <version>${docker-java.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.brotli</groupId>\n            <artifactId>dec</artifactId>\n            <version>${brotli.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n            <version>${commons-lang3.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-compress</artifactId>\n            <version>${commons-compress.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.httpcomponents.client5</groupId>\n            <artifactId>httpclient5</artifactId>\n            <version>${httpclient5.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.seleniumhq.selenium</groupId>\n            <artifactId>selenium-java</artifactId>\n            <version>${selenium.version}</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.javalin</groupId>\n            <artifactId>javalin</artifactId>\n            <version>${javalin.version}</version>\n            <scope>provided</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n            <version>${logback.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter</artifactId>\n            <version>${junit.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.assertj</groupId>\n            <artifactId>assertj-core</artifactId>\n            <version>${assertj.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mock-server</groupId>\n            <artifactId>mockserver-junit-jupiter</artifactId>\n            <version>${mockserver.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.seleniumhq.selenium</groupId>\n            <artifactId>selenium-grid</artifactId>\n            <version>${selenium.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-junit-jupiter</artifactId>\n            <version>${mockito-junit-jupiter.version}</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-release-plugin</artifactId>\n                <version>${maven-release-plugin.version}</version>\n                <configuration>\n                    <releaseProfiles>sonatype-oss-release</releaseProfiles>\n                    <useReleaseProfile>true</useReleaseProfile>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>${maven-surefire-plugin.version}</version>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>${jacoco-maven-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>report</id>\n                        <phase>test</phase>\n                        <goals>\n                            <goal>report</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <excludes>\n                        <exclude>**com.gargoylesoftware*</exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>exec-maven-plugin</artifactId>\n                <version>${exec-maven-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>java</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <mainClass>${wdm.mainClass}</mainClass>\n                    <includePluginDependencies>false</includePluginDependencies>\n                    <cleanupDaemonThreads>false</cleanupDaemonThreads>\n                    <classpathScope>test</classpathScope>\n                    <systemProperties>\n                        <systemProperty>\n                            <key>logback.configurationFile</key>\n                            <value>src/main/resources/logback.xml</value>\n                        </systemProperty>\n                    </systemProperties>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-assembly-plugin</artifactId>\n                <configuration>\n                    <archive>\n                        <manifest>\n                            <mainClass>${wdm.mainClass}</mainClass>\n                        </manifest>\n                        <manifestEntries>\n                            <Premain-Class>${wdm.agentClass}</Premain-Class>\n                            <Can-Redefine-Classes>true</Can-Redefine-Classes>\n                            <Can-Retransform-Classes>true</Can-Retransform-Classes>\n                        </manifestEntries>\n                    </archive>\n                    <descriptors>\n                        <descriptor>src/main/resources/assembly.xml</descriptor>\n                    </descriptors>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>${maven-jar-plugin.version}</version>\n                <configuration>\n                    <excludes>\n                        <exclude>**/*.xml</exclude>\n                    </excludes>\n                    <archive>\n                        <manifestFile>${wdm.manifest}</manifestFile>\n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.asciidoctor</groupId>\n                <artifactId>asciidoctor-maven-plugin</artifactId>\n                <version>${maven-asciidoctor-plugin.version}</version>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.asciidoctor</groupId>\n                        <artifactId>asciidoctorj-pdf</artifactId>\n                        <version>${asciidoctorj-pdf.version}</version>\n                    </dependency>\n                </dependencies>\n                <configuration>\n                    <sourceDirectory>src/doc/asciidoc</sourceDirectory>\n                    <attributes>\n                        <endpoint-url>https://bonigarcia.dev</endpoint-url>\n                        <sourcedir>${project.build.sourceDirectory}</sourcedir>\n                        <project-version>${project.version}</project-version>\n                    </attributes>\n                    <outputDirectory>${basedir}/docs</outputDirectory>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>asciidoc-to-html</id>\n                        <phase>pre-site</phase>\n                        <goals>\n                            <goal>process-asciidoc</goal>\n                        </goals>\n                        <configuration>\n                            <backend>html5</backend>\n                            <attributes>\n                                <source-highlighter>coderay</source-highlighter>\n                                <stylesheet>css/styles.css</stylesheet>\n                                <imagesdir>img</imagesdir>\n                                <toc>left</toc>\n                                <icons>font</icons>\n                                <sectanchors>true</sectanchors>\n                                <idprefix />\n                                <idseparator>-</idseparator>\n                                <docinfo1>true</docinfo1>\n                                <toclevels>3</toclevels>\n                                <sectnums />\n                                <lang>en</lang>\n                                <docdatetime>${maven.build.timestamp}</docdatetime>\n                                <last-update-label>Updated on</last-update-label>\n                            </attributes>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>asciidoc-to-pdf</id>\n                        <phase>site</phase>\n                        <goals>\n                            <goal>process-asciidoc</goal>\n                        </goals>\n                        <configuration>\n                            <doctype>book</doctype>\n                            <backend>pdf</backend>\n                            <sourceDirectory>src/doc/asciidoc</sourceDirectory>\n                            <sourceDocumentName>index.adoc</sourceDocumentName>\n                            <outputFile>${project.artifactId}.pdf</outputFile>\n                            <attributes>\n                                <source-highlighter>coderay</source-highlighter>\n                                <imagesdir>img</imagesdir>\n                                <pagenums />\n                                <toc />\n                                <idprefix />\n                                <idseparator>-</idseparator>\n                                <icons>font</icons>\n                                <sectnums />\n                                <lang>en</lang>\n                                <revnumber>${project.version}</revnumber>\n                                <revdate>${maven.build.timestamp}</revdate>\n                            </attributes>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-site-plugin</artifactId>\n                <version>${maven-site.version}</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-project-info-reports-plugin</artifactId>\n                <version>${maven-project-info-reports.version}</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>${maven-javadoc-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>attach-javadocs</id>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <source>8</source>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <distributionManagement>\n        <snapshotRepository>\n            <id>sonatype-nexus-snapshots</id>\n            <name>Sonatype Nexus snapshot repository</name>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>sonatype-nexus-staging</id>\n            <name>Sonatype Nexus release repository</name>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n\n    <profiles>\n        <profile>\n            <id>release-sign-artifacts</id>\n            <activation>\n                <property>\n                    <name>performRelease</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>${maven-gpg-plugin.version}</version>\n                        <configuration>\n                            <passphrase>${gpg.passphrase}</passphrase>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n</project>"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}