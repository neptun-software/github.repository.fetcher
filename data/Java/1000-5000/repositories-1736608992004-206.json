{
  "metadata": {
    "timestamp": 1736608992004,
    "page": 206,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DTStack/chunjun",
      "stars": 4023,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 11.611328125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\ninsert_final_newline = true\nmax_line_length = 1000\n# ij_formatter_off_tag = @formatter:off\n# ij_formatter_on_tag = @formatter:on\n# ij_formatter_tags_enabled = false\n# ij_smart_tabs = false\n# ij_wrap_on_typing = false\n\n[*.java]\nindent_size = 4\nindent_style = space\ntab_width = 4\nij_continuation_indent_size = 8\n# ij_java_align_consecutive_assignments = false\n# ij_java_align_consecutive_variable_declarations = false\n# ij_java_align_group_field_declarations = false\n# ij_java_align_multiline_annotation_parameters = false\n# ij_java_align_multiline_array_initializer_expression = false\n# ij_java_align_multiline_assignment = false\n# ij_java_align_multiline_binary_operation = false\n# ij_java_align_multiline_chained_methods = false\n# ij_java_align_multiline_extends_list = false\n# ij_java_align_multiline_for = true\n# ij_java_align_multiline_method_parentheses = false\n# ij_java_align_multiline_parameters = true\n# ij_java_align_multiline_parameters_in_calls = false\n# ij_java_align_multiline_parenthesized_expression = false\n# ij_java_align_multiline_records = true\n# ij_java_align_multiline_resources = true\n# ij_java_align_multiline_ternary_operation = false\n# ij_java_align_multiline_text_blocks = false\n# ij_java_align_multiline_throws_list = false\n# ij_java_align_subsequent_simple_methods = false\n# ij_java_align_throws_keyword = false\n# ij_java_annotation_parameter_wrap = off\n# ij_java_array_initializer_new_line_after_left_brace = false\n# ij_java_array_initializer_right_brace_on_new_line = false\n# ij_java_array_initializer_wrap = off\n# ij_java_assert_statement_colon_on_next_line = false\n# ij_java_assert_statement_wrap = off\n# ij_java_assignment_wrap = off\nij_java_binary_operation_sign_on_next_line = true\nij_java_binary_operation_wrap = normal\n# ij_java_blank_lines_after_anonymous_class_header = 0\n# ij_java_blank_lines_after_class_header = 0\n# ij_java_blank_lines_after_imports = 1\n# ij_java_blank_lines_after_package = 1\n# ij_java_blank_lines_around_class = 1\n# ij_java_blank_lines_around_field = 0\n# ij_java_blank_lines_around_field_in_interface = 0\n# ij_java_blank_lines_around_initializer = 1\n# ij_java_blank_lines_around_method = 1\n# ij_java_blank_lines_around_method_in_interface = 1\n# ij_java_blank_lines_before_class_end = 0\n# ij_java_blank_lines_before_imports = 1\n# ij_java_blank_lines_before_method_body = 0\n# ij_java_blank_lines_before_package = 0\n# ij_java_block_brace_style = end_of_line\n# ij_java_block_comment_at_first_column = true\nij_java_call_parameters_new_line_after_left_paren = true\n# ij_java_call_parameters_right_paren_on_new_line = false\nij_java_call_parameters_wrap = on_every_item\n# ij_java_case_statement_on_separate_line = true\n# ij_java_catch_on_new_line = false\n# ij_java_class_annotation_wrap = split_into_lines\n# ij_java_class_brace_style = end_of_line\nij_java_class_count_to_use_import_on_demand = 9999\n# ij_java_class_names_in_javadoc = 1\n# ij_java_do_not_indent_top_level_class_members = false\n# ij_java_do_not_wrap_after_single_annotation = false\n# ij_java_do_while_brace_force = never\n# ij_java_doc_add_blank_line_after_description = true\nij_java_doc_add_blank_line_after_param_comments = true\nij_java_doc_add_blank_line_after_return = true\n# ij_java_doc_add_p_tag_on_empty_lines = true\nij_java_doc_align_exception_comments = false\nij_java_doc_align_param_comments = false\nij_java_doc_do_not_wrap_if_one_line = true\nij_java_doc_enable_formatting = true\n# ij_java_doc_enable_leading_asterisks = true\nij_java_doc_indent_on_continuation = true\nij_java_doc_keep_empty_lines = true\n# ij_java_doc_keep_empty_parameter_tag = true\n# ij_java_doc_keep_empty_return_tag = true\n# ij_java_doc_keep_empty_throws_tag = true\n# ij_java_doc_keep_invalid_tags = true\n# ij_java_doc_param_description_on_new_line = false\nij_java_doc_preserve_line_breaks = false\n# ij_java_doc_use_throws_not_exception_tag = true\n# ij_java_else_on_new_line = false\n# ij_java_entity_dd_suffix = EJB\n# ij_java_entity_eb_suffix = Bean\n# ij_java_entity_hi_suffix = Home\n# ij_java_entity_lhi_prefix = Local\n# ij_java_entity_lhi_suffix = Home\n# ij_java_entity_li_prefix = Local\n# ij_java_entity_pk_class = java.lang.String\n# ij_java_entity_vo_suffix = VO\n# ij_java_enum_constants_wrap = off\n# ij_java_extends_keyword_wrap = off\n# ij_java_extends_list_wrap = off\n# ij_java_field_annotation_wrap = split_into_lines\n# ij_java_finally_on_new_line = false\n# ij_java_for_brace_force = never\n# ij_java_for_statement_new_line_after_left_paren = false\n# ij_java_for_statement_right_paren_on_new_line = false\n# ij_java_for_statement_wrap = off\n# ij_java_generate_final_locals = false\n# ij_java_generate_final_parameters = false\n# ij_java_if_brace_force = never\nij_java_imports_layout = com.dtstack.**,|,org.apache.flink.**,|,org.apache.flink.shaded.**,|,*,|,javax.**,|,java.**,|,scala.**,|,$*\n# ij_java_indent_case_from_switch = true\n# ij_java_insert_inner_class_imports = false\n# ij_java_insert_override_annotation = true\n# ij_java_keep_blank_lines_before_right_brace = 2\n# ij_java_keep_blank_lines_between_package_declaration_and_header = 2\n# ij_java_keep_blank_lines_in_code = 2\n# ij_java_keep_blank_lines_in_declarations = 2\n# ij_java_keep_control_statement_in_one_line = true\n# ij_java_keep_first_column_comment = true\n# ij_java_keep_indents_on_empty_lines = false\n# ij_java_keep_line_breaks = true\n# ij_java_keep_multiple_expressions_in_one_line = false\n# ij_java_keep_simple_blocks_in_one_line = false\n# ij_java_keep_simple_classes_in_one_line = false\n# ij_java_keep_simple_lambdas_in_one_line = false\n# ij_java_keep_simple_methods_in_one_line = false\n# ij_java_label_indent_absolute = false\n# ij_java_label_indent_size = 0\n# ij_java_lambda_brace_style = end_of_line\nij_java_layout_static_imports_separately = true\n# ij_java_line_comment_add_space = false\n# ij_java_line_comment_at_first_column = true\n# ij_java_message_dd_suffix = EJB\n# ij_java_message_eb_suffix = Bean\n# ij_java_method_annotation_wrap = split_into_lines\n# ij_java_method_brace_style = end_of_line\nij_java_method_call_chain_wrap = on_every_item\nij_java_method_parameters_new_line_after_left_paren = true\n# ij_java_method_parameters_right_paren_on_new_line = false\nij_java_method_parameters_wrap = on_every_item\n# ij_java_modifier_list_wrap = false\nij_java_names_count_to_use_import_on_demand = 9999\n# ij_java_new_line_after_lparen_in_record_header = false\n# ij_java_packages_to_use_import_on_demand = java.awt.*,javax.swing.*\n# ij_java_parameter_annotation_wrap = off\n# ij_java_parentheses_expression_new_line_after_left_paren = false\n# ij_java_parentheses_expression_right_paren_on_new_line = false\n# ij_java_place_assignment_sign_on_next_line = false\n# ij_java_prefer_longer_names = true\n# ij_java_prefer_parameters_wrap = false\n# ij_java_record_components_wrap = normal\n# ij_java_repeat_synchronized = true\n# ij_java_replace_instanceof_and_cast = false\n# ij_java_replace_null_check = true\n# ij_java_replace_sum_lambda_with_method_ref = true\n# ij_java_resource_list_new_line_after_left_paren = false\n# ij_java_resource_list_right_paren_on_new_line = false\n# ij_java_resource_list_wrap = off\n# ij_java_rparen_on_new_line_in_record_header = false\n# ij_java_session_dd_suffix = EJB\n# ij_java_session_eb_suffix = Bean\n# ij_java_session_hi_suffix = Home\n# ij_java_session_lhi_prefix = Local\n# ij_java_session_lhi_suffix = Home\n# ij_java_session_li_prefix = Local\n# ij_java_session_si_suffix = Service\n# ij_java_space_after_closing_angle_bracket_in_type_argument = false\n# ij_java_space_after_colon = true\n# ij_java_space_after_comma = true\n# ij_java_space_after_comma_in_type_arguments = true\n# ij_java_space_after_for_semicolon = true\n# ij_java_space_after_quest = true\n# ij_java_space_after_type_cast = true\n# ij_java_space_before_annotation_array_initializer_left_brace = false\n# ij_java_space_before_annotation_parameter_list = false\n# ij_java_space_before_array_initializer_left_brace = false\n# ij_java_space_before_catch_keyword = true\n# ij_java_space_before_catch_left_brace = true\n# ij_java_space_before_catch_parentheses = true\n# ij_java_space_before_class_left_brace = true\n# ij_java_space_before_colon = true\n# ij_java_space_before_colon_in_foreach = true\n# ij_java_space_before_comma = false\n# ij_java_space_before_do_left_brace = true\n# ij_java_space_before_else_keyword = true\n# ij_java_space_before_else_left_brace = true\n# ij_java_space_before_finally_keyword = true\n# ij_java_space_before_finally_left_brace = true\n# ij_java_space_before_for_left_brace = true\n# ij_java_space_before_for_parentheses = true\n# ij_java_space_before_for_semicolon = false\n# ij_java_space_before_if_left_brace = true\n# ij_java_space_before_if_parentheses = true\n# ij_java_space_before_method_call_parentheses = false\n# ij_java_space_before_method_left_brace = true\n# ij_java_space_before_method_parentheses = false\n# ij_java_space_before_opening_angle_bracket_in_type_parameter = false\n# ij_java_space_before_quest = true\n# ij_java_space_before_switch_left_brace = true\n# ij_java_space_before_switch_parentheses = true\n# ij_java_space_before_synchronized_left_brace = true\n# ij_java_space_before_synchronized_parentheses = true\n# ij_java_space_before_try_left_brace = true\n# ij_java_space_before_try_parentheses = true\n# ij_java_space_before_type_parameter_list = false\n# ij_java_space_before_while_keyword = true\n# ij_java_space_before_while_left_brace = true\n# ij_java_space_before_while_parentheses = true\n# ij_java_space_inside_one_line_enum_braces = false\n# ij_java_space_within_empty_array_initializer_braces = false\n# ij_java_space_within_empty_method_call_parentheses = false\n# ij_java_space_within_empty_method_parentheses = false\n# ij_java_spaces_around_additive_operators = true\n# ij_java_spaces_around_assignment_operators = true\n# ij_java_spaces_around_bitwise_operators = true\n# ij_java_spaces_around_equality_operators = true\n# ij_java_spaces_around_lambda_arrow = true\n# ij_java_spaces_around_logical_operators = true\n# ij_java_spaces_around_method_ref_dbl_colon = false\n# ij_java_spaces_around_multiplicative_operators = true\n# ij_java_spaces_around_relational_operators = true\n# ij_java_spaces_around_shift_operators = true\n# ij_java_spaces_around_type_bounds_in_type_parameters = true\n# ij_java_spaces_around_unary_operator = false\n# ij_java_spaces_within_angle_brackets = false\n# ij_java_spaces_within_annotation_parentheses = false\n# ij_java_spaces_within_array_initializer_braces = false\n# ij_java_spaces_within_braces = false\n# ij_java_spaces_within_brackets = false\n# ij_java_spaces_within_cast_parentheses = false\n# ij_java_spaces_within_catch_parentheses = false\n# ij_java_spaces_within_for_parentheses = false\n# ij_java_spaces_within_if_parentheses = false\n# ij_java_spaces_within_method_call_parentheses = false\n# ij_java_spaces_within_method_parentheses = false\n# ij_java_spaces_within_parentheses = false\n# ij_java_spaces_within_switch_parentheses = false\n# ij_java_spaces_within_synchronized_parentheses = false\n# ij_java_spaces_within_try_parentheses = false\n# ij_java_spaces_within_while_parentheses = false\n# ij_java_special_else_if_treatment = true\n# ij_java_subclass_name_suffix = Impl\n# ij_java_ternary_operation_signs_on_next_line = false\n# ij_java_ternary_operation_wrap = off\n# ij_java_test_name_suffix = Test\n# ij_java_throws_keyword_wrap = off\n# ij_java_throws_list_wrap = off\n# ij_java_use_external_annotations = false\n# ij_java_use_fq_class_names = false\n# ij_java_use_relative_indents = false\n# ij_java_use_single_class_imports = true\nij_java_variable_annotation_wrap = normal\n# ij_java_visibility = public\n# ij_java_while_brace_force = never\n# ij_java_while_on_new_line = false\n# ij_java_wrap_comments = false\nij_java_wrap_first_method_in_call_chain = true\n# ij_java_wrap_long_lines = false\n\n[*.xml]\nindent_style = tab\nindent_size = 4\n\n[*.scala]\nindent_style = space\nindent_size = 2\n\n[*.py]\nindent_style = space\nindent_size = 4\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5185546875,
          "content": "# Compiled class file\n*.class\n\n# Log file\n*.log\n\n# BlueJ files\n*.ctxt\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.nar\n*.ear\n*.zip\n*.tar.gz\n*.rar\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\nreplay_pid*\n\n# build targets\ntarget/\n\n# Intellij Idea files\n.idea/*\n!.idea/vcs.xml\n*.iml\n\n# mac system\n.DS_Store\n\nlib/\n\n# out log.\nnohup.out\n\n# auth\n*.keytab\n\n# chunjun plugins\nchunjun-dist/\n\n*/.cache\n*/node_modules\n\nchunjun-dev/data/**\noutput/*\n\nvenv/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.3115234375,
          "content": "[submodule \".github/actions/get-workflow-origin\"]\n\tpath = .github/actions/get-workflow-origin\n\turl = https://github.com/potiuk/get-workflow-origin.git\n[submodule \".github/actions/label-when-approved-action\"]\n\tpath = .github/actions/label-when-approved-action\n\turl = https://github.com/TobKed/label-when-approved-action\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".licenserc.yaml",
          "type": "blob",
          "size": 1.44921875,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\nheader:\n  license:\n    spdx-id: Apache-2.0\n    copyright-owner: Apache Software Foundation\n\n    paths-ignore:\n      - 'website/**/*'\n      - 'docs/**/*'\n      - 'docs_zh/**/*'\n      - 'chunjun-example/**/*'\n      - 'chunjun-docker/**/*'\n      - 'chunjun-dev/**/*'\n      - '.github/ISSUE_TEMPLATE'\n      - '.github/workflows'\n      - '.mvn'\n      - 'mvnw.cmd'\n      - '**/*.md'\n      - '**/*.MD'\n      - '**/*.json'\n      - '**/*.sql'\n      - '**/*.ftl'\n      - '**/target/**'\n      - '**/*.iml'\n      - '**/*.ini'\n      - '**/*.crt'\n      - '**/*.pem'\n      - '**/*.svg'\n      - '**/.gitignore'\n      - '**/LICENSE'\n      - '**/NOTICE'\n      - 'LICENSE'\n      - 'NOTICE'\n\n  comment: on-failure\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.5009765625,
          "content": "# How to become a contributor and submit your own code\n\nWe'd love to accept your patches!\n\n## Contributing A Patch\n\n1. Submit an issue describing your proposed change to the repo in question.\n2. The repo owner will respond to your issue promptly.\n3. Fork the desired repo, develop and test your code changes.\n4. Ensure that your code adheres to the existing style in the sample to which you are contributing.\n5. Ensure that your code has an appropriate set of unit tests which all pass.\n6. Submit a pull request.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.08984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.921875,
          "content": "# ChunJun\n\n<p align=\"left\">\n  <img src=\"https://img.shields.io/github/stars/DTStack/chunjun?style=social\" alt=\"npm version\" />\n  <img src=\"https://img.shields.io/github/license/DTStack/chunjun\" alt=\"license\" />\n  <a href=\"https://github.com/DTStack/chunjun/releases\"><img src=\"https://img.shields.io/github/downloads/DTStack/chunjun/total\" alt=\"npm downloads\" /></a>\n  <img src=\"https://img.shields.io/gitlab/coverage/DTStack/chunjun/master\" alt=\"master coverage\" />\n</p>\n\n[![EN doc](https://img.shields.io/badge/document-English-blue.svg)](README.md)\n[![CN doc](https://img.shields.io/badge/文档-中文版-blue.svg)](README_CH.md)\n\n## Introduce\n\nChunJun is a distributed integration framework, and currently is based on Apache Flink. It was initially known as FlinkX and renamed ChunJun on February 22, 2022. It can realize data synchronization and calculation between various heterogeneous data sources. ChunJun has been deployed and running stably in thousands of companies so far.\n\nOfficial website of ChunJun: https://dtstack.github.io/chunjun/\n\n## Features of ChunJun\n\nChunJun abstracts different databases into reader/source plugins, writer/sink plugins and lookup plugins, and it has the following features:\n\n- Based on the real-time computing engine--Flink, and supports JSON template and SQL script configuration tasks. The SQL script is compatible with Flink SQL syntax;\n- Supports distributed operation, support flink-standalone, yarn-session, yarn-per job and other submission methods;\n- Supports Docker one-click deployment, support deploy and run on k8s;\n- Supports a variety of heterogeneous data sources, and supports synchronization and calculation of more than 20 data sources such as MySQL, Oracle, SQLServer, Hive, Kudu, etc.\n- Easy to expand, highly flexible, newly expanded data source plugins can integrate with existing data source plugins instantly, plugin developers do not need to care about the code logic of other plugins;\n- Not only supports full synchronization, but also supports incremental synchronization and interval training;\n- Not only supports offline synchronization and calculation, but also compatible with real-time scenarios;\n- Supports dirty data storage, and provide indicator monitoring, etc.;\n- Cooperate with the flink checkpoint mechanism to achieve breakpoint resuming, task disaster recovery;\n- Not only supports synchronizing DML data, but also supports DDL synchronization, like 'CREATE TABLE', 'ALTER COLUMN', etc.;\n\n## Build And Compilation\n\n### Get the code\n\nUse the git to clone the code of ChunJun\n\n```shell\ngit clone https://github.com/DTStack/chunjun.git\n```\n\n### build\n\nExecute the command in the project directory.\n\n```shell\n./mvnw clean package\n```\n\nOr execute\n\n```shell\nsh build/build.sh\n```\n\n### Common problem\n\n#### Compiling module 'ChunJun-core' then throws 'Failed to read artifact descriptor for com.google.errorprone:javac-shaded'\n\nError message：\n\n```java\n[ERROR]Failed to execute goal com.diffplug.spotless:spotless-maven-plugin:2.4.2:check(spotless-check)on project chunjun-core:\n        Execution spotless-check of goal com.diffplug.spotless:spotless-maven-plugin:2.4.2:check failed:Unable to resolve dependencies:\n        Failed to collect dependencies at com.google.googlejavaformat:google-java-format:jar:1.7->com.google.errorprone:javac-shaded:jar:9+181-r4173-1:\n        Failed to read artifact descriptor for com.google.errorprone:javac-shaded:jar:9+181-r4173-1:Could not transfer artifact\n        com.google.errorprone:javac-shaded:pom:9+181-r4173-1 from/to aliyunmaven(https://maven.aliyun.com/repository/public): \n        Access denied to:https://maven.aliyun.com/repository/public/com/google/errorprone/javac-shaded/9+181-r4173-1/javac-shaded-9+181-r4173-1.pom -> [Help 1]\n```\n\nSolution：\nDownload the 'javac-shaded-9+181-r4173-1.jar' from url 'https://repo1.maven.org/maven2/com/google/errorprone/javac-shaded/9+181-r4173-1/javac-shaded-9+181-r4173-1.jar', and then install locally by using command below:\n\n```shell\nmvn install:install-file -DgroupId=com.google.errorprone -DartifactId=javac-shaded -Dversion=9+181-r4173-1 -Dpackaging=jar -Dfile=./jars/javac-shaded-9+181-r4173-1.jar\n```\n\n## Quick Start\n\nThe following table shows the correspondence between the branches of ChunJun and the version of flink. If the versions are not aligned, problems such as 'Serialization Exceptions', 'NoSuchMethod Exception', etc. mysql occur in tasks.\n\n| Branches     | Flink version |\n|--------------|---------------|\n| master       | 1.16.1        |\n| 1.12_release | 1.12.7        |\n| 1.10_release | 1.10.1        |\n| 1.8_release  | 1.8.3         |\n\nChunJun supports running tasks in multiple modes. Different modes depend on different environments and steps. The following are\n\n### Local\n\nLocal mode does not depend on the Flink environment and Hadoop environment, and starts a JVM process in the local environment to perform tasks.\n\n#### Steps\n\nGo to the directory of 'chunjun-dist' and execute the command below:\n\n```shell\nsh bin/chunjun-local.sh  -job $SCRIPT_PATH\n```\n\nThe parameter of \"$SCRIPT_PATH\" means 'the path where the task script is located'.\nAfter execute, you can perform a task locally.\n\nnote:\n```\nwhen you package in windows and run sh in linux , you need to execute command  sed -i \"s/\\r//g\" bin/*.sh to fix the '\\r' problems.\n```\n\n[Reference video](https://www.bilibili.com/video/BV1mT411g7fJ?spm_id_from=333.999.0.0)\n\n### Standalone\n\nStandalone mode depend on the Flink Standalone environment and does not depend on the Hadoop environment.\n\n#### Steps\n##### 1. add jars of chunjun \n1) Find directory of jars:\n   if you build this project using maven, the directory name is 'chunjun-dist' ;\n   if you download tar.gz file from release page, after decompression, the directory name would be like 'chunjun-assembly-${revision}-chunjun-dist'.\n\n2) Copy jars to directory of Flink lib, command example:\n```shell\ncp -r chunjun-dist $FLINK_HOME/lib\n```\nNotice: this operation should be executed in all machines of Flink cluster, otherwise some jobs will fail because of ClassNotFoundException.\n\n\n##### 2. Start Flink Standalone Cluster\n\n```shell\nsh $FLINK_HOME/bin/start-cluster.sh\n```\n\nAfter the startup is successful, the default port of Flink Web is 8081, which you can configure in the file of 'flink-conf.yaml'. We can access the 8081 port of the current machine to enter the flink web of standalone cluster.\n\n##### 3. Submit task\n\nGo to the directory of 'chunjun-dist' and execute the command below:\n\n```shell\nsh bin/chunjun-standalone.sh -job chunjun-examples/json/stream/stream.json\n```\n\nAfter the command execute successfully, you can observe the task staus on the flink web.\n\n[Reference video](https://www.bilibili.com/video/BV1TT41137UV?spm_id_from=333.999.0.0)\n\n### Yarn Session\n\nYarnSession mode depends on the Flink jars and Hadoop environments, and the yarn-session needs to be started before the task is submitted.\n\n#### Steps\n\n##### 1. Start yarn-session environment\n\nYarn-session mode depend on Flink and Hadoop environment. You need to set $HADOOP_HOME and $FLINK_HOME in advance, and we need to upload 'chunjun-dist' with yarn-session '-t' parameter.\n\n```shell\ncd $FLINK_HOME/bin\n./yarn-session -t $CHUNJUN_HOME -d\n```\n\n##### 2. Submit task\n\nGet the application id $SESSION_APPLICATION_ID corresponding to the yarn-session through yarn web, then enter the directory 'chunjun-dist' and execute the command below:\n\n```shell\nsh ./bin/chunjun-yarn-session.sh -job chunjun-examples/json/stream/stream.json -confProp {\\\"yarn.application.id\\\":\\\"SESSION_APPLICATION_ID\\\"}\n```\n\n'yarn.application.id' can also be set in 'flink-conf.yaml'.\nAfter the submission is successful, the task status can be observed on the yarn web.\n\n[Reference video](https://www.bilibili.com/video/BV1oU4y1D7e7?spm_id_from=333.999.0.0)\n\n### Yarn Per-Job\n\nYarn Per-Job mode depend on Flink and Hadoop environment. You need to set $HADOOP_HOME and $FLINK_HOME in advance.\n\n#### Steps\n\nThe yarn per-job task can be submitted after the configuration is correct. Then enter the directory 'chunjun-dist' and execute the command below:\n\n```shell\nsh ./bin/chunjun-yarn-perjob.sh -job chunjun-examples/json/stream/stream.json\n```\n\nAfter the submission is successful, the task status can be observed on the yarn web.\n\n## Docs of Connectors\n\nFor details, please visit：https://dtstack.github.io/chunjun/documents/\n\n## Contributors\n\nThanks to all contributors! We are very happy that you can contribute Chunjun.\n\n<a href=\"https://github.com/DTStack/chunjun/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=DTStack/chunjun\"  alt=\"contributors\"/>\n</a>\n\n## Contributor Over Time\n\n[![Stargazers Over Time](https://contributor-overtime-api.git-contributor.com/contributors-svg?chart=contributorOverTime&repo=DTStack/chunjun)](https://git-contributor.com?chart=contributorOverTime&repo=DTStack/chunjun)\n\n## License\n\nChunJun is under the Apache 2.0 license. Please visit [LICENSE](http://www.apache.org/licenses/LICENSE-2.0) for details.\n\n## Contact Us\n\nJoin ChunJun Slack.\nhttps://join.slack.com/t/chunjun/shared_invite/zt-1hzmvh0o3-qZ726NXmhClmLFRMpEDHYw\n"
        },
        {
          "name": "README_CH.md",
          "type": "blob",
          "size": 8.3447265625,
          "content": "# ChunJun\n\n<p align=\"left\">\n  <img src=\"https://img.shields.io/github/stars/DTStack/chunjun?style=social\" alt=\"npm version\" />\n  <img src=\"https://img.shields.io/github/license/DTStack/chunjun\" alt=\"license\" />\n  <a href=\"https://github.com/DTStack/chunjun/releases\"><img src=\"https://img.shields.io/github/downloads/DTStack/chunjun/total\" alt=\"npm downloads\" /></a>\n  <img src=\"https://img.shields.io/gitlab/coverage/DTStack/chunjun/master\" alt=\"master coverage\" />\n</p>\n\n[![EN doc](https://img.shields.io/badge/document-English-blue.svg)](README.md)\n[![CN doc](https://img.shields.io/badge/文档-中文版-blue.svg)](README_CH.md)\n\n## 介绍\n\n纯钧（ChunJun，原名FlinkX），是一款稳定、易用、高效、批流一体的数据集成框架，目前基于实时计算引擎Flink实现多种异构数据源之间的数据同步与计算，已在上千家公司部署且稳定运行。\n\n官方网站：https://dtstack.github.io/chunjun/\n\n## 特性\n\n纯钧（ChunJun）将不同的数据库抽象成了reader/source 插件，writer/sink 插件和lookup 维表插件，其具有以下特点：\n\n- 基于实时计算引擎Flink，支持JSON模版配置任务，兼容Flink SQL语法；\n- 支持分布式运行，支持flink-standalone、yarn-session、yarn-per job等多种提交方式；\n- 支持Docker一键部署，支持K8S 部署运行；\n- 支持多种异构数据源，可支持MySQL、Oracle、SQLServer、Hive、Kudu等20多种数据源的同步与计算；\n- 易拓展，高灵活性，新拓展的数据源插件可以与现有数据源插件即时互通，插件开发者不需要关心其他插件的代码逻辑；\n- 不仅仅支持全量同步，还支持增量同步、间隔轮训；\n- 批流一体，不仅仅支持离线同步及计算，还兼容实时场景；\n- 支持脏数据存储，并提供指标监控等；\n- 配合checkpoint实现断点续传；\n- 不仅仅支持同步DML数据，还支持Schema变更同步；\n\n## 源码编译\n\n### 获取代码\n\n使用git工具将纯钧项目代码下载在本地\n\n```shell\ngit clone https://github.com/DTStack/chunjun.git\n```\n\n### 项目编译\n\n在项目源码目录下执行\n\n```shell\n./mvnw clean package -DskipTests\n```\n\n或者执行\n\n```shell\nsh build/build.sh\n```\n\n### 多平台兼容\n\nchunjun目前支持tdh和开源hadoop平台，对不同的平台有需要使用不同的maven命令打包\n\n| 平台类型 |                                              | 含义                                    |\n| -------- | -------------------------------------------- | --------------------------------------- |\n| tdh      | mvn clean package -DskipTests -P default,tdh | 打包出inceptor插件以及default支持的插件 |\n| default  | mvn clean package -DskipTests -P default     | 除了inceptor插件之外的所有插件          |\n\n### 常见问题\n\n#### 1.编译找不到DB2、达梦、Gbase、Ojdbc8等驱动包\n\n解决办法：在$CHUNJUN_HOME/jars目录下有这些驱动包，可以手动安装，也可以使用插件提供的脚本安装：\n\n```bash\n## windows平台\n./$CHUNJUN_HOME/bin/install_jars.bat\n\n## unix平台\n./$CHUNJUN_HOME/bin/install_jars.sh\n```\n\n#### 2. 关于编译ChunJun-core报错Failed to read artifact descriptor for com.google.errorprone:javac-shaded\n\n报错信息：\n\n```java\n[ERROR]Failed to execute goal com.diffplug.spotless:spotless-maven-plugin:2.4.2:check(spotless-check)on project chunjun-core:\n        Execution spotless-check of goal com.diffplug.spotless:spotless-maven-plugin:2.4.2:check failed:Unable to resolve dependencies:\n        Failed to collect dependencies at com.google.googlejavaformat:google-java-format:jar:1.7->com.google.errorprone:javac-shaded:jar:9+181-r4173-1:\n        Failed to read artifact descriptor for com.google.errorprone:javac-shaded:jar:9+181-r4173-1:Could not transfer artifact\n        com.google.errorprone:javac-shaded:pom:9+181-r4173-1 from/to aliyunmaven(https://maven.aliyun.com/repository/public): \n        Access denied to:https://maven.aliyun.com/repository/public/com/google/errorprone/javac-shaded/9+181-r4173-1/javac-shaded-9+181-r4173-1.pom -> [Help 1]\n```\n\n解决：\n\nhttps://repo1.maven.org/maven2/com/google/errorprone/javac-shaded/9+181-r4173-1/javac-shaded-9+181-r4173-1.jar\n从这个地址下载javac-shaded-9+181-r4173-1.jar， 临时放到chunjun根目录下jars目录里，然后在源码根目录下 执行安装依赖包命令如下：\n\n```shell\nmvn install:install-file -DgroupId=com.google.errorprone -DartifactId=javac-shaded -Dversion=9+181-r4173-1 -Dpackaging=jar -Dfile=./jars/javac-shaded-9+181-r4173-1.jar\n```\n\n## 快速开始\n\n以下表格是分支与flink版本之间的对应关系，如果版本没有对齐，可能会导致任务出现序列化异常，类冲突等问题。\n\n| 分支         | flink 版本 |\n| ------------ | ---------- |\n| master       | 1.12.7     |\n| 1.12_release | 1.12.7     |\n| 1.10_release | 1.10.1     |\n| 1.8_release  | 1.8.3      |\n\n纯钧支持多种模式运行任务，不同模式下，所依赖的环境和步骤有所不同，以下内容是不同模式下的提交步骤：\n\n### Local\n\nLocal 模式不依赖Flink环境和Hadoop环境，在本地环境启动一个JVM进程执行纯钧任务。\n\n#### 提交步骤\n\n进入到chunjun-dist 目录，执行命令\n\n```shell\nsh bin/chunjun-local.sh  -job chunjun-examples/json/stream/stream.json\n```\n\n即可执行一个简单的 **stream -> stream** 同步任务\n\n注意:\n```\n如果你是在windows环境下打包，在linux上运行任务前需要执行 sed -i \"s/\\r//g\" bin/*.sh 命令修复sh脚本中的  '\\r' 问题。\n```\n\n[参考视频](https://www.bilibili.com/video/BV1mT411g7fJ?spm_id_from=333.999.0.0)\n\n### Standalone\n\nStandalone模式依赖Flink Standalone环境，不依赖Hadoop环境。\n\n#### 提交步骤\n\n##### 1. 添加chunjun依赖包\n1) 根据实际情况找到依赖文件:\n   通过maven编译的方式构建项目时，依赖文件目录为'chunjun-dist';\n   通过官网下载压缩包解压使用时，依赖文件目录为解压后的目录，例如'chunjun-assembly-${revision}-chunjun-dist'\n\n2) 将依赖文件复制到Flink lib目录下,例如\n```shell\ncp -r chunjun-dist $FLINK_HOME/lib\n```\n注意: 这个复制操作需要在所有Flink cluster机器上执行，否则部分任务会出现类找不到的错误。\n\n##### 2. 启动Flink Standalone环境\n\n```shell\nsh $FLINK_HOME/bin/start-cluster.sh\n```\n\n启动成功后默认端口为8081，我们可以访问当前机器的8081端口进入standalone的flink web ui\n\n##### 3. 提交任务\n\n进入到本地chunjun-dist目录，执行命令\n\n```shell\nsh bin/chunjun-standalone.sh -job chunjun-examples/json/stream/stream.json\n```\n\n提交成功之后，可以在flink web ui 上观察任务情况；\n\n[参考视频](https://www.bilibili.com/video/BV1TT41137UV?spm_id_from=333.999.0.0)\n\n### Yarn Session\n\nYarnSession 模式依赖Flink 和 Hadoop 环境，需要在任务提交之前启动相应的yarn session；\n\n#### 提交步骤\n\n##### 1. 启动Yarn Session环境\n\nYarn Session 模式依赖Flink 和 Hadoop 环境，需要在提交机器中提前设置好$HADOOP_HOME和$FLINK_HOME\n\n我们需要使用yarn-session -t参数上传chunjun-dist\n\n```shell\ncd $FLINK_HOME/bin\n./yarn-session -t $CHUNJUN_HOME -d\n```\n\n##### 2. 提交任务\n\n通过yarn web ui 查看session 对应的application $SESSION_APPLICATION_ID，进入到本地chunjun-dist目录，执行命令\n\n```shell\nsh ./bin/chunjun-yarn-session.sh -job chunjun-examples/json/stream/stream.json -confProp {\\\"yarn.application.id\\\":\\\"SESSION_APPLICATION_ID\\\"}\n```\n\nyarn.application.id 也可以在 flink-conf.yaml 中设置；提交成功之后，可以通过 yarn web ui 上观察任务情况。\n\n[参考视频](https://www.bilibili.com/video/BV1oU4y1D7e7?spm_id_from=333.999.0.0)\n\n### Yarn Per-Job\n\nYarn Per-Job 模式依赖Flink 和 Hadoop 环境，需要在提交机器中提前设置好$HADOOP_HOME和$FLINK_HOME。\n\n#### 提交步骤\n\nYarn Per-Job 提交任务配置正确即可提交。进入本地chunjun-dist目录，执行命令提交任务。\n\n```shell\nsh ./bin/chunjun-yarn-perjob.sh -job chunjun-examples/json/stream/stream.json\n```\n\n提交成功之后，可以通过 yarn web ui 上观察任务情况；\n\n## 插件文档\n\n详情请访问：https://dtstack.github.io/chunjun/documents/\n\n## 贡献者\n\n感谢所有的贡献者！\n\n<a href=\"https://github.com/DTStack/chunjun/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=DTStack/chunjun\"  alt=\"contributors\"/>\n\n## 开源协议\n\n纯钧遵循Apache 2.0 开源协议。\n"
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-assembly",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-clients",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-connectors",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-ddl",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-dev",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-dirty",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-e2e",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-formats",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-local-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-metrics",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-restore",
          "type": "tree",
          "content": null
        },
        {
          "name": "chunjun-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.0419921875,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n      else\n        export JAVA_HOME=\"/Library/Java/Home\"\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`\\\\unset -f command; \\\\command -v java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=`find_maven_basedir \"$(pwd)\"`\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nif [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n    fi\nelse\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n    fi\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      jarUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    else\n      jarUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    fi\n    while IFS=\"=\" read key value; do\n      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n      esac\n    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Downloading from: $jarUrl\"\n    fi\n    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n    if $cygwin; then\n      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n    fi\n\n    if command -v wget > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found wget ... using wget\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        else\n            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found curl ... using curl\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        else\n            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        fi\n\n    else\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Falling back to using Java to download\"\n        fi\n        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaClass=`cygpath --path --windows \"$javaClass\"`\n        fi\n        if [ -e \"$javaClass\" ]; then\n            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n                fi\n                # Compiling the Java class\n                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n            fi\n            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                # Running the downloader\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Running MavenWrapperDownloader.java ...\"\n                fi\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\nexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nif [ \"$MVNW_VERBOSE\" = true ]; then\n  echo $MAVEN_PROJECTBASEDIR\nfi\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.5751953125,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Maven Start Up Batch script\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM M2_HOME - location of maven2's installed home dir\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %DOWNLOAD_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% ^\n  %JVM_CONFIG_MAVEN_PROPS% ^\n  %MAVEN_OPTS% ^\n  %MAVEN_DEBUG_OPTS% ^\n  -classpath %WRAPPER_JAR% ^\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n\ncmd /C exit /B %ERROR_CODE%\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 27.29296875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one\n  ~ or more contributor license agreements.  See the NOTICE file\n  ~ distributed with this work for additional information\n  ~ regarding copyright ownership.  The ASF licenses this file\n  ~ to you under the Apache License, Version 2.0 (the\n  ~ \"License\"); you may not use this file except in compliance\n  ~ with the License.  You may obtain a copy of the License at\n  ~\n  ~   http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing,\n  ~ software distributed under the License is distributed on an\n  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  ~ KIND, either express or implied.  See the License for the\n  ~ specific language governing permissions and limitations\n  ~ under the License.\n-->\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n\t\t xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n\t\t xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\t<modelVersion>4.0.0</modelVersion>\n\n\t<groupId>com.dtstack.chunjun</groupId>\n\t<artifactId>chunjun</artifactId>\n\t<packaging>pom</packaging>\n\t<version>${revision}</version>\n\n\t<name>ChunJun</name>\n\n\t<modules>\n\t\t<module>chunjun-core</module>\n\t\t<module>chunjun-connectors</module>\n\t\t<module>chunjun-clients</module>\n\t\t<module>chunjun-docker</module>\n\t\t<module>chunjun-metrics</module>\n\t\t<module>chunjun-dirty</module>\n\t\t<module>chunjun-restore</module>\n\t\t<module>chunjun-ddl</module>\n\t\t<module>chunjun-assembly</module>\n\t\t<module>chunjun-e2e</module>\n\t\t<module>chunjun-local-test</module>\n\t\t<module>chunjun-server</module>\n        <module>chunjun-formats</module>\n    </modules>\n\n\t<properties>\n\t\t<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n\t\t<dist.dir>chunjun-dist</dist.dir>\n\t\t<revision>master</revision>\n\n\t\t<!-- Dependency Version Start -->\n\t\t<target.java.version>1.8</target.java.version>\n\t\t<flink.version>1.16.1</flink.version>\n\t\t<flinkcdc.version>1.3.0</flinkcdc.version>\n\t\t<scala.version>2.12.17</scala.version>\n\t\t<scala.binary.version>2.12</scala.binary.version>\n\t\t<prometheus.version>0.8.1</prometheus.version>\n\t\t<http.version>4.5.3</http.version>\n\t\t<chunjun.guava.version>27.0-jre</chunjun.guava.version>\n\t\t<guava.version>19.0</guava.version>\n\t\t<auto-service.version>1.0.1</auto-service.version>\n\t\t<hadoop2.version>2.8.5</hadoop2.version>\n\t\t<hadoop3.version>3.2.4</hadoop3.version>\n\t\t<snappy-java.version>1.1.8.3</snappy-java.version>\n\t\t<checker.qual.version>3.10.0</checker.qual.version>\n\t\t<awaitility.version>4.2.0</awaitility.version>\n\t\t<spotless.version>2.28.0</spotless.version>\n\t\t<iceberg.version>0.13.1</iceberg.version>\n\t\t<codehaus.jackson.version>1.9.13</codehaus.jackson.version>\n\t\t<jersey.version>1.19</jersey.version>\n\t\t<javax.servlet.jap.version>2.1</javax.servlet.jap.version>\n\t\t<hadoop.binary.version>2.7</hadoop.binary.version>\n\t\t<jackson.version>2.12.6</jackson.version>\n\t\t<fastjson.version>1.2.83</fastjson.version>\n\t\t<hutool.version>5.8.4</hutool.version>\n\t\t<protostuff.version>1.8.0</protostuff.version>\n\t\t<avro.version>1.10.0</avro.version>\n\t\t<codec.version>1.13</codec.version>\n\t\t<jcommander.version>1.81</jcommander.version>\n\t\t<p3c-pmd.version>1.3.0</p3c-pmd.version>\n\t\t<lobmk.version>1.18.24</lobmk.version>\n\t\t<!-- Dependency Version End -->\n\n\t\t<!-- Unit Test Start -->\n\t\t<junit4.version>4.13.2</junit4.version>\n\t\t<junit5.version>5.9.0</junit5.version>\n\t\t<archunit.version>0.22.0</archunit.version>\n\t\t<mockito.version>3.4.6</mockito.version>\n\t\t<powermock.version>2.0.9</powermock.version>\n\t\t<hamcrest.version>1.3</hamcrest.version>\n\t\t<assertj.version>3.23.1</assertj.version>\n\t\t<testcontainer.version>1.17.6</testcontainer.version>\n\t\t<!-- Unit Test End -->\n\n\t\t<!-- Log Dependency Start -->\n\t\t<log4j.version>1.2.17</log4j.version>\n\t\t<slf4j.version>1.7.36</slf4j.version>\n\t\t<logback.version>1.2.11</logback.version>\n\t\t<log4j2.version>2.17.1</log4j2.version>\n\t\t<log4j2-disruptor.version>3.4.4</log4j2-disruptor.version>\n\t\t<!-- Log Dependency End -->\n\n\t\t<!-- Commons Utils Start -->\n\t\t<commons-logging.version>1.2</commons-logging.version>\n\t\t<commons.beanutils.version>1.9.4</commons.beanutils.version>\n\t\t<commons.cli.version>1.4</commons.cli.version>\n\t\t<commons.configuration.version>1.7</commons.configuration.version>\n\t\t<commons.digester.version>1.8.1</commons.digester.version>\n\t\t<commons-compress.version>1.20</commons-compress.version>\n\t\t<commons-lang3.version>3.12.0</commons-lang3.version>\n\t\t<commons-io.version>2.11.0</commons-io.version>\n\t\t<commons-collections4.version>4.4</commons-collections4.version>\n\t\t<!-- Commons Utils End -->\n\n\t\t<!-- Maven Plugins Start -->\n\t\t<maven.deploy.skip>false</maven.deploy.skip>\n\t\t<maven.javadoc.skip>false</maven.javadoc.skip>\n\t\t<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>\n\t\t<maven-failsafe-plugin.version>2.22.2</maven-failsafe-plugin.version>\n\t\t<maven-source-plugin.version>3.0.1</maven-source-plugin.version>\n\t\t<maven-javadoc-plugin.version>2.9.1</maven-javadoc-plugin.version>\n\t\t<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>\n\t\t<maven-scala-plugin.version>3.2.2</maven-scala-plugin.version>\n\t\t<maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>\n\t\t<maven-pmd-plugin.version>3.8</maven-pmd-plugin.version>\n\t\t<maven-assembly-plugin.version>3.3.0</maven-assembly-plugin.version>\n\t\t<maven-shade-plugin.version>3.3.0</maven-shade-plugin.version>\n\t\t<maven-helper-plugin.version>3.2.0</maven-helper-plugin.version>\n\t\t<maven-flatten-plugin.version>1.3.0</maven-flatten-plugin.version>\n\t\t<maven-license-plugin.version>1.20</maven-license-plugin.version>\n\t\t<maven-exec-plugin.version>3.0.0</maven-exec-plugin.version>\n\t\t<maven-scm-provider-jgit.version>1.9.5</maven-scm-provider-jgit.version>\n\t\t<maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>\n\t\t<maven-docker-plugin.version>0.38.0</maven-docker-plugin.version>\n\t\t<!-- Maven Plugins End -->\n\n\t\t<!-- Option args -->\n\t\t<skipUT>false</skipUT>\n\t\t<skipIT>true</skipIT>\n\t\t<skip.pmd.check>false</skip.pmd.check>\n\t\t<e2e.dependency.skip>true</e2e.dependency.skip>\n\n\t\t<!-- Shade Package Start -->\n\t\t<chunjun.shade.package>com.dtstack.chunjun.shade</chunjun.shade.package>\n\t\t<!-- Shade Package End -->\n\t</properties>\n\n\t<licenses>\n\t\t<license>\n\t\t\t<name>The Apache Software License, Version 2.0</name>\n\t\t\t<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n\t\t\t<distribution>repo</distribution>\n\t\t</license>\n\t</licenses>\n\n\t<dependencies>\n\t\t<!-- ***************** slf4j & provider & bridges start ***************** -->\n\t\t<dependency>\n\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t<artifactId>log4j-slf4j-impl</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t<artifactId>log4j-api</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t<artifactId>log4j-core</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t<artifactId>jcl-over-slf4j</artifactId>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t<artifactId>log4j-1.2-api</artifactId>\n\t\t</dependency>\n\t\t<!-- ***************** slf4j & provider & bridges end ***************** -->\n\n\t\t<dependency>\n\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t<artifactId>lombok</artifactId>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>junit</groupId>\n\t\t\t<artifactId>junit</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.mockito</groupId>\n\t\t\t<artifactId>mockito-core</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.mockito</groupId>\n\t\t\t<artifactId>mockito-inline</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.powermock</groupId>\n\t\t\t<artifactId>powermock-module-junit4</artifactId>\n\t\t\t<scope>test</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>byte-buddy</artifactId>\n\t\t\t\t\t<groupId>net.bytebuddy</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>byte-buddy-agent</artifactId>\n\t\t\t\t\t<groupId>net.bytebuddy</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>objenesis</artifactId>\n\t\t\t\t\t<groupId>org.objenesis</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\t\t<dependency>\n\t\t\t<groupId>org.powermock</groupId>\n\t\t\t<artifactId>powermock-api-mockito2</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t\t<!--Hadoop-->\n\t\t<dependency>\n\t\t\t<groupId>org.apache.hadoop</groupId>\n\t\t\t<artifactId>hadoop-common</artifactId>\n\t\t\t<version>${hadoop2.version}</version>\n\t\t\t<scope>provided</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-cli</artifactId>\n\t\t\t\t\t<groupId>commons-cli</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>guava</artifactId>\n\t\t\t\t\t<groupId>com.google.guava</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-collections</artifactId>\n\t\t\t\t\t<groupId>commons-collections</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-lang</artifactId>\n\t\t\t\t\t<groupId>commons-lang</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>avro</artifactId>\n\t\t\t\t\t<groupId>org.apache.avro</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>jackson-core-asl</artifactId>\n\t\t\t\t\t<groupId>org.codehaus.jackson</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>jackson-jaxrs</artifactId>\n\t\t\t\t\t<groupId>org.codehaus.jackson</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>jackson-mapper-asl</artifactId>\n\t\t\t\t\t<groupId>org.codehaus.jackson</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>jackson-xc</artifactId>\n\t\t\t\t\t<groupId>org.codehaus.jackson</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>httpclient</artifactId>\n\t\t\t\t\t<groupId>org.apache.httpcomponents</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>httpcore</artifactId>\n\t\t\t\t\t<groupId>org.apache.httpcomponents</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>log4j</artifactId>\n\t\t\t\t\t<groupId>log4j</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>netty</artifactId>\n\t\t\t\t\t<groupId>io.netty</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-math3</artifactId>\n\t\t\t\t\t<groupId>org.apache.commons</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.apache.hadoop</groupId>\n\t\t\t<artifactId>hadoop-hdfs</artifactId>\n\t\t\t<version>${hadoop2.version}</version>\n\t\t\t<scope>provided</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>guava</artifactId>\n\t\t\t\t\t<groupId>com.google.guava</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-cli</artifactId>\n\t\t\t\t\t<groupId>commons-cli</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-codec</artifactId>\n\t\t\t\t\t<groupId>commons-codec</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-io</artifactId>\n\t\t\t\t\t<groupId>commons-io</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-logging</artifactId>\n\t\t\t\t\t<groupId>commons-logging</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>netty-all</artifactId>\n\t\t\t\t\t<groupId>io.netty</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.apache.hadoop</groupId>\n\t\t\t<artifactId>hadoop-yarn-common</artifactId>\n\t\t\t<version>${hadoop2.version}</version>\n\t\t\t<scope>provided</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>guava</artifactId>\n\t\t\t\t\t<groupId>com.google.guava</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-cli</artifactId>\n\t\t\t\t\t<groupId>commons-cli</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-codec</artifactId>\n\t\t\t\t\t<groupId>commons-codec</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-io</artifactId>\n\t\t\t\t\t<groupId>commons-io</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-logging</artifactId>\n\t\t\t\t\t<groupId>commons-logging</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>jaxb-api</artifactId>\n\t\t\t\t\t<groupId>javax.xml.bind</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-compress</artifactId>\n\t\t\t\t\t<groupId>org.apache.commons</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.apache.hadoop</groupId>\n\t\t\t<artifactId>hadoop-yarn-client</artifactId>\n\t\t\t<version>${hadoop2.version}</version>\n\t\t\t<scope>provided</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>commons-cli</artifactId>\n\t\t\t\t\t<groupId>commons-cli</groupId>\n\t\t\t\t</exclusion>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>guava</artifactId>\n\t\t\t\t\t<groupId>com.google.guava</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.apache.hadoop</groupId>\n\t\t\t<artifactId>hadoop-mapreduce-client-core</artifactId>\n\t\t\t<version>${hadoop2.version}</version>\n\t\t\t<scope>provided</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>avro</artifactId>\n\t\t\t\t\t<groupId>org.apache.avro</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.apache.hadoop</groupId>\n\t\t\t<artifactId>hadoop-yarn-api</artifactId>\n\t\t\t<version>${hadoop2.version}</version>\n\t\t\t<scope>provided</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>guava</artifactId>\n\t\t\t\t\t<groupId>com.google.guava</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.apache.avro</groupId>\n\t\t\t<artifactId>avro</artifactId>\n\t\t\t<version>${avro.version}</version>\n\t\t\t<scope>provided</scope>\n\t\t\t<exclusions>\n\t\t\t\t<exclusion>\n\t\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t</exclusion>\n\t\t\t</exclusions>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.apache.commons</groupId>\n\t\t\t<artifactId>commons-collections4</artifactId>\n\t\t</dependency>\n\n\t\t<!-- test dependencies -->\n\t\t<dependency>\n\t\t\t<groupId>org.junit.jupiter</groupId>\n\t\t\t<artifactId>junit-jupiter</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.junit.vintage</groupId>\n\t\t\t<artifactId>junit-vintage-engine</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.hamcrest</groupId>\n\t\t\t<artifactId>hamcrest-all</artifactId>\n\t\t\t<type>jar</type>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\n\t\t<dependency>\n\t\t\t<groupId>org.testcontainers</groupId>\n\t\t\t<artifactId>junit-jupiter</artifactId>\n\t\t\t<scope>test</scope>\n\t\t</dependency>\n\t</dependencies>\n\n\t<repositories>\n\n\t\t<repository>\n\t\t\t<id>central</id>\n\t\t\t<url>https://repo1.maven.org/maven2/</url>\n\t\t</repository>\n\n\t\t<repository>\n\t\t\t<id>sonatype</id>\n\t\t\t<url>https://oss.sonatype.org/content/repositories/releases/</url>\n\t\t</repository>\n\n\t\t<repository>\n\t\t\t<id>aliyun</id>\n\t\t\t<url>https://maven.aliyun.com/repository/central</url>\n\t\t</repository>\n\n\t\t<!-- for greenplum -->\n\t\t<repository>\n\t\t\t<id>hand-china</id>\n\t\t\t<url>https://nexus.saas.hand-china.com/content/repositories/rdc</url>\n\t\t</repository>\n\n\t\t<!-- for kafka -->\n\t\t<repository>\n\t\t\t<id>confluent-io</id>\n\t\t\t<url>https://packages.confluent.io/maven/</url>\n\t\t</repository>\n\t</repositories>\n\n\t<dependencyManagement>\n\t\t<dependencies>\n\t\t\t<!-- ***************** slf4j & provider & bridges start ***************** -->\n\t\t\t<!-- Declare slf4j-api -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t</dependency>\n\t\t\t<!-- Declare slf4j-api provider: log4j2.x -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t\t<artifactId>log4j-slf4j-impl</artifactId>\n\t\t\t\t<version>${log4j2.version}</version>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t\t<artifactId>log4j-api</artifactId>\n\t\t\t\t<version>${log4j2.version}</version>\n\t\t\t</dependency>\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t\t<artifactId>log4j-core</artifactId>\n\t\t\t\t<version>${log4j2.version}</version>\n\t\t\t</dependency>\n\t\t\t<!-- Declare log4j2 asynchronous loggers provider: disruptor -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>com.lmax</groupId>\n\t\t\t\t<artifactId>disruptor</artifactId>\n\t\t\t\t<version>${log4j2-disruptor.version}</version>\n\t\t\t</dependency>\n\t\t\t<!-- Include the logging bridges -->\n\t\t\t<!-- commons-logging bridge to slf4j -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>jcl-over-slf4j</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t</dependency>\n\t\t\t<!-- jdk-logging bridge to slf4j -->\n\t\t\t<!-- low performance, see: https://www.slf4j.org/legacy.html#jul-to-slf4j\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>jul-to-slf4j</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t</dependency>\n\t\t\t-->\n\t\t\t<!-- log4j1.x bridge to log4j2.x -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t\t<artifactId>log4j-1.2-api</artifactId>\n\t\t\t\t<version>${log4j2.version}</version>\n\t\t\t</dependency>\n\t\t\t<!-- Exclude the logging bridges via provided scope -->\n\t\t\t<!-- log4j1.x bridge to slf4j\n\t\t\t\t Use of the SLF4J adapter (log4j-over-slf4j) together with the SLF4J bridge (slf4j-log4j12) should never be attempted as it will cause events to endlessly be routed between SLF4J and Log4j 1\n\t\t\t -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>log4j-over-slf4j</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\t\t\t<!-- slf4j binding to log4j1.x -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>slf4j-log4j12</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\t\t\t<!-- log4j2.x binding to slf4j.\n\t\t\t\t Use of the SLF4J adapter (log4j-to-slf4j-2.x.jar) together with the SLF4J bridge (log4j-slf4j-impl-2.x.jar) should never be attempted as it will cause events to endlessly be routed between SLF4J and Log4j 2\n\t\t\t-->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.logging.log4j</groupId>\n\t\t\t\t<artifactId>log4j-to-slf4j</artifactId>\n\t\t\t\t<version>${log4j2.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\n\t\t\t<!-- slf4j binding to jdk-logging -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>slf4j-jdk14</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\n\t\t\t<!-- slf4j binding to commons-logging -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>slf4j-jcl</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\n\t\t\t<!-- slf4j binding to nop -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>slf4j-nop</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\n\t\t\t<!-- slf4j binding to simple -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>slf4j-simple</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\n\t\t\t<!-- slf4j binding to reload4j -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t<artifactId>slf4j-reload4j</artifactId>\n\t\t\t\t<version>${slf4j.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\n\t\t\t<!-- Exclude other logging provider via provided scope -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>commons-logging</groupId>\n\t\t\t\t<artifactId>commons-logging</artifactId>\n\t\t\t\t<version>${commons-logging.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>ch.qos.logback</groupId>\n\t\t\t\t<artifactId>logback-classic</artifactId>\n\t\t\t\t<version>${logback.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>ch.qos.logback</groupId>\n\t\t\t\t<artifactId>logback-core</artifactId>\n\t\t\t\t<version>${logback.version}</version>\n\t\t\t\t<scope>provided</scope>\n\t\t\t</dependency>\n\t\t\t<!-- ***************** slf4j & provider & bridges end ***************** -->\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.commons</groupId>\n\t\t\t\t<artifactId>commons-lang3</artifactId>\n\t\t\t\t<version>${commons-lang3.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.commons</groupId>\n\t\t\t\t<artifactId>commons-collections4</artifactId>\n\t\t\t\t<version>${commons-collections4.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.projectlombok</groupId>\n\t\t\t\t<artifactId>lombok</artifactId>\n\t\t\t\t<version>${lobmk.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.junit</groupId>\n\t\t\t\t<artifactId>junit-bom</artifactId>\n\t\t\t\t<version>${junit5.version}</version>\n\t\t\t\t<type>pom</type>\n\t\t\t\t<scope>import</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>com.alibaba</groupId>\n\t\t\t\t<artifactId>fastjson</artifactId>\n\t\t\t\t<version>${fastjson.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n\t\t\t\t<artifactId>jackson-annotations</artifactId>\n\t\t\t\t<version>${jackson.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n\t\t\t\t<artifactId>jackson-core</artifactId>\n\t\t\t\t<version>${jackson.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>com.fasterxml.jackson.core</groupId>\n\t\t\t\t<artifactId>jackson-databind</artifactId>\n\t\t\t\t<version>${jackson.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.commons</groupId>\n\t\t\t\t<artifactId>commons-compress</artifactId>\n\t\t\t\t<version>${commons-compress.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.testcontainers</groupId>\n\t\t\t\t<artifactId>testcontainers</artifactId>\n\t\t\t\t<version>${testcontainer.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t\t<exclusions>\n\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t\t</exclusion>\n\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t<artifactId>junit</artifactId>\n\t\t\t\t\t\t<groupId>junit</groupId>\n\t\t\t\t\t</exclusion>\n\t\t\t\t</exclusions>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.scala-lang</groupId>\n\t\t\t\t<artifactId>scala-library</artifactId>\n\t\t\t\t<version>${scala.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>com.google.guava</groupId>\n\t\t\t\t<artifactId>guava</artifactId>\n\t\t\t\t<version>${guava.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>commons-io</groupId>\n\t\t\t\t<artifactId>commons-io</artifactId>\n\t\t\t\t<version>${commons-io.version}</version>\n\t\t\t</dependency>\n\n\t\t\t<!-- ***************** unit test & integration test start ***************** -->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.assertj</groupId>\n\t\t\t\t<artifactId>assertj-core</artifactId>\n\t\t\t\t<version>${assertj.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.testcontainers</groupId>\n\t\t\t\t<artifactId>junit-jupiter</artifactId>\n\t\t\t\t<version>${testcontainer.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.hamcrest</groupId>\n\t\t\t\t<artifactId>hamcrest-all</artifactId>\n\t\t\t\t<version>${hamcrest.version}</version>\n\t\t\t\t<type>jar</type>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>junit</groupId>\n\t\t\t\t<artifactId>junit</artifactId>\n\t\t\t\t<version>${junit4.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.mockito</groupId>\n\t\t\t\t<artifactId>mockito-core</artifactId>\n\t\t\t\t<version>${mockito.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.mockito</groupId>\n\t\t\t\t<artifactId>mockito-inline</artifactId>\n\t\t\t\t<version>${mockito.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.powermock</groupId>\n\t\t\t\t<artifactId>powermock-module-junit4</artifactId>\n\t\t\t\t<version>${powermock.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.powermock</groupId>\n\t\t\t\t<artifactId>powermock-api-mockito2</artifactId>\n\t\t\t\t<version>${powermock.version}</version>\n\t\t\t\t<scope>test</scope>\n\t\t\t\t<exclusions>\n\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t<groupId>org.mockito</groupId>\n\t\t\t\t\t\t<artifactId>mockito-core</artifactId>\n\t\t\t\t\t</exclusion>\n\t\t\t\t</exclusions>\n\t\t\t</dependency>\n\n\t\t\t<!-- ***************** unit test & integration test end ***************** -->\n\n\t\t\t<!-- ***************** flink start *****************-->\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.flink</groupId>\n\t\t\t\t<artifactId>flink-clients</artifactId>\n\t\t\t\t<version>${flink.version}</version>\n\t\t\t\t<exclusions>\n\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t</exclusion>\n\t\t\t\t</exclusions>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.flink</groupId>\n\t\t\t\t<artifactId>flink-runtime-web</artifactId>\n\t\t\t\t<version>${flink.version}</version>\n\t\t\t\t<exclusions>\n\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t</exclusion>\n\t\t\t\t</exclusions>\n\t\t\t</dependency>\n\n\t\t\t<dependency>\n\t\t\t\t<groupId>org.apache.flink</groupId>\n\t\t\t\t<artifactId>flink-table-planner-loader</artifactId>\n\t\t\t\t<version>${flink.version}</version>\n\t\t\t\t<exclusions>\n\t\t\t\t\t<exclusion>\n\t\t\t\t\t\t<artifactId>slf4j-api</artifactId>\n\t\t\t\t\t\t<groupId>org.slf4j</groupId>\n\t\t\t\t\t</exclusion>\n\t\t\t\t</exclusions>\n\t\t\t</dependency>\n\t\t\t<!-- ***************** flink end *****************-->\n\t\t</dependencies>\n\t</dependencyManagement>\n\n\t<build>\n\t\t<plugins>\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t</plugin>\n\n\t\t\t<plugin>\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t<artifactId>maven-source-plugin</artifactId>\n\t\t\t\t<version>${maven-source-plugin.version}</version>\n\t\t\t\t<executions>\n\t\t\t\t\t<execution>\n\t\t\t\t\t\t<id>attach-sources</id>\n\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t<goal>jar</goal>\n\t\t\t\t\t\t</goals>\n\t\t\t\t\t</execution>\n\t\t\t\t</executions>\n\t\t\t</plugin>\n\n\t\t\t<plugin>\n\t\t\t\t<groupId>com.diffplug.spotless</groupId>\n\t\t\t\t<artifactId>spotless-maven-plugin</artifactId>\n\t\t\t</plugin>\n\t\t</plugins>\n\n\t\t<pluginManagement>\n\t\t\t<plugins>\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\n\t\t\t\t\t<version>3.8.0</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<source>${target.java.version}</source>\n\t\t\t\t\t\t<target>${target.java.version}</target>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-shade-plugin</artifactId>\n\t\t\t\t\t<version>3.2.1</version>\n\t\t\t\t\t<executions>\n\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t<phase>package</phase>\n\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t<goal>shade</goal>\n\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t\t<configuration>\n\t\t\t\t\t\t\t\t<createDependencyReducedPom>false</createDependencyReducedPom>\n\t\t\t\t\t\t\t</configuration>\n\t\t\t\t\t\t</execution>\n\t\t\t\t\t</executions>\n\t\t\t\t</plugin>\n\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t\t\t\t<artifactId>maven-antrun-plugin</artifactId>\n\t\t\t\t\t<version>3.1.0</version>\n\t\t\t\t</plugin>\n\n\t\t\t\t<!-- set scala maven plugin version -->\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>net.alchim31.maven</groupId>\n\t\t\t\t\t<artifactId>scala-maven-plugin</artifactId>\n\t\t\t\t\t<version>${maven-scala-plugin.version}</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<args>\n\t\t\t\t\t\t\t<arg>-nobootcp</arg>\n\t\t\t\t\t\t\t<arg>-target:jvm-${target.java.version}</arg>\n\t\t\t\t\t\t</args>\n\t\t\t\t\t\t<jvmArgs>\n\t\t\t\t\t\t\t<arg>-Xss2m</arg>\n\t\t\t\t\t\t</jvmArgs>\n\t\t\t\t\t</configuration>\n\t\t\t\t</plugin>\n\n\t\t\t\t<plugin>\n\t\t\t\t\t<groupId>com.diffplug.spotless</groupId>\n\t\t\t\t\t<artifactId>spotless-maven-plugin</artifactId>\n\t\t\t\t\t<version>${spotless.version}</version>\n\t\t\t\t\t<configuration>\n\t\t\t\t\t\t<java>\n\t\t\t\t\t\t\t<googleJavaFormat>\n\t\t\t\t\t\t\t\t<version>1.7</version>\n\t\t\t\t\t\t\t\t<style>AOSP</style>\n\t\t\t\t\t\t\t</googleJavaFormat>\n\n\t\t\t\t\t\t\t<!-- \\# refers to the static imports -->\n\t\t\t\t\t\t\t<importOrder>\n\t\t\t\t\t\t\t\t<order>com.dtstack,org.apache.flink,org.apache.flink.shaded,,javax,java,scala,\\#</order>\n\t\t\t\t\t\t\t</importOrder>\n\n\t\t\t\t\t\t\t<removeUnusedImports/>\n\t\t\t\t\t\t</java>\n\t\t\t\t\t</configuration>\n\t\t\t\t\t<executions>\n\t\t\t\t\t\t<execution>\n\t\t\t\t\t\t\t<id>spotless-check</id>\n\t\t\t\t\t\t\t<phase>validate</phase>\n\t\t\t\t\t\t\t<goals>\n\t\t\t\t\t\t\t\t<goal>check</goal>\n\t\t\t\t\t\t\t</goals>\n\t\t\t\t\t\t</execution>\n\t\t\t\t\t</executions>\n\t\t\t\t</plugin>\n\t\t\t</plugins>\n\t\t</pluginManagement>\n\t</build>\n</project>\n"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}