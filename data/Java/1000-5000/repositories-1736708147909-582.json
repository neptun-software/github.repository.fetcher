{
  "metadata": {
    "timestamp": 1736708147909,
    "page": 582,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "williamfiset/DEPRECATED-data-structures",
      "stars": 2854,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.236328125,
          "content": "*.class\n.DS_STORE\n*.pyc\n*.hprof\n\n/.idea/\n\n.gradle\n/build/\n\n# Ignore Gradle GUI config\ngradle-app.setting\n\n# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)\n!gradle-wrapper.jar\n\n# Cache of project\n.gradletasknamecache\n\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.533203125,
          "content": "# Travis Continuous Integration script for travis-ci.org\ndist: trusty\n\n# Runs all unit tests and check for broken links\nlanguage: java\n\njdk:\n  - oraclejdk8\n\n# Install ruby to get gem command\nbefore_install:\n  - sudo apt-add-repository -y ppa:brightbox/ruby-ng\n  - sudo apt-get -y update\n  - sudo apt-get -y install ruby-full\n\n# Install awesome_bot for README.md broken link checking\nbefore_script:\n  - gem install awesome_bot\n\n# Run maven tests and broken link check\nscript:\n  - awesome_bot README.md --allow-dupe --allow-redirect\n  - gradle test"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2016 William Fiset\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.71875,
          "content": "[![No Maintenance Intended](http://unmaintained.tech/badge.svg)](http://unmaintained.tech/)\n\n# ⛔️ DEPRECATED ⛔️\n\n### Project status\n\nThis data-structures repository is deprecated. It is no longer being actively maintained or watched. The data structures in this repository was moved to the [Algorithms](https://github.com/williamfiset/Algorithms) repo in mid 2019. Please submit pull requests and issues to the [Algorithms](https://github.com/williamfiset/Algorithms) repo. \n\n### License\n\nThis repository is released under the [MIT license](https://opensource.org/licenses/MIT). In short, this means you are free to use this software in any personal, open-source or commercial projects. Attribution is optional but appreciated.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 2.8623046875,
          "content": "apply plugin: 'java'\napply plugin: \"com.github.sherter.google-java-format\"\n\n\n// https://github.com/sherter/google-java-format-gradle-plugin\nbuildscript {\n  repositories {\n    maven {\n      url \"https://plugins.gradle.org/m2/\"\n    }\n  }\n  dependencies {\n    classpath \"gradle.plugin.com.github.sherter.google-java-format:google-java-format-gradle-plugin:0.8\"\n  }\n}\n\n\n// Assume Java 8\nsourceCompatibility = 1.8\ntargetCompatibility = 1.8\n\nrepositories {\n  mavenLocal()\n  mavenCentral()\n}\n\ndependencies {\n  // JUnit framework\n  testCompile 'junit:junit:4.+'\n  compile 'junit:junit:4.+'\n  //JUnit 5 / Jupiter\n  testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')\n  testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')\n   \n  // Test mocking framework\n  testCompile \"org.mockito:mockito-core:1.+\"\n\n  // Google Guava lib\n  compile group: 'com.google.guava', name: 'guava', version: '22.0'\n\n  // Google truth API\n  compile \"com.google.truth:truth:0.36\"\n\n  // Apache commons lang\n  compile 'org.apache.commons:commons-lang3:3.6'\n}\n\n// Tests display stdout and stderr\ntest {\n  dependsOn cleanTest\n  testLogging.showStandardStreams = true\n  //useJUnitPlatform()\n}\n\n\nString javaPackage = \"com/williamfiset/datastructures\";\nString javatestsPackage = \"javatests/com/williamfiset/datastructures\";\n\nsourceSets {\n  main {\n    java {\n      srcDirs = [\n        javaPackage + '/balancedtree',\n        javaPackage + '/binarysearchtree',\n        javaPackage + '/bloomfilter',\n        javaPackage + '/dynamicarray',\n        javaPackage + '/fenwicktree',\n        javaPackage + '/hashtable',\n        javaPackage + '/linkedlist',\n        javaPackage + '/priorityqueue',\n        javaPackage + '/quadtree',\n        javaPackage + '/queue',\n        javaPackage + '/segmenttree',\n        javaPackage + '/hashset',\n        javaPackage + '/skiplist',\n        javaPackage + '/stack',\n        javaPackage + '/suffixarray',\n        javaPackage + '/trie', \n        javaPackage + '/unionfind',\n        javaPackage + '/utils'\n      ]\n    }\n  }\n  test {\n    java {\n      srcDirs = [\n        javatestsPackage + '/balancedtree',\n        javatestsPackage + '/binarysearchtree',\n        javatestsPackage + '/bloomfilter',\n        javatestsPackage + '/dynamicarray',\n        javatestsPackage + '/fenwicktree',\n        javatestsPackage + '/hashtable',\n        javatestsPackage + '/linkedlist',\n        javatestsPackage + '/priorityqueue',\n        javatestsPackage + '/quadtree',\n        javatestsPackage + '/queue',\n        javatestsPackage + '/segmenttree',\n        javatestsPackage + '/hashset',\n        javatestsPackage + '/skiplist',\n        javatestsPackage + '/stack',\n        javatestsPackage + '/suffixarray',\n        javatestsPackage + '/trie', \n        javatestsPackage + '/unionfind',\n        javatestsPackage + '/utils'\n      ]\n    }\n  }\n}\n\n\ntask buildDependenciesFolder(type: Copy) {\n  from configurations.compile\n  into './dependencies'\n}\n\n\n\n\n\n\n"
        },
        {
          "name": "com",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependencies",
          "type": "tree",
          "content": null
        },
        {
          "name": "javatests",
          "type": "tree",
          "content": null
        },
        {
          "name": "slides",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}