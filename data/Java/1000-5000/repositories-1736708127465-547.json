{
  "metadata": {
    "timestamp": 1736708127465,
    "page": 547,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "soot-oss/soot",
      "stars": 2919,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".classpath",
          "type": "blob",
          "size": 2.9091796875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<classpath>\n\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/generated/jastadd\">\n\t\t<attributes>\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/generated/protobuf\">\n\t\t<attributes>\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry kind=\"src\" output=\"target/systemTest-target-classes\" path=\"src/systemTest/targets\"/>\n\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/java\">\n\t\t<attributes>\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry including=\"**/*.java\" kind=\"src\" output=\"target/test-classes\" path=\"src/test/java\">\n\t\t<attributes>\n\t\t\t<attribute name=\"test\" value=\"true\"/>\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/generated/options\">\n\t\t<attributes>\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/generated/sablecc\">\n\t\t<attributes>\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry kind=\"src\" output=\"target/classes\" path=\"src/main/generated/singletons\">\n\t\t<attributes>\n\t\t\t<attribute name=\"optional\" value=\"true\"/>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry including=\"**/*.java\" kind=\"src\" output=\"target/test-classes\" path=\"src/systemTest/java\">\n\t\t<attributes>\n\t\t\t<attribute name=\"test\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-11\">\n\t\t<attributes>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry kind=\"con\" path=\"org.eclipse.m2e.MAVEN2_CLASSPATH_CONTAINER\">\n\t\t<attributes>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry excluding=\"**\" kind=\"src\" output=\"target/classes\" path=\"src/main/resources\">\n\t\t<attributes>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry excluding=\"**\" kind=\"src\" output=\"target/test-classes\" path=\"src/test/resources\">\n\t\t<attributes>\n\t\t\t<attribute name=\"test\" value=\"true\"/>\n\t\t\t<attribute name=\"maven.pomderived\" value=\"true\"/>\n\t\t</attributes>\n\t</classpathentry>\n\t<classpathentry kind=\"output\" path=\"target/classes\"/>\n</classpath>\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.251953125,
          "content": "/ant.settings\n/lib\n/classes\n/.classpath\n/sootOutput\n# IntelliJ IDEA project directory\n.idea\n*.iml\n# Directory with .jars required to build Soot with IntelliJ IDEA\n/libs_intellij\n/javadoc\n/reports\n/testclasses\n# Eclipse settings directory\n/.settings\n\n/target\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.044921875,
          "content": "tasks:\n  - init: mvn install -DskipTests=true\n"
        },
        {
          "name": ".project",
          "type": "blob",
          "size": 0.5205078125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<projectDescription>\n\t<name>soot</name>\n\t<comment></comment>\n\t<projects>\n\t</projects>\n\t<buildSpec>\n\t\t<buildCommand>\n\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t\t<buildCommand>\n\t\t\t<name>org.eclipse.m2e.core.maven2Builder</name>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t</buildSpec>\n\t<natures>\n\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n\t\t<nature>org.eclipse.m2e.core.maven2Nature</nature>\n\t</natures>\n</projectDescription>\n"
        },
        {
          "name": "CHANGES",
          "type": "blob",
          "size": 28.201171875,
          "content": "Improvements and API changes in HEAD\n\n1. Added support for Android. There is a new experimental module called \n   Dexpler which converts Dalvik bytecode to Jimple. This enables Soot\n   to directly read bytecode from Android applications. \n   TODO Further comments...\n\n2. Changed default throw analysis from \"pedantic\" to \"unit based\". This\n   changes the default the assumptions that Soot makes about which\n   statements can throw what kinds of exceptions. \"unit based\" is more\n   optimistic than \"pedantic\" but should also be more realistic in\n   most settings. (see the documentation on command line options\n   for details)  \n   \n3. Added option -ire to ignore field and method resolution errors.\n   Missing methods and fields will unsoundly be ignored. \n   \n4. Added option -oaat which will instruct Soot to process one class\n   at a time. Soot will load only one class at a time from the\n   -process-dir and then run the jtp pack over all bodies in that class.\n   This is repeated until all classes are processed. \n\n5. Ben Bellamy modified the fast type assigner to handle variables that\n   during their lifetime both point to array and non-array typed objects.\n   This is necessary for dalvik-to-Jimple code generation.\n   \n6. Soot now requires Java 1.6 to build and run. \n\n7. Changed the definition of EntryPoints.application() to just return\n   the empty set if no main class is present.\n   \n8. Soot now support Java 7 source-code syntax. \n\n9. Improves the geometric encoding points-to solver. \n   Bug fixes for processing the functions with more than 2^63 contexts.\n   New querying interface is added specially for retrieving context-sensitive points-to information.\n   Performance is significantly improved. Now it can analyze DaCapo-2006 with JDK1.6. \n   Precision is slightly better due to new fake information filtering algorithm. \n   Code is refactored to be more readable.\n\n10. Added support for plugins. This way it is possible to integrate new\n    analysis without modifying Soot.\n\n11. Host now supports two new convenience methods getJavaSourceStartLineNumber() and\n    getJavaSourceStartColumnNumber() which return line/column info on a\n    best-effort basis.\n\n12. EquivalentValue is never nested now. This eliminates the need of\n    getDeepestValue().\n    \n13. Multiple performance improvements for intra-procedural analyses and class loading\n\n14. ASM based .class-to-Jimple conversion (about twice as fast as Coffi, and cleaner code)\n\tuse -coffi to enable old Coffi frontend \n\t\n15. Improved error reporting. \n\nImprovements and API changes in version 2.5.0\n\n1. Modified SourceLocator so that it will automatically load a SootClass\n   from Soot's own JAR file if the class cannot be found on the\n   soot-classpath, but ONLY if the class is in package soot.rtlib.\n   See package documentation for soot.rtlib for more details.\n2. The option -process-dir how has an alias -process-path, which makes\n   sense because Soot can also process JAR files. Also, -keep-line-numbers\n   now defaults to true. This is because so many people ask about how to\n   access line numbers.   \n3. Removed \"org.apache\" package from the default excludes list because\n   that, by default, leads to Soot not analyzing anything of tomcat, for\n   instance. This change follows the principle of least surprise.\n4. Added option no-bodies-for-excluded that allows soot This\n   option causes Soot to not load any method bodies of classes from the\n   \"exclude\" packages (see -exclude option), even in whole-program mode,\n   unless the class is explicitly as a \"basic class\".\n   -no-bodies-for-excluded implies -allow-phantom-refs, as it uses the\n   phantom-refs mechanism to model classes that are not loaded.\n   The intent of this flag is to allow whole-program analyses to execute\n   quickly on little toy examples, disregarding the Java runtime. Of\n   course, such an analysis may be unsound - you get what you are asking\n   for.\n5. Added new packs \"wjpp\" and \"wspp\" for adding pre-processors. \n6. ReflectiveCallsInliner now supports field set/get through reflection.        \n7. Integrated a novel context-sensitive points-to analysis that uses\n   a memory-efficient geometric encoding. The analysis was presented\n   in the following paper:\n   Xiao Xiao and Charles Zhang. Geometric Encoding: Forging high\n   performance context sensitive points-to analysis for Java.\n   In ISSTA 2011: International Symposium on Software Testing and\n   Analysis, Toronto, Canada, 2011\n   The code was contributed to Soot by Richard (Xiao) Xiao. Thanks for\n   this! You can find the code in soot.jimple.spark.geom. There are\n   new phase options in cg.spark to enable and configure this\n   analysis.   \n8. Improved support for custom entry points in the points-to analysis.\n9. Added option allowing putiry analysis to add a \"Pure\" bytecode\n   attribute for pure methods.\n10.GenericAttribute instances are now automatically read from class\n   files and stored in class files.\n11.Soot now has virtually complete support for invokedynamic.\n   See tutorial/invokedynamic for details.\n        \nImprovements and API changes in version 2.4.0\n\n1. Deprecated class StronglyConnectedComponents because it is\n   inefficient. There is a new class StronglyConnectedComponentsFast\n   that implements Tarjan's algorithm and is very efficient.\n   \n2. Changed type parameter of PatchingChain to be a subtype of Unit\n   because this is what the implementation actually requires.\n\n3. Added Hossein Sadat-Mohtasham's implementation of program dependency\n   graphs.\n   \n4. Added new phase option \"reflection-log\" to support TamiFlex\n   reflection log files. This option allows Spark to construct sound\n   call graphs and points-to sets even for programs that use reflection.\n   More information is available at:\n   http://code.google.com/p/tamiflex/wiki/DaCapoAndSoot\n\nImprovements and API changes in version 2.3.0\n\n1. Integrated new JastAdd-based frontend with support for Java 5\n   source code. Thanks to Torbjorn Ekman for contributing his\n   frontend and his implementation of Java2Jimple!\n   If you like to use the old polyglot-based frontend then\n   just give the -polyglot command line option (Java 1.4 only).\n   \n2. At the very least if -validate is on, Soot now checks that @this\n   is only assigned in the first statement of an instance method.\n   This has always been an implicit assumption for Jimple code\n   but up until now was not enforced. Code transformations written\n   by clients should make sure to restore this invariant before\n   transforming Jimple into another intermediate representation\n   or into bytecode. (Eric Bodden)  \n   \n3. Integrated full support for preserving annotations in Jimple\n   and writing them to bytecode. SOURCE level annotations are\n   preserved if code is read from source and the flag\n   -p jb preserve-source-annotations is given. (does not hold for\n   package and local variable annotations) SOURCE level annotations\n   are not written into bytecode by Soot.\n   Annotations can easily be added to SootClass, SootMethod and\n   SootField instances using the utility class\n   soot.jimple.toolkits.annotation.j5anno.AnnotationGenerator.\n   (Thanks to Will Benton!)   \n \n4. Java 5 Annotations for fields, classes, parameters and methods\n   are now fully preserved in bytecode. Jasmin was changed to\n   implement this support. (Eric Bodden)   \n   \n5. Ben Bellamy contributed a new implementation for the type assigner.\n   This is to be published under the title 'Efficient Local Type\n   Inference' at OOPSLA '08. The new type assigner is usually\n   faster (it is applied when processing bytecode), and sometimes\n   more precise. In particular it should always infer the most\n   narrow type possible.   \n   Ben has tested this code, and verified that it provides a typing\n   that is at least as tight as the original algorithm (tighter in\n   2914 methods out of 295598) on a number of benchmarks. These are:\n   abc-complete.jar, BlueJ, CSO (Scala code), Gant, Groovy, havoc.jar,\n   Java 3D, jEdit, Java Grande Forum, Jigsaw, Jython, Kawa, rt.jar,\n   Kawa, Scala and tools.jar.\n   The mean execution time improvement is around 10 times,\n   but for the longest methods (abc parser methods and havoc with\n   >9000 statements) the improvement is between 200 and 500 times.\n   There are new phase options in jb.tr that allow to switch\n   back to the old type assigner or to compare both implementations.\n   The command line option -use-old-type-assigner was removed.\n   It used to enabled an even older version of the type assigner\n   (based on bit vectors) that was commented out any way.\n   The appropriate code was flagged as deprecated and may be removed\n   in future versions of Soot.   \n\nImprovements and API changes in version 2.2.5 \n\n1. Soot now has an option to prepend the classpath given on the\n   command line to the default classpath.  See the documentation on \n   the option -pp for details.\n\n2. Included Manu Sridharan's demand-driven points-to analysis.  See\n   http://doi.acm.org/10.1145/1133255.1134027 for details.  It can be\n   activated via: -p cg.spark cs-demand:true, and also has two other\n   phase options to control the effort with which the analysis\n   tries to build context information.\n\n3. Added local must-alias and not-may alias analyses. See package\n   soot.jimple.toolkits.pointer.\n\n4. Updated NullnessAnalysis for better performance. Thanks to Julian\n   Tibble!\n\n5. The flow analysis framework is now generic. One can explicitly\n   declare the type of the abstraction and that is used for the fixed\n   point iteration and the node type for the graph that is iterated over.\n   This avoids a lot of casting one had to do in the past.\n\n6. Between versions 2.2.3 and 2.2.4, a bug was introduced to Spark:\n   PointsToSetInternal now implements equals/hashCode which confused the\n   propagator algorithm because it was relying on comparison by identity.\n   This lead to a five-fold slowdown on the points-to analyses and\n   potentially wrong results.  The bug has now been fixed by modifying\n   the propagator algorithm. Original speed was restored.\n\n7. Richard Halpert's lock allocator as published at PACT'07, see:\n   http://www.sable.mcgill.ca/publications/papers/#pact2007\n   It is accessible via the wjtn (whole-jimple transaction) pack.\n   \n8. Added option: empties-as-allocs (default:true)\n   When this option is set to true, Spark treats references to EMPTY_SET,\n   EMPTY_MAP, and EMPTY_LIST as allocation sites for HashSet, HashMap and\n   LinkedList objects, respectively, and references to\n   Hashtable.emptyIterator as allocation sites for\n   Hashtable$EmptyIterator. This enables subsequent analyses to\n   differentiate different uses of Java's immutable empty collections.\n        \n9. Added instance keys (see class InstanceKey). An instance key is a\n   static abstraction of one or multiple runtime objects. It's identity\n   is defined via an intraprocedural flow-sensitive must-alias analysis.\n   Further an instance key can be tested for must-not-aliasing with\n   other keys. This functionality is provided via both an intraprocedural\n   flow-sensitive must-not-alias analysis and the normal interprocedural\n   flow-insensitive points-to analysis (whichever present). See the\n   Technical Report SABLE-TR-2007-8 for details, at:\n   http://www.sable.mcgill.ca/publications/techreports/#report2007-8\n\n10. Building against polyglot version 1.3.5 (used to be 1.3.4).\n\n11.Multiple changes to the Soot Eclipse plugin:\n - The SootOutput view is now deprecated. Instead Soot writes to a proper\n   console that provides better formatting and other options.\n - Soot extenders do not longer have to put their code into Soot's plugin\n   directory. Instead one can put the code into a normal Eclipse Java\n   project and configure this project as \"main project\" in the Soot run\n   configuration. The Main class is then automatically loaded from that\n   project.\n - Examples: Hit New -> Examples -> Soot to learn Soot by example.\n   Currently there are four example projects provided, from our well-known\n   tutorials.\n - Soot classpath variables: The Soot example projects include\n   sootclasses.jar via a platform-independent build path variable\n   SOOTCLASSES. This variable always points to sootclasses.jar, and\n   programmers extending Soot can include Soot on their build path by just\n   using the variable, avoiding downloading Soot a second time.              \n\nImprovements and API changes in version 2.2.4 (Fri, Apr 27, 2007)\n\n1. Soot is now able to infer a main-class if no main-class attribute\n   is given.\n\n2. soot.jimple.toolkits.annotation.nullcheck.BranchedRefVarsAnalysis\n   has been deprecated and replaced by \n   soot.jimple.toolkits.annotation.nullcheck.NullnessAnalysis.\n\n3. Added EXPERIMENTAL transactions/lock allocation code, including\n\t- may-happen-in-parallel analysis\n\t- interprocedural information flow analysis\n\t- thread-local objects analysis\n\t- thread-based side effect analysis\n\nImprovements in version 2.2.3 (Sat, Mar 18, 2006)\n\n1. Dava:\n    - Handling invocation of parent constructor and other constructors\n      within a constructor\n    - DeInlining final static fields.\n    - Ensuring initialization of all final fields\n    - Using copy propagation to remove un-necessary copy stmts\n    \n2. many bug fixes and improvements for Dava\n\n3. many bug fixes and improvements for Java To Jimple \n\nImprovements in version 2.2.2\n\nImprovements in version 2.2.1 (Mon, Jan 3, 2005)\n\n1. update Soot - Eclipse plugin to work with Eclipse versions 3.x\n\nImprovements in version 2.2 (Fri, Dec 17, 2004)\n\n1. changes to class resolution see: \n   http://svn.sable.mcgill.ca/wiki/index.php/ClassResolver\n2. major reorganization of control flow graphs and extended support for \n   exception control flow see: \n   http://svn.sable.mcgill.ca/wiki/index.php/CFG%20Reorganization\n3. complete and stable JavaToJimple module\n4. Java 1.4 sytle handling of method and field references see:\n   http://svn.sable.mcgill.ca/wiki/index.php/MethodAndFieldReferences\n5. minor fixes and cleanup of Shimple\n   * made dominator analysis and structure classes public\n   * Shimple factory added for finer grained control\n6. updates to Soot - Eclipse Plugin\n   * improved visual attributes in source\n   * attributes legend\n   * attribute management (for turning sets of attributes on/off)\n   * interactive cfgs see:\n   * growable graphical callgraph (experimental)\n7. jimple validator does partial type checking (-validate switch)\n8. testsuite\n9. minor bug fixes\n10. extended set of options\n\nImprovements in version 2.1 (Wed, 17 Dec 2003)\n1. bug fixes\n2. switched from make to ant\n3. many improvements to Shimple and Eclipse plugin\n4. first release of Java-to-Jimple compiler\n5. initial support for context-sensitive call graph and points-to analysis\n\nImprovements in version 2.0.1 (Fri, 18 Jun 2003)\n1. bug fixes\n2. minor improvements and cleanup of Shimple, including:\n a) Significantly improved constant propagator analysis.\n3. ant build file\n4. new framework for adding Soot system tests\n\nImprovements in version 2.0 (Fri, 6 Jun 2003)\n1. a true whole-program mode\n2. rewrite of the call graph code to provide more information (particularly\n   about implicit calls) with a cleaner interface\n3. first release of Eclipse plugin\n4. first release of Shimple (SSA-Jimple)\n5. refactoring of tag aggregators to make it easier to introduce new\n   annotations for use by JITs\n6. new, better organized option parsing code, accessible to other code\n   (so you can set an option with a method call, rather than having to\n   pass in a command line string)\n7. elimination of most global variables; the remaining ones have been\n   isolated so that Soot is restartable, and could be easily modified to\n   allow concurrent Soot sessions on different threads.\n8. bug fixes\n\nImprovements in version 1.2.5 (Fri, 14 Feb 2003)\n1. Spark improvements:\n a) now supports truly on-the-fly call graph construction, resulting\n    in much smaller call graphs.\n b) alias edge algorithm tweaked to be faster.\n c) bug fixes.\n2. General bug fixes.\n3. Some performance improvements, plugging of memory leaks.\n4. Reinstate support for JDK versions 1.2 through 1.4.\n\nImprovements in version 1.2.4 (Fri, 22 Nov 2002)\n\n1. main change is the inclusion of development version of Spark: Soot Pointer\n   Analysis Research Kit. Available documentation for Spark includes the\n   Spark poster (http://www.sable.mcgill.ca/publications/#poster-2002-1)\n   and the Spark options \n   (http://www.sable.mcgill.ca/soot/tutorial/phase-options/spark.ps).\n   More detailed documentation in the form of a master's thesis is being\n   written. (olhotak)\n2. Soot should now correctly handle classes compiled with 1.4.x versions\n   of javac (olhotak)\n3. new FastHierarchy class designed to eventually replace inefficient and\n   confusing Hierarchy class (olhotak)\n4. fix for missing control-flow graph edges from predecessors of statements\n   in nested try blocks to some exception handlers (jjorge1)\n5. make virtual call resolution respect access modifiers (olhotak)\n6. other bug fixes\n\nImprovements in version 1.2.3 (Wed, 08 May 2002)\n\n1. fix to SourceLocator for the case where there are no actual\n     paths in the soot classpath. (plam)\n2. fix to HashMutableDirectedGraph to remove wayward extra\n     preds and succs edges to a removed node. (fabien)\n3. fix for Windows classpaths which contain less than two letters.\n     Formerly, this crashed in charAt(1).  (plam, reported by Mary Payne)\n4. add an option '-A LineNumber' to keep line number attributes in\n   source class files. (feng)\n5. make SootClass.containsBafBody() public (requested by David Airapetyan);\n     avoid creating duplicate names in CommonSubexpressionEliminator\n         (requested by Florian Mateoc).  Both changes by plam.\n6. added changes by Michael Pan (pan@math.tau.ac.il) which make Soot \n     more parsimonious with respect to memory usage:\n     it may use up to 20% less maximum heap space.\n     Changes were: - sharing of coffi CONSTANT_Utf8_info objects\n                   - SootMethod exceptions list created on demand\n                   - get[Sub]Signature() storage hack useful for Sun JDK\n7. minor changes in HashChain (remove useless null checks, states increments\n   and modified insertBefore(List) ) (fabien)\n8. fix to AbstractHost to avoid creation of thousands of empty lists (fabien)\n9. added patch by Stephen Andrew Neuendorffer <neuendor@eecs.berkeley.edu>\n     to make DeadAssignmentEliminator more aggressive: we no longer declare\n     InstanceFieldRefs which read from 'this' in a non-static method to be\n     'isEssential'. (plam)\n10. Added some Timer.end() calls to JimpleBody.java\n    and CoffiMethodSource.java, so that the '--time' option no\n    longer causes runtime exceptions.  While this lets you\n    specify '--time' without crashing soot, the accuracy of the\n    reported times remains questionable. (jjorge1)\n11. Improved Psuedotopological ordering, replaced deprecated code \n    (Vectors and Stacks), fixed line numbering, \n    fixed a minor UnitGraph bug (berndl)\n12. Kludged together a bug fix for Alex Warshavsky (walex@il.ibm.com) where\n    use-original-names sometimes produced Jimple Locals with #'s \n    in their names. (plam)\n13. Fixed bug reported by Stephen Andrew Neuendorffer where CopyPropagator\n     doesn't quite fail in the expected way when there's a variable used\n     without definition (plam)\n14. Added basic XML support in the form of an XMLStmtPrinter. Using\n     the --xml command option will generate an XML version of the \n     class based on the Jimple statements and extended with static\n     program data and transformation/analysis results. (deng)\n15. Added entryInitialFlow method in FlowAnalysis, which allows a \n    new analysis just return flow object for entry points. \n\tThe customizeFlowGraph is still called. Currently it is \n\tcompatible with old analyses, but new analysis should override\n\tentryInitialFlow method rather than customizeFlowGraph.\n    Forward and backward flow analyses are changed respectively.\n\t                                                (fqian)\n16. Fixed local variable name problem in coffi.LocalVariable....\n    reported by Nathan Kitchen. See fix 12 also.    (fqian)\n17. Small improvement in ArraySparseSet and BackwardFlowAnalysis pointed\n    out by Florian Loitsch.                         (fqian)\n18. Added several utility classes for drawing generate graphs. \n    UnitGraph, BlockGraph, and Hierarchy can produce \"dot\" file\n\tfor generating postscript files. \n\tSee soot/util/DotGraph*.java\n\t(More function will be added on.)               (fqian)\n19. Added one flag in soot.Main.java to indicate the compilation for\n    J2ME library which does not have Cloneable and Serializable interfaces.\n\tThis affects the typing system which handcodes both interfaces.\n\tHas not been tested on J2ME. But when the flag is set to false, \n\toriginal function is not affected.\n\tPatch provided by Stephen Cheng.                (fqian)\n20. Fixed some obvious bugs in CFGViewer, added simple options. (fqian)\n21. Added a new implementation of PRE by Florian Loitsch, merging \n    was done by Ondrej. The old implementation of PRE was obsoleted.\n    The new implementation to be tested.                (fqian)\n\n\nImprovements in version 1.2.2 (Thu Mar 29 11:45:13 EST 2001)\n\n1. added \\t case for soot.util.StringTools.getQuotedStringOf.\n    (reported by Thomas VanDrunen)\n2. CFG.java is improved to handle nested JSR/RETs\n3. improved some exception message reported by Olivier Zendra.\n4. The Jasmin package is also updated to 1.06-s10, the bug in grammar\n   for attributes is fixed.\n5. replaced 'getNodes().contains()' by 'containsNode()' in \n   \"jimple/toolkits/invoke/MethodCallGraph.java\", which speeds up\n   the call graph construction significantly (by John Jorgensen.)\n\nImprovements in version 1.2.1 (Fri Jan 12 15:22:59 EST 2001)\n\n1. permissions changes and fix to Baf/JasminClass for BooleanType.\n2. removal of a UnitGraph hack that shouldn't have been there.\n3. internal changes to cmdline parsing, watch for bigger changes coming\n4. fix by patrice to work around stupid jar bug\n5. minor changes to jar bug workaround\n6. fix for grimp precedence\n7. improved error messages in the event of missing .dat files.\n8. new build system (via the SootCompiler class).\n\n\nImprovements in version 1.2.0 (Thu Sep 28 21:41:16 EDT 2000)\n\n1. An annotation framework is included in this release.\n2. A clean implementation of VTA is finally included in Soot.\n3. New implementation of typing system included\n     - contains nice integer typing system.\n4. HashChain has a fast 'contains' method.\n     (this was announced on the soot mailing list)\n5. A branched flow analysis framework is present.\n     - This allows different results to be propagated on\n        different edges of a branch.\n6. Implemented an Array Bounds Check and a Null Pointer Check algorithm.\n   The new option '-A' annotates class files with analysis results.\n      - See the new annotation tutorials.\n7. Other minor bugs were zapped.\n \n(release by Feng Qian)\n\nImprovements in version 1.0.1 (not released)\n\n1. Eliminated useless Directed interface.\n\n2. Fixed bug in HashChain where null could wheedle its way into a HashChain.  Bad stuff!\n\n3. Added attribute support and null pointer checks / array bounds checks.\n\n4. Added common subexpression elimination.\n\nImprovements in Release 1 (version 1.0.0)\n\nSome of these changes occurred earlier but are only mentioned now.\n\n1. Changed the version numbering scheme to follow the Linux\nversion numbering scheme.\n\n2. Added warning for unconsumed phase options.\n\n3. Fixed bug with original name recovery.\n\n4. Added documentation.\n\n5. Fixed another aggregation bug where multiple field refs between\ndef, use were not correctly handled.\n\n6. Added static class synchronizer.\n\n7. Changed format of Jimple source again, now removing the dots\nfor keywords.\n\n8. Fixed issue with absolute paths in dos/windows\n\nImprovements in 021400\n\n1. Fixed the SootResolver so that it displays the name of\nthe missing classfile before quitting.\n\n2. Merged in partial code for Partial Redundancy Elimination\n(not working yet).\n\n3. Added more documentation comments.  (Thanks patrice!)\n\n4. Added EquivTo interface, made all Jimple Values implement \nEquivTo, and provided EquivalentValue wrapper objects.  Using an\nEquivalentValue allows Collections to see structurally equal \nValues as satisfying .equals().  This is not universally useful;\nfor instance, the Units chain should not use EquivalentValues!\n\n5. Added jikes.def and javac.def files.  Invoking \"jams foo\"\nwill copy the .dat files from the src/ directories to the classes/\ndirectories.\n\n6. Patrice added some support for a framework allowing Baf peephole\noptimizations to be added in a uniform manner.\n\n7. Added soot.PackAdjuster and soot.jimple.StmtPrinter classes.\nThese classes can be overridden by placing custom classes with the \nsame names earlier in the CLASSPATH.  This permits external classes\nto be called by Soot at strategic moments in Soot's execution.\n\nImprovements in 1.beta.6\n\n1. A Jimple parser has been added to the Soot framework.  Soot can\nnow read both .class files and .jimple files (produced by the\n\"--jimple\" option).  Parsing .jimple files is faster than\nreading .class files, and these files can be modified easily in a text\neditor.\n\n2. Different phases of Sootification can now be passed command-line\noptions.  For instance, the static inliner (si) in the\nwhole-jimple optimization pack (wjop) can told that it is to\nexpand code by no more than a factor of 5, by giving the following\ncommand-line option:  -p wjop.si expansion-factor:5.\n\n3. Some whole-program (excluding library) optimizations are\nincluded, namely a static method binder and a static inliner.  The\ninliner is enabled by default when the -W option is given.\nIt can be disabled with the option  -p wjop.si disabled:true -p\nwjop.smb disabled:false.\n\nImprovements in 1.beta.5\n\n1. Baf, a streamlined form of bytecode has been added to Soot.  This is\nuseful for performing low level bytecode optimizations.  We can produce code\nwhich is as good as javac now with the option \"--final-rep baf\".\nUnfortunately this option creates bytecode which is different than what the Java\nVirtual Machine is used to and so causes the JVM to crash.  For this reason, the\noption is not enabled by default.\n\n2. Major restructuring of the API has taken place.\n\n3. The entire SpecJVM98 suite can be processed by Soot correctly, as well as\nnumerous other Java programs.\n\n4. Process times are reasonable: a program can be usually put through Soot\nwithin 2.5 times the execution time of javac on the original program.\n\nImprovements in 1.beta.4\n\nDate: Thu, 18 Mar 1999 01:05:44 -0500\nFrom: Raja Vallee-Rai <rvalleerai@sable.mcgill.ca>\nTo: soot-list@sable.mcgill.ca\nSubject: Soot-1.beta.4 released.\n\nHello soot-list subscribers,\n\n\nA new version of Soot has been released!  The notable improvements are:\n\n1. Grimp, an aggregated Jimple has been added to Soot. This is a\nmedium-high level intermediate representation which\nallows you to manipulate statements as trees instead of 3-address code.\nThis is particularly useful for code generation and\ndecompilation. \n\n2. The code produced by Soot from Jimple code (by first converting it to\nGrimp code) has been substantially improved. We\nare now 2 to 3 percent away from the original classfile in performance.\n(this is without any optimizations performed) \n\n3. A subroutine duplicator has been installed as a temporary solution\nfor the jsr bytecode. This means that there is no\nconcept of the subroutines in the framework and that the classfiles\nproduced by Soot are 'jsrless'. \n\n4. The speed of the transformations has been improved. \n\n5. Numerous bug fixes have been made. \n\n\nSee http://www.sable.mcgill.ca/soot for more details.\n\n\nBest regards,\n\nRaja Vallee-Rai\nSable Research Group\n\nImprovements in 1.beta.3\n\nDate: Wed, 27 Jan 1999 21:11:49 -0500\nFrom: Raja Vallee-Rai <rvalleerai@sable.mcgill.ca>\nTo: soot-list@sable.mcgill.ca\nSubject: Soot version 1.beta.3 available.\n\nHello,\n\nA new version of Soot has just been released.  This version fixes\nnumerous bugs and provides improved performance.  You can acquire the\nnew version at\n\nhttp://www.sable.mcgill.ca/software\n\nSee the release notes at\nhttp://www.sable.mcgill.ca/soot/releaseNotes.html for more details. \nMake sure you download the latest version of SableUtil to benefit from\nthe bug fixes and improvements in that package as well.\n\n--------------------------------\n\nFor our next version we would like some feedback from our users.  Please\nvote on the feature you would like to see implemented next:\n\nA. Fix the handling of the JSR bytecode.\nB. Improve the efficiency of the bytecode being generated.\nC. Improve the speed of the bytecode -> Jimple transformation.\n\nOnly one vote per person, please. :)\n\n\nBest regards,\n\nRaja Vallee-Rai\nSable Research Group\n\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.251953125,
          "content": "## Branches  \n\nCurrently, Soot follows the [git-flow branching model](http://nvie.com/posts/a-successful-git-branching-model/). This means that there are two main branches, master and develop. Master usually only points to stable release versions. Most people use the develop branch to get hands-on latest features but only in beta version, that gets updated on daily basis. On release, the stable develop version is merged into the Master branch.\n\nAll our nightly tests and builds operate on develop branch.\n\n## Pull Request  \n> Note: If you already have a fork of Soot and need to merge our formatting changes, [this](https://github.com/soot-oss/soot/wiki/Merging-changes-after-introduction-of-formatting-guidelines) might help.\n\nTo fix a problem in Soot or to contribute to Soot you can fork the Soot project on GitHub. This will generate a personal cloned repository for you to work on. To reincorporate your changes into Soot after they have been completed and tested, just send us a [pull request](https://help.github.com/articles/using-pull-requests). This will allow us to review your changes and merge them into the develop branch. In your pull request, please include: \n1. A description of the changes you made\n2. Tests regarding your changes \n\n### Style guidelines\n\nPull requests will have to conform to our coding style guidelines which are _as close as possible_* to the [Google Java Style Guide](https://google.github.io/styleguide/javaguide.html). Our build server will reject pull requests that do not comply with our guidelines.\n\nTutorials on how to apply automatic formatting and style enhancements can be found here:\n* [Eclipse](https://github.com/soot-oss/soot/wiki/Formatting-for-Eclipse)\n* [IntelliJ Idea](https://github.com/soot-oss/soot/wiki/Formatting-for-IntelliJ)\n\nCompliance with our guidelines is ensured by the Maven Checkstyle plugin. One can run the checks by invoking `mvn checkstyle:check`. Also, the check is bound to the Maven's `verify` phase. \nOur build server will reject pull requests with existing violations. \n\n### License header\n\nNewly created classes will have to have a [correct license header](https://github.com/soot-oss/soot/wiki/License-Header) right after the _package declaration_ of the class. Our build server will reject pull requests with missing license headers. The license check can be run locally by invoking `mvn license:check-file-header` or during the `verify` phase.\n\n**Make sure that `mvn clean verify` terminates successfully before setting up a pull request or committing to the repository directly!**\n\n\n\n## Mailing List  \n\nIn case, if you have any queries regarding SOOT, please refer to the link below. You can start by first registering yourself and you can then post related questions. It really helps us to figure out the problem if you post the reference code along with the question or bug/error in your code.\n\nhttp://www.sable.mcgill.ca/mailman/listinfo/soot-list/\n\nIn the link below, you can also find all the queries posted in the past and may help you find an answer to your query.\n\nhttp://www.sable.mcgill.ca/pipermail/soot-list/\n\n---\n\n*Unfortunately, we have to relax some of the original rules by Google since conforming to those would lead to a lot of client-breaking changes due to Soot being maintained without any guidelines for a long time now.\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 25.9072265625,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!"
        },
        {
          "name": "README.coding_rules",
          "type": "blob",
          "size": 2.947265625,
          "content": "In March 2003, we made several modifications to Soot to make it better\nsuited to being used as a library or inside a GUI. The most significant\nchange was moving all global variables to a single class called G, so\nthat they could be reset in between different runs of Soot. In order to\nmaintain interoperability as a library and with GUIs, the following\ncoding rules have been imposed. A checker has been included which points\nout potential violations of these rules. To run it, enter:\n\nant badfields\n\nRules:\n\n1) System.out and System.err should not be used. G.v().out should be\n   used instead. It is normally mapped to System.out, but may be\n   remapped by a program using Soot as a library or by a GUI.\n   If you accidentally send stuff to System.out instead, the output\n   will not appear in Eclipse.\n\n2) There should be no calls to System.exit(). This will kill programs\n   using Soot as a library and GUIs. Instead, Soot should throw a\n   CompilationDeathException or a RuntimeException.\n\n3) Static fields should not be used, unless they are final AND of\n   an immutable type such as a primitive type, String, Object,\n   Integer or Boolean.\n\n4) Static initializers should not have any side-effects. In particular,\n   they should not read any static fields. In addition, in order to\n   ensure that static initializers have no side-effects, they should\n   not call any methods, except trivial ones known to have no side-effects.\n\n5) Singletons should be implemented as follows:\n   - add the name of the singleton to soot/src/singletons.list\n   - run soot/src/make_singletons > soot/src/soot/Singletons.java\n   - in your singleton, include the following two methods following\n     the model in soot.jimple.toolkits.base.Aggregator:\n\n    public Aggregator( Singletons.Global g ) {}\n    public static Aggregator v() { return G.v().Aggregator(); }\n\n     The Singletons.Global parameter to the only constructor ensures\n     that only the Singletons class may instantiate the singleton,\n     since only it can create a Singletons.Global. The v() method\n     fetches the singleton instance from the Singletons class.\n     THE SINGLETON SHOULD NOT HAVE ITS OWN STATIC FIELD CONTAINING\n     THE SINGLETON INSTANCE. soot.G is the only singleton holding\n     its own instance, meaning that all global variables and singletons\n     can be reset by resetting that one single instance.\n\n6) \"ant badfields\" should be run periodically to check that these rules\n   are being followed. It will report most violations. Unfortunately,\n   it also reports some false positives that must be checked by hand.\n   Many of these are final static arrays, whose elements are never\n   modified. Unfortunately, Java doesn't have a final keyword that\n   applies to elements of arrays. It must be checked by hand that these\n   elements are never written. Presumably Spark could be used to check\n   that elements of static arrays are not written, but this may make\n   the checker too clumsy; the intent is for the checker to be widely\n   used.\n\nEOF\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.5166015625,
          "content": "[![Build Status](https://github.com/soot-oss/soot/workflows/Soot%20CI/badge.svg?branch=develop)](https://github.com/soot-oss/soot/actions)\n[![Gitpod Ready-to-Code](https://img.shields.io/badge/Gitpod-Ready--to--Code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/soot-oss/soot) \n\n# IMPORTANT: Soot is now succeeded by SootUp!\n**In December 2022, we have officially released [SootUp](https://soot-oss.github.io/SootUp/), a version of Soot with a completely overhauled, more modular, testable, maintainable and usable architecture. Please check this out in case you wish to start a new program-analysis project.**\n\nSince there has been some confusion: SootUp is not yet feature-complete. Therefore, the \"old\" Soot needs to live on for the time being, especially for projects that require instrumentation capabilities or robust Android support. The \"old\" Soot is still being maintained until it can safely be dropped for a feature-complete successor.\n\n# Using Soot? Let us know about it!\nWe are regularly applying for funding to help us maintain Soot. You can help us immensely by letting us know about [**projects that use Soot**](https://github.com/soot-oss/soot/wiki/Users-of-Soot), both commercially or in the form of research tools.\n\nAlso many thanks to [![JProfiler](https://www.ej-technologies.com/images/product_banners/jprofiler_small.png)](https://www.ej-technologies.com/products/jprofiler/overview.html) for supporting Soot with a free-to-use open source license!\n\n# Thanks to our Sponsors...\n... for supporting the further Development of Soot!\nAmazon Web Services is a Gold Sponsor. [![AWS](https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Amazon_Web_Services_Logo.svg/150px-Amazon_Web_Services_Logo.svg.png)]()\n\n[Read more here about how to become a sponsor on your own.](https://github.com/sponsors/soot-oss)\n\n\n# Soot supports Java 9 modules now!\nTry and get involved in Soot's Java 9 bleeding edge developement.\n## What works and is tested?\n* Automatic modules (modules automatically created from jars in the module-path)\n* Named modules\n* Exploded modules\n* Modular jar files\n* Resolving modules in Soot's `ModuleScene`\n* Spark\n   \n## What does not work yet?\n * Anonymous modules (mixing module- and class-path)\n * Multi-module jar files\n\n# What is Soot?\n\nSoot is a Java optimization framework. It provides four intermediate representations for analyzing and transforming Java bytecode:\n\n* Baf: a streamlined representation of bytecode which is simple to manipulate.\n* Jimple: a typed 3-address intermediate representation suitable for optimization.\n* Shimple: an SSA variation of Jimple.\n* Grimp: an aggregated version of Jimple suitable for decompilation and code inspection.\n\nSee https://soot-oss.github.io/soot for details.\n\n# How do I get started with Soot?\n\nWe have some documentation on Soot in the [wiki](https://github.com/soot-oss/soot/wiki) and also a large range of [tutorials](https://github.com/soot-oss/soot/wiki/Tutorials) on Soot. \n\nFor detailed information please also consider the Soot's [JavaDoc and Options](https://github.com/soot-oss/soot/wiki/Options-and-JavaDoc) Documentations.\n\n# Including Soot in your Project\n\nA Soot release is currently built for each commit to the `master` branch. You can include Soot as\na dependency via Maven, Gradle, SBT, etc using the following coordinates:\n\n\n```.xml\n<dependencies>\n  <dependency>\n    <groupId>org.soot-oss</groupId>\n    <artifactId>soot</artifactId>\n    <version>4.3.0</version>\n  </dependency>\n</dependencies>\n```\n\nYou can also obtain older builds of the `master` branch. A complete listing of builds can be found on [Maven Central](https://repo.maven.apache.org/maven2/org/soot-oss/soot/).\n\nA Soot SNAPSHOT is currently built for each commit to the `develop` branch. You can include Soot as \na dependency via Maven, Gradle, SBT, etc using the following coordinates:\n\n\n```.xml\n<dependencies>\n  <dependency>\n    <groupId>org.soot-oss</groupId>\n    <artifactId>soot</artifactId>\n    <version>4.4.0-SNAPSHOT</version>\n  </dependency>\n</dependencies>\n<repositories>\n  <repository>\n      <id>sonatype-snapshots</id>\n      <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n      <releases>\n          <enabled>false</enabled>\n      </releases>\n  </repository>\n</repositories>\t\n```\n\nYou can also obtain older builds of the `develop` branch. A complete listing of builds can be found on [Maven Central](https://oss.sonatype.org/content/repositories/snapshots/org/soot-oss/soot/).\n\n# How do I obtain Soot without Maven?\n**We recommend using Soot with Maven**\nYou can obtain the latest release build of Soot [directly](https://repo1.maven.org/maven2/org/soot-oss/soot/).\nYou can obtain the latest SNAPSHOT build of Soot [directly](https://oss.sonatype.org/content/repositories/snapshots/org/soot-oss/soot/).\n\nThe `soot-<RELEASE>-jar-with-dependencies.jar` file is an all-in-one file that also contains all the required libraries. \n\nThe `soot-<RELEASE>.jar`  file contains only Soot, allowing you to manually pick dependencies as you need them. If you do not want to bother with dependencies, we recommend using the former.\n\n# Building Soot yourself\n\nIf you cannot work with the prebuild versions and need to build Soot on your own, please consider the [wiki](https://github.com/soot-oss/soot/wiki/Building-Soot-from-the-Command-Line-(Recommended)) for further steps.\n\n# About Soot's source code\n\nSoot follows the git-flow convention. Releases and hotfixes are maintained in the master branch.\nDevelopment happens in the develop branch. To catch the bleeding edge of Soot, check out the latter.\n\n# How do I contribute to Soot?\n\nWe are happy to accept arbitrary improvements to Soot in form of GitHub pull requests. Please read our [contribution guidelines](https://github.com/soot-oss/soot/blob/master/CONTRIBUTING.md) before setting up a pull request.\n\n# Please help us improve Soot!\nYou are using Soot and would like to help us support it in the future? Then please support us by filling out [this little web form](https://goo.gl/forms/rk1oSxFIxAH0xaf52).\n\nThat way you can help us in two ways:\n* By letting us know how we can improve Soot you can directly help us prioritize newly planned features.\n* By stating your name and affiliation you help us showcasing Soot’s large user base.\nThanks!\n\n# How to use Soot's Java 9 Features?\n\nIf you want to run Soot with Java > 8, you are done. Just run it as usal.\nIf you want to execute Soot with Java 8 but analyze Java >8 Projects or vice versa, see below.\n\n## Use from Source Code\nTo load modules in Soot's `ModuleScene` from java:\n```.java\n// configure Soot's options, refer to example configurations below\nOptions.v().set_soot_modulepath(modulePath);\n\n\n// load classes from modules into Soot\n// Here, getClassUnderModulePath() expects the module path to be set using the Options class as seen above\nMap<String, List<String>> map = ModulePathSourceLocator.v().getClassUnderModulePath(modulePath);\nfor (String module : map.keySet()) {\n   for (String klass : map.get(module)) {\n       logger.info(\"Loaded Class: \" + klass + \"\\n\");\n       loadClass(klass, false, module);\n       // the loadClass() method is defined below\n   }\n}\n\n\n//this must be called after all classes are loaded\nScene.v().loadNecessaryClasses();\n\n\npublic static SootClass loadClass(String name, boolean main, String module) {\n     SootClass c = ModuleScene.v().loadClassAndSupport(name, Optional.of(module));\n     c.setApplicationClass();\n     if (main)\n         Scene.v().setMainClass(c);\n     return c;\n}\n\n```\nModuleUtil.module_mode() helps you check whether you have modules enabled in Soot. This is done based on whether the module path is set using the Options class.\n\n### Example Configurations: Java 8, Java >= 9 Classpath, Java >= 9 Modulepath\n\n```.java\n\nif(java < 9 ) { // when you have a target benchmark with Java < 9 and hence no modules\n    Options.v().set_prepend_classpath(true);\n    Options.v().set_process_dir(Arrays.asList(applicationClassPath().split(File.pathSeparator)));\n    Options.v().set_soot_classpath(sootClassPath());\n}\n\nif(java >= 9 && USE_CLASSPATH) { // when you have a target benchmark with Java >= 9 and do not want module support\n    Options.v().set_soot_classpath(\"VIRTUAL_FS_FOR_JDK\" + File.pathSeparator + sootClassPath());\n    Options.v().set_process_dir(Arrays.asList(applicationClassPath().split(File.pathSeparator)));\n}\n\n\nif(java>=9 && USE_MODULEPATH) { // when you have a target benchmark with Java >= 9 and want module support\n    Options.v().set_prepend_classpath(true);\n    Options.v().set_soot_modulepath(sootClassPath());\n    Options.v().set_process_dir(Arrays.asList(applicationClassPath().split(File.pathSeparator)));\n}\n\n```\nIn the above examples, applicationClassPath() should be replaced with the path to the application classes for analysis by Soot and sootClassPath() should be replaced with the Soot classpath.\n\n## Use from the Command Line\nTo execute Soot using Java 1.9, but analyzing a classpath run, just as before:\n`java -cp soot-trunk.jar soot.Main --process-dir directoryToAnalyse`\n\n\nif you want to specify the classpath explicitly run:\n`java -cp soot-trunk.jar soot.Main -cp VIRTUAL_FS_FOR_JDK --process-dir directoryToAnalyse`\n\nthe value `VIRTUAL_FS_FOR_JDK` indicates that Soot should search Java's (>9) virtual filesystem `jrt:/` for classes, too, although Soot is not executed in module mode.\n\n\nTo load modules and classes in Soot using java 1.8 run:\n\n` java -cp PATH_TO_JAVA9/jrt-fs.jar:soot-trunk.jar soot.Main -pp -soot-modulepath modules/  `\n\n\nPlease replace `PATH_TO_JAVA9` with the path to your local installation of java 9.\nThe `jrt-fs.jar` is a built-in NIO FileSystem provider for the jrt:// filesystem java 9 uses that replaces `rt.jar`. \n\n\n"
        },
        {
          "name": "Release_Notice",
          "type": "blob",
          "size": 3.3798828125,
          "content": "Dear Soot Users,\n\nWe are pleased to announce that Soot version 2.5.0 is now available\nat: http://www.sable.mcgill.ca/soot/\n\nThis release contains the following additions and improvements:\n\n1. Modified SourceLocator so that it will automatically load a SootClass\n   from Soot's own JAR file if the class cannot be found on the\n   soot-classpath, but ONLY if the class is in package soot.rtlib.\n   See package documentation for soot.rtlib for more details.\n2. The option -process-dir how has an alias -process-path, which makes\n   sense because Soot can also process JAR files. Also, -keep-line-numbers\n   now defaults to true. This is because so many people ask about how to\n   access line numbers.   \n3. Removed \"org.apache\" package from the default excludes list because\n   that, by default, leads to Soot not analyzing anything of tomcat, for\n   instance. This change follows the principle of least surprise.\n4. Added option no-bodies-for-excluded that allows soot This\n   option causes Soot to not load any method bodies of classes from the\n   \"exclude\" packages (see -exclude option), even in whole-program mode,\n   unless the class is explicitly as a \"basic class\".\n   -no-bodies-for-excluded implies -allow-phantom-refs, as it uses the\n   phantom-refs mechanism to model classes that are not loaded.\n   The intent of this flag is to allow whole-program analyses to execute\n   quickly on little toy examples, disregarding the Java runtime. Of\n   course, such an analysis may be unsound - you get what you are asking\n   for.\n5. Added new packs \"wjpp\" and \"wspp\" for adding pre-processors. \n6. ReflectiveCallsInliner now supports field set/get through reflection.        \n7. Integrated a novel context-sensitive points-to analysis that uses\n   a memory-efficient geometric encoding. The analysis was presented\n   in the following paper:\n   Xiao Xiao and Charles Zhang. Geometric Encoding: Forging high\n   performance context sensitive points-to analysis for Java.\n   In ISSTA 2011: International Symposium on Software Testing and\n   Analysis, Toronto, Canada, 2011\n   The code was contributed to Soot by Richard (Xiao) Xiao. Thanks for\n   this! You can find the code in soot.jimple.spark.geom. There are\n   new phase options in cg.spark to enable and configure this\n   analysis.   \n8. Improved support for custom entry points in the points-to analysis.\n9. Added option allowing putiry analysis to add a \"Pure\" bytecode\n   attribute for pure methods.\n10.GenericAttribute instances are now automatically read from class\n   files and stored in class files.\n11.Soot now has virtually complete support for invokedynamic.\n   See tutorial/invokedynamic for details.\n      \nAlso we incorporated fixes to numerous bugs. Thanks for reporting bugs\nand/or providing fixes!   \n\nSee http://www.sable.mcgill.ca/soot/CHANGES for details.\n\nAs of version 2.2.0 the Soot bugzilla is available at:\nhttp://svn.sable.mcgill.ca/bugzilla/. We encourage you to add any Soot\nbugs there.\n\nAlso, as of version 2.2.0 the Soot wiki is available at:\nhttp://svn.sable.mcgill.ca/wiki/index.php/SootProject. The Soot team\nwill be using this site for discussing upcoming work, so if you would\nlike to know what's going on look there.\n\nHave fun,\nEric \n-- \nEric Bodden, Ph.D., http://bodden.de/\nHead of Secure Software Engineering Group at EC SPRIDE\nPrincipal Investigator in Secure Services at CASED\nTel: +49 6151 16-75422Ê Ê Fax: +49 6151 16-72051\nRoom 3.2.14, Mornewegstr. 30, 64293 Darmstadt"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 4.7490234375,
          "content": "Todo (as of 2.0.1)\n\nVERY HIGH - fix problem that xml attribute tags are only generated if output == jimple (they should work if other output formats are selected also) - fixed\n\nVERY HIGH - fix the mechanism used to generate attributes in the source viewers in Eclipse - fixed - needs more work - fixed\n\nHIGH - finish coloring for stmts - fixed \n\nHIGH - make visual attributes display in inner classes in source - done\n\nHIGH - implement getting the actual Soot Output dir from Soot so the plugin can find the xml attributes file (right now if you use a dir other then the default the attributes cannot be found) \n\nHIGH - minimize amount of XML being generated - done\n\nHIGH - write documentation and howto's - done\n\nHIGH - implement running on all source files in project from project menu (currently can only run for all class files - unless process-dir is changed manually)\n- done\n\nHIGH - implement being able to run Soot on a package of java files (not classes) and being able to do more then just decompile when a package/folder is selected\n\nHIGH - fix the paths problems when plugin is automatically finding and adding to soot-class-path all jars required by the project (or all jars in the project) -\n- fixed \n\nMEDIUM - when cloning a configuration, give the old name of the cloned configuration as a starting point for the new name for the new configuration - done\n\nMEDIUM - decide what to do while Soot is running\n    1) don't allow the user to do anything\n    2) don't allow the user to do Soot related things\n    3) don't restrict the user from doing anything\n\nMEDIUM - implement the Java to Jimple translations for assert and anon inner classes - done\n\nMEDIUM - implement analyses \n\nMEDIUM - fix selection process so if multiple selections are made in package explorer/ navigator - have Soot run with list of classes selected (not just first one as currently happens) - done\n\nMEDIUM - implement a view with the key for colors when displaying color attributes\n\nMEDIUM - determine in soot why fields and methods don't have line number tags when starting from class files\n\nMEDIUM - add tooltips to the entries in the manage configurations dialog with the soot command line of what they save (w/o Eclipse defs in list)\n\nLOW - fix and start using: when dava runs creating a dava project automatically and copying the generated classes there\n                                     \nLOW - fix the problem of polyglot not being able to find classes in jars \n\nLOW - implement import/export a set of options to plugin\n\nLOW - make long_desc be tooltips in pages in Options Dialog (currently the short descriptions are shown)\n\nLOW - Soot Output View possibly limiting the #characters in this view to something (wrapping)\n\nLOW - have dependencies for options dialog\n\nLOW - implement textlistener for updating content outliner as one types\n\nLOW - implement a progress monitor at bottom when running soot\n\nLOW - create better jimple and soot icons \n\nLOW - fix the delete from managed configurations (the configuration name disappears from the list but the configuration never gets deleted from the underlying file where it is saved)\n\nVERY LOW - pop-up generated files after running Soot\n\nVERY LOW - have soot menu from right click on file (jimple only) - when in full screen\n\nVERY LOW - impl an option to run Dava in popup menu Open With ...\n\nVERY LOW - getting decompiled library classes to know their project\n\nTodo (as of 1.2.5)\n1. continued work on Spark (points-to) package, Ondrej\n2. SSA-Jimple (Navindra)\n3. Decompiler (Jerome)\n4. Solve UnitGraph for infinite loops (without exit points).\n5. More projects from CS621.\n6. Precise exception modelling (John)\n7. Refactor global variables.\n8. Clean up and document options.\n\nTodo (as of 1.2.4)\n1. continued work on Spark (points-to) package, Ondrej\n2. SSA-Jimple (Navindra)\n3. Decompiler (Jerome)\n4. Solve UnitGraph for infinite loops (without exit points).\n5. More projects from CS621.\n6. Precise exception modelling (John)\n7. Java 1.4 support.\n\nTodo (as of 1.2.3)\n1. Spark (points-to) package, Ondrej\n2. SSA-Jimple (Navindra)\n3. Decompiler (Jerome)\n4. Solve UnitGraph for infinite loops (without exit points).\n5. More projects from CS621.\n\nTodo (as of 1.2.2)\n1. waiting for more improvements on speed and memory usage\n   John is working on that.\n2. how soot works on other VMs ( such as Kaffe )\n\nTodo (as of 1.2.1)\n1. test new command line options provided by Fabien\n\nOpen problems (as of 1.2.0):\n\n1. improve our naming scheme to make Soot run on Macintosh.\n2. improve the invoke graph builder.\n3. include an interprocedural flow analysis framework\n      and improve the whole-program analysis features.\n4. improve soot.toolkits.graph.Block so that we keep a state counter for\n      the Body and don't trample stuff; this is needed to keep the \n      BlockLength up to date.  Actually, that is somewhat complicated.\n\n"
        },
        {
          "name": "TODO.txt",
          "type": "blob",
          "size": 0.0458984375,
          "content": "TODO:\n\tHandle MethodType constant-pool entries\t"
        },
        {
          "name": "background6.gif",
          "type": "blob",
          "size": 0.326171875,
          "content": null
        },
        {
          "name": "codingstyle",
          "type": "tree",
          "content": null
        },
        {
          "name": "credits",
          "type": "blob",
          "size": 4.7099609375,
          "content": "                      Soot Credits\n                 \n                 \n      Soot Maintainers: Patrick Lam, Feng Qian, Ondrej Lhotak, Eric Bodden\n    \n    \n-------------------- Soot Contributors ------------------------\n                  (in alphabetical order)\n\nAlexandre Bartel\n    - Dexpler (see SOAP '12)\n\nBen Bellamy\n    - New type assigner (see OOPSLA '08)\n\nWill Benton\n    - Annotation generator for Java 5 annotations\n\nMarc Berndl\n    - Soot framework optimization\n    - annotation\n\nEric Bodden\n    - Improvements to the Eclipse plugin\n    - Re-implementation of nullness analysis\n    - Instance Keys\n      - Local must-alias analysis\n    - Integration of JastAdd frontend\n    - TamiFlex support for reflection\n    - Support for invkedynamic (JSR 292)\n\nPhong Co (phong@hasc.com)\n    - Jimple scalar optimizations\n\nArchie Cobbs\n    - Added SourceFileTag, InnerClassTag, and the various ConstantValueTags\n    - Miscellaneous bug fixes\n\nTorbjorn Ekman\n    - JastAdd-based frontend with Java 5 support; including its own\n      version of Java2Jimple\n\nDavid Eng (flynn@sable.mcgill.ca)\n    - XML output\n\nEtienne Gagnon (gagnon@sable.mcgill.ca)\n    - Jimple typing algorithm\n\nChris Goard (cgoard@sable.mcgill.ca)\n    - general bug fixes, hacks\n    - documentation\n\nRichard Halpert (rhalpe@sable.mcgill.ca)\n    - lock allocation\n    - thread-based side effect analysis\n    - may-happen-in-parallel (MHP) analysis\n\nLaurie Hendren (hendren@sable.mcgill.ca)\n    - project advisor\n\nJohn Jorgensen (jjorge1@sable.mcgill.ca)\n    - pruning unrealizable exceptions from CFGs\n    - bug fixes\n    - documentation\n       \nFelix Kwok (wkwok@sable.mcgill.ca)\n    - VTA re-implementation\n\nSteven Lambeth\n\t- BitSet based implementation of FlowAnalysis and other performance improvements\n    \nPatrick Lam (plam@sable.mcgill.ca)\n    - general Soot hacker\n    - Grimp\n    - Baf implementation\n    - Aggregation\n    - second implementation of inlining and devirtualization\n    - Local must-not-alias analysis\n\nJennifer Lhotak (jlhotak@sable.mcgill.ca)\n    - Eclipse Plugin\n    - Java To Jimple\n  \nOndrej Lhotak (olhota@sable.mcgill.ca)\n    - General bug-fixes, soot hacker\n    - Spark\n    - call graph re-implementation\n\nLin Li (lli31@sable.mcgill.ca)\n    - may-happen-in-parallel (MHP) analysis\n\nFlorian Loitsch (florian@loitsch.net)\n    - PRE re-implementation\n\nJerome Miecznikowski (jerome@sable.mcgill.ca)\n    - Dava decompiler\n\nAaloan Miftah (aaloanmiftah@yahoo.com)\n\t- ASM based .class-to-Jimple conversion\n\nAntoine Mine (Antoine.Mine@ens.fr)\n    - purity analysis \n    \nNomair Naeem (nomain.naeem@mail.mcgill.ca)\n    - Dava decompiler\n\nMatthias Perner (snafu@chaos-darmstadt.de)\n    - inital invokedynamic support based on JDK7 beta\n\nChris Pickett (cpicke@sable.mcgill.ca)\n    - documentation\n    - minor Jasmin fixes\n\nPatrice Pominville (patrice@sable.mcgill.ca)\n    - Soot infrastructure\n    - Baf implementation & optimizations\n    - Jimple parser\n    - annotation\n    \nFeng Qian (fqian@sable.mcgill.ca)\n    - array bounds check and annotation\n    - contributed to documentation writing\n    - prepared 1.2.0 release\n    - Dot interface, CFGViewer\n    - prepared 1.2.2, 1.2.3 release\n\nSamuel Andres Beracasa Rodriguez (samuelbera91@gmail.com)\n\t- Improvements to the ASM frontend\n\nHossein Sadat-Mohtasham\n\t- Program Dependency Graphs\n\nGanesh Sittampalam (ganesh@earth.li)\n   - contributed to resolver redesign\n\nManu Sridharan (manu_s@eecs.berkeley.edu)\n   - demand-driven client-driven refinement-based context-sensitive points-to\n     analysis (PLDI '06)\n    \nVijay Sundaresan (vijay@sable.mcgill.ca)\n    - first implementation of inlining and devirtualization\n    \nJulian Tibble\n    - Improved footprint of nullness analysis\n\nNavindra Umanee (navindra@cs.mcgill.ca)\n    - Shimple infrastructure\n    \nRaja Vallee-Rai (rvalleerai@sable.mcgill.ca)\n    - general Soot hacker    \n    - API freak\n    \nClark Verbrugge (clump@cs.mcgill.ca)\n    - coffi hacker\n    - original Jimple hacker   \n    \nRichard Xiao (richardxx@cse.ust.hk)\n\t- context-sensitive points-to anaysis using geometric encoding (ISSTA '11)\n\n-------------------- Funding Acknowledgements ------------------\n                    \nFunding support provided by:\n    - IBM's Centre for Advanced Studies \n      http://cas.ibm.com\n\n    - Le Fonds pour la Formation de Chercheurs et l'Aide a la \n      Recherche (Fonds FCAR)\n      http://www.fcar.qc.ca\n\n    - Natural Sciences and Engineering Research Council of \n      Canada (NSERC)\n      http://www.nserc.ca\n\n    - Richard H. Tomlinson Fellowship\n\n    - IBM Eclipse Innovation Grant\n\n------------------------- Special Thanks -----------------------\n\nTo:\n\n    - Jonathan Meyer for providing the free software community \n      with Jasmin, a Java bytecode assembler. \n\n    - Our users for their patience and continuing support! \n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "eclipse",
          "type": "tree",
          "content": null
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 9.3720703125,
          "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n<head>\n  <meta http-equiv=\"content-type\"\n content=\"text/html; charset=ISO-8859-1\">\n  <title>Soot: a Java Optimization Framework</title>\n</head>\n<body\n style=\"color: rgb(0, 0, 0); background-color: rgb(243, 243, 243); background-image: url(background6.gif);\"\n link=\"#0000cc\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"3\">\n  <tbody>\n    <tr>\n<!--LeftHandTable--> <td rowspace=\"1\" valign=\"top\" width=\"160\"\n align=\"left\">\n      <p><font size=\"+1\" face=\"helvetica,arial\"><b>Soot Home</b></font>\n      </p>\n      <p><a href=\"#introduction\"><font size=\"+0\" face=\"helvetica,arial\">Introduction</font></a><br>\n      <a href=\"#obtaining\"><font size=\"+0\" face=\"helvetica,arial\">Obtaining\nSoot</font></a><br>\n      <a href=\"#resources\"><font size=\"+0\" face=\"helvetica,arial\">Resources</font></a><br>\n      <a href=\"#credits\"><font size=\"+0\" face=\"helvetica,arial\">Credits</font></a><br>\n      <a href=\"#users\"><font size=\"+0\" face=\"helvetica,arial\">Soot Users</font></a><br>\n      </p>\n      <p><a href=\"http://www.sable.mcgill.ca\">Sable Home</a> </p>\n      </td>\n<!--ActualContents--> <td valign=\"top\" align=\"left\">\n      <center><a name=\"top\"><b><font size=\"+2\" face=\"helvetica,arial\">Soot:\na\nJava\nOptimization\nFramework</font></b></a></center>\n      <br>\n      <center> <a name=\"top\"><b><font size=\"+1\" face=\"helvetica,arial\">Latest\nversion:\n2.5.0\n(January\n22nd,\n2012)</font></b></a></center>\n      <br>\n      <br>\n      <br>\nNeed help using Soot? See the Soot <a href=\"tutorial/index.html\">\ntutorials</a>.\nOr have a loot at Arni Einarsson's and Janus Dam Nielsen's marvelous <a\n href=\"http://www.brics.dk/SootGuide/\">Soot Survivor's guide</a>! <br>\n      <br>\n<!--Introduction--> <a name=\"introduction\"> </a>\n      <table width=\"100%\">\n        <tbody>\n          <tr>\n            <td width=\"97%\" align=\"left\"><b><font size=\"+1\"\n face=\"helvetica,arial\">Introduction</font></b></td>\n            <td width=\"3%\" align=\"left\"><font size=\"-2\"><a href=\"#top\">top</a></font></td>\n          </tr>\n        </tbody>\n      </table>\n      <blockquote>Soot is a Java optimization framework. It provides\nfour intermediate\nrepresentations for analyzing and transforming Java bytecode:\n        <ol>\n          <li><b>Baf</b>: a streamlined representation of bytecode\nwhich is simple to\nmanipulate. </li>\n          <li><b>Jimple</b>: a typed 3-address intermediate\nrepresentation suitable for\noptimization. </li>\n          <li><b>Shimple</b>: an SSA variation of Jimple. </li>\n          <li><b>Grimp</b>: an aggregated version of Jimple suitable\nfor decompilation and\ncode inspection. </li>\n        </ol>\nSoot can be used as a stand alone tool to optimize or inspect class\nfiles, as well\nas a framework to develop optimizations or transformations on Java\nbytecode.\n        <p>Soot is free software and is licensed under the <a\n href=\"http://www.gnu.org/copyleft/lesser.html\">GNU Lesser General\nPublic\nLicense</a>. </p>\n      </blockquote>\n      <blockquote>\n        <h4>Release Status:</h4>\n        <p>The Soot Framework is an evolving research project. Our goal\nis to produce a\nrobust, easy-to-use research framework for optimizing Java bytecode. </p>\n        <p>The latest release is version 2.5.0. The new features are\ndescribed in detail here: <a href=\"CHANGES\">new features</a>. </p>\n      </blockquote>\n      <blockquote>\n        <h4>Eclipse Plugin:</h4>\nSince version 2.0, Soot includes a <a href=\"eclipse/index.html\">plugin</a>\nthat makes it\npossible to use Soot from <a href=\"http://www.eclipse.org\">Eclipse</a>.\nWe\nhave\na\nseparate\n\n\n        <a href=\"eclipse/index.html\">web page with\ninstructions for\ninstalling and using the plugin.</a> <br>\n        <p> You may also want to develop Soot within the Eclipse\nenvironment. Instructions for setting up Soot within Eclipse can be\nfound here: <a href=\"soot_in_eclipse_howto.html\">Setting Up Soot in\nEclipse</a>.</p>\nThis is the plugins's update site:<br>\n        <pre style=\"font-weight: bold;\">http://www.sable.mcgill.ca/soot/eclipse/updates/</pre>\n      </blockquote>\n      <a name=\"obtaining\"> </a>\n      <table width=\"100%\">\n        <tbody>\n          <tr>\n            <td width=\"97%\" align=\"left\"><b><font size=\"+1\"\n face=\"helvetica,arial\">Obtaining Soot</font></b></td>\n            <td width=\"3%\" align=\"left\"><font size=\"-2\"><a href=\"#top\">top</a></font></td>\n          </tr>\n        </tbody>\n      </table>\n      <blockquote>\n        <h4>Downloads:</h4>\nGet Soot from our download page a <a href=\"soot_download.html\">Soot\nDownloads</a>.\n        <p>You can simply run Soot using the following command:</p>\n        <p><tt>java -jar soot-2.5.0.jar </tt></p>\n        <p>To get help on the command-line options, use:</p>\n        <p><tt>java -jar soot-2.5.0.jar -help<br>\n        <br>\n        </tt>The <a href=\"tutorial/usage\">usage document</a> gives\nmore information about these options.<br>\n        </p>\n        <p>Note that Soot requires at least JDK 1.5.\nThe Eclipse plugin requires at least JDK 1.5.\nSoot now has virtually complete support for JDK 1.5.\n(Missing is support for package-level and local-variable annotations.)</p>\n      </blockquote>\n      <blockquote>\n        <h4>Repository Access:</h4>\n        <p>We are using Git on Github for version control.</p>\n        <a href=\"https://github.com/soot-oss/soot\">Please check the\ninstructions on Github to see how to check out Soot.</a><br>\n        <br>\nIn order to compile Soot from source, you will also need a\ncopy of\nthe Jasmin and Polyglot classes, available from the <a\n href=\"soot_download.html\">download page</a>.\n        <p>From time to time we update Jasmin. If something Jasmin\nrelated seems broken you may need to get the latest Jasmin from the <a\n href=\"https://github.com/Sable/jasmin\">Jasmin Github repository</a>.</p>\n        <p>You can also browse our latest version of the Soot\nrepository <a href=\"https://github.com/soot-oss/soot/commits/master\">on\nGithub as well</a>.</p>\n      </blockquote>\n      <blockquote>\n        <h4>Nightly Builds:</h4>\n        <p>With release 2.2.1 we started to build Soot and Jasmin every\nnight. To get the latest nightly build see: <a\n href=\"http://vandyk.st.informatik.tu-darmstadt.de/abc/\">Nightly Builds</a>.\n\n        </p>\n      </blockquote>\n<!--Documentation--> <a name=\"resources\"> </a>\n      <table width=\"100%\">\n        <tbody>\n          <tr>\n            <td width=\"97%\" align=\"left\"><b><font size=\"+1\"\n face=\"helvetica,arial\">Resources</font></b></td>\n            <td width=\"3%\" align=\"left\"><font size=\"-2\"><a href=\"#top\">top</a></font></td>\n          </tr>\n        </tbody>\n      </table>\n      <blockquote>\n        <h4>Documentation:</h4>\nWe have developed a number of documents describing Soot. Your main\ncurrent sources of information are:\n        <ul>\n          <li>Our <a href=\"http://www.sable.mcgill.ca/publications\">publication\npage</a> has several conference papers describing Soot. </li>\n          <li>A set of <a href=\"tutorial/\">tutorials</a> describing\nSoot, both as a Java application optimizer and\nas a compiler framework. </li>\n          <li><a href=\"doc/index.html\">The Soot API.</a> Most of the\nfunctionality is self-explanatory. This API is included in the Soot\ndistribution. </li>\n          <li>The Soot source itself. It is full of examples on how to\nuse the API. </li>\n        </ul>\n      </blockquote>\n      <blockquote>\n        <h4>Mailing List:</h4>\n        <p>If you have questions about Soot use the <a\n href=\"http://www.sable.mcgill.ca/mailman/listinfo/soot-list/\">Soot\nMailing List</a>. <b><i>Note:</i></b> You must subscribe before\nposting and you must\npost from the same address with which you used to subscribe.</p>\n        <p>You can also <a\n href=\"http://www.sable.mcgill.ca/pipermail/soot-list/\">view the\nrecent list archives</a>.\n<!--or <a href=\"http://www.sable.mcgill.ca/listarchives/old_publicarchives/soot-list/\">view the old list archives</a>.--></p>\n      </blockquote>\n      <blockquote>\n        <h4>Wiki:</h4>\n        <li>See the new <a\n href=\"https://svn.sable.mcgill.ca/wiki/index.cgi/SootProject\">Soot Wiki</a>\nfor up-to-date information. The Soot team will be using this site for\ndiscussing upcoming work, so if you would like to know what is going on\nlook there. </li>\n      </blockquote>\n      <blockquote>\n        <h4>Bugzilla:</h4>\n        <li>Use new <a href=\"https://svn.sable.mcgill.ca/bugzilla/\">Soot\nBugzilla</a>. We encourage you to add any Soot bugs there. </li>\n      </blockquote>\n<!--Credits--> <a name=\"credits\"> </a>\n      <table width=\"100%\">\n        <tbody>\n          <tr>\n            <td width=\"97%\" align=\"left\"><b><font size=\"+1\"\n face=\"helvetica,arial\">Credits</font></b></td>\n            <td width=\"3%\" align=\"left\"><font size=\"-2\"><a href=\"#top\">top</a></font></td>\n          </tr>\n        </tbody>\n      </table>\n      <blockquote> Click <a href=\"./credits\">here</a> for the complete\nlist of contributors and acknowledgements. </blockquote>\n<!--Soot Users--> <a name=\"users\"> </a>\n      <table width=\"100%\">\n        <tbody>\n          <tr>\n            <td width=\"97%\" align=\"left\"><b><font size=\"+1\"\n face=\"helvetica,arial\">Soot Users</font></b></td>\n            <td width=\"3%\" align=\"left\"><font size=\"-2\"><a href=\"#top\">top</a></font></td>\n          </tr>\n        </tbody>\n      </table>\n      <blockquote>\n        <p>We maintain a <a\n href=\"https://svn.sable.mcgill.ca/wiki/index.cgi/SootUsers\">list of\npeople and projects that are making\nuse of Soot</a>. If you are not on the list please add yourself!</p>\n        <br>\n      </blockquote>\n      </td>\n    </tr>\n  </tbody>\n</table>\n</body>\n</html>\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 32.3115234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.soot-oss</groupId>\n    <artifactId>soot</artifactId>\n    <name>Soot - a J*va Optimization Framework</name>\n    <version>4.7.0-SNAPSHOT</version>\n    <description>A Java Optimization Framework</description>\n    <url>https://soot-oss.github.io/soot</url>\n    <organization>\n        <name>Soot OSS</name>\n        <url>https://soot-oss.org/</url>\n    </organization>\n    <licenses>\n        <license>\n            <name>GNU LESSER GENERAL PUBLIC LICENSE 2.1</name>\n            <url>https://www.gnu.org/licenses/lgpl-2.1.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n    <developers>\n        <developer>\n            <name>Manuel Benz</name>\n            <email>manuel.benz@codeshield.de</email>\n            <organization>CodeShield GmbH</organization>\n            <organizationUrl>https://codeshield.de/</organizationUrl>\n        </developer>\n        <developer>\n            <name>Eric Bodden</name>\n            <email>eric.bodden@uni-paderborn.de</email>\n            <organization>University of Paderborn</organization>\n            <organizationUrl>https://www.hni.uni-paderborn.de/en/software-engineering/</organizationUrl>\n        </developer>\n        <developer>\n            <name>Andreas Dann</name>\n            <email>andreas.dann@codeshield.de</email>\n            <organization>CodeShield GmbH</organization>\n            <organizationUrl>https://codeshield.de/</organizationUrl>\n        </developer>\n        <developer>\n            <name>Steven Arzt</name>\n            <email>steven.arzt@sit.fraunhofer.de</email>\n            <organization>Fraunhofer SIT</organization>\n            <organizationUrl>https://www.sit.fraunhofer.de/en/</organizationUrl>\n        </developer>\n    </developers>\n    <scm>\n        <connection>scm:git:git@github.com:soot-oss/soot.git</connection>\n        <developerConnection>scm:git:git@github.com:soot-oss/soot.git</developerConnection>\n        <url>https://github.com/soot-oss/soot</url>\n    </scm>\n    <properties>\n        <maven.compiler.source>11</maven.compiler.source>\n        <maven.compiler.target>11</maven.compiler.target>\n        <xml-maven-plugin.version>1.1.0</xml-maven-plugin.version>\n        <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>\n        <build-helper-maven-plugin.version>3.5.0</build-helper-maven-plugin.version>\n        <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>\n        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>\n        <maven-assembly-plugin.version>3.7.1</maven-assembly-plugin.version>\n        <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>\n        <maven-source-plugin.version>3.3.0</maven-source-plugin.version>\n        <maven-javadoc-plugin.version>3.6.3</maven-javadoc-plugin.version>\n        <maven-nexus-staging-plugin.version>1.7.0</maven-nexus-staging-plugin.version>\n        <maven-gpg-plugin.version>3.2.6</maven-gpg-plugin.version>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <maven-checkstyle-plugin.version>3.5.0</maven-checkstyle-plugin.version>\n        <checkstyle.version>8.18</checkstyle.version>\n        <checkstyle.dir.path>${basedir}/codingstyle</checkstyle.dir.path>\n        <checkstyle.file.path>${checkstyle.dir.path}/soot_checkstyle_checks.xml</checkstyle.file.path>\n        <checkstyle.failOnViolation>true</checkstyle.failOnViolation>\n        <licence-check.failOnMissingHeader>true</licence-check.failOnMissingHeader>\n        <testcase.groups.excluded>categories.Java9Test,categories.Java11Test</testcase.groups.excluded>\n        <asm.version>9.7</asm.version>\n    </properties>\n    <build>\n        <finalName>sootclasses-trunk</finalName>\n        <plugins>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>xml-maven-plugin</artifactId>\n                <version>${xml-maven-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>transform</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <transformationSets>\n                        <!-- make soot singletons -->\n                        <transformationSet>\n                            <outputDir>${basedir}/src/main/generated/singletons/soot/</outputDir>\n                            <dir>${basedir}/src/main/xml/singletons</dir>\n                            <includes>\n                                <include>singletons.xml</include>\n                            </includes>\n                            <stylesheet>${basedir}/src/main/xml/singletons/make-singletons.xsl</stylesheet>\n                            <fileMappers>\n                                <fileMapper\n                                        implementation=\"org.codehaus.plexus.components.io.filemappers.MergeFileMapper\">\n                                    <targetName>Singletons.java</targetName>\n                                </fileMapper>\n                            </fileMappers>\n                        </transformationSet>\n                        <!-- make soot options -->\n                        <transformationSet>\n                            <outputDir>${basedir}/src/main/generated/options/soot/options/</outputDir>\n                            <dir>${basedir}/src/main/xml/options/</dir>\n                            <includes>\n                                <include>soot_options.xml</include>\n                            </includes>\n                            <stylesheet>${basedir}/src/main/xml/options/make-soot-options.xsl</stylesheet>\n                            <fileMappers>\n                                <fileMapper\n                                        implementation=\"org.codehaus.plexus.components.io.filemappers.MergeFileMapper\">\n                                    <targetName>Options.java</targetName>\n                                </fileMapper>\n                            </fileMappers>\n                        </transformationSet>\n                        <transformationSet>\n                            <outputDir>${basedir}/src/main/generated/options/soot/</outputDir>\n                            <dir>${basedir}/src/main/xml/options/</dir>\n                            <includes>\n                                <include>soot_options.xml</include>\n                            </includes>\n                            <stylesheet>${basedir}/src/main/xml/options/ant-task.xsl</stylesheet>\n                            <fileMappers>\n                                <fileMapper\n                                        implementation=\"org.codehaus.plexus.components.io.filemappers.MergeFileMapper\">\n                                    <targetName>AntTask.java</targetName>\n                                </fileMapper>\n                            </fileMappers>\n                        </transformationSet>\n                        <transformationSet>\n                            <outputDir>${basedir}/eclipse/ca.mcgill.sable.soot/src/ca/mcgill/sable/soot/ui/</outputDir>\n                            <dir>${basedir}/src/main/xml/options/</dir>\n                            <includes>\n                                <include>soot_options.xml</include>\n                            </includes>\n                            <stylesheet>${basedir}/src/main/xml/options/phase_options_dialog.xsl</stylesheet>\n                            <fileMappers>\n                                <fileMapper\n                                        implementation=\"org.codehaus.plexus.components.io.filemappers.MergeFileMapper\">\n                                    <targetName>PhaseOptionsDialog.java</targetName>\n                                </fileMapper>\n                            </fileMappers>\n                        </transformationSet>\n                        <transformationSet>\n                            <outputDir>${basedir}/doc/</outputDir>\n                            <dir>${basedir}/src/main/xml/options/</dir>\n                            <includes>\n                                <include>soot_options.xml</include>\n                            </includes>\n                            <stylesheet>${basedir}/src/main/xml/options/soot_options.xsl</stylesheet>\n                            <fileMappers>\n                                <fileMapper\n                                        implementation=\"org.codehaus.plexus.components.io.filemappers.MergeFileMapper\">\n                                    <targetName>soot_options.html</targetName>\n                                </fileMapper>\n                            </fileMappers>\n                        </transformationSet>\n                    </transformationSets>\n                </configuration>\n                <dependencies>\n                    <dependency>\n                        <groupId>net.sf.saxon</groupId>\n                        <artifactId>Saxon-HE</artifactId>\n                        <version>9.8.0-8</version>\n                    </dependency>\n                </dependencies>\n            </plugin>\n            <!-- copy the soot_options.css -->\n            <plugin>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>${maven-resources-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>copy options.css to doc directory</id>\n                        <phase>validate</phase>\n                        <goals>\n                            <goal>copy-resources</goal>\n                        </goals>\n                        <configuration>\n                            <outputDirectory>${basedir}/doc</outputDirectory>\n                            <resources>\n                                <resource>\n                                    <directory>${basedir}/src/main/xml/options/</directory>\n                                    <includes>\n                                        <include>soot_options.css</include>\n                                    </includes>\n                                </resource>\n                            </resources>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>add system-test target resources</id>\n                        <phase>generate-test-resources</phase>\n                        <goals>\n                            <goal>copy-resources</goal>\n                        </goals>\n                        <configuration>\n                            <outputDirectory>${project.build.directory}/systemTest-target-classes</outputDirectory>\n                            <resources>\n                                <resource>\n                                    <directory>src/systemTest/targets-resources</directory>\n                                </resource>\n                            </resources>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>add system test resources</id>\n                        <phase>generate-test-resources</phase>\n                        <goals>\n                            <goal>copy-resources</goal>\n                        </goals>\n                        <configuration>\n                            <outputDirectory>${project.build.directory}/systemTest-classes</outputDirectory>\n                            <resources>\n                                <resource>\n                                    <directory>src/systemTest/resources</directory>\n                                </resource>\n                            </resources>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>build-helper-maven-plugin</artifactId>\n                <version>${build-helper-maven-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>add generated sources</id>\n                        <phase>generate-sources</phase>\n                        <goals>\n                            <goal>add-source</goal>\n                        </goals>\n                        <configuration>\n                            <sources>\n                                <source>${basedir}/src/main/generated/singletons</source>\n                                <source>${basedir}/src/main/generated/sablecc</source>\n                                <source>${basedir}/src/main/generated/options</source>\n                                <source>${basedir}/src/main/generated/jastadd</source>\n                                <source>${basedir}/src/main/generated/protobuf</source>\n                            </sources>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>${maven-compiler-plugin.version}</version>\n                <configuration>\n                    <source>${maven.compiler.source}</source>\n                    <target>${maven.compiler.target}</target>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>compile system test targets</id>\n                        <phase>test-compile</phase>\n                        <goals>\n                            <goal>testCompile</goal>\n                        </goals>\n                        <configuration>\n                            <compileSourceRoots>${project.basedir}/src/systemTest/targets</compileSourceRoots>\n                            <testIncludes>\n                                <testInclude>**/*.java</testInclude>\n                            </testIncludes>\n                            <outputDirectory>${project.build.directory}/systemTest-target-classes</outputDirectory>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>compile-system-tests</id>\n                        <phase>test-compile</phase>\n                        <goals>\n                            <goal>testCompile</goal>\n                        </goals>\n                        <configuration>\n                            <compileSourceRoots>${project.basedir}/src/systemTest/java</compileSourceRoots>\n                            <testIncludes>\n                                <testInclude>**/*.java</testInclude>\n                            </testIncludes>\n                            <outputDirectory>${project.build.directory}/systemTest-classes</outputDirectory>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>${maven-surefire-plugin.version}</version>\n                <dependencies>\n                    <dependency>\n                        <groupId>org.apache.maven.surefire</groupId>\n                        <artifactId>surefire-junit47</artifactId>\n                        <version>${maven-surefire-plugin.version}</version>\n                    </dependency>\n                </dependencies>\n                <configuration>\n                    <reuseForks>false</reuseForks>\n                    <forkCount>1</forkCount>\n                    <excludedGroups>${testcase.groups.excluded}</excludedGroups>\n                    <argLine>\n                        --add-opens=java.base/java.lang=ALL-UNNAMED\n                        --add-opens=java.base/java.util=ALL-UNNAMED\n                        --add-opens=java.base/java.util.regex=ALL-UNNAMED\n                        --add-opens=java.base/java.util.stream=ALL-UNNAMED\n                        --add-opens=java.base/java.io=ALL-UNNAMED\n                        --add-opens=java.base/java.net=ALL-UNNAMED\n                    </argLine>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>System-tests</id>\n                        <goals>\n                            <goal>test\n                            </goal>\n                        </goals>\n                        <configuration>\n                            <testClassesDirectory>${project.build.directory}/systemTest-classes</testClassesDirectory>\n                            <testSourceDirectory>${project.basedir}/src/systemTest/java</testSourceDirectory>\n                            <trimStackTrace>false</trimStackTrace>\n                            <reuseForks>false</reuseForks>\n                            <forkCount>1</forkCount>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>default-test</id>\n                        <phase>test</phase>\n                        <goals>\n                            <goal>test</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>${maven-jar-plugin.version}</version>\n                <configuration>\n                    <archive>\n                        <manifest>\n                            <addClasspath>true</addClasspath>\n                            <mainClass>soot.Main</mainClass>\n                        </manifest>\n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <version>${maven-checkstyle-plugin.version}</version>\n                <dependencies>\n                    <dependency>\n                        <groupId>com.puppycrawl.tools</groupId>\n                        <artifactId>checkstyle</artifactId>\n                        <version>${checkstyle.version}</version>\n                    </dependency>\n                </dependencies>\n                <executions>\n                    <execution>\n                        <id>stylecheck</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <propertyExpansion>config_loc=${checkstyle.dir.path}</propertyExpansion>\n                    <configLocation>${checkstyle.file.path}</configLocation>\n                    <encoding>UTF-8</encoding>\n                    <logViolationsToConsole>true</logViolationsToConsole>\n                    <failOnViolation>${checkstyle.failOnViolation}</failOnViolation>\n                    <violationSeverity>warning</violationSeverity>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>license-maven-plugin</artifactId>\n                <version>1.20</version>\n                <configuration>\n                    <failOnMissingHeader>${licence-check.failOnMissingHeader}</failOnMissingHeader>\n                    <failOnNotUptodateHeader>${licence-check.failOnMissingHeader}</failOnNotUptodateHeader>\n                    <inceptionYear>1997</inceptionYear>\n                    <addJavaLicenseAfterPackage>true</addJavaLicenseAfterPackage>\n                    <licenseName>lgpl_v2_1</licenseName>\n                    <organizationName>Raja Vallée-Rai and others</organizationName>\n                    <roots>\n                        <root>src/main/java</root>\n                        <root>src/test/java</root>\n                        <root>src/it</root>\n                        <root>src/systemTest/java</root>\n                        <root>src/systemTest/targets</root>\n                    </roots>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>license-check</id>\n                        <goals>\n                            <goal>check-file-header</goal>\n                        </goals>\n                        <phase>verify</phase>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-assembly-plugin</artifactId>\n                <version>${maven-assembly-plugin.version}</version>\n                <configuration>\n                    <descriptorRefs>\n                        <descriptorRef>jar-with-dependencies</descriptorRef>\n                    </descriptorRefs>\n                    <archive>\n                        <manifest>\n                            <addClasspath>true</addClasspath>\n                            <mainClass>soot.Main</mainClass>\n                        </manifest>\n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>${maven-source-plugin.version}</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>${maven-javadoc-plugin.version}</version>\n                <configuration>\n                    <failOnError>false</failOnError>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n    <dependencies>\n        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->\n        <dependency>\n            <groupId>commons-io</groupId>\n            <artifactId>commons-io</artifactId>\n            <version>2.17.0</version>\n        </dependency>\n        <dependency>\n            <groupId>org.smali</groupId>\n            <artifactId>dexlib2</artifactId>\n            <version>2.5.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.ow2.asm</groupId>\n            <artifactId>asm</artifactId>\n            <version>${asm.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.ow2.asm</groupId>\n            <artifactId>asm-tree</artifactId>\n            <version>${asm.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.ow2.asm</groupId>\n            <artifactId>asm-util</artifactId>\n            <version>${asm.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.ow2.asm</groupId>\n            <artifactId>asm-commons</artifactId>\n            <version>${asm.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.javassist</groupId>\n            <artifactId>javassist</artifactId>\n            <version>3.30.2-GA</version>\n            <scope>provided</scope>\n        </dependency>\n        <dependency>\n            <groupId>xmlpull</groupId>\n            <artifactId>xmlpull</artifactId>\n            <version>1.1.3.4d_b4_min</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.ant</groupId>\n            <artifactId>ant</artifactId>\n            <version>1.10.15</version>\n            <scope>provided</scope>\n        </dependency>\n        <!-- Local dependencies -->\n        <dependency>\n            <groupId>de.upb.cs.swt</groupId>\n            <artifactId>axml</artifactId>\n            <version>2.1.3</version>\n        </dependency>\n        <dependency>\n            <groupId>ca.mcgill.sable</groupId>\n            <artifactId>polyglot</artifactId>\n            <version>2006</version>\n        </dependency>\n        <!-- Published from the github repo -->\n        <!-- Built by http://soot-build.cs.uni-paderborn.de/nexus/repository/soot-snapshot/ -->\n        <dependency>\n            <groupId>de.upb.cs.swt</groupId>\n            <artifactId>heros</artifactId>\n            <version>1.2.3</version>\n        </dependency>\n        <!-- Uploaded to http://soot-build.cs.uni-paderborn.de/nexus/repository/soot-snapshot/\n            from the nightly build server -->\n        <dependency>\n            <groupId>ca.mcgill.sable</groupId>\n            <artifactId>jasmin</artifactId>\n            <version>3.0.3</version>\n        </dependency>\n        <!-- Logging dependencies -->\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n            <version>2.0.16</version>\n        </dependency>\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-simple</artifactId>\n            <version>2.0.16</version>\n            <scope>test</scope>\n        </dependency>\n        <!-- Testing dependencies -->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.13.2</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest-all</artifactId>\n            <version>1.3</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <version>3.6.0</version> <!-- or higher, correspondning to powermock-version -->\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.powermock</groupId>\n            <artifactId>powermock-api-mockito2</artifactId>\n            <version>2.0.9</version> <!-- or higher -->\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.powermock</groupId>\n            <artifactId>powermock-module-junit4</artifactId>\n            <version>2.0.9</version> <!-- or higher -->\n            <scope>test</scope>\n        </dependency>\n        <!-- https://mvnrepository.com/artifact/com.google.android/android -->\n        <dependency>\n            <groupId>com.google.android</groupId>\n            <artifactId>android</artifactId>\n            <version>4.1.1.4</version>\n            <scope>test</scope>\n        </dependency>\n        <!-- add dependencies to javax.annotation to build soot on jdk 11 -->\n        <dependency>\n            <groupId>jakarta.annotation</groupId>\n            <artifactId>jakarta.annotation-api</artifactId>\n            <version>3.0.0</version>\n        </dependency>\n        <dependency>\n            <groupId>jakarta.xml.bind</groupId>\n            <artifactId>jakarta.xml.bind-api</artifactId>\n            <version>4.0.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.glassfish.jaxb</groupId>\n            <artifactId>jaxb-runtime</artifactId>\n            <version>4.0.5</version>\n        </dependency>\n        <!-- Dotnet Dependencies -->\n        <dependency>\n            <groupId>com.google.protobuf</groupId>\n            <artifactId>protobuf-java</artifactId>\n            <version>3.25.5</version>\n        </dependency>\n        <dependency>\n            <groupId>com.google.protobuf</groupId>\n            <artifactId>protobuf-java-util</artifactId>\n            <version>3.25.5</version>\n        </dependency>\n    </dependencies>\n\n    <repositories>\n        <repository>\n            <id>sonatype-snapshot</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n            <releases>\n                <enabled>false</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n    </distributionManagement>\n    <profiles>\n        <profile>\n            <id>Java8</id>\n            <properties>\n                <testcase.groups.excluded>categories.Java9Test,categories.Java11Test</testcase.groups.excluded>\n            </properties>\n        </profile>\n        <profile>\n            <id>Java9</id>\n            <properties>\n                <testcase.groups.excluded>categories.Java11Test</testcase.groups.excluded>\n            </properties>\n        </profile>\n        <profile>\n            <id>Java11</id>\n            <properties>\n                <testcase.groups.excluded></testcase.groups.excluded>\n            </properties>\n        </profile>\n        <profile>\n            <id>deploy</id>\n            <activation>\n                <property>\n                    <name>deploy</name>\n                    <value>true</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.sonatype.plugins</groupId>\n                        <artifactId>nexus-staging-maven-plugin</artifactId>\n                        <version>${maven-nexus-staging-plugin.version}</version>\n                        <extensions>true</extensions>\n                        <configuration>\n                            <serverId>ossrh</serverId>\n                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                            <autoReleaseAfterClose>true</autoReleaseAfterClose>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>${maven-gpg-plugin.version}</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                                <configuration>\n                                    <!-- This is necessary for gpg to not try to use the pinentry programs -->\n                                    <gpgArguments>\n                                        <arg>--batch</arg>\n                                        <arg>--pinentry-mode</arg>\n                                        <arg>loopback</arg>\n                                    </gpgArguments>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-assembly-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>simple-command</id>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>single</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "soot.psf",
          "type": "blob",
          "size": 0.3388671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<psf version=\"2.0\">\n<provider id=\"org.eclipse.egit.core.GitProvider\">\n<project reference=\"1.0,https://github.com/Sable/heros.git,develop,.\"/>\n<project reference=\"1.0,https://github.com/Sable/jasmin.git,develop,.\"/>\n<project reference=\"1.0,https://github.com/soot-oss/soot.git,develop,.\"/>\n</provider>\n</psf>\n"
        },
        {
          "name": "soot_download.html",
          "type": "blob",
          "size": 11.7822265625,
          "content": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\n<html>\n<head>\n  <meta http-equiv=\"content-type\"\n content=\"text/html; charset=ISO-8859-1\">\n  <title>Soot Downloads</title>\n</head>\n<body\n style=\"color: rgb(0, 0, 0); background-color: rgb(243, 243, 243); background-image: url(background6.gif);\"\n link=\"#0000cc\">\n<table border=\"0\" cellpadding=\"0\" cellspacing=\"3\">\n  <tbody>\n    <tr>\n<!--LeftHandTable--> <td rowspace=\"1\" valign=\"top\" width=\"160\"\n align=\"left\">\n      <p><font face=\"helvetica,arial\" size=\"+1\"><b>Soot Downloads</b></font>\n      </p>\n      <p><a href=\"#summary\"><font face=\"helvetica,arial\" size=\"+0\">Summary</font></a><br>\n      <a href=\"#download\"><font face=\"helvetica,arial\" size=\"+0\">Downloads</font></a><br>\n      </p>\n      <p><a href=\"http://www.sable.mcgill.ca\">Sable Home</a></p>\n      <p><a href=\"index.html\">Soot Home</a> </p>\n<!--ActualContents--> </td>\n      <td valign=\"top\" align=\"left\"><b><a name=\"top\"><font\n face=\"helvetica,arial\" size=\"+2\">\n      <center>Soot Software</center>\n      </font></a></b><br>\n      <br>\n<!--Soot--> <a name=\"introduction\"> </a>\n      <table width=\"100%\">\n        <tbody>\n          <tr>\n            <td width=\"97%\" align=\"left\"><b><font face=\"helvetica,arial\"\n size=\"+1\">Soot, a Java Bytecode Analysis and Transformation Framework</font></b></td>\n            <td width=\"3%\" align=\"left\"><br>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <p><a name=\"summary\"><b>Summary:</b></a> <br>\nSoot is a Java bytecode analysis and transformation framework. It\nprovides a Java API for building intermediate representations (IRs),\nanalyses and transformations; also it supports class file annotation.</p>\n      <p><a name=\"download\"> </a></p>\n      <p><a name=\"download\"><b>Downloads:<b><br>\n      </b></b></a></p>\n      <p><b>Nightly build</b></p>\n      <p>We often fix bugs in Soot as they are reported. Hence, we\nencourage users to download the <a\n href=\"http://plg.uwaterloo.ca/%7Eolhotak/build/\">latest nightly build\nfrom Ondrej Lhotak's webpage</a> instead of the release version. Before\nyou report a bug against the release version please first try the\nnightly build to see if the bug is still present there. </p>\n      <br>\n      <br>\n      <br>\n      <br>\n      <p><a name=\"download\"><b><b><b>Release 2.5.0</b><br>\n      </b></b></a>\n      <table border=\"1\" cellpadding=\"5\">\n        <tbody>\n          <tr>\n            <td style=\"vertical-align: top;\">Since release 2.5.0, Soot\nis available as a single, runnable JAR file. You can just use <tt>java\n-jar\nsoot-2.5.0.jar</tt> to run Soot.<br>\n            </td>\n            <td style=\"vertical-align: top;\"><span\n style=\"font-weight: bold;\">Runnable JAR<br>\n            </span><a\n href=\"http://www.sable.mcgill.ca/software/soot-2.5.0.jar\">soot-2.5.0.jar</a><span\n style=\"font-weight: bold;\"><br>\n            </span></td>\n          </tr>\n          <tr>\n            <td>If you download the full files, you will get the Java\nsource and class\nfiles for Soot, Jasmin, Polyglot, Soot tutorials, Javadoc\ndocumentation for Soot, source and\ncompiled forms of the Eclipse plugin. This is the easiest way to get\nSoot and we recommend the full download.\nThis will unpack into three directories soot-2.5.0, jasmin-2.5.0 and\npolyglot-1.3.5 </td>\n            <td width=\"280\"> <b>Complete Package</b><br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.5.0.jar\">sootall-2.5.0.jar</a>\n            <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.5.0.tar.gz\">sootall-2.5.0.tar.gz</a>\n            </td>\n          </tr>\n          <tr>\n            <td>\n            <p>The following three files are jars containing just the <tt>classes</tt>\ndirectory from Soot, Jasmin, and Polyglot.\nThey can be\nadded to\none's <tt>CLASSPATH</tt>\nand, from there, executed directly.<!--Use Polyglot 1.1.0 with released\nversions of Soot and 1.2.0 with development versions of Soot checked\nout from Subversion.-->\n            </p>\n            </td>\n            <td> <b>Pre-compiled Jar</b><br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootclasses-2.5.0.jar\">sootclasses-2.5.0.jar</a>\n            <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/jasminclasses-2.5.0.jar\">jasminclasses-2.5.0.jar</a>\n            <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/polyglotclasses-1.3.5.jar\">polyglotclasses-1.3.5.jar</a>\n            <br>\n            </td>\n          </tr>\n          <tr>\n            <td>\n            <p>The Soot-Eclipse plugin can no longer be installed by\nsimply unpacking the quickstart jar inside your Eclipse plugins\ndirectory. For Soot-Eclipse plugin installation instructions see: <a\n href=\"http://www.sable.mcgill.ca/soot/eclipse/updates/\">http:/www.sable.mcgill.ca/soot/eclipse/updates/</a>.\n\n\n\n\n\n\n\n\n\n\n            </p>\n            </td>\n            <td>No longer available in a jar format. </td>\n          </tr>\n          <tr>\n            <td>Finally, if you have a slow connection you may want to\ndownload\nonly the source code for Soot, or Jasmin or Polyglot. From these jars\nyou can generate\nthe Javadoc and the class files (including the Eclipse plugin),\nusing the enclosed instructions. </td>\n            <td> <b>Soot Source</b><br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootsrc-2.5.0.jar\">sootsrc-2.5.0.jar</a>\n            <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootsrc-2.5.0.tar.gz\">sootsrc-2.5.0.tar.gz</a>\n            <br>\n            <b>Jasmin Source</b><br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/jasminsrc-2.5.0.jar\">jasminsrc-2.5.0.jar</a>\n            <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/jasminsrc-2.5.0.tar.gz\">jasminsrc-2.5.0.tar.gz</a>\n            <br>\n            <b>Polyglot Source</b><br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/polyglotsrc-1.3.5.jar\">polyglotsrc-1.3.5.jar</a>\n            <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/polyglotsrc-1.3.5.tar.gz\">polyglotsrc-1.3.5.tar.gz</a>\n            </td>\n          </tr>\n          <tr>\n            <td>The tutorials are also available for separate download.\nThey are\ncontained in the full package above. </td>\n            <td> <b>Tutorials Only</b><br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-tutorial-2.5.0.jar\">soot-tutorial-2.5.0.jar</a>\n            <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-tutorial-2.5.0.tar.gz\">soot-tutorial-2.5.0.tar.gz</a>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      </p>\n      <p><a name=\"download\"><b><b><b>Older Releases</b><br>\n      </b></b></a>\n      <table style=\"width: 100%;\" border=\"0\" cellpadding=\"5\">\n        <tbody>\n          <tr>\n            <td>Release 2.4.0</td>\n            <td><a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.4.0.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.5.0.tar.gz\">Download\n.tar.gz</a></td>\n          </tr>\n          <tr>\n            <td>Release 2.3.0</td>\n            <td><a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.3.0.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.3.0.tar.gz\">Download\n.tar.gz</a></td>\n          </tr>\n          <tr>\n            <td>Release 2.2.5</td>\n            <td><a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.5.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.5.tar.gz\">Download\n.tar.gz</a></td>\n          </tr>\n          <tr>\n            <td>Release 2.2.5</td>\n            <td><a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.4.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.4.tar.gz\">Download\n.tar.gz</a></td>\n          </tr>\n          <tr>\n            <td>Release 2.2.3 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.3.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.3.tar.gz\">Download\n.tar.gz</a> </td>\n          </tr>\n        </tbody><tbody>\n          <tr>\n            <td>Release 2.2.2 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.2.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.2.tar.gz\">Download\n.tar.gz</a> </td>\n          </tr>\n          <tr>\n            <td>Release 2.2.1 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.1.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.1.tar.gz\">Download\n.tar.gz</a> </td>\n          </tr>\n          <tr>\n            <td>Release 2.2.0 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.0.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/sootall-2.2.0.tar.gz\">Download\n.tar.gz</a> </td>\n          </tr>\n          <tr>\n            <td>Release 2.1.0 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/soot-2.1.0.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-2.1.0.tar.gz\">Download\n.tar.gz</a> </td>\n          </tr>\n          <tr>\n            <td>Release 2.0.1 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/soot-2.0.1.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-2.0.1.tar.gz\">Download\n.tar.gz</a> </td>\n          </tr>\n          <tr>\n            <td>Release 2.0 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/soot-2.0.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-2.0.tar.gz\">Download\n.tar.gz</a> </td>\n          </tr>\n          <tr>\n            <td>Release 1.2.5 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.5.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.5.tar.gz\">Download\n.tar.gz</a> </td>\n          </tr>\n          <tr>\n            <td>Release 1.2.5 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.4.jar\">Download\n.jar file</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.4.tar.gz\">Download\n.tar.gz</a> </td>\n          </tr>\n          <tr>\n            <td>Release 1.2.3 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.3.jar\">Download\n.jar file (7.9M)</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.3.tar.gz\">Download\n.tar.gz (4.4M)</a> </td>\n          </tr>\n          <tr>\n            <td>Release 1.2.2 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.2.jar\">Download\n.jar file (7.34M)</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.2.tar.gz\">Download\n.tar.gz (4.08M)</a> </td>\n          </tr>\n          <tr>\n            <td>Release 1.2.1 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.1.jar\">Download\n.jar file (7.2M)</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.1.tar.gz\">Download\n.tar.gz (3.9M)</a> </td>\n          </tr>\n          <tr>\n            <td>Release 1.2.0 </td>\n            <td> <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.0.jar\">Download\n.jar file (7.54M)</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.2.0.tar.gz\">Download\nthe .tar.gz (4.11M)</a>\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td>\n          </tr>\n          <tr>\n            <td>Release 1.0.0 </td>\n            <td><a\n href=\"http://www.sable.mcgill.ca/software/soot-1.0.0.jar\">Download\n.jar file (5.4M)</a> <br>\n            <a\n href=\"http://www.sable.mcgill.ca/software/soot-1.0.0.tar.gz\">Download\nthe .tar.gz (2.57M)</a> </td>\n          </tr>\n        </tbody>\n      </table>\n      </p>\n      <a name=\"download\"><b><b><br>\n      </b></b></a></td>\n    </tr>\n  </tbody>\n</table>\n</body>\n</html>\n"
        },
        {
          "name": "soot_in_eclipse_howto.html",
          "type": "blob",
          "size": 4.052734375,
          "content": "<html><head><title>Developing With Soot in Eclipse</title></head>\n<body background=\"background6.gif\" TEXT=\"#000000\" BGCOLOR=\"#F3F3F3\" LINK=\"#0000CC\">\n\n<table cellspacing=\"3\" cellpadding=\"0\" border=\"0\">\n\n<tbody><tr>\n\n<!--LeftHandTable-->\n\n<td width=\"160\" rowspace=\"1\" valign=\"top\" align=\"left\">\n\n<p>\n<p><font face=\"helvetica,arial\" size=\"+1\"><b>Soot Home</b></font>\n\n<p>\n<a href=\"#creating\"><font face=\"helvetica,arial\" size=\"+0\">Create Project</font></a><br>\n<a href=\"#importing\"><font face=\"helvetica,arial\" size=\"+0\">Import Sources</font></a><br>\n<a href=\"#recognize\"><font face=\"helvetica,arial\" size=\"+0\">Recognize Sources</font></a><br>\n<a href=\"#lib\"><font face=\"helvetica,arial\" size=\"+0\">Setup Libraries</font></a><br>\n<a href=\"#building\"><font face=\"helvetica,arial\" size=\"+0\">Building</font></a><br>\n<a href=\"#running\"><font face=\"helvetica,arial\" size=\"+0\">Running</font></a><br>\n\n<p><a href=\"http://www.sable.mcgill.ca\">Sable Home</a>\n<p><a href=\"index.html\">Soot Home</a>\n\n\n<!--ActualContents-->\n\n</p></td><td valign=\"top\" align=\"left\">\n\n\n<h3><center>Developing With Soot in Eclipse</center></h3>\n\n<a name=\"creating\"><h5>Step 1: Creating a Project</h5></a>\n<ul>\n<li>Start Eclipse\n<li>Select <tt>File </tt>-- <tt>New</tt> -- <tt>Project</tt>\n<li>Select <tt>Java</tt> and <tt>Java Project</tt>\n<li>Click <tt>Next</tt>\n<br><br>\n<li>Give a name to the project\n<li>Click <tt>Next</tt>\n<li>Click <tt>Finish</tt>\n</ul>\n<p>You should now have an empty project.</p>\n\n<a name=\"importing\"><h5>Step 2: Importing the Soot Source Files</h5></a>\n<ul>\n<li>Right click on your project and select <tt>Import</tt>\n<li>Select <tt>File System</tt>\n<li>Click <tt>Next</tt>\n<li>Use <tt>Browse</tt> to find your Soot source files\n<li>Select the Soot package root directory to import\n<li>Click <tt>Finish</tt>\n</ul>\n<p>You should now have the regular Soot source files in a src directory in your project.</p>\n\n<p>You also need to import the generated src files. Make sure you have these\nbuilt first. (They come built - but if you used ant veryclean at some point you may have deleted them.)</p>\n\n<ul>\n<li>Right click on your project and select <tt>Import</tt>\n<li>Select <tt>File System</tt>\n<li>Click <tt>Next</tt>\n<li>Use browse to find the generated Soot sources directories.\n<li>Select the generated/options generated/singletons and generated/sablecc directories.\n<li>Click <tt>Finish</tt>\n</ul>\n\n<a name=\"recognize\"><h5>Step 3: Making Eclipse Recognize Source Files</h5></a>\n\n<p>Now you need to make Eclipse recognize these directories as src directories.</p>\n\n<ul>\n<li>Right click on your project\n<li>Select <tt>Properties</tt>\n<li>From the tree on the right select <tt>Java Build Path</tt>\n<li>Pick the <tt>Source</tt> tab\n<li>Select <tt>Add Folder</tt>\n<li>Select your project src folder\n<li>Click <tt>Ok</tt>\n<li>Repeat for each of the generated folders\n</ul>\n\n<a name=\"lib\"><h5>Step 4: Adding libraries needed by Soot</h5></a>\n<p>Now you need to add the Jasmin, Polyglot and Ant libraries, and the Soot classes, to your project.</p>\n\n<ul>\n<li>Right click on your project\n<li>Select <tt>Properties</tt>\n<li>From the tree on the right select <tt>Java Build Path</tt>\n<li>Select the <tt>Libraries</tt> tab\n<li>Select <tt>Add External Jars</tt> \n<li>Use the dialog to select your jasminclasses.jar file\n<li>Click <tt>OK</tt>\n<li>Repeat for your polyglotclasses.jar file and ant.jar file\n<li>Select <tt>Add Class Folder</tt> and choose the \"classes\" folder to add the Soot classes</li>\n<li>Click <tt>OK</tt> again\n</ul>\n\n<a name=\"building\"><h5>Step 5: Building your project</h5></a>\n\n<ul>\n<li>Select your project\n<li>Select <tt>Project</tt> -- <tt>Build Project</tt>\n</ul>\n\n<p>Your project should compile with no problems but there will be lots\nof warnings. You can ignore these. They are mostly for unused imports.</p>\n\n<a name=\"running\"><h5>Step 6: Running your project</h5></a>\n<ul>\n<li>Select <tt>Run</tt> -- <tt>Run ...</tt> or <tt>Debug ...</tt>\n<li>Select <tt>Java Application</tt>\n<li>Select <tt>New</tt>\n<li>Use search to find the main class to run\n<li>Set arguments under the <tt>Argument</tt> tab\n</ul>\n\n</td></tr></tbody></table>\n</body></html>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-classes-asm",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorial",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}