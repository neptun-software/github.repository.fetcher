{
  "metadata": {
    "timestamp": 1736608947576,
    "page": 149,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bingoogolapple/BGARefreshLayout-Android",
      "stars": 4307,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4375,
          "content": "# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n/*/build/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# Eclipse project files\n.classpath\n.project\n.settings/\n\n# Intellij project files\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# Mac system files\n.DS_Store\n\n*.keystore"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.2275390625,
          "content": "Change Log\n==========\n\nVersion 2.0.1 *(2021-04-05)*\n----------------------------\n\n- 从 JCenter 迁移到 JitPack，依赖由 cn.bingoogolapple:bga-refreshlayout-androidx 改为 com.github.bingoogolapple:BGARefreshLayout-Android\n\nVersion 2.0.0 *(2019-11-10)*\n----------------------------\n\n- 支持 androidx，依赖由 cn.bingoogolapple:bga-refreshlayout 改为 cn.bingoogolapple:bga-refreshlayout-androidx\n\nVersion 1.1.8 *(2018-01-01)*\n----------------------------\n\n- 升级 gradle 插件到 3.x\n\nVersion 1.1.7 *(2016-12-06)*\n----------------------------\n\n- 移除对 nineoldandroids 的依赖\n\nVersion 1.1.6 *(2016-07-27)*\n----------------------------\n\n- 修复 Item 高度大于 RecyclerView 高度时无法上拉加载更多\n\nVersion 1.1.5 *(2016-05-27)*\n----------------------------\n\n- 处理上下拉过于灵敏  fix #39  fix #58\n\nVersion 1.1.4 *(2016-04-08)*\n----------------------------\n\n- 开放返回当前状态getCurrentRefreshStatus方法和isLoadingMore方法\n- 解决使用ItemDecoration设置top后下拉刷新失效\n\nVersion 1.1.3 *(2016-01-10)*\n----------------------------\n\n- 解决GridLayoutManager加载更多时，最后一行只显示第一个item\n- 处理BGAStickyNavLayout中嵌套RecyclerView时findLastCompletelyVisibleItemPosition失效问题\n- 处理BGAStickyNavLayout中嵌套AbsListView时lastChild.getBottom() <= absListView.getMeasuredHeight()失效问题\n\nVersion 1.1.2 *(2015-12-03)*\n----------------------------\n\n- 添加设置下拉刷新是否可用的开关\n\nVersion 1.1.1 *(2015-11-24)*\n----------------------------\n\n- 解决RecyclerView第一个单元格的高度过大无法下拉刷新\n\nVersion 1.1.0 *(2015-11-18)*\n----------------------------\n\n- 解决ListView上拉加载更多视图遮盖最后一个item\n\nVersion 1.0.9 *(2015-11-15)*\n----------------------------\n\n- 添加BGAMeiTuanRefreshViewHolder美团下拉刷新样式\n- 修改BGAMoocStyleRefreshViewHolder的方法public void setOriginalBitmap(Bitmap originalBitmap)为public void setOriginalImage(@DrawableRes int resId)\n- 修改BGAMoocStyleRefreshViewHolder的方法public void setUltimateColor(int ultimateColor)为public void setUltimateColor(@ColorRes int resId)\n- 修改BGAStickinessRefreshViewHolder的方法public void setRotateDrawable(Drawable rotateDrawable)为public void setRotateImage(@DrawableRes int resId)\n- 修改BGAStickinessRefreshViewHolder的方法public void setStickinessColor(int stickinessColor)为public void setStickinessColor(@ColorRes int resId)\n\nVersion 1.0.8 *(2015-11-1)*\n----------------------------\n\n- 添加BGAStickyNavLayout\n\nVersion 1.0.7 *(2015-7-22)*\n----------------------------\n\n- 解决自定义头部视图抢占事件导致下拉刷新错乱的问题\n- 新增支持WebView为内容视图时的下拉刷新\n\nVersion 1.0.6 *(2015-7-18)*\n----------------------------\n\n- 解决内容视图的padding不为0和列表item的margin不为0时不能下拉刷新和上拉加载更多的问题\n\nVersion 1.0.5 *(2015-7-11)*\n----------------------------\n\n- 支持RecyclerView的LayoutManager为StaggeredGridLayoutManager\n\nVersion 1.0.4 *(2015-7-8)*\n----------------------------\n\n- 解决WiFi环境下加载数据非常快时，最后几个item无法显示的问题\n\nVersion 1.0.3 *(2015-6-14)*\n----------------------------\n\n- 修改beginRefreshing和beginLoadingMore方法，调用这两个方法时会触发delegate方法\n- 为delegate的onBGARefreshLayoutBeginLoadingMore方法添加boolean类型的返回参数。如果要开始加载更多则返回true，否则返回false。（返回false的场景：没有网络、一共只有x页数据并且已经加载了x页数据了）\n\nVersion 1.0.2 *(2015-6-9)*\n----------------------------\n\n- 公开BGARefreshLayout的beginRefreshing和beginLoadingMore方法，方便刚进入界面时自动进入刷新状态。但是调用这两个方法时不会触发delegate方法，开发者需单独调用onBGARefreshLayoutBeginRefreshing(mRefreshLayout)方法（参考iOS中的UIRefreshControl，不晓得这样是好是坏）\n- 为delegate方法增加BGARefreshLayout参数\n\nVersion 1.0.1 *(2015-6-6)*\n----------------------------\n\n- 结束上拉加载更多从以前的endRefreshing()改为endLoadingMore()\n- 刷新和加载更多过程中，内容控件可接收触摸事件\n\nVersion 1.0.0 *(2015-5-28)*\n----------------------------\n\nInitial release.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.61328125,
          "content": ":running:BGARefreshLayout-Android:running:\n============\n\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-BGARefreshLayout-brightgreen.svg?style=flat)](http://android-arsenal.com/details/1/1909)\n[![License](https://img.shields.io/badge/license-Apache%202-green.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n[![Download](https://api.bintray.com/packages/bingoogolapple/maven/bga-refreshlayout/images/download.svg)](https://bintray.com/bingoogolapple/maven/bga-refreshlayout/_latestVersion)\n\n开发者使用 BGARefreshLayout-Android 可以对各种控件实现多种下拉刷新效果、上拉加载更多以及配置自定义头部广告位\n\n[测试 BGARefreshLayout 与 Activity、Fragment、ViewPager 的各种嵌套的 Demo](https://github.com/bingoogolapple/BGARefreshLayoutDemo)\n\n## 常见问题-加载更多视图无法显示\n> 1.BGARefreshLayout 的直接子控件的高度请使用 android:layout_height=\"0dp\" 和 android:layout_weight=\"1\"\n\n```xml\n<cn.bingoogolapple.refreshlayout.BGARefreshLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/rl_modulename_refresh\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <!-- BGARefreshLayout 的直接子控件 -->\n    <AnyView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_weight=\"1\" />\n</cn.bingoogolapple.refreshlayout.BGARefreshLayout>\n```\n> 2.如果是在 Fragment 中使用 BGARefreshLayout\n\n```\n请在 onCreateView 方法中初始化 BGARefreshLayout，不要在 onActivityCreated 方法中初始化\n```\n\n### 目前已经实现了四种下拉刷新效果:\n\n* 新浪微博下拉刷新风格（可设置各种状态是的文本，可设置整个刷新头部的背景）\n* 慕课网下拉刷新风格（可设置其中的 logo 和颜色成自己公司的风格，可设置整个刷新头部的背景）\n* 美团下拉刷新风格（可设置其中的图片和动画成自己公司的风格，可设置整个刷新头部的背景）\n* 类似 qq 好友列表黏性下拉刷新风格（三阶贝塞尔曲线没怎么调好，刚开始下拉时效果不太好，可设置整个刷新头部的背景）\n\n### 一种上拉加载更多效果\n\n* 新浪微博上拉加载更多（可设置背景、状态文本）\n\n***开发者也可以继承 BGARefreshViewHolder 这个抽象类，实现相应地抽象方法做出格式各样的下拉刷新效果【例如实现 handleScale(float scale, int moveYDistance) 方法，根据 scale 实现各种下拉刷新动画】和上拉加载更多特效，可参考 BGAMoocStyleRefreshViewHolder、BGANormalRefreshViewHolder、BGAStickinessRefreshViewHolder、BGAMeiTuanRefreshViewHolder 的实现方式。***\n\n### 目前存在的问题\n\n* 当配置自定义头部广告位可滚动时，内容区域和广告位还不能平滑过度。\n* 当 BGAStickyNavLayout 中嵌套 RecyclerView 或 AbsListView，并且第一页的最后一个 item 刚好在最底部时，加载更多视图会悬浮在最后一个 item 上面\n* 正在刷新或加载更多时，用户上下滑动不会让下拉刷新视图和加载更多视图跟着滑动\n\n### 效果图\n![bga_refreshlayout1](https://cloud.githubusercontent.com/assets/8949716/17475813/6f7e338c-5d8f-11e6-846f-889414742b78.gif)\n![bga_refreshlayout2](https://cloud.githubusercontent.com/assets/8949716/17475812/6f79b0aa-5d8f-11e6-8934-ab5f61bff177.gif)\n![bga_refreshlayout3](https://cloud.githubusercontent.com/assets/8949716/17475814/6f900742-5d8f-11e6-832e-eaded3640154.gif)\n![bga_refreshlayout4](https://cloud.githubusercontent.com/assets/8949716/17475815/6fb4a0c0-5d8f-11e6-94c9-5eaed30c5060.gif)\n![bga_refreshlayout5](https://cloud.githubusercontent.com/assets/8949716/17475816/6fbb501e-5d8f-11e6-9dc5-fcb5b497247e.gif)\n![bga_refreshlayout6](https://cloud.githubusercontent.com/assets/8949716/17475817/6fe51674-5d8f-11e6-994b-b8248f164181.gif)\n\n### 基本使用\n\n#### 1.添加 Gradle 依赖\n\n* 把 `maven { url 'https://jitpack.io' }` 添加到 root build.gradle 的 repositories 中\n* 在 app build.gradle 中添加如下依赖，末尾的「latestVersion」指的是徽章 [![](https://jitpack.io/v/bingoogolapple/BGARefreshLayout-Android.svg)](https://jitpack.io/#bingoogolapple/BGARefreshLayout-Android) 里的版本名称，请自行替换\n\n\n```groovy\ndependencies {\n    implementation 'androidx.recyclerview:recyclerview:1.0.0'\n    implementation 'androidx.legacy:legacy-support-v4:1.0.0'\n    implementation 'com.github.bingoogolapple:BGARefreshLayout-Android:latestVersion'\n}\n```\n\n#### 2.在布局文件中添加 BGARefreshLayout\n\n**注意：内容控件的高度请使用 android:layout_height=\"0dp\" 和 android:layout_weight=\"1\"**\n\n```xml\n<cn.bingoogolapple.refreshlayout.BGARefreshLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:id=\"@+id/rl_modulename_refresh\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <!-- 内容控件 -->\n    <AnyView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_weight=\"1\" />\n</cn.bingoogolapple.refreshlayout.BGARefreshLayout>\n```\n\n#### 3.在 Activity 或者 Fragment 中配置 BGARefreshLayout\n\n```java\n// 让 activity 或者 fragment 实现 BGARefreshLayoutDelegate 接口\npublic class ModuleNameActivity extends AppCompatActivity implements BGARefreshLayout.BGARefreshLayoutDelegate {\n    private BGARefreshLayout mRefreshLayout;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_moudlename);\n\n        initRefreshLayout();\n    }\n\n    private void initRefreshLayout(BGARefreshLayout refreshLayout) {\n        mRefreshLayout = (BGARefreshLayout) findViewById(R.id.rl_modulename_refresh);\n        // 为BGARefreshLayout 设置代理\n        mRefreshLayout.setDelegate(this);\n        // 设置下拉刷新和上拉加载更多的风格     参数1：应用程序上下文，参数2：是否具有上拉加载更多功能\n        BGARefreshViewHolder refreshViewHolder = new XXXImplRefreshViewHolder(this, true))\n        // 设置下拉刷新和上拉加载更多的风格\n        mRefreshLayout.setRefreshViewHolder(refreshViewHolder);\n\n\n        // 为了增加下拉刷新头部和加载更多的通用性，提供了以下可选配置选项  -------------START\n        // 设置正在加载更多时不显示加载更多控件\n        // mRefreshLayout.setIsShowLoadingMoreView(false);\n        // 设置正在加载更多时的文本\n        refreshViewHolder.setLoadingMoreText(loadingMoreText);\n        // 设置整个加载更多控件的背景颜色资源 id\n        refreshViewHolder.setLoadMoreBackgroundColorRes(loadMoreBackgroundColorRes);\n        // 设置整个加载更多控件的背景 drawable 资源 id\n        refreshViewHolder.setLoadMoreBackgroundDrawableRes(loadMoreBackgroundDrawableRes);\n        // 设置下拉刷新控件的背景颜色资源 id\n        refreshViewHolder.setRefreshViewBackgroundColorRes(refreshViewBackgroundColorRes);\n        // 设置下拉刷新控件的背景 drawable 资源 id\n        refreshViewHolder.setRefreshViewBackgroundDrawableRes(refreshViewBackgroundDrawableRes);\n        // 设置自定义头部视图（也可以不用设置）     参数1：自定义头部视图（例如广告位）， 参数2：上拉加载更多是否可用\n        mRefreshLayout.setCustomHeaderView(mBanner, false);\n        // 可选配置  -------------END\n    }\n\n    @Override\n    public void onBGARefreshLayoutBeginRefreshing(BGARefreshLayout refreshLayout) {\n        // 在这里加载最新数据\n\n        if (mIsNetworkEnabled) {\n            // 如果网络可用，则加载网络数据\n            new AsyncTask<Void, Void, Void>() {\n\n                @Override\n                protected Void doInBackground(Void... params) {\n                    try {\n                        Thread.sleep(MainActivity.LOADING_DURATION);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    return null;\n                }\n\n                @Override\n                protected void onPostExecute(Void aVoid) {\n                    // 加载完毕后在 UI 线程结束下拉刷新\n                    mRefreshLayout.endRefreshing();\n                    mDatas.addAll(0, DataEngine.loadNewData());\n                    mAdapter.setDatas(mDatas);\n                }\n            }.execute();\n        } else {\n            // 网络不可用，结束下拉刷新\n            Toast.makeText(this, \"网络不可用\", Toast.LENGTH_SHORT).show();\n            mRefreshLayout.endRefreshing();\n        }\n    }\n\n    @Override\n    public boolean onBGARefreshLayoutBeginLoadingMore(BGARefreshLayout refreshLayout) {\n        // 在这里加载更多数据，或者更具产品需求实现上拉刷新也可以\n\n        if (mIsNetworkEnabled) {\n            // 如果网络可用，则异步加载网络数据，并返回 true，显示正在加载更多\n            new AsyncTask<Void, Void, Void>() {\n\n                @Override\n                protected Void doInBackground(Void... params) {\n                    try {\n                        Thread.sleep(MainActivity.LOADING_DURATION);\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                    return null;\n                }\n\n                @Override\n                protected void onPostExecute(Void aVoid) {\n                    // 加载完毕后在 UI 线程结束加载更多\n                    mRefreshLayout.endLoadingMore();\n                    mAdapter.addDatas(DataEngine.loadMoreData());\n                }\n            }.execute();\n\n            return true;\n        } else {\n            // 网络不可用，返回 false，不显示正在加载更多\n            Toast.makeText(this, \"网络不可用\", Toast.LENGTH_SHORT).show();\n            return false;\n        }\n    }\n\n    // 通过代码方式控制进入正在刷新状态。应用场景：某些应用在 activity 的 onStart 方法中调用，自动进入正在刷新状态获取最新数据\n    public void beginRefreshing() {\n        mRefreshLayout.beginRefreshing();\n    }\n\n    // 通过代码方式控制进入加载更多状态\n    public void beginLoadingMore() {\n        mRefreshLayout.beginLoadingMore();\n    }\n\n}\n```\n\n### 更多详细用法请查看 [Wiki](https://github.com/bingoogolapple/BGARefreshLayout-Android/wiki) 或者 [Demo](https://github.com/bingoogolapple/BGARefreshLayout-Android/tree/master/demo)\n\n### Demo 中使用到了我的另外三个库，欢迎大家 Star :smile:\n\n* [Splash 界面滑动导航+自动轮播效果](https://github.com/bingoogolapple/BGABanner-Android)\n* [在 AdapterView 和 RecyclerView 中通用的 Adapter 和 ViewHolder。RecyclerView 支持 DataBinding 、多种 Item 类型、添加 Header 和 Footer](https://github.com/bingoogolapple/BGAAdapter-Android)\n* [类似新浪微博消息列表，带弹簧效果的左右滑动控件](https://github.com/bingoogolapple/BGASwipeItemLayout-Android)\n\n## 作者联系方式\n\n| 个人主页 | 邮箱 |\n| ------------- | ------------ |\n| <a  href=\"https://www.bingoogolapple.cn\" target=\"_blank\">bingoogolapple.cn</a>  | <a href=\"mailto:bingoogolapple@gmail.com\" target=\"_blank\">bingoogolapple@gmail.com</a> |\n\n| 个人微信号 | 微信群 | 公众号 |\n| ------------ | ------------ | ------------ |\n| <img width=\"180\" alt=\"个人微信号\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/BGAQrCode.png\"> | <img width=\"180\" alt=\"微信群\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/WeChatGroup1QrCode.jpg\"> | <img width=\"180\" alt=\"公众号\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/GongZhongHao.png\"> |\n\n| 个人 QQ 号 | QQ 群 |\n| ------------ | ------------ |\n| <img width=\"180\" alt=\"个人 QQ 号\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/BGAQQQrCode.jpg\"> | <img width=\"180\" alt=\"QQ 群\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/QQGroup1QrCode.jpg\"> |\n\n## 打赏支持作者\n\n如果您觉得 BGA 系列开源库或工具软件帮您节省了大量的开发时间，可以扫描下方的二维码打赏支持。您的支持将鼓励我继续创作，打赏后还可以加我微信免费开通一年 [上帝小助手浏览器扩展/插件开发平台](https://github.com/bingoogolapple/bga-god-assistant-config) 的会员服务\n\n| 微信 | QQ | 支付宝 |\n| ------------- | ------------- | ------------- |\n| <img width=\"180\" alt=\"微信\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/donate-wechat.jpg\"> | <img width=\"180\" alt=\"QQ\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/donate-qq.jpg\"> | <img width=\"180\" alt=\"支付宝\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/donate-alipay.jpg\"> |\n\n## 作者项目推荐\n\n* 欢迎您使用我开发的第一个独立开发软件产品 [上帝小助手浏览器扩展/插件开发平台](https://github.com/bingoogolapple/bga-god-assistant-config)\n\n## License\n\n    Copyright 2015 bingoogolapple\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.501953125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.5.4'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'\n    }\n}\n\nallprojects {\n    repositories {\n        maven { url 'https://jitpack.io' }\n        jcenter()\n        google()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.376953125,
          "content": "ANDROID_BUILD_MIN_SDK_VERSION=14\nANDROID_BUILD_TARGET_SDK_VERSION=28\nANDROID_BUILD_SDK_VERSION=28\n\nVERSION_NAME=2.0.1\nVERSION_CODE=201\n\n# 设置为 true，Android 插件会使用相应的 AndroidX 库，而非支持库\nandroid.useAndroidX=true\n# 设置为 true，Android 插件会重写其二进制文件，自动迁移现有的第三方库以使用 AndroidX\nandroid.enableJetifier=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "publishToJcenter.sh",
          "type": "blob",
          "size": 0.3310546875,
          "content": "#!/bin/bash +x\n\nsed -i -e \"s/\\/\\/ classpath 'com.novoda:bintray-release:0.9.1'/classpath 'com.novoda:bintray-release:0.9.1'/\" build.gradle\n\n./gradlew :library:clean :library:build :library:bintrayUpload -PpublishAar\n\nsed -i -e \"s/classpath 'com.novoda:bintray-release:0.9.1'/\\/\\/ classpath 'com.novoda:bintray-release:0.9.1'/\" build.gradle"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.02734375,
          "content": "include ':library', ':demo'\n"
        }
      ]
    }
  ]
}