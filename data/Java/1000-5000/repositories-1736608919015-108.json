{
  "metadata": {
    "timestamp": 1736608919015,
    "page": 108,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zhanghai/Douya",
      "stars": 4550,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0888671875,
          "content": "*.iml\n.DS_Store\n/.gradle/\n/.idea/\n/build/\n/captures/\n/local.properties\n/signing.properties\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1,
          "content": "language: android\n\njdk:\n  - oraclejdk8\n\nandroid:\n  components:\n    - tools\n    - platform-tools\n    - build-tools-28.0.3\n    - android-28\n\nbefore_cache:\n  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock\ncache:\n  directories:\n    - $HOME/.gradle/caches/\n    - $HOME/.gradle/wrapper/\n\nbefore_install:\n  - yes | sdkmanager 'platforms;android-27'\n\nbefore_script:\n  - git fetch --unshallow\n  - version=\"$(git describe --long --tags | sed 's/^v//;s/-\\([0-9]\\+\\)-g\\([0-9a-f]\\+\\)/+\\1.\\2/')\"\n  - sed -i 's/versionName .*/versionName \"'\"${version}\"'\"/' app/build.gradle\n  - grep 'versionName' app/build.gradle\n  - cp signing.properties.travis signing.properties\n\nafter_success:\n  - cp app/build/outputs/apk/release/app-release.apk \"douya-ci-${version}.apk\"\n  - >-\n    description=\"$(git show -s --format='> Commit: %H%n> Author: %an%n> Date: %ad%n%n%s%+b')\"\n  - ./upload-to-releases.sh 'zhanghai/DouyaCiBuilds' \"${version}\" \"${description}\" \"douya-ci-${version}.apk\"\n\nafter_failure:\n  - cat app/build/reports/lint-results*.html\n"
        },
        {
          "name": "PRIVACY.md",
          "type": "blob",
          "size": 4.7548828125,
          "content": "# Privacy Policy\n\nZhang Hai built the Douya app as an Open Source app. This SERVICE is provided by Zhang Hai at no cost and is intended for use as is.\n\nThis page is used to inform website visitors regarding my policies with the collection, use, and disclosure of Personal Information if anyone decided to use my Service.\n\nIf you choose to use my Service, then you agree to the collection and use of information in relation to this policy. The Personal Information that I collect is used for providing and improving the Service. I will not use or share your information with anyone except as described in this Privacy Policy.\n\nThe terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, which is accessible at Douya unless otherwise defined in this Privacy Policy.\n\n## Information Collection and Use\n\nFor a better experience, while using our Service, I may require you to provide us with certain personally identifiable information. The information that I request is retained on your device and is not collected by me in any way\n\nThe app does use third party services that may collect information used to identify you.\n\n<div>\n\nLink to privacy policy of third party service providers used by the app\n\n- [Douban](https://www.douban.com/about/privacy)\n- [Fabric](https://fabric.io/terms)\n- [Google Play Services](https://www.google.com/policies/privacy/)\n\n</div>\n\n## Log Data\n\nI want to inform you that whenever you use my Service, in a case of an error in the app I collect data and information (through third party products) on your phone called Log Data. This Log Data may include information such as your device Internet Protocol (“IP”) address, device name, operating system version, the configuration of the app when utilizing my Service, the time and date of your use of the Service, and other statistics.\n\n## Cookies\n\nCookies are files with small amount of data that is commonly used an anonymous unique identifier. These are sent to your browser from the website that you visit and are stored on your device internal memory.\n\nThis Service does not use these “cookies” explicitly. However, the app may use third party code and libraries that use “cookies” to collection information and to improve their services. You have the option to either accept or refuse these cookies and know when a cookie is being sent to your device. If you choose to refuse our cookies, you may not be able to use some portions of this Service.\n\n## Service Providers\n\nI may employ third-party companies and individuals due to the following reasons:\n\n- To facilitate our Service;\n- To provide the Service on our behalf;\n- To perform Service-related services; or\n- To assist us in analyzing how our Service is used.\n\nI want to inform users of this Service that these third parties have access to your Personal Information. The reason is to perform the tasks assigned to them on our behalf. However, they are obligated not to disclose or use the information for any other purpose.\n\n## Security\n\nI value your trust in providing us your Personal Information, thus we are striving to use commercially acceptable means of protecting it. But remember that no method of transmission over the internet, or method of electronic storage is 100% secure and reliable, and I cannot guarantee its absolute security.\n\n## Links to Other Sites\n\nThis Service may contain links to other sites. If you click on a third-party link, you will be directed to that site. Note that these external sites are not operated by me. Therefore, I strongly advise you to review the Privacy Policy of these websites. I have no control over and assume no responsibility for the content, privacy policies, or practices of any third-party sites or services.\n\n## Children’s Privacy\n\nThese Services do not address anyone under the age of 13\\. I do not knowingly collect personally identifiable information from children under 13\\. In the case I discover that a child under 13 has provided me with personal information, I immediately delete this from our servers. If you are a parent or guardian and you are aware that your child has provided us with personal information, please contact me so that I will be able to do necessary actions.\n\n## Changes to This Privacy Policy\n\nI may update our Privacy Policy from time to time. Thus, you are advised to review this page periodically for any changes. I will notify you of any changes by posting the new Privacy Policy on this page. These changes are effective immediately after they are posted on this page.\n\n## Contact Us\n\nIf you have any questions or suggestions about my Privacy Policy, do not hesitate to contact me.\n\nThis privacy policy page was created at [privacypolicytemplate.net](https://privacypolicytemplate.net) and modified/generated by [App Privacy Policy Generator](https://app-privacy-policy-generator.firebaseapp.com/)\n"
        },
        {
          "name": "README-en.md",
          "type": "blob",
          "size": 4.564453125,
          "content": "# Douya\n\n[本文中文版 (Chinese version)](README.md)\n\n> Douban, Yet Another.\n\nYet another Material Design Android app for [Douban](https://www.douban.com).\n\n![Travis CI](https://travis-ci.org/zhanghai/Douya.svg)\n\n<!--<a href=\"https://play.google.com/store/apps/details?id=me.zhanghai.android.douya\" target=\"_blank\"><img alt=\"Google Play\" height=\"90\" src=\"https://play.google.com/intl/en_US/badges/images/generic/en_badge_web_generic.png\"/></a>-->\n\nDownload: [Douya Latest Release Build](https://github.com/zhanghai/Douya/releases/latest)\n\n[Douya CI Builds](https://github.com/zhanghai/DouyaCiBuilds)\n\n[Douya API Key](https://github.com/zhanghai/DouyaApiKey)\n\n## Some Features\n\n- Material Design\n- [Start time optimization](https://github.com/zhanghai/MaterialColdStart)\n- Lollipop shared element transition\n- Screen rotation support.\n- Staggered grid layout for tablet.\n- Custom Tabs support.\n\n## Preview\n\nImages:\n\n<p><img src=\"screenshot/00-main.png\" width=\"32%\" />\n<img src=\"screenshot/01-immersive.jpg\" width=\"32%\" />\n<img src=\"screenshot/02-gallery.jpg\" width=\"32%\" />\n<img src=\"screenshot/03-broadcast-menu.png\" width=\"32%\" />\n<img src=\"screenshot/04-broadcast-activity.png\" width=\"32%\" />\n<img src=\"screenshot/05-send-comment.png\" width=\"32%\" />\n<img src=\"screenshot/06-comment-action.png\" width=\"32%\" />\n<img src=\"screenshot/07-settings.png\" width=\"32%\" />\n<img src=\"screenshot/08-licenses.png\" width=\"32%\" />\n<img src=\"screenshot/09-tablet-portrait.jpg\" width=\"34.7%\" />\n<img src=\"screenshot/10-tablet-landscape.png\" width=\"61.7%\" /></p>\n\nVideo:\n\n- [Vimeo](https://vimeo.com/156952508)\n- [Youku](http://v.youku.com/v_show/id_XMTQyMDE5ODk0MA==.html)\n\n## Implementation\n\n### Data\n\nMost data are fetched from network while some of them are cached for offline.\n\n- Account system based on  Android `AccountManager`.\n- Retrofit with custom extensions for network requests.\n- Gson for data model.\n- Glide for image loading.\n- DiskLRUCache with custom extensions for caching.\n- EventBus for state synchronization across Activities.\n\n### UI\n\n- Material Design implemented with AppCompat, Design, CardView and RecyclerView from support library and some customization.\n- Animation implemented with shared element transition on Lollipop and above.\n\n## Libraries created for this project\n\n- [MaterialColdStart](https://github.com/zhanghai/MaterialColdStart)，800+ Stars\n- [MaterialProgressBar](https://github.com/zhanghai/MaterialProgressBar)，500+ Stars\n- [CustomTabsHelper](https://github.com/zhanghai/CustomTabsHelper)，200+ Stars\n- [MaterialEditText](https://github.com/zhanghai/MaterialEditText)\n- [SystemUiHelper](https://github.com/zhanghai/SystemUiHelper)\n\n## Third party libraries\n\n- [PhotoView](https://github.com/chrisbanes/PhotoView)\n- [Glide](https://github.com/bumptech/glide)\n- [Gson](https://github.com/google/gson)\n- [ButterKnife](https://github.com/JakeWharton/butterknife)\n- [DiskLruCache](https://github.com/JakeWharton/DiskLruCache/)\n- [ThreeTenABP](https://github.com/JakeWharton/ThreeTenABP/)\n- [Retrofit](https://github.com/square/retrofit)\n- [EventBus](https://github.com/greenrobot/EventBus)\n- [CustomTabsHelper](https://github.com/zhanghai/CustomTabsHelper)\n- [EffortlessPermissions](https://github.com/zhanghai/EffortlessPermissions)\n- [MaterialEditText](https://github.com/zhanghai/MaterialEditText)\n- [MaterialProgressBar](https://github.com/zhanghai/MaterialProgressBar)\n- [SystemUiHelper](https://github.com/zhanghai/SystemUiHelper)\n- [MaterialColdStart](https://github.com/zhanghai/MaterialColdStart)\n\n## Building\n\nYou can download the APK file from [releases](https://github.com/zhanghai/Douya/releases) of this project.\n\nFor building this project yourself:\n\n1. Create `signing.properties`:\n\n```ini\nstoreFile=YOUR_STORE_FILE\nstorePassword=\nkeyAlias=\nkeyPassword=\n```\n\n2. Execute `./gradlew build`。\n\n## Using\n\nAfter installation, please install [Douya API Key](https://github.com/zhanghai/DouyaApiKey) to set up API key for this app.\n\nPlease don't install APKs from untrusted sources, so that you won't leak your username and password.\n\n## License\n\n    Copyright 2015 Zhang Hai\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.7158203125,
          "content": "# 豆芽\n\n[English version](README-en.md)\n\n> Douban, Yet Another.\n\n另一个 Material Design 的豆瓣客户端。\n\n![Travis CI](https://travis-ci.org/zhanghai/Douya.svg)\n\n<!--<a href=\"https://play.google.com/store/apps/details?id=me.zhanghai.android.douya\" target=\"_blank\"><img alt=\"Google Play\" height=\"90\" src=\"https://play.google.com/intl/zh_CN/badges/images/generic/zh-cn_badge_web_generic.png\"/></a>-->\n\n下载：[豆芽稳定版本](https://github.com/zhanghai/Douya/releases/latest)\n\n[豆芽 CI 构建](https://github.com/zhanghai/DouyaCiBuilds)\n\n[豆芽 API Key 设置向导](https://github.com/zhanghai/DouyaApiKey)\n\n## 部分特性\n\n- Material Design\n- 首页友邻广播\n- [启动速度优化](#启动速度)\n- [界面动画](#界面动画)\n- [支持屏幕旋转](#屏幕旋转)\n- [平板多列视图](#平板适配)\n- 支持使用 Custom Tabs 打开网页\n- 支持切换长/短链接显示\n\n## 预览\n\n图片：\n\n<p><img src=\"screenshot/00-main.png\" width=\"32%\" />\n<img src=\"screenshot/01-immersive.jpg\" width=\"32%\" />\n<img src=\"screenshot/02-gallery.jpg\" width=\"32%\" />\n<img src=\"screenshot/03-broadcast-menu.png\" width=\"32%\" />\n<img src=\"screenshot/04-broadcast-activity.png\" width=\"32%\" />\n<img src=\"screenshot/05-send-comment.png\" width=\"32%\" />\n<img src=\"screenshot/06-comment-action.png\" width=\"32%\" />\n<img src=\"screenshot/07-settings.png\" width=\"32%\" />\n<img src=\"screenshot/08-licenses.png\" width=\"32%\" />\n<img src=\"screenshot/09-tablet-portrait.jpg\" width=\"34.7%\" />\n<img src=\"screenshot/10-tablet-landscape.png\" width=\"61.7%\" /></p>\n\n视频：\n\n- [优酷链接](http://v.youku.com/v_show/id_XMTQyMDE5ODk0MA==.html)\n- [Vimeo 链接](https://vimeo.com/156952508)\n\n## 关于名字\n\n豆芽的名字取自“Douban, [Yet Another](https://en.wikipedia.org/wiki/Yet_another)”的缩写和中文词语“豆芽”的拼音正好相同的巧合。\n\n取名之后，我才得知豆瓣的 Windows Phone 客户端的名字也叫做“豆芽”。所以相对于豆瓣官方应用“[一个叫‘豆瓣’的App](http://blog.douban.com/douban/2014/08/08/2897/)”，也正好将这个应用称为“另一个叫豆芽的应用”了。\n\n## 为什么要有豆芽？\n\n> 直接访问豆瓣的所有人里，最普遍而一致的用法是围绕电影、电视、书、唱片、活动(我们叫做”条目”的东西)的评分评论、发现和讨论。我们会把和网站同步的评分评论作为一个起点和基础，在手机上重新构建围绕个人兴趣的发现和讨论。\n>\n> 一个叫“豆瓣”的App——豆瓣日志\n\n豆瓣从来不是一个单一的网站，而对于豆瓣的用法自然不尽相同。使用豆瓣是为了获取信息，但信息的获取是基于条目和算法，还是基于友邻和人，这个问题在豆瓣的多次改版中大概一直悬而未决。\n\n这次，一个叫“豆瓣”的应用选择的是基于条目的推荐。但我个人作为一个重度豆瓣用户，重视的却恰好是基于人的推荐，喜欢的是友邻间的鸡犬相闻，以及闲逛时从条目评论、广播、日记中发现新友邻的惊喜。正如我在某次“还我旧版”运动中听到的声音，“不管怎么改版，只要友邻们还在就好”，改版是豆瓣不断良好发展的必经之路，但这句话中对友邻的珍重又令我感受到了豆瓣最宝贵的特质。\n\n豆瓣作为一个工具的价值可以通过条目很好体现，但豆瓣作为一个独一无二的社区，只能通过它独有的、克制的、以人为本的方式才能维系。作为一个普通但也深爱豆瓣的用户，我希望豆瓣在这个方向上也不要失落，因为一个只有工具属性的网站对我而言将再也没有这样的归属感。\n\n我在这一点上与豆瓣应用有了不同的追求，并且恰好有一些这方面的能力，又恰好豆瓣提供了开放的 API，于是就想要将这个想法实现出来了。\n\n选择开始豆芽这个项目，还有一个原因是我希望在豆瓣继续看到平台原生的设计。\n\n豆瓣广播在几年前就已经是国内少有的几个 Android Design 的应用，这一点一直令我钦佩和喜爱。在豆瓣应用最开始的版本中，也曾有过 Material Design 的尝试，但随着和 iOS 风格设计的杂糅，逐渐显得不合时宜，以至于最终选择了完全的 iOS 风格。我对此一直感到有些遗憾，况且 Material Design 也是一款更加优秀的设计语言。所以，我希望实现未能见到的另一种可能性。\n\n## 指导原则\n\n豆芽的最终目标是为豆瓣中基于友邻的信息获取方式提供在移动端的便利。为了优雅地实现这个目标，豆芽将主要遵循以下的原则：\n\n- 遵循 Material Design 规范，且指导思想优先于细节规定。\n- 像素完美，但更注重以人为本。\n- 实现精确，代码可以自我辩护。\n- 行为合格，支持屏幕旋转和平板布局。\n- 功能崇尚简约，不打扰用户。\n- 行为默认值合理，且用户可调节。\n- 积极表现豆瓣特性，如广播、友邻、豆邮等。\n- 通过细节设计，提倡用心、考虑到他人的内容。\n\n规则可以被打破，但前提是理解规则。\n\n## 功能架构\n\n豆芽的架构将与当前网站的设计十分类似。\n\n你可能会问，难道豆芽只是要做一个豆瓣网站的移动端界面么？并非如此。豆芽的最终目标是为基于友邻的信息获取方式提供便利，所以架构设计也是为此服务。而架构与当前网页端设计基本相同，则是因为现在网页端正是一个符合这个目标的设计，并且与移动端的导航也可以很好地契合。\n\n让我们详细地规划一下豆芽吧。\n\n导航采用抽屉一级导航 + 选项卡二级导航的方式。工具栏上将显示全局的动作。\n\n- 工具栏\n    - 提醒：所有类别的提醒，可以查看历史提醒\n    - 豆邮：用户间的邮件往来，希望鼓励郑重而非聊天。\n    - 搜索：立即访问想要的内容。\n- 用户：点击后显示个人页面，相当于“我的豆瓣”。\n- 首页\n    - 友邻广播：友邻互动、友邻推荐、系统定制的推荐。\n    - 九点：友邻的日记、博客文章等，有深度的内容。\n    - 一刻：全站范围的热门内容推荐。\n    - 同城：基于地理位置的内容。\n    - 线上活动：基于共同兴趣的内容。\n- 读书\n    - 分类浏览、首页推荐：入口，以及最有可能发现新内容的地方。\n    - 我读：管理自己的读书标记、创造内容。\n    - 动态：查看友邻的阅读动态，互动、获得推荐。\n    - 豆瓣猜：基于算法的推荐。\n- 电影\n    - 类似读书。\n- 音乐\n    - 类似读书。\n- 设置：提供应用设置等。\n\n在子页面设计中，豆芽将尽量鼓励长内容和用心的互动。因为我相信只有豆瓣值得这样尝试。\n\n## 实现状况\n\n我在最初的二十天内冲刺实现了应用的网络层、账户系统等基础架构，和查看友邻广播需要的大部分功能，大约 8000 行代码。\n\n在接下来的八十天中，由于课业、其他事情和速度瓶颈，实现过程有所减慢。但是，应用的细节功能和界面交互都正在不断地被实现和优化。代码量达到了 14000 行，同时为此应用而写作的多个开源库的数千行代码并没有被计入。\n\n此后项目经历了大型的重构，以适应代码复用和支持屏幕旋转的需求。在此之后，我得以实现了一个较为美观的个人资料页，并且对应用的许多细节进行了完善。\n\n目前实现了原“豆瓣广播”应用的大部分功能。剩下的工作也正在继续进行中。\n\n## 实现架构\n\n### 数据层面\n\n应用除了对少数内容进行缓存，其他内容均直接从网络获取。\n\n- 基于 Android 账户系统提供用户账户和身份认证。\n- 使用 Retrofit 及部分自定义增强处理网络请求。\n- 使用 Gson 自动填充数据模型。\n- 使用 Glide 加载图片。\n- 使用 DiskLRUCache 及自定义增强对首页数据进行缓存。\n- 使用 EventBus 同步不同页面间对象状态。\n\n### 界面层面\n\n使用 Support Library 中的 AppCompat、Design、CardView、RecyclerView 进行 Material Design 实现，在必要时引入/自己写作第三方库以实现部分界面元素和效果。\n\n使用框架的 Shared Element Transition 实现在 Android 5.0 以上的界面过渡动画。\n\n界面实现一般分为 Activity、Fragment、Adapter 三个模块，分别负责作为容器，发起请求、展示数据和用户交互，以及数据/交互绑定。\n\n## 实现难点\n\n### 网络请求\n\nRetrofit 本身已经较为强大，而在豆芽中则对 Retrofit 进行了包装，增加了认证和错误处理等功能，为之后 API 层建立提供了很多方便。\n\n### 磁盘缓存\n\nDiskLRUCache 是一个只实现了同步读取写入的库，因此豆芽对其进行了包装，提供了异步读写的 API，正确实现，提高了应用的响应速度。\n\n### 状态同步\n\n由于各个界面独自获取数据，数据本身与常规的 ContentProvider 机制中不同，是去中心化的，即可能遇到状态不同步的问题。\n\n具体地说，即有可能用户在广播详情界面中点赞后，回到主界面列表视图，发现并未更新状态。\n\n而豆芽解决方案则是使用 EventBus，在请求完成后通知所有界面刷新同一数据。\n\n### 界面动画\n\nAndroid 5.0 以上提供了 SharedElementTransition，然而默认情况下共享的界面元素在动画时却会被放置在其他界面元素之上，导致其突然越过 AppBar 或 StatusBar 的情况。\n\n通过大量的文档阅读、源代码分析和调试，经过大约一周的时间，最终实现了较为理想的效果。\n\n### 屏幕旋转\n\nAndroid 在屏幕旋转时，会销毁视图和 Activity 并重建，此时如何保存视图状态和已加载的数据、正在进行的网络请求即是问题。\n\nAndroid 对部分视图状态提供了自动保存恢复，而豆芽对于其他需要保存的状态则通过自定义的 `onSaveViewState()` 和 `onRestoreViewState()`。\n\n对于数据，豆芽通过自定义的一个无界面的 `RetainDataFragment` 进行数据保留，并且接口十分简单易用。\n\n同时，由于网络请求的异步特性，豆芽通过自定义的一个 `RequestFragment` 实现了网络请求在 Activity 重建期间的保留，并且能够在 Activity 重建完成后将请求前的状态和请求结果回调至新的 Activity。\n\n### 平板适配\n\nAndroid 本身的资源系统提供了对不同配置的很好支持，通过建立不同的资源文件，即可在手机和平板上使用不同的界面设定。\n\n此外，由于采用了 RecyclerView，通过在运行时判断当前设备配置，可以动态给界面设置为 1、2、3 列视图，充分利用屏幕空间。\n\n### 启动速度\n\nAndroid 默认在冷启动应用进程至能够调用 `Activity.onCreate()` 前会加载应用主题中的背景作为预览，而默认背景是白色，与应用在上部拥有绿色 AppBar 的效果不相匹配。\n\n为了生成适应于不同屏幕大小、系统版本的图片，我使用 bash 编写了一系列脚本，并实现了一个通用的模板化 SVG 格式，详情见 [MaterialColdStart](https://github.com/zhanghai/MaterialColdStart) 和 [AndroidSVGScripts](https://github.com/zhanghai/AndroidSVGScripts)。\n\n经过自定义窗口背景和其他优化，应用在手机上已经可以达到立即启动的视觉效果。\n\n### 派生开源库\n\n为此项目诞生的五个开源库：\n\n- [MaterialColdStart](https://github.com/zhanghai/MaterialColdStart)，800+ Stars\n- [MaterialProgressBar](https://github.com/zhanghai/MaterialProgressBar)，500+ Stars\n- [CustomTabsHelper](https://github.com/zhanghai/CustomTabsHelper)，200+ Stars\n- [MaterialEditText](https://github.com/zhanghai/MaterialEditText)\n- [SystemUiHelper](https://github.com/zhanghai/SystemUiHelper)\n\n## 第三方库\n\n- [PhotoView](https://github.com/chrisbanes/PhotoView)\n- [Glide](https://github.com/bumptech/glide)\n- [Gson](https://github.com/google/gson)\n- [ButterKnife](https://github.com/JakeWharton/butterknife)\n- [DiskLruCache](https://github.com/JakeWharton/DiskLruCache/)\n- [ThreeTenABP](https://github.com/JakeWharton/ThreeTenABP/)\n- [Retrofit](https://github.com/square/retrofit)\n- [EventBus](https://github.com/greenrobot/EventBus)\n- [CustomTabsHelper](https://github.com/zhanghai/CustomTabsHelper)\n- [EffortlessPermissions](https://github.com/zhanghai/EffortlessPermissions)\n- [MaterialEditText](https://github.com/zhanghai/MaterialEditText)\n- [MaterialProgressBar](https://github.com/zhanghai/MaterialProgressBar)\n- [SystemUiHelper](https://github.com/zhanghai/SystemUiHelper)\n- [MaterialColdStart](https://github.com/zhanghai/MaterialColdStart)\n\n## 构建\n\nAPK 文件可以在本项目的 [Releases](https://github.com/zhanghai/Douya/releases) 中找到。\n\n至于手动构建本项目的基本步骤：\n\n1. 创建 `signing.properties`：\n\n```ini\nstoreFile=YOUR_STORE_FILE\nstorePassword=\nkeyAlias=\nkeyPassword=\n```\n\n2. 执行 `./gradlew build`。\n\n## 使用\n\n安装应用后，请安装 [豆芽 API Key 设置向导](https://github.com/zhanghai/DouyaApiKey) 以设置 API Key。\n\n暂时没有内置的更新渠道，请关注本项目的 Release。\n\n请不要安装从不可靠的来源获取的 APK，以免泄漏您的用户名和密码。\n\n## 许可证\n\n    Copyright 2015 Zhang Hai\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.5185546875,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.5.0'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n   }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.888671875,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\nandroid.enableJetifier=true\nandroid.useAndroidX=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0146484375,
          "content": "include ':app'\n"
        },
        {
          "name": "signing.gradle",
          "type": "blob",
          "size": 0.6337890625,
          "content": "android {\n    signingConfigs {\n        release {\n            Properties signingProperties = new Properties()\n            signingProperties.load(rootProject.file('signing.properties').newDataInputStream())\n            storeFile rootProject.file(signingProperties.get('storeFile'))\n            storePassword signingProperties.get('storePassword') ?: System.getenv('STORE_PASSWORD') ?: System.console()?.readLine('\\nStore password: ')\n            keyAlias signingProperties.get('keyAlias')\n            keyPassword signingProperties.get('keyPassword') ?: System.getenv('KEY_PASSWORD') ?: System.console()?.readLine('\\nKey password: ')\n        }\n    }\n}\n"
        },
        {
          "name": "signing.properties.travis",
          "type": "blob",
          "size": 0.0625,
          "content": "storeFile=travis.jks\nstorePassword=\nkeyAlias=douya\nkeyPassword=\n"
        },
        {
          "name": "travis.jks",
          "type": "blob",
          "size": 2.017578125,
          "content": null
        },
        {
          "name": "upload-to-releases.sh",
          "type": "blob",
          "size": 1.5908203125,
          "content": "#!/bin/bash\n\nset -e\n\nrepo=\"$1\"\nshift\necho \"Repo: ${repo}\" >&2\n\nversion=\"$1\"\nshift\necho \"Version: ${version}\" >&2\n\ntag=\"v${version}\"\necho \"Tag: ${tag}\" >&2\n\nbody=\"$1\"\nshift\necho \"Body: ${body}\" >&2\n\n# Get old release by tag\necho \"Getting old release by tag...\" >&2\nresponse=\"$(curl -H \"Authorization: token ${GITHUB_ACCESS_TOKEN}\" \"https://api.github.com/repos/${repo}/releases/tags/${tag}\")\"\necho \"${response}\" >&2\nold_release_id=\"$(echo \"${response}\" | jq -r '.id')\"\n\nif [[ \"${old_release_id}\" != \"null\" ]]; then\n\n    # Delete old release\n    echo \"Deleting old release...\" >&2\n    response=\"$(curl -X 'DELETE' -H \"Authorization: token ${GITHUB_ACCESS_TOKEN}\" \"https://api.github.com/repos/${repo}/releases/${old_release_id}\")\"\n    echo \"${response}\" >&2\nfi\n\n# Create release\necho \"Creating release...\" >&2\nresponse=\"$(curl -H \"Authorization: token ${GITHUB_ACCESS_TOKEN}\" -H 'Content-Type: application/json' --data \"{ \\\"tag_name\\\": $(echo -n \"${tag}\" | jq -s -R -r @json), \\\"name\\\": $(echo -n \"${tag}\" | jq -s -R -r @json), \\\"body\\\": $(echo -n \"${body}\" | jq -s -R -r @json) }\" \"https://api.github.com/repos/${repo}/releases\")\"\necho \"${response}\" >&2\nupload_url=\"$(echo \"${response}\" | jq -r '.upload_url' | sed 's/{?name,label}$//g')\"\necho \"Upload url: ${upload_url}\" >&2\n\nfor file in \"$@\"; do\n    # Upload file\n    echo \"Uploading file: ${file}\" >&2\n    name=\"$(basename \"${file}\")\"\n    response=\"$(curl -H \"Authorization: token ${GITHUB_ACCESS_TOKEN}\" -H \"Content-Type: $(file -b --mime-type \"${file}\")\" --data-binary \"@${file}\" \"${upload_url}?name=$(echo -n \"${name}\" | jq -s -R -r @uri)\")\"\n    echo \"${response}\" >&2\ndone\n"
        }
      ]
    }
  ]
}