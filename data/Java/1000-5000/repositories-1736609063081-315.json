{
  "metadata": {
    "timestamp": 1736609063081,
    "page": 315,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alibaba/Alink",
      "stars": 3586,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0615234375,
          "content": "*.iml\ntarget\n.idea\n.DS_Store\n*.iml\n*dependency-reduced-pom.xml\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.en-US.md",
          "type": "blob",
          "size": 10.7978515625,
          "content": "<font size=7>English| [简体中文](README.md)</font>\n\n# Alink\n\nAlink is the Machine Learning algorithm platform based on Flink, developed by the PAI team of Alibaba computing platform.\nWelcome everyone to join the Alink open source user group to communicate.\n \n \n<div align=center>\n<img src=\"https://img.alicdn.com/tfs/TB1kQU0sQY2gK0jSZFgXXc5OFXa-614-554.png\" height=\"25%\" width=\"25%\">\n</div>\n\n#### List of Algorithms\n\n<div align=center>\n<img src=\"https://img.alicdn.com/tfs/TB1AEOeoBr0gK0jSZFnXXbRRXXa-1320-1048.png\" height=\"60%\" width=\"60%\">\n</div>\n\n#### PyAlink\n\n<div align=center>\n<img src=\"https://img.alicdn.com/tfs/TB1TmKloAL0gK0jSZFxXXXWHVXa-2070-1380.png\" height=\"60%\" width=\"60%\">\n</div>\n\n# Quick start\n\n## PyAlink Manual\n\n### Preparation before use:\n---------\n\n\n#### About package names and versions:\n  - PyAlink provides different Python packages for Flink versions that Alink supports: \n  package `pyalink` always maintains Alink Python API against the latest Flink version, which is 1.13, \n  while `pyalink-flink-***` support old-version Flink, which are `pyalink-flink-1.12`, `pyalink-flink-1.11`, `pyalink-flink-1.10` and `pyalink-flink-1.9` for now. \n  - The version of python packages always follows Alink Java version, like `1.6.2`.\n  \n#### Installation steps:\n\n1. Make sure the version of python3 on your computer is 3.6, 3.7 or 3.8.\n2. Make sure Java 8 is installed on your computer.\n3. Use pip to install:\n  `pip install pyalink`, `pip install pyalink-flink-1.12`, `pip install pyalink-flink-1.11`, `pip install pyalink-flink-1.10` or `pip install pyalink-flink-1.9`.\n\n\n#### Potential issues:\n\n1. `pyalink` and/or `pyalink-flink-***` can not be installed at the same time. Multiple versions are not allowed.\nIf `pyalink` or `pyalink-flink-***` was/were installed, please use `pip uninstall pyalink` or `pip uninstall pyalink-flink-***` to remove them.\n\n2. If `pip install` is slow of failed, refer to [this article](https://segmentfault.com/a/1190000006111096) to change the pip source, or use the following download links:\n    - Flink 1.13：[Link](https://alink-release.oss-cn-beijing.aliyuncs.com/v1.6.2.post0/pyalink-1.6.2.post0-py3-none-any.whl) (MD5: d4b7b1fe6474b11ca7f45d0fb0daf5bc)\n    - Flink 1.12：[Link](https://alink-release.oss-cn-beijing.aliyuncs.com/v1.6.2.post0/pyalink_flink_1.12-1.6.2.post0-py3-none-any.whl) (MD5: 527b9ac24383ccc8593cd61b06cc610d)\n    - Flink 1.11：[Link](https://alink-release.oss-cn-beijing.aliyuncs.com/v1.6.2.post0/pyalink_flink_1.11-1.6.2.post0-py3-none-any.whl) (MD5: 7e59ba00b3739386996cf55d8f522ed2)\n    - Flink 1.10：[Link](https://alink-release.oss-cn-beijing.aliyuncs.com/v1.6.2.post0/pyalink_flink_1.10-1.6.2.post0-py3-none-any.whl) (MD5: 6d5d9048c9a44f27285467c5117e8deb)\n    - Flink 1.9: [Link](https://alink-release.oss-cn-beijing.aliyuncs.com/v1.6.2.post0/pyalink_flink_1.9-1.6.2.post0-py3-none-any.whl) (MD5: e89ac35a6a1c63c0426f3d9ca1025880)\n3. If multiple version of Python exist, you may need to use a special version of `pip`, like `pip3`;\nIf Anaconda is used, the command should be run in Anaconda prompt. \n\n\n#### Download file system and Catalog dependency jar files:\n\nAfter PyAlink installed, you can run ```download_pyalink_dep_jars``` to download dependency jars for file system and Hive.\n(If there is an error that could not find the command, you can run the python command ```python3 -c 'from pyalink.alink.download_pyalink_dep_jars import main;main()'``` directly.)\n\nAfter executed the command, you'll see a prompt asking you about the dependencies and their versions to be downloaded. \nThe following dependencies and their versions of jars are supported:\n\n- OSS：3.4.1\n- Hadoop：2.8.3\n- Hive：2.3.4\n- MySQL: 5.1.27\n- Derby: 10.6.1.0\n- SQLite: 3.19.3\n- S3-hadoop: 1.11.788\n- S3-presto: 1.11.788\n- odps: 0.36.4-public\n\nThese jars will be installed to the ```lib/plugins``` folder of PyAlink. \nNote that these command require the access for the folder.\n\nYou can also add the argument ```-d``` when executing the command, i.e.  ```download_pyalink_dep_jars -d```.\nIt will install all dependency jars.\n\n### Start using: \n-------\nYou can start using PyAlink with Jupyter Notebook to provide a better experience.\n\nSteps for usage: \n\n1. Start Jupyter: ```jupyter notebook``` in terminal\n, and create Python 3 notebook.\n\n2. Import the pyalink package: ```from pyalink.alink import *```.\n\n3. Use this command to create a local runtime environment:\n\n   ```useLocalEnv(parallism, flinkHome=None, config=None)```.\n\n   Among them, the parameter  ```parallism```  indicates the degree of parallelism used for execution;```flinkHome``` is the full path of flink, and usually no need to set; ```config``` is the configuration parameter accepted by Flink. After running, the following output appears, indicating that the initialization of the running environment is successful.\n```\nJVM listening on ***\nPython listening on ***\n```\n4. Start writing PyAlink code, for example:\n```python\nsource = CsvSourceBatchOp()\\\n    .setSchemaStr(\"sepal_length double, sepal_width double, petal_length double, petal_width double, category string\")\\\n    .setFilePath(\"https://alink-release.oss-cn-beijing.aliyuncs.com/data-files/iris.csv\")\nres = source.select([\"sepal_length\", \"sepal_width\"])\ndf = res.collectToDataframe()\nprint(df)\n```\n\n### Write code: \n------\nIn PyAlink, the interface provided by the algorithm component is basically the same as the Java APIs, that is, an algorithm component is created through the default construction method, then the parameters are set through ```setXXX```, and other components are connected through ```link / linkTo / linkFrom```.\n\nHere, Jupyter Notebook's auto-completion mechanism can be used to provide writing convenience.\n\nFor batch jobs, you can trigger execution through methods such as ```print / collectToDataframe / collectToDataframes``` of batch components or ```BatchOperator.execute ()```; for streaming jobs, start the job with ```StreamOperator.execute ()```.\n\n### More usage: \n------\n - [Interchange between DataFrame and Operator](docs/pyalink/pyalink-dataframe.md)\n - [StreamOperator data preview](docs/pyalink/pyalink-stream-operator-preview.md)\n - [UDF/UDTF/SQL usage](docs/pyalink/pyalink-udf.md)\n - [Use with PyFlink](docs/pyalink/pyalink-pyflink.md)\n - [PyAlink Q&A](docs/pyalink/pyalink-qa.md)\n\n## Java API Manual\n\n### KMeans Example\n```java\nString URL = \"https://alink-release.oss-cn-beijing.aliyuncs.com/data-files/iris.csv\";\nString SCHEMA_STR = \"sepal_length double, sepal_width double, petal_length double, petal_width double, category string\";\n\nBatchOperator data = new CsvSourceBatchOp()\n        .setFilePath(URL)\n        .setSchemaStr(SCHEMA_STR);\n\nVectorAssembler va = new VectorAssembler()\n        .setSelectedCols(new String[]{\"sepal_length\", \"sepal_width\", \"petal_length\", \"petal_width\"})\n        .setOutputCol(\"features\");\n\nKMeans kMeans = new KMeans().setVectorCol(\"features\").setK(3)\n        .setPredictionCol(\"prediction_result\")\n        .setPredictionDetailCol(\"prediction_detail\")\n        .setReservedCols(\"category\")\n        .setMaxIter(100);\n\nPipeline pipeline = new Pipeline().add(va).add(kMeans);\npipeline.fit(data).transform(data).print();\n```\n\n### With Flink-1.13\n```xml\n<dependency>\n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink_core_flink-1.13_2.11</artifactId>\n    <version>1.6.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-streaming-scala_2.11</artifactId>\n    <version>1.13.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-table-planner_2.11</artifactId>\n    <version>1.13.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-clients_2.11</artifactId>\n    <version>1.13.0</version>\n</dependency>\n```\n\n### With Flink-1.12\n```xml\n<dependency>\n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink_core_flink-1.12_2.11</artifactId>\n    <version>1.6.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-streaming-scala_2.11</artifactId>\n    <version>1.12.1</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-table-planner_2.11</artifactId>\n    <version>1.12.1</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-clients_2.11</artifactId>\n    <version>1.12.1</version>\n</dependency>\n```\n\n### With Flink-1.11\n```xml\n<dependency>\n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink_core_flink-1.11_2.11</artifactId>\n    <version>1.6.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-streaming-scala_2.11</artifactId>\n    <version>1.11.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-table-planner_2.11</artifactId>\n    <version>1.11.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-clients_2.11</artifactId>\n    <version>1.11.0</version>\n</dependency>\n```\n\n### With Flink-1.10\n```xml\n<dependency>\n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink_core_flink-1.10_2.11</artifactId>\n    <version>1.6.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-streaming-scala_2.11</artifactId>\n    <version>1.10.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-table-planner_2.11</artifactId>\n    <version>1.10.0</version>\n</dependency>\n```\n\n### With Flink-1.9\n\n```xml\n<dependency>\n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink_core_flink-1.9_2.11</artifactId>\n    <version>1.6.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-streaming-scala_2.11</artifactId>\n    <version>1.9.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-table-planner_2.11</artifactId>\n    <version>1.9.0</version>\n</dependency>\n```\n\n\nGet started to run Alink Algorithm with a Flink Cluster\n--------\n\n1. Prepare a Flink Cluster:\n```shell\n  wget https://archive.apache.org/dist/flink/flink-1.13.0/flink-1.13.0-bin-scala_2.11.tgz\n  tar -xf flink-1.13.0-bin-scala_2.11.tgz && cd flink-1.13.0\n  ./bin/start-cluster.sh\n```\n\n2. Build Alink jar from the source:\n```shell\n  git clone https://github.com/alibaba/Alink.git\n  # add <scope>provided</scope> in pom.xml of alink_examples.\n  cd Alink && mvn -Dmaven.test.skip=true clean package shade:shade\n```\n\n3. Run Java examples:\n```shell\n  ./bin/flink run -p 1 -c com.alibaba.alink.ALSExample [path_to_Alink]/examples/target/alink_examples-1.5-SNAPSHOT.jar\n  # ./bin/flink run -p 1 -c com.alibaba.alink.GBDTExample [path_to_Alink]/examples/target/alink_examples-1.5-SNAPSHOT.jar\n  # ./bin/flink run -p 1 -c com.alibaba.alink.KMeansExample [path_to_Alink]/examples/target/alink_examples-1.5-SNAPSHOT.jar\n```\n\nDeployment\n---------\n\n[Cluster](docs/deploy/cluster-deploy.en-US.md)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.5869140625,
          "content": "<font size=7>[English](README.en-US.md)| 简体中文</font>\n\n# Alink\n\n Alink是基于Flink的通用算法平台,由阿里巴巴计算平台PAI团队研发,欢迎大家加入Alink开源用户钉钉群进行交流。\n \n \n<div align=center>\n<img src=\"https://img.alicdn.com/tfs/TB1kQU0sQY2gK0jSZFgXXc5OFXa-614-554.png\" height=\"25%\" width=\"25%\">\n</div>\n\n- Alink组件列表：http://alinklab.cn/manual/index.html\n- Alink教程：http://alinklab.cn/tutorial/index.html\n- Alink插件下载器：https://www.yuque.com/pinshu/alink_guide/plugin_downloader\n\n#### Alink教程\n<div align=center>\n<img src=\"https://img.alicdn.com/imgextra/i2/O1CN01Z7sbCr1Hg22gLIsdk_!!6000000000786-0-tps-1280-781.jpg\" height=\"50%\" width=\"50%\">\n</div>\n\n- Alink教程（Java版）：http://alinklab.cn/tutorial/book_java.html\n- Alink教程（Python版）：http://alinklab.cn/tutorial/book_python.html\n- 源代码地址：https://github.com/alibaba/Alink/tree/master/tutorial\n- Java版的数据和资料链接：http://alinklab.cn/tutorial/book_java_00_reference.html\n- Python版的数据和资料链接：http://alinklab.cn/tutorial/book_python_00_reference.html\n- Alink教程(Java版)代码的运行攻略  http://alinklab.cn/tutorial/book_java_00_code_help.html\n- Alink教程(Python版)代码的运行攻略  http://alinklab.cn/tutorial/book_python_00_code_help.html\n\n#### 开源算法列表\n\n<div align=center>\n<img src=\"https://img.alicdn.com/imgextra/i2/O1CN01RKHbLE202moQzvYjW_!!6000000006792-2-tps-1876-955.png\" height=\"100%\" width=\"100%\">\n</div>\n\n#### PyAlink 使用截图\n\n<div align=center>\n<img src=\"https://img.alicdn.com/tfs/TB1TmKloAL0gK0jSZFxXXXWHVXa-2070-1380.png\" height=\"60%\" width=\"60%\">\n</div>\n\n# 快速开始\n\n## PyAlink 使用介绍\n\n### 使用前准备：\n---------\n\n#### 包名和版本说明：\n\n  - PyAlink 根据 Alink 所支持的 Flink 版本提供不同的 Python 包：\n其中，`pyalink` 包对应为 Alink 所支持的最新 Flink 版本，当前为 1.13，而 `pyalink-flink-***` 为旧版本的 Flink 版本，当前提供 `pyalink-flink-1.12`, `pyalink-flink-1.11`, `pyalink-flink-1.10` 和 `pyalink-flink-1.9`。\n  - Python 包的版本号与 Alink 的版本号一致，例如`1.6.2`。\n\n####安装步骤：\n1. 确保使用环境中有Python3，版本限于 3.6，3.7 和 3.8。\n2. 确保使用环境中安装有 Java 8。\n3. 使用 pip 命令进行安装：\n  `pip install pyalink`、`pip install pyalink-flink-1.12`、`pip install pyalink-flink-1.11`、`pip install pyalink-flink-1.10` 或者 `pip install pyalink-flink-1.9`。\n  \n#### 安装注意事项：\n\n1. `pyalink` 和 `pyalink-flink-***` 不能同时安装，也不能与旧版本同时安装。\n如果之前安装过 `pyalink` 或者 `pyalink-flink-***`，请使用`pip uninstall pyalink` 或者 `pip uninstall pyalink-flink-***` 卸载之前的版本。\n2. 出现`pip`安装缓慢或不成功的情况，可以参考[这篇文章](https://segmentfault.com/a/1190000006111096)修改pip源，或者直接使用下面的链接下载 whl 包，然后使用 `pip` 安装：\n   - Flink 1.13：[链接](https://alink-release.oss-cn-beijing.aliyuncs.com/v1.6.2.post0/pyalink-1.6.2.post0-py3-none-any.whl) (MD5: d4b7b1fe6474b11ca7f45d0fb0daf5bc)\n   - Flink 1.12：[链接](https://alink-release.oss-cn-beijing.aliyuncs.com/v1.6.2.post0/pyalink_flink_1.12-1.6.2.post0-py3-none-any.whl) (MD5: 527b9ac24383ccc8593cd61b06cc610d)\n   - Flink 1.11：[链接](https://alink-release.oss-cn-beijing.aliyuncs.com/v1.6.2.post0/pyalink_flink_1.11-1.6.2.post0-py3-none-any.whl) (MD5: 7e59ba00b3739386996cf55d8f522ed2)\n   - Flink 1.10：[链接](https://alink-release.oss-cn-beijing.aliyuncs.com/v1.6.2.post0/pyalink_flink_1.10-1.6.2.post0-py3-none-any.whl) (MD5: 6d5d9048c9a44f27285467c5117e8deb)\n   - Flink 1.9: [链接](https://alink-release.oss-cn-beijing.aliyuncs.com/v1.6.2.post0/pyalink_flink_1.9-1.6.2.post0-py3-none-any.whl) (MD5: e89ac35a6a1c63c0426f3d9ca1025880)\n3. 如果有多个版本的 Python，可能需要使用特定版本的 `pip`，比如 `pip3`；如果使用 Anaconda，则需要在 Anaconda 命令行中进行安装。\n\n### 开始使用：\n-------\n可以通过 Jupyter Notebook 来开始使用 PyAlink，能获得更好的使用体验。\n\n使用步骤：\n1. 在命令行中启动Jupyter：`jupyter notebook`，并新建 Python 3 的 Notebook 。\n2. 导入 pyalink 包：`from pyalink.alink import *`。\n3. 使用方法创建本地运行环境：\n`useLocalEnv(parallism, flinkHome=None, config=None)`。\n其中，参数 `parallism` 表示执行所使用的并行度；`flinkHome` 为 flink 的完整路径，一般情况不需要设置；`config`为Flink所接受的配置参数。运行后出现如下所示的输出，表示初始化运行环境成功：\n```\nJVM listening on ***\n```\n4. 开始编写 PyAlink 代码，例如：\n```python\nsource = CsvSourceBatchOp()\\\n    .setSchemaStr(\"sepal_length double, sepal_width double, petal_length double, petal_width double, category string\")\\\n    .setFilePath(\"https://alink-release.oss-cn-beijing.aliyuncs.com/data-files/iris.csv\")\nres = source.select([\"sepal_length\", \"sepal_width\"])\ndf = res.collectToDataframe()\nprint(df)\n```\n\n### 编写代码：\n------\n在 PyAlink 中，算法组件提供的接口基本与 Java API 一致，即通过默认构造方法创建一个算法组件，然后通过 `setXXX` 设置参数，通过 `link/linkTo/linkFrom` 与其他组件相连。\n这里利用 Jupyter Notebook 的自动补全机制可以提供书写便利。\n\n对于批式作业，可以通过批式组件的 `print/collectToDataframe/collectToDataframes` 等方法或者 `BatchOperator.execute()` 来触发执行；对于流式作业，则通过 `StreamOperator.execute()` 来启动作业。\n\n\n### 更多用法：\n------\n  - [DataFrame 与 Operator 互转](docs/pyalink/pyalink-dataframe.md)\n  - [StreamOperator 数据预览](docs/pyalink/pyalink-stream-operator-preview.md)\n  - [UDF/UDTF/SQL 使用](docs/pyalink/pyalink-udf.md)\n  - [与 PyFlink 一同使用](docs/pyalink/pyalink-pyflink.md)\n  - [PyAlink 常见问题](docs/pyalink/pyalink-qa.md)\n\n## Java 接口使用介绍\n----------\n\n### 示例代码\n\n```java\nString URL = \"https://alink-release.oss-cn-beijing.aliyuncs.com/data-files/iris.csv\";\nString SCHEMA_STR = \"sepal_length double, sepal_width double, petal_length double, petal_width double, category string\";\n\nBatchOperator data = new CsvSourceBatchOp()\n        .setFilePath(URL)\n        .setSchemaStr(SCHEMA_STR);\n\nVectorAssembler va = new VectorAssembler()\n        .setSelectedCols(new String[]{\"sepal_length\", \"sepal_width\", \"petal_length\", \"petal_width\"})\n        .setOutputCol(\"features\");\n\nKMeans kMeans = new KMeans().setVectorCol(\"features\").setK(3)\n        .setPredictionCol(\"prediction_result\")\n        .setPredictionDetailCol(\"prediction_detail\")\n        .setReservedCols(\"category\")\n        .setMaxIter(100);\n\nPipeline pipeline = new Pipeline().add(va).add(kMeans);\npipeline.fit(data).transform(data).print();\n```\n\n### Flink-1.13 的 Maven 依赖\n```xml\n<dependency>\n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink_core_flink-1.13_2.11</artifactId>\n    <version>1.6.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-streaming-scala_2.11</artifactId>\n    <version>1.13.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-table-planner_2.11</artifactId>\n    <version>1.13.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-clients_2.11</artifactId>\n    <version>1.13.0</version>\n</dependency>\n```\n\n### Flink-1.12 的 Maven 依赖\n```xml\n<dependency>\n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink_core_flink-1.12_2.11</artifactId>\n    <version>1.6.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-streaming-scala_2.11</artifactId>\n    <version>1.12.1</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-table-planner_2.11</artifactId>\n    <version>1.12.1</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-clients_2.11</artifactId>\n    <version>1.12.1</version>\n</dependency>\n```\n\n### Flink-1.11 的 Maven 依赖\n```xml\n<dependency>\n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink_core_flink-1.11_2.11</artifactId>\n    <version>1.6.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-streaming-scala_2.11</artifactId>\n    <version>1.11.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-table-planner_2.11</artifactId>\n    <version>1.11.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-clients_2.11</artifactId>\n    <version>1.11.0</version>\n</dependency>\n```\n\n### Flink-1.10 的 Maven 依赖\n```xml\n<dependency>\n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink_core_flink-1.10_2.11</artifactId>\n    <version>1.6.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-streaming-scala_2.11</artifactId>\n    <version>1.10.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-table-planner_2.11</artifactId>\n    <version>1.10.0</version>\n</dependency>\n```\n\n### Flink-1.9 的 Maven 依赖\n\n```xml\n<dependency>\n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink_core_flink-1.9_2.11</artifactId>\n    <version>1.6.2</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-streaming-scala_2.11</artifactId>\n    <version>1.9.0</version>\n</dependency>\n<dependency>\n    <groupId>org.apache.flink</groupId>\n    <artifactId>flink-table-planner_2.11</artifactId>\n    <version>1.9.0</version>\n</dependency>\n```\n\n\n\n## 快速开始在集群上运行Alink算法\n--------\n\n1. 准备Flink集群\n```shell\n  wget https://archive.apache.org/dist/flink/flink-1.13.0/flink-1.13.0-bin-scala_2.11.tgz\n  tar -xf flink-1.13.0-bin-scala_2.11.tgz && cd flink-1.13.0\n  ./bin/start-cluster.sh\n```\n\n2. 准备Alink算法包\n```shell\n  git clone https://github.com/alibaba/Alink.git\n  # add <scope>provided</scope> in pom.xml of alink_examples.\n  cd Alink && mvn -Dmaven.test.skip=true clean package shade:shade\n```\n\n3. 运行Java示例\n```shell\n  ./bin/flink run -p 1 -c com.alibaba.alink.ALSExample [path_to_Alink]/examples/target/alink_examples-1.5-SNAPSHOT.jar\n  # ./bin/flink run -p 1 -c com.alibaba.alink.GBDTExample [path_to_Alink]/examples/target/alink_examples-1.5-SNAPSHOT.jar\n  # ./bin/flink run -p 1 -c com.alibaba.alink.KMeansExample [path_to_Alink]/examples/target/alink_examples-1.5-SNAPSHOT.jar\n```\n\n## 部署\n----------\n\n[集群部署](docs/deploy/cluster-deploy.md)\n"
        },
        {
          "name": "connectors",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "dl_predictors",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 12.498046875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    \n    <groupId>com.alibaba.alink</groupId>\n    <artifactId>alink</artifactId>\n    <packaging>pom</packaging>\n    <version>1.6-SNAPSHOT</version>\n\n    <name>alink</name>\n    <description>Alink is the Machine Learning algorithm platform based on Flink, developed by the PAI team of Alibaba computing platform.</description>\n    <url>https://github.com/alibaba/Alink</url>\n\n    <licenses>\n        <license>\n            <name>Apache License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <organization>\n\t\t<name>Alibaba Group</name>\n\t\t<url>https://github.com/alibaba</url>\n\t</organization>\n\n    <developers>\n        <developer>\n            <name>xuyang1706</name>\n            <email>xuyang1706@gmail.com</email>\n        </developer>\n        <developer>\n            <name>chengscu</name>\n            <email>chengscu@qq.com</email>\n        </developer>\n        <developer>\n            <name>Fanoid</name>\n            <email>hongfanxo@gmail.com</email>\n        </developer>\n        <developer>\n            <name>hapsunday</name>\n            <email>hapsunday@gmail.com</email>\n        </developer>\n        <developer>\n            <name>liulfy</name>\n            <email>2691140740@qq.com</email>\n        </developer>\n        <developer>\n            <name>lqb11</name>\n            <email>liqianbing11@163.com</email>\n        </developer>\n        <developer>\n            <name>Xiafei Qiu</name>\n            <email>qiuxiafei@gmail.com</email>\n        </developer>\n        <developer>\n            <name>shaomengwang</name>\n            <email>shaomeng.wang.w@gmail.com</email>\n        </developer>\n        <developer>\n            <name>cainingnk</name>\n            <email>cainingnk@gmail.com</email>\n        </developer>\n        <developer>\n            <name>weibo.zwb</name>\n            <email>weibo.zwb@alibaba-inc.com</email>\n        </developer>\n    </developers>\n\n    <scm>\n        <connection>scm:git:git@github.com:alibaba/Alink.git</connection>\n        <developerConnection>scm:git:ssh://github.com:alibaba/Alink.git</developerConnection>\n        <url>https://github.com/alibaba/Alink</url>\n    </scm>\n\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n\n    <properties>\n        <java.version>1.8</java.version>\n        <maven.compiler.source>${java.version}</maven.compiler.source>\n        <maven.compiler.target>${java.version}</maven.compiler.target>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <alink.flink.major.version>1.13</alink.flink.major.version>\n        <flink.version>1.13.0</flink.version>\n        <alink.scala.major.version>2.11</alink.scala.major.version>\n        <scala.version>2.11.12</scala.version>\n        <alink.mvn.apache-httpclient.version>4.5.3</alink.mvn.apache-httpclient.version>\n        <alink.mvn.gson.version>2.8.2</alink.mvn.gson.version>\n        <apache.common.lang3.version>3.3.2</apache.common.lang3.version>\n        <apache.common.io.version>2.4</apache.common.io.version>\n        <breeze.version>0.13.1</breeze.version>\n        <junit.version>4.12</junit.version>\n        <slf4j.version>1.7.15</slf4j.version>\n        <log4j.version>2.17.1</log4j.version>\n        <netlib.java.version>1.1.2</netlib.java.version>\n        <skip.tf.predictor.ut>true</skip.tf.predictor.ut>\n        <maven.surefire.plugin.version>2.22.0</maven.surefire.plugin.version>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n\n            <dependency>\n                <groupId>com.github.fommil.netlib</groupId>\n                <artifactId>all</artifactId>\n                <type>pom</type>\n                <version>${netlib.java.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>${junit.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-slf4j-impl</artifactId>\n                <version>${log4j.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-api</artifactId>\n                <version>${log4j.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-core</artifactId>\n                <version>${log4j.version}</version>\n            </dependency>\n\n            <dependency>\n                <!-- API bridge between log4j 1 and 2 -->\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-1.2-api</artifactId>\n                <version>${log4j.version}</version>\n            </dependency>\n\n            <!-- remove log4j deps -->\n            <dependency>\n                <groupId>org.apache.flink</groupId>\n                <artifactId>flink-test-utils_2.11</artifactId>\n                <version>${flink.version}</version>\n                <!-- exclude the deps of curator for updating the log4j-->\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-log4j12</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>log4j</groupId>\n                        <artifactId>log4j</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <!-- removing log4j deps ends here -->\n        </dependencies>\n    </dependencyManagement>\n\n    <modules>\n        <module>test_utils</module>\n        <module>core</module>\n        <module>dl_predictors</module>\n        <module>connectors</module>\n        <module>examples</module>\n        <module>python</module>\n        <module>plugins</module>\n    </modules>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.8.1</version>\n                <configuration>\n                    <source>${java.version}</source>\n                    <target>${java.version}</target>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>dev</id>\n            <activation>\n                <activeByDefault>true</activeByDefault>\n                <property>\n                    <name>env.type</name>\n                    <value>dev</value>\n                </property>\n            </activation>\n        </profile>\n\n        <profile>\n            <id>release</id>\n            <activation>\n                <property>\n                    <name>env.type</name>\n                    <value>release</value>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>2.2.1</version>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>3.1.0</version>\n                        <configuration>\n                            <additionalOptions>-Xdoclint:none</additionalOptions>\n                            <additionalJOption>-Xdoclint:none</additionalJOption>\n                            <show>public</show>\n                            <charset>UTF-8</charset>\n                            <encoding>UTF-8</encoding>\n                            <docencoding>UTF-8</docencoding>\n                            <links>\n                                <link>http://docs.oracle.com/javase/6/docs/api</link>\n                            </links>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>flatten-maven-plugin</artifactId>\n                        <version>1.2.7</version>\n                        <configuration>\n                            <embedBuildProfileDependencies>true</embedBuildProfileDependencies>\n                            <flattenDependencyMode>direct</flattenDependencyMode>\n                            <flattenMode>oss</flattenMode>\n                            <updatePomFile>true</updatePomFile>\n                            <outputDirectory>${project.build.directory}</outputDirectory>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>flatten</id>\n                                <phase>process-resources</phase>\n                                <goals>\n                                    <goal>flatten</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>flatten.clean</id>\n                                <phase>clean</phase>\n                                <goals>\n                                    <goal>clean</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>1.5</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                                <configuration>\n                                    <gpgArguments>\n                                        <arg>--pinentry-mode</arg>\n                                        <arg>loopback</arg>\n                                    </gpgArguments>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>org.sonatype.plugins</groupId>\n                        <artifactId>nexus-staging-maven-plugin</artifactId>\n                        <version>1.6.8</version>\n                        <extensions>true</extensions>\n                        <configuration>\n                            <serverId>ossrh</serverId>\n                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                            <autoReleaseAfterClose>false</autoReleaseAfterClose>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "pyalink",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "shaded_libraries",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "tutorial",
          "type": "tree",
          "content": null
        },
        {
          "name": "webui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}