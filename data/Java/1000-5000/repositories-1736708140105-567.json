{
  "metadata": {
    "timestamp": 1736708140105,
    "page": 567,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jenkinsci/blueocean-plugin",
      "stars": 2885,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.03515625,
          "content": "*\n!blueocean/target/plugins\n!docker\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.9013671875,
          "content": "#\n# This file tells your IDE the formatting (etc) rules for your project.\n# See http://editorconfig.org/\n#\n# Subline Text: https://github.com/editorconfig/editorconfig-sublime\n# Emacs: https://github.com/editorconfig/editorconfig-emacs\n# Jetbrains (IntelliJ etc): https://github.com/editorconfig/editorconfig-jetbrains\n# Eclipse: ??\n#\n\nroot = true\n\n[*]\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[package.json]\nindent_style = space\nindent_size = 2\n\n[Jenkinsfile]\nindent_style = space\nindent_size = 2\n\n[**.xml]\nindent_style = space\nindent_size = 4\n\n[**.jelly]\nindent_style = space\nindent_size = 4\n\n[**.java]\nindent_style = space\nindent_size = 4\n\n[**.hbs]\nindent_style = space\nindent_size = 4\n\n[**.js]\nindent_style = space\nindent_size = 4\n\n[**.jsx]\nindent_style = space\nindent_size = 4\n\n[**.css]\nindent_style = space\nindent_size = 4\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 1.349609375,
          "content": "{\n  \"ecmaFeatures\": {\n    \"jsx\": true,\n    \"modules\": true\n  },\n  \"env\": {\n    \"browser\": true,\n    \"es6\": true,\n    \"node\": true\n  },\n  \"parser\": \"babel-eslint\",\n  \"rules\": {\n    \"eol-last\": 1,\n    \"no-unused-vars\": [1],\n    \"max-len\": [0],\n    \"no-underscore-dangle\": [0],\n    \"object-shorthand\": [0, \"always\"],\n    \"quote-props\": [0, \"as-needed\"],\n    \"no-var\": 0,\n    \"prefer-const\": 2,\n    \"prefer-arrow-callback\": 2,\n    \"no-trailing-spaces\": [0, { \"skipBlankLines\": true }],\n    \"key-spacing\": [2],\n    \"semi\": [2],\n    \"no-extra-semi\": 2,\n    \"no-console\": 1,\n    \"prefer-template\": 0,\n    \"react/display-name\": 0,\n    \"react/jsx-boolean-value\": 2,\n    \"jsx-quotes\": 2,\n    \"react/jsx-no-undef\": 2,\n    \"react/jsx-sort-props\": 0,\n    \"react/jsx-uses-react\": 2,\n    \"react/jsx-uses-vars\": 2,\n    \"react/jsx-closing-bracket-location\": 0,\n    \"react/no-did-mount-set-state\": 2,\n    \"react/no-did-update-set-state\": 2,\n    \"react/no-multi-comp\": 0,\n    \"react/no-unknown-property\": 2,\n    \"react/prop-types\": 2,\n    \"react/react-in-jsx-scope\": 2,\n    \"react/self-closing-comp\": 2,\n    \"react/wrap-multilines\": 2,\n    \"react/jsx-indent-props\": 0,\n    \"padded-blocks\": 0,\n    \"one-var-declaration-per-line\": 0,\n    \"one-var\": 0,\n    \"radix\": 0,\n    \"quotes\": [0, \"single\"],\n    \"space-before-function-paren\": [0],\n    \"strict\": [2, \"global\"]\n  },\n  \"plugins\": [\n    \"react\"\n  ]\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.623046875,
          "content": "#Ignore all dot files\n# Warning!\n# Make sure that .npmignore is the same as this, BUT DOES NOT CONTAIN \"dist\"\n\nnode_modules/\nnpm-debug.log\n.DS_Store\n.idea/\n.idea.*/\n*.iml\nnbactions.xml\n*.ipr\n*.iws\ntarget\n*~\nnode\nnode_modules\nwork\napp.properties\nnpm-debug.log*\n.settings\n.project\n.classpath\nblueocean-web/src/main/webapp/assets\n.build_container\n.watch_trigger\n.vscode\njsconfig.json\nblueocean-core-js/nohup.out\ndist\nreports\n/website/storybook\n/website/component-docs/doc*\n/website-build\nacceptance-tests/runner/.blueocean-ath-jenkins-url\nacceptance-tests/live.properties\nsrc/main/groovy/pipeline.gdsl\nnb-configuration.xml\nnbactions.xml\nout\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".npmignore",
          "type": "blob",
          "size": 0.2109375,
          "content": "# Warning!\n# This file must be the same as .gitignore, but MUST NOT CONTAIN \"dist\"\n\nnode_modules/\nnpm-debug.log\n.DS_Store\n*.iml\n.idea/\n/.project\nreports\n/website/storybook\n/website/component-docs/doc*\n/website-build\n"
        },
        {
          "name": ".prettierrc.yaml",
          "type": "blob",
          "size": 0.4267578125,
          "content": "# .prettierrc\n#\n# This is the base configuration for prettier, but we do not run it directly. The main script is bin/pretty.js and\n# automatic formatting during commit is coordinated by bin/pre-commit.js by means of invoking bin/pretty.js\n#\n# There is extra configuration in those files specific to the Blue Ocean build process and mix of source languages.\n\nprintWidth: 160\nparser: babel\ntabWidth: 4\ntrailingComma: es5\nsingleQuote: true\n"
        },
        {
          "name": "ANALYTICS_EVENTS.md",
          "type": "blob",
          "size": 0.8271484375,
          "content": "Analytics Events\n================\n\n| Event Name  | Description |\n| ------------- | ------------- |\n| dashboard_visited | Send when user visits the Dashboard  |\n| pageview | Send every time the page is visited or the view is changed  |\n| pipeline_activity_visited  | Send every time the Pipeline activity tab is visited  |\n| pipeline_creation_visited  | Sent when the user clicks the `New Pipeline` button  |\n| pipeline_branches_visited  | Send every time the Pipeline branches tab is visited  |\n| pipeline_pull_requests_visited  | Send every time the Pipeline pull requests tab is visited  |\n| pipeline_run_visited  |  Send every time the Pipeline run result is visited |\n| pipeline_run_changes_visited  |  Send every time the Pipeline run changes is visited |\n| pipeline_run_tests_visited  |  Send every time the Pipeline run tests is visited |\n\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 2.62890625,
          "content": "# Changelogs\n\n## 1.13.2 (March 6st, 2019)\n\n* HOTFIX - [JENKINS-56383](https://issues.jenkins-ci.org/browse/JENKINS-56383) Reverted the fix for [JENKINS-38339](https://issues.jenkins-ci.org/browse/JENKINS-38339) which was causing double parallel steps to fail to render\n\n\n## 1.13.1 (March 1st, 2019)\n\n**NOTE:** blueocean-executor-info is now included in the main blueocean-plugin repository (but not as a required dependency yet)\n\n* [JENKINS-53188](https://issues.jenkins-ci.org/browse/JENKINS-53188) New jobs created from Blue Ocean are tied with username that created them\n* [JENKINS-53019](https://issues.jenkins-ci.org/browse/JENKINS-53019) Changes tab does not group changes for multiple SCM providers by SCM\n* [JENKINS-52825](https://issues.jenkins-ci.org/browse/JENKINS-52825) Cannot see executors in Blue Ocean UI\n* [JENKINS-53022](https://issues.jenkins-ci.org/browse/JENKINS-53022) Cannot disable a job from Blue Ocean UI\n* [JENKINS-56301](https://issues.jenkins-ci.org/browse/JENKINS-56301) Restrict referrer display to same origin\n* [JENKINS-38339](https://issues.jenkins-ci.org/browse/JENKINS-38339) UI for downstream jobs launched with 'build' step\n* [#1920](https://github.com/jenkinsci/blueocean-plugin/pull/1920) Fix for random 404s on startup / ATH\n* [#1913](https://github.com/jenkinsci/blueocean-plugin/pull/1913) Remove minimum java 11 from plugin. BO works fine in 8+\n\n## 1.12.0, 1.13.1 (March 1st, 2019)\n\n* Don't use, failed releases due to permission errors\n\n## 1.11.0 (Feb 13, 2019)\n\n* [JENKINS-54518](https://issues.jenkins-ci.org/browse/JENKINS-54518) Multibranch pipeline: Incorrect branch sort order for plain Git sources\n* [JENKINS-54099](https://issues.jenkins-ci.org/browse/JENKINS-54099) Warnings about \"Failed Jenkins SSE Gateway configuration request. Unknown SSE event dispatcher\" in Evergreen\n* [JENKINS-19022](https://issues.jenkins-ci.org/browse/JENKINS-19022) GIT Plugin (any version) heavily bloats memory use and size of build.xml with \"BuildData\" fields\n* [JENKINS-55986](https://issues.jenkins-ci.org/browse/JENKINS-55986) “Restart Parallel Stages” appears on the screen even when the user has no permissions\n* [JENKINS-55127](https://issues.jenkins-ci.org/browse/JENKINS-55127) Parallel Input stages are not individually selectable in Blue Ocean\n* [JENKINS-50532](https://issues.jenkins-ci.org/browse/JENKINS-50532) Failing nested parallel stages are marked green\n* [JENKINS-47286](https://issues.jenkins-ci.org/browse/JENKINS-47286) Support skipping stages in scripted pipelines for nice visualization in blue ocean and classic UI stage view\n* [#1910](https://github.com/jenkinsci/blueocean-plugin/pull/1910) Update SSE client lib used in ATH\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.2109375,
          "content": "# Lines starting with '#' are comments.\n# Each line is a file pattern followed by one or more owners.\n# See: https://github.com/blog/2392-introducing-code-owners for details\n\n* @jenkinsci/blueocean-plugin-developers\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.0556640625,
          "content": "# Jenkins\nBlue Ocean is a Jenkins project that aspires to be well known and loved by Jenkins users. \nThus, similar contributing guidelines apply as to Jenkins itself. \n\nFor information on contributing to Jenkins, check out the https://wiki.jenkins-ci.org/display/JENKINS/Beginners+Guide+to+Contributing and https://wiki.jenkins-ci.org/display/JENKINS/Extend+Jenkins wiki pages over at the official https://wiki.jenkins-ci.org. They will help you get started with contributing to Jenkins.\n\n\n## Changes and pull requests\n\nAll changes should come via pull requests, never to master directly. A pull request can be as a branch on this repo or from a forked one, doesn't matter. If a branch on this repo, name it topic/x feature/x or bug/x - depending on what you are doing. Once it is merged, please do delete the branch. \n\nYou can open a Pull Request at any time. People often like to do this because it allows them to utilize the Pull Request Builder on their PR, as well as allowing them to capture early feedback.\n\nIf the PR:\n\n* Is still a \"Work In Progress\" (i.e. incomplete), then please mark it with the \"__work-in-progress__\" label (GitHub label).\n* Ready for review, then please mark it with the \"__needs-review__\" label (GitHub label). You should also @-mention the team (at least) that you'd like to get the review from. Mentioning an individual that may know about the area is good to (one or more). `@reviewbybees` can also be used to drag in some attention (CloudBees employees would also ideally use this for a cross review).\n\n> __Note__: It's perfectly fine to use both of the above labels at the same time. However, if the PR is still a __work-in-progress__, it's a good idea to list the tasks that are done and the tasks still todo (using a [GitHub checklist](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)), giving reviewers a clear idea of where the PR is. \n\nOnce the PR is no longer a __work-in-progress__, is building fine (according to the Pull Request Builder) and has 1 or more +1/LGTM/:bee: or amusing positive looking emoji, the PR can be merged ideally by the author of the PR. A :bug: or a -1 means that the issues raised need addressing and should be. \n\nAvoid \"bike shed\" discussions about styles or whitespace unless it really impacts the changeset. The contributor can be encouraged to apply editor automation in future (if it is available).\n\n# Merging\n\nAll commits should be squashed before being merged to `master` to preserve a sane history. The Merge button on the PR screen has been configured to do this automatically.\n\n# Code Style\n\n## Java and Jenkins code\n\nFor Jenkins-ish code on the server side (which Blue Ocean is built on) - follow the same as: https://wiki.jenkins-ci.org/display/JENKINS/Beginners+Guide+to+Contributing#BeginnersGuidetoContributing-HowaboutJavacode%3F - you can make this a bit easier by importing the .editorconfig file into your favourite editor so it autoformats for you. \n\n## JavaScript and web\n\n(this is a bit vague while sorted out. Any help/automation appreciated)\n\nECMA6 is being used, comment clearly and often, keep files short. Double quotes for strings unless in imports. Use jshint. Semicolons and all the rest. \n\nWIP...\n\n\n# Plugins and extension points\n\nBlue Ocean is built on Jenkins, with things being plugins. Ths same applies to the UI and javascript code - extension points are embraced. Ideally all features are implemented as extensions vs in core, even if this means adding an ExtensionPoint to some code in core or another plugin. On the web, an extension point can be as simple as `<Extensions.Renderer name=\"awesome.plugin.thing\"/>` allowing others to add features to your plugin (you can grep through existing plugins for examples of extension points).\n\n# Discussion and chat \n\nWhen working on something, checkin on mailing list or chat. \n\n`#jenkins` on irc.freenode.net, no signup needed. \n\nmailing list: https://groups.google.com/forum/#!forum/jenkinsci-dev - at least until too chatty and project is kicked off and has its own list!\n\n\n# Code of conduct\n\nSame as Jenkins, applying to all discussions/comments: https://jenkins-ci.org/conduct/\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.0390625,
          "content": "#\n# Before building this Dockerfile, BlueOcean needs to be built locally using Maven\n# You can build everything needed and this Dockerfile by invoking `bin/build-in-docker.sh -m`\n#\n\n# Effective version should be kept in sync with jenkins.properties of pom.xml\n# Use `docker run jenkins/jenkins:lts --version` to obtain latest LTS version\n# Patch version is not to be considered, we prefer to base the image off the latest LTS of the line\n# and keep the dependency on the baseline in pom.xml\nFROM jenkins/jenkins:lts\n\nUSER root\n\nCOPY blueocean/target/plugins /usr/share/jenkins/ref/plugins/\n\nRUN for f in /usr/share/jenkins/ref/plugins/*.hpi; do mv \"$f\" \"${f%%hpi}jpi\"; done\nRUN install-plugins.sh antisamy-markup-formatter matrix-auth # for security, you know\n\n# Force use of locally built blueocean plugin\nRUN for f in /usr/share/jenkins/ref/plugins/blueocean-*.jpi; do mv \"$f\" \"$f.override\"; done\n\n# let scripts customize the reference Jenkins folder. Used in bin/build-in-docker to inject the git build data\nCOPY docker/ref /usr/share/jenkins/ref\n\nUSER jenkins\n"
        },
        {
          "name": "Dockerfile.build",
          "type": "blob",
          "size": 2.7353515625,
          "content": "FROM ubuntu:20.04\n\nENV MAVEN_VERSION 3.9.4\nENV NODE_VERSION 10.13.0\nENV PHANTOMJS_VERSION 2.1.1\nARG UID=1000\nARG GID=1000\nENV DEBIAN_FRONTEND=noninteractive\n\nUSER root\n\nRUN apt-get update\n\n#========================\n# Miscellaneous packages\n#========================\nRUN apt update -qqy \\\n  && apt -qqy --no-install-recommends install \\\n    sudo \\\n    openjdk-11-jdk \\\n    tar \\\n    zip xz-utils \\\n    curl wget \\\n    git \\\n    build-essential \\\n    python \\\n    iputils-ping \\\n    net-tools \\\n    locales \\\n    libsass-dev \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' /usr/lib/jvm/java-11-openjdk-amd64/conf/security/java.security\n\n# Set utf-8 locale\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n#==========\n# Maven\n#==========\nRUN curl -fsSL https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/$MAVEN_VERSION/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar xzf - -C /usr/share \\\n  && mv /usr/share/apache-maven-$MAVEN_VERSION /usr/share/maven \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME /usr/share/maven\n\n\n#===============\n# Node and NPM\n#===============\nRUN wget --no-verbose https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz -O /opt/nodejs.tar.xz\nRUN tar -C /usr/local --strip-components 1 -xJf /opt/nodejs.tar.xz\nRUN mkdir /.npm && chmod 777 /.npm\n\n#=============================================\n# Misc packages needed by the ATH\n#=============================================\n\nRUN apt update -qqy \\\n  && apt install -y tzdata \\\n  && apt -qqy --no-install-recommends install \\\n    libxml2-utils \\\n    libssl-dev \\\n  && rm -rf /var/lib/apt/lists/*\n\n#=============================================\n# Phantom JS\n#=============================================\nRUN wget --no-verbose -O - -L https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-$PHANTOMJS_VERSION-linux-x86_64.tar.bz2 \\\n        | tar -xj --strip-components=1 -C /usr/local\n\n#========================================\n# Add normal user with passwordless sudo\n#========================================\nRUN sudo groupadd -r -g $GID bouser \\\n  && sudo useradd bouser -g $GID -u $UID --shell /bin/bash --create-home \\\n  && sudo usermod -a -G sudo bouser \\\n  && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n  && echo 'bouser:secret' | chpasswd\n\nUSER bouser\nWORKDIR /home/bouser\n\n#========================================\n# Configure the local git user.\n#========================================\nRUN git config --global user.name \"John Doe\"\nRUN git config --global user.email johndoe@example.com\n\n\n#========================================\n# Need ssh\n#========================================\nRUN sudo apt-get update -qqy && sudo apt-get install -y ssh\n"
        },
        {
          "name": "Dockerfile.sc",
          "type": "blob",
          "size": 0.5146484375,
          "content": "FROM debian\nRUN apt update && \\\n    apt install -y wget && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    wget -O - https://saucelabs.com/downloads/sc-4.5.3-linux.tar.gz | tar xvzf -\n\nENV BUILD_TAG \"\"\nRUN printf \"#!/bin/bash \\n\\\n    if [ -z \\\"\\$BUILD_TAG\\\" ]; then\\n\\\n    /sc-4.5.3-linux/bin/sc -u \\$SAUCE_USERNAME -k \\$SAUCE_ACCESS_KEY \\n\\\n    else\\n\\\n    /sc-4.5.3-linux/bin/sc -u \\$SAUCE_USERNAME -k \\$SAUCE_ACCESS_KEY -i \\$BUILD_TAG \\n\\\n    fi \\n\\\n    \\n\" > /entrypoint.sh && chmod 755 /entrypoint.sh\nENTRYPOINT /entrypoint.sh\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 3.6298828125,
          "content": "#!groovy\n\nif (JENKINS_URL == 'https://ci.jenkins.io/') {\n  buildPlugin(\n    configurations: [\n      [ platform: \"linux\", jdk: \"21\" ],\n      [ platform: \"linux\", jdk: \"17\" ]\n    ],\n    // Tests were locking up and timing out on non-aci\n    useContainerAgent: true,\n    timeout: 90\n  )\n  return\n}\n\nproperties([\n  // only 20 builds,\n  buildDiscarder(logRotator(artifactNumToKeepStr: '20', numToKeepStr: '20')),\n])\n\ncredentials = [\n  file(credentialsId: 'blueoceandeploy_ath', variable: 'LIVE_PROPERTIES_FILE'),\n  file(credentialsId: 'blueocean-ath-private-repo-key', variable: 'BO_ATH_KEY_FILE')\n]\n\nenvs = [\n  'GIT_COMMITTER_EMAIL=me@hatescake.com',\n  'GIT_COMMITTER_NAME=Hates',\n  'GIT_AUTHOR_NAME=Cake',\n  'GIT_AUTHOR_EMAIL=hates@cake.com'\n]\n\njenkinsVersions = ['2.401.3']\n\nnode() {\n  withCredentials(credentials) {\n    withEnv(envs) {\n\n      stage('Setup') {\n        deleteDir()\n        checkout scm\n        //sh 'docker build -t blueocean_build_env --build-arg GID=$(id -g ${USER}) --build-arg UID=$(id -u ${USER}) - < Dockerfile.build'\n        sh 'mv $LIVE_PROPERTIES_FILE acceptance-tests/live.properties'\n        configFileProvider([configFile(fileId: 'blueocean-maven-settings', variable: 'MAVEN_SETTINGS')]) {\n          sh 'mv $MAVEN_SETTINGS settings.xml'\n        }\n        sh 'mv $BO_ATH_KEY_FILE acceptance-tests/bo-ath.key'\n        sh 'id'\n        sh 'whoami'\n        sh \"./acceptance-tests/runner/scripts/start-selenium.sh\"\n        sh \"./acceptance-tests/runner/scripts/start-bitbucket-server.sh\"\n      }\n\n      try {\n        docker.image('blueocean/blueocean:build_env').inside(\"--net=container:blueo-selenium\") {\n          ip = sh(returnStdout: true, script: \"hostname -I  | awk '{print \\$1}'\").trim()\n          echo \"IP: [${ip}]\"\n          // stage('Sanity check dependencies') {\n          //   sh \"node ./bin/checkdeps.js\"\n          //   sh \"node ./bin/checkshrinkwrap.js\"\n          // }\n\n          // stage('Building JS Libraries') {\n          //   sh \"pwd\"\n          //   sh 'node -v && npm -v'\n          //   sh 'npm --prefix ./js-extensions run build'\n          // }\n\n          stage('Building BlueOcean') {\n            timeout(time: 90, unit: 'MINUTES') {\n              try {\n                sh 'id'\n                //sh 'whoami'\n                sh 'pwd'\n                sh \"mvn clean install -T2 -Pci -V -B -DcleanNode -ntp -DforkCount=3 -Dmaven.test.failure.ignore -s settings.xml -e -Dmaven.repo.local=/tmp/m2 -Dmaven.artifact.threads=30\"\n              } finally {\n                junit testResults: '**/target/surefire-reports/TEST-*.xml', allowEmptyResults: true\n                junit testResults: '**/target/jest-reports/*.xml', allowEmptyResults: true\n                archiveArtifacts artifacts: '*/target/*.hpi',allowEmptyArchive: true\n              }\n            }\n          }\n\n          jenkinsVersions.each { version ->\n            stage(\"ATH - Jenkins ${version}\") {\n              timeout(time: 90, unit: 'MINUTES') {\n                dir('acceptance-tests') {\n                  sh \"id\"\n                  sh \"bash -x ./run.sh -v=${version} --host=${ip} --no-selenium -ci --settings='-s ${env.WORKSPACE}/settings.xml' --maven-local-repo=/tmp/m2\"\n                  junit '**/target/surefire-reports/*.xml'\n                  archive '**/target/screenshots/**/*'\n                }\n              }\n            }\n          }\n        }\n      } finally {\n        stage('Cleanup') {\n          catchError(message: 'Suppressing error in Stage: Cleanup') {\n            sh \"${env.WORKSPACE}/acceptance-tests/runner/scripts/stop-selenium.sh\"\n            sh \"${env.WORKSPACE}/acceptance-tests/runner/scripts/stop-bitbucket-server.sh\"\n            deleteDir()\n          }\n        }\n      }\n    }\n  }\n}\n\n"
        },
        {
          "name": "Jenkinsfile-build-image",
          "type": "blob",
          "size": 0.609375,
          "content": "pipeline {\n  agent any\n\n  options {\n    buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))\n    disableConcurrentBuilds()\n    disableResume()\n    timeout(time: 60, unit: \"MINUTES\")\n  }\n  \n  stages {\n    stage('Build docker build image') {\n      steps {\n        withDockerRegistry([credentialsId: '81012788-1be1-49e4-bfab-a882101f0442', url: \"\"]) {\n          sh('docker build --no-cache -t blueocean/blueocean:build_env --build-arg GID=$(id -g ${USER}) --build-arg UID=$(id -u ${USER}) - < Dockerfile.build')\n          sh('docker push blueocean/blueocean:build_env')\n        }\n      }\n    }\n  }  \n  \n}  \n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.0859375,
          "content": "The MIT License\n\nCopyright (c) 2016 CloudBees Inc and a number of other of contributors\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE",
          "type": "blob",
          "size": 0.6171875,
          "content": "# Description\n\nSee [JENKINS-XXXXX](https://issues.jenkins-ci.org/browse/JENKINS-XXXXX).\n\n# Submitter checklist\n- [ ] Link to JIRA ticket in description, if appropriate.\n- [ ] Change is code complete and matches issue description\n- [ ] Appropriate unit or acceptance tests or explanation to why this change has no tests\n- [ ] Reviewer's manual test instructions provided in PR description. See Reviewer's first task below.\n\n# Reviewer checklist\n- [ ] Run the changes and verified the change matches the issue description\n- [ ] Reviewed the code\n- [ ] Verified that the appropriate tests have been written or valid explanation given\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.564453125,
          "content": "# Blue Ocean \nBlue Ocean is an alternative user experience for Jenkins. You can learn more about its features on the [Blue Ocean project website](https://jenkins.io/projects/blueocean/).\n\nJoin the community and [![Gitter](https://badges.gitter.im/jenkinsci/blueocean-plugin.svg)](https://gitter.im/jenkinsci/blueocean-plugin?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)\n\n# Blue Ocean status\n\nBlue Ocean will not receive further functionality updates.\nBlue Ocean will continue to provide easy-to-use Pipeline visualization, but it will not be enhanced further.\nIt will only receive selective updates for significant security issues or functional defects.\n\nAlternative options for Pipeline visualization, such as the [Pipeline: Stage View](https://plugins.jenkins.io/pipeline-stage-view/) and [Pipeline Graph View](https://plugins.jenkins.io/pipeline-graph-view/) plugins, are available and offer some of the same functionality.\nWhile not complete replacements for Blue Ocean, contributions are encouraged from the community for continued development of these plugins.\n\nThe [Pipeline syntax snippet generator](https://www.jenkins.io/doc/book/pipeline/getting-started/#snippet-generator) assists users as they define Pipeline steps with their arguments.\nIt is the preferred tool for Jenkins Pipeline creation, as it provides online help for the Pipeline steps available in your Jenkins controller.\nIt uses the plugins installed on your Jenkins controller to generate the Pipeline syntax.\nRefer to the [Pipeline steps reference](https://www.jenkins.io/doc/pipeline/steps/) page for information on all available Pipeline steps.\n\n# Get Blue Ocean\n\nBlue Ocean is [available from the Jenkins update center](https://jenkins.io/projects/blueocean/#use-the-beta) for Jenkins 2.7.1 and above. \n\n# Reporting bugs and feature requests\n\nWe use the [Jenkins JIRA](https://issues.jenkins-ci.org/) to log all bugs and feature requests. Create a [new account](https://accounts.jenkins.io/), [browse to JIRA](https://issues.jenkins-ci.org/) and login with your account then create a new issue with the component `blueocean-plugin`.\n\n# For Developers\nIt is a multi-module maven project made up of a few Jenkins plugins. There is an aggregator plugin in the \"blueocean\" module.\n\nCONTRIBUTIONS ALWAYS WELCOME NO MATTER HOW BIG OR SMALL.\n\nSome background reading: \nhttps://jenkins.io/blog/2016/05/26/introducing-blue-ocean/\n\nThis is in the main Update Center for Jenkins. Install the plugin called \"BlueOcean beta\" (and let it install its dependencies). The instructions here are for contributors to Blue Ocean and the morbidly curious. Expect refactoring. \n\n\n![Pirate logo, because it's ocean and stuff](docu/pix/logo-yarrr.png)\nYarr...\n\n## Modules of note\n\nA quick tour of some of the modules (not all). Consult README.md in respective modules for more info.\n\n### blueocean-dashboard\n\nBlue Ocean Dashboard plugin. Currently contains a lot of the core of the Blue Ocean user interface and extension points. This is mostly client side JavaScript built with ES6 and React. \n\n### blueocean\n\nAn aggregator plugin, making it an easy place from which to run Blue Ocean via `hpi:run`. \n\n### blueocean-rest\n\nJava interfaces and classes that specify the definition of the REST API that blueocean uses. See the README.md within this module for detail on this api.\n\n### blueocean-rest-impl\n\nProvides the default implementation of the core REST Apis defined in the `blueocean-rest` plugin. It comes with only freestyle job support.\n\n\n### blueocean-pipeline-api-impl\n\nProvides implementation of Pipeline apis for Jenkins pipeline and multi-branch job types support\n\n### blueocean-web\n\nCore Web infrastructure that bootstraps BlueOcean UI and integrates REST API core blueocean-rest, and serves up the core javascript libraries. \n\n    \n## Building and running\n\nAt a minimum you will need a JVM, Maven and python installed, if you are doing active JavaScript development, \nyou may want to install NodeJS, but it is not a requirement as the `frontend-maven-plugin` will install\nthe correct version of Node locally for each plugin to build and develop with.\n\n## Build everything (from root directory)\nBuilds all maven modules (run this the first time you check things out, at least)\n\n```\n$ mvn clean install\n```\n\n**NOTE:** If you are using macOS, you must install JDK 1.8 or the installation will fail (The most recent versions of macOS come preinstalled with JDK 10). Please follow [this link](https://stackoverflow.com/questions/46513639/how-to-downgrade-java-from-9-to-8-on-a-macos-eclipse-is-not-running-with-java-9/48422257#48422257) for instructions.\n\nFor now, you'll need to skip the tests if __building on Windows__, so be sure to include the `-DskipTests` switch e.g.\n\n```\n$ mvn clean install -DskipTests\n```\n\n### Running Blue Ocean\n\n```\n$ mvn -f blueocean/pom.xml hpi:run\n```\n\nThen open http://localhost:8080/jenkins/blue to start using Blue Ocean.\n\nThe Jenkins Classic UI exists side-by-side at its usual place at http://localhost:8080/jenkins.\n\nNOTE: while running in this mode, Jenkins will automatically re-compile your JavaScript files\nand LESS files for all local plugins (including those linked with `hpi:hpl`) where a `package.json` is found\nthat contains a `mvnbuild` script. If you would like to disable this behavior, you may set\nthe system property: `-Dblueocean.features.BUNDLE_WATCH_SKIP=true`\n\n## Browser compatibility\n\nThe obvious goal is for Blue Ocean to be runnable on all browsers on all platforms. We're not there yet, but getting\ncloser. The ultimate goal will be to have browser support in line with the [Jenkins Browser Compatibility Matrix](https://wiki.jenkins-ci.org/display/JENKINS/Browser+Compatibility+Matrix). \n\nList of browsers where we know Blue Ocean is not yet runnable:\n\n* Internet Explorer < 11 on Windows (the aim is to keep IE 11 working, but help is needed to maintain a Windows test environment in the pipeline)\n\n* AmigaOS\n\n## Developing \n\nFollow the steps above for getting it running first. \n\nLook in following README's for:\n* ``blueocean-rest`` for how to navigate the rest api. \n* ``blueocean-dashboard`` guide on how to modify the GUI in the dashboard plugin. \n* ``blueocean-rest-impl`` for more details on how to actively develop this plugin for backend codebases.\n\n\n### Building plugins for Blue Ocean\n\nBlue Ocean plugins use the same plugin mechanism as Jenkins for distribution and installation, but involve a lot more JavaScript if they have GUI elements. \n\nThe best way to get started is to look at the tutorial and Yeoman starter project here: \nhttps://www.npmjs.com/package/generator-blueocean-usain\nThe usual plugin guide also applies for Jenkins: https://wiki.jenkins-ci.org/display/JENKINS/Plugin+tutorial#Plugintutorial-CreatingaNewPlugin \n\nAsk for help in the gitter room or on the jenkins-ux google group if you are working on a plugin. \n\n#### Extension points\n\nBlue Ocean has javascript extension points that currently work with react components. This area is a work in progress, and there is no programmatic listing of all the current extension points in a plugin. However, you can grep/search for '<Extensions.Renderer extensionPoint=' and find named extension points. Plugins can contribute to these by declaring what components to plugin in those extension points in their jenkins-js-extension.yaml file (see [link](./blueocean-pipeline-editor/src/main/js/jenkins-js-extension.yaml) for a real world example - the editor implements a few extension points as react components, even css). The editor plugin is a good reference point for blue ocean plugins: [blueocean-pipeline-editor](./blueocean-pipeline-editor).\n\n\n#### Tools needed\n\n*Maven* is used for most building - install Maven and JDK8 (ideally).\n\nAs npm packages are used node-gyp may be involved and this can require some tools installed to build native dependencies (native components are not used at runtime) - see https://www.npmjs.com/package/node-gyp for instructions for your platform\n\nIf you are working on the JavaScript, you will need node installed, look at the version in the pom.xml for the minimum version required.\n\n__NOTE__: look in the README.md of the respective modules for more detailed dev docs. \n\n#### NPM and shrinkwrap\n\n- NOTE: after running `npm install` you will have some copies of Node you can use without installing it globally on your system,\ne.g. from the repository root: `PATH=blueocean-web/node:$PATH npm <do-stuff>`\n- Ensure your npm is 3.10.8+ as this release fixes some important bugs with shrinkwrap, notably #11735 in [notes](https://github.com/npm/npm/releases/tag/v3.10.8)\n- Don't edit package.json directly; use npm install to ensure that both package.json and npm-shrinkwrap.json are updated.\n- To add or update a dependency:\n   - `npm install packageName@3.2.1 -S -E`\n- To add or update a devDependency:\n   - `npm install packageName@3.2.1 -D -E`\n- If you are handling a merge conflict in package.json, resolve the conflict in the file as normal. Then use\nthe appropriate command to update each conflicting dependency to ensure shrinkwrap is updated.\n- To remove a dependency:\n   - `npm uninstall packageName -S`\n- To remove a devDependency:\n   - `npm uninstall packageName -D`\n- If you ever need to create a shrinkwrap for the first time, use `npm shrinkwrap --dev` to ensure devDependencies are\nincluded in the shrinkwrap.\n\nFull docs on [npm shrinkwrap](https://docs.npmjs.com/cli/shrinkwrap)\nInformation on [building with shrinkwrap](https://docs.npmjs.com/cli/shrinkwrap#building-shrinkwrapped-packages)\n\nIn case you want to update your dependencies with something like ```npm-check-updates``` make sure you follow the simple steps:\n\n```\nncu -a\nrm -rf node_modules npm-shrinkwrap.json\nnpm i\nnpm shrinkwrap --dev\n```\n\n#### Source code formatting\n\nWe are using [prettier.js](https://prettier.io/) to format JavaScript in order to keep source consistent automatically\nrather than with build-time errors about unformatted code. We do this via a pre-commit hook, which you will have to \nenable in your local checkout.\n\n* From the root directory of your `blueocean/` clone, first create the symlink:\n\n````\njdoe@localhost> ln -s ../../bin/pre-commit.js .git/hooks/pre-commit\n````\n        \n* Check the symlink, because if it's wrong git will silently ignore it:\n\n````\njdoe@localhost> file .git/hooks/pre-commit\n# => .git/hooks/pre-commit: a /usr/bin/env node script text executable, ASCII text\n````\n\n* Check (with no staged changes) to make sure it's going to run successfully in your environment:\n\n````\njdoe@localhost> .git/hooks/pre-commit\n# => No staged files to format.\n````\n\n## Contributing - help wanted\n\n### i18n - Sprechen Sie Deutsch?\n\nWe have full i18n support in our plugins. Please read the [i18n documentation](./docu/I18N.md) on how you can provide new translations and how to work with i18n.\n\n### contributing guidelines\n\nWant to get involve with blueocean? See our [contributing guidelines](./CONTRIBUTING.md) for more informations.\n\n\n## Debug and live reload with IntelliJ\nAutomatically deploys changes to an instance of blueocean that is run with hpi:run.\n\n1. Enable class reloading: Preferences > Build, Execution, Deployment > Debugger > HotSwap\n  * Reload classes in background\n  * Reload classes after compilation: always\n2. Create a Maven Run/Debug configuration\n * Working Directory: `<project root>/all`\n * Command `hpi:run`\n * Runner > Properties: Enable Skip tests\n * Runner > VM Options: `-Dblueocean.config.file=../app.properties`\n3. Debug new configuration, and after compilation the class file will be reloaded\n\n## Help\n\nNeed help? \n\nYou can chat to folks on #jenkins-ux on freenode (IRC). You can also email the jenkins-dev email list (google group: https://groups.google.com/forum/#!forum/jenkinsci-dev) - but ensure you use the prefix [Blue Ocean] in your subject line when posting.\n\n## Presentations\n\nAdvanced front end development with react, redux and stuff by @scherler: https://docs.google.com/presentation/d/1dbaYTIGjGT9xX1JnWnaqjMumq94M9nGwljfMQaVtUFc/edit?usp=sharing\n\nWatch @jenkinsci on Twitter for frequent updates and news. \n\n## Upgrading dependencies\n\nIf you wish to upgrade dependencies or test an upgrade to something like pipeline (as an example), `pom.xml` in the root of the project should have all the versions specified, a pull request to validate the changes is appreciated. \n\nIf you wanted to see if a new version of a library works with blue ocean: \n\n* If it isn't published yet, release a beta to the experimental update center\n* Open a pull request with the changes to the `pom.xml` in the root of this project (beta dependencies are fine)\n* Mark the pull request as \"needs-review\"\n* Make sure to \"@mention\" people - @michaelneale @vivek are some good ones to start with in a pull request description\n* IF the dependency being upgraded is only released to the experimental update center (ie a beta) please also mark the PR as 'DO NOT MERGE' (once it has been released to the main update center, this can be removed)\n* Check back later for build success (ie unit tests)\n* The Acceptance Test Harness will normally be automatically triggered after a successful PR build, however, it ie best to check it has run: (https://ci.blueocean.io/job/ATH-Jenkinsfile/job/master/) - consult a blue ocean contributor (see below) and they will ensure it has run. This is required for a dependency change.\n* Contact a contributor (see below) to let them know of your proposed change so they can review it and do extra testing\n* Ensure any dependencies are released to the non beta UC, before merging to master when approved. \n\nOnce the PR is accepted, it will be in use on \"dogfood\" on ci.blueocean.io/blue - and thus it will be in day to day use almost immediately. If it does bad things, expect to hear about it. \n\n\nContacting contributors: \n\nGitter is the day to day chat venue used, you can log in with your github identity.\n\n* look for @michaelneale, @kzantow, @vivek on gitter https://gitter.im/jenkinsci/blueocean-plugin or #jenkins-ux on freenode\n* Post to the mailing list: https://groups.google.com/forum/#!forum/jenkinsci-ux\n\n\nThe Acceptance test suite is located here: [acceptance-tests](./acceptance-tests)\n\n\n## Releasing\n\nWhen the ATH passes and there is a consensus that a release can be performed: \n\n* Ensure that the person doing the release has permissions for all the blueocean modules here: https://github.com/jenkins-infra/repository-permissions-updater/tree/master/permissions (or it will fail)\n* Switch to the branch to release from (usually master)\n* Run a `mvn clean -DcleanNode install -DskipTests` once to clear the decks if you are working on other branches\n* Perform the release: \n\n```\n$ mvn release:prepare -DautoVersionSubmodules=true\n$ mvn release:perform\n```\n\nThis will take a while to build and upload. \n\n* Update release notes on the wiki page\n\nIt will take a few hours to propagate to UC. \n"
        },
        {
          "name": "acceptance-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-bitbucket-pipeline",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-commons",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-config",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-core-js",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-dashboard",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-events",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-executor-info",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-git-pipeline",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-github-pipeline",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-i18n",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-jira",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-jwt",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-material-icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-personalization",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-pipeline-api-impl",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-pipeline-editor",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-pipeline-scm-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-rest-impl",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-rest",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean-web",
          "type": "tree",
          "content": null
        },
        {
          "name": "blueocean",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docu",
          "type": "tree",
          "content": null
        },
        {
          "name": "jenkins-design-language",
          "type": "tree",
          "content": null
        },
        {
          "name": "js-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 25.251953125,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>org.jenkins-ci.plugins</groupId>\n    <artifactId>plugin</artifactId>\n    <version>4.81</version>\n    <relativePath />\n  </parent>\n\n  <groupId>io.jenkins.blueocean</groupId>\n  <artifactId>blueocean-parent</artifactId>\n  <version>${revision}${changelist}</version>\n  <packaging>pom</packaging>\n\n  <name>Blue Ocean Parent</name>\n\n  <licenses>\n    <license>\n      <name>MIT License</name>\n      <url>https://opensource.org/licenses/MIT</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <properties>\n    <revision>1.27.17</revision>\n    <changelist>-SNAPSHOT</changelist>\n    <gitHubRepo>jenkinsci/blueocean-plugin</gitHubRepo>\n    <!--\n        when changing jenkins core version please remember to change it in Jenkinsfile as well jenkinsVersions\n        and  acceptance-tests/runner/scripts/args.sh\n    -->\n    <jenkins.version>2.426.3</jenkins.version>\n    <javadoc.exec.goal>javadoc-no-fork</javadoc.exec.goal> <!-- stop initialize phase plugins executing twice -->\n    <byte-buddy.version>1.14.9</byte-buddy.version>\n    <node.version>10.13.0</node.version>\n    <npm.version>6.14.4</npm.version>\n    <!-- TODO: Remove this and related dependencyManagement entries once it is included in the BOM. -->\n    <pipeline-model-definition.version>2.2198.v41dd8ef6dd56</pipeline-model-definition.version>\n    <jacoco.haltOnFailure>false</jacoco.haltOnFailure>\n    <jacoco.line.coverage>0.70</jacoco.line.coverage>\n    <jacoco.missedclass.coverage>0.00</jacoco.missedclass.coverage>\n    <hpi.dependencyResolution>runtime</hpi.dependencyResolution>\n    <access-modifier-checker.failOnError>true</access-modifier-checker.failOnError>\n    <!-- override this as memory in parent pom is not big enough -->\n    <argLine>-Xmx3g -Xms3g -Djava.awt.headless=true -XX:+HeapDumpOnOutOfMemoryError -XX:+TieredCompilation -XX:TieredStopAtLevel=1 @{jenkins.addOpens} @{jenkins.insaneHook}</argLine>\n  </properties>\n\n  <scm child.scm.connection.inherit.append.path=\"false\" child.scm.developerConnection.inherit.append.path=\"false\" child.scm.url.inherit.append.path=\"false\">\n    <connection>scm:git:https://github.com/${gitHubRepo}.git</connection>\n    <developerConnection>scm:git:https://github.com/${gitHubRepo}.git</developerConnection>\n    <url>https://github.com/${gitHubRepo}</url>\n    <tag>${scmTag}</tag>\n  </scm>\n\n  <url>https://github.com/jenkinsci/blueocean-plugin</url>\n\n  <developers>\n     <developer>\n       <id>scherler</id>\n       <name>Thorsten Iberian Sumurai</name>\n     </developer>\n     <developer>\n       <id>cliffmeyers</id>\n       <name>Cliff Meyers</name>\n     </developer>\n     <developer>\n       <id>tfennelly</id>\n       <name>Tom Fennelly</name>\n     </developer>\n     <developer>\n       <id>vivek</id>\n       <name>Vivek Pandey</name>\n     </developer>\n     <developer>\n       <id>kohsuke</id>\n       <name>Kohsuke</name>\n     </developer>\n     <developer>\n       <id>sophistifunk</id>\n       <name>Josh McDonald</name>\n     </developer>\n     <developer>\n       <id>imeredith</id>\n       <name>Ivan Meredith</name>\n     </developer>\n     <developer>\n       <id>michaelneale</id>\n       <name>Michael Neale</name>\n     </developer>\n     <developer>\n       <id>kzantow</id>\n       <name>Keith Zantow</name>\n     </developer>\n     <developer>\n       <id>i386</id>\n       <name>James Dumay</name>\n     </developer>\n     <developer>\n       <id>marcesher</id>\n       <name>Marc</name>\n     </developer>\n     <developer>\n       <id>dragoonis</id>\n       <name>Paul Dragoonis</name>\n     </developer>\n     <developer>\n       <id>pragmaticivan</id>\n       <name>Ivan Santos</name>\n     </developer>\n     <developer>\n       <id>PeterDaveHello</id>\n       <name>Peter Dave Hello</name>\n     </developer>\n     <developer>\n       <id>alexsomai</id>\n       <name>Alexandru Somai</name>\n     </developer>\n  </developers>\n\n  <modules>\n    <module>jenkins-design-language</module>\n    <module>blueocean-core-js</module>\n    <module>blueocean-commons</module>\n    <module>blueocean-i18n</module>\n    <module>blueocean-web</module>\n    <module>blueocean-rest</module>\n    <module>blueocean-pipeline-scm-api</module>\n    <module>blueocean-rest-impl</module>\n    <module>blueocean-pipeline-api-impl</module>\n    <module>blueocean-events</module>\n    <module>blueocean-dashboard</module>\n    <module>blueocean-personalization</module>\n    <module>blueocean-config</module>\n    <module>blueocean</module>\n    <module>blueocean-jwt</module>\n    <module>blueocean-github-pipeline</module>\n    <module>blueocean-git-pipeline</module>\n    <module>blueocean-bitbucket-pipeline</module>\n    <module>blueocean-pipeline-editor</module>\n    <module>blueocean-jira</module>\n    <module>blueocean-executor-info</module>\n  </modules>\n\n  <repositories>\n    <repository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n      <snapshots>\n        <enabled>true</enabled>\n      </snapshots>\n    </repository>\n  </repositories>\n  <pluginRepositories>\n    <pluginRepository>\n      <id>repo.jenkins-ci.org</id>\n      <url>https://repo.jenkins-ci.org/public/</url>\n    </pluginRepository>\n  </pluginRepositories>\n\n  <dependencies>\n      <dependency>\n          <groupId>org.slf4j</groupId>\n          <artifactId>slf4j-api</artifactId>\n          <scope>provided</scope>\n      </dependency>\n      <dependency>\n          <groupId>org.slf4j</groupId>\n          <artifactId>jcl-over-slf4j</artifactId>\n          <scope>provided</scope>\n      </dependency>\n      <dependency>\n          <groupId>org.slf4j</groupId>\n          <artifactId>log4j-over-slf4j</artifactId>\n          <scope>provided</scope>\n      </dependency>\n      <dependency>\n          <groupId>org.slf4j</groupId>\n          <artifactId>slf4j-jdk14</artifactId>\n          <scope>provided</scope>\n      </dependency>\n      <dependency>\n          <groupId>commons-io</groupId>\n          <artifactId>commons-io</artifactId>\n          <scope>provided</scope>\n      </dependency>\n      <dependency>\n          <groupId>commons-codec</groupId>\n          <artifactId>commons-codec</artifactId>\n          <scope>provided</scope>\n      </dependency>\n      <dependency>\n          <groupId>commons-lang</groupId>\n          <artifactId>commons-lang</artifactId>\n          <scope>provided</scope>\n      </dependency>\n      <dependency>\n          <groupId>org.mockito</groupId>\n          <artifactId>mockito-core</artifactId>\n          <scope>test</scope>\n      </dependency>\n      <dependency>\n          <groupId>com.mashape.unirest</groupId>\n          <artifactId>unirest-java</artifactId>\n          <scope>test</scope>\n          <exclusions>\n              <exclusion>\n                  <groupId>org.json</groupId>\n                  <artifactId>json</artifactId>\n              </exclusion>\n          </exclusions>\n      </dependency>\n  </dependencies>\n\n  <dependencyManagement>\n    <dependencies>\n\n        <dependency>\n            <groupId>io.jenkins.tools.bom</groupId>\n            <artifactId>bom-2.426.x</artifactId>\n            <version>2961.v1f472390972e</version>\n            <scope>import</scope>\n            <type>pom</type>\n        </dependency>\n\n        <!-- Module versions -->\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-commons</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-i18n</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>jenkins-design-language</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-core-js</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-web</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-rest</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-dashboard</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-personalization</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-events</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-rest-impl</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-pipeline-scm-api</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-pipeline-api-impl</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-config</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-jwt</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-jira</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-executor-info</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <!-- TODO: should be moved out of blueocean repo as separate plugin -->\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-github-pipeline</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-git-pipeline</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-bitbucket-pipeline</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>blueocean-pipeline-editor</artifactId>\n            <version>${project.version}</version>\n        </dependency>\n\n        <!-- Other -->\n        <dependency>\n            <groupId>org.apache.maven</groupId>\n            <artifactId>maven-artifact</artifactId>\n            <version>3.9.2</version>\n        </dependency>\n\n        <!-- Other -->\n        <dependency>\n            <groupId>io.jenkins.blueocean.rest.annotation</groupId>\n            <artifactId>capability-annotation</artifactId>\n            <version>1.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.jenkins-ci.plugins</groupId>\n            <artifactId>blueocean-autofavorite</artifactId>\n            <version>1.2.4</version>\n        </dependency>\n        <dependency>\n            <groupId>org.jenkins-ci.plugins</groupId>\n            <artifactId>blueocean-display-url</artifactId>\n            <version>2.4.2</version>\n        </dependency>\n        <dependency>\n            <groupId>org.jenkins-ci.plugins</groupId>\n            <artifactId>jira</artifactId>\n            <version>3.12</version>\n            <exclusions>\n                <exclusion>\n                    <groupId>com.google.guava</groupId>\n                    <artifactId>guava</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.fasterxml.jackson.core</groupId>\n                    <artifactId>jackson-databind</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>com.fasterxml.jackson.core</groupId>\n                    <artifactId>jackson-core</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.springframework</groupId>\n                    <artifactId>spring-beans</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.objenesis</groupId>\n                    <artifactId>objenesis</artifactId>\n                </exclusion>\n                <!-- commons-lang3 is provided by commons-lang3-api plugin -->\n                <exclusion>\n                    <groupId>org.apache.commons</groupId>\n                    <artifactId>commons-lang3</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>org.jenkins-ci.main</groupId>\n            <artifactId>jenkins-test-harness-tools</artifactId>\n            <version>2.2</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.jenkins-ci.main</groupId>\n            <artifactId>jenkins-test-harness</artifactId>\n            <version>${jenkins-test-harness.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>oro</groupId>\n            <artifactId>oro</artifactId>\n            <version>2.0.8</version>\n        </dependency>\n        <dependency>\n            <groupId>org.bitbucket.b_c</groupId>\n            <artifactId>jose4j</artifactId>\n            <version>0.9.6</version>\n        </dependency>\n        <dependency>\n            <groupId>io.keen</groupId>\n            <artifactId>keen-client-api-java</artifactId>\n            <version>5.6.0</version>\n            <exclusions>\n                <!-- upper bound fix, git plugin pulls in later versions -->\n                <exclusion>\n                    <groupId>com.fasterxml.jackson.core</groupId>\n                    <artifactId>jackson-databind</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <!-- used in blueocean-pipeline-editor test -->\n        <dependency>\n            <groupId>org.jenkins-ci.plugins</groupId>\n            <artifactId>sonar</artifactId>\n            <version>2.13.1</version>\n        </dependency>\n\n        <!-- Test dependencies -->\n        <dependency>\n            <groupId>com.mashape.unirest</groupId>\n            <artifactId>unirest-java</artifactId>\n            <version>1.4.9</version>\n            <scope>test</scope>\n            <exclusions>\n                <exclusion>\n                    <groupId>org.apache.httpcomponents</groupId>\n                    <artifactId>httpclient</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.httpcomponents</groupId>\n                    <artifactId>httpmime</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.httpcomponents</groupId>\n                    <artifactId>httpcore</artifactId>\n                </exclusion>\n                <exclusion>\n                    <groupId>org.apache.httpcomponents</groupId>\n                    <artifactId>httpasyncclient</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n        <dependency>\n            <groupId>net.bytebuddy</groupId>\n            <artifactId>byte-buddy</artifactId>\n            <version>${byte-buddy.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>net.bytebuddy</groupId>\n            <artifactId>byte-buddy-agent</artifactId>\n            <version>${byte-buddy.version}</version>\n        </dependency>\n        <!-- some tests need to  write final field -->\n        <dependency>\n            <groupId>org.powermock</groupId>\n            <artifactId>powermock-reflect</artifactId>\n            <version>2.0.9</version>\n        </dependency>\n        <dependency>\n            <groupId>com.github.tomakehurst</groupId>\n            <artifactId>wiremock-jre8-standalone</artifactId>\n            <version>2.35.1</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.jenkins-ci.plugins</groupId>\n            <artifactId>async-http-client</artifactId>\n            <version>1.7.24.1</version>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <!--\n            jsoup HTML parser library @ http://jsoup.org/\n            Using this to get the raw/unprocessed HTML from Jenkins\n            -->\n            <groupId>org.jsoup</groupId>\n            <artifactId>jsoup</artifactId>\n            <version>1.15.3</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.damnhandy</groupId>\n            <artifactId>handy-uri-templates</artifactId>\n            <version>2.1.8</version>\n        </dependency>\n        <!-- TODO: Remove these and associated property once included in BOM -->\n        <dependency>\n            <groupId>org.jenkinsci.plugins</groupId>\n            <artifactId>pipeline-model-api</artifactId>\n            <version>${pipeline-model-definition.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.jenkinsci.plugins</groupId>\n            <artifactId>pipeline-model-definition</artifactId>\n            <version>${pipeline-model-definition.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.jenkinsci.plugins</groupId>\n            <artifactId>pipeline-model-extensions</artifactId>\n            <version>${pipeline-model-definition.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>org.jenkinsci.plugins</groupId>\n            <artifactId>pipeline-stage-tags-metadata</artifactId>\n            <version>${pipeline-model-definition.version}</version>\n        </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <build>\n      <pluginManagement>\n          <plugins>\n              <plugin>\n                  <groupId>org.kohsuke</groupId>\n                  <artifactId>access-modifier-checker</artifactId>\n                  <configuration>\n                      <failOnError>${access-modifier-checker.failOnError}</failOnError>\n                  </configuration>\n              </plugin>\n          </plugins>\n      </pluginManagement>\n    <plugins>\n        <plugin>\n            <artifactId>maven-enforcer-plugin</artifactId>\n            <executions>\n                <execution>\n                    <id>enforce-banned-dependencies</id>\n                    <goals>\n                        <goal>enforce</goal>\n                    </goals>\n                    <configuration>\n                        <rules>\n                            <bannedDependencies>\n                                <excludes>\n                                    <exclude>org.apache.commons:commons-lang3</exclude>\n                                </excludes>\n                                <searchTransitive>false</searchTransitive>\n                            </bannedDependencies>\n                        </rules>\n                    </configuration>\n                </execution>\n            </executions>\n        </plugin>\n    </plugins>\n  </build>\n\n    <profiles>\n        <profile>\n            <id>node-execution</id>\n            <activation>\n                <file>\n                    <exists>.mvn_exec_node</exists>\n                </file>\n            </activation>\n            <build>\n                <plugins>\n\n                    <plugin>\n                        <groupId>io.jenkins.blueocean</groupId>\n                        <artifactId>blueocean-maven-plugin</artifactId>\n                        <version>0.0.3</version>\n                        <executions>\n                            <execution>\n                                <!-- unpack package.json + JS into node_modules for any deps with JS files -->\n                                <!-- NOTE: must use 'initialize' and be declared before frontend-plugin so this occurs before npm install -->\n                                <id>upstream-dependencies</id>\n                                <phase>initialize</phase>\n                                <goals>\n                                    <goal>process-node-dependencies</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>package</id>\n                                <goals>\n                                    <goal>package-blueocean-resources</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>com.github.eirslett</groupId>\n                        <artifactId>frontend-maven-plugin</artifactId>\n                        <version>${frontend-version}</version>\n\n                        <executions>\n\n                            <execution>\n                                <phase>initialize</phase>\n                                <id>install node and npm</id>\n                                <goals>\n                                    <goal>install-node-and-npm</goal>\n                                </goals>\n                                <configuration>\n                                    <nodeVersion>v${node.version}</nodeVersion>\n                                    <npmVersion>${npm.version}</npmVersion>\n                                    <nodeDownloadRoot>https://repo.jenkins-ci.org/nodejs-dist/</nodeDownloadRoot>\n                                    <npmDownloadRoot>https://repo.jenkins-ci.org/npm-dist/</npmDownloadRoot>\n                                </configuration>\n                            </execution>\n\n                            <execution>\n                                <phase>initialize</phase>\n                                <id>npm install</id>\n                                <goals>\n                                    <goal>npm</goal>\n                                </goals>\n                                <configuration>\n                                    <!-- Note that this may not be omitted lest maven-release-plugin be confused (frontend-maven-plugin #109): -->\n                                    <arguments>install ${npm.loglevel}</arguments>\n                                </configuration>\n                            </execution>\n\n                            <execution>\n                                <phase>generate-sources</phase>\n                                <id>npm mvnbuild</id>\n                                <goals>\n                                    <goal>npm</goal>\n                                </goals>\n                                <configuration>\n                                    <!-- The package.json must define an \"mvnbuild\" script -->\n                                    <arguments>run mvnbuild</arguments>\n                                </configuration>\n                            </execution>\n\n                            <execution>\n                                <phase>test</phase>\n                                <id>npm mvntest</id>\n                                <goals>\n                                    <goal>npm</goal>\n                                </goals>\n                                <configuration>\n                                    <!-- The package.json must define an \"mvntest\" script -->\n                                    <arguments>run mvntest</arguments>\n                                </configuration>\n                            </execution>\n\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>ath-build</id>\n            <modules>\n                <module>acceptance-tests</module>\n            </modules>\n        </profile>\n        <profile>\n            <id>ci</id>\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <plugin>\n                            <groupId>org.apache.maven.plugins</groupId>\n                            <artifactId>maven-surefire-plugin</artifactId>\n                            <configuration>\n                                <excludedGroups>flaky</excludedGroups>\n                                <rerunFailingTestsCount>2</rerunFailingTestsCount>\n                            </configuration>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.5595703125,
          "content": "{\n\t\"compilerOptions\": {\n\t\t\"outDir\": \"build\",\n\t\t\"module\": \"commonjs\",\n\t\t\"moduleResolution\": \"node\",\n\t\t\"target\": \"es5\",\n\t\t\"jsx\": \"react\",\n\t\t\"allowJs\": false,\n\t\t\"allowSyntheticDefaultImports\": true,\n\t\t\"experimentalDecorators\": true,\n\t\t\"forceConsistentCasingInFileNames\": true,\n        \"noImplicitReturns\": true,\n        \"noImplicitThis\": true,\n        \"strictNullChecks\": true,\n        \"suppressImplicitAnyIndexErrors\": true,\n\t\t\"noUnusedLocals\": true,\n\t\t\"types\": [\n\t\t\t\"bluebird-global\"\n\t\t],\n\t\t\"lib\": [\n\t\t\t\"dom\",\n\t\t\t\"es2018\"\n\t\t]\n\t},\n\t\"exclude\": [\n\t\t\"target\",\n\t\t\"**/*.jsx\"\n\t]\n}\n"
        }
      ]
    }
  ]
}