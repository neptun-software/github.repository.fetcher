{
  "metadata": {
    "timestamp": 1736708614117,
    "page": 932,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bingoogolapple/BGASwipeBackLayout-Android",
      "stars": 2309,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4482421875,
          "content": "# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n/*/build/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# Eclipse project files\n.classpath\n.project\n.settings/\n\n# Intellij project files\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# Mac system files\n.DS_Store\n\n*.keystore\n\ncaptures/"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.8779296875,
          "content": "Change Log\n==========\n\nVersion 2.0.2 *(2021-04-05)*\n----------------------------\n\n* 从 JCenter 迁移到 JitPack\n\nVersion 2.0.1 *(2019-11-16)*\n----------------------------\n\n* 修复 Android P 上滑动返回闪屏\n\nVersion 2.0.0 *(2019-11-10)*\n----------------------------\n\n* 支持 androidx\n\nVersion 1.2.1 *(2019-11-16)*\n----------------------------\n\n* 修复 Android P 上滑动返回闪屏\n\nVersion 1.2.0 *(2018-07-10)*\n----------------------------\n\nVersion 1.2.0 *(2018-10-27)*\n----------------------------\n\n* fix #122 fix #134 fix #138\n\nVersion 1.1.9 *(2018-06-20)*\n----------------------------\n\n* 修复某些手机能够动态设置底部导航导致布局显示不全的问题 fix #108 fix #106 fix #99 fix #101\n\nVersion 1.1.8 *(2017-12-21)*\n----------------------------\n\n* 前一个界面设置了 gravity 时，滑动返回导致布局下移 fix #78 fix #86\n\nVersion 1.1.7 *(2017-12-14)*\n----------------------------\n\n* 升级 gradle 插件到 3.x fix #82\n\nVersion 1.1.6 *(2017-11-04)*\n----------------------------\n\n* 修复非微信滑动返回样式时，先触摸滑动然后按返回键出现白屏\n\nVersion 1.1.5 *(2017-10-25)*\n----------------------------\n\n* fix #70\n\nVersion 1.1.4 *(2017-10-21)*\n----------------------------\n\n* fix #65\n* fix #66\n* 修改初始化方法 BGASwipeBackHelper.init\n  * 第一个参数：应用程序上下文\n  * 第二个参数：如果发现滑动返回后立即触摸界面时应用崩溃，请把该界面里比较特殊的 View 的 class 添加到该集合中，目前在库中已经添加了 WebView 和 SurfaceView\n\nVersion 1.1.3 *(2017-10-15)*\n----------------------------\n\n* 支持非透明主题模式\n* 修改初始化方法 BGASwipeBackHelper.init\n  * 第一个参数：应用程序上下文\n  * 第二个参数：是否使用透明主题模式，建议传入 false 来使用非透明主题模式\n  * 第三个参数：使用非透明主题时，如果发现滑动返回后立即触摸界面时应用崩溃，请把该界面里比较特殊的 View 的 class 添加到该集合中，目前在库中已经添加了 WebView 和 SurfaceView\n\nVersion 1.1.2 *(2017-10-13)*\n----------------------------\n\n* 初始化由「BGASwipeBackManager.getInstance().init(this)」改成「BGASwipeBackHelper.init(this)」\n* 移除 BGASwipeBackManager 的 ignoreNavigationBarModels 方法\n* 支持全屏、横屏\n* 修复滑动释放逻辑错误\n* 修复部分手机底部出现出现白色区域\n\nVersion 1.1.1 *(2017-09-07)*\n----------------------------\n\n* 修复部分手机底部出现出现白色区域\n\nVersion 1.1.0 *(2017-08-01)*\n----------------------------\n\n* BGASwipeBackManager 增加 ignoreNavigationBarModels 方法，忽略底部出现空白区域的手机对应的 android.Build.MODEL，修复部分手机底部出现出现白色区域\n\nVersion 1.0.9 *(2017-08-01)*\n----------------------------\n\n* fix #45 #47 #48 修复华为手机底部白色问题\n\nVersion 1.0.8 *(2017-03-13)*\n----------------------------\n\n* fix #31 修复使用微信滑动返回方式，界面有明显的抖动\n* fix #30 修复正在滑动时，按下返回键上一个 Activity View 显示异常\n\nVersion 1.0.7 *(2017-01-11)*\n----------------------------\n\n* 在 BGASwipeBackHelper 中处理开始滑动返回时自动关闭软键盘\n\nVersion 1.0.6 *(2017-01-11)*\n----------------------------\n\n* 必须在 Application 的 onCreate 方法中执行 BGASwipeBackHelper.init(this) 来初始化滑动返回，避免任务栈里只有一个 Activity 时滑动返回看见 Launcher\n\nVersion 1.0.5 *(2017-01-09)*\n----------------------------\n\n* 修复 Nexus 4 无法获取底部导航栏导致界面底部出现空白区域\n\nVersion 1.0.4 *(2017-01-08)*\n----------------------------\n\n* fix #10 修复4.4真机上结合 CoordinatorLayout 一起使用时底部出现空白\n* fix #14 修复部分底部导航栏可以动态设置显示状态的手机出现遮挡\n\nVersion 1.0.3 *(2017-01-04)*\n----------------------------\n\n* 增加滑动返回帮助类 BGASwipeBackHelper，详细用法情况最新版 README 文档\n\nVersion 1.0.2 *(2016-12-29)*\n----------------------------\n\n* 增加 setIsWeChatStyle 方法，设置是否是微信滑动返回样式，默认值为 true「如果需要启用微信滑动返回样式，必须在 Application 的 onCreate 方法中执行 BGASwipeBackHelper.init(this)」\n* 增加 setShadowResId 方法，设置阴影资源 id，默认值为 R.drawable.bga_swipebacklayout_shadow\n* 增加 setIsShadowAlphaGradient，设置阴影区域的透明度是否根据滑动的距离渐变。默认值为 true\n\nVersion 1.0.1 *(2016-12-28)*\n----------------------------\n\n* 增加 setSwipeBackEnable 方法，设置滑动返回是否可用，默认值为 true\n* 增加 setIsNeedShowShadow 方法，设置是否显示滑动返回的阴影效果，默认值为 true\n* 增加 setIsOnlyTrackingLeftEdge 方法，设置是否仅仅跟踪左侧边缘的滑动返回，默认值为 true\n\nVersion 1.0.0 *(2016-12-27)*\n----------------------------\n\n* Initial release.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.876953125,
          "content": ":running:BGASwipeBackLayout-Android:running:\n============\n\n强烈建议与 **[StatusBarUtil](https://github.com/laobie/StatusBarUtil)** 结合着一起使用\n\n## 常见问题与反馈\n\n### 1.使用透明主题时，滑动返回看见了 Launcher\n\n保证栈底 Activity 的主题是不透明的。例如 demo 中的首个 Activity 是 SplashActivity，进入主界面后 SplashActivity 就销毁了，此时 MainActivity 就是栈底 Activity，需保证 MainActivity 的主题不透明\n\n### 2.使用非透明主题时，滑动返回结束时立即触摸界面应用程序崩溃\n\n把该崩溃界面里比较特殊的 View 的 class 添加到集合中作为「BGASwipeBackHelper.init」的第2个参数，例如地图控件。目前在库中已经添加了 WebView 和 SurfaceView，不用再次添加这两个了\n\n## 功能介绍\n\n- [x] 通过修改 support-v4 包中 SlidingPaneLayout 的源码来实现滑动返回布局\n- [x] 支持非透明主题滑动返回，不影响 Activity 生命周期\n- [x] 动态设置滑动返回是否可用\n- [x] 动态设置是否仅仅跟踪左侧边缘的滑动返回\n- [x] 动态设置是否是微信滑动返回样式\n- [x] 动态设置是否显示滑动返回的阴影效果\n- [x] 支持全屏、横屏和竖屏\n\n## 效果图与示例 apk\n\n| 普通滑动返回样式 | 微信滑动返回样式 |\n| ------------ | ------------- |\n| ![BGASwipeBackLayoutDemo](https://cloud.githubusercontent.com/assets/8949716/21512903/fac699f8-ccec-11e6-8437-1bfe8b9bd9d3.gif) | ![BGASwipeBackLayoutDemo-WeChat](https://cloud.githubusercontent.com/assets/8949716/21536263/7aa0fe88-cdbb-11e6-801d-4b370d6c454c.gif)  |\n\n| 配合滑动删除列表一起使用 | 配合 RecycerView 一起使用 |\n| ------------ | ------------- |\n| ![bgaswipebacklayout-swipe-delete](https://cloud.githubusercontent.com/assets/8949716/21843157/ec74aeec-d824-11e6-9579-77549892e273.gif) | ![bgaswipebacklayout-recycler-index](https://cloud.githubusercontent.com/assets/8949716/21843158/ec784a3e-d824-11e6-9649-7397e5aad7eb.gif)  |\n\n[点击下载 BGASwipeBackLayoutDemo.apk](http://fir.im/BGASwipeBackLayout) 或扫描下面的二维码安装\n\n![BGASwipeBackLayoutDemo apk 文件二维码](https://cloud.githubusercontent.com/assets/8949716/21510942/c8e9c9e0-ccd4-11e6-9757-bbc6653cccdb.png)\n\n### 1.添加 Gradle 依赖\n\n* 把 `maven { url 'https://jitpack.io' }` 添加到 root build.gradle 的 repositories 中\n* 在 app build.gradle 中添加如下依赖，末尾的「latestVersion」指的是徽章 [![](https://jitpack.io/v/bingoogolapple/BGASwipeBackLayout-Android.svg)](https://jitpack.io/#bingoogolapple/BGASwipeBackLayout-Android) 里的版本名称，请自行替换\n\n```groovy\nimplementation 'com.github.bingoogolapple:BGASwipeBackLayout-Android:latestVersion'\n// 换成己工程里依赖的 support-v4 的版本\nimplementation 'androidx.legacy:legacy-support-v4:1.0.0'\n```\n\n### 2.必须在 Application 的 onCreate 方法中执行 BGASwipeBackHelper.init 来初始化滑动返回\n\n```java\npublic class App extends Application {\n\n    @Override\n    public void onCreate() {\n        super.onCreate();\n\n        /**\n         * 必须在 Application 的 onCreate 方法中执行 BGASwipeBackHelper.init 来初始化滑动返回\n         * 第一个参数：应用程序上下文\n         * 第二个参数：如果发现滑动返回后立即触摸界面时应用崩溃，请把该界面里比较特殊的 View 的 class 添加到该集合中，目前在库中已经添加了 WebView 和 SurfaceView\n         */\n        BGASwipeBackHelper.init(this, null);\n    }\n}\n```\n\n### 3.将下面的代码拷贝到你自己的 BaseActivity 中，建议参考 demo 里的这个 [BaseActivity](https://github.com/bingoogolapple/BGASwipeBackLayout-Android/blob/master/demo/src/main/java/cn/bingoogolapple/swipebacklayout/demo/activity/BaseActivity.java) 来设置界面跳转动画\n\n```java\npublic abstract class BaseActivity extends AppCompatActivity implements BGASwipeBackHelper.Delegate {\n    protected BGASwipeBackHelper mSwipeBackHelper;\n    protected Toolbar mToolbar;\n\n    @Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        // 「必须在 Application 的 onCreate 方法中执行 BGASwipeBackHelper.init 来初始化滑动返回」\n        // 在 super.onCreate(savedInstanceState) 之前调用该方法\n        initSwipeBackFinish();\n        super.onCreate(savedInstanceState);\n    }\n\n    /**\n     * 初始化滑动返回。在 super.onCreate(savedInstanceState) 之前调用该方法\n     */\n    private void initSwipeBackFinish() {\n        mSwipeBackHelper = new BGASwipeBackHelper(this, this);\n\n        // 「必须在 Application 的 onCreate 方法中执行 BGASwipeBackHelper.init 来初始化滑动返回」\n        // 下面几项可以不配置，这里只是为了讲述接口用法。\n\n        // 设置滑动返回是否可用。默认值为 true\n        mSwipeBackHelper.setSwipeBackEnable(true);\n        // 设置是否仅仅跟踪左侧边缘的滑动返回。默认值为 true\n        mSwipeBackHelper.setIsOnlyTrackingLeftEdge(true);\n        // 设置是否是微信滑动返回样式。默认值为 true\n        mSwipeBackHelper.setIsWeChatStyle(true);\n        // 设置阴影资源 id。默认值为 R.drawable.bga_sbl_shadow\n        mSwipeBackHelper.setShadowResId(R.drawable.bga_sbl_shadow);\n        // 设置是否显示滑动返回的阴影效果。默认值为 true\n        mSwipeBackHelper.setIsNeedShowShadow(true);\n        // 设置阴影区域的透明度是否根据滑动的距离渐变。默认值为 true\n        mSwipeBackHelper.setIsShadowAlphaGradient(true);\n        // 设置触发释放后自动滑动返回的阈值，默认值为 0.3f\n        mSwipeBackHelper.setSwipeBackThreshold(0.3f);\n        // 设置底部导航条是否悬浮在内容上，默认值为 false\n        mSwipeBackHelper.setIsNavigationBarOverlap(false);\n    }\n\n    /**\n     * 是否支持滑动返回。这里在父类中默认返回 true 来支持滑动返回，如果某个界面不想支持滑动返回则重写该方法返回 false 即可\n     *\n     * @return\n     */\n    @Override\n    public boolean isSupportSwipeBack() {\n        return true;\n    }\n\n    /**\n     * 正在滑动返回\n     *\n     * @param slideOffset 从 0 到 1\n     */\n    @Override\n    public void onSwipeBackLayoutSlide(float slideOffset) {\n    }\n\n    /**\n     * 没达到滑动返回的阈值，取消滑动返回动作，回到默认状态\n     */\n    @Override\n    public void onSwipeBackLayoutCancel() {\n    }\n\n    /**\n     * 滑动返回执行完毕，销毁当前 Activity\n     */\n    @Override\n    public void onSwipeBackLayoutExecuted() {\n        mSwipeBackHelper.swipeBackward();\n    }\n\n    @Override\n    public void onBackPressed() {\n        // 正在滑动返回的时候取消返回按钮事件\n        if (mSwipeBackHelper.isSliding()) {\n            return;\n        }\n        mSwipeBackHelper.backward();\n    }\n}\n```\n\n### 4.强烈强烈强烈建议把 [BGASwipeBackHelper](https://github.com/bingoogolapple/BGASwipeBackLayout-Android/blob/master/library/src/main/java/cn/bingoogolapple/swipebacklayout/BGASwipeBackHelper.java) 里的每个方法的注释看一遍，只看注释就好\n\n## demo 中用到的第三方库\n\n* [StatusBarUtil](https://github.com/laobie/StatusBarUtil) A util for setting status bar style on Android App\n* [BGABaseAdapter-Android](https://github.com/bingoogolapple/BGABaseAdapter-Android) 在 AdapterView 和 RecyclerView 中通用的 Adapter 和 ViewHolder。RecyclerView 支持 DataBinding 、多种 Item 类型、添加 Header 和 Footer。RecyclerView 竖直方向通用分割线 BGADivider，吸顶分类\n* [BGAProgressBar-Android](https://github.com/bingoogolapple/BGAProgressBar-Android) 带百分比数字的水平、圆形进度条\n* [BGARefreshLayout-Android](https://github.com/bingoogolapple/BGARefreshLayout-Android) 多种下拉刷新效果、上拉加载更多、可配置自定义头部广告位\n* [BGASwipeItemLayout-Android](https://github.com/bingoogolapple/BGASwipeItemLayout-Android) 类似 iOS 带弹簧效果的左右滑动控件，可作为 AbsListView 和 RecyclerView 的 item\n* 谷爹的 support 包\n\n## 代码是最好的老师，更多详细用法请查看 [demo](https://github.com/bingoogolapple/BGASwipeBackLayout-Android/tree/master/demo):feet:\n\n## 作者联系方式\n\n| 个人主页 | 邮箱 |\n| ------------- | ------------ |\n| <a  href=\"https://www.bingoogolapple.cn\" target=\"_blank\">bingoogolapple.cn</a>  | <a href=\"mailto:bingoogolapple@gmail.com\" target=\"_blank\">bingoogolapple@gmail.com</a> |\n\n| 个人微信号 | 微信群 | 公众号 |\n| ------------ | ------------ | ------------ |\n| <img width=\"180\" alt=\"个人微信号\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/BGAQrCode.png\"> | <img width=\"180\" alt=\"微信群\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/WeChatGroup1QrCode.jpg\"> | <img width=\"180\" alt=\"公众号\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/GongZhongHao.png\"> |\n\n| 个人 QQ 号 | QQ 群 |\n| ------------ | ------------ |\n| <img width=\"180\" alt=\"个人 QQ 号\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/BGAQQQrCode.jpg\"> | <img width=\"180\" alt=\"QQ 群\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/QQGroup1QrCode.jpg\"> |\n\n## 打赏支持作者\n\n如果您觉得 BGA 系列开源库或工具软件帮您节省了大量的开发时间，可以扫描下方的二维码打赏支持。您的支持将鼓励我继续创作，打赏后还可以加我微信免费开通一年 [上帝小助手浏览器扩展/插件开发平台](https://github.com/bingoogolapple/bga-god-assistant-config) 的会员服务\n\n| 微信 | QQ | 支付宝 |\n| ------------- | ------------- | ------------- |\n| <img width=\"180\" alt=\"微信\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/donate-wechat.jpg\"> | <img width=\"180\" alt=\"QQ\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/donate-qq.jpg\"> | <img width=\"180\" alt=\"支付宝\" src=\"https://github.com/bingoogolapple/bga-god-assistant-config/raw/main/images/donate-alipay.jpg\"> |\n\n## 作者项目推荐\n\n* 欢迎您使用我开发的第一个独立开发软件产品 [上帝小助手浏览器扩展/插件开发平台](https://github.com/bingoogolapple/bga-god-assistant-config)\n\n## License\n\n    Copyright (C) 2012 The Android Open Source Project\n    Copyright 2016 bingoogolapple\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.501953125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.5.4'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'\n    }\n}\n\nallprojects {\n    repositories {\n        maven { url 'https://jitpack.io' }\n        jcenter()\n        google()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.376953125,
          "content": "ANDROID_BUILD_MIN_SDK_VERSION=14\nANDROID_BUILD_TARGET_SDK_VERSION=28\nANDROID_BUILD_SDK_VERSION=28\n\nVERSION_NAME=2.0.2\nVERSION_CODE=202\n\n# 设置为 true，Android 插件会使用相应的 AndroidX 库，而非支持库\nandroid.useAndroidX=true\n# 设置为 true，Android 插件会重写其二进制文件，自动迁移现有的第三方库以使用 AndroidX\nandroid.enableJetifier=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.02734375,
          "content": "include ':library', ':demo'\n"
        }
      ]
    }
  ]
}