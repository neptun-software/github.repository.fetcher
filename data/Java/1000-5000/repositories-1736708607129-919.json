{
  "metadata": {
    "timestamp": 1736708607129,
    "page": 919,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "guardianproject/orbot",
      "stars": 2329,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.474609375,
          "content": "# Built application files\n*.apk\n*.ap_\n*.aab\n\n# Java class files\n*.class\n\n# Local configuration file (sdk path, etc)\nlocal.properties\nkeystore.properties\n\n# Windows thumbnail db\nThumbs.db\n\n# OSX files\n.DS_Store\n\n# Android Studio\n*.iml\n.idea\n.gradle\n/build\nbuild/\ncaptures/\n\n# NDK\nobj/\n.cxx\n.externalNativeBuild\n\n# Orbot libs\nlibs/jtorctl.jar\napp/src/main/jniLibs/\napp/src/main/libs/\norbotservice/src/main/libs/\nOrbotLib/OrbotIPtProxy\n\n# Fastlane\n/fastlane/report.xml\n/fastlane/README.md\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 3.4580078125,
          "content": "image: registry.gitlab.com/fdroid/fdroidserver:buildserver-bullseye\n\n##image: openjdk:11-jdk\n\nvariables:\n  ANDROID_COMPILE_SDK: \"31\"\n  ANDROID_BUILD_TOOLS: \"31.0.0\"\n  ANDROID_SDK_TOOLS: \"6858069_latest\"\n\n\nbefore_script:\n- apt-get --quiet update --yes\n- apt-get --quiet install --yes wget tar unzip lib32stdc++6 lib32z1\n- wget --quiet --output-document=android-sdk.zip https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_TOOLS}.zip\n- unzip -d android-sdk-linux android-sdk.zip\n- echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. \"platforms;android-${ANDROID_COMPILE_SDK}\" >/dev/null\n- echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. \"platform-tools\" >/dev/null\n- echo y | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. \"build-tools;${ANDROID_BUILD_TOOLS}\" >/dev/null\n- export ANDROID_SDK_ROOT=$PWD\n- export PATH=$PATH:$PWD/platform-tools/\n- chmod +x ./gradlew\n# temporarily disable checking for EPIPE error and use yes to accept all licenses\n- set +o pipefail\n- yes | android-sdk-linux/cmdline-tools/bin/sdkmanager --sdk_root=. --licenses\n- set -o pipefail\n\nstages:\n  - build\n  - deploy\n#  - test\n\n#lintDebug:\n#  stage: build\n#  script:\n#    - ./gradlew -Pci --console=plain :app:lintDebug -PbuildDir=lint\n\nassembleDebug:\n  stage: build\n  script:\n    - ./gradlew assembleDebug lint\n  artifacts:\n    paths:\n    - app/build/outputs/\n\n#debugTests:\n#  stage: test\n#  script:\n#    - ./gradlew -Pci --console=plain :app:testReleaseflavorDebugUnitTest\n\n\n.base:\n  before_script:\n    - test -e /etc/apt/sources.list.d/bullseye-backports.list\n        || echo \"deb http://deb.debian.org/debian bullseye-backports main\" >> /etc/apt/sources.list\n    - apt update\n    - apt-get -qy install -t bullseye-backports --no-install-recommends git sdkmanager\n\n    - test -n \"$ANDROID_HOME\" || source /etc/profile.d/bsenv.sh\n\n    - export cmdline_tools_latest=\"$ANDROID_HOME/cmdline-tools/latest/bin\"\n    - test -e $cmdline_tools_latest && export PATH=\"$cmdline_tools_latest:$PATH\"\n\n    - export GRADLE_USER_HOME=$PWD/.gradle\n    - export ANDROID_COMPILE_SDK=`sed -n 's,.*compileSdkVersion\\s*\\([0-9][0-9]*\\).*,\\1,p' app/build.gradle`\n    - echo y | sdkmanager \"platforms;android-${ANDROID_COMPILE_SDK}\" > /dev/null\n  after_script:\n    # this file changes every time but should not be cached\n    - rm -f $GRADLE_USER_HOME/caches/modules-2/modules-2.lock\n    - rm -fr $GRADLE_USER_HOME/caches/*/plugin-resolution/\n  cache:\n    paths:\n      - .gradle/wrapper\n      - .gradle/caches\n\n\ndeploy_nightly:\n  extends: .base\n  stage: deploy\n  only:\n    - master\n  script:\n    - test -z \"$DEBUG_KEYSTORE\" && exit 0\n    - apt-get install -t bullseye-backports fdroidserver\n    - sed -i\n        's,<string name=\"app_name\">.*</string>,<string name=\"app_name\">OrbotNTLY</string>,'\n        app/src/main/res/values*/strings.xml\n    # add this nightly repo as a enabled repo\n    - sed -i -e '/<\\/string-array>/d' -e '/<\\/resources>/d' app/src/main/res/values/default_repos.xml\n    - echo \"<item>${CI_PROJECT_PATH}-nightly</item>\" >> app/src/main/res/values/default_repos.xml\n    - echo \"<item>${CI_PROJECT_URL}-nightly/raw/master/fdroid/repo</item>\" >> app/src/main/res/values/default_repos.xml\n    - cat config/nightly-repo/repo.xml >> app/src/main/res/values/default_repos.xml\n    - export versionCode=`printf '%d%05d' $(date '+%s'| cut -b1-8)`\n    - sed -i \"s,^\\(\\s*versionCode\\)  *[0-9].*,\\1 $versionCode,\" app/build.gradle\n    # build the APKs!\n    - ./gradlew assembleDebug\n    - fdroid nightly -v\n\n"
        },
        {
          "name": ".weblate",
          "type": "blob",
          "size": 0.08203125,
          "content": "[weblate]\nurl = https://hosted.weblate.org/api/\ntranslation = guardianproject/orbot\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.6826171875,
          "content": "This file contains the license for Orbot, a free software project to\nprovide anonymity on the Internet from a Google Android device.\n\nIt also lists the licenses for other components used by Orbot, including\nTor.\n\nFor more information about Orbot, see https://orbot.app/\n\nIf you got this file as a part of a larger bundle, there may be other\nlicense terms that you should be aware of.\n\n============================================================\n\nOrbot is distributed under this license (aka the 3-clause BSD license)\n\nCopyright (c) 2009-2010, Nathan Freitas, The Guardian Project\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n\n    * Neither the names of the copyright owners nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\nCONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\nOTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n============================================================\n\nOrbot includes the Obfs4 pluggable transport:\nhttps://gitweb.torproject.org/pluggable-transports/obfs4.git\n\nCopyright (c) 2014, Yawning Angel <yawning at torproject dot org>\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n * Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\nCONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\nOTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n============================================================\n\nOrbot contains a binary distribution of Tor:\n\nThis file contains the license for Tor,\na free software project to provide anonymity on the Internet.\n\nIt also lists the licenses for other components used by Tor.\n\nFor more information about Tor, see https://www.torproject.org/.\n\nIf you got this file as a part of a larger bundle, there may be\nother license terms that you should be aware of.\n\n============================================================\n\nTor is distributed under this license:\n\nCopyright (c) 2001-2004, Roger Dingledine\nCopyright (c) 2004-2006, Roger Dingledine, Nick Mathewson\nCopyright (c) 2007-2009, The Tor Project, Inc.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n\n    * Neither the names of the copyright owners nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\nCONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR\nOTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n============================================================\n\nsrc/common/strlcat.c and src/common/strlcpy.c by Todd C. Miller are\nlicensed under the following license:\n\n * Copyright (c) 1998 Todd C. Miller <Todd.Miller@courtesan.com>\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in\n *    the documentation and/or other materials provided with the\n *    distribution.\n * 3. The name of the author may not be used to endorse or promote\n *    products derived from this software without specific prior written\n *    permission.\n *\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR\n * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL\n * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\n * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE\n * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\n * TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY\n * WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\n * THE POSSIBILITY OF SUCH DAMAGE.\n\n============================================================\n\nIf you got Tor as a static binary with OpenSSL included, then you should\nknow:\n\n \"This product includes software developed by the OpenSSL Project\n for use in the OpenSSL Toolkit (http://www.openssl.org/)\"\n\n============================================================\n\n\"This program uses the IP-to-Country Database provided by\nWebHosting.Info (http://www.webhosting.info), available from\nhttp://ip-to-country.webhosting.info.\"\nSee the src/config/geoip file in particular.\n"
        },
        {
          "name": "OrbotLib",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.4755859375,
          "content": "<div align=\"center\">\n\n<img width=\"\" src=\"./app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png\" alt=\"Orbot\" align=\"center\"/>\n\n# Orbot\n\n### Android Onion Routing Robot\n\n[![Weblate Status](./docs/badges/translate_weblate.svg)](https://hosted.weblate.org/engage/guardianproject/)\n[![Play Downloads](./docs/badges/downloads_gplay.svg)](https://play.google.com/store/apps/details?id=org.torproject.android)\n[![Bitrise Status](./docs/badges/bitrise_workflow.svg)](https://app.bitrise.io/app/0e76c31b8e7e1801) ([CI docs](./docs/info/CI.md))\n\nOrbot is a freely licensed open-source application developed for the\nAndroid platform. It acts as a front-end for the Tor binary application,\nwhile also providing a secure HTTP Proxy for connecting web browsers and other\nHTTP client applications into the Tor SOCKS interface.\n\n***********************************************\n<img src=./fastlane/metadata/android/en-US/images/phoneScreenshots/device-2024-01.png width=\"24%\"> <img src=./fastlane/metadata/android/en-US/images/phoneScreenshots/device-2024-02.png width=\"24%\">\n<img src=./fastlane/metadata/android/en-US/images/phoneScreenshots/device-2024-03.png width=\"24%\"> <img src=./fastlane/metadata/android/en-US/images/phoneScreenshots/device-2024-04.png width=\"24%\">\n\n***********************************************\nOrbot is a crucial component of the Guardian Project, an initiative  that leads an effort\nto develop a secure and anonymous smartphone. This platform is designed for use by human rights\nactivists, journalists and others around the world. Learn more: https://guardianproject.info/\n\n***********************************************\nTor protects your privacy on the internet by hiding the connection\nbetween your Internet address and the services you use. We believe that Tor\nis reasonably secure, but please ensure you read the usage instructions and\nlearn to configure it properly. Learn more: https://torproject.org/\n\n***********************************************\n\n<div align=\"center\">\n  <table>\n    <tr>\n      <td><a href=\"https://github.com/guardianproject/orbot/releases/latest\">Download the Latest Orbot Release</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://support.torproject.org/faq/\">Tor FAQ (Frequently Asked Questions)</a></td>\n    </tr>\n    <tr>\n      <td><a href=\"https://hosted.weblate.org/engage/guardianproject/\">Please Contribute Your Translations</a></td>\n    </tr>\n  </table>\n</div>\n\n***********************************************\n**Copyright &#169; 2009-2023, Nathan Freitas, The Guardian Project**\n"
        },
        {
          "name": "app-tv",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "appcore",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.615234375,
          "content": "apply from: './dependencies.gradle'\n\n// Top-level build file where you can add configuration options common to all sub-projects/modules.\nbuildscript {\n    ext {\n        agp_version = '8.5.0'\n        kotlin_version = '2.0.0'\n    }\n\n    repositories {\n        google()\n        mavenCentral()\n        maven { url 'https://jitpack.io' }\n    }\n\n    dependencies {\n        classpath \"com.android.tools.build:gradle:$agp_version\"\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n\t\t// NOTE: Do not place your application dependencies here; they belong\n\t\t// in the individual module build.gradle files\n    }\n}\n"
        },
        {
          "name": "commons-device.gradle",
          "type": "blob",
          "size": 1.515625,
          "content": "/*\n    Applies across android app modules: {app, app-tv}\n */\napply plugin: 'com.android.application'\napply from: \"../commons.gradle\"\n\ndef keystorePropertiesFile = rootProject.file(\"keystore.properties\")\ndef keystoreProperties = new Properties()\nif (keystorePropertiesFile.canRead()) {\n    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))\n}\n//Increments versionCode by ABI type\ndef abiCodeMap = ['armeabi-v7a': '1', 'arm64-v8a': '2', 'x86': '4', 'x86_64': '5']\nandroid.applicationVariants.all { variant ->\n    variant.outputs.each { output ->\n        def baseVersionCode = abiCodeMap.get(output.getFilter(\"ABI\"))\n        if(baseVersionCode != null) {\n            output.versionCodeOverride = Integer.valueOf(variant.versionCode) + Integer.valueOf(baseVersionCode)\n        }\n    }\n}\n\nandroid {\n\n    signingConfigs {\n        release {\n            if (!keystoreProperties.stringPropertyNames().isEmpty()) {\n                keyAlias keystoreProperties['keyAlias']\n                keyPassword keystoreProperties['keyPassword']\n                storeFile file(keystoreProperties['storeFile'])\n                storePassword keystoreProperties['storePassword']\n            }\n        }\n    }\n\n    buildTypes {\n        release {\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'\n            signingConfig signingConfigs.release\n        }\n    }\n\n\n    splits {\n        abi {\n            enable true\n            reset()\n            include \"x86\", \"armeabi-v7a\", \"x86_64\", \"arm64-v8a\"\n        }\n    }\n\n}"
        },
        {
          "name": "commons.gradle",
          "type": "blob",
          "size": 0.2216796875,
          "content": "// Applies across all modules\nandroid {\n    compileSdkVersion 34\n    buildToolsVersion '34.0.0'\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_17\n        targetCompatibility JavaVersion.VERSION_17\n    }\n}\n"
        },
        {
          "name": "dependencies.gradle",
          "type": "blob",
          "size": 4.0234375,
          "content": "ext {\n    versions = [\n            android_material             : \"1.12.0\",\n            android_shell                : \"1.0.0\",\n            android_snowfall             : \"1.2.1\",\n            android_volley               : \"1.2.0\",\n            androidx_appcompat           : \"1.7.0\",\n            androidx_constraint          : \"2.1.4\",\n            androidx_coordinator         : \"1.1.0\",\n            androidx_core                : \"1.13.1\",\n            androidx_leanback            : \"1.2.0-alpha01\",\n            androidx_leanback_paging     : \"1.1.0-alpha08\",\n            androidx_leanback_tab        : \"1.1.0-beta01\",\n            androidx_localbroadcast      : \"1.1.0\",\n            androidx_multidex            : \"2.0.1\",\n            androidx_palette             : \"1.0.0\",\n            androidx_recyclerview        : \"1.2.1\",\n            apl_appintro                 : \"v4.2.3\",\n            bclogic_pulsator             : \"1.0.3\",\n            fastlane_screengrab          : \"2.1.1\",\n            guardian_jtorctl             : \"0.4.5.7\",\n         //   ipt_proxy                    : \"1.7.1\",\n            tor_android                  : \"0.4.8.13\",\n            pcap_core                    : \"1.8.2\",\n            pcap_factory                 : \"1.8.2\",\n            androidx_work                : \"2.9.0\"\n    ]\n\n    libs = [\n            android_material               : \"com.google.android.material:material:$versions.android_material\",\n            android_shell                  : \"com.jaredrummler:android-shell:$versions.android_shell\",\n            android_snowfall               : \"com.github.jetradarmobile:android-snowfall:$versions.android_snowfall\",\n            android_volley                 : \"com.android.volley:volley:$versions.android_volley\",\n            androidx_appcompat             : \"androidx.appcompat:appcompat:$versions.androidx_appcompat\",\n            androidx_constraint            : \"androidx.constraintlayout:constraintlayout:$versions.androidx_constraint\",\n            androidx_coordinator           : \"androidx.coordinatorlayout:coordinatorlayout:$versions.androidx_coordinator\",\n            androidx_core                  : \"androidx.core:core:$versions.androidx_core\",\n            androidx_leanback_core         : \"androidx.leanback:leanback:$versions.androidx_leanback\",\n            androidx_leanback_paging       : \"androidx.leanback:leanback-paging:$versions.androidx_leanback_paging\",\n            androidx_leanback_preferences  : \"androidx.leanback:leanback-preference:$versions.androidx_leanback\",\n            androidx_leanback_tab          : \"androidx.leanback:leanback-tab:$versions.androidx_leanback_tab\",\n            androidx_localbroadcast        : \"androidx.localbroadcastmanager:localbroadcastmanager:$versions.androidx_localbroadcast\",\n            androidx_multidex              : \"androidx.multidex:multidex:$versions.androidx_multidex\",\n            androidx_palette               : \"androidx.palette:palette:$versions.androidx_palette\",\n            androidx_recyclerview          : \"androidx.recyclerview:recyclerview:$versions.androidx_recyclerview\",\n            apl_appintro                   : \"com.github.apl-devs:appintro:$versions.apl_appintro\",\n            bclogic_pulsator               : \"pl.bclogic:pulsator4droid:$versions.bclogic_pulsator\",\n            fastlane_screengrab            : \"tools.fastlane:screengrab:$versions.fastlane_screengrab\",\n            guardian_jtorctl               : \"info.guardianproject:jtorctl:$versions.guardian_jtorctl\",\n         //   ipt_proxy                      : \"com.github.bitmold:OrbotIPtProxy:$versions.ipt_proxy\",\n            tor_android                    : \"info.guardianproject:tor-android:$versions.tor_android\",\n            pcap_core                      : \"org.pcap4j:pcap4j-core:$versions.pcap_core\",\n            pcap_factory                   : \"org.pcap4j:pcap4j-packetfactory-static:$versions.pcap_factory\",\n            androidx_work                  : \"androidx.work:work-runtime:$versions.androidx_work\",\n            androidx_work_kotlin           : \"androidx.work:work-runtime-ktx:$versions.androidx_work\"\n    ]\n}\n"
        },
        {
          "name": "do_release_housekeeping.sh",
          "type": "blob",
          "size": 0.091796875,
          "content": "# update geoip files from tor\ncd libs\n./build-geoip-jar.sh\ncd ..\n./update_snowflake_bridges.sh"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastlane",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.873046875,
          "content": "## Project-wide Gradle settings.\n#\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n#\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\nandroid.defaults.buildfeatures.buildconfig=true\nandroid.enableJetifier=true\nandroid.nonFinalResIds=false\nandroid.nonTransitiveRClass=true\nandroid.useAndroidX=true\norg.gradle.jvmargs=-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n#\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n#Mon Jun 20 21:44:59 EDT 2016\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.630859375,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.6982421875,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "intentintegrator",
          "type": "tree",
          "content": null
        },
        {
          "name": "libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lint.xml",
          "type": "blob",
          "size": 1.638671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<lint>\n    <!-- Our translations are crowd-sourced -->\n    <issue id=\"MissingTranslation\" severity=\"ignore\"/>\n\n    <!-- These could be fixed, then warning can be error -->\n    <issue id=\"HardcodedText\" severity=\"warning\"/>\n    <issue id=\"InlinedApi\" severity=\"warning\"/>\n    <issue id=\"LongLogTag\" severity=\"warning\"/>\n    <issue id=\"RtlEnabled\" severity=\"warning\"/>\n    <issue id=\"UnusedResources\" severity=\"warning\"/>\n    <issue id=\"WrongConstant\" severity=\"warning\"/>\n\n    <!-- this is being triggered by a javax package that is not used, so we are making it a warning -->\n    <issue id=\"InvalidPackage\" severity=\"warning\"/>\n\n    <!-- These are important to us, so promote from warning to error -->\n    <issue id=\"AppCompatMethod\" severity=\"error\"/>\n    <issue id=\"DefaultLocale\" severity=\"error\"/>\n    <issue id=\"GetInstance\" severity=\"error\"/>\n    <issue id=\"HardwareIds\" severity=\"error\"/>\n    <issue id=\"ImpliedQuantity\" severity=\"error\"/>\n    <issue id=\"LocaleFolder\" severity=\"error\"/>>\n    <issue id=\"NestedScrolling\" severity=\"error\"/>\n    <issue id=\"NewApi\" severity=\"error\"/>\n    <issue id=\"PackageManagerGetSignatures\" severity=\"error\"/>\n    <issue id=\"PluralsCandidate\" severity=\"error\"/>\n    <issue id=\"ProtectedPermissions\" severity=\"error\"/>\n    <issue id=\"RtlCompat\" severity=\"error\"/>\n    <issue id=\"SetWorldReadable\" severity=\"error\"/>\n    <issue id=\"SimpleDateFormat\" severity=\"error\"/>\n    <issue id=\"StringFormatCount\" severity=\"error\"/>\n    <issue id=\"TrustAllX509TrustManager\" severity=\"error\"/>\n    <issue id=\"Typos\" severity=\"error\"/>\n    <issue id=\"UnsafeProtectedBroadcastReceiver\" severity=\"error\"/>\n</lint>\n"
        },
        {
          "name": "orbotservice",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.6279296875,
          "content": "import org.gradle.api.initialization.resolve.RepositoriesMode\n\npluginManagement {\n    repositories {\n        google()\n        mavenCentral()\n        gradlePluginPortal()\n    }\n}\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        maven { url \"https://jitpack.io\" }\n        maven { url \"https://raw.githubusercontent.com/guardianproject/gpmaven/master\" }\n    }\n}\n\nrootProject.name = \"Orbot\"\ninclude(\n        ':app',\n        ':app-tv',\n        ':appcore',\n        ':intentintegrator',\n        ':OrbotLib',\n        ':orbotservice'\n)\n"
        },
        {
          "name": "update_snowflake_bridges.sh",
          "type": "blob",
          "size": 0.4794921875,
          "content": "wget https://gitlab.torproject.org/tpo/applications/tor-browser-build/-/raw/main/projects/tor-expert-bundle/pt_config.json?ref_type=heads\nmv \"pt_config.json?ref_type=heads\" pt_config.json\nrm -f orbotservice/src/main/assets/snowflake-brokers\nfunction bridges_conf {\n  local bridge_type=\"$1\"\n  jq -r \".bridges.\\\"$bridge_type\\\" | .[]\" \"pt_config.json\" | while read -r line; do\n    echo $line >> orbotservice/src/main/assets/snowflake-brokers\n  done\n}\n\nbridges_conf \"snowflake\"\nrm pt_config.json"
        }
      ]
    }
  ]
}