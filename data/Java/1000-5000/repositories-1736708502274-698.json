{
  "metadata": {
    "timestamp": 1736708502274,
    "page": 698,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "siyamed/android-shape-imageview",
      "stars": 2663,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0537109375,
          "content": ".gradle\n/local.properties\n.DS_Store\n/build\n*.iml\n.idea\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.6826171875,
          "content": "language: android\n\nandroid:\n  components:\n  - build-tools-23.0.1\n  - android-23\n  - extra-google-m2repository\n  - extra-android-m2repository\n  licenses:\n  - 'android-sdk-license.*'\n\nbranches:\n  only:\n    - master\n\nnotifications:\n  email: false\n\nscript: './gradlew clean build'\n\nenv:\n  global:\n   - secure: \"lIeUQHr/ayeq4lFlmSLXQWhLbssbzBB3/t7R1o1JhftaMkc/Ju6WySWdlBIweMK9mVFgV4dEx0OdSGmTvJuMpcvlR5HELoQ5Vu0Uy+y2v2TgAYhbuwi92UlHsyVnG7Pj7c0ecG1gUYqmZEbylXrWkwEsbSEtpPmNGDCfIaI9oxM=\"\n\naddons:\n  coverity_scan:\n    project:\n      name: \"siyamed/android-shape-imageview\"\n      description: \"Build submitted via Travis CI\"\n    build_command: \"./gradlew clean build\"\n    branch_pattern: master\n\nsudo: false"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0546875,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Siyamed Sinir\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.423828125,
          "content": "# Shape Image View \n[![](https://travis-ci.org/siyamed/android-shape-imageview.svg?branch=master&style=flat)](https://travis-ci.org/siyamed/android-shape-imageview/) \n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.siyamed/android-shape-imageview/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/com.github.siyamed/android-shape-imageview)\n\nProvides a set of custom shaped android imageview components, and a framework to define more shapes. Implements both **shader** and **bitmap mask** based image views. \n\n[Shader]: http://developer.android.com/reference/android/graphics/BitmapShader.html\n[Path.addPath]: http://developer.android.com/reference/android/graphics/Path.html#addPath(android.graphics.Path)\n[Path]: http://developer.android.com/reference/android/graphics/Path.html\n[xfermode]: http://developer.android.com/reference/android/graphics/Xfermode.html\n[svg_location]: library/src/main/res/raw\n[svg_rectangle]: http://www.w3schools.com/svg/svg_rect.asp \n[svg_circle]: http://www.w3schools.com/svg/svg_circle.asp \n[svg_ellipse]: http://www.w3schools.com/svg/svg_ellipse.asp\n[svg_polygon]: http://www.w3schools.com/svg/svg_polygon.asp\n[svg_path]: http://www.w3schools.com/svg/svg_path.asp\n[svg_group]: https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g\n[svg_transformations]: https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/transform\n[sample_app_play_store]: https://play.google.com/store/apps/details?id=com.github.siyamed.shapeimageview.sample\n[youtube_video]: http://youtu.be/6fCkptmwxtQ\n\n* [Shader][Shader] based one uses *canvas draw methods* and *[Path][Path]* class, \n* Mask based one uses [xfermode][xfermode] to draw image on bitmaps defined by android shape XML's or resource bitmaps.\n\n<div>\n<a href=\"images/shader-buble.png\" style=\"float:left;\">\n<img src=\"images/shader-buble.png\" alt=\"Chat Bubble Image\" height=\"600px\"/>\n</a>\n<a href=\"images/all-samples.png\" >\n<img src=\"images/all-samples.png\" alt=\"Shape Image View\" height=\"600px\"/>\n</a>\n</div>\n\nThere are many projects online implementing such components, however one goal of this project is to provide a \nperformant/smooth scrolling **image view component framework** to define different shapes for imageviews. \n\n**For use with recycling view such as ListView or GridView please use shader based implementations.**\n\n[Sample app in play store][sample_app_play_store]\n\n[Youtube video][youtube_video]\n\n## How to use\n\nGradle dependency:\n```Groovy\ncompile 'com.github.siyamed:android-shape-imageview:0.9.+@aar'\n```\n\n###Shader Based ImageView's\n####BubbleImageView\n![Android Bubble ImageView](images/small-bubble.png)\n```XML\n<com.github.siyamed.shapeimageview.BubbleImageView\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:src=\"@drawable/neo\"\n    app:siArrowPosition=\"right\"\n    app:siSquare=\"true\"/>\n```\n\nAttributes:\n* `siTriangleHeight` the height of the bubble pointer in dp\n* `siArrowPosition` where to point the arrow, currently `left|right`\n* `siSquare` set width and height to the minimum of the given values `true|false`\n\n####RoundedImageView\n![Android Rounded Rectangle ImageView](images/small-rounded.png)\n```XML\n<com.github.siyamed.shapeimageview.RoundedImageView\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:src=\"@drawable/neo\"\n    app:siRadius=\"6dp\"\n    app:siBorderWidth=\"6dp\"\n    app:siBorderColor=\"@color/darkgray\"\n    app:siSquare=\"true\"/>\n```\n\nAttributes:\n* `siBorderColor` border color\n* `siBorderWidth` border width in dp\n* `siBorderAlpha` alpha value of the border between 0.0-1.0\n* `siRadius` corner radius in dp\n* `siSquare` set width and height to the minimum of the given values `true|false`\n\n####CircularImageView\n![Android Circular ImageView](images/small-circle.png)\n```XML\n<com.github.siyamed.shapeimageview.CircularImageView\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:src=\"@drawable/neo\"\n    app:siBorderWidth=\"6dp\"\n    app:siBorderColor=\"@color/darkgray\"/>\n```\n\nAttributes:\n* `siBorderColor` border color\n* `siBorderWidth` border width in dp\n* `siBorderAlpha` alpha value of the border between 0.0-1.0\n\n####ShapeImageView\nThis view has the capability to process a provided SVG file (for a limited set of SVG elements), build a \n[Path][Path] object and draw it on the shader. The library includes SVG files defining a set of basic shapes and \nShapeImageView subclasses using those files. You can use whatever SVG you want to have a wonderful \nand creatively shaped images in your application. The included SVG files are under [library/src/main/res/raw][svg_location]\n\n\n| DiamondImageView                                       | PentagonImageView                                        | HexagonImageView                                         |\n| ------------------------------------------------------ | -------------------------------------------------------- | -------------------------------------------------------- |\n| ![Android Diamond ImageView](images/small-diamond.png) | ![Android Pentagon ImageView](images/small-pentagon.png) | ![Android Hexagon ImageView](images/small-hexagon.png)   |\n\n\n| OctogonImageView                                       | StarImageView                                            | HeartImageView                                       |\n| ------------------------------------------------------ | -------------------------------------------------------- | ---------------------------------------------------- |\n| ![Android Octogon ImageView](images/small-octogon.png) | ![Android Start ImageView](images/small-star.png)        | ![Android Heart ImageView](images/small-heart.png)   |\n\n\n```XML\n<com.github.siyamed.shapeimageview.{ClassName}\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_margin=\"8dp\"\n    android:src=\"@drawable/neo\"\n    app:siBorderWidth=\"8dp\"\n    app:siBorderColor=\"@color/darkgray\"/>\n```\n\nAttributes:\n* `siBorderColor` border color\n* `siBorderWidth` border width in dp\n* `siBorderAlpha` alpha value of the border between 0.0-1.0\n* `siStrokeCap` border stroke cap type `butt|round|square`\n* `siStrokeJoin` border stroke join type `bevel|miter|round`\n* `siSquare` set width and height to the minimum of the given values `true|false`\n* `siShape` a reference to an SVG. This is used by ShapeImageView, not the subclasses of it.\n\n\nSVG elements that are supported are: [rectangle][svg_rectangle], [circle][svg_circle], \n[ellipse][svg_ellipse], [polygon][svg_polygon], [path][svg_path], [group][svg_group]. [Transformations][svg_transformations] on those elements are also supported. \n\nThe system converts an SVG file into a Path. For each element including the parent element `<svg>` a new Path is created, and all the children Path's are [added][Path.addPath] to their parent path. \n\n###Bitmap Mask Based ImageViews \n\nThis view uses extra bitmaps for bitmap masks. Therefore it would be good to use them for very custom shapes, \npossibly not in a recycling view. \n\n* With [mask bitmap](sample/src/main/res/drawable/star.png): \n\n![Android Star Shape ImageView ](images/small-mask-star.png)\n```XML\n<com.github.siyamed.shapeimageview.mask.PorterShapeImageView\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:siShape=\"@drawable/star\"\n    android:src=\"@drawable/neo\"\n    app:siSquare=\"true\"/>\n```\n\n* With [shape XML](sample/src/main/res/drawable/shape_rounded_rectangle.xml):\n\n![Android Star Shape ImageView ](images/small-xmlshape-rounded.png)\n\n```XML\n<com.github.siyamed.shapeimageview.mask.PorterShapeImageView\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:siShape=\"@drawable/shape_rounded_rectangle\"\n    android:src=\"@drawable/neo\"\n    app:siSquare=\"true\"/>\n```\n\nrounded rectangle shape definition in XML: \n\n```XML\n<shape android:shape=\"rectangle\" xmlns:android=\"http://schemas.android.com/apk/res/android\">\n    <corners\n        android:topLeftRadius=\"18dp\"\n        android:topRightRadius=\"18dp\"\n        android:bottomLeftRadius=\"18dp\"\n        android:bottomRightRadius=\"18dp\" />\n    <solid android:color=\"@color/black\" />\n</shape>\n```\n\nAttributes:\n* `siShape` the bitmap mask shape, either a shape drawable or a bitmap\n* `siSquare` set width and height to the minimum of the given values `true|false`\n\nThis method reads a shape file (either bitmap or an android shape xml), creates a bitmap object using this shape, and finally combines the bitmap of the real image to be shown and the mast bitmap using xfermode. \n\n## Sample\n\nSee/execute the [sample](sample) for a demonstration of the components.\n\nIf you are lazy check [this youtube video][youtube_video] demonstrating scrolling in the sample app\n\nYou can download the [sample app from play store][sample_app_play_store] \n\n## Proguard\n\n```\n-dontwarn android.support.v7.**\n-keep class android.support.v7.** { ; }\n-keep interface android.support.v7.* { ; }\n-keepattributes *Annotation,Signature\n-dontwarn com.github.siyamed.**\n-keep class com.github.siyamed.shapeimageview.**{ *; }\n```\n\n## References\n* [MostafaGazar/CustomShapeImageView](https://github.com/MostafaGazar/CustomShapeImageView): Used this project a basis for bitmap masks  \n* [geosolutions-it/mapsforge/svg-android](https://github.com/geosolutions-it/mapsforge/tree/master/svg-android): Used and modified to create a path from a svg file \n\n[![Android Shape Image View on Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-android--shape--imageview-brightgreen.svg?style=flat)](https://android-arsenal.com/details/1/932)\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.3671875,
          "content": "buildscript {\n    repositories {\n        jcenter()\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.3.1'\n        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        mavenCentral()\n    }\n}\n\ntask wrapper(type: Wrapper) {\n    gradleVersion = '2.7'\n}"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.9892578125,
          "content": "VERSION_NAME=0.9.3\nVERSION_CODE=1\n\nANDROID_BUILD_MIN_SDK_VERSION=9\nANDROID_BUILD_TARGET_SDK_VERSION=23\nANDROID_BUILD_TOOLS_VERSION=23.0.1\nANDROID_BUILD_SDK_VERSION=23\n\nGROUP=com.github.siyamed\n\nPOM_DESCRIPTION=Provides a set of custom shaped android imageview components, and a framework to define more shapes. Implements both shader and bitmap mask based image views. Shader based one uses canvas draw methods and Path construct, Mask based one uses xfermode to draw image on bitmaps defined by android shape XML's or resource bitmaps.\nPOM_URL=https://github.com/siyamed/android-shape-imageview\nPOM_SCM_URL=https://github.com/siyamed/android-shape-imageview\nPOM_SCM_CONNECTION=scm:git@github.com:siyamed/android-shape-imageview.git\nPOM_SCM_DEV_CONNECTION=scm:git@github.com:siyamed/android-shape-imageview.git\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\nPOM_DEVELOPER_ID=siyamed\nPOM_DEVELOPER_NAME=Siyamed Sinir\n\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8408203125,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.029296875,
          "content": "include ':sample', ':library'\n"
        }
      ]
    }
  ]
}