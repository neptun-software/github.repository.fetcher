{
  "metadata": {
    "timestamp": 1736708537786,
    "page": 772,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "scottyab/rootbeer",
      "stars": 2542,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.59765625,
          "content": "* text=auto\n\n###### Git\n.gitattributes text\n.gitignore text\n.gitconfig text\n.gitmodules text\n\n##### Windows\n*.bat text eol=crlf\n*.exe binary\n*.dll binary\n\n##### Linux\n*.sh text eol=lf\n*.so binary\n\n##### Global\n# Documents\n*.sql text\n*.md text\n*.adoc text\n*.textile text\n*.mustache text\n*.csv text\n*.tab text\n*.tsv text\n*.coffee text\n*.css text\n*.htm text\n*.html text\n*.xhtml text\n*.inc text\n*.js text\n*.jsx text\n*.less text\n*.od text\n*.onlydata text\n*.sass text\n*.scm text\n*.log text\n*.properties text\n*.scss text\n*.styl text\n*.tag text\n*.ts text\n*.tsx text\n*.dockerignore text\nDockerfile text\n*.markdown text\n*.mdwn text\n*.mdown text\n*.mkd text\n*.mkdn text\n*.mdtxt text\n*.mdtext text\n*.txt text\nAUTHORS text\nCHANGELOG text\nCHANGES text\nCONTRIBUTING text\nCOPYING text\ncopyright text\n*COPYRIGHT* text\nINSTALL text\nlicense text\nLICENSE text\nNEWS text\nreadme text\n*README* text\nTODO text\n# Configuration\n*.cnf text\n*.cfg text\n*.conf text\n*.config text\n*.ini text\n*.json text\n*.xml text\n*.bowerrc text\n.browserslistrc text\n.editorconfig text\n*.npmignore text\n*.yaml text\n*.yml text\nbrowserslist text\nMakefile text\nmakefile text\nProcfile text\n.slugignore text\n# Linters\n.csslintrc text\n.eslintrc text\n.htmlhintrc text\n.jscsrc text\n.jshintrc text\n.jshintignore text\n.stylelintrc text\n# Video\n*.3gpp binary\n*.3gp binary\n*.as binary\n*.asf binary\n*.asx binary\n*.fla binary\n*.flv binary\n*.m4v binary\n*.mng binary\n*.mov binary\n*.mp4 binary\n*.mpeg binary\n*.mpg binary\n*.ogv binary\n*.swc binary\n*.swf binary\n*.webm binary\n# Audio\n*.kar binary\n*.m4a binary\n*.mid binary\n*.midi binary\n*.mp3 binary\n*.ogg binary\n*.ra binary\n# Graphics\n*.png binary\n*.jpg binary\n*.jpeg binary\n*.gif binary\n*.tif binary\n*.tiff binary\n*.ico binary\n*.eps binary\n*.ai binary\n*.bmp binary\n*.jng binary\n*.jp2 binary\n*.jpx binary\n*.jxr binary\n*.pdf binary\n*.psb binary\n*.psd binary\n*.svg text\n*.svgz binary\n*.wbmp binary\n*.webp binary\n# Archives\n*.7z binary\n*.gz binary\n*.jar binary\n*.rar binary\n*.tar binary\n*.zip binary\n# Fonts\n*.ttf binary\n*.eot binary\n*.otf binary\n*.woff binary\n*.woff2 binary\n# Executables\n*.pyc binary\n# Objects\n*.o binary\n\n##### IDE/Editor\n# Visual Studio\n*.sln text eol=crlf\n*.csproj text eol=crlf\n*.vbproj text eol=crlf\n*.vcxproj text eol=crlf\n*.vcproj text eol=crlf\n*.dbproj text eol=crlf\n*.fsproj text eol=crlf\n*.lsproj text eol=crlf\n*.wixproj text eol=crlf\n*.modelproj text eol=crlf\n*.sqlproj text eol=crlf\n*.wmaproj text eol=crlf\n*.xproj text eol=crlf\n*.props text eol=crlf\n*.filters text eol=crlf\n*.vcxitems text eol=crlf\n# Eclipse\n*.project text\n*.classpath text\n*.prefs\n\n##### Language\n# Java\n*.java text\n*.jsp text\n*.jspf text\n*.jspx text\n*.class binary\n*.war binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3154296875,
          "content": "# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Android Studio generated folders\n.navigation/\ncaptures/\n.externalNativeBuild\n\n# IntelliJ project files\n*.iml\n.idea/\n.cxx/\n\n# Misc\n.DS_Store\n\n# Keystore files\n*.jks\n\n# Google Services (e.g. APIs or Firebase)\ngoogle-services.json\n"
        },
        {
          "name": "CHANGE_LOG.md",
          "type": "blob",
          "size": 1.27734375,
          "content": "RootBeer Library Change Log\n===========================\n\n# 0.1.1\n\n* Support for 16KB page sizes for native lib (Android 15 support) \n* Removed `Util.isSelinuxFlagInEnabled()`. This was never part of the `isRooted()` check but as we are unable to get `ro.build.selinux` in later versions of Android it has been removed from the Util and sample app.\n\nInternal changes:\n* #229 Gradle, Build scripts, Maven Plugin, NDK update by @ArtsemKurantsou\n\n# 0.1.0\n\n* Add fstack protector #136 @slawert\n\n# 0.0.9\n\n* Support for Android TV devices #129  @deepakpk009\n* Add additional dangerous apps packages #145 @Fi5t\n* ~Add fstack protector #136 @slawert~ Note this was found in #170 to have not been applied and fixed in 0.1.0\n\n# 0.0.8\n\n* Removed busybox from the default root checking methods\n* Additional root app packages added\n* Use PATH environment variable to find places su binaries might be hiding\n* Updated sample app to AndroidX\n\n# 0.0.7\n\n* Added a check to see if the native library is available to prevent crashing\n* Automatic building of native binaries if NDK is present\n\n# 0.0.6\n\n* more su directory checks\n* fix crash when native lib load fails\n* updated NDK build\n* Added method to do root checks but ignoring the busybox due to false positives\n* Allow setting of logging level\n* UI tweaks to sample app\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.6962890625,
          "content": "# RootBeer ![app icon](./app/src/main/res/mipmap-xhdpi/ic_launcher_round.png)\n\n[![RootBeer](https://www.appbrain.com/stats/libraries/shield/rootbeer.svg)](https://www.appbrain.com/stats/libraries/details/rootbeer/rootbeer)\n\nA tasty root checker library and sample app. We've scoured the internets for different methods of answering that age old question... **Has this device got root?**\n\n# Root checks\nThese are the current checks/tricks we are using to give an indication of root. \n\n**Java checks**\n\n| Method Name                   | Description                                                                                                             | Limitations                                                                                          |\n|-------------------------------|-------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------|\n| `checkRootManagementApps`      | Checks if any apps for managing root access (like SuperSU or Magisk) are installed.                                     | May not detect newly developed or less popular root management apps.                                 |\n| `checkPotentiallyDangerousApps`| Checks if any apps known for facilitating root access are installed.                                                    | Limited to a predefined list of apps; cannot detect custom or less-known dangerous apps.             |\n| `checkRootCloakingApps`        | Detects apps that can cloak or hide root access from detection tools.                                                   | Root cloaking apps evolve quickly, potentially bypassing detection mechanisms.                       |\n| `checkTestKeys`                | Verifies if the device's firmware is signed with Android's test keys, which it would be on AOSP or certain emluators.   | Only detects if test keys are used, and may miss rooted devices using production keys.               |\n| `checkForDangerousProps`       | Checks for dangerous properties (`ro.debuggable` and `ro.secure`) that indicate this may not be a genuine Android device | Can be bypassed if properties are reset or hidden by advanced root cloaking techniques.              |\n| `checkForBusyBoxBinary`        | Checks if the BusyBox binary is present, commonly used in rooted devices.                                               | Not all rooted devices use BusyBox, and some device manufacturers may leave busybox on the ROM.      |\n| `checkForSuBinary`             | Checks for the presence of the `su` binary, typically used to elevate privileges.                                       | Su binaries may be renamed or hidden by root cloaking tools, bypassing detection.                    |\n| `checkSuExists`                | Another check for the existence of the `su` binary, via 'which su'.                                                    | Same as `checkForSuBinary`, can be bypassed by renaming or hiding the binary.                        |\n| `checkForRWSystem`             | Verifies if the `/system` partition is mounted as read-write, a sign of rooting.                                        | Some newer root methods do not require RW access to the `/system` partition (e.g., systemless root). |\n\n\n**Native checks**\n\nWe call through to our native root checker to run some of its own checks. Native checks are typically harder to cloak, so some root cloak apps just block the loading of native libraries that contain certain keywords.\n\n|  Method Name       | Description                                                                 | Limitations                     |\n|--------------------|-----------------------------------------------------------------------------|---------------------------------|\n| `checkForSuBinary` | Checks for the presence of the `su` binary, typically used to elevate privileges. | Same as Java `checkForSuBinary` |\n\n\n## Disclaimer and limitations!\n\nOne way to think about root checking is that **root==god**, so there's no 100% guaranteed way to check for root! Please treat the results of this library as an *indication* of root together with other factors which will vary depending on your usecase rather than basing your whole security posture on the result.\nA more robust solution would be to use [Google Play Integrity API](https://developer.android.com/google/play/integrity) this will verify requests from your app are coming from your unmodified app binary, installed by Google Play, running on a genuine Android device (i.e not rooted).\n\nRootbeer can be bypassed, there's several articles that illustrate how to do this. [here](https://medium.com/secarmalabs/bypassing-androids-rootbeer-library-part-1-a5f93918660d) one we found with a quick Google search.\n\n### Background \n\nThis started as an hackday project where we wanted to see if we could beat the current root cloakers at the time in 2015.\nWe love root! both [Scott](https://github.com/scottyab) and [Mat](https://github.com/stealthcopter) (the creators) own and use rooted devices (albeit not as daily driver) and can understand the frustration when apps add root checks and prevent you using their services. However this is not the responsibility of RootBeer please raise these concerns with the app that is implementing the Rootbeer root checks.\n\n<img src=\"./art/rootbeerjesus.png\" width=200 />\n\n\n### Root cloakers\n\nIn **2015** we successfully tested Rootbeer and it flagged an indication of root when testing with the following root cloak apps. However Rootbeer was defeated when using a combination of the root cloakers activated at the same time.\n\nTested cloakers:\n\n* [RootCloak Plus (Cydia)](https://play.google.com/store/apps/details?id=com.devadvance.rootcloakplus&hl=en_GB) requires [Cydia Substrate](http://play.google.com/store/apps/details?id=com.saurik.substrate)\n* [RootCloak](http://repo.xposed.info/module/com.devadvance.rootcloak) - requires [Xposed Framework](http://repo.xposed.info/module/de.robv.android.xposed.installer)\n\n## Usage\n\n```java\nRootBeer rootBeer = new RootBeer(context);\nif (rootBeer.isRooted()) {\n    //we found indication of root\n} else {\n    //we didn't find indication of root\n}\n```\n\nYou can also call each of the checks individually as the sample app does. It is advisable to call `isRooted()` from a background thread as it involves disk I/O.\n\n### False positives\n\nManufacturers sometimes leave the busybox binary in production builds and this doesn't always mean that a device is rooted. We have removed the busybox check we used to include as standard in the isRooted() method to avoid these false positives.\n\nIf you want to detect the busybox binary in your app you can use `checkForBinary(BINARY_BUSYBOX)` to detect it alone or as part of the complete root detection method:\n\n```java\nrootBeer.isRootedWithBusyBoxCheck();\n```\n\nThe following devices are known the have the busybox binary present on the stock rom:\n* All OnePlus Devices\n* Moto E\n* OPPO R9m (ColorOS 3.0,Android 5.1,Android security patch January 5, 2018 )\n\n### Dependency\n\nAvailable on [Maven Central](https://search.maven.org/#search%7Cga%7C1%7Ca%3A%22rootbeer-lib%22), to include using Gradle just add the following:\n\n```java\ndependencies {\n    implementation 'com.scottyab:rootbeer-lib:0.1.1'\n}\n```\n\nOr use this [Jitpack.io link](https://jitpack.io/#scottyab/rootbeer/releases) - note prefer releases/tags rather than branches. \n\n### Building\n\nThe native library in this application will now be built via Gradle and the latest Android Studio without having to resort to the command line. However the .so files are also distributed in this repository for those who cannot compile using the NDK for some reason.\n\n### Sample app\n\nThe sample app is published on Google Play to allow you to quickly and easily test the library. Enjoy! And please do feedback to us if your tests produce different results.\n\n<a href=\"https://play.google.com/store/apps/details?id=com.scottyab.rootbeer.sample&utm_source=global_co&utm_medium=prtnr&utm_content=Mar2515&utm_campaign=PartBadge&pcampaignid=MKT-Other-global-all-co-prtnr-py-PartBadge-Mar2515-1\"><img width=\"200\" alt=\"Get it on Google Play\" src=\"https://play.google.com/intl/en_us/badges/images/generic/en-play-badge.png\" /></a>\n\n<img width=\"200\" alt=\"screenshot\" src=\"./art/ss_got_root_fail.png\">\n\n\n## Contributing\n\nThere must be more root checks to make this more complete. If you have one please do send us a pull request.\n\n### Thanks\n\n* Kevin Kowalewski and others from this popular [StackOverflow post](https://stackoverflow.com/questions/1101380/determine-if-running-on-a-rooted-device?rq=1)\n* Eric Gruber's - Android Root Detection Techniques [article](https://blog.netspi.com/android-root-detection-techniques/)\n\n\n## Other libraries\n\nIf you dig this, you might like:\n\n * Tim Strazzere's [Anti emulator checks](https://github.com/strazzere/anti-emulator/) project\n * Scott Alexander-Bown's [SafetyNet Helper library](https://github.com/scottyab/safetynethelper) - coupled with server-side validation this is one of the best root detection approaches. See the [Google SafetyNet helper docs](https://developer.android.com/training/safetynet/index.html).\n\n# Licence\n\nApache License, Version 2.0\n\n    Copyright (C) 2015, Scott Alexander-Bown, Mat Rollings\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "RootChecker.iml",
          "type": "blob",
          "size": 0.92578125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module external.linked.project.id=\"RootChecker\" external.linked.project.path=\"$MODULE_DIR$\" external.root.project.path=\"$MODULE_DIR$\" external.system.id=\"GRADLE\" external.system.module.group=\"com.scottyab\" external.system.module.version=\"0.0.2\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"java-gradle\" name=\"Java-Gradle\">\n      <configuration>\n        <option name=\"BUILD_FOLDER_PATH\" value=\"$MODULE_DIR$/build\" />\n        <option name=\"BUILDABLE\" value=\"false\" />\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_7\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/.gradle\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 2.8603515625,
          "content": "import com.android.build.api.dsl.LibraryExtension\nimport com.android.build.gradle.BaseExtension\nimport com.android.build.gradle.BasePlugin\nimport org.jetbrains.kotlin.gradle.tasks.KotlinCompile\n\nplugins {\n    alias(libs.plugins.android.application) apply false\n    alias(libs.plugins.android.library) apply false\n    alias(libs.plugins.kotlin.android) apply false\n}\n\nallprojects {\n    version = findProperty(\"VERSION_NAME\").toString()\n    group = findProperty(\"GROUP\").toString()\n}\n\nsubprojects {\n    tasks.withType<JavaCompile>().configureEach {\n        sourceCompatibility = JavaVersion.VERSION_17.toString()\n        targetCompatibility = JavaVersion.VERSION_17.toString()\n    }\n\n    tasks.withType<KotlinCompile>().configureEach {\n        kotlinOptions {\n            jvmTarget = JavaVersion.VERSION_17.toString()\n        }\n    }\n\n    plugins.withType<BasePlugin>().configureEach {\n        extensions.configure<BaseExtension> {\n            compileSdkVersion(libs.versions.android.compile.sdk.get().toInt())\n            buildToolsVersion(libs.versions.android.build.tools.get())\n            ndkVersion = libs.versions.android.ndk.get()\n\n            defaultConfig {\n                minSdk = libs.versions.android.min.sdk.get().toInt()\n                targetSdk = libs.versions.android.target.sdk.get().toInt()\n            }\n\n            compileOptions {\n                sourceCompatibility = JavaVersion.VERSION_17\n                targetCompatibility = JavaVersion.VERSION_17\n            }\n        }\n\n        extensions.findByType<LibraryExtension>()?.apply {\n            lint {\n                targetSdk = libs.versions.android.target.sdk.get().toInt()\n            }\n        }\n    }\n\n    plugins.withType<MavenPublishPlugin>().configureEach {\n        extensions.configure<PublishingExtension> {\n            repositories {\n                val repositoryUrl = if (isReleaseBuild) {\n                    requireNotNull(property(\"RELEASE_REPOSITORY_URL\")?.toString())\n                } else {\n                    requireNotNull(property(\"SNAPSHOT_REPOSITORY_URL\")?.toString())\n                }\n\n                maven {\n                    url = uri(repositoryUrl)\n\n                    credentials {\n                        username = findStringPropertyOrDefault(\"NEXUS_USERNAME\")\n                        password = findStringPropertyOrDefault(\"NEXUS_PASSWORD\")\n                    }\n                }\n            }\n        }\n    }\n\n    plugins.withType<SigningPlugin>().configureEach {\n        extensions.configure<SigningExtension> {\n            isRequired = isReleaseBuild\n        }\n    }\n}\n\nval clean by tasks.registering(type = Delete::class) {\n    delete(rootProject.layout.buildDirectory)\n}\n\nprivate val Project.isReleaseBuild get() = !version.toString().endsWith(\"SNAPSHOT\")\n\nprivate fun Project.findStringPropertyOrDefault(propertyName: String, default: String? = \"\") =\n    findProperty(propertyName)?.toString() ?: default\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 2.15625,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n#\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xms1024m -Xmx4096m -Dfile.encoding=UTF-8\n\n# Enable Gradle configuration and build cache to speed up builds on developer machines.\norg.gradle.configuration-cache=true\norg.gradle.caching=true\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\n# AndroidX package structure to make it clearer which packages are bundled with the\n# Android operating system, and which are packaged with your app's APK\n# https://developer.android.com/topic/libraries/support-library/androidx-rn\nandroid.useAndroidX=true\n\n# Kotlin code style for this project: \"official\" or \"obsolete\":\nkotlin.code.style=official\n\n# Maven details, note NEXUS_USERNAME and NEXUS_PASSWORD are not defined here in git, they are\n# private to the author.\nVERSION_NAME=0.1.1\nVERSION_CODE=11\nGROUP=com.scottyab\nPOM_DESCRIPTION=A tasty root checker library. We've scoured the internets for different methods of answering that age old question... Has this device got root?\nPOM_URL=https://github.com/scottyab/rootbeer.git\nPOM_SCM_URL=https://github.com/scottyab/rootbeer.git\nPOM_SCM_CONNECTION=scm:git@github.com:scottyab/rootbeer.git\nPOM_SCM_DEV_CONNECTION=scm:git@github.com:scottyab/rootbeer.git\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\nPOM_DEVELOPER_ID=scottyab\nPOM_DEVELOPER_NAME=Scott Alexander-Bown, Mat Rollings\nRELEASE_REPOSITORY_URL=https://oss.sonatype.org/service/local/staging/deploy/maven2\nSNAPSHOT_REPOSITORY_URL=https://oss.sonatype.org/content/repositories/snapshots\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.556640625,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8046875,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "rootbeerlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 0.5224609375,
          "content": "pluginManagement {\n    repositories {\n        google()\n        mavenCentral()\n    }\n}\n\ndependencyResolutionManagement {\n    @Suppress(\"UnstableApiUsage\")\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n\n    @Suppress(\"UnstableApiUsage\")\n    repositories {\n        google()\n        mavenCentral()\n        maven {\n            name = \"Snapshot\"\n            url = uri(\"https://oss.sonatype.org/content/repositories/snapshots\")\n        }\n    }\n}\n\nrootProject.name = \"RootChecker\"\n\ninclude(\n    \":app\",\n    \":rootbeerlib\"\n)\n"
        }
      ]
    }
  ]
}