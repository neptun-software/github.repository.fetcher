{
  "metadata": {
    "timestamp": 1736708593039,
    "page": 891,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gzu-liyujiang/Android_CN_OAID",
      "stars": 2369,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.9765625,
          "content": "# Miscellaneous\n**/*.class\n**/*.lock\n**/*.log\n**/*.pyc\n**/*.swp\n**/.atom/\n**/.buildlog/\n**/.history\n**/.svn/\n**/.git-rewrite/\n**/.thumbs.db\n\n# IntelliJ related (Intellij IDEA, Android Studio, etc.)\n**/*.iml\n**/*.ipr\n**/*.iws\n**/build\n**/local.properties\n**/.idea/*\n!**/.idea/.name\n!**/.idea/codeStyles\n!**/.idea/copyright\n\n# Android related\n**/android/**/gradle-wrapper.jar\n**/android/.gradle\n**/android/captures/\n!**/android/gradlew\n!**/android/gradlew.bat\n**/android/local.properties\n**/proguard\n**/resource_mapping.txt\n**/gen\n**/debug\n**/release\n**/*.apk\n!**/demo.apk\n**/归档\n\n# NDK related\n**/.externalNativeBuild\n**/.cxx\n\n# Gradle\n**/.gradle\n**/gradle-app.setting\n**/.gradletasknamecache\n!**/gradle/wrapper/**\n\n# VS/VS Code\n**/.vs\n**/.suo\n**/.vscode\n!**/.vscode/*.json\n**/.project\n**/.classpath\n**/.settings\n\n# Flutter/Dart/Pub related\n**/doc/api/\n**/.dart_tool/\n**/.flutter-plugins\n**/.flutter-plugins-dependencies\n**/.packages\n**/.pub-cache/\n**/.pub/\n**/build/\n**/lib/generated\n**/lib/generated_plugin_registrant.dart\n**/android/**/GeneratedPluginRegistrant.java\n\n# iOS/XCode related\n**/.DS_Store\n**/ios/**/*.mode1v3\n**/ios/**/*.mode2v3\n**/ios/**/*.moved-aside\n**/ios/**/*.pbxuser\n**/ios/**/*.perspectivev3\n**/ios/**/*sync/\n**/ios/**/.sconsign.dblite\n**/ios/**/.tags*\n**/ios/**/.vagrant/\n**/ios/**/DerivedData/\n**/ios/**/Icon?\n**/ios/**/Pods/\n**/ios/**/.symlinks/\n**/ios/**/profile\n**/ios/**/xcuserdata\n**/ios/.generated/\n**/ios/Flutter/App.framework\n**/ios/Flutter/Flutter.framework\n**/ios/Flutter/Generated.xcconfig\n**/ios/Flutter/app.flx\n**/ios/Flutter/app.zip\n**/ios/Flutter/flutter_assets/\n**/ios/ServiceDefinitions.json\n**/ios/Runner/GeneratedPluginRegistrant.*\n**/ios/Flutter/flutter_export_environment.sh\n!**/ios/**/default.mode1v3\n!**/ios/**/default.mode2v3\n!**/ios/**/default.pbxuser\n!**/ios/**/default.perspectivev3\n!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages\n\n# Node related\n**/node_modules\n**/dist\n**/package-lock.json\n**/npm-debug.log*\n**/yarn-debug.log*\n**/yarn-error.log*\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.958984375,
          "content": "# 更新日志\n\n## 4.2.11 - 2024/12/01\n\n- 阿里云 Maven 仓库问题。\n- FIX #90 预取标识符回调问题。\n\n## 4.2.10 - 2024/10/15\n\n- GMS获取ADID时优化，感谢 @a365344743s 贡献。\n- 更新奇酷手机混淆规则\n\n## 4.2.9 - 2024/03/07\n\n- 支持360OS手机OAID，感谢 @10cl 贡献。\n- 荣耀真机验证荣耀广告标识符SDK。\n- 商用法律风险声明。\n\n## 4.2.8 - 2023/12/05\n\n- 支持通过荣耀官方广告标识服务SDK获取OAID [Issues#73](https://github.com/gzu-liyujiang/Android_CN_OAID/issues/73)；\n\n## 4.2.7 - 2023/11/12\n\n- 修复华为高版本手机可能的闪退或卡死问题： [Issues#63](https://github.com/gzu-liyujiang/Android_CN_OAID/issues/63) [Issues#72](https://github.com/gzu-liyujiang/Android_CN_OAID/issues/72)。\n- 增加一些文档注释及一些易用的方法。\n- 更新演示的安装包到v4.2.7。\n\n## 4.2.6.2 - 2023/11/02\n\n- 更新演示的安装包到v4.2.6。\n- 更新 JavaDoc 到 4.2.6。\n\n## 4.2.6 - 2023/11/01\n\n- PR#70 支持老版的OPPO手机获取OAID，感谢@luoyesiqiu的贡献。\n- PR#71 通过注册方式预取OAID开放回调接口，感谢@Mankin的参与。\n\n## 4.2.5.1 - 2023/07/17\n\n- 华为手机OAID获取适配，参阅 [Issues#66](https://github.com/gzu-liyujiang/Android_CN_OAID/issues/66) 。\n\n## 4.2.4 - 2022/02/10\n\n- OAID初始化获取为空后需再次获取，避免一直为空。\n\n## 4.2.3 - 2021/09/01\n\n- 新增`DeviceIdentifier`代替`DeviceID`，用于解决APP合规性检测机构检测到的频繁读取设备信息问题；\n- 适配 Android 11+；\n\n## 4.2.2 - 2021/08/26\n\n- 增加对酷派（CoolOS）、酷赛（Prize）、卓易（Freeme）的支持，参阅 [Issues#31](https://github.com/gzu-liyujiang/Android_CN_OAID/issues/31) ；\n- 提取备份 [手机厂商开放匿名设备标识符获取接口(AIDL)](https://github.com/gzu-liyujiang/Android_CN_OAID/tree/master/aidl) ；\n\n## 4.2.1 - 2021/06/30\n\n- [issues#30](https://github.com/gzu-liyujiang/Android_CN_OAID/issues/30) NoSuchMethodError: No  virtual method getMeid()；\n\n## 4.2.0 - 2021/06/29\n\n- 移除 AndroidX annotation 库的依赖以便兼容 Support v4/v7 项目，参阅 [note_5547665](https://gitee.com/li_yu_jiang/Android_CN_OAID#note_5547665)；\n\n## 4.1.4 - 2021/06/16\n\n- 去除 `WRITE_EXTERNAL_STORAGE` 等相关权限的最大 SDK 限制，参阅 [Issues#25](https://github.com/gzu-liyujiang/Android_CN_OAID/issues/25)；\n\n## 4.1.3 - 2021/05/21\n\n- 代码质量提升（Powered by Gitee Scan）\n\n## 4.1.2 - 2021/05/20\n\n- 精简代码，优化打印调试日志。\n- 修复 Android 6.0 以下系统版本获取 GUID 闪退（NoSuchMethodError: No static method canWrite...）。\n- 改进 Android 6.0 以下系统版本 GUID 持久化、稳定性。\n\n## 4.1.1 - 2021/05/15\n\n- 加入 `READ_PHONE_STATE`及`WRITE_EXTERNAL_STORAGE` 权限以便适配低版本安卓系统。\n\n## 4.1.0 - 2021/05/14\n\n- 支持中兴及 Motorola、HTC、LG、Sony 等海外平台手机获取 AAID（安卓广告标识符）。\n- 华为 OAID 获取优化，支持大屏电视。\n- 修复努比亚支持情况识别。\n- 处理用户关闭了广告标识符的情况。\n- 通过云真机在线调试，更新更多真机实测效果图。\n\n## 4.0.1 - 2021/05/13\n\n- 修复联想、中兴、华硕等 OAID 获取。\n- 增加更多品牌真机实测效果图。\n\n## 4.0.0 - 2021/04/29\n\n- **重新打造与移动安全联盟 SDK 的共存方案**，避免因此造成`Issues#22`之类的问题。\n- 增强 GUID 在 Android 10 以下版本系统的上的稳定性。\n- 避免可能会意外发生的未知异常（`Issues#21`、`PR#23`）。\n\n## 3.0.3 - 2021/04/14\n\n- 更细致的识别手机厂商及其品牌，增加荣耀、红米、爱酷、真我等品牌的支持。\n\n## 3.0.2 - 2021/04/08\n\n- 小米手机获取 OAID 问题（`PR#18`）。\n- 增加数字版权管理设备 ID （注：根据`semver.org`语义化版本规范，此处做了向下兼容的功能性新增，版本号其实应该定为`3.1.0`）。\n- 增加各大手机厂商关于 OAID 的说明文档。\n- 允许判断设备是否支持 OAID（`PR#19`）。\n\n## 3.0.1 - 2021/03/29\n\n- 增加设备标识符统一格式为 MD5 或 SHA1 的方法\n\n## 3.0.0 - 2021/03/26\n\n- 移除之前版本已废弃的方法，重构部分 API。\n- 支持在应用启动时预先获取设备的客户端标识。\n- 增加 JavaDoc ，更新说明文档。\n- 移除 Github Actions 的 CodeQL。\n\n## 2.1.1 - 2021/03/03\n\n- 修复魅族手机获取 OAID 失败问题，增加魅族效果图。\n\n## 2.1.0 - 2021/01/19\n\n- 增加 IMEI/MEID、AndroidID、GUID 等获取方法。\n- 优化文档及调整其他一些细节。\n\n## 2.0.0 - 2021/01/13\n\n- 修复 Demo 编译错误（`Isuues#8`）。\n- 分包，解决和移动安全联盟 SDK 冲突问题。\n- 引入华为云真机调试方案。\n- 修正文档错误。\n- 修复 Github Actions 错误。\n\n## 1.0.2 - 2020/08/20\n\n- 规避可能的闪退。\n- 使用 Github Actions 代替 Travis-CI。\n- 更新说明文档。\n\n## 1.0.1 - 2020/07/15\n\n- 取消不支持 OAID 时默认生成的 GUID。\n\n## 1.0.0 - 2020/05/30\n\n- 初始版本。\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.3671875,
          "content": "                     木兰宽松许可证, 第2版\n\n   木兰宽松许可证， 第2版 \n   2020年1月 http://license.coscl.org.cn/MulanPSL2\n\n\n   您对“软件”的复制、使用、修改及分发受木兰宽松许可证，第2版（“本许可证”）的如下条款的约束：\n\n   0. 定义\n\n      “软件”是指由“贡献”构成的许可在“本许可证”下的程序和相关文档的集合。\n\n      “贡献”是指由任一“贡献者”许可在“本许可证”下的受版权法保护的作品。\n\n      “贡献者”是指将受版权法保护的作品许可在“本许可证”下的自然人或“法人实体”。\n\n      “法人实体”是指提交贡献的机构及其“关联实体”。\n\n      “关联实体”是指，对“本许可证”下的行为方而言，控制、受控制或与其共同受控制的机构，此处的控制是指有受控方或共同受控方至少50%直接或间接的投票权、资金或其他有价证券。\n\n   1. 授予版权许可\n\n      每个“贡献者”根据“本许可证”授予您永久性的、全球性的、免费的、非独占的、不可撤销的版权许可，您可以复制、使用、修改、分发其“贡献”，不论修改与否。\n\n   2. 授予专利许可\n\n      每个“贡献者”根据“本许可证”授予您永久性的、全球性的、免费的、非独占的、不可撤销的（根据本条规定撤销除外）专利许可，供您制造、委托制造、使用、许诺销售、销售、进口其“贡献”或以其他方式转移其“贡献”。前述专利许可仅限于“贡献者”现在或将来拥有或控制的其“贡献”本身或其“贡献”与许可“贡献”时的“软件”结合而将必然会侵犯的专利权利要求，不包括对“贡献”的修改或包含“贡献”的其他结合。如果您或您的“关联实体”直接或间接地，就“软件”或其中的“贡献”对任何人发起专利侵权诉讼（包括反诉或交叉诉讼）或其他专利维权行动，指控其侵犯专利权，则“本许可证”授予您对“软件”的专利许可自您提起诉讼或发起维权行动之日终止。\n\n   3. 无商标许可\n\n      “本许可证”不提供对“贡献者”的商品名称、商标、服务标志或产品名称的商标许可，但您为满足第4条规定的声明义务而必须使用除外。\n\n   4. 分发限制\n\n      您可以在任何媒介中将“软件”以源程序形式或可执行形式重新分发，不论修改与否，但您必须向接收者提供“本许可证”的副本，并保留“软件”中的版权、商标、专利及免责声明。\n\n   5. 免责声明与责任限制\n\n      “软件”及其中的“贡献”在提供时不带任何明示或默示的担保。在任何情况下，“贡献者”或版权所有者不对任何人因使用“软件”或其中的“贡献”而引发的任何直接或间接损失承担责任，不论因何种原因导致或者基于何种法律理论，即使其曾被建议有此种损失的可能性。 \n\n   6. 语言\n      “本许可证”以中英文双语表述，中英文版本具有同等法律效力。如果中英文版本存在任何冲突不一致，以中文版为准。\n\n   条款结束 \n\n   如何将木兰宽松许可证，第2版，应用到您的软件\n   \n   如果您希望将木兰宽松许可证，第2版，应用到您的新软件，为了方便接收者查阅，建议您完成如下三步：\n\n      1， 请您补充如下声明中的空白，包括软件名、软件的首次发表年份以及您作为版权人的名字；\n\n      2， 请您在软件包的一级目录下创建以“LICENSE”为名的文件，将整个许可证文本放入该文件中；\n\n      3， 请将如下声明文本放入每个源文件的头部注释中。\n\n   Copyright (c) [Year] [name of copyright holder]\n   [Software Name] is licensed under Mulan PSL v2.\n   You can use this software according to the terms and conditions of the Mulan PSL v2. \n   You may obtain a copy of Mulan PSL v2 at:\n            http://license.coscl.org.cn/MulanPSL2 \n   THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.  \n   See the Mulan PSL v2 for more details.  \n\n\n                     Mulan Permissive Software License，Version 2\n\n   Mulan Permissive Software License，Version 2 (Mulan PSL v2)\n   January 2020 http://license.coscl.org.cn/MulanPSL2\n\n   Your reproduction, use, modification and distribution of the Software shall be subject to Mulan PSL v2 (this License) with the following terms and conditions: \n   \n   0. Definition\n   \n      Software means the program and related documents which are licensed under this License and comprise all Contribution(s). \n   \n      Contribution means the copyrightable work licensed by a particular Contributor under this License.\n   \n      Contributor means the Individual or Legal Entity who licenses its copyrightable work under this License.\n   \n      Legal Entity means the entity making a Contribution and all its Affiliates.\n   \n      Affiliates means entities that control, are controlled by, or are under common control with the acting entity under this License, ‘control’ means direct or indirect ownership of at least fifty percent (50%) of the voting power, capital or other securities of controlled or commonly controlled entity.\n\n   1. Grant of Copyright License\n\n      Subject to the terms and conditions of this License, each Contributor hereby grants to you a perpetual, worldwide, royalty-free, non-exclusive, irrevocable copyright license to reproduce, use, modify, or distribute its Contribution, with modification or not.\n\n   2. Grant of Patent License \n\n      Subject to the terms and conditions of this License, each Contributor hereby grants to you a perpetual, worldwide, royalty-free, non-exclusive, irrevocable (except for revocation under this Section) patent license to make, have made, use, offer for sale, sell, import or otherwise transfer its Contribution, where such patent license is only limited to the patent claims owned or controlled by such Contributor now or in future which will be necessarily infringed by its Contribution alone, or by combination of the Contribution with the Software to which the Contribution was contributed. The patent license shall not apply to any modification of the Contribution, and any other combination which includes the Contribution. If you or your Affiliates directly or indirectly institute patent litigation (including a cross claim or counterclaim in a litigation) or other patent enforcement activities against any individual or entity by alleging that the Software or any Contribution in it infringes patents, then any patent license granted to you under this License for the Software shall terminate as of the date such litigation or activity is filed or taken.\n\n   3. No Trademark License\n\n      No trademark license is granted to use the trade names, trademarks, service marks, or product names of Contributor, except as required to fulfill notice requirements in Section 4.\n\n   4. Distribution Restriction\n\n      You may distribute the Software in any medium with or without modification, whether in source or executable forms, provided that you provide recipients with a copy of this License and retain copyright, patent, trademark and disclaimer statements in the Software.\n\n   5. Disclaimer of Warranty and Limitation of Liability\n\n      THE SOFTWARE AND CONTRIBUTION IN IT ARE PROVIDED WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED. IN NO EVENT SHALL ANY CONTRIBUTOR OR COPYRIGHT HOLDER BE LIABLE TO YOU FOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO ANY DIRECT, OR INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES ARISING FROM YOUR USE OR INABILITY TO USE THE SOFTWARE OR THE CONTRIBUTION IN IT, NO MATTER HOW IT’S CAUSED OR BASED ON WHICH LEGAL THEORY, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n   6. Language\n\n      THIS LICENSE IS WRITTEN IN BOTH CHINESE AND ENGLISH, AND THE CHINESE VERSION AND ENGLISH VERSION SHALL HAVE THE SAME LEGAL EFFECT. IN THE CASE OF DIVERGENCE BETWEEN THE CHINESE AND ENGLISH VERSIONS, THE CHINESE VERSION SHALL PREVAIL.\n\n   END OF THE TERMS AND CONDITIONS\n\n   How to Apply the Mulan Permissive Software License，Version 2 (Mulan PSL v2) to Your Software\n\n      To apply the Mulan PSL v2 to your work, for easy identification by recipients, you are suggested to complete following three steps:\n\n      i Fill in the blanks in following statement, including insert your software name, the year of the first publication of your software, and your name identified as the copyright owner; \n\n      ii Create a file named “LICENSE” which contains the whole context of this License in the first directory of your software package;\n\n      iii Attach the statement to the appropriate annotated syntax at the beginning of each source file.\n\n\n   Copyright (c) [Year] [name of copyright holder]\n   [Software Name] is licensed under Mulan PSL v2.\n   You can use this software according to the terms and conditions of the Mulan PSL v2. \n   You may obtain a copy of Mulan PSL v2 at:\n               http://license.coscl.org.cn/MulanPSL2 \n   THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.  \n   See the Mulan PSL v2 for more details.  \n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.5283203125,
          "content": "Copyright (c) 2016-present. 贵州纳雍穿青人李裕江 and All Contributors.\n\nThe software is licensed under the Mulan PSL v2.\nYou can use this software according to the terms and conditions of the Mulan PSL v2.\nYou may obtain a copy of Mulan PSL v2 at:\n    http://license.coscl.org.cn/MulanPSL2\nTHIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR\nPURPOSE.\nSee the Mulan PSL v2 for more details.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.859375,
          "content": "[//]: # (@formatter:off)\n\n# Android_CN_OAID\n\n![Release APK](https://github.com/gzu-liyujiang/Android_CN_OAID/workflows/Release%20APK/badge.svg)\n![Gradle Package](https://github.com/gzu-liyujiang/Android_CN_OAID/workflows/Gradle%20Package/badge.svg)\n\n安卓设备唯一标识解决方案，可作为移动安全联盟统一 SDK （miit_mdid_xxx.aar）的替代方案。\n**注意，这个项目的初衷主要是针对个人开发者的APP，个人开发者没资格使用 MSA 的 SDK，企业的APP应该去申请使用 MSA 的 SDK**。\n本项目提供了国内各大手机厂商获取 OAID（开放匿名设备标识）及海外手机平台获取 AAID（安卓广告标识）的便携接口，\n另外也提供了 IMEI/MEID、AndroidID、PseudoID、GUID 等常见的设备标识的获取方法。\n\n- 震惊：从没想过之前的参考资料之一 https://github.com/2tu/msa 会被 MSA 举报，作为行业技术标准还兴搞技术垄断，要传播使用 MSA 的 SDK 真是一言难尽啊，参见 https://github.com/github/dmca/blob/master/2023/09/2023-09-21-msa.md 。\n- 声明：本库虽然曾经逆向分析过 MSA 的 SDK ，但代码完全是原创的，是基于[北京数字联盟公开的代码](https://github.com/shuzilm-open-source/Get_Oaid_CNAdid)并结合第三方厂商公开或未公开的接口进行加工的，和 MSA 的 SDK 没有直接联系，不存在 `2tu/msa` 之类的侵权问题。根据北京数字联盟的声明，“……标准法的第二十二条规定：……禁止利用标准实施妨碍商品、服务自由流通等排除、限制市场竞争的行为。作为商用 ID 服务商，良性竞争能够让我们的产品变得更好……”，详见[请问该库商用有法律风险吗？](https://github.com/gzu-liyujiang/Android_CN_OAID/issues/50)\n\n- GitHub：`https://github.com/gzu-liyujiang/Android_CN_OAID`\n- 码云(GitEE)：`https://gitee.com/li_yu_jiang/Android_CN_OAID`\n- Demo：[https://github.com/gzu-liyujiang/Android_CN_OAID/blob/master/demo.apk](/demo.apk)\n\n【抱歉！各位小伙伴，从2022年开始我已经没做安卓开发了，项目虽然已经趋于稳定，不过需要大家参与维护，多提PullRequest，我目前已经没法贡献代码了】\n\n## 接入指引\n\n最新版本：[![jitpack](https://jitpack.io/v/gzu-liyujiang/Android_CN_OAID.svg)](https://jitpack.io/#gzu-liyujiang/Android_CN_OAID)\n（[更新日志](/CHANGELOG.md) | [JavaDoc](https://gzu-liyujiang.github.io/Android_CN_OAID/)）\n\n### 依赖配置\n\n如果你的项目 Gradle 配置是在 7.0 以下，需要在 build.gradle 文件中加入：\n\n```groovy\nallprojects {\n    repositories {\n        // JitPack 远程仓库\n        maven { url 'https://jitpack.io' }\n    }\n}\n```\n如果你的 Gradle 配置是 7.0 及以上，可能需要在 settings.gradle 文件中加入：\n\n```groovy\ndependencyResolutionManagement {\n    repositories {\n        // JitPack 远程仓库\n        maven { url 'https://jitpack.io' }\n    }\n}\n```\n\n然后直接使用如下依赖即可：[![jitpack](https://jitpack.io/v/gzu-liyujiang/Android_CN_OAID.svg)](https://jitpack.io/#gzu-liyujiang/Android_CN_OAID)\n\n```groovy\ndependencies {\n    implementation 'com.github.gzu-liyujiang:Android_CN_OAID:最新版本号'\n}\n```\n\n除了依赖从 Github 拉取代码构建的包外，也可以依赖从码云构建的包：\n\n```groovy\ndependencies {\n    implementation 'com.gitee.li_yu_jiang:Android_CN_OAID:最新版本号'\n}\n```\n\n### 注意事项\n\n- **4.2.5.1 版本以后直接使用了华为官方广告标识服务SDK，与移动安全联盟 SDK 共存** 的话可参考如下配置（PS：暂时没太多经历逆向华为的SDK重构包名来共存）：\n\n```groovy\ndependencies {\n    implementation('com.github.gzu-liyujiang:Android_CN_OAID:最新版本号') {\n        // 如果使用了较新版本的移动安全联盟SDK，共存的话可能需要排除掉本项目依赖的华为官方广告标识服务SDK，因为移动安全联盟SDK也依赖了华为的SDK\n        //exclude group: 'com.huawei.hms', module: 'ads-identifier'\n        // 荣耀官方广告标识服务SDK同理：      \n        //exclude group: 'com.hihonor.mcs', module: 'ads-identifier'\n    }\n}\n\n       // 如果华为官方广告标识服务SDK下载失败或编译报错的话，可考虑在 build.gradle 中增加以下配置：\n        // repositories { maven { url 'https://developer.huawei.com/repo' } }\n        // runtimeOnly \"com.huawei.hms:ads-identifier:3.4.62.300\"\n        // 荣耀官方广告标识服务SDK同理：      \n        // repositories { maven { url 'https://developer.hihonor.com/repo' } }\n        // runtimeOnly \"com.hihonor.mcs:ads-identifier:1.0.2.301\"\n```\n\n- 自 **4.1.1** 开始默认加入了 `READ_PHONE_STATE`、`WRITE_SETTINGS`及`WRITE_EXTERNAL_STORAGE` 权限以便适配低版本安卓系统。 \n- 为**遵循最小必要原则**保护用户隐私，若项目中没用到 IMEI 及 GUID，那么可酌情在 `AndroidManifest.xml` 中加入如下代码移除相关权限：\n\n```xml\n<manifest>\n    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" tools:node=\"remove\" />\n    <uses-permission android:name=\"android.permission.WRITE_SETTINGS\" tools:node=\"remove\" />\n</manifest>\n```\n\n- **本库 4.1.1 至 4.1.3 之间的版本** ，若 Gradle 插件未指定 `targetSdkVersion 29+`，在 Android11+ 设备上可能会导致无法动态申请读写权限问题，参阅 [在权限里面加 maxSdkVersion 的用意](https://github.com/gzu-liyujiang/Android_CN_OAID/issues/25) 。\n- **Gradle Plugin 4.0.0 及以下版本编译失败解决方案** ，参阅 [Missing 'package' key attribute on element package](https://github.com/gzu-liyujiang/Android_CN_OAID/issues/26) 。\n\n### 代码示例\n\n获取多个可能的设备标识，结合服务端引入[拜占庭容错方案](https://juejin.cn/post/6844903952148856839#heading-11)得到可靠的稳定的设备唯一标识：\n\n- 第一步（可选的，用于调用 getClientId() 预取 OAID ）：\n\n```text\n    // 在`Application#onCreate`里初始化，注意APP合规性，若最终用户未同意隐私政策则不要调用\n    @Override\n    public void onCreate() {\n        super.onCreate();\n        if (privacyPolicyAgreed) {\n            DeviceIdentifier.register(this);\n        }\n    }\n```\n- 第二步：\n\n```text\n         // 获取IMEI，只支持Android 10之前的系统，需要READ_PHONE_STATE权限，可能为空\n        DeviceIdentifier.getIMEI(this);\n        // 获取安卓ID，可能为空\n        DeviceIdentifier.getAndroidID(this);\n        // 获取数字版权管理ID，可能为空。很鸡肋，在某些手机上还可能造成卡死或闪退，自4.2.7版本后已弃用\n        DeviceIdentifier.getWidevineID();\n        // 获取伪造ID，根据硬件信息生成，不会为空，有大概率会重复\n        DeviceIdentifier.getPseudoID()；\n        // 获取GUID，随机生成，不会为空\n        DeviceIdentifier.getGUID(this);\n        // 是否支持OAID/AAID\n        DeviceID.supportedOAID(this);\n        // 获取OAID/AAID，同步调用\n        DeviceIdentifier.getOAID(this);\n        // 获取OAID/AAID，异步回调\n        DeviceID.getOAID(this, new IGetter() {\n            @Override\n            public void onOAIDGetComplete(String result) {\n                // 不同厂商的OAID/AAID格式是不一样的，可进行MD5、SHA1之类的哈希运算统一\n            }\n\n            @Override\n            public void onOAIDGetError(Exception error) {\n                // 获取OAID/AAID失败\n            }\n        });\n```\n\n## 混淆规则\n\n本库自带`consumer-rules.pro`如下混淆规则，不混淆厂商的相关接口及类。若通过远程依赖的方式引用，则无需进行额外配置：\n\n```proguard\n# 本库模块专用的混淆规则（注：“repeackage”拼写是历史遗留问题）\n-keep class repeackage.com.uodis.opendevice.aidl.** { *; }\n-keep interface repeackage.com.uodis.opendevice.aidl.** { *; }\n-keep class repeackage.com.asus.msa.SupplementaryDID.** { *; }\n-keep interface repeackage.com.asus.msa.SupplementaryDID.** { *; }\n-keep class repeackage.com.bun.lib.** { *; }\n-keep interface repeackage.com.bun.lib.** { *; }\n-keep class repeackage.com.heytap.openid.** { *; }\n-keep interface repeackage.com.heytap.openid.** { *; }\n-keep class repeackage.com.samsung.android.deviceidservice.** { *; }\n-keep interface repeackage.com.samsung.android.deviceidservice.** { *; }\n-keep class repeackage.com.zui.deviceidservice.** { *; }\n-keep interface repeackage.com.zui.deviceidservice.** { *; }\n-keep class repeackage.com.coolpad.deviceidsupport.** { *; }\n-keep interface repeackage.com.coolpad.deviceidsupport.** { *; }\n-keep class repeackage.com.android.creator.** { *; }\n-keep interface repeackage.com.android.creator.** { *; }\n-keep class repeackage.com.google.android.gms.ads.identifier.internal.** { *; }\n-keep interface repeackage.com.google.android.gms.ads.identifier.internal.* { *; }\n-keep class repeackage.com.oplus.stdid.** {*; }\n-keep interface repeackage.com.oplus.stdid.** {*; }\n-keep class com.huawei.hms.ads.** {*; }\n-keep interface com.huawei.hms.ads.** {*; }\n-keep class com.hihonor.ads.** {*; }\n-keep interface com.hihonor.ads.** {*; }\n-keep class repeackage.com.qiku.id.** { *; }\n-keep interface repeackage.com.qiku.id.** { *; }\n```\n\n## 支持情况\n\n| 厂商或品牌                       | 系统或框架                                                 |\n|-----------------------------|-------------------------------------------------------|\n| 华为（Huawei）                  | HMS Core 2.6.2+、Google Play Service 4.0+              |\n| 荣耀（Honor）                   | Magic UI 4/5/6、MagicOS 7.0+、Google Play Service 4.0+  |\n| 小米（XiaoMi、Redmi、BlackShark） | MIUI 10.2+、Google Play Service 4.0+                   |\n| 维沃（VIVO、IQOO）               | Funtouch OS 9+、OriginOS 1.0+、Google Play Service 4.0+ |\n| 欧珀（OPPO、Realme）             | ColorOS 7.0+、Google Play Service 4.0+                 |\n| 三星（Samsung）                 | Android 10+、Google Play Service 4.0+                  |\n| 联想（Lenovo）                  | ZUI 11.4+、Google Play Service 4.0+                    |\n| 华硕（ASUS）                    | Android 10+、Google Play Service 4.0+                  |\n| 魅族（Meizu）                   | Android 10+、Google Play Service 4.0+                  |\n| 一加（OnePlus）                 | Android 10+、Google Play Service 4.0+                  |\n| 努比亚（Nubia）                  | Android 10+、Google Play Service 4.0+                  |\n| 酷派（Coolpad）                 | CoolOS、Google Play Service 4.0+                       |\n| 酷赛（Coosea ）                 | Android 10+、Google Play Service 4.0+                  |\n| 卓易（Droi ）                   | Freeme OS、Google Play Service 4.0+                    |\n| 其他（ZTE、HTC、Motorola、……）     | SSUI、Google Play Service 4.0+                         |\n\n> 注：本项目的 OAID 获取接口主要参考北京数字联盟公开的代码以及逆向分析参考移动安全联盟的 SDK、HUAWEI Ads SDK、小米 DeviceId.jar、Google Play Services SDK 等。\n\n## 效果预览\n\n### OAID（开放匿名设备标识符）\n\n- 华为手机 ![huawei](/screenshot/oaid_huawei.png)\n- 荣耀手机 ![hono](/screenshot/oaid_honor.png)\n- 小米手机 ![xiaomi](/screenshot/oaid_xiaomi.png)\n- 红米手机 ![redmi](/screenshot/oaid_redmi.png)\n- 黑鲨手机 ![blackshark](/screenshot/oaid_blackshark.png)\n- 维沃手机 ![vivo_iqoo](/screenshot/oaid_vivo_iqoo.png)\n- 欧珀手机 ![oppo](/screenshot/oaid_oppo.png)\n- 真我手机 ![realm](/screenshot/oaid_realme.png)\n- 三星手机 ![samsung](/screenshot/oaid_samsung.png)\n- 魅族手机 ![meizu](/screenshot/oaid_meizu.png)\n- 联想手机 ![lenovo](/screenshot/oaid_lenovo.png)\n- 一加手机 ![oneplus](/screenshot/oaid_oneplus.png)\n- 华硕手机 ![asus](/screenshot/oaid_asus.png)\n- 努比亚机  `待验证`\n- 酷派手机  `待验证`\n- 酷赛手机  `待验证`\n- 卓易手机  `待验证`\n\n### AAID（安卓广告标识符）\n\n- 谷歌手机 ![google](/screenshot/aaid_google.png)\n- 中兴手机 ![zte](/screenshot/aaid_zte.png)\n- 摩托罗拉 ![motorola](/screenshot/aaid_motorola.png)\n- 索尼手机 ![sony](/screenshot/aaid_sony.png)\n- 诺基亚机 ![nokia](/screenshot/aaid_nokia.png)\n- HTC 手机 ![htc](/screenshot/aaid_htc.png)\n- LG 手机 ![lge](/screenshot/aaid_lge.png)\n\n### 不支持 OAID 或 AAID\n\n- 用户关闭了广告标识符\n\n![disabled](/screenshot/oaid_disabled.png)\n\n- 以下厂商或品牌手机截止`2021年8月26日`已验证尚不支持：\n\n![nonsupport](/screenshot/oaid_wsa.png)\n\n```text\n锤子（Smartisan）、360（360）、奇酷（QiKu）、海信（Hisense）、金立（Gionee）、\n美图（Meitu）、糖果（SOAP）、格力（Gree）、朵唯（Doov）、优思（Uniscope）、\n夏普（SHARP）、乐视（LeTV）、维图（VOTO）、宏碁（Acer）、TCL（TCL）、……\n```\n\n## 参考资料\n\nOAID 是移动智能终端补充设备标识体系中的一员，官方定义为 Open Anonymous Device Identifier（开放匿名设备标识符），\n华为称之为 Open Advertising  ID （开放广告标识符），谷歌称之为 Android Advertising ID （安卓广告标识符）。\n\n- 逆向分析还原的 [手机厂商开放匿名设备标识符获取接口(AIDL)](https://github.com/gzu-liyujiang/Android_CN_OAID/tree/master/aidl) 。\n- [2tu/msa 提供的移动安全联盟统一 SDK 下载](https://github.com/2tu/msa) （download from `https://www.msa-alliance.cn/col.jsp?id=120` 这个存储库因版权问题被MSA举报了，参见 [DMCA 2023-09-21-msa](https://github.com/github/dmca/blob/master/2023/09/2023-09-21-msa.md) 。\n- 谷歌官方文档 [使用标识符的最佳做法](https://developer.android.google.cn/training/articles/user-data-ids) 。\n- [团体标准-移动智能终端补充设备标识规范-v20190516.pdf](https://swsdl.vivo.com.cn/appstore/developer/uploadfile/20191109/uohz59/%E5%9B%A2%E4%BD%93%E6%A0%87%E5%87%86-%E7%A7%BB%E5%8A%A8%E6%99%BA%E8%83%BD%E7%BB%88%E7%AB%AF%E8%A1%A5%E5%85%85%E8%AE%BE%E5%A4%87%E6%A0%87%E8%AF%86%E8%A7%84%E8%8C%83-v20190516.pdf) 。\n- 华为 [广告标识服务](https://developer.huawei.com/consumer/cn/doc/development/HMSCore-Guides/identifier-service-version-change-history-0000001050066927) 。\n- 荣耀 [广告标识服务](https://developer.hihonor.com/cn/kitdoc?kitId=11030&navigation=guides&docId=update-instructions.md&token=) 。\n- 小米 [设备标识体系说明](https://dev.mi.com/console/doc/detail?pId=1821) 。\n- 魅族 [移动智能终端补充设备标识](http://open-wiki.flyme.cn/doc-wiki/index#id?133) 。\n- 维沃 [移动智能终端补充设备标识服务](https://dev.vivo.com.cn/documentCenter/doc/253) 。\n- 欧珀 [移动智能终端补充设备标识体系](https://open.oppomobile.com/wiki/doc#id=10608) 。\n- 三星 [适配指导 | Android Q Device ID 权限变更](https://support-cn.samsung.com/App/DeveloperChina/notice/detail?noticeid=115) 。\n- 北京数字联盟公开的获取各厂商 OAID  的代码：[Get_Oaid_CNAdid](https://github.com/shuzilm-open-source/Get_Oaid_CNAdid)。\n- 获取或生成设备唯一标识后，推荐参考“[一种 Android 移动设备构造 UDID 的方案](https://github.com/No89757/Udid) ” 。\n- StackOverFlow [Is there a unique Android device ID ?](https://stackoverflow.com/questions/2785485/is-there-a-unique-android-device-id) 。\n\n## 远程真机\n\n- 免费 [华为远程真机云调试](https://developer.huawei.com/consumer/cn/agconnect/cloud-adjust) 。\n- 免费 [荣耀远程真机云调试](https://developer.hihonor.com/cn/doc/guides/100194) 。\n- 免费 [小米云测平台远程真机租用](https://testit.miui.com/remote) 。\n- 免费 [维沃云测平台远程真机](https://vcl.vivo.com.cn/#/machine/picking) 。\n- 免费 [欧珀云测平台远程真机](https://open.oppomobile.com/cloudmachine/device/list-plus) 。\n- 免费 [三星远程开发测试平台真机调试](http://samsung.smarterapps.cn/index.php?app=home&mod=Index&act=samsung) 。\n- 新人试用 ~~腾讯 WeTest 云真机调试、阿里 EMAS 移动测试远程真机、百度 MTC 远程真机调试、Testin 远程真机测试、AllTesting 真机测试~~ 。\n\n## 许可协议\n\n```text\nCopyright (c) 2016-present. gzu-liyujiang<1032694760@qq.com> and All Contributors.\n\nThe software is licensed under the Mulan PSL v2.\nYou can use this software according to the terms and conditions of the Mulan PSL v2.\nYou may obtain a copy of Mulan PSL v2 at:\n    http://license.coscl.org.cn/MulanPSL2\nTHIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR\nPURPOSE.\nSee the Mulan PSL v2 for more details.\n```\n## IDE 推荐\n\n支持开源，除了 Intellij IDEA Community / PyCharm  Community 和 EAP 版本可免费使用，也可通过 [申请开源开发许可证](https://www.jetbrains.com/shop/eform/opensource) 来免费使用正版的 [JetBrains 全家桶开发工具](https://www.jetbrains.com.cn/products/)，尤其是 Intellij IDEA Ultimate 版本很强大。\n\n"
        },
        {
          "name": "aidl",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 2.3544921875,
          "content": "/*\n * Copyright (c) 2016-present. 贵州纳雍穿青人李裕江 and All Contributors.\n *\n * The software is licensed under the Mulan PSL v2.\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\n * You may obtain a copy of Mulan PSL v2 at:\n *     http://license.coscl.org.cn/MulanPSL2\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR\n * PURPOSE.\n * See the Mulan PSL v2 for more details.\n */\n\nbuildscript {\n    apply from: \"${rootDir}/gradle/git.gradle\"\n    apply from: \"${rootDir}/gradle/config.gradle\"\n    apply from: \"${rootDir}/gradle/dependency.gradle\"\n    repositories {\n        maven { url 'https://maven.aliyun.com/repository/public' }\n        maven { url 'https://maven.aliyun.com/repository/central' }\n        maven { url 'https://maven.aliyun.com/repository/google' }\n        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }\n        google()\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:8.2.0'\n    }\n}\n\nallprojects {\n    repositories {\n        maven { url 'https://maven.aliyun.com/repository/public' }\n        maven { url 'https://maven.aliyun.com/repository/central' }\n        maven { url 'https://maven.aliyun.com/repository/google' }\n        google()\n        mavenCentral()\n        maven { url \"https://jitpack.io\" }\n        maven { url 'https://developer.huawei.com/repo' }\n        maven { url 'https://developer.hihonor.com/repo' }\n    }\n}\n\nsubprojects {\n    gradle.projectsEvaluated {\n        tasks.withType(JavaCompile).tap {\n            configureEach {\n                //增加一些编译选项\n                //options.compilerArgs << \"-Xlint:unchecked\" << \"-Xlint:deprecation\"\n            }\n        }\n    }\n}\n\ntasks.register('clean', Delete) {\n    println(\"********** clean build **********\")\n    println(\"delete project dir: \" + rootProject.buildDir)\n    rootProject.buildDir.deleteDir()\n    def dir = new File(new File(\".\").getAbsolutePath())\n    println(\"root dir: \" + dir.getAbsolutePath())\n    dir.eachDirRecurse {\n        dir2 ->\n            dir2.eachDirMatch(~/build/) {\n                directory ->\n                    println(\"delete child dir:\" + directory)\n                    directory.deleteDir()\n            }\n    }\n}\n"
        },
        {
          "name": "buildAPK.bat",
          "type": "blob",
          "size": 0.23828125,
          "content": "@rem JAVA_HOME -> Gradle 7 require JDK 11+, Gradle 8 require JDK 17+\n@rem See https://docs.gradle.org/current/userguide/compatibility.html\n@echo build and proguard apk\ncd /d ./\ngradlew.bat clean assembleRelease --info --warning-mode all\npause\n\n"
        },
        {
          "name": "demo.apk",
          "type": "blob",
          "size": 1244.48046875,
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.4404296875,
          "content": "#\n# Copyright (c) 2016-present. \\u8D35\\u5DDE\\u7EB3\\u96CD\\u7A7F\\u9752\\u4EBA\\u674E\\u88D5\\u6C5F and All Contributors.\n#\n# The software is licensed under the Mulan PSL v2.\n# You can use this software according to the terms and conditions of the Mulan PSL v2.\n# You may obtain a copy of Mulan PSL v2 at:\n#     http://license.coscl.org.cn/MulanPSL2\n# THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR\n# PURPOSE.\n# See the Mulan PSL v2 for more details.\n#\norg.gradle.jvmargs=-Xmx2048M -Dkotlin.daemon.jvm.options\\=\"-Xmx2048M\" -XX\\:+HeapDumpOnOutOfMemoryError -Dfile.encoding\\=UTF-8\n# \\u5E76\\u884C\\u6784\\u5EFA\norg.gradle.parallel=true\n# \\u8FDB\\u7A0B\\u5B88\\u62A4\norg.gradle.daemon=true\n# \\u6309\\u9700\\u914D\\u7F6E\norg.gradle.configureondemand=true\n# \\u9879\\u76EE\\u8DEF\\u5F84\\u542B\\u4E2D\\u6587\\u9700\\u52A0\\u4E0A\\u6B64\\u53E5\n#android.overridePathCheck=true\n# \\u542F\\u7528AndroidX\nandroid.useAndroidX=true\n# \\u5C06\\u4F9D\\u8D56\\u5305\\u8FC1\\u79FB\\u5230AndroidX\nandroid.enableJetifier=true\n# R8\\u6DF7\\u6DC6\\u6A21\\u5F0F\n#android.enableR8.fullMode=true\n# \\u663E\\u793A\\u6709\\u95EE\\u9898\\u7684gradle\\u5806\\u6808\nandroid.debug.obsoleteApi=true\n# INSTALL_FAILED_TEST_ONLY\nandroid.injected.testOnly=false\n# Android Gradle plugin 8+ required\nandroid.defaults.buildfeatures.buildconfig=true\nandroid.nonTransitiveRClass=false\nandroid.nonFinalResIds=false\n\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "jitpack.yml",
          "type": "blob",
          "size": 0.0185546875,
          "content": "jdk:\n  - openjdk17\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "publishAAR.bat",
          "type": "blob",
          "size": 0.2734375,
          "content": "@rem JAVA_HOME -> Gradle 7 require JDK 11+, Gradle 8 require JDK 17+\n@rem See https://docs.gradle.org/current/userguide/compatibility.html\n@echo publish aar to local repository\ncd /d ./\ngradlew.bat clean publishReleasePublicationToLocalRepository --info --warning-mode all\npause\n\n"
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.59765625,
          "content": "/*\n * Copyright (c) 2016-present. 贵州纳雍穿青人李裕江 and All Contributors.\n *\n * The software is licensed under the Mulan PSL v2.\n * You can use this software according to the terms and conditions of the Mulan PSL v2.\n * You may obtain a copy of Mulan PSL v2 at:\n *     http://license.coscl.org.cn/MulanPSL2\n * THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR\n * PURPOSE.\n * See the Mulan PSL v2 for more details.\n */\n\ninclude ':library'\ninclude ':app'\n"
        }
      ]
    }
  ]
}