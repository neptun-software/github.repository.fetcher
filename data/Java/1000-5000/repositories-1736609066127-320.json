{
  "metadata": {
    "timestamp": 1736609066127,
    "page": 320,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "davideas/FlexibleAdapter",
      "stars": 3563,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3134765625,
          "content": "# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n.idea/\ntools/\n.DS_Store\n*.iml\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.681640625,
          "content": "Please check off the following points BEFORE submitting a new issue / asking support.\n- [ ] Write a self explanatory Subject.\n- [ ] Check if the issue has already been raised by someone else (see closed issue).\n\n1) For Bugs / Support\n- [ ] What you've tried (If necessary, indicate library Version / Android version / hardware).\n- [ ] Expected behavior and actual behavior (problem encountered).\n- [ ] Steps to reproduce the problem (also include code snippets if you think will help).\n\n2) For questions / new feature / improvement\n- [ ] Simply Erase all this text and ask your question;\n\n3) To have your App added to the list\n- [ ] Simply Erase all this text and provide your app's name and link.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.1796875,
          "content": "[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-FlexibleAdapter-green.svg?style=flat)](http://android-arsenal.com/details/1/2207)\n[![Download](https://api.bintray.com/packages/davideas/maven/flexible-adapter/images/download.svg)](https://bintray.com/davideas/maven/flexible-adapter/_latestVersion)\n[![API](https://img.shields.io/badge/API-14%2B-green.svg?style=flat)](https://android-arsenal.com/api?level=14)\n[![Licence](https://img.shields.io/badge/Licence-Apache2-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0)\n![Methods and Size](https://img.shields.io/badge/Methods%20and%20size-Core:%20759,%20124%20KB%20|%20UI:%20267,%2068%20KB-e91e63.svg)\n\n# FlexibleAdapter\n- [v5.1.0](https://github.com/davideas/FlexibleAdapter/releases/tag/5.1.0) built on 2018.09.30 with AndroidX\n- If you come from previous versions, update your code following the Wiki page [Migrations](https://github.com/davideas/FlexibleAdapter/wiki/Migrations).\n- Please read also [issues](https://github.com/davideas/FlexibleAdapter/issues) and [releases](https://github.com/davideas/FlexibleAdapter/releases).\n\n### One Adapter many Apps\n> :mega: When initially Android:registered: team introduced the RecyclerView widget, we had to implement a custom Adapter in several applications, again and again to provide the items for our views.<br/>\nWe didn't know how to add selection and to combine all the use cases in the same Adapter.\nSince I created this library, it has become easy to configure multiple views and now, nobody wants to use a ListView anymore.\n\nThe idea behind is to regroup multiple features in a unique library, without the need to customize and import several third libraries not compatible among them.\n\nThe FlexibleAdapter helps developers to simplify this process without worrying too much about the Adapter anymore. It's easy to use, it has predefined logic for different situations and prevents common mistakes.<br/>\nThis library is configurable and it guides the developers to create a better user experience and now, even more with the new features.\n\n### Features in main library\n* Simple, Single & Multi selection mode.\n* Mapping multi-view types with [Item interfaces](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Item-Interfaces).\n* Predefined [ViewHolders](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-ViewHolders) with (child) click listeners and others callbacks.\n* Async [Updates](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Update-Data-Set) with optional _DiffUtil_ for small lists.\n* Async [Filter](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Search-Filter) with spannable text (:eyeglasses:); Result list is animated; With optional original list; Works with sub items; Multi filter.\n* [High performance](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Search-Filter#performance-result-when-animations-are-active) filter and updates for medium and big lists.\n* [Headers and Sections](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Headers-and-Sections) with sticky behaviour fully clickable and collapsible, elevation, transparency and automatic linkage on item move!\n* [Scrollable Headers and Footers](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Scrollable-Headers-and-Footers) items that lay respectively at the top and at the bottom of the main items.\n* [Expandable items](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Expandable-items) with _Selection Coherence_ and multi-level expansion.\n* [Drag&Drop and Swipe-To-Dismiss](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Drag&Drop-and-Swipe#swiping-the-front-view) with Leave-Behind pattern and with _Selection Coherence_.\n* Innovative bottom and top [EndlessScroll](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-On-Load-More) (_No OnScrollListener_).\n* Customizable [FastScroller](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-FastScroller) with several features.\n* Customizable [Scrolling Animations](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Adapter-Animations) based on adapter position and beyond.\n* Customizable [Animations](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Adapter-Animations#item-animations-when-items-are-notified) when adding and removing items.\n* [LayoutUtils](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Utils) for orientation, span count and visible items calculation.\n* Support for any [thirds LayoutManagers](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Thirds-Layout-Managers).\n* Easy runtime position calculation for adding/moving items in sections.\n* Custom Tags for multiple adapter instances that ease our debug.\n* Comprehensive [Wiki](https://github.com/davideas/FlexibleAdapter/wiki) pages and JavaDoc documentation.\n\n### UI extension library :eyeglasses:\n* Faster setup selection with [ActionModeHelper](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-ActionModeHelper).\n* Faster setup for item restoration with [UndoHelper](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-UndoHelper); Works with expandable and swiped items too!\n* Basic empty view handling with [EmptyViewHelper](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-EmptyViewHelper).\n* [Advanced item decoration](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Flexible-Item-Decoration) (customizable dividers, sections gap and item offsets).\n* 3 layout managers that support smooth scrolling.\n* [FlexibleUtils](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Utils) for text highlighting, accent color fetching, API versions.\n* [DrawableUtils](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Utils) for dynamic backgrounds with ripple effect (_No XML_).\n\n### Others _experimental_ extension libraries\n* [Live Data](https://github.com/davideas/FlexibleAdapter/wiki/Extensions-%7C-LiveData).\n* Data Binding.\n\n# Setup\n#### build.gradle\n```\nrepositories {\n    jcenter()\n}\n```\n```\ndependencies {\n    // Using JCenter\n    implementation 'eu.davidea:flexible-adapter:5.1.0'\n    implementation 'eu.davidea:flexible-adapter-ui:1.0.0'\n    implementation 'eu.davidea:flexible-adapter-livedata:1.0.0-b3'\n    // From 1.0.0-b3, library is compiled with data binding v2\n    implementation 'eu.davidea:flexible-adapter-databinding:1.0.0'\n}\n```\n#### Stay Updated\n|Flexible Adapter|UI|Live Data|Data Binding|\n|---|---|---|---|\n|<div align=\"center\">5.1.0</div>|<div align=\"center\">1.0.0</div>|<div align=\"center\">1.0.0-b3</div>|<div align=\"center\">1.0.0</div>|\n|<a href='https://bintray.com/davideas/maven/flexible-adapter?source=watch' alt='Get automatic notifications about new \"flexible-adapter\" versions'><img src='https://www.bintray.com/docs/images/bintray_badge_color.png'></a>|<a href='https://bintray.com/davideas/maven/flexible-adapter-ui?source=watch' alt='Get automatic notifications about new \"flexible-adapter-ui\" versions'><img src='https://www.bintray.com/docs/images/bintray_badge_bw.png'></a>|<a href='https://bintray.com/davideas/maven/flexible-adapter-livedata?source=watch' alt='Get automatic notifications about new \"flexible-adapter-livedata\" versions'><img src='https://www.bintray.com/docs/images/bintray_badge_bw.png'></a>|<a href='https://bintray.com/davideas/maven/flexible-adapter-databinding?source=watch' alt='Get automatic notifications about new \"flexible-adapter-databinding\" versions'><img src='https://www.bintray.com/docs/images/bintray_badge_bw.png'></a>|\n\n# Wiki!\nI strongly recommend to read the **[Wiki](https://github.com/davideas/FlexibleAdapter/wiki) pages**, where you can find a comprehensive Tutorial.<br/>\n\n### Pull requests / Issues / Improvement requests\nFeel free to contribute and ask!<br/>\nActive discussions:\n- [The next steps of development: New demoApp > Extensions](https://github.com/davideas/FlexibleAdapter/issues/361).\n\n### Under the hood\nSome simple features have been implemented, thanks to some Blogs (see at the bottom of the page), merged and methods have been improved for speed and scalability.\n\n<p align=\"center\"><img src=\"./screenshots/wiki_diagram.png\"></p>\n\n* At lower level there is `SelectableAdapter` class. It provides selection features and it's able to _maintain the state_ after the rotation: you just need to call the onSave/onRestore methods from the Activity!\n* At middle level, the `AnimatorAdapter` class has been added to give some animation at startup and when user scrolls.\n* At front level, the core class `FlexibleAdapter`. It holds and handles the main list, performs actions on all different types of item paying attention at the adding and removal of the items, as well as the new concept of \"selection coherence\".\n* Useful extensions and helpers have been added during the time to simplify the development.\n* Item interfaces and predefined ViewHolders complete the whole library giving more actions to the items and configuration options to developers.\n\n# Showcase of the demo App\nYou can [download](https://github.com/davideas/FlexibleAdapter/releases) the latest demo App from the latest release page OR run it with the emulator.<br>\nThis [Wiki page](https://github.com/davideas/FlexibleAdapter/wiki/5.x-%7C-Demo-App) will give you a short briefing of the demo App.\n\n![Overall](/screenshots/demo20_overall.png)\n![Adapter Animations](/screenshots/demo20_adapter_animations.png)\n![Undo](/screenshots/demo20_undo_single_selection.png)\n![Staggered Layout](/screenshots/demo20_dynamic_staggered_layout.png)\n\n![Endless](/screenshots/demo20_endless.png)\n![Instagram](/screenshots/demo20_instagram.png)\n![Expandables](/screenshots/demo20_expandables.png)\n![Multi Selection & SC](/screenshots/demo20_selection_coherence.png)\n\n![Drag & Drop](/screenshots/demo20_drag_linear.png)\n![swipe-to-dismiss1](/screenshots/demo20_swipe-to-dismiss1.png)\n![swipe-to-dismiss2](/screenshots/demo20_swipe-to-dismiss2.png)\n![ViewPager](/screenshots/demo20_view_pager.png)\n\n![Async Filter](/screenshots/demo20_async_filter.png)\n![Search Filter](/screenshots/demo20_search_filter.png)\n![Search Sections](/screenshots/demo20_search_sections.png)\n\n# Change Log\n###### Latest release\n[v5.1.0](https://github.com/davideas/FlexibleAdapter/releases/tag/5.1.0) - 2018.09.30\n\n###### Old releases\n[v5.0.6](https://github.com/davideas/FlexibleAdapter/releases/tag/5.0.6) - 2018.09.16 |\n[v5.0.5](https://github.com/davideas/FlexibleAdapter/releases/tag/5.0.5) - 2018.06.03 |\n[v5.0.4](https://github.com/davideas/FlexibleAdapter/releases/tag/5.0.4) - 2018.05.01 |\n[v5.0.3](https://github.com/davideas/FlexibleAdapter/releases/tag/5.0.3) - 2018.03.23 |\n[v5.0.2](https://github.com/davideas/FlexibleAdapter/releases/tag/5.0.2) - 2018.03.17 |\n[v5.0.1](https://github.com/davideas/FlexibleAdapter/releases/tag/5.0.1) - 2018.03.11 |\n[v5.0.0](https://github.com/davideas/FlexibleAdapter/releases/tag/5.0.0) - 2018.03.04\n\n# Limitations\nItem half swipe cannot be implemented due to how the `android.support.v7.widget.helper.ItemTouchHelper` is done, also clicks on rear view are not possible, same reason.\nHalf swipe can be done with others means, please see issues #98 and #100. See also commits of Apr 25, 2016. \n\n# Thanks\n###### Inspired by\n- http://enoent.fr/blog/2015/01/18/recyclerview-basics/\n- https://www.grokkingandroid.com/statelistdrawables-for-recyclerview-selection/\n\n###### Special thanks goes to\n- Martin Guillon ([Akylas](https://github.com/Akylas)) to have contributed at the development of the new technique for the Sticky Header.\n- [Arpinca](https://github.com/arpinca) who added new features for FastScroller like _autoHide_ and _ignoreTouchesOutsideHandle_ and more.\n\n###### Donations\nThis library is currently free to use and modify, if you would like to say _Thank You_ by donating any amount, you're very welcome! Here the link to PayPal.me:\n\n[![PayPal.me](https://www.paypalobjects.com/webstatic/i/sparta/logo/logo_paypal_106x29.png)](https://www.paypal.me/davideas)\n\n# Imported libraries\n- The library [LollipopContactsRecyclerViewFastScroller](https://github.com/AndroidDeveloperLB/LollipopContactsRecyclerViewFastScroller) has been imported, heavily improved and adapted to work in conjunction with `AnimatorAdapter`.\n- The library [sticky-headers-recyclerview](https://github.com/timehop/sticky-headers-recyclerview) was initially imported, then it was removed in favor of the new technique able to manage a real _View_ and so to handle the click events properly.\n- The item spacing technique comes from the library [CommonItemDecoration](https://github.com/ibosong/CommonItemDecoration) and it has been improved with new features.\n\n# Apps that use this Adapter\nIt will be a pleasure to add your App here, once it is published.\n\n[Module.org](https://play.google.com/store/apps/details?id=org.module.app) |\n[Neuronizer](https://play.google.com/store/apps/details?id=de.djuelg.neuronizer) |\n[Nextcloud Talk](https://play.google.com/store/apps/details?id=com.nextcloud.talk2) |\n[Socio - Shake and Connect!](https://play.google.com/store/apps/details?id=com.atsocio.socio) |\n[Shibagram](https://play.google.com/store/apps/details?id=com.apripachkin.shibagram) |\n[BNVR Client](https://play.google.com/store/apps/details?id=ru.beward.bnvr)\n\n# License\n\n#### FlexibleAdapter & Extensions\n\n    Copyright 2015-2018 Davide Steduto, Davidea Solutions Sprl\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n#### FastScroller\n\n    Copyright 2016-2017 AndroidDeveloperLB, Davide Steduto & Arpinca\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 5.02734375,
          "content": "allprojects {\n    // Top-level build file where you can add configuration options common to all sub-projects/modules.\n    ext {\n        // Author\n        developerId = \"davideas\"\n        developerName = \"Davide Steduto\"\n        developerEmail = \"dave.dna@gmail.com\"\n\n        // Library Repository\n        libraryName = \"FlexibleAdapter\"\n        bintrayRepo = \"maven\"\n        packageExt = \"aar\"\n        siteUrl = \"https://github.com/davideas/FlexibleAdapter\"\n        gitUrl = \"https://github.com/davideas/FlexibleAdapter.git\"\n\n        // SDK and Build tools version\n        minSdk = 14\n        targetSdk = 30 // Android 11\n\n        // AndroidX\n        androidxVer = '1.3.0'\n        appCompatVer = '1.2.0'\n        cardviewVer = '1.0.0'\n        annotationVer = '1.1.0'\n        vectorDrawableVer = '1.1.0'\n        recyclerViewVer = '1.1.0'\n        lifecycleVer = \"2.3.0\"\n        constraintVer = \"2.0.4\"\n        coreVer = \"1.3.2\"\n        swipeRefreshVer = \"1.1.0\"\n        transitionVer = \"1.4.0\"\n\n        androidx = [\n                recyclerView       : \"androidx.recyclerview:recyclerview:${recyclerViewVer}\",\n                recyclerViewSelection : \"androidx.recyclerview:recyclerview-selection:${recyclerViewVer}\",\n                appCompat          : \"androidx.appcompat:appcompat:${appCompatVer}\",\n                cardView           : \"androidx.cardview:cardview:${cardviewVer}\",\n                annotation         : \"androidx.annotation:annotation:${annotationVer}\",\n                browser            : \"androidx.browser:browser:${androidxVer}\",\n                vectorDrawable     : \"androidx.vectordrawable:vectordrawable:${vectorDrawableVer}\",\n                transition         : \"androidx.transition:transition:${transitionVer}\",\n                lifecycleExtensions: \"androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycleVer}\",\n                constraintLayout   : \"androidx.constraintlayout:constraintlayout:${constraintVer}\",\n                core               : \"androidx.core:core:${coreVer}\",\n                swipeRefreshLayout : \"androidx.swiperefreshlayout:swiperefreshlayout:${swipeRefreshVer}\"\n        ]\n\n        // Google Material\n        googleVer = \"1.3.0\"\n        google = [\n                material: \"com.google.android.material:material:${googleVer}\"\n        ]\n\n        // Widgets\n        flipViewVer = \"1.2.0@aar\"\n        iconicsVer = \"3.2.2@aar\"\n        iconicsCmdVer = \"3.5.95.1@aar\"\n        widgets = [\n                flipView        : \"eu.davidea:flipview:${flipViewVer}\",\n                iconicsCore     : \"com.mikepenz:iconics-core:${iconicsVer}\",\n                iconicsViews    : \"com.mikepenz:iconics-views:${iconicsVer}\",\n                iconicsCommunity: \"com.mikepenz:community-material-typeface:${iconicsCmdVer}\",\n        ]\n\n        // 3rd Libraries\n        butterKnifeVer = \"10.2.3\"\n        timberVer = \"4.7.1\"\n        glideVer = \"4.12.0\"\n        javaxInjectVer = \"1\"\n        junitJupiterVer = \"5.2.0\"\n        libraries = [\n                butterKnife        : \"com.jakewharton:butterknife:${butterKnifeVer}\",\n                butterKnifeCompiler: \"com.jakewharton:butterknife-compiler:${butterKnifeVer}\",\n                timber             : \"com.jakewharton.timber:timber:${timberVer}\",\n                glide              : \"com.github.bumptech.glide:glide:${glideVer}\",\n                glideCompiler      : \"com.github.bumptech.glide:compiler:${glideVer}\",\n                javaxInject        : \"javax.inject:javax.inject:${javaxInjectVer}\",\n        ]\n\n        // License stuff\n        licenseName = \"The Apache Software License, Version 2.0\"\n        licenseUrl = \"http://www.apache.org/licenses/LICENSE-2.0.txt\"\n        licenseDist = \"repo\"\n        allLicenses = [\"Apache-2.0\"]\n    }\n\n    repositories {\n        mavenCentral()\n        gradlePluginPortal()\n        google()\n        maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n    }\n\n    tasks.withType(Javadoc) {\n        options.addStringOption('Xdoclint:none', '-quiet')\n        options.addStringOption('encoding', 'UTF-8')\n    }\n}\n\nbuildscript {\n    repositories {\n        mavenCentral()\n        gradlePluginPortal()\n        google()\n        maven { url \"https://oss.sonatype.org/content/repositories/snapshots/\" }\n    }\n\n    ext {\n        gradle_plugin_version = '4.0.0'\n        android_apt_version = '1.8'\n        maven_gradle_plugin_version = '2.1'\n        javadoc_plugin_version = '0.3.0'\n        android_junit5_version = '1.7.1.1'\n        grabver_version = '1.0.1'\n    }\n\n    dependencies {\n        classpath \"com.android.tools.build:gradle:$gradle_plugin_version\"\n        classpath \"com.neenbedankt.gradle.plugins:android-apt:$android_apt_version\"\n        classpath \"com.github.dcendents:android-maven-gradle-plugin:$maven_gradle_plugin_version\"\n        classpath \"com.vanniktech:gradle-android-javadoc-plugin:$javadoc_plugin_version\"\n        classpath \"de.mannodermaus.gradle.plugins:android-junit5:$android_junit5_version\"\n        classpath \"eu.davidea:grabver:$grabver_version\"\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}"
        },
        {
          "name": "flexible-adapter-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "flexible-adapter-databinding",
          "type": "tree",
          "content": null
        },
        {
          "name": "flexible-adapter-livedata",
          "type": "tree",
          "content": null
        },
        {
          "name": "flexible-adapter-ui",
          "type": "tree",
          "content": null
        },
        {
          "name": "flexible-adapter",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.0517578125,
          "content": "android.useAndroidX=true\nandroid.enableJetifier=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "jfrog-artifactory-publish.gradle",
          "type": "blob",
          "size": 1.087890625,
          "content": "apply plugin: 'com.jfrog.artifactory'\n\ntask sourcesJar(type: Jar) {\n    from android.sourceSets.main.java.srcDirs\n    classifier = 'sources'\n}\n\ntask javadoc(type: Javadoc) {\n    source = android.sourceSets.main.java.srcDirs\n    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n}\n\ntask javadocJar(type: Jar, dependsOn: javadoc) {\n    classifier = 'javadoc'\n    from javadoc.getDestinationDir()\n}\n\nartifacts {\n    archives javadocJar\n    archives sourcesJar\n}\n\nartifactory {\n    contextUrl = 'http://oss.jfrog.org/artifactory/'\n    publish {\n        repository {\n            // The Artifactory repository key to publish to\n            repoKey = versioning.name.endsWith('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'\n            username = getProperties().get(\"bintray.user\")\n            password = getProperties().get(\"bintray.apikey\")\n        }\n        //noinspection GroovyAssignabilityCheck\n        defaults {\n            publishArtifacts = true\n            // Publish generated POM files to Artifactory (true by default)\n            publishPom = true\n        }\n    }\n}"
        },
        {
          "name": "jfrog-bintray-publish.gradle",
          "type": "blob",
          "size": 1.23046875,
          "content": "apply plugin: 'com.jfrog.bintray'\n\ndef getRepositoryUsername() {\n    return getProperties().get('bintray.user')\n}\n\ndef getRepositoryPassphrase() {\n    return getProperties().get('bintray.gpg.password')\n}\n\ndef getApiKey() {\n    return getProperties().get(\"bintray.apikey\")\n}\n\nif (gradle.getStartParameter().getTaskNames().contains(\"bintrayUpload\")) {\n    println(\"> Publishing: \" + libraryName + \" v\" + versioning.name)\n\n    bintray {\n        user = getRepositoryUsername()\n        key = getApiKey()\n\n        configurations = ['archives']\n        pkg {\n            repo = bintrayRepo\n            name = bintrayName\n            desc = libraryDescription\n            websiteUrl = siteUrl\n            licenses = allLicenses\n            vcsUrl = gitUrl\n            labels = libraryLabels\n            publish = true\n            publicDownloadNumbers = true\n            version {\n                name = versioning.name\n                desc = libraryDescription\n                vcsTag = versioning.name\n                released = new Date()\n                gpg {\n                    sign = true //Determines whether to GPG sign the files. The default is false\n                    passphrase = getRepositoryPassphrase()\n                }\n            }\n        }\n    }\n}"
        },
        {
          "name": "maven-install.gradle",
          "type": "blob",
          "size": 1.7890625,
          "content": "apply plugin: 'com.github.dcendents.android-maven'\n\nif (gradle.getStartParameter().getTaskNames().contains(\"install\")) {\n    println(\"> Installing: \" + libraryName + \" v\" + versioning.name)\n}\n\ngroup = publishedGroupId // Maven Group ID for the artifact\n\ntask sourcesJar(type: Jar) {\n    classifier = 'sources'\n    from android.sourceSets.main.java.srcDirs\n}\n\ntask javadoc(type: Javadoc) {\n    source = android.sourceSets.main.java.srcDirs\n    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))\n}\n\ntask javadocJar(type: Jar, dependsOn: javadoc) {\n    classifier = 'javadoc'\n    from javadoc.getDestinationDir()\n}\n\nartifacts {\n    archives sourcesJar\n    archives javadocJar\n}\n\ninstall {\n    repositories.mavenInstaller {\n        // This generates POM.xml with proper parameters\n        pom {\n            //noinspection GroovyAssignabilityCheck\n            project {\n                packaging packageExt\n                groupId publishedGroupId\n                artifactId artifact\n                version versioning.name\n\n                // Add your description here\n                name libraryName\n                description libraryDescription\n                url siteUrl\n\n                // Set your license\n                licenses {\n                    license {\n                        name licenseName\n                        url licenseUrl\n                    }\n                }\n                developers {\n                    developer {\n                        id developerId\n                        name developerName\n                        email developerEmail\n                    }\n                }\n                scm {\n                    connection gitUrl\n                    developerConnection gitUrl\n                    url siteUrl\n                }\n            }\n        }\n    }\n}"
        },
        {
          "name": "maven-publish.gradle",
          "type": "blob",
          "size": 4.05859375,
          "content": "/*\n * Copyright 2013 Chris Banes\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\napply plugin: 'maven'\napply plugin: 'signing'\n\nif (gradle.getStartParameter().getTaskNames().contains(\"uploadArchives\")) {\n    println(\"> Publishing: \" + libraryName + \" v\" + versioning.name)\n}\n\ndef hasProxy() { return hasProperty('systemProp.http.proxyUser')}\ndef getProxyType() { return \"http\" }\ndef getProxyHost() { return getProperties().get(\"systemProp.http.proxyHost\") }\ndef getProxyPort() { return Integer.parseInt((String) getProperties().get(\"systemProp.http.proxyPort\")) }\ndef getProxyUser() { return getProperties().get(\"systemProp.http.proxyUser\") }\ndef getProxyPassword() { return getProperties().get(\"systemProp.http.proxyPassword\") }\n\ndef isReleaseBuild() {\n    return versioning.name.contains(\"SNAPSHOT\") == false\n}\n\ndef getReleaseRepositoryUrl() {\n    return \"https://oss.sonatype.org/service/local/staging/deploy/maven2/\"\n}\n\ndef getSnapshotRepositoryUrl() {\n    return \"https://oss.sonatype.org/content/repositories/snapshots/\"\n}\n\ndef getRepositoryUsername() {\n    return getProperties().get('nexus.username')\n}\n\ndef getRepositoryPassword() {\n    return getProperties().get('nexus.password')\n}\n\nafterEvaluate { project ->\n    uploadArchives {\n        repositories {\n            mavenDeployer {\n                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }\n\n                pom.groupId = publishedGroupId\n                pom.artifactId = artifact\n                pom.version = versioning.name\n\n                if (hasProxy()) {\n                    println(\"PROXY! host: \" + getProxyHost() + \", port: \" + getProxyPort() + \", type: \" + getProxyType() + \", userName: \" + getProxyUser() + \", password: \" + getProxyPassword())\n                }\n                repository(url: getReleaseRepositoryUrl()) {\n                    if (hasProxy()) {\n                        proxy(host: getProxyHost(), port: getProxyPort(), type: getProxyType(), userName: getProxyUser(), password: getProxyPassword())\n                    }\n                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())\n                }\n                snapshotRepository(url: getSnapshotRepositoryUrl()) {\n                    if (hasProxy()) {\n                        proxy(host: getProxyHost(), port: getProxyPort(), type: getProxyType(), userName: getProxyUser(), password: getProxyPassword())\n                    }\n                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())\n                }\n\n                pom.project {\n                    name libraryName\n                    packaging packageExt\n                    description libraryDescription\n                    url siteUrl\n                    scm {\n                        connection gitUrl\n                        developerConnection gitUrl\n                        url siteUrl\n                    }\n                    licenses {\n                        license {\n                            name licenseName\n                            url licenseUrl\n                            distribution licenseDist\n                        }\n                    }\n                    developers {\n                        developer {\n                            id developerId\n                            name developerName\n                            email developerEmail\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    signing {\n        required { isReleaseBuild() && gradle.taskGraph.hasTask(\"uploadArchives\") }\n        sign configurations.archives\n    }\n}"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.16796875,
          "content": "include ':flexible-adapter',\n        ':flexible-adapter-app',\n        ':flexible-adapter-databinding',\n        ':flexible-adapter-ui',\n        ':flexible-adapter-livedata'\n"
        }
      ]
    }
  ]
}