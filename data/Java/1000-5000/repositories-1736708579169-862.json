{
  "metadata": {
    "timestamp": 1736708579169,
    "page": 862,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "openrewrite/rewrite",
      "stars": 2408,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.3603515625,
          "content": "* text eol=lf\n\n#\n# The above will handle all files NOT found below\n# https://help.github.com/articles/dealing-with-line-endings/\n# https://github.com/Danimoth/gitattributes\n\n# These are explicitly windows files and should use crlf\n*.bat           text eol=crlf\n*.cmd           text eol=crlf\n\n# These files are text and should be normalized (Convert crlf => lf)\n*.bash          text eol=lf\n*.css           text diff=css\n*.htm           text diff=html\n*.html          text diff=html\n*.java          text diff=java\n*.sh            text eol=lf\n\n\n# These files are binary and should be left untouched\n# (binary is a macro for -text -diff)\n*.a             binary\n*.lib           binary\n*.icns          binary\n*.png           binary\n*.jpg           binary\n*.jpeg          binary\n*.gif           binary\n*.ico           binary\n*.mov           binary\n*.mp4           binary\n*.mp3           binary\n*.flv           binary\n*.fla           binary\n*.swf           binary\n*.gz            binary\n*.zip           binary\n*.jar           binary\n*.tar           binary\n*.tar.gz        binary\n*.7z            binary\n*.ttf           binary\n*.pyc           binary\n*.gpg           binary\n*.bin           binary\n*.exe           binary\n*.dll           binary\n*.so            binary\n*.dylib         binary\n*.class         binary\n*.jar           binary\n*.war           binary\n*.ear           binary\n*.rar           binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.181640625,
          "content": "bin/\nbuild/\n.gradle/\nout/\n*/src/main/gen/\n*/src/main/antlr/gen\n.idea/\n.project\n.classpath\n.settings/\n.DS_Store\n**/node_modules/\nIDE.properties\n# ASDF https://asdf-vm.com/\n.tool-versions\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "IDE.properties.tmp",
          "type": "blob",
          "size": 1.4638671875,
          "content": "########################################################\n# If you are only working on a subset of the modules in this project, you can optimize your\n# IDE to only load those modules. Copy `IDE.properties.tmp` to `IDE.properties` and comment out\n# any lines that correspond to modules you do not want to work on. This will cause Gradle to\n# swap those project dependencies for binary dependencies resolved from either Maven local or\n# the OSS snapshots repository, and speed up your IDE.\n########################################################\n\n# To work on the core module like recipe lifecycle, semver semantics, etc. or\n# to work on the RewriteTest unit testing harness.\n\nrewrite-core\nrewrite-test\n\n# To work on Java recipes, you generally only need rewrite-java and rewrite-java-test.\n# The former is where the recipe logic lives, and the latter is where the tests live.\n# rewrite-java-tck and rewrite-java-17 are only needed if you intend to work on the\n# language parser.\n\nrewrite-java\nrewrite-java-lombok\nrewrite-java-test\nrewrite-java-tck\nrewrite-java-17\nrewrite-java-21\n\n# Other language modules\n\nrewrite-gradle\nrewrite-groovy\nrewrite-hcl\nrewrite-json\nrewrite-maven\nrewrite-properties\nrewrite-protobuf\nrewrite-xml\nrewrite-yaml\n\n# These aren't depended on by any other modules, so if you comment them out\n# there is no need for a binary dependency substitution rule.\n\nrewrite-benchmarks\nrewrite-bom\n\n# Tools that are used less frequently to, for example, build new language parsers.\n\n#tools\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.6328125,
          "content": "<p align=\"center\">\n  <a href=\"https://docs.openrewrite.org\">\n    <picture>\n      <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://github.com/openrewrite/rewrite/raw/main/doc/logo-oss-dark.svg\">\n      <source media=\"(prefers-color-scheme: light)\" srcset=\"https://github.com/openrewrite/rewrite/raw/main/doc/logo-oss-light.svg\">\n      <img alt=\"OpenRewrite Logo\" src=\"https://github.com/openrewrite/rewrite/raw/main/doc/logo-oss-light.svg\" width='600px'>\n    </picture>\n  </a>\n</p>\n\n<div align=\"center\">\n\n<!-- Keep the gap above this line, otherwise they won't render correctly! -->\n[![ci](https://github.com/openrewrite/rewrite/actions/workflows/ci.yml/badge.svg)](https://github.com/openrewrite/rewrite/actions/workflows/ci.yml)\n[![Apache 2.0](https://img.shields.io/github/license/openrewrite/rewrite.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n[![Maven Central](https://img.shields.io/maven-central/v/org.openrewrite/rewrite-java.svg)](https://mvnrepository.com/artifact/org.openrewrite/rewrite-java)\n[![Revved up by Develocity](https://img.shields.io/badge/Revved%20up%20by-Develocity-06A0CE?logo=Gradle&labelColor=02303A)](https://ge.openrewrite.org/scans)\n[![Contributing Guide](https://img.shields.io/badge/Contributing-Guide-informational)](https://github.com/openrewrite/.github/blob/main/CONTRIBUTING.md)\n</div>\n\n<h1 align=\"center\">Fast, repeatable refactoring for developers</h1>\n\nThe OpenRewrite project (managed by [Moderne](https://www.moderne.ai/)) is an open-source automated refactoring ecosystem for source code, enabling developers to effectively eliminate technical debt within their repositories.\n\nIt consists of an auto-refactoring engine that runs prepackaged, open source refactoring recipes for common framework migrations, security fixes, and stylistic consistency tasks—reducing your coding effort from hours or days to minutes. Build tool plugins like [OpenRewrite Gradle Plugin](https://docs.openrewrite.org/reference/gradle-plugin-configuration) and [OpenRewrite Maven Plugin](https://docs.openrewrite.org/reference/rewrite-maven-plugin) help you run these recipes on one repository at a time.\n\nOpenRewrite recipes have bench strength in Java and are part of a growing community of languages, frameworks, and tech. It’s thousands of great individuals and teams working to make software seamless to update and continuously secure. You can also easily customize recipes for your code.\n\nStart with our [quickstart guide](https://docs.openrewrite.org/running-recipes/getting-started) and let OpenRewrite handle the boring parts of software development for you.\n\nGet and stay informed:\n* Read the [documentation](http://docs.openrewrite.org).\n* Join us on [Slack](https://join.slack.com/t/rewriteoss/shared_invite/zt-nj42n3ea-b~62rIHzb3Vo0E1APKCXEA) or [Discord](https://discord.gg/xk3ZKrhWAb)! We're happy to answer your questions directly.\n* Check out [Community Office Hours](https://www.youtube.com/@moderne-and-openrewrite/streams) where we deep dive topics and answer questions.\n* Subscribe to our [YouTube](https://www.youtube.com/@moderne-and-openrewrite) channel for great videos on OpenRewrite recipes.\n* Follow us on [Twitter](https://twitter.com/openrewrite) and [LinkedIn](https://www.linkedin.com/company/moderneinc).\n\nOpenRewrite is Apache2 licensed and maintained by Moderne. OpenRewrite's refactoring engine and recipes will always be open source.\n\n## Refactoring at scale with Moderne\n\n[Moderne](https://www.moderne.io/) is a commercial platform designed to run the OpenRewrite recipe catalog with incredible efficiency, supporting large codebases and multiple repositories. It’s a place where platform teams and developers can collaborate to drive migrations across their codebases, mass-commit code fixes, and perform large-scale impact analyses.\n\nSee how Moderne and OpenRewrite work in different ways to transform your code.\n\n[![Moderne](./doc/openrewrite_v_moderne.png)](https://www.youtube.com/watch?v=Q-ej2lCJHRs)\n\nModerne freely runs an [open public service](https://www.moderne.io/try-moderne) for the benefit of tens of thousands of open source projects. The platform can streamline your recipe customization and creation, enabling quick assembly and testing. It also includes a multi-repo command line interface (CLI) to enable developers to run and customize recipes locally.\n\n[![Moderne](./doc/moderne_cli.png)](https://www.youtube.com/watch?v=cs-6FJ_mtro)\n\nTo understand better how Moderne can help your team, [contact us](https://www.moderne.io/contact-us).\n\n## Contributing\n\nWe appreciate all types of contributions. See the [contributing guide](https://github.com/openrewrite/.github/blob/main/CONTRIBUTING.md) for detailed instructions on how to get started.\n"
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 0.755859375,
          "content": "plugins {\n    id(\"org.openrewrite.build.root\") version(\"latest.release\")\n    id(\"org.openrewrite.build.java-base\") version(\"latest.release\")\n    id(\"org.owasp.dependencycheck\") version(\"latest.release\")\n}\n\nconfigure<org.owasp.dependencycheck.gradle.extension.DependencyCheckExtension> {\n    analyzers.assemblyEnabled = false\n    analyzers.nodeAuditEnabled = false\n    analyzers.nodeEnabled = false\n    failBuildOnCVSS = System.getenv(\"FAIL_BUILD_ON_CVSS\")?.toFloatOrNull() ?: 9.0F\n    format = System.getenv(\"DEPENDENCY_CHECK_FORMAT\") ?: \"HTML\"\n    nvd.apiKey = System.getenv(\"NVD_API_KEY\")\n    suppressionFile = \"suppressions.xml\"\n}\n\nrepositories {\n    mavenCentral()\n}\n\nallprojects {\n    group = \"org.openrewrite\"\n    description = \"Eliminate tech-debt. Automatically.\"\n}\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.09765625,
          "content": "org.gradle.parallel=true\norg.gradle.caching=true\norg.gradle.workers.max=6\norg.gradle.jvmargs=-Xmx3g\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.5576171875,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8046875,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "lombok.config",
          "type": "blob",
          "size": 0.38671875,
          "content": "# https://projectlombok.org/features/configuration\nconfig.stopBubbling = true\nlombok.copyableAnnotations += org.intellij.lang.annotations.Language\nlombok.addNullAnnotations = CUSTOM:org.openrewrite.internal.lang.NonNull:org.openrewrite.internal.lang.Nullable\nlombok.copyableAnnotations += org.openrewrite.internal.lang.Nullable\nlombok.copyableAnnotations += org.openrewrite.internal.lang.NonNull\n"
        },
        {
          "name": "rewrite-benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-groovy",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-hcl",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-java-11",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-java-17",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-java-21",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-java-8",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-java-lombok",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-java-tck",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-java-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-java",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-json",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-maven",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-properties",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-protobuf",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-toml",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-xml",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite-yaml",
          "type": "tree",
          "content": null
        },
        {
          "name": "rewrite.yml",
          "type": "blob",
          "size": 3.6181640625,
          "content": "#\n# Copyright 2024 the original author or authors.\n# <p>\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n# <p>\n# https://www.apache.org/licenses/LICENSE-2.0\n# <p>\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n---\n# Apply a subset of best practices to OpenRewrite recipes; typically run before committing changes.\n# Any differences produced by this recipe will result in code suggestion comments on pull requests.\n---\ntype: specs.openrewrite.org/v1beta/recipe\nname: org.openrewrite.recipes.OpenRewriteBestPracticesSubset\ndisplayName: OpenRewrite best practices\ndescription: Best practices for OpenRewrite recipe development.\nrecipeList:\n  - org.openrewrite.recipes.JavaRecipeBestPracticesSubset\n  - org.openrewrite.recipes.RecipeTestingBestPracticesSubset\n  - org.openrewrite.recipes.RecipeNullabilityBestPracticesSubset\n  #- org.openrewrite.java.OrderImports\n  - org.openrewrite.java.format.EmptyNewlineAtEndOfFile\n  - org.openrewrite.staticanalysis.CompareEnumsWithEqualityOperator\n  - org.openrewrite.staticanalysis.InlineVariable\n  - org.openrewrite.staticanalysis.MissingOverrideAnnotation\n  - org.openrewrite.staticanalysis.UseDiamondOperator\n---\ntype: specs.openrewrite.org/v1beta/recipe\nname: org.openrewrite.recipes.JavaRecipeBestPracticesSubset\ndisplayName: Java Recipe best practices\ndescription: Best practices for Java recipe development.\npreconditions:\n  - org.openrewrite.java.search.FindTypes:\n      fullyQualifiedTypeName: org.openrewrite.Recipe\n      checkAssignability: true\nrecipeList:\n  - org.openrewrite.java.recipes.BlankLinesAroundFieldsWithAnnotations\n  - org.openrewrite.java.recipes.ExecutionContextParameterName\n  - org.openrewrite.java.recipes.MissingOptionExample\n  - org.openrewrite.java.recipes.RecipeEqualsAndHashCodeCallSuper\n  - org.openrewrite.java.recipes.UseTreeRandomId\n  - org.openrewrite.staticanalysis.NeedBraces\n  #- org.openrewrite.staticanalysis.RemoveSystemOutPrintln\n---\ntype: specs.openrewrite.org/v1beta/recipe\nname: org.openrewrite.recipes.RecipeTestingBestPracticesSubset\ndisplayName: Recipe testing best practices\ndescription: Best practices for testing recipes.\npreconditions:\n  - org.openrewrite.java.search.FindTypes:\n      fullyQualifiedTypeName: org.openrewrite.test.RewriteTest\n      checkAssignability: true\nrecipeList:\n  - org.openrewrite.java.recipes.RewriteTestClassesShouldNotBePublic\n  #- org.openrewrite.java.recipes.SelectRecipeExamples\n  - org.openrewrite.java.recipes.SourceSpecTextBlockIndentation\n  - org.openrewrite.java.testing.cleanup.RemoveTestPrefix\n  - org.openrewrite.java.testing.cleanup.TestsShouldNotBePublic\n  - org.openrewrite.staticanalysis.NeedBraces\n  - org.openrewrite.staticanalysis.RemoveSystemOutPrintln\n---\ntype: specs.openrewrite.org/v1beta/recipe\nname: org.openrewrite.recipes.RecipeNullabilityBestPracticesSubset\ndisplayName: Recipe nullability best practices\ndescription: Use OpenRewrite internal nullability annotations; drop JetBrains annotations; use `package-info.java` instead.\nrecipeList:\n  - org.openrewrite.staticanalysis.NullableOnMethodReturnType\n  - org.openrewrite.java.RemoveAnnotation:\n      annotationPattern: '@org.jetbrains.annotations.NotNull'\n  - org.openrewrite.java.RemoveAnnotation:\n      annotationPattern: '@jakarta.annotation.Nonnull'\n  #- org.openrewrite.java.jspecify.MigrateToJspecify\n"
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 3.01953125,
          "content": "pluginManagement {\n    repositories {\n        mavenLocal()\n        gradlePluginPortal()\n    }\n}\n\n// ---------------------------------------------------------------\n// ------ Included Projects --------------------------------------\n// ---------------------------------------------------------------\n\nval allProjects = listOf(\n        \"rewrite-benchmarks\",\n        \"rewrite-bom\",\n        \"rewrite-core\",\n        \"rewrite-gradle\",\n        \"rewrite-groovy\",\n        \"rewrite-hcl\",\n        \"rewrite-java\",\n        \"rewrite-java-tck\",\n        \"rewrite-java-test\",\n        \"rewrite-java-lombok\",\n        \"rewrite-java-17\", // remove this when rewrite recipe gradle plugin moves to 21\n        \"rewrite-java-21\",\n        \"rewrite-json\",\n        \"rewrite-maven\",\n        \"rewrite-properties\",\n        \"rewrite-protobuf\",\n        \"rewrite-test\",\n        \"rewrite-toml\",\n        \"rewrite-xml\",\n        \"rewrite-yaml\",\n)\n\nval includedProjects = file(\"IDE.properties\").let {\n    if (it.exists() && (System.getProperty(\"idea.active\") != null || System.getProperty(\"idea.sync.active\") != null)) {\n        val props = java.util.Properties()\n        it.reader().use { reader ->\n            props.load(reader)\n        }\n        allProjects.intersect(props.keys)\n    } else {\n        allProjects\n    }\n}.toSet()\n\nif(!file(\"IDE.properties\").exists() || includedProjects.contains(\"tools\")) {\n    includeBuild(\"tools\")\n}\n\ninclude(*allProjects.toTypedArray())\n\ngradle.allprojects {\n    configurations.all {\n        resolutionStrategy.dependencySubstitution {\n            allProjects\n                    .minus(includedProjects)\n                    .minus(arrayOf(\"rewrite-bom\"))\n                    .forEach {\n                        substitute(project(\":$it\"))\n                                .using(module(\"org.openrewrite:$it:latest.integration\"))\n                    }\n        }\n    }\n}\n\nif (System.getProperty(\"idea.active\") == null &&\n        System.getProperty(\"idea.sync.active\") == null) {\n    include(\n            \"rewrite-java-8\",\n            \"rewrite-java-11\",\n            \"rewrite-java-17\",\n            \"rewrite-java-21\"\n    )\n}\n\n// ---------------------------------------------------------------\n// ------ Gradle Develocity Configuration ------------------------\n// ---------------------------------------------------------------\n\nplugins {\n    id(\"com.gradle.develocity\") version \"latest.release\"\n    id(\"com.gradle.common-custom-user-data-gradle-plugin\") version \"latest.release\"\n}\n\ndevelocity {\n    val isCiServer = System.getenv(\"CI\")?.equals(\"true\") ?: false\n    server = \"https://ge.openrewrite.org/\"\n    val accessKey = System.getenv(\"GRADLE_ENTERPRISE_ACCESS_KEY\")\n    val authenticated = !accessKey.isNullOrBlank()\n    buildCache {\n        remote(develocity.buildCache) {\n            isEnabled = true\n            isPush = isCiServer && authenticated\n        }\n    }\n\n    buildScan {\n        capture {\n            fileFingerprints = true\n        }\n        publishing {\n            onlyIf {\n                authenticated\n            }\n        }\n\n        uploadInBackground = !isCiServer\n    }\n}\n"
        },
        {
          "name": "suppressions.xml",
          "type": "blob",
          "size": 1.9404296875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<suppressions xmlns=\"https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.3.xsd\">\n    <suppress until=\"2024-12-12\">\n        <notes><![CDATA[\n        file name: okio-jvm-2.8.0.jar\n        sev: HIGH\n        reason: pinned while awaiting 5.x release\n        ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/com\\.squareup\\.okio/okio@.*$</packageUrl>\n        <cve>CVE-2023-3635</cve>\n    </suppress>\n    <suppress until=\"2025-01-02Z\">\n        <notes><![CDATA[\n        file name: develocity-gradle-plugin-3.17.6.jar: junit-platform-engine-1.10.3.jar\n        sev: CRITICAL\n        reason: not applicable to the project\n        ]]></notes>\n        <cve>CVE-2023-45161</cve>\n        <cve>CVE-2023-45163</cve>\n        <cve>CVE-2023-5964</cve>\n    </suppress>\n    <suppress until=\"2025-01-02Z\">\n        <notes><![CDATA[\n        file name: gradle-enterprise-gradle-plugin-3.17.6.jar\n        ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/com\\.gradle/gradle-enterprise-gradle-plugin@.*$</packageUrl>\n        <cve>CVE-2019-11402</cve>\n        <cve>CVE-2019-11403</cve>\n        <cve>CVE-2021-41589</cve>\n        <cve>CVE-2023-49238</cve>\n        <cve>CVE-2022-25364</cve>\n        <cve>CVE-2020-15773</cve>\n        <cve>CVE-2020-15767</cve>\n    </suppress>\n    <suppress until=\"2024-12-12\">\n        <notes><![CDATA[\n        file name: javax.json-1.1.4.jar\n        ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.glassfish/javax\\.json@.*$</packageUrl>\n        <vulnerabilityName>CVE-2023-7272</vulnerabilityName>\n    </suppress>\n    <suppress until=\"2025-03-20\">\n        <notes><![CDATA[\n        file name: javax.json-1.1.4.jar\n        reason: Used in antlr (4.11.1) code generation only. Not on the runtime classpath\n        ]]></notes>\n        <packageUrl regex=\"true\">^pkg:maven/org\\.glassfish/javax\\.json@.*$</packageUrl>\n        <vulnerabilityName>CVE-2023-7272</vulnerabilityName>\n    </suppress>\n</suppressions>\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}