{
  "metadata": {
    "timestamp": 1736708624690,
    "page": 951,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/incubator-seata-samples",
      "stars": 2283,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 0.4375,
          "content": "github:\n  description: \"Apache Seata(incubating) Samples for Java\"\n  homepage: https://seata.apache.org/\n  enabled_merge_buttons:\n    squash:  true\n    merge:   false\n    rebase:  false\n  dependabot_alerts:  true\n  dependabot_updates: false\n  protected_branches:\n    master: {}\nnotifications:\n  commits: notifications@seata.apache.org\n  issues: dev@seata.apache.org\n  pullrequests: dev@seata.apache.org\n  discussions: notifications@seata.apache.org"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.646484375,
          "content": "# Compiled class file\n*.class\n\n# Log file\n*.log\n\n# BlueJ files\n*.ctxt\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.nar\n*.ear\n*.zip\n*.tar.gz\n*.rar\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n# maven ignore\ntarget/\n*.jar\n*.war\n*.zip\n*.tar\n*.tar.gz\n*.class\n\n# eclipse ignore\n.settings/\n.project\n.classpath\n\n# idea ignore\n.idea/\n*.ipr\n*.iml\n*.iws\n\n# temp ignore\n*.log\n*.cache\n*.diff\n*.patch\n*.tmp\n/distribution/bin\n/distribution/conf\n/distribution/lib\nserver/*root.*\nserver/.root.*\ntmp/\n\n# system ignore\n.DS_Store\nThumbs.db\n*.orig\n*.class\n\n*/.idea/\n*/.mvn/\n*/**/.mvn/\n*/target/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1083984375,
          "content": "language: java\nsudo: false\n\njdk:\n  #  - openjdk11\n  - openjdk8\n\ninstall: true\n\nscript:\n  - mvn -q clean install"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.6181640625,
          "content": "# Contributing to Apache Seata(incubating)\n\nIt is warmly welcomed if you have interest to hack on Apache Seata(incubating). First, we encourage this kind of willing very much. And here is a list of contributing guide for you.\n\n[[中文贡献文档](./CONTRIBUTING_CN.md)]\n\n## Topics\n\n* [Reporting security issues](#reporting-security-issues)\n* [Reporting general issues](#reporting-general-issues)\n* [Code and doc contribution](#code-and-doc-contribution)\n* [Test case contribution](#test-case-contribution)\n* [Engage to help anything](#engage-to-help-anything)\n* [Code Style](#code-style)\n\n## Reporting security issues\n\nSecurity issues are always treated seriously. As our usual principle, we discourage anyone to spread security issues. If you find a security issue of Apache Seata(incubating), please do not discuss it in public and even do not open a public issue. Instead we encourage you to send us a private email to  [private@seata.apache.org](mailto:private@seata.apache.org) to report this.\n\n## Reporting general issues\n\nTo be honest, we regard every user of Seata as a very kind contributor. After experiencing Seata, you may have some feedback for the project. Then feel free to open an issue via [NEW ISSUE](https://github.com/apache/incubator-seata/issues/new/choose).\n\nSince we collaborate project Seata in a distributed way, we appreciate **WELL-WRITTEN**, **DETAILED**, **EXPLICIT** issue reports. To make the communication more efficient, we wish everyone could search if your issue is an existing one in the searching list. If you find it existing, please add your details in comments under the existing issue instead of opening a brand new one.\n\nTo make the issue details as standard as possible, we setup an [ISSUE TEMPLATE](./.github/ISSUE_TEMPLATE) for issue reporters. Please **BE SURE** to follow the instructions to fill fields in template.\n\nThere are a lot of cases when you could open an issue:\n\n* bug report\n* feature request\n* performance issues\n* feature proposal\n* feature design\n* help wanted\n* doc incomplete\n* test improvement\n* any questions on project\n* and so on\n\nAlso we must remind that when filling a new issue, please remember to remove the sensitive data from your post. Sensitive data could be password, secret key, network locations, private business data and so on.\n\n## Code and doc contribution\n\nEvery action to make project Seata better is encouraged. On GitHub, every improvement for Seata could be via a PR (short for pull request).\n\n* If you find a typo, try to fix it!\n* If you find a bug, try to fix it!\n* If you find some redundant codes, try to remove them!\n* If you find some test cases missing, try to add them!\n* If you could enhance a feature, please **DO NOT** hesitate!\n* If you find code implicit, try to add comments to make it clear!\n* If you find code ugly, try to refactor that!\n* If you can help to improve documents, it could not be better!\n* If you find document incorrect, just do it and fix that!\n* ...\n\nActually it is impossible to list them completely. Just remember one principle:\n\n> WE ARE LOOKING FORWARD TO ANY PR FROM YOU.\n\nSince you are ready to improve Seata with a PR, we suggest you could take a look at the PR rules here.\n\n* [Workspace Preparation](#workspace-preparation)\n* [Branch Definition](#branch-definition)\n* [Commit Rules](#commit-rules)\n* [PR Description](#pr-description)\n\n### Workspace Preparation\n\nTo put forward a PR, we assume you have registered a GitHub ID. Then you could finish the preparation in the following steps:\n\n1. **FORK** Seata to your repository. To make this work, you just need to click the button Fork in right-left of [apache/incubator-seata](https://github.com/apache/incubator-seata) main page. Then you will end up with your repository in `https://github.com/<your-username>/incubator-seata`, in which `your-username` is your GitHub username.\n\n1. **CLONE** your own repository to develop locally. Use `git clone git@github.com:<your-username>/incubator-seata.git` to clone repository to your local machine. Then you can create new branches to finish the change you wish to make.\n\n1. **Set Remote** upstream to be `git@github.com:apache/incubator-seata.git` using the following two commands:\n\n```bash\ngit remote add upstream git@github.com:apache/incubator-seata.git\ngit remote set-url --push upstream no-pushing\n```\n\nWith this remote setting, you can check your git remote configuration like this:\n\n```shell\n$ git remote -v\norigin     git@github.com:<your-username>/incubator-seata.git (fetch)\norigin     git@github.com:<your-username>/incubator-seata.git (push)\nupstream   git@github.com:apache/incubator-seata.git (fetch)\nupstream   no-pushing (push)\n```\n\nAdding this, we can easily synchronize local branches with upstream branches.\n\n### Branch Definition\n\nRight now we assume every contribution via pull request is for [branch develop](https://github.com/apache/incubator-seata/tree/2.x) in Seata. Before contributing, be aware of branch definition would help a lot.\n\nAs a contributor, keep in mind again that every contribution via pull request is for branch develop. While in project Seata, there are several other branches, we generally call them release branches(such as 0.6.0,0.6.1), feature branches, hotfix branches and master branch.\n\nWhen officially releasing a version, there will be a release branch and named with the version number. \n\nAfter the release, we will merge the commit of the release branch into the master branch.\n\nWhen we find that there is a bug in a certain version, we will decide to fix it in a later version or fix it in a specific hotfix version. When we decide to fix the hotfix version, we will checkout the hotfix branch based on the corresponding release branch, perform code repair and verification, and merge it into the develop branch and the master branch.\n\nFor larger features, we will pull out the feature branch for development and verification.\n\n\n### Commit Rules\n\nActually in Seata, we take two rules serious when committing:\n\n* [Commit Message](#commit-message)\n* [Commit Content](#commit-content)\n\n#### Commit Message\n\nCommit message could help reviewers better understand what is the purpose of submitted PR. It could help accelerate the code review procedure as well. We encourage contributors to use **EXPLICIT** commit message rather than ambiguous message. In general, we advocate the following commit message type:\n\n* docs: xxxx. For example, \"docs: add docs about Seata cluster installation\".\n* feature: xxxx.For example, \"feature: support oracle in AT mode\".\n* bugfix: xxxx. For example, \"bugfix: fix panic when input nil parameter\".\n* refactor: xxxx. For example, \"refactor: simplify to make codes more readable\".\n* test: xxx. For example, \"test: add unit test case for func InsertIntoArray\".\n* other readable and explicit expression ways.\n\nOn the other side, we discourage contributors from committing message like the following ways:\n\n* ~~fix bug~~\n* ~~update~~\n* ~~add doc~~\n\nIf you get lost, please see [How to Write a Git Commit Message](http://chris.beams.io/posts/git-commit/) for a start.\n\n#### Commit Content\n\nCommit content represents all content changes included in one commit. We had better include things in one single commit which could support reviewer's complete review without any other commits' help. In another word, contents in one single commit can pass the CI to avoid code mess. In brief, there are three minor rules for us to keep in mind:\n\n* avoid very large change in a commit;\n* complete and reviewable for each commit.\n* check git config(`user.name`, `user.email`) when committing to ensure that it is associated with your GitHub ID.\n\n```bash\ngit config --get user.name\ngit config --get user.email\n```\n\n* when submitting pr, please add a brief description of the current changes to the X.X.X.md file under the 'changes/' folder\n\n\nIn addition, in the code change part, we suggest that all contributors should read the [code style of Seata](#code-style).\n\nNo matter commit message, or commit content, we do take more emphasis on code review.\n\n\n### PR Description\n\nPR is the only way to make change to Seata project files. To help reviewers better get your purpose, PR description could not be too detailed. We encourage contributors to follow the [PR template](./.github/PULL_REQUEST_TEMPLATE.md) to finish the pull request.\n\n## Test case contribution\n\nAny test case would be welcomed. Currently, Seata function test cases are high priority.\n\n* For unit test, you need to create a test file named `xxxTest.java` in the test directory of the same module. Recommend you to use the junit5 UT framework\n\n* For integration test, you can put the integration test in the test directory or the seata-test module. It is recommended to use the mockito test framework.\n\n## Engage to help anything\n\nWe choose GitHub as the primary place for Seata to collaborate. So the latest updates of Seata are always here. Although contributions via PR is an explicit way to help, we still call for any other ways.\n\n* reply to other's issues if you could;\n* help solve other user's problems;\n* help review other's PR design;\n* help review other's codes in PR;\n* discuss about Seata to make things clearer;\n* advocate Seata technology beyond GitHub;\n* write blogs on Seata and so on.\n\n\n## Code Style\n\nSeata code style Comply with Alibaba Java Coding Guidelines.\n\n\n### Guidelines\n[Alibaba-Java-Coding-Guidelines](https://alibaba.github.io/Alibaba-Java-Coding-Guidelines/) \n\n\n### IDE Plugin Install（not necessary）\n\n*It is not necessary to install, if you want to find a problem when you are coding.*\n\n\n#### idea IDE\n[p3c-idea-plugin-install](https://github.com/alibaba/p3c/blob/master/idea-plugin/README.md) \n\n#### eclipse IDE\n[p3c-eclipse-plugin-install](https://github.com/alibaba/p3c/blob/master/eclipse-plugin/README.md)\n\n\nIn a word, **ANY HELP IS CONTRIBUTION.**\n"
        },
        {
          "name": "CONTRIBUTING_CN.md",
          "type": "blob",
          "size": 9.025390625,
          "content": "# 为 Apache Seata(incubating) 做贡献\n\n如果你有兴趣寻找关于Apache Seata(incubating)的漏洞，我们会热烈欢迎。首先，我们非常鼓励这种意愿。这是为您提供的贡献指南列表。\n\n[[English Contributing Document](./CONTRIBUTING.md)]\n\n## 话题\n\n* [报告安全问题](#报告安全问题)\n* [报告一般问题](#报告一般问题)\n* [代码和文档贡献](#代码和文档贡献)\n* [测试用例贡献](#测试用例贡献)\n* [参与帮助任何事情](#参与帮助任何事情)\n* [代码风格](#代码风格)\n\n## 报告安全问题\n\n安全问题总会认真对待。通常，我们不鼓励任何人传播安全问题。如果您发现Apache Seata(incubating)的安全问题，请不要公开讨论，甚至不要公开问题。相反，我们鼓励您向 [private@seata.apache.org](mailto:private@seata.apache.org) 发送私人电子邮件 以报告此情况。\n\n## 报告一般问题\n\n老实说，我们认为每一个 Seata 用户都是非常好的贡献者。在体验了 Seata 之后，您可能会对项目有一些反馈。那么随时可以通过 [NEW ISSUE](https://github.com/apache/incubator-seata/issues/new/choose) 来提交。\n\n由于我们通过分布式方式协作Seata，我们欣赏高质量，详细的，准确的问题报告。为了让沟通更高效，我们希望每个人都可以搜索下您的问题是否在搜索列表中。如果您发现它存在，请在现有问题评论中添加您的详细信息，而不是打开一个全新的问题。\n\n为了使问题细节尽可能标准，我们为问题报告者提供了一个[问题模板](./.github/ISSUE_TEMPLATE) 请务必按照说明填写模板中的字段。\n\n遇到以下情况你可以新建一个问题：\n\n* 错误报告\n* 功能要求\n* 性能问题\n* 功能提案\n* 功能设计\n* 需要帮助\n* 文档不完整\n* 测试改进\n* 关于项目的任何问题\n* 等等\n\n另外我们必须提醒的是，在填写新问题时，请记得从您的帖子中删除敏感数据。敏感数据可能是密码、密钥、网络位置、私人业务数据等。\n\n## 代码和文档贡献\n\n鼓励采取一切使 Seata 项目变得更好的行动。在 GitHub 上，Seata 的每项改进都可以通过 PR（Pull Request的缩写）实现。\n\n* 如果您发现错别字，请尝试修复它！\n* 如果您发现bug，请尝试修复它！\n* 如果您发现一些冗余的代码，请尝试删除它们！\n* 如果您发现缺少一些测试用例，请尝试添加它们！\n* 如果您可以增强功能，请**不要**犹豫！\n* 如果您发现代码晦涩难懂，请尝试添加注释以使其更加易读！\n* 如果您发现代码丑陋，请尝试重构它！\n* 如果您能帮助改进文档，那就再好不过了！\n* 如果您发现文档不正确，只需执行并修复它！\n* ...\n\n实际上不可能完全罗列所有场景。但记住一个原则：\n\n> 我们期待您的任何PR。\n\n现在您已准备好通过 PR 改进 Seata，我们建议您可以看看这里罗列的 PR 规则。\n\n* [工作区准备](#工作区准备)\n* [分支定义](#分支定义)\n* [提交规则](#提交规则)\n* [PR说明](#PR说明)\n\n### 工作区准备\n\n为了提出 PR，我们假设你已经注册了一个 GitHub ID。然后您可以通过以下步骤完成准备工作：\n\n1. **FORK** Seata 到您的仓库。要完成这项工作，您只需单击 [apache/incubator-seata](https://github.com/apache/incubator-seata) 主页右侧的 Fork 按钮。然后你将得到以你的仓库为路径的项目地址：`https://github.com/<your-username>/incubator-seata`，其中your-username是你的 GitHub 用户名。\n\n2. **克隆** 您自己的存储库以在本地开发. 使用 `git clone git@github.com:<your-username>/incubator-seata.git` 将存储库克隆到本地计算机。 然后您可以创建新分支来完成您希望进行的更改。\n\n3. **设置远程** 将上游设置为 `git@github.com:apache/incubator-seata.git` 使用以下两个命令：\n\n```bash\ngit remote add upstream git@github.com:apache/incubator-seata.git\ngit remote set-url --push upstream no-pushing\n```\n\n使用此远程设置，您可以像这样检查您的 git 远程配置：\n\n```shell\n$ git remote -v\norigin     git@github.com:<your-username>/incubator-seata.git (fetch)\norigin     git@github.com:<your-username>/incubator-seata.git (push)\nupstream   git@github.com:apache/incubator-seata.git (fetch)\nupstream   no-pushing (push)\n```\n\n添加这个，我们可以轻松地将本地分支与上游分支同步。\n\n### 分支定义\n\n现在我们假设通过拉取请求的每个贡献都是针对Seata 中的 [开发分支](https://github.com/apache/incubator-seata/tree/2.x) 。在贡献之前，请注意分支定义会很有帮助。\n\n作为贡献者，请再次记住，通过拉取请求的每个贡献都是针对分支开发的。而在Seata项目中，还有其他几个分支，我们一般称它们为release分支（如0.6.0、0.6.1）、feature分支、hotfix分支和master分支。\n\n当正式发布一个版本时，会有一个发布分支并以版本号命名。\n\n在发布之后，我们会将发布分支的提交合并到主分支中。\n\n当我们发现某个版本有bug时，我们会决定在以后的版本中修复它，或者在特定的hotfix版本中修复它。当我们决定修复hotfix版本时，我们会根据对应的release分支checkout hotfix分支，进行代码修复和验证，合并到开发分支和master分支。\n\n对于较大的功能，我们将拉出功能分支进行开发和验证。\n\n\n### 提交规则\n\n实际上，在 Seata 中，我们在提交时会认真对待两条规则：\n\n* [提交消息](#提交消息)\n* [提交内容](#提交内容)\n\n#### 提交消息\n\n提交消息可以帮助审稿人更好地理解提交 PR 的目的是什么。它还可以帮助加快代码审查过程。我们鼓励贡献者使用显式的提交信息，而不是模糊的信息。一般来说，我们提倡以下提交消息类型：\n\n* docs: xxxx. For example, \"docs: add docs about Seata cluster installation\".\n* feature: xxxx.For example, \"feature: support oracle in AT mode\".\n* bugfix: xxxx. For example, \"bugfix: fix panic when input nil parameter\".\n* refactor: xxxx. For example, \"refactor: simplify to make codes more readable\".\n* test: xxx. For example, \"test: add unit test case for func InsertIntoArray\".\n* 其他可读和显式的表达方式。\n\n另一方面，我们不鼓励贡献者通过以下方式提交消息：\n\n* ~~修复错误~~\n* ~~更新~~\n* ~~添加文档~~\n\n如果你不知道该怎么做，请参阅 [如何编写 Git 提交消息](http://chris.beams.io/posts/git-commit/) 作为开始。\n\n#### 提交内容\n\n提交内容表示一次提交中包含的所有内容更改。我们最好在一次提交中包含可以支持审阅者完整审查的内容，而无需任何其他提交的帮助。换句话说，一次提交中的内容可以通过 CI 以避免代码混乱。简而言之，我们需要牢记三个小规则：\n\n* 避免在提交中进行非常大的更改；\n* 每次提交都完整且可审查。\n* 提交时检查 git config(`user.name`, `user.email`) 以确保它与您的 GitHub ID 相关联。\n\n```bash\ngit config --get user.name\ngit config --get user.email\n```\n\n* 提交pr时，请在'changes/'文件夹下的XXXmd文件中添加当前更改的简要说明\n\n\n另外，在代码变更部分，我们建议所有贡献者阅读Seata的 [代码风格](#代码风格)。\n\n无论是提交信息，还是提交内容，我们都更加重视代码审查。\n\n\n### PR说明\n\nPR 是更改 Seata 项目文件的唯一方法。为了帮助审查人更好地理解你的目的，PR 描述不能太详细。我们鼓励贡献者遵循 [PR 模板](./.github/PULL_REQUEST_TEMPLATE.md) 来完成拉取请求。\n\n## 测试用例贡献\n\n任何测试用例都会受到欢迎。目前，Seata 功能测试用例是高优先级的。\n\n* 对于单元测试，您需要在同一模块的 test 目录中创建一个名为 xxxTest.java 的测试文件。推荐你使用junit5 UT框架\n\n* 对于集成测试，您可以将集成测试放在 test 目录或 seata-test 模块中。推荐使用mockito测试框架。\n\n## 参与帮助任何事情\n\n我们选择 GitHub 作为 Seata 协作的主要场所。所以Seata的最新更新总是在这里。尽管通过 PR 贡献是一种明确的帮助方式，但我们仍然呼吁其他方式。\n\n* 如果可以的话，回复别人的问题；\n* 帮助解决其他用户的问题；\n* 帮助审查他人的 PR 设计；\n* 帮助审查其他人在 PR 中的代码；\n* 讨论 Seata 以使事情更清楚；\n* 在Github之外宣传Seata技术；\n* 写关于 Seata 的博客等等。\n\n\n## 代码风格\n\nSeata 代码风格 符合阿里巴巴 Java 编码指南。\n\n\n### 指南\n[阿里巴巴Java代码指南](https://alibaba.github.io/Alibaba-Java-Coding-Guidelines/)\n\n\n### IDE插件安装（非必须）\n\n*没有必要安装，如果你想在编码的时候发现问题。*\n\n\n#### idea IDE\n[p3c-idea-plugin-install](https://github.com/alibaba/p3c/blob/master/idea-plugin/README.md) \n\n#### eclipse IDE\n[p3c-eclipse-plugin-install](https://github.com/alibaba/p3c/blob/master/eclipse-plugin/README.md)\n\n\n总之，**任何帮助都是贡献。**\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.6572265625,
          "content": "# samples code specification\n\n##  Directory Structure\n\nThe first and second levels are more of a directory\n\nTop level: seata-samples\n\nSecond layer: at-sample, tcc-sample, saga-sample, xa-sample\n\nThird floor, The third layer is the specific sample and the naming convention is as follows:\n\n## naming\n\nnaming with framework: spring-nacos-seata, springboot-naocs-zk-seata ...\n\n## dependency\n\npom: The dependencies of each sample should be independent and should not depend on the dependencies of the parent pom of seata samples.\n\n\n\n# samples transaction model\nhttps://seata.apache.org/docs/user/quickstart/\n\n## start sequence\n\n1、account\n\n2、storage\n\n3、order\n\n4、business"
        },
        {
          "name": "at-sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "e2e-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 1.1220703125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~  Copyright 1999-2018 Alibaba Group Holding Ltd.\n  ~\n  ~  Licensed under the Apache License, Version 2.0 (the \"License\");\n  ~  you may not use this file except in compliance with the License.\n  ~  You may obtain a copy of the License at\n  ~\n  ~       http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~  Unless required by applicable law or agreed to in writing, software\n  ~  distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~  See the License for the specific language governing permissions and\n  ~  limitations under the License.\n  -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.apache.seata</groupId>\n    <artifactId>seata-samples</artifactId>\n    <packaging>pom</packaging>\n    <version>2.1.0</version>\n    <name>seata-samples ${project.version}</name>\n\n</project>\n"
        },
        {
          "name": "saga-sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "style",
          "type": "tree",
          "content": null
        },
        {
          "name": "tcc-sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "xa-sample",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}