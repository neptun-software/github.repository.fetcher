{
  "metadata": {
    "timestamp": 1736708505828,
    "page": 704,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JetBrains/skija",
      "stars": 2643,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0576171875,
          "content": "/native/build\n/native/Skia-m*\n/native/target\n/shared/target"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1103515625,
          "content": ".cpcache\ndocs/apidocs\ntarget\n/platform/build\n/platform/Skia-m*\n*.log\n*.zip\nexamples/bitmap/output.png\n__pycache__"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 5.93359375,
          "content": "# 0.93.4 - Sep 20, 2021\n\nAdded:\n\n- org.jetbrains.skija.resources.*\n  - ResourceProvider\n  - FileResourceProvider\n  - DataURIResourceProviderProxy\n  - CachingResourceProvider\n- AnimationBuilder::setResourceProvider #129\n\n# 0.93.1 - Aug 11, 2021\n\nAdded:\n\n- ShapingOptions\n  - Groups together FontMgr, FontFeature[], leftToRight\n  - Adds approximateSpaces and approximatePunctuation\n- FontMgrRunIterator(String, Font)\n- Shaper::shapeLine(String, Font)\n\nChanged:\n\n- AnimationDisposalMethod -> AnimationDisposalMode\n\nSignature updated from:\n\n  - TextLine::make(String, Font, FontFeature[], boolean)\n  - FontMgrRunIterator(ManagedString, boolean, Font, FontMgr)\n  - FontMgrRunIterator(String, Font, FontMgr)\n  - Shaper::shape(String, Font, boolean, float, Point)\n  - Shaper::shape(String, Font, FontMgr, FontFeature[], boolean, float, RunHandler)\n  - Shaper::shape(String, Iterator<FontRun>, Iterator<BidiRun>, Iterator<ScriptRun>, Iterator<LanguageRun>, FontFeature[], float width, RunHandler)\n  - Shaper::shape(ManagedString, Iterator<FontRun>, Iterator<BidiRun>, Iterator<ScriptRun>, Iterator<LanguageRun>, FontFeature[], float width, RunHandler)\n  - Shaper::shapeLine(String, Font, FontFeature[], boolean)\n\nto:\n\n  - TextLine::make(String, Font, ShapingOptions)\n  - FontMgrRunIterator(ManagedString, boolean, Font, ShapingOptions)\n  - FontMgrRunIterator(String, Font, ShapingOptions)\n  - Shaper::shape(String, Font, ShapingOptions, float, Point)\n  - Shaper::shape(String, Font, FontMgr, ShapingOptions, float, RunHandler)\n  - Shaper::shape(String, Iterator<FontRun>, Iterator<BidiRun>, Iterator<ScriptRun>, Iterator<LanguageRun>, ShapingOptions, float width, RunHandler)\n  - Shaper::shape(ManagedString, Iterator<FontRun>, Iterator<BidiRun>, Iterator<ScriptRun>, Iterator<LanguageRun>, ShapingOptions, float width, RunHandler)\n  - Shaper::shapeLine(String, Font, ShapingOptions)\n\n# 0.93.0 - Aug 10, 2021\n\nChanged:\n\n- Skia version m92-d9b8efde6d -> m93-87e8842e8c\n- Paint::getHash is no longer structural\n\nRemoved:\n\n- Shader::makeLerp #114 thx @cqjjjzr\n- Paint::getFilterQuality, Paint::setFilterQuality #114 thx @cqjjjzr\n\n# 0.92.30 - Aug 9, 2021\n\nChanged:\n\n- Skia version m92-f46c37ba85-2 -> m92-d9b8efde6d\n- Linking freetype dynamically on Linux to avoid conflicts with JavaFX #113\n\n# 0.92.29 - Aug 7, 2021\n\nAdded:\n\n- RuntimeEffect #120 #124 thx @Vechro\n\n# 0.92.22 - July 29, 2021\n\nAdded:\n\n- DirectContext::submit(bool syncCPU), thx @EgorOrachyov\n- Direct3D Context #121 thx @EgorOrachyov\n- SkData->ByteBuffer #118 thx @cqjjjzr\n- SkImage bindings for SkPixmap #117 thx @cqjjjzr\n\n# 0.92.15 - July 16, 2021\n\nChanged:\n\n- Optimized use of Enum.values() #112\n- Fixed source jar build on non-English Windows\n\nAdded:\n\n- SkPixmap bindings, SkPixmap-related methods for SkSurface #116 thx @cqjjjzr\n\n# 0.92.12 - June 22, 2021\n\nLowered minimal required version to Java 9.\nSupport for Java 9 modules (#110 #111 thx @comtel2000):\n\n- org.jetbrains.skija.shared\n- org.jetbrains.skija.windows\n- org.jetbrains.skija.linux\n- org.jetbrains.skija.macos.x64\n- org.jetbrains.skija.macos.arm64\n\nCode reorganization:\n\n- removed maven\n- flattened source dirs\n  - native/src → platform/cc\n  - shared/src/main/java/org/jetbrains/skija → shared/java\n  - shared/src/test/java/org/jetbrains/skija → tests/java\n  - added platform/java-{platform}\n\n# 0.92.1 - June 7, 2021\n\nSkia version m92-f46c37ba85 -> m92-f46c37ba85-2\n\nChanged:\n\n- [ BREAKING ] SVGDOM::setContainerSize() does not scale SVG anymore (https://bugs.chromium.org/p/skia/issues/detail?id=11144)\n\nAdded:\n\n- SVGDOM::getRoot()\n- SVGSVG (root SVG node)\n\n# 0.92.0 - June 4, 2021\n\nSkia version m91-b99622c05a -> m92-f46c37ba85\n\nChanged:\n\n- paragraph.Shadow::blurRadius -> paragraph.Shadow::blurSigma\n\nRemoved:\n\n- PathEffect::computeFastBounds\n\n# 0.91.8 - June 1, 2021\n\nFixed:\n\n- Typeface.getFamilyNames return type (String[] -> FontFamilyName[]) #108\n- Canvas.resetMatrix argument (Matrix33 -> None) #109, thx @AnzerWall\n\n# 0.91.6 - May 21, 2021\n\nAdded:\n\n- Canvas.drawRectShadow\n- Canvas.drawRectShadowNoclip\n- Rect.inflate\n- Rect.isEmpty\n- Managed.isClosed\n\nUpdated:\n\n- org.jetbrains:annotations from 19.0.0 to 20.1.0\n\n# 0.91.4 - May 11, 2021\n\nAdded:\n\n- Surface::makeFromMTKView\n- Optionally load dll/so/dylib from current dir\n\n# 0.91.3 - May 4, 2021\n\nAdded:\n\n- DirectContext::makeMetal\n- BackendRenderTarget::makeMetal\n\n# 0.91.2 - Apr 29, 2021\n\nFixed:\n\n- `-Xcheck:jni` warnings #70\n\n# 0.91.1 - Apr 28, 2021\n\nFixed:\n\n- NPE in TextLine::getIntercepts\n\n# 0.91.0 - Apr 28, 2021\n\nSkia version m90-adbb69cd7f-2 -> m91-b99622c05a\n\nChanged:\n\n- All variants of Picture.makeShader now take extra FilterMode argument\n\n# 0.90.16 - Apr 23, 2021\n\nAdded:\n\n- Matrix33.rotate(deg, pivot)\n\n# 0.90.14 - Apr 22, 2021\n\nNew FontRunIter for TextLine/TextBlob, groups grapheme clusters together correctly\n\n# 0.90.9 - Apr 20, 2021\n\nLombok 1.18.18 -> 1.18.20 (support for Java 16)\n\n# 0.90.6 - Apr 16, 2021\n\nAdded:\n\n- TextLine.getIntercepts()\n\n# 0.90.3 - Mar 26, 2021\n\nSkia version m90-adbb69cd7f -> m90-adbb69cd7f-2\n\nChanged:\n\n- Fixed exception during reporting double close in Managed #102\n- Fixed for locale-dependent SVGCanvas serialization https://skbug.com/11794\n\n# 0.90.2 - Mar 25, 2021\n\nChanged:\n\n- Fixed Skottie linking on Linux\n\n# 0.90.0 - March 19, 2021\n\nSkia version m89-109bfc9052 -> m90-adbb69cd7f\n\nAdded:\n\n- Canvas.drawImageRect(..., SamplingMode, ...)\n- Canvas.drawImageNine()\n\nChanged:\n\n- SamplingMode.FilterMipmap -> FilterMipmap\n- SamplingMode.CubicResampler -> CubicResampler\n- ImageFilter.makeXfermode() -> ImageFilter.makeBlend()\n- ImageFilter.makeImage(..., FilterQuality -> SamplingMode)\n- ImageFilter.makeMatrixTransform(..., FilterQuality -> SamplingMode)\n\nRemoved:\n\n- Canvas.drawImageIRect()\n- Canvas.drawBitmap()\n- Canvas.drawBitmapRect()\n- Canvas.drawBitmapIRect()\n\n(See https://bugs.chromium.org/p/skia/issues/detail?id=11764#c1)\n\n# 0.89.39 - March 18, 2021\n\nLombok 1.18.16 -> 1.18.18\n\n# 0.89.38 - March 17, 2021\n\nAdded:\n\n- BreakIterator\n- U16String\n\n# 0.89.37 - March 11, 2021\n\nAdded:\n\n- Codec\n- AnimationFrameInfo\n- AnimationDisposalMethod"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.095703125,
          "content": "FROM tonsky/ubuntu-14.04:latest\n\nWORKDIR /root/skija\nADD . .\nRUN /bin/bash -ic ./script/install.sh"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.146484375,
          "content": "Skija: Java bindings for Skia\n\nCopyright 2020-2021 JetBrains s.r.o.\nThis product includes software developed at JetBrains (http://www.jetbrains.com).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.4951171875,
          "content": "[![obsolete JetBrains project](https://jb.gg/badges/obsolete.svg)](https://confluence.jetbrains.com/display/ALL/JetBrains+on+GitHub)\n\n⚠️ **This repository is no longer actively maintained.** ⚠️ \n\nActive Skija project is located at [HumbleUI/Skija](https://github.com/HumbleUI/Skija/)\n\n# Skija: Java bindings for Skia\n\n**Skia** is an open source 2D graphics library which provides common APIs that work across a variety of hardware and software platforms.\n\n**Skija** is a high-quality Java bindings for Skia.\n\n![](extras/logo.png)\n\n\n## Motivation: Why Skija?\n\nBecause Java doesn’t have a powerful and modern 2D graphics — still!\n\nThere are many occasions when you might need graphics:\n\n- custom UI widget libraries and whole toolkits,\n- graphs, diagrams,\n- visualizations,\n- games.\n\nExisting offerings are: Graphics2D from AWT, GraphicsContext from JavaFX. They are good, but underwhelming.\n\nEnter Skia. Skia has a proven track record of industrial-scale project relying on it for all things graphics: Google Chrome, Android, Flutter, Firefox Canvas, Xamarin, LibreOffice. Skia outperforms all existing Java2D toolkits in almost every benchmark, and also provides:\n\n- extensive color spaces support,\n- modern typography with open type features, variable typefaces, correct multi-script text handling, emojis,\n- highly-optimized GPU rendering,\n- modern GPU backends, including Vulkan and Metal (already in Skia, coming to Skija soon),\n- built-in caching and compositing facilities.\n\nSkija brings all this power to the tips of your fingers, as simple as adding a jar to classpath.\n\n## Why hand-crafted bindings?\n\nAutomatically generated bindings for Skia exist, but don’t seem to have high adoption:\n\n- [github.com/bytedeco/javacpp-presets/tree/master/skia](https://github.com/bytedeco/javacpp-presets/tree/master/skia)\n- [github.com/eungju/skia-javacpp](https://github.com/eungju/skia-javacpp)\n\nSkija project has a goal of providing great Java-native API that is natural to use. In particular:\n\n- full automatic memory management, no pointer abstractions leaking,\n- natural use of Java classes, interfaces, inheritance, singletons,\n- consistent naming following Java conventions, including getters/setters for properties,\n- typed enums instead of integer constants,\n- native Java platform abstractions instead of wrapped Skia/C++ ones (strings, arrays, streams, files, byte buffers, AutoCloseable),\n- hiding implementation details, e.g. transparent string encoding conversion, byte/code point indices conversion,\n- fluent builder-style APIs where possible,\n- lightweight data classes where possible (Point, Rect, FontMetrics, etc are not mirrored by native instances).\n\nThe ultimate goal for Skija is to feel as a Java library and not having to think about native part at all.\n\n## Built with Skija\n\n[Compose for Desktop](https://www.jetbrains.com/lp/compose/), declarative UI toolkit for Kotlin:\n\n![](extras/compose-apps.png)\n\n[Skija Graphics2D](https://github.com/jfree/skijagraphics2d/), an implementation of Java2D API:\n\n![](extras/skijagraphics2d.png)\n\n[Robert Felker](https://twitter.com/BlueAquilae/status/1322696020329902082) demos:\n\n|![](extras/Elso-W-XYAEKmFg.jpg)|![](extras/Ev-CCy_XMAEM51f.jpg)|\n|---|---|\n|![](extras/Elso-WsWoAExiUF.jpg)|![](extras/Elso-WfWMAED8dc.jpg)|\n\n[Harold](https://www.instagram.com/_hrrld/) videos:\n\n![](extras/110151060-3a840480-7d9d-11eb-9996-a8dc1ed1ab6a.jpg)\n\n[Skija demo app](examples/lwjgl):\n\n|![](extras/geometry.png)|![](extras/text.png)|\n|---|---|\n|![](extras/bitmap.png)|![](extras/pythagoras.png)|\n|![](extras/filters.jpg)|![](extras/shaders.png)|\n\n## Current status\n\nPublic alpha. Things might change without notice.\n\nPlease note that Skia is known to change its API quite often (monthly). Skija will do its best to protect from these changes, but sometimes it might be impossible (e.g. method was removed). Normally it’s auxiliary stuff though, don’t worry too much.\n\nPlatforms:\n\n- [x] Windows\n- [x] Linux\n- [x] macOS\n\nBackends:\n\n- [x] Bitmap\n- [x] OpenGL\n- [x] Direct3D\n- [x] Metal\n- [ ] Vulkan\n\nAPIs:\n\n```\nBitmap               ▓▓▓▓▓▓▓▓▓▓    Paint                ▓▓▓▓▓▓▓▓▓▓\nCanvas               ▓▓▓▓▓▓▓▓░░    Path                 ▓▓▓▓▓▓▓▓▓▓\nCodec                ▓▓▓▓░░░░░░    PathEffects          ▓▓▓▓▓▓▓▓▓▓\nColor                ▓░░░░░░░░░    PathMeasure          ▓▓▓▓▓▓▓▓▓▓\nColorFilter          ▓▓▓▓▓▓▓▓▓▓    PaintFilterCanvas    ▓▓▓▓▓▓▓▓▓▓\nColorInfo            ▓▓▓▓▓▓▓▓▓▓    Picture              ▓▓▓▓▓▓▓▓▓░\nColorSpace           ▓▓▓▓░░░░░░    PictureRecorder      ▓▓▓▓▓▓▓▓▓▓\nData                 ▓▓▓▓▓▓▓▓▓░    PixelRef             ▓▓▓▓▓▓▓▓▓▓\nDrawable             ▓▓▓▓▓▓▓▓░░    Pixmap               ▓▓▓▓▓▓▓▓▓▓\nFlattenable          ░░░░░░░░░░    Region               ▓▓▓▓▓▓▓▓▓▓\nFont                 ▓▓▓▓▓▓▓▓▓▓    RuntimeEffect        ▓▓▓▓▓░░░░░\nFontData             ░░░░░░░░░░    ScalerContext        ░░░░░░░░░░\nFontManager          ▓▓▓▓▓▓▓▓▓░    Shader               ▓▓▓▓▓▓▓▓▓▓\nFontStyle            ▓▓▓▓▓▓▓▓▓▓    ShadowUtils          ▓▓▓▓▓▓▓▓▓▓\nFontStyleSet         ▓▓▓▓▓▓▓▓▓▓    Stream               ░░░░░░░░░░\nImage                ▓▓░░░░░░░░    String               ▓░░░░░░░░░\nImageFilters         ▓▓▓▓▓▓▓▓▓▓    Surface              ▓░░░░░░░░░\nImageInfo            ▓▓▓▓▓▓▓▓▓▓    TextBlob             ▓▓▓▓▓▓▓▓▓▓\nMaskFilter           ▓▓▓▓▓▓▓▓▓▓    TextBlobBuilder      ▓▓▓▓▓▓▓▓▓▓\nMatrix33             ▓▓▓░░░░░░░    Typeface             ▓▓▓▓▓▓▓▓░░\nMatrix44             ▓▓▓░░░░░░░    WStream              ▓▓░░░░░░░░\n\nShaper:                            Paragraph:\n\nBiDiRunIterator      ▓▓▓▓▓▓▓▓▓▓    FontCollection       ▓▓▓▓▓▓▓▓▓▓\nFontMgrRunIterator   ▓▓▓▓▓▓▓▓▓▓    LineMetrics          ▓▓▓▓▓▓▓▓▓░\nFontRunIterator      ▓▓▓▓▓▓▓▓▓▓    Paragraph            ▓▓▓▓▓▓▓▓▓▓\nHbIcuScriptRunIter   ▓▓▓▓▓▓▓▓▓▓    ParagraphCache       ▓▓▓▓▓▓▓▓▓▓\nIcuBidiRunIterator   ▓▓▓▓▓▓▓▓▓▓    ParagraphStyle       ▓▓▓▓▓▓▓▓▓▓\nLanguageRunIterator  ▓▓▓▓▓▓▓▓▓▓    ParagraphBuilder     ▓▓▓▓▓▓▓▓▓▓\nRunHandler           ▓▓▓▓▓▓▓▓▓▓    TextStyle            ▓▓▓▓▓▓▓▓▓▓\nRunInfo              ▓▓▓▓▓▓▓▓▓▓    TypefaceFontProvider ▓▓▓▓▓▓▓▓▓▓\nScriptRunIterator    ▓▓▓▓▓▓▓▓▓▓\nShaper               ▓▓▓▓▓▓▓▓▓▓\nTextBlobBldRunHndlr  ▓▓▓▓▓▓▓▓▓▓\n\nSVG:\n\nSVGDOM               ▓▓▓▓▓▓▓▓░░\nSVGCanvas            ▓▓▓▓▓▓▓▓▓▓\nSVGSVG               ▓▓▓▓▓▓▓▓░░\n```\n\n## Using Skija\n\nUsing Skija is as simple as adding a jar file.\n\nMaven:\n\n```xml\n<repositories>\n  <repository>\n    <id>space-maven</id>\n    <url>https://packages.jetbrains.team/maven/p/skija/maven</url>\n  </repository>\n</repositories>\n\n<dependencies>\n  <dependency>\n    <groupId>org.jetbrains.skija</groupId>\n    <artifactId>skija-${platform}</artifactId>\n    <version>${version}</version>\n  </dependency>\n</dependencies>\n```\n\nGradle:\n\n```gradle\nrepositories {\n  maven {\n    url \"https://packages.jetbrains.team/maven/p/skija/maven\"\n  }\n}\n\ndependencies {\n  api \"org.jetbrains.skija:${artifact}:${version}\"\n}\n```\n\nReplace `${artifact}` and `${version}` with:\n\nPlatform    | `${artifact}`       | `${version}`\n------------|---------------------|-------------\nmacOS Intel | `skija-macos-x64`   | ![version](https://img.shields.io/badge/dynamic/xml?style=flat-square&label=latest&color=success&url=https%3A%2F%2Fpackages.jetbrains.team%2Fmaven%2Fp%2Fskija%2Fmaven%2Forg%2Fjetbrains%2Fskija%2Fskija-macos-x64%2Fmaven-metadata.xml&query=//release)\nmacOS M1    | `skija-macos-arm64` | ![version](https://img.shields.io/badge/dynamic/xml?style=flat-square&label=latest&color=success&url=https%3A%2F%2Fpackages.jetbrains.team%2Fmaven%2Fp%2Fskija%2Fmaven%2Forg%2Fjetbrains%2Fskija%2Fskija-macos-arm64%2Fmaven-metadata.xml&query=//release)\nLinux       | `skija-linux`       | ![version](https://img.shields.io/badge/dynamic/xml?style=flat-square&label=latest&color=success&url=https%3A%2F%2Fpackages.jetbrains.team%2Fmaven%2Fp%2Fskija%2Fmaven%2Forg%2Fjetbrains%2Fskija%2Fskija-linux%2Fmaven-metadata.xml&query=//release)\nWindows     | `skija-windows`     | ![version](https://img.shields.io/badge/dynamic/xml?style=flat-square&label=latest&color=success&url=https%3A%2F%2Fpackages.jetbrains.team%2Fmaven%2Fp%2Fskija%2Fmaven%2Forg%2Fjetbrains%2Fskija%2Fskija-windows%2Fmaven-metadata.xml&query=//release)\n\n## Documentation\n\nGet started by reading [Getting Started](docs/Getting%20Started.md).\n\nAPI docs are under development — consult source code and JavaDoc comments.\n\nI found [SkiaSharp documentation](https://docs.microsoft.com/en-us/xamarin/xamarin-forms/user-interface/graphics/skiasharp/) to be excellent resource on what can be done in Skia. They have nice examples and visual explanations, too.\n\nIf Skija is missing a documentation for a particular method or class, check the same class in [Skia Documentation](https://api.skia.org/) instead. It might be that we didn’t move it over to Java yet. PRs are welcome!\n\nFinally, [LWJGL demo app](/examples/lwjgl) has examples of most of the APIs that are currently implemented.\n\n## Resources\n\n- Overview [youtube.com/watch?v=t1X-Oln1u24](https://www.youtube.com/watch?v=t1X-Oln1u24)\n- Coding game in Skija and Clojure [youtube.com/watch?v=KES-lKTq-3M](https://www.youtube.com/watch?v=KES-lKTq-3M)\n- SWT and Skija on Raspberry Pi [spket.com/blog/native-gui-app-with-swt-and-skija-on-raspberry-pi](https://www.spket.com/blog/native-gui-app-with-swt-and-skija-on-raspberry-pi/)\n\n## Building Skija from scratch\n\nPrerequisites: Git, CMake, Ninja, JDK 9+, $JAVA_HOME, Python 3.\n\nCheckout:\n\n```sh\ngit clone https://github.com/JetBrains/skija.git\ncd skija\n./script/build.py\n```\n\nTo codesign:\n\n```sh\nsecurity find-identity\nexport APPLE_CODESIGN_IDENTITY=\"<...>\"\n./script/build.py\n```\n\nFor building Skia itself, see https://github.com/JetBrains/skia-build/\n\n## Running examples\n\nExamples require local build of Skija (see [Building Skija](#building-skija-from-scratch)).\n\nSee [examples/](examples/).\n\n## Contributing\n\nContributions are welcome!\n\nMake sure to read [Code Conventions](docs/Conventions.md).\n\nRemember: the goal of Skija is to map Skia API as close as possible.\n\nThese things have a place in Skija:\n\n- Everything that is in Skia and makes sense in Java world.\n- Convenience methods (e.g. a method that uses a default value for a parameter).\n- Documentation on Skija methods is very welcome!\n\nThese don’t:\n\n- Things that don’t directly map to anything in Java (pointers, etc).\n- New classes, new methods that don’t exist in Skia.\n- Code that combines Skia APIs together for special use-cases.\n\nUseful things built on top of Skia/Skija are always welcome — as libraries.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "platform",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "shared",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}