{
  "metadata": {
    "timestamp": 1736708118147,
    "page": 529,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/maven-mvnd",
      "stars": 2959,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 1.0390625,
          "content": "#\n# Copyright 2021-2024 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# see https://s.apache.org/asfyaml\ngithub:\n  description: \"Apache Maven Daemon\"\n  homepage: https://maven.apache.org/\n  labels:\n    - java\n    - build-management\n    - apache-maven\n    - maven\n  enabled_merge_buttons:\n    squash: true\n    merge: false\n    rebase: true\n  del_branch_on_merge: true\n\nnotifications:\n  commits: commits@maven.apache.org\n  issues: issues@maven.apache.org\n  pullrequests: issues@maven.apache.org\n  jira_options: link label comment\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.8369140625,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n# Change maven code style\na14a1eb80f53d9e3b5cbf89ac9f21ab094591fd9\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.349609375,
          "content": "# Maven\ntarget/\npom.xml.tag\npom.xml.releaseBackup\npom.xml.versionsBackup\npom.xml.next\nrelease.properties\ndependency-reduced-pom.xml\n\n# Eclipse\n.project\n.classpath\n.settings/\n\n# IDEA\n.idea\n*.ipr\n*.iml\n*.iws\n\n# NetBeans\nnb-configuration.xml\n\n# OSX\n.DS_Store\n\n# VS Code\n.vscode/\n\n# formatter-maven-plugin\n.cache/\n\n# https://ge.apache.org\n.mvn/.gradle-enterprise"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0927734375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.43359375,
          "content": "This project contains code coming from other projects\nlicensed under the Apache Software License 2.0:\n\n - Apache Maven project (https://maven.apache.org)\n - Takari Smart Builder (https://github.com/takari/takari-smart-builder)\n - maven-buildtime-extension (https://github.com/timgifford/maven-buildtime-extension)\n - Apache Karaf (https://karaf.apache.org)\n - Gradle Launcher (https://github.com/gradle/gradle/tree/master/subprojects/launcher)\n"
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 9.033203125,
          "content": "= `mvnd` - the Maven Daemon\n:toc: macro\n\nimage::https://img.shields.io/twitter/url/https/twitter.com/mvndaemon.svg?style=social&label=Follow%20%40mvndaemon[link=\"https://twitter.com/mvndaemon\"]\n\ntoc::[]\n\n== Introduction\n\nThis project aims at providing faster https://maven.apache.org/[Maven] builds using techniques known from Gradle and\nTakari.\n\nArchitecture overview:\n\n* `mvnd` embeds Maven (so there is no need to install Maven separately).\n* The actual builds happen inside a long living background process, a.k.a. daemon.\n* One daemon instance can serve multiple consecutive requests from the `mvnd` client.\n* The `mvnd` client is a native executable built using https://www.graalvm.org/reference-manual/native-image/[GraalVM].\n  It starts faster and uses less memory compared to starting a traditional JVM.\n* Multiple daemons can be spawned in parallel if there is no idle daemon to serve a build request.\n\nThis architecture brings the following advantages:\n\n* The JVM for running the actual builds does not need to get started anew for each build.\n* The classloaders holding classes of Maven plugins are cached over multiple builds. The plugin jars are thus read\n  and parsed just once. SNAPSHOT versions of Maven plugins are not cached.\n* The native code produced by the Just-In-Time (JIT) compiler inside the JVM is kept too. Compared to stock Maven,\n  less time is spent by the JIT compilation. During the repeated builds the JIT-optimized code is available\n  immediately. This applies not only to the code coming from Maven plugins and Maven Core, but also to all code coming\n  from the JDK itself.\n\n== Additional features\n\n`mvnd` brings the following features on top of the stock Maven:\n\n* By default, `mvnd` is building your modules in parallel using multiple CPU cores. The number of utilized cores is\n  given by the formula `Math.max(Runtime.getRuntime().availableProcessors() - 1, 1)`. If your source tree does not\n  support parallel builds, pass `-T1` into the command line to make your build serial.\n* Improved console output: we believe that the output of a parallel build on stock Maven is hard to follow. Therefore,\nwe implemented a simplified non-rolling view showing the status of each build thread on a separate line. This is\nwhat it looks like on a machine with 24 cores:\n+\nimage::https://user-images.githubusercontent.com/1826249/103917178-94ee4500-510d-11eb-9abb-f52dae58a544.gif[]\n+\nOnce the build is finished, the complete Maven output is forwarded to the console.\n\n== How to install `mvnd`\n\n=== Install using https://sdkman.io/[SDKMAN!]\n\nIf SDKMAN! supports your operating system, it is as easy as\n\n[source,shell]\n----\nsdk install mvnd\n----\n\nIf you used the manual install in the past, please make sure that the settings in `~/.m2/mvnd.properties` still make\nsense. With SDKMAN!, the `~/.m2/mvnd.properties` file is typically not needed at all, because both `JAVA_HOME` and\n`MVND_HOME` are managed by SDKMAN!.\n\n=== Install using https://brew.sh/[Homebrew]\n\n[source,shell]\n----\nbrew install mvndaemon/homebrew-mvnd/mvnd\n----\n\nNote: There are two formulae: the `mvnd` that install latest, and `mvnd@1` that installs 1.x line.\n\n=== Install using https://www.macports.org[MacPorts]\n\n[source,shell]\n----\nsudo port install mvnd\n----\n\n=== Other installers\n\nWe're looking for contribution to support https://community.chocolatey.org/packages/mvndaemon/[Chocolatey], https://scoop.sh/[Scoop] or\nhttps://github.com/joschi/asdf-mvnd#install[asdf].  If you fancy helping us...\n\n////\n=== Install using https://www.macports.org[MacPorts]\n\n[source,shell]\n----\n$ sudo port install mvnd\n----\n\n=== Install using https://community.chocolatey.org/packages/mvndaemon/[Chocolatey]\n\n[source,shell]\n----\n$ choco install mvndaemon\n----\n\n=== Install using https://scoop.sh/[Scoop]\n\n[source,shell]\n----\n$ scoop install mvndaemon\n----\n\n=== Install using https://github.com/joschi/asdf-mvnd#install[asdf]\n\n[source,shell]\n----\n$ asdf plugin-add mvnd\n$ asdf install mvnd latest\n----\n////\n\n=== Set up completion\n\nOptionally, you can set up completion as follows:\n[source,shell]\n----\n# ensure that MVND_HOME points to your mvnd distribution, note that sdkman does it for you\n$ echo 'source $MVND_HOME/bin/mvnd-bash-completion.bash' >> ~/.bashrc\n----\n`bash` is the only shell supported at this time.\n\n=== Install manually\n\n* Download the latest ZIP suitable for your platform from https://downloads.apache.org/maven/mvnd/\n* Unzip to a directory of your choice\n* Add the `bin` directory to `PATH`\n* Optionally, you can create `~/.m2/mvnd.properties` and set the `java.home` property in case you do not want to bother\n  with setting the `JAVA_HOME` environment variable.\n* Test whether `mvnd` works:\n+\n[source,shell]\n----\n$ mvnd --version\nMaven Daemon 0.0.11-linux-amd64 (native)\nTerminal: org.jline.terminal.impl.PosixSysTerminal with pty org.jline.terminal.impl.jansi.osx.OsXNativePty\nApache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\nMaven home: /home/ppalaga/orgs/mvnd/mvnd/daemon/target/maven-distro\nJava version: 11.0.1, vendor: AdoptOpenJDK, runtime: /home/data/jvm/adopt-openjdk/jdk-11.0.1+13\nDefault locale: en_IE, platform encoding: UTF-8\nOS name: \"linux\", version: \"5.6.13-200.fc31.x86_64\", arch: \"amd64\", family: \"unix\"\n----\n+\nIf you are on Windows and see a message that `VCRUNTIME140.dll was not found`, you need to install\n`vc_redist.x64.exe` from https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads.\nSee https://github.com/oracle/graal/issues/1762 for more information.\n+\nIf you are on macOS, you'll need to remove the quarantine flags from all the files after unpacking the archive:\n[source,shell]\n----\n$ xattr -r -d com.apple.quarantine mvnd-x.y.z-darwin-amd64\n----\n\n== Usage\n\n`mvnd` is designed to accept the same command line options like stock `mvn` (plus some extras - see below), e.g.:\n\n[source,shell]\n----\nmvnd verify\n----\n\n== `mvnd` specific options\n\n`--status` lists running daemons\n\n`--stop` kills all running daemons\n\n`mvnd --help` prints the complete list of options\n\n\n== Configuration\nConfiguration can be provided through the properties file.  Mvnd reads the properties file from the following locations:\n\n* the properties path supplied using `MVND_PROPERTIES_PATH` environment variable or `mvnd.propertiesPath` system variable\n* the local properties path located at `[PROJECT_HOME]/.mvn/mvnd.properties`\n* the user properties path located at: `[USER_HOME]/.m2/mvnd.properties`\n* the system properties path located at: `[MVND_HOME]/conf/mvnd.properties`\n\nProperties defined in the first files will take precedence over properties specified in a lower ranked file.\n\nA few special properties do not follow the above mechanism:\n\n* `mvnd.daemonStorage`: this property defines the location where mvnd stores its files (registry and daemon logs).  This property can only be defined as a system property on the command line\n* `mvnd.id`: this property is used internally to identify the daemon being created\n* `mvnd.extClasspath`: internal option to specify the maven extension classpath\n* `mvnd.coreExtensionFilePath`: internal option to specify the maven extension configuration file path\n\nFor a full list of available properties please see \nhttps://github.com/apache/maven-mvnd/blob/master/dist/src/main/distro/conf/mvnd.properties[/dist/src/main/distro/conf/mvnd.properties].\n\n== Build `mvnd` from source\n\n=== Prerequisites:\n\n* `git`\n* Maven\n* Download and unpack GraalVM CE from https://github.com/graalvm/graalvm-ce-builds/releases[GitHub]\n* Set `JAVA_HOME` to where you unpacked GraalVM in the previous step. Check that `java -version` output is as\n  expected:\n+\n[source,shell]\n----\n$ $JAVA_HOME/bin/java -version\nopenjdk version \"11.0.9\" 2020-10-20\nOpenJDK Runtime Environment GraalVM CE 20.3.0 (build 11.0.9+10-jvmci-20.3-b06)\nOpenJDK 64-Bit Server VM GraalVM CE 20.3.0 (build 11.0.9+10-jvmci-20.3-b06, mixed mode, sharing)\n----\n+\n* Install the `native-image` tool:\n+\n[source,shell]\n----\n$ $JAVA_HOME/bin/gu install native-image\n----\n\n* `native-image` may require additional software to be installed depending on your platform - see the\nhttps://www.graalvm.org/reference-manual/native-image/#prerequisites[`native-image` documentation].\n\n=== Build `mvnd`\n\n[source,shell]\n----\n$ git clone https://github.com/apache/maven-mvnd.git\n$ cd maven-mvnd\n$ mvn clean verify -Pnative\n...\n$ cd client\n$ file target/mvnd\ntarget/mvnd: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=93a554f3807550a13c986d2af9a311ef299bdc5a, for GNU/Linux 3.2.0, with debug_info, not stripped\n$ ls -lh target/mvnd\n-rwxrwxr-x. 1 ppalaga ppalaga 25M Jun  2 13:23 target/mvnd\n----\n\nPlease note that if you are using Windows as your operating system you will need the following prerequisites for building `maven-mvnd`:\na version of Visual Studio with the workload \"Desktop development with C++\" and the individual component \"Windows Universal CRT SDK\".\n\n=== Install `mvnd`\n\n[source, shell]\n----\n$ cp -R dist/target/mvnd-[version] [target-dir]\n----\n\nThen you can simply add `[target-dir]/bin` to your `PATH` and run `mvnd`. \n\nWe're happy to improve `mvnd`, so https://github.com/apache/maven-mvnd/issues[feedback] is most welcome!\n"
        },
        {
          "name": "RELEASING.adoc",
          "type": "blob",
          "size": 1.5361328125,
          "content": "= How to release `mvnd`\n\n* Run the https://raw.githubusercontent.com/apache/maven-mvnd/master/build/release-build.sh[release script] which will update the versions, the native binaries and will tag the new git commit. This new tag will trigger the https://raw.githubusercontent.com/apache/maven-mvnd/master/.github/workflows/release.yaml[release workflow] on this newly created tag.\n[source,shell]\n----\n./build/release-build.sh <released-version> <next-SNAPSHOT>\n----\n\nWarning for Fedora users: The RedHat `podman` is usually preinstalled and happily coexisting with `Docker`. Make sure Docker is being used, usually by setting `OCI_EXE=docker` env variable.\n\n* Once the workflow completes, run the https://raw.githubusercontent.com/apache/maven-mvnd/master/build/release-candidate.sh[release-candidate script] which will download the built assemblies, compute the checksums and signatures, commit them to the https://dist.apache.org/repos/dist/dev/maven/mvnd/[dev distribution repository]\nhttps://github.com/apache/maven-mvnd/releases[releases] and also upload them as assets to the staging area for the github draft release.\n[source,shell]\n----\n./build/release-candidate.sh <released-version>\n----\nYou can now call a vote on the mailto:dev@maven.apache.org[dev mailing list] pointing to that release candidate.\n\n* Once the vote passes, publish the release using the following command:\n[source,shell]\n----\n./build/release-publish.sh <released-version>\n----\nWARNING: *TODO*: document the publication process (move to the final svn area, homebrew, sdkman, choco updates...)\n"
        },
        {
          "name": "agent",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "daemon",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "helper",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "logging",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.4150390625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.3.2\n#\n# Optional ENV vars\n# -----------------\n#   JAVA_HOME - location of a JDK home dir, required when download maven via java source\n#   MVNW_REPOURL - repo url base for downloading maven distribution\n#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output\n# ----------------------------------------------------------------------------\n\nset -euf\n[ \"${MVNW_VERBOSE-}\" != debug ] || set -x\n\n# OS specific support.\nnative_path() { printf %s\\\\n \"$1\"; }\ncase \"$(uname)\" in\nCYGWIN* | MINGW*)\n  [ -z \"${JAVA_HOME-}\" ] || JAVA_HOME=\"$(cygpath --unix \"$JAVA_HOME\")\"\n  native_path() { cygpath --path --windows \"$1\"; }\n  ;;\nesac\n\n# set JAVACMD and JAVACCMD\nset_java_home() {\n  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched\n  if [ -n \"${JAVA_HOME-}\" ]; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n      JAVACCMD=\"$JAVA_HOME/jre/sh/javac\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n      JAVACCMD=\"$JAVA_HOME/bin/javac\"\n\n      if [ ! -x \"$JAVACMD\" ] || [ ! -x \"$JAVACCMD\" ]; then\n        echo \"The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run.\" >&2\n        echo \"JAVA_HOME is set to \\\"$JAVA_HOME\\\", but \\\"\\$JAVA_HOME/bin/java\\\" or \\\"\\$JAVA_HOME/bin/javac\\\" does not exist.\" >&2\n        return 1\n      fi\n    fi\n  else\n    JAVACMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v java\n    )\" || :\n    JAVACCMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v javac\n    )\" || :\n\n    if [ ! -x \"${JAVACMD-}\" ] || [ ! -x \"${JAVACCMD-}\" ]; then\n      echo \"The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run.\" >&2\n      return 1\n    fi\n  fi\n}\n\n# hash string like Java String::hashCode\nhash_string() {\n  str=\"${1:-}\" h=0\n  while [ -n \"$str\" ]; do\n    char=\"${str%\"${str#?}\"}\"\n    h=$(((h * 31 + $(LC_CTYPE=C printf %d \"'$char\")) % 4294967296))\n    str=\"${str#?}\"\n  done\n  printf %x\\\\n $h\n}\n\nverbose() { :; }\n[ \"${MVNW_VERBOSE-}\" != true ] || verbose() { printf %s\\\\n \"${1-}\"; }\n\ndie() {\n  printf %s\\\\n \"$1\" >&2\n  exit 1\n}\n\ntrim() {\n  # MWRAPPER-139:\n  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.\n  #   Needed for removing poorly interpreted newline sequences when running in more\n  #   exotic environments such as mingw bash on Windows.\n  printf \"%s\" \"${1}\" | tr -d '[:space:]'\n}\n\n# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties\nwhile IFS=\"=\" read -r key value; do\n  case \"${key-}\" in\n  distributionUrl) distributionUrl=$(trim \"${value-}\") ;;\n  distributionSha256Sum) distributionSha256Sum=$(trim \"${value-}\") ;;\n  esac\ndone <\"${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n[ -n \"${distributionUrl-}\" ] || die \"cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n\ncase \"${distributionUrl##*/}\" in\nmaven-mvnd-*bin.*)\n  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/\n  case \"${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)\" in\n  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;\n  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;\n  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;\n  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;\n  *)\n    echo \"Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version\" >&2\n    distributionPlatform=linux-amd64\n    ;;\n  esac\n  distributionUrl=\"${distributionUrl%-bin.*}-$distributionPlatform.zip\"\n  ;;\nmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;\n*) MVN_CMD=\"mvn${0##*/mvnw}\" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;\nesac\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\n[ -z \"${MVNW_REPOURL-}\" ] || distributionUrl=\"$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*\"$_MVNW_REPO_PATTERN\"}\"\ndistributionUrlName=\"${distributionUrl##*/}\"\ndistributionUrlNameMain=\"${distributionUrlName%.*}\"\ndistributionUrlNameMain=\"${distributionUrlNameMain%-bin}\"\nMAVEN_USER_HOME=\"${MAVEN_USER_HOME:-${HOME}/.m2}\"\nMAVEN_HOME=\"${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string \"$distributionUrl\")\"\n\nexec_maven() {\n  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :\n  exec \"$MAVEN_HOME/bin/$MVN_CMD\" \"$@\" || die \"cannot exec $MAVEN_HOME/bin/$MVN_CMD\"\n}\n\nif [ -d \"$MAVEN_HOME\" ]; then\n  verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  exec_maven \"$@\"\nfi\n\ncase \"${distributionUrl-}\" in\n*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;\n*) die \"distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'\" ;;\nesac\n\n# prepare tmp dir\nif TMP_DOWNLOAD_DIR=\"$(mktemp -d)\" && [ -d \"$TMP_DOWNLOAD_DIR\" ]; then\n  clean() { rm -rf -- \"$TMP_DOWNLOAD_DIR\"; }\n  trap clean HUP INT TERM EXIT\nelse\n  die \"cannot create temp dir\"\nfi\n\nmkdir -p -- \"${MAVEN_HOME%/*}\"\n\n# Download and Install Apache Maven\nverbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nverbose \"Downloading from: $distributionUrl\"\nverbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n# select .zip or .tar.gz\nif ! command -v unzip >/dev/null; then\n  distributionUrl=\"${distributionUrl%.zip}.tar.gz\"\n  distributionUrlName=\"${distributionUrl##*/}\"\nfi\n\n# verbose opt\n__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''\n[ \"${MVNW_VERBOSE-}\" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v\n\n# normalize http auth\ncase \"${MVNW_PASSWORD:+has-password}\" in\n'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nhas-password) [ -n \"${MVNW_USERNAME-}\" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nesac\n\nif [ -z \"${MVNW_USERNAME-}\" ] && command -v wget >/dev/null; then\n  verbose \"Found wget ... using wget\"\n  wget ${__MVNW_QUIET_WGET:+\"$__MVNW_QUIET_WGET\"} \"$distributionUrl\" -O \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" || die \"wget: Failed to fetch $distributionUrl\"\nelif [ -z \"${MVNW_USERNAME-}\" ] && command -v curl >/dev/null; then\n  verbose \"Found curl ... using curl\"\n  curl ${__MVNW_QUIET_CURL:+\"$__MVNW_QUIET_CURL\"} -f -L -o \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" \"$distributionUrl\" || die \"curl: Failed to fetch $distributionUrl\"\nelif set_java_home; then\n  verbose \"Falling back to use Java to download\"\n  javaSource=\"$TMP_DOWNLOAD_DIR/Downloader.java\"\n  targetZip=\"$TMP_DOWNLOAD_DIR/$distributionUrlName\"\n  cat >\"$javaSource\" <<-END\n\tpublic class Downloader extends java.net.Authenticator\n\t{\n\t  protected java.net.PasswordAuthentication getPasswordAuthentication()\n\t  {\n\t    return new java.net.PasswordAuthentication( System.getenv( \"MVNW_USERNAME\" ), System.getenv( \"MVNW_PASSWORD\" ).toCharArray() );\n\t  }\n\t  public static void main( String[] args ) throws Exception\n\t  {\n\t    setDefault( new Downloader() );\n\t    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );\n\t  }\n\t}\n\tEND\n  # For Cygwin/MinGW, switch paths to Windows format before running javac and java\n  verbose \" - Compiling Downloader.java ...\"\n  \"$(native_path \"$JAVACCMD\")\" \"$(native_path \"$javaSource\")\" || die \"Failed to compile Downloader.java\"\n  verbose \" - Running Downloader.java ...\"\n  \"$(native_path \"$JAVACMD\")\" -cp \"$(native_path \"$TMP_DOWNLOAD_DIR\")\" Downloader \"$distributionUrl\" \"$(native_path \"$targetZip\")\"\nfi\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\nif [ -n \"${distributionSha256Sum-}\" ]; then\n  distributionSha256Result=false\n  if [ \"$MVN_CMD\" = mvnd.sh ]; then\n    echo \"Checksum validation is not supported for maven-mvnd.\" >&2\n    echo \"Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  elif command -v sha256sum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | sha256sum -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  elif command -v shasum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | shasum -a 256 -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n    echo \"Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  fi\n  if [ $distributionSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified distributionSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\n# unzip and move\nif command -v unzip >/dev/null; then\n  unzip ${__MVNW_QUIET_UNZIP:+\"$__MVNW_QUIET_UNZIP\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -d \"$TMP_DOWNLOAD_DIR\" || die \"failed to unzip\"\nelse\n  tar xzf${__MVNW_QUIET_TAR:+\"$__MVNW_QUIET_TAR\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -C \"$TMP_DOWNLOAD_DIR\" || die \"failed to untar\"\nfi\nprintf %s\\\\n \"$distributionUrl\" >\"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url\"\nmv -- \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" \"$MAVEN_HOME\" || [ -d \"$MAVEN_HOME\" ] || die \"fail to move MAVEN_HOME\"\n\nclean || :\nexec_maven \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.8955078125,
          "content": "<# : batch portion\r\n@REM ----------------------------------------------------------------------------\r\n@REM Licensed to the Apache Software Foundation (ASF) under one\r\n@REM or more contributor license agreements.  See the NOTICE file\r\n@REM distributed with this work for additional information\r\n@REM regarding copyright ownership.  The ASF licenses this file\r\n@REM to you under the Apache License, Version 2.0 (the\r\n@REM \"License\"); you may not use this file except in compliance\r\n@REM with the License.  You may obtain a copy of the License at\r\n@REM\r\n@REM    http://www.apache.org/licenses/LICENSE-2.0\r\n@REM\r\n@REM Unless required by applicable law or agreed to in writing,\r\n@REM software distributed under the License is distributed on an\r\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n@REM KIND, either express or implied.  See the License for the\r\n@REM specific language governing permissions and limitations\r\n@REM under the License.\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@REM ----------------------------------------------------------------------------\r\n@REM Apache Maven Wrapper startup batch script, version 3.3.2\r\n@REM\r\n@REM Optional ENV vars\r\n@REM   MVNW_REPOURL - repo url base for downloading maven distribution\r\n@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\r\n@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@IF \"%__MVNW_ARG0_NAME__%\"==\"\" (SET __MVNW_ARG0_NAME__=%~nx0)\r\n@SET __MVNW_CMD__=\r\n@SET __MVNW_ERROR__=\r\n@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%\r\n@SET PSModulePath=\r\n@FOR /F \"usebackq tokens=1* delims==\" %%A IN (`powershell -noprofile \"& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}\"`) DO @(\r\n  IF \"%%A\"==\"MVN_CMD\" (set __MVNW_CMD__=%%B) ELSE IF \"%%B\"==\"\" (echo %%A) ELSE (echo %%A=%%B)\r\n)\r\n@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%\r\n@SET __MVNW_PSMODULEP_SAVE=\r\n@SET __MVNW_ARG0_NAME__=\r\n@SET MVNW_USERNAME=\r\n@SET MVNW_PASSWORD=\r\n@IF NOT \"%__MVNW_CMD__%\"==\"\" (%__MVNW_CMD__% %*)\r\n@echo Cannot start maven from wrapper >&2 && exit /b 1\r\n@GOTO :EOF\r\n: end batch / begin powershell #>\r\n\r\n$ErrorActionPreference = \"Stop\"\r\nif ($env:MVNW_VERBOSE -eq \"true\") {\r\n  $VerbosePreference = \"Continue\"\r\n}\r\n\r\n# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties\r\n$distributionUrl = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionUrl\r\nif (!$distributionUrl) {\r\n  Write-Error \"cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties\"\r\n}\r\n\r\nswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {\r\n  \"maven-mvnd-*\" {\r\n    $USE_MVND = $true\r\n    $distributionUrl = $distributionUrl -replace '-bin\\.[^.]*$',\"-windows-amd64.zip\"\r\n    $MVN_CMD = \"mvnd.cmd\"\r\n    break\r\n  }\r\n  default {\r\n    $USE_MVND = $false\r\n    $MVN_CMD = $script -replace '^mvnw','mvn'\r\n    break\r\n  }\r\n}\r\n\r\n# apply MVNW_REPOURL and calculate MAVEN_HOME\r\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\r\nif ($env:MVNW_REPOURL) {\r\n  $MVNW_REPO_PATTERN = if ($USE_MVND) { \"/org/apache/maven/\" } else { \"/maven/mvnd/\" }\r\n  $distributionUrl = \"$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')\"\r\n}\r\n$distributionUrlName = $distributionUrl -replace '^.*/',''\r\n$distributionUrlNameMain = $distributionUrlName -replace '\\.[^.]*$','' -replace '-bin$',''\r\n$MAVEN_HOME_PARENT = \"$HOME/.m2/wrapper/dists/$distributionUrlNameMain\"\r\nif ($env:MAVEN_USER_HOME) {\r\n  $MAVEN_HOME_PARENT = \"$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain\"\r\n}\r\n$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString(\"x2\")}) -join ''\r\n$MAVEN_HOME = \"$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME\"\r\n\r\nif (Test-Path -Path \"$MAVEN_HOME\" -PathType Container) {\r\n  Write-Verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\r\n  Write-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\r\n  exit $?\r\n}\r\n\r\nif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {\r\n  Write-Error \"distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl\"\r\n}\r\n\r\n# prepare tmp dir\r\n$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile\r\n$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path \"$TMP_DOWNLOAD_DIR_HOLDER.dir\"\r\n$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null\r\ntrap {\r\n  if ($TMP_DOWNLOAD_DIR.Exists) {\r\n    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\r\n    catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\r\n  }\r\n}\r\n\r\nNew-Item -Itemtype Directory -Path \"$MAVEN_HOME_PARENT\" -Force | Out-Null\r\n\r\n# Download and Install Apache Maven\r\nWrite-Verbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\r\nWrite-Verbose \"Downloading from: $distributionUrl\"\r\nWrite-Verbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\r\n\r\n$webclient = New-Object System.Net.WebClient\r\nif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {\r\n  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)\r\n}\r\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\r\n$webclient.DownloadFile($distributionUrl, \"$TMP_DOWNLOAD_DIR/$distributionUrlName\") | Out-Null\r\n\r\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\r\n$distributionSha256Sum = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionSha256Sum\r\nif ($distributionSha256Sum) {\r\n  if ($USE_MVND) {\r\n    Write-Error \"Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\"\r\n  }\r\n  Import-Module $PSHOME\\Modules\\Microsoft.PowerShell.Utility -Function Get-FileHash\r\n  if ((Get-FileHash \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {\r\n    Write-Error \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property.\"\r\n  }\r\n}\r\n\r\n# unzip and move\r\nExpand-Archive \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -DestinationPath \"$TMP_DOWNLOAD_DIR\" | Out-Null\r\nRename-Item -Path \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" -NewName $MAVEN_HOME_NAME | Out-Null\r\ntry {\r\n  Move-Item -Path \"$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME\" -Destination $MAVEN_HOME_PARENT | Out-Null\r\n} catch {\r\n  if (! (Test-Path -Path \"$MAVEN_HOME\" -PathType Container)) {\r\n    Write-Error \"fail to move MAVEN_HOME\"\r\n  }\r\n} finally {\r\n  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\r\n  catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\r\n}\r\n\r\nWrite-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\r\n"
        },
        {
          "name": "native",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 23.2001953125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n\n    Copyright 2019-2021 the original author or authors.\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n-->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>org.apache.maven</groupId>\n    <artifactId>maven-parent</artifactId>\n    <version>43</version>\n    <relativePath />\n  </parent>\n\n  <groupId>org.apache.maven.daemon</groupId>\n  <artifactId>mvnd</artifactId>\n  <version>2.0.0-rc-3-SNAPSHOT</version>\n\n  <packaging>pom</packaging>\n  <name>Maven Daemon - Parent</name>\n  <inceptionYear>2019</inceptionYear>\n\n  <licenses>\n    <license>\n      <name>Apache-2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <modules>\n    <module>build-plugin</module>\n    <module>native</module>\n    <module>agent</module>\n    <module>helper</module>\n    <module>common</module>\n    <module>client</module>\n    <module>logging</module>\n    <module>daemon</module>\n    <module>dist</module>\n    <module>integration-tests</module>\n  </modules>\n\n  <scm>\n    <connection>scm:git:${repository.url}.git</connection>\n    <developerConnection>scm:git:${repository.url}.git</developerConnection>\n    <tag>head</tag>\n    <url>${repository.url}</url>\n  </scm>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <maven.compiler.source>17</maven.compiler.source>\n    <maven.compiler.target>17</maven.compiler.target>\n    <maven.compiler.release>17</maven.compiler.release>\n    <maven-dist.required.jdk>17</maven-dist.required.jdk>\n    <project.build.outputTimestamp>2024-11-26T09:14:09Z</project.build.outputTimestamp>\n    <trimStackTrace>false</trimStackTrace>\n    <project.github.repository>apache/maven-mvnd</project.github.repository>\n    <repository.url>github.com:${project.github.repository}</repository.url>\n\n    <!-- dependency versions a..z -->\n    <apiguardian-api.version>1.0.0</apiguardian-api.version>\n    <assertj.version>3.27.2</assertj.version>\n    <commons-compress.version>1.27.1</commons-compress.version>\n    <graalvm.version>24.1.1</graalvm.version>\n    <graalvm.plugin.version>0.10.4</graalvm.plugin.version>\n    <groovy.version>4.0.24</groovy.version>\n    <jansi.version>2.4.1</jansi.version>\n    <jline.version>3.28.0</jline.version>\n    <maven.version>4.0.0-rc-3-SNAPSHOT</maven.version>\n    <required-maven.version>3.9.9</required-maven.version>\n\n    <!-- Keep in sync with Maven -->\n    <maven.resolver.version>2.0.5</maven.resolver.version>\n    <slf4j.version>2.0.16</slf4j.version>\n    <sisu.version>0.9.0.M3</sisu.version>\n    <maven.plugin-tools.version>3.15.1</maven.plugin-tools.version>\n    <version.plexus-utils>4.0.2</version.plexus-utils>\n    <version.plexus-xml>4.0.4</version.plexus-xml>\n    <jakarta.inject.version>2.0.1</jakarta.inject.version>\n\n    <!-- plugin versions a..z -->\n    <buildnumber-maven-plugin.version>3.2.1</buildnumber-maven-plugin.version>\n    <groovy-maven-plugin.version>4.1.1</groovy-maven-plugin.version>\n    <junit-platform-launcher.version>1.3.2</junit-platform-launcher.version>\n    <takari-provisio.version>1.1.1</takari-provisio.version>\n\n    <javassist.version>3.30.2-GA</javassist.version>\n    <picocli.version>4.7.6</picocli.version>\n    <plexus-interactivity-api.version>1.3</plexus-interactivity-api.version>\n    <roaster.version>2.30.1.Final</roaster.version>\n    <takari-smart-builder.version>1.0.2</takari-smart-builder.version>\n    <testcontainers.version>1.20.4</testcontainers.version>\n    <xstream.version>1.4.21</xstream.version>\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n\n      <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-api</artifactId>\n        <version>${slf4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-simple</artifactId>\n        <version>${slf4j.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-compress</artifactId>\n        <version>${commons-compress.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.groovy</groupId>\n        <artifactId>groovy</artifactId>\n        <version>${groovy.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.graalvm.nativeimage</groupId>\n        <artifactId>svm</artifactId>\n        <version>${graalvm.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>jakarta.inject</groupId>\n        <artifactId>jakarta.inject-api</artifactId>\n        <version>${jakarta.inject.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.maven</groupId>\n        <artifactId>maven-plugin-api</artifactId>\n        <version>${maven.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven</groupId>\n        <artifactId>maven-model</artifactId>\n        <version>${maven.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven</groupId>\n        <artifactId>maven-core</artifactId>\n        <version>${maven.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven</groupId>\n        <artifactId>maven-resolver-provider</artifactId>\n        <version>${maven.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven</groupId>\n        <artifactId>maven-embedder</artifactId>\n        <version>${maven.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven</groupId>\n        <artifactId>maven-cli</artifactId>\n        <version>${maven.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven</groupId>\n        <artifactId>maven-api-di</artifactId>\n        <version>${maven.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven</groupId>\n        <artifactId>maven-jline</artifactId>\n        <version>${maven.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven</groupId>\n        <artifactId>maven-logging</artifactId>\n        <version>${maven.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven</groupId>\n        <artifactId>apache-maven</artifactId>\n        <version>${maven.version}</version>\n        <classifier>bin</classifier>\n        <type>tar.gz</type>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.plugin-tools</groupId>\n        <artifactId>maven-plugin-annotations</artifactId>\n        <version>${maven.plugin-tools.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.maven.resolver</groupId>\n        <artifactId>maven-resolver-api</artifactId>\n        <version>${maven.resolver.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.resolver</groupId>\n        <artifactId>maven-resolver-impl</artifactId>\n        <version>${maven.resolver.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.resolver</groupId>\n        <artifactId>maven-resolver-spi</artifactId>\n        <version>${maven.resolver.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.resolver</groupId>\n        <artifactId>maven-resolver-util</artifactId>\n        <version>${maven.resolver.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.resolver</groupId>\n        <artifactId>maven-resolver-connector-basic</artifactId>\n        <version>${maven.resolver.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.resolver</groupId>\n        <artifactId>maven-resolver-transport-wagon</artifactId>\n        <version>${maven.resolver.version}</version>\n      </dependency>\n\n      <!-- Only for MessageBuilder/MessageUtils -->\n      <dependency>\n        <groupId>org.apache.maven.shared</groupId>\n        <artifactId>maven-shared-utils</artifactId>\n        <version>3.4.2</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-core</artifactId>\n        <version>${assertj.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.maven.daemon</groupId>\n        <artifactId>mvnd-native</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.daemon</groupId>\n        <artifactId>mvnd-logging</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.daemon</groupId>\n        <artifactId>mvnd-agent</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.daemon</groupId>\n        <artifactId>mvnd-client</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.daemon</groupId>\n        <artifactId>mvnd-common</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.daemon</groupId>\n        <artifactId>mvnd-dist</artifactId>\n        <version>${project.version}</version>\n        <type>pom</type>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.daemon</groupId>\n        <artifactId>mvnd-daemon</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.maven.daemon</groupId>\n        <artifactId>mvnd-helper-agent</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>io.takari.maven</groupId>\n        <artifactId>takari-smart-builder</artifactId>\n        <version>${takari-smart-builder.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.eclipse.sisu</groupId>\n        <artifactId>org.eclipse.sisu.inject</artifactId>\n        <version>${sisu.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.eclipse.sisu</groupId>\n        <artifactId>org.eclipse.sisu.plexus</artifactId>\n        <version>${sisu.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.inject</groupId>\n        <artifactId>guice</artifactId>\n        <version>6.0.0</version>\n        <classifier>classes</classifier>\n      </dependency>\n      <dependency>\n        <groupId>com.google.guava</groupId>\n        <artifactId>guava</artifactId>\n        <version>33.4.0-jre</version>\n        <scope>provided</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>org.jline</groupId>\n        <artifactId>jline</artifactId>\n        <version>${jline.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.jline</groupId>\n        <artifactId>jline-terminal</artifactId>\n        <version>${jline.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.jline</groupId>\n        <artifactId>jline-terminal-jansi</artifactId>\n        <version>${jline.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.jline</groupId>\n        <artifactId>jline-terminal-jni</artifactId>\n        <version>${jline.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>info.picocli</groupId>\n        <artifactId>picocli-codegen</artifactId>\n        <version>${picocli.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>log4j-over-slf4j</artifactId>\n        <version>${slf4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>jcl-over-slf4j</artifactId>\n        <version>${slf4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>jul-to-slf4j</artifactId>\n        <version>${slf4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.jboss.forge.roaster</groupId>\n        <artifactId>roaster-jdt</artifactId>\n        <version>${roaster.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.javassist</groupId>\n        <artifactId>javassist</artifactId>\n        <version>${javassist.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.codehaus.plexus</groupId>\n        <artifactId>plexus-interactivity-api</artifactId>\n        <version>${plexus-interactivity-api.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.testcontainers</groupId>\n        <artifactId>testcontainers</artifactId>\n        <version>${testcontainers.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.testcontainers</groupId>\n        <artifactId>junit-jupiter</artifactId>\n        <version>${testcontainers.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <build>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <groupId>org.apache.maven.daemon</groupId>\n          <artifactId>mvnd-build-maven-plugin</artifactId>\n          <version>${project.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>com.diffplug.spotless</groupId>\n          <artifactId>spotless-maven-plugin</artifactId>\n          <configuration>\n            <java>\n              <palantirJavaFormat />\n              <includes>\n                <include>src/main/java/**/*.java</include>\n                <include>src/main/java-fallback/**/*.java</include>\n                <include>src/main/java-mvnd/**/*.java</include>\n                <include>src/main/java11/**/*.java</include>\n                <include>src/main/java16/**/*.java</include>\n                <include>src/test/java/**/*.java</include>\n              </includes>\n            </java>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.rat</groupId>\n          <artifactId>apache-rat-plugin</artifactId>\n          <configuration>\n            <excludes combine.children=\"append\">\n              <exclude>**/*.png</exclude>\n              <exclude>**/*.json</exclude>\n              <exclude>**/.mvn/*</exclude>\n              <exclude>.cache/**</exclude>\n              <exclude>.mvn/**/*</exclude>\n              <exclude>*.adoc</exclude>\n              <exclude>*.md</exclude>\n              <exclude>src/test/projects/**/.classpath</exclude>\n              <exclude>src/test/projects/**/.project</exclude>\n              <exclude>src/test/projects/**/.settings/**</exclude>\n              <exclude>src/test/projects/**/target/**</exclude>\n              <exclude>**/META-INF/services/**</exclude>\n            </excludes>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>ca.vanzyl.provisio.maven.plugins</groupId>\n          <artifactId>provisio-maven-plugin</artifactId>\n          <version>${takari-provisio.version}</version>\n          <dependencies>\n            <dependency>\n              <groupId>com.thoughtworks.xstream</groupId>\n              <artifactId>xstream</artifactId>\n              <version>${xstream.version}</version>\n            </dependency>\n          </dependencies>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.gmavenplus</groupId>\n          <artifactId>gmavenplus-plugin</artifactId>\n          <version>${groovy-maven-plugin.version}</version>\n          <dependencies>\n            <dependency>\n              <groupId>org.apache.groovy</groupId>\n              <artifactId>groovy-all</artifactId>\n              <version>${groovy.version}</version>\n              <type>pom</type>\n            </dependency>\n          </dependencies>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>buildnumber-maven-plugin</artifactId>\n          <version>${buildnumber-maven-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.graalvm.buildtools</groupId>\n          <artifactId>native-maven-plugin</artifactId>\n          <version>${graalvm.plugin.version}</version>\n        </plugin>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-dependency-plugin</artifactId>\n          <version>3.8.1</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-javadoc-plugin</artifactId>\n          <version>3.11.2</version>\n          <configuration>\n            <release>${maven-dist.required.jdk}</release>\n            <detectJavaApiLink>false</detectJavaApiLink>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-plugin-plugin</artifactId>\n          <version>${maven.plugin-tools.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-release-plugin</artifactId>\n          <configuration>\n            <useReleaseProfile>false</useReleaseProfile>\n            <autoVersionSubmodules>true</autoVersionSubmodules>\n            <tagNameFormat>@{project.version}</tagNameFormat>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-site-plugin</artifactId>\n          <version>3.21.0</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-wrapper-plugin</artifactId>\n          <version>3.3.2</version>\n        </plugin>\n\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>build-helper-maven-plugin</artifactId>\n          <version>3.6.0</version>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>exec-maven-plugin</artifactId>\n          <version>3.5.0</version>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n\n    <plugins>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-checkstyle-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>checkstyle-check</id>\n            <phase>none</phase>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-enforcer-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>enforce-bytecode-version</id>\n            <goals>\n              <goal>enforce</goal>\n            </goals>\n            <configuration>\n              <rules>\n                <requireMavenVersion>\n                  <version>3.6.3</version>\n                </requireMavenVersion>\n                <requireJavaVersion>\n                  <version>[17,)</version>\n                </requireJavaVersion>\n                <enforceBytecodeVersion>\n                  <maxJdkVersion>${maven-dist.required.jdk}</maxJdkVersion>\n                  <ignoredScopes>\n                    <ignoredScope>test</ignoredScope>\n                    <!-- GraalVM SVM and deps are 17+, but are provided and used only for Native -->\n                    <ignoredScopes>provided</ignoredScopes>\n                  </ignoredScopes>\n                  <excludes>\n                    <exclude>org.jline:jline</exclude>\n                  </excludes>\n                </enforceBytecodeVersion>\n              </rules>\n              <fail>true</fail>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.gmavenplus</groupId>\n        <artifactId>gmavenplus-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>set-platform-properties</id>\n            <goals>\n              <goal>execute</goal>\n            </goals>\n            <phase>generate-sources</phase>\n            <configuration>\n              <scripts>\n                <script>// Naming conventions coined by GraalVM\n                        // https://github.com/graalvm/graalvm-ce-builds/releases/\n                        String osName = System.getProperty('os.name').toLowerCase(Locale.ROOT)\n                        if (osName.startsWith('windows')) {\n                            project.properties['os.detected.name'] = 'windows'\n                        } else if (osName.startsWith('linux')) {\n                            project.properties['os.detected.name'] = 'linux'\n                        } else if (osName.startsWith('osx') || osName.startsWith('mac os x')) {\n                            project.properties['os.detected.name'] = 'darwin'\n                        } else {\n                            project.properties['os.detected.name'] = osName\n                        }\n                        String osArch = System.getProperty('os.arch').toLowerCase(Locale.ROOT)\n                        if (osArch.equals('amd64') || osArch.equals('x86_64')) {\n                            project.properties['os.detected.arch'] = 'amd64'\n                        } else {\n                            project.properties['os.detected.arch'] = osArch\n                        }</script>\n              </scripts>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n  </build>\n\n  <profiles>\n    <profile>\n      <id>source-distribution</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-enforcer-plugin</artifactId>\n            <inherited>false</inherited>\n            <executions>\n              <execution>\n                <id>build-with-jdk11+</id>\n                <goals>\n                  <goal>enforce</goal>\n                </goals>\n                <phase>validate</phase>\n                <configuration>\n                  <rules>\n                    <requireJavaVersion>\n                      <version>[11,)</version>\n                    </requireJavaVersion>\n                  </rules>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-assembly-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>create-source-distribution</id>\n                <goals>\n                  <goal>single</goal>\n                </goals>\n                <phase>package</phase>\n                <configuration>\n                  <finalName>maven-mvnd-${project.version}</finalName>\n                  <descriptors>\n                    <descriptor>src/main/assembly/src.xml</descriptor>\n                  </descriptors>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n  </profiles>\n</project>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}