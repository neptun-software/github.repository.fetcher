{
  "metadata": {
    "timestamp": 1736708190769,
    "page": 668,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "glomadrian/Grav",
      "stars": 2720,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.5107421875,
          "content": "# Created by https://www.gitignore.io\n\n### Gradle ###\n.gradle\nbuild/\n\n# Ignore Gradle GUI config\ngradle-app.setting\n\n\n### Android ###\n# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Fhttp://www.ikea.com/es/es/catalog/availability/00198039/iles\n*.log\n\n\n### Intellij ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm\n\n*.iml\n\n## Directory-based project format:\n.idea/\n# if you remove the above rule, at least ignore the following:\n\n# User-specific stuff:\n# .idea/workspace.xml\n# .idea/tasks.xml\n# .idea/dictionaries\n\n# Sensitive or high-churn files:\n# .idea/dataSources.ids\n# .idea/dataSources.xml\n# .idea/sqlDataSources.xml\n# .idea/dynamic.xml\n# .idea/uiDesigner.xml\n\n# Gradle:\n# .idea/gradle.xml\n# .idea/libraries\n\n# Mongo Explorer plugin:\n# .idea/mongoSettings.xml\n\n## File-based project format:\n*.ipr\n*.iws\n\n## Plugin-specific files:\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\n\n\n### Java ###\n*.class\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.ear\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n*.hprof\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 12.8359375,
          "content": "# Grav\n[![Download](https://api.bintray.com/packages/glomadrian/maven/RoadRunner/images/download.svg) ](https://bintray.com/glomadrian/maven/Grav/_latestVersion)\n[![Hex.pm](https://img.shields.io/hexpm/l/plug.svg)](http://www.apache.org/licenses/LICENSE-2.0) [![Platform](https://img.shields.io/badge/platform-android-green.svg)](http://developer.android.com/index.html)\n\n<p align=\"center\">\n<img src=\"./art/grav.png \" alt=\"Drawing\" width=\"250\" />\n</br>\n</center>\n<p>\nGrav is a library for android which allow you to make multiple animations based\non points.\n<p/>\n\n<p align=\"center\">\n<img src=\"./art/wave.gif \" alt=\"Drawing\" width=\"200\" />\n<img src=\"./art/login.gif \" alt=\"Drawing\" width=\"200\" />\n<img src=\"./art/path.gif \" alt=\"Drawing\" width=\"200\" />\n<img src=\"./art/falcon.gif \" alt=\"Drawing\" width=\"200\" />\n<img src=\"./art/grav.gif \" alt=\"Drawing\" width=\"200\" />\n<img src=\"./art/robot.gif \" alt=\"Drawing\" width=\"200\" />\n<p/>\n\n# How to use it\n\nThe library is composed of generators, each generator takes care of one thing.\nComposing different generators you can obtain different results.\n\nThere are different kind of generators:\n\n - Point generator\n - Grav generator\n - Color generator\n - Animation generator\n\n\n## Point generator\nThe point generator is the class that creates the locations of the points that will be drawn using a Grav Generator.\n In order to use it you need to set the attribute:\n```java\napp:pointGenerator=\"classname\"\n```\nThe first thing you need is a Point generator, the are 3 generators available:\n\n### Regular point generator\n\nGenerate points based on a cell and a variance.\n```java\napp:pointGenerator=\"com.github.glomadrian.grav.generator.point.RegularPointGenerator\"\napp:regular_cell_size=\"200\"\napp:regular_variance=\"20\"\n```\n(Using in combination with GravBallGeneartor)\n\n<img src=\"./art/regular_generator.png \" alt=\"Drawing\" width=\"200\" />\n\n### Circular point generator\n\nGenerate points based on a cell and a variance in a circular shape.\n```java\napp:pointGenerator=\"com.github.glomadrian.grav.generator.point.CircularPointGenerator\"\napp:regular_cell_size=\"200\"\napp:regular_variance=\"200\"\n```\n\n(Using in combination with GravBallGeneartor)\n\n<img src=\"./art/circular_generator.png\" alt=\"Drawing\" width=\"200\" />\n\n### Percent point generator\nGenerate the points based on percent locations array.\n```java\napp:pointGenerator=\"com.github.glomadrian.grav.generator.point.PercentPointGenerator\"\napp:percent_points_array=\"@array/walla_points_percent_points\"\n```\nInside arrays.xml each pair of items represents a point in the view, which is defined by a width percent and a height percent.\n```java\n<integer-array name=\"sample_points_percent_points\">\n   <item>10</item>\n   <item>60</item>\n\n   <item>8</item>\n   <item>30</item>\n\n   <item>25</item>\n   <item>10</item>\n </integer-array>\n```\n(Using in combination with GravBallGeneartor)\n\n<img src=\"./art/percent_generator.png \" alt=\"Drawing\" width=\"200\" />\n\n## Grav Generator\n\nGrav generator is the piece in charge of draw every point previously generated.\nTo use you need to set the attribute:\n```java\napp:gravGenerator=\"classname\"\n```\nThere are two Grav Generator available\n\n\n### Ball generator\n\nDraws a ball.\n\nBall sizes can be generated randomly within a range using the following attributes:\n\n```java\napp:gravGenerator=\"com.github.glomadrian.grav.generator.grav.BallGenerator\"\napp:ball_from_size=\"3dp\"\napp:ball_to_size=\"16dp\"\n```\n\n<img src=\"./art/ball_size_range.png \" alt=\"Drawing\" width=\"200\" />\n\n\n### Rectangle generator\n\nDraws rectangles.\n\nSize of the rectangles can be changed using the following attributes:\n\n```java\napp:gravGenerator=\"com.github.glomadrian.grav.generator.grav.RectangleGenerator\"\napp:rectangle_width=\"15dp\"\napp:rectangle_height=\"10dp\"\n```\n<img src=\"./art/rectangle_grav.png \" alt=\"Drawing\" width=\"200\" />\n\n\n## Color generator\nDecides how the Grav is painted.\n\nTo use you need to set the attribute:\n```java\nappcolorGenerator=\"classname\"\n```\nThere are two Color Generator available.\n\n### Single color generator\n\nPaint in one single color.\n\n```java\napp:colorGenerator=\"com.github.glomadrian.grav.generator.paint.SingleColorGenerator\"\napp:single_color=\"@color/colorPrimary\"\n```\n### Array color generator\n\nPaint using array of colors\n\n```java\napp:colorGenerator=\"com.github.glomadrian.grav.generator.paint.ArrayColorGenerator\"\napp:array_colors=\"@array/Spectral\"\n```\n\n<img src=\"./art/ball_color.png \" alt=\"Drawing\" width=\"200\" />\n\n\n## Animation generator\nThe animation generator takes care of the position, size and properties animation. The animation generator can be one or an array of animation generators.\n\n### Single animation generator\n\nTo use you need to set the attribute:\n\n```java\napp:animationGenerator=\"classname\"\n```\n\n### Array animation generator\n\nTo use you need to set the attribute:\n\n```java\napp:animationGenerators=\"@array/array_reference\"\n\n<string-array name=\"array_reference\">\n  <item>com.github.glomadrian.grav.generator.animation.PathAnimator</item>\n  <item>com.github.glomadrian.grav.generator.animation.BallSizeAnimator</item>\n</string-array>\n```\n\n### Shake animator\n\nMoves the Grav within a range of values.\n\n```java\napp:animationGenerator=\" com.github.glomadrian.grav.generator.animation.ShakeAnimator\"\n//Min animation duration\napp:shake_min_duration=\"1000\"\n//Max animation duration\napp:shake_max_duration=\"3000\"\n//Direction horizontal or vertical\napp:shake_direction=\"horizontal\"\n//The size of the movement\napp:shake_variance=\"15dp\"\n```\n\n<img src=\"./art/shake_anim.gif \" alt=\"Drawing\" width=\"200\" />\n\n### Side to side animator\n\nAniamtes the translation of the Grav to a different side.\n\n```java\napp:animationGenerator=\"com.github.glomadrian.grav.generator.animation.SideToSideAnimator\"\n//Min animation duration\napp:side_to_side_min_duration=\"1000\"\n//Max animation duration\napp:side_to_side_max_duration=\"3000\"\n//Direction leftToRight | rightToLeft | upToDown | downToUp\napp:side_to_side_direction=\"leftToRight\"\n```\n\nAlso you can use a interpolator.\n\n```java\nside_to_side_interpolator=\"interpolator class\"\n```\n\n<img src=\"./art/side_to_side.gif \" alt=\"Drawing\" width=\"200\" />\n\n### Alpha animator\n\nApplies an alpha animation to a Grav.\n\n```java\napp:animationGenerator=\"com.github.glomadrian.grav.generator.animation.AlphaAnimator\"\n//Min animation duration\napp:alpha_min_duration=\"1000\"\n//Max animation duration\napp:alpha_max_duration=\"3000\"\n//From and to in a range (0-255)\napp:alpha_from=\"0\"\napp:alpha_to=\"255\"\n```\n\n### Ball size animator\n\nAnimates the size of the ball.\n\n```java\napp:animationGenerator=\"com.github.glomadrian.grav.generator.animation.BallSizeAnimator\"\n//Min animation duration\napp:ball_size_min_duration=\"1000\"\n//Max animation duration\napp:ball_size_max_duration=\"3000\"\napp:ball_size_from_size=\"3dp\"\napp:ball_size_to_size=\"8dp\"\n```\n<img src=\"./art/size_to_size.gif \" alt=\"Drawing\" width=\"200\" />\n\n### Path animator\n\nThe path animator moves the grav following a path.\n\n#### The path (sample)\n```java\n<string name=\"circle\">\nM527.023,71.8233 C780.213,71.8233,985.464,277.075,985.464,530.265\nC985.464,783.455,780.213,988.707,527.023,988.707\nC273.832,988.707,68.5809,783.455,68.5809,530.265\nC68.5809,277.075,273.832,71.8233,527.023,71.8233 Z\n</string>\n<integer name=\"circle_original_width\">1062</integer>\n<integer name=\"circle_original_height\">1062</integer>\n```\n\n#### Using path animator\n```java\napp:animationGenerator=\"com.github.glomadrian.grav.generator.animation.PathAnimator\"\n//Variance is the random margin given to the grav\napp:path_variance_from=\"1dp\"\napp:path_variance_to=\"20dp\"\n//Min animation duration\napp:path_min_duration=\"2000\"\n//Max animation duration\napp:path_max_duration=\"2300\"\n//String that define the path\napp:path=\"@string/circle\"\napp:path_original_width=\"@integer/circle_original_width\"\napp:path_original_height=\"@integer/circle_original_height\"\n```\n<img src=\"./art/path_animator.gif \" alt=\"Drawing\" width=\"200\" />\n\n\n## XML Samples\n\nThe full samples can be found in the demo app source code.\n\n<img src=\"./art/wave.gif \" alt=\"Drawing\" width=\"250\" />\n\n```java\n<com.github.glomadrian.grav.GravView\n     android:id=\"@+id/grav\"\n     android:layout_centerInParent=\"true\"\n     android:layout_width=\"400dp\"\n     android:layout_height=\"400dp\"\n     app:colorGenerator=\"com.github.glomadrian.grav.generator.paint.ArrayColorGenerator\"\n     app:array_colors=\"@array/red\"\n     app:pointGenerator=\"com.github.glomadrian.grav.generator.point.RegularPointGenerator\"\n     app:regular_cell_size=\"150\"\n     app:regular_variance=\"100\"\n     app:gravGenerator=\"com.github.glomadrian.grav.generator.grav.BallGenerator\"\n     app:ball_size_from_size=\"3dp\"\n     app:ball_size_to_size=\"6dp\"\n     app:animationGenerators=\"@array/path\"\n     app:path_variance_from=\"-10dp\"\n     app:path_variance_to=\"12dp\"\n     app:path=\"@string/circle\"\n     app:path_original_width=\"@integer/circle_original_width\"\n     app:path_original_height=\"@integer/circle_original_height\"\n     app:path_min_duration=\"5000\"\n     app:path_max_duration=\"6000\"\n     />\n```\n\n\n<img src=\"./art/login.gif \" alt=\"Drawing\" width=\"250\" />\n\n```java\n<com.github.glomadrian.grav.GravView\n     android:id=\"@+id/grav\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     android:layout_centerInParent=\"true\"\n     app:colorGenerator=\"com.github.glomadrian.grav.generator.paint.ArrayColorGenerator\"\n     app:array_colors=\"@array/bubble\"\n     app:pointGenerator=\"com.github.glomadrian.grav.generator.point.RegularPointGenerator\"\n     app:regular_cell_size=\"300\"\n     app:regular_variance=\"200\"\n     app:gravGenerator=\"com.github.glomadrian.grav.generator.grav.BallGenerator\"\n     app:ball_from_size=\"10dp\"\n     app:ball_to_size=\"20dp\"\n     app:animationGenerators=\"@array/BubbleAnimations\"\n     app:side_to_side_min_duration=\"10000\"\n     app:side_to_side_max_duration=\"10000\"\n     app:side_to_side_direction=\"leftToRight\"\n     app:shake_direction=\"vertical\"\n     app:shake_min_duration=\"10000\"\n     app:shake_max_duration=\"20000\"\n     app:shake_variance=\"500dp\"\n    />\n ```\n\n <img src=\"./art/falcon.gif \" alt=\"Drawing\" width=\"200\" />\n\n ```java\n <com.github.glomadrian.grav.GravView\n       android:id=\"@+id/grav\"\n       android:layout_width=\"match_parent\"\n       android:layout_height=\"match_parent\"\n       app:colorGenerator=\"com.github.glomadrian.grav.generator.paint.ArrayColorGenerator\"\n       app:array_colors=\"@array/falcon\"\n       app:pointGenerator=\"com.github.glomadrian.grav.generator.point.RegularPointGenerator\"\n       app:regular_cell_size=\"100\"\n       app:regular_variance=\"200\"\n       app:gravGenerator=\"com.github.glomadrian.grav.generator.grav.RectangleGenerator\"\n       app:rectangle_width=\"15dp\"\n       app:rectangle_height=\"2dp\"\n       app:animationGenerators=\"@array/FalconAnimations\"\n       app:side_to_side_min_duration=\"400\"\n       app:side_to_side_max_duration=\"800\"\n       app:side_to_side_direction=\"rightToLeft\"\n       app:shake_variance=\"5dp\"\n       app:shake_direction=\"vertical\"\n       />\n```\n\n<img src=\"./art/robot.gif \" alt=\"Drawing\" width=\"200\" />\n\n```java\n<com.github.glomadrian.grav.GravView\n    android:id=\"@+id/grav\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    app:colorGenerator=\"com.github.glomadrian.grav.generator.paint.OneColorGenerator\"\n    app:single_color=\"#FFF\"\n    app:pointGenerator=\"com.github.glomadrian.grav.generator.point.PercentPointGenerator\"\n    app:ball_from_size=\"2dp\"\n    app:ball_to_size=\"5dp\"\n    app:animationGenerators=\"@array/WallaIcon\"\n    app:alpha_from=\"100\"\n    app:alpha_to=\"200\"\n    app:alpha_min_duration=\"1600\"\n    app:alpha_max_duration=\"3000\"\n    app:shake_direction=\"vertical\"\n    app:shake_variance=\"3dp\"\n    app:shake_min_duration=\"1100\"\n    app:shake_max_duration=\"3500\"\n    app:percent_points_array=\"@array/walla_points_percent_points\"\n    app:gravGenerator=\"com.github.glomadrian.grav.generator.grav.BallGenerator\"\n    />\n```\n\n\n## Attributions\n* Thanks to [@manolovn](https://github.com/manolovn) for [Trianglify](https://github.com/manolovn/trianglify) where I obtained the point generators.\n* Thanks to [@jlmd](https://github.com/jlmd) for the corrections made to this Readme\n\n\nFor Gradle\n---------------------\n\nAdd repository\n\n```groovy\nrepositories {\n  maven {\n    url \"http://dl.bintray.com/glomadrian/maven\"\n  }\n}\n```\nAdd dependency\n```groovy\ncompile 'com.github.glomadrian:Grav:1.1'\n```\n\n  Developed By\n  ------------\n  Adrián García Lomas - <glomadrian@gmail.com>\n  * [Twitter](https://twitter.com/glomadrian)\n  * [LinkedIn](https://es.linkedin.com/in/glomadrian )\n\n  License\n  -------\n\n      Copyright 2017 Adrián García Lomas\n\n      Licensed under the Apache License, Version 2.0 (the \"License\");\n      you may not use this file except in compliance with the License.\n      You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n      Unless required by applicable law or agreed to in writing, software\n      distributed under the License is distributed on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n      See the License for the specific language governing permissions and\n      limitations under the License.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.6279296875,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n  repositories {\n    jcenter()\n  }\n  dependencies {\n    classpath 'com.android.tools.build:gradle:2.3.1'\n    classpath 'com.github.dcendents:android-maven-plugin:1.2'\n    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'\n    classpath 'com.novoda:bintray-release:0.3.4'\n\n    // NOTE: Do not place your application dependencies here; they belong\n    // in the individual module build.gradle files\n  }\n}\n\n\nallprojects {\n  repositories {\n    jcenter()\n  }\n}\n\ntask clean(type: Delete) {\n  delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.712890625,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx1536m\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "grav",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0234375,
          "content": "include ':app', ':grav'\n"
        }
      ]
    }
  ]
}