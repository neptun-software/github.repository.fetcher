{
  "metadata": {
    "timestamp": 1736608998850,
    "page": 217,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "dromara/dynamic-tp",
      "stars": 3985,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitee",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5107421875,
          "content": "HELP.md\ntarget/\n!.mvn/wrapper/maven-wrapper.jar\n!**/src/main/**/target/\n!**/src/test/**/target/\n.flattened-pom.xml\npolaris/\n\n### STS ###\n.apt_generated\n.classpath\n.factorypath\n.project\n.settings\n.springBeans\n.sts4-cache\n\n### IntelliJ IDEA ###\n.idea\n*.iws\n*.iml\n*.ipr\n\n### NetBeans ###\n/nbproject/private/\n/nbbuild/\n/dist/\n/nbdist/\n/.nb-gradle/\nbuild/\n!**/src/main/**/build/\n!**/src/test/**/build/\n\n### VS Code ###\n.vscode/\n\ndocs/node_modules/\ndocs/docs/.vuepress/dist/\ndocs/docs/.vuepress/.cache/\ndocs/docs/.vuepress/.temp/"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.693359375,
          "content": "<p align=\"center\">\n\t<img alt=\"logo\" src=\"resources/img/logo.png\" width=\"50%\">\n</p>\n<p align=\"center\">\n\t<strong>基于配置中心的轻量级动态线程池，内置监控告警功能，集成常用中间件线程池管理，可通过SPI自定义扩展实现</strong>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://gitee.com/dromara/dynamic-tp\"><img src=\"https://gitee.com/dromara/dynamic-tp/badge/star.svg\"></a>\n  <a href=\"https://gitee.com/dromara/dynamic-tp/members\"><img src=\"https://gitee.com/dromara/dynamic-tp/badge/fork.svg\"></a>\n  <a href=\"https://github.com/dromara/dynamic-tp\"><img src=\"https://img.shields.io/github/stars/dromara/dynamic-tp?style=flat-square&logo=github\"></a>\n  <a href=\"https://github.com/dromara/dynamic-tp/network/members\"><img src=\"https://img.shields.io/github/forks/dromara/dynamic-tp?style=flat-square&logo=GitHub\"></a>\n  <a href='https://gitcode.com/dromara/dynamic-tp'><img src='https://gitcode.com/dromara/dynamic-tp/star/badge.svg' alt='fork'></a>\n  <a href=\"https://github.com/dromara/dynamic-tp/blob/master/LICENSE\"><img src=\"https://img.shields.io/github/license/dromara/dynamic-tp.svg?style=flat-square\"></a>\n</p>\n\n<p align=\"center\">\n    官网： <a href=\"https://dynamictp.cn\">https://dynamictp.cn</a> 🔥\n</p>\n\n---\n\n## 痛点\n\n使用线程池 ThreadPoolExecutor 过程中你是否有以下痛点呢？\n\n> 1. 代码中创建了一个 ThreadPoolExecutor，但是不知道那几个核心参数设置多少比较合适\n>\n> 2. 凭经验设置参数值，上线后发现需要调整，改代码重新发布服务，非常麻烦\n>\n> 3. 线程池相对开发人员来说是个黑盒，运行情况不能及时感知到，直到出现问题\n\n如果有以上痛点，动态可监控线程池框架（**DynamicTp**）或许能帮助到你。\n\n如果看过 ThreadPoolExecutor 的源码，大概可以知道它对核心参数基本都有提供 set / get 方法以及一些扩展方法，可以在运行时动态修改、获取相应的值，这些方法有：\n\n```java\npublic void setCorePoolSize(int corePoolSize);\npublic void setMaximumPoolSize(int maximumPoolSize);\npublic void setKeepAliveTime(long time, TimeUnit unit);\npublic void setThreadFactory(ThreadFactory threadFactory);\npublic void setRejectedExecutionHandler(RejectedExecutionHandler handler);\npublic void allowCoreThreadTimeOut(boolean value);\n\npublic int getCorePoolSize();\npublic int getMaximumPoolSize();\npublic long getKeepAliveTime(TimeUnit unit);\npublic BlockingQueue<Runnable> getQueue();\npublic RejectedExecutionHandler getRejectedExecutionHandler();\npublic boolean allowsCoreThreadTimeOut();\n\nprotected void beforeExecute(Thread t, Runnable r);\nprotected void afterExecute(Runnable r, Throwable t);\n```\n\n现在大多数的互联网项目都会采用微服务化部署，有一套自己的服务治理体系，微服务组件中的分布式配置中心\n扮演的就是动态修改配置，实时生效的角色。\n\n那么我们是否可以结合配置中心来做运行时线程池参数的动态调整呢？\n\n答案是肯定的，而且配置中心相对都是高可用的，使用它也不用过于担心配置推送失败这类问题，而且也能减少研发动态线程池组件本身的难度和接入的工作量。\n\n**综上，可以总结出以下的背景**\n\n- **广泛性**：在 Java 开发中，想要提高系统性能，线程池已经是一个 90% 以上开发人员都会选择使用的基础工具\n\n- **不确定性**：项目中可能存在很多线程池，既有 IO 密集型的，也有 CPU 密集型的，但线程池的核心参数并不好确定，需要有套机制在运行过程中动态去调整参数\n\n- **无感知性**：线程池运行过程中的各项指标一般感知不到，需要有套监控报警机制在事前、事中就能让开发人员感知到线程池的运行状况，及时处理\n\n- **高可用性**：配置变更需要及时推送到客户端，需要有高可用的配置管理推送服务，配置中心是现在大多数互联网系统都会使用的组件，与之结合可以极大提高系统可用性\n\n---\n\n## 功能特性\n\n基于以上背景分析，我们对线程池 ThreadPoolExecutor 做一些扩展增强，主要实现以下目标\n\n> 1. 实现对运行中线程池参数的动态修改，实时生效\n>\n> 2. 实时监控线程池的运行状态，触发设置的报警策略时报警，报警信息推送办公平台\n>\n> 3. 定时采集线程池指标数据，配合像 Grafana 这种可视化监控平台做大盘监控\n>\n> 4. 集成常用三方中间件内部线程池管理\n\n**经过多个版本的迭代，目前最新版本 v1.1.9.1 具有以下特性** ✅\n\n- **代码零侵入**：我们改变了线程池以往的使用姿势，所有配置均放在配置中心，服务启动时会从配置中心拉取配置生成线程池对象放到 Spring 容器中，使用时直接从 Spring 容器中获取，对业务代码零侵入\n\n- **轻量简单**：使用起来极其简单，引入相应依赖，接入只需简单 4 步就可完成，顺利 3 分钟搞定，相当丝滑\n\n- **通知告警**：提供多种通知告警维度（配置变更通知、活性报警、队列容量阈值报警、拒绝触发报警、任务执行或等待超时报警），触发配置阈值实时推送告警信息，已支持企微、钉钉、飞书、邮件、云之家报警，同时提供 SPI 接口可自定义扩展实现\n\n- **运行监控**：定时采集线程池指标数据（20 多种指标，包含线程池维度、队列维度、任务维度、tps、tpxx 等），支持通过 MicroMeter、JsonLog、JMX 三种方式定时获取，也可以通过 SpringBoot Endpoint 端点实时获取最新指标数据，同时提供 SPI 接口可自定义扩展实现\n\n- **任务增强**：提供任务包装功能（比 Spring 线程池任务包装更强大），实现 TaskWrapper 接口即可，如 MdcTaskWrapper、TtlTaskWrapper、SwTraceTaskWrapper、OpenTelemetryWrapper，可以支持线程池上下文信息传递\n\n- **多配置中心支持**：支持多种主流配置中心，包括 Nacos、Apollo、Zookeeper、Consul、Etcd、Polaris、ServiceComb，同时也提供 SPI 接口可自定义扩展实现\n\n- **中间件线程池管理**：集成管理常用第三方组件的线程池，已集成 Tomcat、Jetty、Undertow、Dubbo、RocketMq、Hystrix、Grpc、Motan、Okhttp3、Brpc、Tars、SofaRpc、RabbitMq、Liteflow 等组件的线程池管理（动态调参、监控、报警）\n\n- **多模式**：提供了增强线程池 DtpExecutor，IO 密集型场景使用的线程池 EagerDtpExecutor，调度线程池 ScheduledDtpExecutor，有序线程池 OrderedDtpExecutor，可以根据业务场景选择合适的线程池\n\n- **兼容性**：JUC 普通线程池和 Spring 中的 ThreadPoolTaskExecutor 也可以被框架管理，只需@Bean 定义时加 @DynamicTp 注解即可\n\n- **可靠性**：依靠 Spring 生命周期管理，可以做到优雅关闭线程池，在 Spring 容器关闭前尽可能多的处理队列中的任务\n\n- **高可扩展**：框架核心功能都提供 SPI 接口供用户自定义个性化实现（配置中心、配置文件解析、通知告警、监控数据采集、任务包装、拒绝策略等等）\n\n- **线上大规模应用**：参考[美团线程池实践](https://tech.meituan.com/2020/04/02/java-pooling-pratice-in-meituan.html)，美团内部已经有该理论成熟的应用经验\n\n---\n\n## 架构设计\n\n**框架功能大体可以分为以下几个模块**\n\n> 1. 配置变更监听模块\n>\n> 2. 线程池管理模块\n>\n> 3. 监控模块\n>\n> 4. 通知告警模块\n>\n> 5. 三方组件线程池管理模块\n\n![技术架构](resources/img/arch.svg)\n\n详细查看官网文档，[架构设计](https://dynamictp.cn/guide/introduction/architecture.html)\n\n---\n\n## 接入步骤\n\n> 1. 引入相应配置中心的依赖，具体见官网文档\n>\n> 2. 配置中心配置线程池实例，配置文件见官网文档\n>\n> 3. 启动类加 @EnableDynamicTp 注解\n>\n> 4. 使用 @Resource 或 @Autowired 进行依赖注入，或通过 DtpRegistry.getExecutor(\"name\") 获取\n>\n> 5. 通过以上 4 步就可以使用了，是不是感觉超级简单呀\n\n更详细使用示例请参考 `example` 工程及[官网文档](https://dynamictp.cn/guide/use/quick-start.html)\n\n---\n\n## 通知报警\n\n- 触发报警阈值会推送相应报警消息（活性、容量、拒绝、任务等待超时、任务执行超时），且会高亮显示相应字段\n\n<img src=\"resources/img/alarm.jpg\" alt=\"告警\" width=\"50%\" />\n\n- 配置变更会推送通知消息，且会高亮变更的字段\n\n<img src=\"resources/img/notice.jpg\" alt=\"变更通知\" width=\"50%\" />\n\n更多见官网文档，[通知报警](https://dynamictp.cn/guide/notice/alarm.html)\n\n---\n\n## 监控\n\n![监控数据1](resources/img/monitor1.jpg)\n![监控数据2](resources/img/monitor2.jpg)\n![监控数据3](resources/img/monitor3.jpg)\n\n目前框架提供了四种监控数据采集方式，通过 collectorTypes 属性配置监控指标采集类型，默认 Micrometer\n\n> 1. Logging：线程池指标数据会以 Json 格式输出到指定的日志文件里\n>\n> 2. Internal_logging：线程池指标数据会以 Json 格式输出到项目日志文件里\n>\n> 3. Micrometer：采用监控门面，通过引入相关 Micrometer 依赖采集到相应的存储平台里（如 Prometheus，InfluxDb...）\n>\n> 4. Endpoint：暴露 Endpoint 端点，可以通过 http 方式实时获取指标数据\n\n更多见官网文档，[监控](https://dynamictp.cn/guide/monitor/collect_types.html)\n\n---\n\n## Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=dromara/dynamic-tp&type=Date)](https://star-history.com/#dromara/dynamic-tp&Date)\n\n---\n\n## 代码托管\n\n- github: https://github.com/dromara/dynamic-tp\n- gitee: https://gitee.com/dromara/dynamic-tp\n- gitcode: https://gitcode.com/dromara/dynamic-tp\n\n---\n\n## 联系我\n\n看到这儿，**请给项目一个 star**，你的支持是我们前进的动力！\n\n使用过程中有任何问题，或者对项目有什么想法或者建议，可以加入社群，跟 1500+ 群友一起交流讨论。\n\n微信群已满 200 人，可以关注微信公众号，加我个人微信拉群（备注：dynamic-tp）。\n\n![](resources/img/contact.jpg)\n\n为了项目更好的发展，请在此进行登记，[使用登记](https://dynamictp.cn/guide/other/users.html)\n\n---\n\n## 友情链接\n\n- [HertzBeat](https://github.com/dromara/hertzbeat) : 易用友好的实时监控告警系统，无需Agent，强大自定义监控能力.\n\n---\n\n## 特别赞助\n\n**JNPF低代码开发平台**\n\n<a href=\"https://www.jnpfsoft.com/?from=dynamic-tp\"><img src=\"/resources/img/jnpfsoft.png\"></a>\n\n---\n## 鸣谢\n\n感谢 JetBrains 对开源项目的支持\n\n<a href=\"https://jb.gg/OpenSourceSupport\">\n  <img src=\"https://user-images.githubusercontent.com/8643542/160519107-199319dc-e1cf-4079-94b7-01b6b8d23aa6.png\" align=\"left\" height=\"150\" width=\"150\" alt=\"JetBrains\">\n</a>\n"
        },
        {
          "name": "adapter",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "dependencies",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "extension",
          "type": "tree",
          "content": null
        },
        {
          "name": "jvmti",
          "type": "tree",
          "content": null
        },
        {
          "name": "logging",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 12.65234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.dromara.dynamictp</groupId>\n    <artifactId>dynamic-tp-all</artifactId>\n    <version>${revision}</version>\n    <packaging>pom</packaging>\n\n    <name>DynamicTp Project</name>\n    <description>🔥🔥🔥轻量级动态线程池，内置监控告警功能，基于主流配置中心（已支持Nacos、Apollo、Zookeeper、Consul、Etcd、Polaris，可通过SPI自定义实现）</description>\n    <url>https://github.com/yanhom1314/dynamic-tp</url>\n\n    <properties>\n        <revision>1.1.9.1</revision>\n\n        <maven.compiler.source>8</maven.compiler.source>\n        <maven.compiler.target>8</maven.compiler.target>\n\n        <spring-boot.version>2.7.18</spring-boot.version>\n        <spring-cloud.version>2021.0.8</spring-cloud.version>\n\n        <guava.version>31.1-jre</guava.version>\n        <commons-collections4.version>4.4</commons-collections4.version>\n\n        <maven-flatten.version>1.3.0</maven-flatten.version>\n        <maven-checkstyle-plugin.verion>3.1.0</maven-checkstyle-plugin.verion>\n        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>\n        <maven-source-plugin.version>2.4</maven-source-plugin.version>\n        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>\n        <maven-gpg-plugin.version>1.6</maven-gpg-plugin.version>\n        <nexus-staging-maven-plugin.version>1.6.7</nexus-staging-maven-plugin.version>\n        <maven-site-plugin.version>3.7.1</maven-site-plugin.version>\n        <maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>\n\n        <cglib.version>3.3.0</cglib.version>\n    </properties>\n\n    <modules>\n        <module>adapter</module>\n        <module>core</module>\n        <module>common</module>\n        <module>starter</module>\n        <module>logging</module>\n        <module>example</module>\n        <module>extension</module>\n        <module>jvmti</module>\n        <module>test</module>\n        <module>dependencies</module>\n        <module>spring</module>\n    </modules>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>commons-codec</groupId>\n            <artifactId>commons-codec</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.google.guava</groupId>\n            <artifactId>guava</artifactId>\n            <version>${guava.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-collections4</artifactId>\n            <version>${commons-collections4.version}</version>\n        </dependency>\n    </dependencies>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-dependencies</artifactId>\n                <version>${spring-boot.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.springframework.cloud</groupId>\n                <artifactId>spring-cloud-dependencies</artifactId>\n                <version>${spring-cloud.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.dromara.dynamictp</groupId>\n                <artifactId>dynamic-tp-dependencies</artifactId>\n                <version>${project.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>cglib</groupId>\n                <artifactId>cglib</artifactId>\n                <version>${cglib.version}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <licenses>\n        <license>\n            <name>The Apache Software License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <scm>\n        <url>https://github.com/yanhom1314/dynamic-tp/tree/master</url>\n        <connection>scm:git:git://github.com/yanhom1314/dynamic-tp.git</connection>\n        <developerConnection>scm:git:ssh://github.com:yanhom1314/dynamic-tp.git</developerConnection>\n        <tag>HEAD</tag>\n    </scm>\n\n    <developers>\n        <developer>\n            <id>yanhom</id>\n            <name>yanhom</name>\n            <email>yanhom1314@gmail.com</email>\n            <url>https://github.com/yanhom1314</url>\n        </developer>\n    </developers>\n\n    <issueManagement>\n        <system>Github Issue</system>\n        <url>https://github.com/yanhom1314/dynamic-tp/issues</url>\n    </issueManagement>\n\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <!-- 公共checkstyle标准配置，可以在子模块中覆盖，修改自定义选项 -->\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-checkstyle-plugin</artifactId>\n                    <version>${maven-checkstyle-plugin.verion}</version>\n                    <configuration>\n                        <configLocation>.github/checkstyle/checkstyle.xml</configLocation>\n                        <includeTestSourceDirectory>false</includeTestSourceDirectory>\n                        <consoleOutput>true</consoleOutput>\n                        <encoding>UTF-8</encoding>\n                        <skip>false</skip>\n                        <!--这里是说当前这个配置是什么错误级别。如果配置的是error，那么扫描到不符合条件的，就是打印error。checkstyle里允许的错误级别有error, warning, info. -->\n                        <violationSeverity>error</violationSeverity>\n                        <!-- 是否打断命令执行，错误的时候会停止。否则，错误会生成报告，但不会阻止命令执行。 -->\n                        <failsOnError>false</failsOnError>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <id>validate</id>\n                            <phase>validate</phase>\n                            <goals>\n                                <goal>checkstyle</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>${maven-compiler-plugin.version}</version>\n                <configuration>\n                    <encoding>UTF-8</encoding>\n                    <source>${maven.compiler.source}</source>\n                    <target>${maven.compiler.target}</target>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>${maven-source-plugin.version}</version>\n                <configuration>\n                    <attach>true</attach>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>jar-no-fork</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>${maven-javadoc-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>package</id>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <configuration>\n                    <archive>\n                        <manifestEntries>\n                            <Implementation-Title>${project.artifactId}</Implementation-Title>\n                            <Implementation-Version>${project.version}</Implementation-Version>\n                            <Build-Time>${maven.build.timestamp}</Build-Time>\n                            <Built-By>yanhom</Built-By>\n                        </manifestEntries>\n                    </archive>\n                </configuration>\n            </plugin>\n\n            <!-- Gpg Signature -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-gpg-plugin</artifactId>\n                <version>1.6</version>\n                <executions>\n                    <execution>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>sign</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.sonatype.plugins</groupId>\n                <artifactId>nexus-staging-maven-plugin</artifactId>\n                <version>1.6.7</version>\n                <extensions>true</extensions>\n                <configuration>\n                    <serverId>ossrh</serverId>\n                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                    <autoReleaseAfterClose>false</autoReleaseAfterClose>\n                </configuration>\n            </plugin>\n\n            <!--所有子模块都要执行的plugin-->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-site-plugin</artifactId>\n                <version>${maven-site-plugin.version}</version>\n            </plugin>\n\n            <!-- flatten -->\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>flatten-maven-plugin</artifactId>\n                <version>${maven-flatten.version}</version>\n                <configuration>\n                    <updatePomFile>true</updatePomFile>\n                    <flattenMode>resolveCiFriendliesOnly</flattenMode>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>flatten</id>\n                        <phase>process-resources</phase>\n                        <goals>\n                            <goal>flatten</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>flatten.clean</id>\n                        <phase>clean</phase>\n                        <goals>\n                            <goal>clean</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <reporting>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <version>${maven-checkstyle-plugin.version}</version>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>checkstyle</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n        </plugins>\n    </reporting>\n</project>\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring",
          "type": "tree",
          "content": null
        },
        {
          "name": "starter",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}