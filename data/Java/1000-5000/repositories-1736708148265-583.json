{
  "metadata": {
    "timestamp": 1736708148265,
    "page": 583,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "AltBeacon/android-beacon-library",
      "stars": 2853,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.548828125,
          "content": "# built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated files\nbin/\ngen/\ndoc/\nbuild/\nsrc/main/gen\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Intellij project files\n*.iml\n*.ipr\n*.iws\n.idea/\n\n# Per https://intellij-support.jetbrains.com/entries/23393067\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/gradle.xml\n.idea/libraries/*.xml\n.idea/dictionaries/*.xml\n\n# Other\n.gradle\n/local.properties\n/.idea/workspace.xml\n.DS_Store\n.directory\n.metadata\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 21.724609375,
          "content": "### 2.21.0-beta4 / 2024-11-16\n\n- Eliminate thrashing of foreground/background mode and ScanJobs during navigation (#1195, VolodaUa)\n- Improved support for beacon layouts based on 128-bit Service UUIDs, (#1212, David G. Young)\n\n### 2.21.0-beta3 / 2024-11-05\n\n- Fix non-Samsung screen off scan failure (#1208, David G. Young)\n- Check for region exits on requestStateforRegion with IntentScanStrategy (#1209, David G. Young) \n\n### 2.21.0-beta2 / 2024-10-21\n\n- Fix scan dropouts after 10 minutes (#1207, David G. Young)\n\n### 2.21.0-beta1 / 2024-09-01 \n\n- Add new Settings API (#1177, David G. Young) \n\n### 2.20.7 / 2024-10-09\n\n- Fix intermittent screen off detection failures on Andorid 14 (#1205, David G. Young)\n\n### 2.20.6 / 2024-04-27\n\n- Fix distance calculator overwrite, (#1191, David G. Young)\n- Fix bad model distance config url, (#1190, David G. Young)\n\n### 2.20.5 / 2024-04-05\n\n- Fix crashes creating default RSSI filter. (#1181, Alexandre Assouad)\n\n### 2.20.4 / 2024-02-01\n\n- Fix broken screen-off scans on Android 14, (#1176, David G. Young) \n\n### 2.20.3 / 2023-11-10\n\n- Backward compatibility - add 'fromScanData' to AltBeaconParser and BeaconParser, (#1153, Andrew Benson)\n\n### 2.20.2 / 2023-10-27\n\n- Fix crash in BroadcastReceiver (#1167, David G. Young)\n\n### 2.20.1 / 2023-10-20\n\n- Additional Android 14 Improvements (#1162, Stephen Ruda)\n- Fix Android 14 foreground service start after BOOT_COMPLETED. (#1165, David G. Young)\n\n### 2.20 / 2023-10-1\n\n- Updates to support Android 14 foreground services. (#1155, David G. Young)\n\n### 2.19.6 / 2023-07-02\n\n- Fix scans being stuck on when Bluetooth turned off in quick settings on\n  Android 9+.  (#1149, David G. Young)\n- Upgrade build tools to use Gradle 8, JDK 17 (#1150, David G. Young)\n- Fix BluetoothMedic crashes on Android 12+ when permissions are missing\n  and depracate medic power cycling no longer working on Android 13\n  (#1121, David G. Young)\n \n### 2.19.5 / 2022-12-28\n\n- Expose raw bytes of beacon and accept AD type 0x07 (#1098, David G. Young)\n- Fix Crash on Android 13 beta (#1095, David G. Young)\n- Handle Foreground Service Start Failures in Android 12 (#1090, David G. Young)\n- Fix region persistence usability problems (#1089, David G. Young)\n- Fix bugs with changing BeaconParsers for running scan service (#1091, David G. Young)\n\n### 2.19.4 / 2022-03-10\n\n- Add ApiTrackingLogger (#1078, David G. Young)\n- Allow scanning with only BLUETOOTH_SCAN permission and not just location permissions. (#1065, Marcel Schnelle)\n- Fix bug blocking job scheduler scans on Android 12. (#1077, David G. Young)\n\n### 2.19.3 / 2021-10-5\n\n- Fix failing intent-backed scans broken by Android 12 changes in the 2.19 release. (#1059, David G. Young)\n\n### 2.19.2 / 2021-08-18\n\n- Fix NullPointerException in IntentScanStrategyCoordinator (#1053, PhilipTocsen)\n\n### 2.19.1 / 2021-08-13\n\n- Improve default background mode with autobind (#1051, David G. Young)\n\n### 2.19 / 2021-08-09\n\n- Manual binding/unbinding deprecated.  (#1046, David G. Young)\n- Android 12 changes. (#1043, Nick Badal, David G. Young)\n\n### 2.19-beta5 / 2021-08-01\n\n- Bug fixes to autobind (#1035, David G. Young)\n\n### 2.19-beta4 / 2021-07-10\n\n- Auto start background power saver when using autobind.   Expedite region exits when using intent scan strategy.  (#1035, David G. Young)\n\n### 2.19-beta3 / 2021-07-04\n\n- Add experimental autobind methods for starting beacon ranging/monitoring without a manual call to bind(). (#1035, David G. Young)\n- Add support for beacon parsers based on 128-bit service UUIDs (#1035, David G. Young)\n\n\n### 2.19-beta2 / 2021-06-07\n\n- Add experimental IntentScanStrategy to eliminate a foreground service for some background scan use cases. (#1030, David G. Young)\n- Update service declarations as required for Android 12 (#1033, David G. Young)\n\n### 2.19-beta / 2021-04-28\n\n- Reduce crashes on starting foreground service (#1024, David G. Young)\n- Reduce minSdk to 14 (#1023 David G. Young)\n- Add experimental LiveData interface (#1025, David G. Young)\n\n### 2.18 / 2021-04-14\n\n- Remove dependency on androidx.localbroadcastmanager.content.LocalBroadcastManager (#1022, David G. Young)\n- Redo build scripts and publishing setup for Maven Central due to JCenter sunset (#1022, David G. Young)\n- Prevent internal growth of rangedRegions tracking set  (#922, Oleksandr Vandalko)\n\n### 2.17.1 / 2020-06-11\n\n- Parse multiple manufacturer sections in the advertisement and the scan response to look for beacons.  (#970, David G. Young)\n- Improve HW filter detection mechanism in order to detect beacons immediately after starting in background (#974, Vlad Vladau)\n- Fix crash on BluetoothMedic when started on thread without a looper (#980, David G. Young)\n\n### 2.17 / 2020-04-19\n\n- Make BeaconParser more flexible so as to support covid beacon proposal (#965, David G. Young)\n- Add timestamps of precsely when first and last packet was detected for beacon (#956, Rémi Latapy)\n\n### 2.16.4 / 2020-01-26\n\n- Fix Bluetooth Medic notifications on apps targeting API 26+ (#943 Anu Vakkachen)\n- Fix ConcurrentModificationException crash on background detection reported in #929. (#940, David G. Young)\n- Expedite beacon detections on Samsung when transitionoing from screen on to screen onff (#941, David G. Young)\n\n### 2.16.3 / 2019-09-18\n\n- Fix thread leak with 0 regions and settings applied, (#888, David G. Young)\n- Prevent NPE when ScanState restore hangs or ScanJob thread is slow to start (#890, David G. Young)\n- Prevent crash from IAE when ending scan cycle (#891, David G. Young)\n- Prevent NPE in BluetoothMedic#runScanTest. (#893 Van Hoang Tran)\n\n### 2.16.2 / 2019-05-29\n\n- Prevent crash on alarms going off with a different user active (#886, David G. Young)\n- Fix thread leak caused by scheduling ScanJob when no consumers bound. (#885, David G. Young)\n- Protect against a NPE when changing ranged regions.  (#770, David G. Young)\n- Fix intermittent failed ranging/monitoring callbacks in race conditions. (#842, David G. Young) \n- Prevent duplicate callbacks on Android 8+ with a foreground service by stopping ScanJob.  (#847, Stephen Ruda)\n- Only apply Samsung-specific non-empty scan filters when the screen is off (#855, Marcel Schnelle)\n\n### 2.16.1 / 2019-02-10\n\n- Fix crash on starting scanning with a forground service configured when multiple BeaconConsumer\n  instances bound.  (#828, David G. Young)\n- Fix broken RegionBoostrap callbacks caused by change in previous release (#829, David G. Young)\n\n### 2.16 / 2019-02-10\n\n- New Region Bootstrap constructors allowing separate context and notifir (#821, Alper Tekin)\n- Fix intermittent crash caused by internal Android NPE (#824, kababu007)\n- Update gradle and robolectric (#805, Tony Tang)\n- Fix problem on service shutdown that leaked threads and left scanning on (#804, David G. Young)\n\n### 2.15.4 / 2018-12-11\n\n- Fix crash on BluetoothCrashResolver (#790, Michael Porter)\n\n### 2.15.3 / 2018-12-11\n\n- Samsung screen-off scans on Android 8.1+ fixed.  (#798, David G. Young)\n- Fix bug preventing callbacks after unbind/bind when using ScanJobs.  (#765, David G. Young)\n- Prevent NPE on access CycledLEScanner after OOM on Android 8+.  (#766, David G. Young)\n- Make switching back and forth between a foreground service and scan jobs more reliable\n(#767, David G. Young)\n- Disable BluetoothCrashResolver on Android 5+ as a it is not helpful can can create log noise.\n   (#768, David G. Young)\n- Prevent NPE on start scan. (#780, Adrián Nieto Rodríguez)\n- Fix thread leak leading to OOM Exceptions when using ScanJobs (#785, David G. Young)\n\n### 2.15.2 / 2018-10-17\n\n- Prevent infrequent out of memory crashes on Android 8+ (#750 Pappas Christodoulos, David G. Young)\n- Prevent duplicate ranging/monitoring callbacks casued by bind/unbind with a service\n  (#748, Adrián Nieto Rodríguez, #745, David G. Young)\n- Allow starting foreground service at boot (#746, David G. Young)\n- Re-enable broken BeaconSimulator (#751, David G. Young)\n\n### 2.15.1 / 2018-09-01\n\n - Prevent crash caused by internal Android exception when stopping scanning (#724, David G. Young)\n - Fix Android 8 crashing apps on background monitoring/ranging data delivery (#720, David G. Young)\n - Fix intermittent NPE on ranging beacons (#716, Federico Bertoli, David G. Young)\n - Stop running scheduled jobs to do scans after last consumer unbound. (#702, David G. Young)\n\n### 2.15 / 2018-07-04\n\nEnhancements:\n - Optional foreground beacon scanning service for faster background detections on Android 8+\n   (#663, David G. Young)\n\nBug Fixes:\n - Fixes inability to detect on some 5.x Samsung Devices without scan filters. (#693, David G. Young)\n - Fix inverted logic for \"disable ScanJob\" warning (#700, Marcel Schnelle)\n - Fix crash on scanning an Eddystone-URL packet with a negative-length URL. (#703, David G. Young)\n\n### 2.14 / 2018-05-17\n\nEnhancements:\n\n - Add warnings about disabling scheduled scan jobs on Android 8+ (#674, David G. Young)\n - Add warning about setting short scan periods on Android 8 (#677, David G. Young)\n - BeaconTransmitter advertisements may be configured as connectable (#683, Michael Harper)\n\nBug Fixes:\n - Fix crashes of BluetoothMedic caused by Bluetooth being turned off (#675, David G. Young) \n - Fix flawed in BeaconManager.isBound method on Android 8 (#655, David G. Young)\n\n### 2.13.1 / 2018-03-05\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.13.1...2.13)\n\n Bug Fixes:\n - Fix incorrect immediateScanJobId meta-data name in manifest causing crash  (#653, David G. Young)\n\n\n### 2.13 / 2018-03-05\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.12.4...2.13)\n\nEnhancements:\n - Add BluetoothMedic to fix crashing bluetooth stacks.  (#644, David G. Young)\n - Allow configuring job ids (#645, David G. Young)\n\n Bug Fixes:\n - Allow scans with screen off on Android 8.1 (#637, David G. Young)\n\n### 2.12.4 / 2017-12-16\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.12.3...2.12.4)\n\nBug Fixes:\n - Fix performance problems when using identifiers 3-15 bytes caused by\n   Identifier#toHexString(). (#615, David G. Young)\n - Restore missing runningAverageRssi values  (#621, David G. Young)\n - Fix NPE on ExtraBeaconDataTracker (#626, David G. Young)\n - Fix regression with `RunningAverageRssiFilter.setSampleExpirationMilliseconds`\n   being overwritten when committing ranged beacon measurements. (#629, Aaron Kromer)\n - Fix missing running average RSSI in callbacks when apps do not use the\n   scheduled scan job feature. (#630, Aaron Kromer)\n - Fix copying of multi-frame beacon flag in `Beacon(Beacon)` constructor (#630, Aaron Kromer)\n - Fix the `AltBeaon(Beacon)` copy constructor which omitted some data fields (#630, Aaron Kromer)\n\n### 2.12.3 / 2017-10-14\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.12.2...2.12.3)\n\nBug Fixes:\n - Fix NullPointerException in ProcessUtils.  (#598, David G. Young)\n - Fix ConcurrentModificationException crashing app on Android 8 when monitored regions are\n   changed at the same time the app shifts from active scanning to passive scanning.\n   (#578, David G. Young)\n - Fix ConcurrentModifictionExceptions starting ScanJobs.  (#584, #588, David G. Young)\n - Fix NullPointerException when BluetoothLeScanner cannot be obtained.\n   (#583, David G. Young)\n\n### 2.12.2 / 2017-08-31\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.12.1...2.12.2)\n\nBug Fixes:\n - Fix stack overflow caused by scan period of zero seconds, caused by 2.12 upgrade of existing\n  apps.  (#572, David G. Young)\n - Suppress error log on ScanState deserialization if file does not exist yet.\n   (#570, David G. Young)\n - Turn off scanning after unbind, which was previously left on forever in some cases.\n  (#569, David G. Young)\n\n### 2.12.1 / 2017-08-16\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.12...2.12.1)\n\n\nBug Fixes:\n - Fix crash on Android 8.0 background scan when bluetooth is off.\n   (#562 Juliane Lehmann)\n - Fix \"Scanning too frequently\" error with non-zero betweenScanPeriod\n   and scanPeriod+betweenScanPeriod < 6000, and full-power scanning\n   staying on for foreground scans with a non-zero betweenScanPeriod\n   (#555, David G. Young)\n\n\n### 2.12 / 2017-08-07\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.11...2.12)\n\nEnhancements:\n - Add Android O support with ScanJob using  JobScheduler to do scans instead of BeaconService,\n   set as default for Android O. (#484, David G. Young)\n\nBug Fixes:\n\n - Correct accessor method for Beacon#getRunningAverageRssi()\n   (#536, Pietro De Caro)\n\n### 2.11 / 2017-06-28\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.10...2.11)\n\nEnhancements:\n\n- Add ability to circumvent prohibition against scans running for > 30 minutes on Android N.\n  (#529, David G. Young)\n- Add support for running the beacon scanning service in a separate process and working with\n  application setups that have more than one process. (#479, David G. Young)\n\nBug Fixes:\n\n- Fix Google Play submission errors by no longer using uses-permission-sdk-23 in\n  Manifest (#527, David G. Young)\n- Fix inability to use `RunningAverageRssiFilter.setSampleExpirationMilliseconds(...)` (#523,\n  David G. Young)\n- Fix failure to restart scanning in some cases after bluetooth has been off but then is turned\n  back on. (#519, David G. Young)\n- Fix failure to stop scanning when unbinding from service or when the between scan period\n  is nonzero. (#507, David G. Young)\n- Fix possible `NullPointerException` with `BackgroundPowerSaver` on devices\n  prior to Android 4.3 Jelly Bean MR 2 (API 18) (#516, Aaron Kromer)\n- Fix rare edge case causing `NoSuchElementException` when using the legacy\n  `BeaconManager#getMonitoringNotifier` and `BeaconManager#getRangingNotifier`\n  where the notifier sets were modified external to `BeaconManager` by another\n  thread (#516, Aaron Kromer)\n\n### 2.10 / 2017-04-21\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.9.2...2.10)\n\nEnhancements:\n\n- Don't restart BLE scanning periodically if the library confrims device can detect duplicate\n  advertisements in a single scan, leading to more reliable detections with short scan cycles\n  (#491, David G. Young)\n\nBug Fixes:\n\n- Deprecate misspelled methods `removeMonitoreNotifier` and\n  `setRegionStatePeristenceEnabled` in favor of correctly spelled alternatives.\n  (#461, Marco Salis)\n- Fix bug causing brief scan dropouts after starting a scan after a long period\n  of inactivity (i.e. startup and background-foreground transitions) due to\n  Android N scan limits (#489, Aaron Kromer)\n- Ensure thread safety for singleton creation of `BeaconManager`,\n  `DetectionTracker`, `MonitoringStatus`, and `Stats`. (#494, Aaron Kromer)\n\n\n### 2.9.2 / 2016-11-22\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.9.1...2.9.2)\n\nBug Fixes:\n\n- Provide access to monitored regions after restoring state (#456, David G.\n  Young)\n- Don't start or stop scans if bluetooth state is off to prevent crashes on HTC\n  devices (#452, David G. Young)\n- Protect against SecurityException crashes caused by Samsung Knox (#444, David\n  G. Young)\n- No Monitoring information after killing an application built with the minify\n  mode (#432, ost-ct)\n- Start and stop BLE scans from a background thread to prevent blocking the UI\n  (#430, Marco Salis)\n- Prevent flapping (rapid exit then enter) of restored monitored regions (#426,\n  Elias Lecomte)\n- Don't implicitly require bluetooth in manifest (Commit b3ac622e2b, David G.\n  Young)\n\n\n### 2.9.1 / 2016-08-26\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.9...2.9.1)\n\nBug Fixes:\n\n- Fixes spurious entry/exit events on Android N caused by OS imposed limits of\n  5 scans every 30 seconds. (#419, David G. Young)\n\n\n### 2.9 / 2016-07-25\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.8.1...2.9)\n\nEnhancements:\n\n- Multiple ranging and monitoring notifiers are supported via\n  `BeaconManger#addRangeNotifier(RangeNotifier notifier)` and\n  `BeaconManger#addMonitorNotifier(MonitorNotifier notifier)` (#392, ost-ct)\n- App bootstrap regions by be dynamically changed with\n  new`RegionBootstrap#removeRegion(Region region)` and\n  `RegionBootstrap#addRegion(Region region)` methods. (#369, Aristide)\n- Improved region state behavior by adding\n  `BeaconManager#requestStateForRegion(Region)` and\n  `BeaconManager#setRegionStatePeristenceEnabled(boolean)` (#405, David G.\n  Young)\n- Added a guaranteed callback to\n  `MonitorNotifier#didDetermineStateForRegion(int state, Region region)` when\n  starting monitoring.  At app startup, this returns the previously known\n  persisted state. (#405, David G. Young)\n- Custom distance calculation for Moto X 2nd gen XT1092 (#386, Clément Garcia)\n- More flexible support for combining multi-frame beacons with\n  `Beacon#getExtraDataFields()` (#387, mfatiga)\n\nBug Fixes:\n\n- Eddystone frame detection on Google's Android BeaconTools and Chrome fixed by\n  adding missing service UUID PDU. (#401, David G. Young)\n- Beacon data fields of over four bytes are now be parsed correctly. (#373,\n  Junsung Lim)\n- Region persistence app freezes resolved by limiting persisted regions to 50\n  (#405, David G. Young)\n- Fixed inability to starting monitoring for a different Region definition with\n  the same uniqueId (#405, David G. Young)\n- Fixes Eddystone-URL layout to support the full 17 bytes for URLs (uses 18\n  bytes total: 1 byte for schema and 17 bytes for URL) (#377, Mario Pucci)\n- Fix potential context leak in `BeaconManager` (#381, Ovidiu Latcu)\n\n\n### 2.8.1 / 2016-04-18\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.8...2.8.1)\n\nBug Fixes:\n\n- As of the 2.8 release, scanning would never start on Android 4.x devices\n  unless the application manually added ACCESS_COARSE_LOCATION or\n  ACCESS_FINE_LOCATION permissions to the AndroidManifest.xml. This fix makes\n  it so this is not required for 4.x devices, as was the case prior to 2.8.\n  (#365, David G. Young)\n\n\n### 2.8 / 2016-03-28\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.7.1...2.8)\n\nEnhancements:\n\n- Retains monitored regions across service restarts, preventing apps from\n  getting multiple region entry callbacks each time the service restarts.\n  (#315, Mateusz Sarzyński)\n- Add string identifier to BeaconParser which can be referenced by decoded\n  Beacon object, allowing easy determination of beacon type. (#333, David G.\n  Young)\n- Switch to using ELAPSED_REALTIME clocks, so scanning doesn't stop on devices\n  without a battery-backed RTC (#339, Luca Niccoli)\n- Add ability to access raw EDDYSTONE_TLM data for sending info to Google\n  services. (#328, David G. Young)\n- New distance formula for Moto X Pro (#330, David G. Young)\n- Adjust the BackgroundPowerSaver so it accepts any context (#355, Kristof\n  Snyers)\n- Add support for pre-Eddystone UriBeacon layout (#358, David G. Young)\n\nBug Fixes:\n\n- Multiple consumers of the BeaconService will now each get a\n  onBeaconServiceConnected() callback. (#340, Mateusz Sarzyński)\n- Don't scan for bluetooth devices if permission has not been granted in\n  Android 6. This prevents large number of exceptions in the log. (#327, Alex\n  Urzhumtcev)\n- Fix crash on beacon parsing comparison overrun (#324, David G. Young)\n\n\n### 2.7.1 / 2015-11-17\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.7...2.7.1)\n\nBug Fixes:\n\n- Stopping and starting monitoring disables scans (#317, David G. Young)\n\n\n### 2.7 / 2015-11-12\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.6.1...2.7)\n\nEnhancements:\n\n- Adds hardware accelerated detection of Eddystone frames in the background on\n  Android 5+ (#314, David G. Young)\n- Provides ability to forward BLE scan callbacks for non-beacon advertisements\n  (#267, Paul Peavyhouse)\n\nBug Fixes:\n\n- Fix rescheduling of alarms in the distant future so they don't inadvertently\n  go off right away (#312, Mateusz Sarzyński)\n- Only request `ACCESS_COARSE_LOCATION` permission on Android M (#296, Henning\n  Dodenhof)\n\n\n### 2.6.1 / 2015-09-30\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.6...2.6.1)\n\nBug Fixes:\n\n- Allow Regions to match beacons with fewer identifiers if the extra region\n  identifiers are null. This allows matching Eddystone-UID and Eddystone-URL\n  beacon with the default Region with three null identifiers. This started\n  failing in version 2.6. (#295, David G. Young)\n- Declare the `ACCESS_COARSE_LOCATION` permission in the manifest since it is\n  required for Android 6.0. This is helpful to keep beacon detection working on\n  Android 6.0 for apps that don't explicitly declare this in their own\n  manifest. (#295, David G. Young)\n\n\n### 2.6 / 2015-09-29\n\n[Full Changelog](https://github.com/AltBeacon/android-beacon-library/compare/2.5.1...2.6)\n\nEnhancements:\n\n- Make region exit period configuration with a default of ten seconds (#283,\n  Alex Urzhumtcev)\n- When scanning in Background on Android 5+, do a full scan without filters\n  during the main scan period (default for 10 seconds once every 5 minutes) in\n  case scan filters are unavailable (#293, David G. Young)\n- Common open-source BeaconParser layouts are defined as constants on\n  BeaconParser (Commit 0101970010, David G. Young)\n- Bluetooth address is now a field on Region, offering the option of monitoring\n  and ranging for all beacon transmissions from a known device's MAC Address\n  (#254, David G. Young)\n- Target SDK bumped to 23 for Android 6.0 (#293, David G. Young)\n\nBug Fixes:\n\n- Fix potential `ConcurrentModificationException` with distance calculation\n  (#245, Dawid Drozd)\n- Fix potential `NullPointerException` in `Beacon#hashCode` (#249, Sam Yang)\n- Switch BeaconParsers list to be a `CopyOnWriteArrayList` to avoid\n  `UnsupportedOperationException` changing list after starting scanning. (#290,\n  Matthew Michihara)\n- Fix crash when region has more identifiers than beacon (#252, David G. Young)\n- Fix bugs with compressing Eddystone-URL to bytes and back (#263, Michael\n  Harper)\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.822265625,
          "content": "# How to Contribute to the Android Beacon Library\n\nThis project welcomes code contributions from the communityProposed code changes should be submitted as a pull request on Github. Please follow the following guidelines when submitting a [pull request](https://github.com/altbeacon/android-beacon-library/pulls).\n\n## Style\n\nCode style should generally follow the [Android coding style](https://source.android.com/source/code-style.html)\n\n## API Changes\n\nChanges generally should not break the existing API and should be backward compatible with the current release version If the PR does represent a breaking change, the title or description must make this clear. Breaking changes will be held for the next major version release of the library.\n\n## Testing\n\nPRs must include testing information to ensure the changes are functional and do not adversely affect other library functionsTesting information must include one or more of the following:\n\n### 1. Automated Robolectric tests:\n\nRobolectric tests are required for most changes, and should be submitted along with the PRExceptions include Bluetooth or Android OS-level changes that cannot be tested with Robolectric. Examples of Robolectric tests exist in the src/test folder.\n\nRobolectric test updates are absolutely required if existing Robolectric tests exists for the modified code.\n\nRegardless of whether Robolectric tests are added or modified, all tests must be passing on the branch of the PR when running `./gradlew test `\n\n### 2. Manual tests:\n\nChanges affecting Bluetooth scanning, addressing device-specific issues often cannot be adequately tested using Robolectric since it stubs out Bluetooth and Android OS system callsChanges of this nature must be manually tested on a physical device. Manual tests should be performed with the library's reference application, if possible.\n\nWhen submitting a PR, a description of any manual testing performed should include:\n\n* Mobile device model and Android OS version.\n\n* Description of beacon device and configuration used during testing (if applicable)\n\n* A description of the steps taken to do the manual testing\n\n* A description of the conditions witnessed that verify the code works as designed and that other functions are not broken\n\n### 3. Changes that cannot be tested manually or with Robolectric\n\nIn some rare cases where changes cannot be verified manually (e.g. some intermittent issues), a description may be included of why testing cannot be performed and describing why the change is low-risk and can be verified by code reviewFor such changes to be considered low-risk they typically must be very small\n\n## License\n\nAny code submitted must be the work of the author, or if third party must be covered by the same Apache 2 license as this library or the Android Open Source ProjectOnce submitted, the code is covered under the terms of the license of this library.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.080078125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2014 Radius Networks\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.232421875,
          "content": "Android Beacon Library\nCopyright 2014-2021 Radius Networks\nCopyright 2019-2021 Young Consulting\n\nThis product includes software developed at\nRadius Networks (http://www.radiusnetworks.com/).\nYoung Consulting (http://davidgyoungtech.com).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.90234375,
          "content": "Android Beacon Library\n=======================\n\n[![Build Status](https://circleci.com/gh/AltBeacon/android-beacon-library.png?circle-token=4e11fb0dccaa8b98bc67fdbe38b179e4a7d07c27)](https://circleci.com/gh/AltBeacon/android-beacon-library)\n\nAn Android library providing APIs to interact with beacons.  Please visit the\n[project website](http://altbeacon.github.io/android-beacon-library/) for how to use this library.\n\n**IMPORTANT:  By default, this library will only detect beacons meeting the AltBeacon specification.**\n\nIf you want this library to work with proprietary or custom beacons, see the [BeaconParser](http://altbeacon.github.io/android-beacon-library/javadoc/org/altbeacon/beacon/BeaconParser.html) class.\n\n## What does this library do?\n\nIt allows Android devices to use beacons much like iOS devices do.  An app can request to get notifications when one\nor more beacons appear or disappear.  An app can also request to get a ranging update from one or more beacons\nat a frequency of approximately 1Hz.\n\n## Documentation\n\nThe [project website](http://altbeacon.github.io/android-beacon-library/) has [full documentation](http://altbeacon.github.io/android-beacon-library/documentation.html) \n\n## Downloads\n\n### Binary\n\nYou may [download binary releases here.](http://altbeacon.github.io/android-beacon-library/download.html)\n\n### Maven\n\nAdd Maven Central to your build file's list of repositories.\n\n```groovy\nrepositories {\n   mavenCentral()\n}\n```\n\nto use the Maven Central Repository\n\n```groovy\ndependencies {\n    ...\n    implementation 'org.altbeacon:android-beacon-library:${altbeacon.version}'\n    ...\n}\n```\n\nreplacing `${altbeacon.version}` with the version you wish to use.\n\n## How to build this Library\n\nThis project uses an AndroidStudio/gradle build system and is known working with Android Studio Flamingo | 2022.2.1 Patch 1 and Gradle 8.0\n\nKey Gradle build targets:\n\n    ./gradlew test # run unit tests. To see results: `open lib/build/reports/tests/testDebugUnitTest/index.html`\n    ./gradlew build # development build\n    ./gradlew release # release build\n\n## License\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\nThis software is available under the Apache License 2.0, allowing you to use the library in your applications.\n\nIf you want to help with the open source project, contact david@radiusnetworks.com\n\n## Publishing to Maven\n\nThe following instructions are for project administrators.\n\n1. Prerequisites: https://getstream.io/blog/publishing-libraries-to-mavencentral-2021/ \n\n2. Configure your  ~/.gradle/gradle.properties with:\n\n        signing.keyId=<my key id>\n        signing.password=<my passphrase>\n        signing.secretKeyRingFile=<path to exported gpg file>\n        signing.password=<my passphrase>\n        ossrhUsername=<sonotype server username>\n        ossrhPassword=<sonotype server password>\n\n3. Run the build and upload\n\n        git tag <version>\n        git push --tags \n        ./gradlew release\n        ./gradlew mavenPublish # Wait 10 mins before using the next command\n        ./gradlew closeAndReleaseRepository\n\n4. Keep checking for a half hour or so at https://repo1.maven.org/maven2/org/altbeacon/android-beacon-library/ to see that the new release shows up.\n\nNote:  you must have Java 17 to build the projecdt.  If that is not the version on the path, and you have Android Studio installed, you may be able to add it to the path with:\n\n`export PATH=/Applications/Android\\ Studio.app/Contents/jbr/Contents/Home/bin:$PATH`\n"
        },
        {
          "name": "STATUS",
          "type": "blob",
          "size": 0.140625,
          "content": "Tests are failing\nbuild with this\nexport JAVA_HOME=/Applications/Android\\ Studio\\ 2.app/Contents/jbr/Contents/Home; \n ./gradlew release -x test\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.880859375,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\nbuildscript {\n    ext.kotlin_version = \"1.8.0\"\n    repositories {\n        google()\n        mavenCentral()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:8.0.2'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.22.0'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\next {\n    // setting release property breaks maven plugin\n    // so instead we indicate snapshots with -Psnapshot\n    isSnapshot = project.hasProperty('snapshot')\n    isSnapCi = System.getenv('SNAP_CI') != null\n    isSnapPullRequest = System.getenv('SNAP_PULL_REQUEST_NUMBER') != null\n}\n\n/*\n * Gets the version name from the latest Git tag\n */\ndef getVersionName = {\n    version = \"\"\n    def stdout = new ByteArrayOutputStream()\n    try {\n        exec {\n            commandLine 'git', 'describe', '--tags'\n            standardOutput = stdout\n        }\n        version = stdout.toString().trim()\n    }\n    catch (e) {\n        println(\"Can't get version from git: \" + e);\n        version = \"adhoc\"\n    }\n    version = \"${version}${isSnapshot ? \"-SNAPSHOT\" : \"\"}\"\n    return version\n}\n\nallprojects {\n    repositories {\n        google()\n        mavenCentral()\n        jcenter()\n    }\n    version = getVersionName()\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\nif (getGradle().getStartParameter().getTaskRequests().toString().contains(\"release\") ||\n        getGradle().getStartParameter().getTaskRequests().toString().contains(\"mavenPublish\") ||\n        getGradle().getStartParameter().getTaskRequests().toString().contains(\"closeAndReleaseRepository\")) {\n    apply plugin: 'io.codearte.nexus-staging'\n}\n\n"
        },
        {
          "name": "circle.yml",
          "type": "blob",
          "size": 0.251953125,
          "content": "machine:\n  java:\n    version: openjdk17\ndependencies:\n  pre:\n    - echo y | android update sdk --no-ui --all --filter \"tools,android-31,build-tools-30.0.3,platform-tools,extra-android-m2repository,extra-google-m2repository\"\ngeneral:\n  branches:\n    ignore:\n\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8896484375,
          "content": "org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8\n# AndroidX package structure to make it clearer which packages are bundled with the\n# Android operating system, and which are packaged with your app\"s APK\n# https://developer.android.com/topic/libraries/support-library/androidx-rn\nandroid.useAndroidX=true\n# Automatically convert third-party libraries to use AndroidX\nandroid.enableJetifier=true\n\nproject_vendor = altbeacon\nproject_vendor_name = altbeacon\nproject_description = Allows Android apps to interact with BLE beacons\nproject_url = https://github.com/AltBeacon/android-beacon-library\nproject_scm = https://github.com/AltBeacon/android-beacon-library\nproject_issues_url = https://github.com/AltBeacon/android-beacon-library/issues\nproject_connection = scm:git:https://github.com/AltBeacon/android-beacon-library.git\nproject_dev_connection = scm:git:git@github.com:AltBeacon/android-beacon-library.git\n\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.20703125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "proguard-rules.pro",
          "type": "blob",
          "size": 0.1904296875,
          "content": "# These proguard rules will be used in apps that use obfuscation automatically.\n\n#AltBeacon\n-dontwarn org.altbeacon.**\n-keep class org.altbeacon.** { *; }\n-keep interface org.altbeacon.** { *; }\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.1103515625,
          "content": "include ':lib'\nproject(\":\").name = \"android-beacon-library-root\"\nproject(\":lib\").name = \"android-beacon-library\"\n"
        }
      ]
    }
  ]
}