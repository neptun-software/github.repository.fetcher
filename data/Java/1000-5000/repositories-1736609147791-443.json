{
  "metadata": {
    "timestamp": 1736609147791,
    "page": 443,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "daimajia/AndroidViewHover",
      "stars": 3206,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.453125,
          "content": ".gradle\n/local.properties\n/.idea/workspace.xml\n.DS_Store\n/build\n# built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n.DS_Store\n\n# generated files\nbin/\ngen/\nWiki/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Eclipse project files\n.classpath\n.project\n.settings/\n\n# Proguard folder generated by Eclipse\nproguard/\n\n#Android Studio\nbuild/\n\n# Intellij project files\n*.iml\n*.ipr\n*.iws\n.idea/\n\n#gradle\n.gradle/"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.4541015625,
          "content": "language: java\njdk: oraclejdk7\nenv:\n  matrix:\n    - ANDROID_TARGET=android-20  ANDROID_ABI=armeabi-v7a\n\nbefore_install:\n  # Install base Android SDK\n  - sudo apt-get update -qq\n  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch > /dev/null; fi\n  - wget http://dl.google.com/android/android-sdk_r23-linux.tgz\n  - tar xzf android-sdk_r23-linux.tgz\n  - export ANDROID_HOME=$PWD/android-sdk-linux\n  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools\n\n # Gradle\n  - wget http://services.gradle.org/distributions/gradle-1.12-bin.zip\n  - unzip gradle-1.12-bin.zip\n  - export GRADLE_HOME=$PWD/gradle-1.12\n  - export PATH=$GRADLE_HOME/bin:$PATH\n\n  # Install required components\n  # For a full list, run `android list sdk -a --extended`\n  # Note that sysimg-19 downloads only ARM, because only the first license query is accepted.\n  - echo yes | android update sdk --filter platform-tools --no-ui --force > /dev/null\n  - echo yes | android update sdk --all --filter build-tools-20.0.0 --no-ui --force > /dev/null\n  - echo yes | android update sdk --filter android-20 --no-ui --force > /dev/null\n  - echo yes | android update sdk --filter sys-img-x86-android-19 --no-ui --force > /dev/null\n  - echo yes | android update sdk --filter extra-android-support --no-ui --force > /dev/null\n  - echo yes | android update sdk --filter extra-android-m2repository --no-ui --force > /dev/null\n\ninstall:\n - ./gradlew assemble"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.927734375,
          "content": "# Android View Hover [![Build Status](https://travis-ci.org/daimajia/AndroidViewHover.svg)](https://travis-ci.org/daimajia/AndroidViewHover)\n\nIn my opinion, jumping to a new activity to show your menu is a kind of wasting time and life.\n\nSo,\n\nI think, we need a hover view, to show menu, to show messages.\n\n## Demo\n\n![](http://ww2.sinaimg.cn/mw690/610dc034jw1ej5iihjtl5g208z0f2npd.gif)\n\nWatch HD in [YouTube](http://www.youtube.com/watch?v=bsDQbMTtPvM).\n\nDownload [Apk](https://github.com/daimajia/AndroidViewHover/releases/download/v1.0.0/AndroidViewHover-v1.0.0.apk)\n\n## Usage\n\n### Step0\n\nSet up RenderScript\n\n- Eclipse, please visit [official tutorial](http://developer.android.com/guide/topics/renderscript/compute.html#access-rs-apis).\n- Android Studio, add \n\t```groovy\n\t        \n\t        renderscriptTargetApi 19\n        \trenderscriptSupportMode true\n\t```\n\tin `build.gradle` `defaultConfig`, here is a [sample](https://github.com/daimajia/AndroidViewHover/blob/master/library/build.gradle#L12-L13)\n\t\n\n### Step1\n\n#### Gradle\n```groovy\ndependencies {\n\tcompile \"com.android.support:support-v4:20.+\"\n\tcompile 'com.nineoldandroids:library:2.4.0'\n\tcompile 'com.daimajia.easing:library:1.0.0@aar'\n\tcompile 'com.daimajia.androidanimations:library:1.1.2@aar'\n\tcompile 'com.daimajia.androidviewhover:library:1.0.4@aar'\n}\n```\n\n#### Maven\n\n```xml\n\t<dependency>\n\t    <groupId>com.nineoldandroids</groupId>\n\t    <artifactId>library</artifactId>\n\t    <version>2.4.0</version>\n\t</dependency>\n\t<dependency>\n\t    <groupId>com.daimajia.androidanimation</groupId>\n\t    <artifactId>library</artifactId>\n\t    <version>1.1.2</version>\n\t    <type>apklib</type>\n\t</dependency>\n\t<dependency>\n\t    <groupId>com.daimajia.easing</groupId>\n\t    <artifactId>library</artifactId>\n\t    <version>1.0.0</version>\n\t    <type>apklib</type>\n\t</dependency>\n\t<dependency>\n\t    <groupId>com.daimajia.androidviewhover</groupId>\n\t    <artifactId>library</artifactId>\n\t    <version>1.0.4</version>\n\t    <type>apklib</type>\n\t</dependency>\n```\n\n\n#### Eclipse\n- SupportLibrary v4\n- [NineOldAndroids-2.4.0](https://github.com/downloads/JakeWharton/NineOldAndroids/nineoldandroids-2.4.0.jar)\n- [AndroidViewAnimations-1.1.2](https://github.com/daimajia/AndroidViewAnimations/releases/download/v1.1.2/AndroidViewAnimations-1.1.2.jar)\n- [AndroidEasingFunctions-1.0.0](https://github.com/daimajia/AndroidViewAnimations/releases/download/v1.0.6/AndroidEasingFunctions-1.0.0.jar)\n- [AndroidViewHover-1.0.3](https://github.com/daimajia/AndroidViewHover/releases/download/v1.0.3/AndroidViewHover-v1.0.3.jar)\n\n### Step2\n\n![](http://ww4.sinaimg.cn/mw690/610dc034jw1ej5giogymhj20dw085q36.jpg)\n\n1. Create an original view, and make sure it was wrapped by `BlurLayout`\n\n\tfor example:\n\t```xml\n\t\t<com.daimajia.androidviewhover.BlurLayout\n\t\t\t\tandroid:id=\"@+id/sample\"\n\t            android:layout_width=\"wrap_content\"\n\t            android:layout_height=\"wrap_content\">\n\t            <ImageView\n\t                android:layout_centerInParent=\"true\"\n\t                android:scaleType=\"fitXY\"\n\t                android:src=\"@drawable/kid\"\n\t                android:layout_width=\"match_parent\"/>\n\t\t</com.daimajia.androidviewhover.BlurLayout>\n\t```\n\tNote: `BlurLayout` is entended from `RelativeLayout`. You can use the `RelativeLayout` rules to layout your view.\n\n\n2. \tCreate a hover view, there is no rules to obey. Just please remember that this view will be stretched as large as the original view you have created.\n\n3.\tBind a hover view to `BlurLayout` \n\n\n\t```java\n\t\tBlurLayout sampleLayout = (BlurLayout)findViewById(R.id.sample);\n\t\tView hover = LayoutInflater.from(mContext).inflate(R.layout.hover, null);\n\t\tsampleLayout.setHoverView(hover);\n\t```\n\n\tand don't forget that you can add various animations just in one line code. For example:\n\t```java\n\t\t//View (R.id.heart) appear animation.\n\t\tsampleLayout.addChildAppearAnimator(hover, R.id.heart, Techniques.FlipInX);\n\t\t//View (R.id.heart) disappear animation.\n\t\tsampleLayout.addChildDisappearAnimator(hover, R.id.heart, Techniques.FlipOutX);\n\t```\n\nYou can view the samples in my [preset examples](https://github.com/daimajia/AndroidViewHover/blob/master/demo/src/main/java/com/daimajia/androidviewhover/demo/MainActivity.java).\n\n# Animations\n\nThis project provides a lot of animations you can choose. Animations are from my another open-source project [AndroidViewAnimations](https://github.com/daimajia/AndroidViewAnimations#effects). And you can aslo using [easing funcitons](https://github.com/daimajia/AnimationEasingFunctions) to make your animations more real. Please enjoy it.\n\n# Thanks\n\n- [NineOldAndroids](https://github.com/JakeWharton/NineOldAndroids) by JakeWharton\n- [AndroidViewAnimations](https://github.com/daimajia/AndroidViewAnimations) by me\n- [AnimationEasingFunctions](https://github.com/daimajia/AnimationEasingFunctions) by me\n\n# About me\n\nA student in mainland China. \n\nWelcome to [offer me an internship](mailto:daimajia@gmail.com).\nIf you have any new idea about this project, feel free to [contact me](mailto:daimajia@gmail.com).\n\n\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.6484375,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n        mavenCentral()\n        maven {\n            url \"https://oss.sonatype.org/content/repositories/snapshots\"\n        }\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.1.0'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        mavenCentral()\n        maven {\n            url 'https://oss.sonatype.org/content/repositories/snapshots'\n        }\n    }\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.3388671875,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Settings specified in this file will override any Gradle settings\n# configured through the IDE.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\n\nVERSION_NAME=1.0.3\nVERSION_CODE=4\nGROUP=com.daimajia.androidviewhover\n\nPOM_DESCRIPTION=Android awesome hover.\nPOM_URL=https://github.com/daimajia/AndroidViewHover\nPOM_SCM_URL=https://github.com/daimajia/AndroidViewHover\nPOM_SCM_CONNECTION=scm:https://github.com/daimajia/AndroidViewHover.git\nPOM_SCM_DEV_CONNECTION=scm:https://github.com/daimajia/AndroidViewHover.git\nPOM_LICENCE_NAME=MIT\nPOM_LICENCE_URL=http://opensource.org/licenses/MIT\nPOM_LICENCE_DIST=repo\nPOM_DEVELOPER_ID=daimajia\nPOM_DEVELOPER_NAME=daimajia"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0263671875,
          "content": "include ':library', ':demo'"
        }
      ]
    }
  ]
}