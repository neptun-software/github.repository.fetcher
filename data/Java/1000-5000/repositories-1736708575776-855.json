{
  "metadata": {
    "timestamp": 1736708575776,
    "page": 855,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "huanzi-qch/base-admin",
      "stars": 2414,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0849609375,
          "content": "*.js linguist-language=Java\n*.css linguist-language=Java\n*.html linguist-language=Java\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2020 huanzi-qch\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.5390625,
          "content": "## 官网<br/> \nhttps://huanzi-qch.gitee.io/base-admin <br/> \n\n## 简介<br/> \nBase Admin一套简单通用的后台管理系统<br/> \n这套Base Admin是一套简单通用的后台管理系统，主要功能有：权限管理、菜单管理、用户管理，系统设置、实时日志，实时监控，API加密，以及登录用户修改密码、配置个性菜单等<br/> \n\n## 技术栈<br/> \n前端：layui<br/> \njava后端：SpringBoot + Thymeleaf + WebSocket + Spring Security + SpringData-Jpa + MySql<br/> \n\n## 运行效果图<br/> \n![](https://huanzi-qch.gitee.io/file-server/images/base-admin.png) \n\n## 仓库地址<br/> \n国外：https://github.com/huanzi-qch/base-admin<br/> \n国内：https://gitee.com/huanzi-qch/base-admin<br/> \n\n## 前往博客查看详情<br/> \n具体介绍请看我的博客[《开源一套简单通用的后台管理系统》](https://www.cnblogs.com/huanzi-qch/p/11534203.html)<br/> \n\n## 常见问题<br/>\n0、maven下载jar包长时间无反应？\n```text\n原因：网络原因连不上maven仓库或其他未知原因导致IDE间接性抽风，导致无法下载联网下载jar包\n\n解决：网络原因自行解决，如果网络没问题就不要一直傻傻的等了，重启IDE，让它重新联网下载\n```\n1、IDE编译报错，识别不到实体类的set、get方法？\n```text\n原因：项目使用lombok开发，lombok会在生成class字节码文件帮我们生成set、get等方法，java文件没有set、get等方法，IDE索引不到set、get方法所以编译报错\n\n解决：IDE安装lombok插件即可能识别到对应set、get方法，重启生效\n``` \n2、数据库文件在哪？\n```text\n原因：没有好好看文档，建议先好好看下博客介绍，博客文末“代码开源”处已经早有说明\n\n解决：base_admin.sql文件在resources/static/sql下面\n```\n3、如何启动程序？\n```text\n原因：对springboot项目不熟，建议先去了解一下springboot，感兴趣的可以去看我的springBoot开源项目\n\n解决：等待IDE识别成springboot项目后，在BaseAdminApplication.java中运行main函数启动程序\n```\n4、测试账号/密码是多少？    PS：dev分支环境，默认关闭验证码校验\n```text\n账号/密码\n\nsa/123456\n```\n5、如何逆向工程生成后端代码？我封装有一个工具类AutoGenerator.java用于生成单表全套后端代码\n```text\n首先建好数据表，在该类中配置好数据源以及项目所在路径，在main函数的tables数组指定要生成代码表，运行main函数即可生成全套后端增删改查、分页代码\n\n一套通用common代码，每个单表去继承从而实现这套基础代码，使用AutoGenerator.java代码自动生成一套单表的基础增、删、改、查接口，大大提高开发效率，\n详情见博客介绍：https://www.cnblogs.com/huanzi-qch/p/10281773.html\n\n2021-06-24更新：我优化了AutoGenerator.java的代码，并升级了V2.0版本的代码生成器，支持使用模板文件生成代码：AutoGeneratorPlus.java\n```\n6、如何跳过登录，直接测试接口？\n```text\n场景：有的同学发现在“无需权限访问”那里配置了测试接口，但还是跳转到了登录页面，例如：/sys/sysUser/getUserById\n\n原因：这是因为跟“权限管理”那里配置的url接口冲突了（例如：/sys/**），权限管理那里的配置优先级更高，因此还是会跳去登录页面\n\n解决：暂时删除所有跟测试接口冲突的“权限管理”配置的url接口（例如：/sys/**，/sys/sysUser/*等）\n\n2021-01-25更新：还是有人搞不定无需登录接口，我在项目中新增了一个OpenApi模块，以供大家参考！启动项目后，访问OpenApi测试接口：http://localhost:8888/openApi/test，即可看到效果\n```\n7、ORM框架不想用JPA，如何快速转MyBatis-Plus？\n```text\nJPA、MyBatis-Plus我都有进行封装，编码风格高度统一，都是单表继承基础通用的代码，有代码自动生成工具，本项目用的就是JPA的封装，快速切换可看之前的博客\n\nMP：SpringBoot系列——MyBatis-Plus整合封装（https://www.cnblogs.com/huanzi-qch/p/13561164.html）\nJPA：SpringBoot系列——Spring-Data-JPA（究极进化版） 自动生成单表基础增、删、改、查接口（https://www.cnblogs.com/huanzi-qch/p/10281773.html）\n```\n8、我想升级成前后端分离项目，麻烦吗？应当如何下手？\n```text\n难度肯定还是有的，如何你对这个项目比较熟悉，相信你已早有思路，如果没有可以参考下面的博客文章\n\nspringboot+spring security +oauth2.0 demo搭建（password模式）（认证授权端与资源服务端分离的形式）（https://www.cnblogs.com/hetutu-5238/p/10022963.html）\nGitHub地址（https://github.com/hetutu5238/zmc_security_oauth2）\n\n另外，我封装开源了一套极简的前后端分离项目脚手架：Fast Scaffold，包含一个portal前端、一个admin后端，可用于快速的搭建前后端分离项目进行二次开发\n详情请看博客：https://www.cnblogs.com/huanzi-qch/p/13933461.html\nGitHub地址：https://github.com/huanzi-qch/fast-scaffold\n\n```\n9、运行jar包，启动失败？\n```text\n十有八九是打的jar包有问题，参考博客重新打包，SpringBoot系列——jar包与war包的部署：https://www.cnblogs.com/huanzi-qch/p/9948060.html\n\n发现还是有很多同学打的包不对，我已经修改了pom.xml的打包配置，直接指定了打包生成路径：package，\n直接运行maven打包命令：package，就会在pom.xml的同级目录下生成package文件夹，打的jar包就在文件夹里面\n另外说一下：\n../package pom.xml文件的上一层目录下面的package\n/package C盘下面的package文件夹\npackage pom.xml文件的同级目录下面的package\n\n```\n## [AD广告位](https://huanzi-qch.gitee.io/file-server/ad/adservice.html) （长期招租，如有需要请私信）<br/>\n[【阿里云】阿里云最全的优惠活动聚集地！](https://www.aliyun.com/activity?userCode=ckkryd9h) <br/>\n[【腾讯云】腾讯云当前最新优惠活动专区！](https://cloud.tencent.com/act/cps/redirect?redirect=11447&cps_key=e1c9db729edccd479fc902634492bf53) <br/>\n<br/>\n\n## QQ群<br/>\n有事请加群，有问题进群大家一起交流！<br/>\n![](https://huanzi-qch.gitee.io/file-server/images/qq.png) \n\n## 捐献<br/>\n相应的资金支持能更好的持续项目的维护和开发，如果喜欢这个项目，请随意打赏！\n\n| 支付宝 | 微信 |\n|  ----  | ----  |\n| <img src=\"http://huanzi-qch.gitee.io/file-server/images/zhifubao.png\"  width=\"150\"> | <img src=\"http://huanzi-qch.gitee.io/file-server/images/weixin.png\" width=\"150\"> |\n\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 5.029296875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>cn.huanzi.qch</groupId>\n    <artifactId>base-admin</artifactId>\n    <version>0.0.1</version>\n    <name>base-admin</name>\n    <description>Base Admin一套简单通用的后台管理系统</description>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.1.7.RELEASE</version>\n        <relativePath/>\n    </parent>\n\n    <dependencies>\n        <!-- spring-boot-starter -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter</artifactId>\n        </dependency>\n\n        <!-- springboot web(MVC)-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <!-- 依赖包版本漏洞修复 -->\n        <dependency>\n            <groupId>com.fasterxml.jackson.core</groupId>\n            <artifactId>jackson-databind</artifactId>\n            <version>2.9.10.8</version>\n        </dependency>\n\n        <!-- springboot -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <!--lombok插件 -->\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n        </dependency>\n\n        <!--热部署工具dev-tools-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-devtools</artifactId>\n            <optional>true</optional>\n            <scope>runtime</scope>\n        </dependency>\n\n        <!-- security安全校验 -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n\n        <!-- thymeleaf模板 -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-thymeleaf</artifactId>\n        </dependency>\n\n        <!--添加springdata-jpa依赖 -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\n        </dependency>\n\n        <!--添加MySQL驱动依赖 -->\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>8.0.25</version>\n        </dependency>\n\n        <!-- CopyUtil需要用到 -->\n        <dependency>\n            <groupId>commons-beanutils</groupId>\n            <artifactId>commons-beanutils</artifactId>\n            <version>1.9.4</version>\n        </dependency>\n        <dependency>\n            <groupId>commons-collections</groupId>\n            <artifactId>commons-collections</artifactId>\n            <version>3.2.2</version>\n        </dependency>\n\n        <!-- springboot websocket -->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-websocket</artifactId>\n        </dependency>\n\n        <!-- Base64编码需要  -->\n        <dependency>\n            <groupId>org.apache.directory.studio</groupId>\n            <artifactId>org.apache.commons.codec</artifactId>\n            <version>1.8</version>\n        </dependency>\n\n        <!--提供更多的加密、填充方式-->\n        <dependency>\n            <groupId>org.bouncycastle</groupId>\n            <artifactId>bcprov-jdk16</artifactId>\n            <version>1.46</version>\n        </dependency>\n\n        <!--aop 面向切面-->\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-aop</artifactId>\n        </dependency>\n\n        <!--https://github.com/oshi/oshi。-->\n        <dependency>\n            <groupId>com.github.oshi</groupId>\n            <artifactId>oshi-json</artifactId>\n            <version>3.6.1</version>\n        </dependency>\n    </dependencies>\n\n    <!--构建工具-->\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <finalName>${project.artifactId}</finalName>\n                    <outputDirectory>package</outputDirectory>\n                </configuration>\n            </plugin>\n            <!-- 跳过启动测试 -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <configuration>\n                    <skipTests>true</skipTests>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}