{
  "metadata": {
    "timestamp": 1736708539545,
    "page": 776,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hierynomus/sshj",
      "stars": 2526,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bettercodehub.yml",
          "type": "blob",
          "size": 0.1142578125,
          "content": "exclude:\n- /build-publishing.gradle\n- /build.gradle\n- /settings.gradle\ncomponent_depth: 1\nlanguages:\n- groovy\n- java\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0517578125,
          "content": "*.bat text eol=crlf\nsrc/itest/docker-image/** eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1904296875,
          "content": "# IntelliJ IDEA\n.idea/\n*.iml\n*.ipr\n*.iws\n\n# Eclipe\n.project\n.classpath\n.settings/\n\n# Output dirs\nout/\ntarget/\nclasses/\nbin/\nbuild/\ndocs/\n.gradle/\nsshj.jar\n\n# MacOS X\n.DS_Store\n\n# VSCode\n.metals/\n"
        },
        {
          "name": ".java-version",
          "type": "blob",
          "size": 0.0048828125,
          "content": "11.0\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 0.111328125,
          "content": "git log --format='%aN <%aE>' | awk '{arr[$0]++} END{for (i in arr){print arr[i], i;}}' | sort -rn | cut -d\\  -f2-\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE_HEADER",
          "type": "blob",
          "size": 0.5498046875,
          "content": "Copyright (C)2009 - SSHJ Contributors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 3.26953125,
          "content": "sshj - SSHv2 library for Java\nCopyright 2010-2012 sshj contributors\n\nThis product includes code derived from software developed at \nThe Apache Software Foundation (http://www.apache.org/):\n\n- Apache MINA SSHD\n- Apache Commons-Net\n\n\n// Apache Mina SSHD notice\n\n   =========================================================================\n   ==  NOTICE file for use with the Apache License, Version 2.0,          ==\n   ==  in this case for the SSHD distribution.                            ==\n   =========================================================================\n\n   This product contains software developed by JCraft,Inc. and subject to\n   the following license:\n\nCopyright (c) 2002,2003,2004,2005,2006,2007,2008 Atsuhiko Yamanaka, JCraft,Inc.\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n  1. Redistributions of source code must retain the above copyright notice,\n     this list of conditions and the following disclaimer.\n\n  2. Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the distribution.\n\n  3. The names of the authors may not be used to endorse or promote products\n     derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL JCRAFT,\nINC. OR ANY CONTRIBUTORS TO THIS SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,\nOR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n--------------------------------------------------------------------------------\nCopyright (c) 2000 - 2006 The Legion Of The Bouncy Castle (http://www.bouncycastle.org)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in the\nSoftware without restriction, including without limitation the rights to use, copy,\nmodify, merge, publish, distribute, sublicense, and/or sell copies of the Software,\nand to permit persons to whom the Software is furnished to do so, subject to the\nfollowing conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 25.8271484375,
          "content": "= sshj - SSHv2 library for Java\nJeroen van Erp\n:sshj_groupid: com.hierynomus\n:sshj_version: 0.38.0\n:source-highlighter: pygments\n\nimage:https://github.com/hierynomus/sshj/actions/workflows/gradle.yml/badge.svg[link=\"https://github.com/hierynomus/sshj/actions/workflows/gradle.yml\"]\nimage:https://app.codacy.com/project/badge/Grade/2c8a5a67c6a54ed89c9a699fd6b27305[\"Codacy Grade\", link=\"https://app.codacy.com/gh/hierynomus/sshj\"]\nimage:https://codecov.io/gh/hierynomus/sshj/branch/master/graph/badge.svg[\"codecov\", link=\"https://codecov.io/gh/hierynomus/sshj\"]\nimage:http://www.javadoc.io/badge/com.hierynomus/sshj.svg?color=blue[\"JavaDocs\", link=\"http://www.javadoc.io/doc/com.hierynomus/sshj\"]\nimage:https://maven-badges.herokuapp.com/maven-central/com.hierynomus/sshj/badge.svg[\"Maven Central\",link=\"https://maven-badges.herokuapp.com/maven-central/com.hierynomus/sshj\"]\n\nWARNING: SSHJ versions up to and including 0.37.0 are vulnerable to https://nvd.nist.gov/vuln/detail/CVE-2023-48795[CVE-2023-48795 - Terrapin]. Please upgrade to 0.38.0 or higher.\n\nTo get started, have a look at one of the examples. Hopefully you will find the API pleasant to work with :)\n\n== Getting SSHJ\n\nTo get SSHJ, you have two options:\n\n. Add a dependency to SSHJ to your project.\n. Build SSHJ yourself.\n\nAnd, if you want, you can also run the SSHJ examples.\n\nBinary releases of SSHJ are not provided here, but you can download it http://search.maven.org/#artifactdetails%7C{sshj_groupid}%7Csshj%7C{sshj_version}%7Cjar[straight from the Maven Central repository] if you want to.\n\n== Depending on SSHJ\nIf you're building your project using Maven, you can add the following dependency to the `pom.xml`:\n\n[source,xml,subs=\"verbatim,attributes\"]\n----\n<dependency>\n  <groupId>{sshj_groupid}</groupId>\n  <artifactId>sshj</artifactId>\n  <version>{sshj_version}</version>\n</dependency>\n----\n\nIf your project is built using another build tool that uses the Maven Central repository, translate this dependency into the format used by your build tool.\n\n== Building SSHJ\n. Clone the SSHJ repository.\n. Ensure you have Java6 installed with the http://www.oracle.com/technetwork/java/javase/downloads/jce-6-download-429243.html[Unlimited strength Java Cryptography Extensions (JCE)].\n. Run the command `./gradlew clean build`.\n\n== Running the examples\nIn the `examples` directory, there is a separate Maven project that shows how the library can be used in some sample cases. If you want to run them, follow these guidelines:\n\n. Install http://maven.apache.org/[Maven 2.2.1] or up.\n. Clone the SSHJ repository.\n. Go into the `examples` directory and run the command `mvn eclipse:eclipse`.\n. Import the `examples` project into Eclipse.\n. Change the login details in the example classes (address, username and password) and run them!\n\n== Features of the library include:\n\n* reading known_hosts files for host key verification\n* publickey, password and keyboard-interactive authentication\n* command, subsystem and shell channels\n* local and remote port forwarding\n* scp + complete sftp version 0-3 implementation\n\n== Supported algorithms\nImplementations / adapters for the following algorithms are included:\n\nciphers::\n  `aes{128,192,256}-{cbc,ctr}`, `aes{128,256}-gcm@openssh.com`, `blowfish-{cbc,ctr}`, `chacha20-poly1305@openssh.com`, `3des-{cbc,ctr}`, `twofish{128,192,256}-{cbc,ctr}`, `twofish-cbc`, `serpent{128,192,256}-{cbc,ctr}`, `idea-{cbc,ctr}`, `cast128-{cbc,ctr}`, `arcfour`, `arcfour{128,256}`\n  SSHJ also supports the following extended (non official) ciphers: `camellia{128,192,256}-{cbc,ctr}`, `camellia{128,192,256}-{cbc,ctr}@openssh.org`\n\nkey exchange::\n  `diffie-hellman-group1-sha1`, `diffie-hellman-group14-sha1`,\n  `diffie-hellman-group14-sha256`, `diffie-hellman-group15-sha512`, `diffie-hellman-group16-sha512`, `diffie-hellman-group17-sha512`, `diffie-hellman-group18-sha512`\n  `diffie-hellman-group-exchange-sha1`, `diffie-hellman-group-exchange-sha256`,\n  `ecdh-sha2-nistp256`, `ecdh-sha2-nistp384`, `ecdh-sha2-nistp521`, `curve25519-sha256@libssh.org`\n\n  SSHJ also supports the following extended (non official) key exchange algorithms:\n  `diffie-hellman-group14-sha256@ssh.com`, `diffie-hellman-group15-sha256`, `diffie-hellman-group15-sha256@ssh.com`, `diffie-hellman-group15-sha384@ssh.com`,\n  `diffie-hellman-group16-sha256`, `diffie-hellman-group16-sha384@ssh.com`, `diffie-hellman-group16-sha512@ssh.com`, `diffie-hellman-group18-sha512@ssh.com`\n\nsignatures::\n  `ssh-rsa`, `ssh-dss`, `ecdsa-sha2-nistp256`, `ecdsa-sha2-nistp384`, `ecdsa-sha2-nistp521`, `ssh-ed25519`, `ssh-rsa2-256`, `ssh-rsa2-512`\n\nmac::\n  `hmac-md5`, `hmac-md5-96`, `hmac-sha1`, `hmac-sha1-96`, `hmac-sha2-256`, `hmac-sha2-512`, `hmac-ripemd160`, `hmac-ripemd160@openssh.com`\n  `hmac-md5-etm@openssh.com`, `hmac-md5-96-etm@openssh.com`, `hmac-sha1-etm@openssh.com`, `hmac-sha1-96-etm@openssh.com`, `hmac-sha2-256-etm@openssh.com`, `hmac-sha2-512-etm@openssh.com`, `hmac-ripemd160-etm@openssh.com`\n\ncompression::\n  `zlib` and `zlib@openssh.com` (delayed zlib)\n\nprivate key files::\n   `pkcs5`, `pkcs8`, `openssh-key-v1`, `ssh-rsa-cert-v01@openssh.com`, `ssh-dsa-cert-v01@openssh.com`\n\nIf you need something that is not included, it shouldn't be too hard to add (do contribute it!)\n\n== Comparing to other implementations\nhttp://ssh-comparison.quendi.de/comparison.html[SSH Implementation Comparison]\n\n== Dependencies\n\n- Java 8 or higher\n- https://www.slf4j.org/[SLF4J 2.0.0]\n- https://www.bouncycastle.org[Bouncy Castle]\n\n\n== Reporting bugs\nIssue tracker: https://github.com/hierynomus/sshj/issues\n\n== Contributing\nFork away!\n\n== Release history\nSSHJ 0.38.0 (2024-01-02)::\n* Mitigated CVE-2023-48795 - Terrapin\n  * Merged https://github.com/hierynomus/sshj/pull/917[#917]: Implement OpenSSH strict key exchange extension\n* Merged https://github.com/hierynomus/sshj/pull/903[#903]: Fix for writing known hosts key string\n* Merged https://github.com/hierynomus/sshj/pull/913[#913]: Prevent remote port forwarding buffers to grow without bounds\n* Moved tests to JUnit5\n* Merged https://github.com/hierynomus/sshj/pull/827[#827]: Fallback to posix-rename@openssh.com extension if available\n* Merged https://github.com/hierynomus/sshj/pull/904[#904]: Add ChaCha20-Poly1305 support for OpenSSH keys\nSSHJ 0.37.0 (2023-10-11)::\n* Merged https://github.com/hierynomus/sshj/pull/899[#899]: Add support for AES-GCM OpenSSH private keys\n* Merged https://github.com/hierynomus/sshj/pull/901[#901]: Fix ZLib compression bug\n* Merged https://github.com/hierynomus/sshj/pull/898[#898]: Improved malformed file handling for OpenSSH private keys\nSSHJ 0.36.0 (2023-09-04)::\n* Rewrote Integration tests to JUnit5\n* Merged https://github.com/hierynomus/sshj/pull/851[#851]: Fix race condition in key exchange causing intermittent SSH_MSG_UNIMPLEMENTED\n* Merged https://github.com/hierynomus/sshj/pull/861[#861]: Add DefaultSecurityProviderConfig with has BouncyCastle disabled\n* Merged https://github.com/hierynomus/sshj/pull/881[#881]: Rewrote test classes to JUnit Jupiter engine\n* Merged https://github.com/hierynomus/sshj/pull/880[#880]: Removed Java 7 backport Socket utilities\n* Merged https://github.com/hierynomus/sshj/pull/879[#879]: Replaced custom Base64 with java.util.Base64\n* Merged https://github.com/hierynomus/sshj/pull/852[#852]: Removed unused bcrypt password hashing methods\n* Merged https://github.com/hierynomus/sshj/pull/874[#874]: Java 8 minimum version + dependency upgrades\n* Merged https://github.com/hierynomus/sshj/pull/876[#876]: Change `newStatefulSFTPClient` to return `StatefulSFTPClient`\n* Merged https://github.com/hierynomus/sshj/pull/860[#860]: Upgrade to Gradle 7.6.1\n* Merged https://github.com/hierynomus/sshj/pull/838[#838]: Replaced Curve25519 class with X25519 Key agreement\n* Merged https://github.com/hierynomus/sshj/pull/772[#772]: Remove dependency on jzlib\nSSHJ 0.35.0 (2023-01-30)::\n* Merged https://github.com/hierynomus/sshj/pull/835[#835]: TimeoutException message improved\n* Merged https://github.com/hierynomus/sshj/pull/815[#815]: Support authPassword on FreeBSD\n* Merged https://github.com/hierynomus/sshj/pull/813[#813]: Prevent `CHANNEL_CLOSE` between isOpen and write call.\n* Merged https://github.com/hierynomus/sshj/pull/811[#811]: Add `Transport.isKeyExchangeREquired` to prevent unnecessary KEXINIT\nSSHJ 0.34.0 (2022-08-10)::\n* Merged https://github.com/hierynomus/sshj/pull/743[#743]: Use default client credentials for AuthGssApiWithMic\n* Merged https://github.com/hierynomus/sshj/pull/801[#801]: Restore thread interrupt status after catching InterruptedException\n* Merged https://github.com/hierynomus/sshj/pull/793[#793]: Merge PKCS5 and PKCS8 classes\n* Upgraded dependencies SLF4J (1.7.36) and Logback (1.2.11)\n* Merged https://github.com/hierynomus/sshj/pull/791[#791]: Update KeepAlive examples\n* Merged https://github.com/hierynomus/sshj/pull/775[#775]: Add SFTP resume support\nSSHJ 0.33.0 (2022-04-22)::\n* Upgraded dependencies BouncyCastle (1.70)\n* Merged https://github.com/hierynomus/sshj/pull/687[#687]: Correctly close connection when remote closes connection.\n* Merged https://github.com/hierynomus/sshj/pull/741[#741]: Add support for testcontainers in test setup to test more scenarios\n* Merged https://github.com/hierynomus/sshj/pull/733[#733]: Send correct key proposal if client knows CA key\n* Merged https://github.com/hierynomus/sshj/pull/746[#746]: Fix bug in reading Putty private key file with passphrase\n* Merged https://github.com/hierynomus/sshj/pull/742[#742]: Use Config.keyAlgorithms to determine rsa-sha2 support\n* Merged https://github.com/hierynomus/sshj/pull/754[#754]: Use SFTP protocol version to set FXP rename flags conditionally\n* Merged https://github.com/hierynomus/sshj/pull/752[#752]: Correctly start and terminate KeepAlive thread\n* Merged https://github.com/hierynomus/sshj/pull/753[#753]: Provide better thread names\n* Merged https://github.com/hierynomus/sshj/pull/724[#724]: Add parameter to limit read ahead length\n* Merged https://github.com/hierynomus/sshj/pull/763[#763]: Try all public key algorithms for a specific key type\n* Merged https://github.com/hierynomus/sshj/pull/756[#756]: Remove deprecated proxy connect methods\n* Merged https://github.com/hierynomus/sshj/pull/770[#770]: Add support for `ed25519` `aes-128-cbc` keys\n* Merged https://github.com/hierynomus/sshj/pull/773[#773]: Fix NPE when reading empty OpenSSHKeyV1KeyFile\n* Merged https://github.com/hierynomus/sshj/pull/777[#777]: Don't request too many read-ahead packets\n\nSSHJ 0.32.0 (2021-10-12)::\n* Send EOF on channel close (Fixes https://github.com/hierynomus/sshj/issues/143[#143], https://github.com/hierynomus/sshj/issues/496[#496], https://github.com/hierynomus/sshj/issues/553[#553], https://github.com/hierynomus/sshj/issues/554[#554])\n* Merged https://github.com/hierynomus/sshj/pull/726[#726]: Parse OpenSSH v1 keys with full CRT information present\n* Merged https://github.com/hierynomus/sshj/pull/721[#721]: Prefer known host key algorithm for host key verification\n* Merged https://github.com/hierynomus/sshj/pull/716[#716], https://github.com/hierynomus/sshj/pull/729[#729] and https://github.com/hierynomus/sshj/pull/730[#730]: Add full support for PuTTY v3 key files.\n* Merged https://github.com/hierynomus/sshj/pull/708[#708] and https://github.com/hierynomus/sshj/pull/713[#71]: Add support for PKCS#8 private keys\n* Merged https://github.com/hierynomus/sshj/pull/703[#703]: Support host certificate keys\n* Upgraded dependencies BouncyCastle (1.69), SLF4j (1.7.32), Logback (1.2.6), asn-one (0.6.0)\n* Merged https://github.com/hierynomus/sshj/pull/702[#702]: Support Public key authentication using certificates\n* Merged https://github.com/hierynomus/sshj/pull/691[#691]: Fix for writing negative unsigned integers to Buffer\n* Merged https://github.com/hierynomus/sshj/pull/682[#682]: Support for chacha20-poly1305@openssh.com cipher\n* Merged https://github.com/hierynomus/sshj/pull/680[#680]: Configurable preserve mtimes for SCP transfers\n\nSSHJ 0.31.0 (2021-02-08)::\n* Bump dependencies (asn-one 0.5.0, BouncyCastle 1.68, slf4j-api 1.7.30)\n* Merged https://github.com/hierynomus/sshj/pull/660[#660]: Support ED25519 and ECDSA keys in PuTTY format\n* Merged https://github.com/hierynomus/sshj/pull/655[#655]: Bump BouncyCastle due to CVE\n* Merged https://github.com/hierynomus/sshj/pull/653[#653]: Make Parameters class useable as HashMap key\n* Merged https://github.com/hierynomus/sshj/pull/647[#647]: Reduce log level for identification parser\n* Merged https://github.com/hierynomus/sshj/pull/630[#630]: Add support for `aes128-gcm@openssh.com` and `aes256-gcm@openssh.com` ciphers\n* Merged https://github.com/hierynomus/sshj/pull/636[#636]: Improved Android compatibility\n* Merged https://github.com/hierynomus/sshj/pull/627[#627]: Prevent key leakage\nSSHJ 0.30.0 (2020-08-17)::\n* **BREAKING CHANGE**: Removed `setSignatureFactories` and `getSignatureFactories` from the Config and switched them for `getKeyAlgorithms` and `setKeyAlgorithms`\n* Fixed https://github.com/hierynomus/sshj/pull/588[#588]: Add support for `ssh-rsa2-256` and `ssh-rsa2-512` signatures\n* Merged https://github.com/hierynomus/sshj/pull/579[#579]: Fix NPE in OpenSSHKnownHosts\n* Merged https://github.com/hierynomus/sshj/pull/587[#587]: Add passwordfinder retry for OpenSSHKeyV1KeyFile\n* Merged https://github.com/hierynomus/sshj/pull/586[#586]: Make KeyType compatible with Android Store\n* Merged  https://github.com/hierynomus/sshj/pull/593[#593]: Change `UserAuth.getAllowedMethods()` to Collection return type\n* Merged  https://github.com/hierynomus/sshj/pull/595[#595]: Allow reading arbitrary length keys\n* Merged  https://github.com/hierynomus/sshj/pull/591[#591]: Allow to query SFTP extensions\n* Merged  https://github.com/hierynomus/sshj/pull/603[#603]: Add method to create Stateful SFTP client\n* Merged  https://github.com/hierynomus/sshj/pull/605[#605]: Use Daemon threads to avoid blocking JVM shutdown\n* Merged  https://github.com/hierynomus/sshj/pull/606[#606]: Always use the JCERandom RNG by default\n* Merged  https://github.com/hierynomus/sshj/pull/609[#609]: Clear passphrase after use to prevent security issues\n* Merged  https://github.com/hierynomus/sshj/pull/618[#618]: Fix localport of DirectConnection for use with OpenSSH > 8.0\n* Merged  https://github.com/hierynomus/sshj/pull/619[#619]: Upgraded BouncyCastle to 1.66\n* Merged  https://github.com/hierynomus/sshj/pull/622[#622]: Send 'ext-info-c' with KEX algorithms\n* Merged  https://github.com/hierynomus/sshj/pull/623[#623]: Fix transport encoding of `nistp521` signatures\n* Merged  https://github.com/hierynomus/sshj/pull/607[#607]: Fix mathing pubkeys to key algorithms\n* Merged  https://github.com/hierynomus/sshj/pull/602[#602]: Fix RSA certificate key determination\nSSHJ 0.27.0 (2019-01-24)::\n* Fixed https://github.com/hierynomus/sshj/issues/415[#415]: Fixed wrongly prefixed '/' to path in SFTPClient.mkdirs\n* Added support for ETM (Encrypt-then-Mac) MAC algorithms.\n* Fixed https://github.com/hierynomus/sshj/issues/454[#454]: Added missing capacity check for Buffer.putUint64\n* Fixed https://github.com/hierynomus/sshj/issues/466[#466]: Added lock timeout for remote action to prevent hanging\n* Fixed https://github.com/hierynomus/sshj/issues/470[#470]: Made EdDSA the default (first) signature factory\n* Fixed https://github.com/hierynomus/sshj/issues/467[#467]: Added AES256-CBC as cipher mode in openssh-key-v1 support\n* Fixed https://github.com/hierynomus/sshj/issues/464[#464]: Enabled curve25519-sha256@openssh.org in DefaultConfig\n* Fixed https://github.com/hierynomus/sshj/issues/472[#472]: Handle server initiated global requests\n* Fixed https://github.com/hierynomus/sshj/issues/485[#485]: Added support for all keytypes to openssh-key-v1 keyfiles.\nSSHJ 0.26.0 (2018-07-24)::\n* Fixed https://github.com/hierynomus/sshj/issues/413[#413]: Use UTF-8 for PrivateKeyFileResource\n* Fixed https://github.com/hierynomus/sshj/issues/427[#427]: Support encrypted ed25519 openssh-key-v1 files\n* Upgraded BouncyCastle to 1.60\n* Added support for hmac-ripemd160@openssh.com MAC\nSSHJ 0.24.0 (2018-04-04)::\n* Added support for hmac-ripemd160\n* Fixed https://github.com/hierynomus/sshj/issues/382[#382]: Fixed escaping in WildcardHostmatcher\n* Added integration testsuite using Docker against OpenSSH\n* Fixed https://github.com/hierynomus/sshj/issues/187[#187]: Fixed length bug in Buffer.putString\n* Fixed https://github.com/hierynomus/sshj/issues/405[#405]: Continue host verification if first hostkey does not match.\nSSHJ 0.23.0 (2017-10-13)::\n* Merged https://github.com/hierynomus/sshj/pull/372[#372]: Upgrade to 'net.i2p.crypto:eddsa:0.2.0'\n* Fixed https://github.com/hierynomus/sshj/issues/355[#355] and https://github.com/hierynomus/sshj/issues/354[#354]: Correctly decode signature bytes\n* Fixed https://github.com/hierynomus/sshj/issues/365[#365]: Added support for new-style OpenSSH fingerprints of server keys\n* Fixed https://github.com/hierynomus/sshj/issues/356[#356]: Fixed key type detection for ECDSA public keys\n* Made SSHJ Java9 compatible\nSSHJ 0.22.0 (2017-08-24)::\n* Fixed https://github.com/hierynomus/sshj/pull/341[#341]: Fixed path walking during recursive copy\n* Merged https://github.com/hierynomus/sshj/pull/338[#338]: Added ConsolePasswordFinder to read password from stdin\n* Merged https://github.com/hierynomus/sshj/pull/336[#336]: Added support for ecdsa-sha2-nistp384 and ecdsa-sha2-nistp521 signatures\n* Fixed https://github.com/hierynomus/sshj/issues/331[#331]: Added support for wildcards in known_hosts file\nSSHJ 0.21.1 (2017-04-25)::\n* Merged https://github.com/hierynomus/sshj/pull/322[#322]: Fix regression from 40f956b (invalid length parameter on outputstream)\nSSHJ 0.21.0 (2017-04-14)::\n* Merged https://github.com/hierynomus/sshj/pull/319[#319]: Added support for `ssh-rsa-cert-v01@openssh.com` and `ssh-dsa-cert-v01@openssh.com` certificate key files\n* Upgraded Gradle to 3.4.1\n* Merged https://github.com/hierynomus/sshj/pull/305[#305]: Added support for custom string encoding\n* Fixed https://github.com/hierynomus/sshj/issues/312[#312]: Upgraded BouncyCastle to 1.56\nSSHJ 0.20.0 (2017-02-09)::\n* Merged https://github.com/hierynomus/sshj/pull/294[#294]: Reference ED25519 by constant instead of name\n* Merged https://github.com/hierynomus/sshj/pull/293[#293], https://github.com/hierynomus/sshj/pull/295[#295] and https://github.com/hierynomus/sshj/pull/301[#301]: Fixed OSGi packaging\n* Added new Diffie Hellman groups 15-18 for stronger KeyExchange algorithms\nSSHJ 0.19.1 (2016-12-30)::\n* Enabled PKCS5 Key files in DefaultConfig\n* Merged https://github.com/hierynomus/sshj/pull/291[#291]: Fixed sshj.properties loading and chained exception messages\n* Merged https://github.com/hierynomus/sshj/pull/284[#284]: Correctly catch interrupt in keepalive thread\n* Fixed https://github.com/hierynomus/sshj/issues/292[#292]: Pass the configured RandomFactory to Diffie Hellman KEX\n* Fixed https://github.com/hierynomus/sshj/issues/256[#256]: SSHJ now builds if no git repository present\n* LocalPortForwarder now correctly interrupts its own thread on close()\nSSHJ 0.19.0 (2016-11-25)::\n* Fixed https://github.com/hierynomus/sshj/issues/276[#276]: Add support for ed-25519 and new OpenSSH key format\n* Fixed https://github.com/hierynomus/sshj/issues/280[#280]: Read version from a generated sshj.properties file to correctly output version during negotiation\nSSHJ 0.18.0 (2016-09-30)::\n* Fixed Android compatibility\n* Upgrade to Gradle 3.0\n* Merged https://github.com/hierynomus/sshj/pull/271[#271]: Load known_hosts without requiring BouncyCastle\n* Merged https://github.com/hierynomus/sshj/pull/269[#269]: Brought back Java6 support by popular demand\n* Merged https://github.com/hierynomus/sshj/pull/267[#267]: Added support for per connection logging (Fixes https://github.com/hierynomus/sshj/issues/264[#264])\n* Merged https://github.com/hierynomus/sshj/pull/262[#262], https://github.com/hierynomus/sshj/pull/265[#265] and https://github.com/hierynomus/sshj/pull/266[#266]: Added PKCS5 key file support\n* Fixed toString of sftp FileAttributes (Fixes https://github.com/hierynomus/sshj/pull/258[#258])\n* Fixed https://github.com/hierynomus/sshj/issues/255[#255]: No longer depending on 'privately marked' classes in `net.i2p.crypto.eddsa.math` package, fixes OSGI dependencies\nSSHJ 0.17.2 (2016-07-07)::\n* Treating SSH Server identification line ending in '\\n' instead of '\\r\\n' leniently.\nSSHJ 0.17.1 (2016-07-06)::\n* Improved parsing of the SSH Server identification. Too long header lines now no longer break the protocol.\nSSHJ 0.17.0 (2016-07-05)::\n* *Introduced breaking change in SFTP copy behaviour*: Previously an SFTP copy operation would behave differently if both source and target were folders with different names.\n  In this case instead of copying the contents of the source into the target directory, the directory itself was copied as a sub directory of the target directory.\n  This behaviour has been removed in favour of the default behaviour which is to copy the contents of the source into the target. Bringing the behaviour in line with how SCP works.\n* Fixed https://github.com/hierynomus/sshj/issues/252[#252] (via: https://github.com/hierynomus/sshj/pull/253[#253]): Same name subdirs are no longer merged by accident\nSSHJ 0.16.0 (2016-04-11)::\n* Fixed https://github.com/hierynomus/sshj/issues/239[#239]: Remote port forwards did not work if you used the empty string as address, or a catch-all address.\n* Fixed https://github.com/hierynomus/sshj/issues/242[#242]: Added OSGI headers to sources jar manifest\n* Fixed https://github.com/hierynomus/sshj/issues/236[#236]: Remote Port forwarding with dynamic port allocation fails with BufferUnderflowException\n* Upgraded gradle distribution to 2.12\n* Closed https://github.com/hierynomus/sshj/issues/234[#234]: Dropped Java6 support (0.15.0 was already Java6 incompatible due to Java7 dependency)\n* Fixed https://github.com/hierynomus/sshj/issues/118[#118]: Added configuration switch for waiting on a server ident before sending the client ident.\n* Fixed https://github.com/hierynomus/sshj/issues/114[#114]: Added javadoc that you always need to call close() on a Command before inspecting the exit codes.\n* Fixed https://github.com/hierynomus/sshj/issues/237[#237]: Fixed race condition if a `hostkeys-00@openssh.com` global request is received directly after a successful auth.\nSSHJ 0.15.0 (2015-11-20)::\n* Fixed https://github.com/hierynomus/sshj/issues/220[#220]: Added support for `ssh-ed25519` host keys\n* Fixed https://github.com/hierynomus/sshj/issues/225[#225]: Fixed bug in ECDSA fingerprint calculation that sometimes produced an incorrect fingerprint\n* Added `arcfour` Stream Ciphers from RFC4253 and RFC4345\n* Added all Block Ciphers from RFC4344 and RFC4253\nSSHJ 0.14.0 (2015-11-04)::\n* Fixed https://github.com/hierynomus/sshj/issues/171[#171]: Added support for `curve25519-sha256@libssh.org` key exchange algorithm\n* Added support for `ecdh-sha2-nistp256`, `ecdh-sha2-nistp384` and  `ecdh-sha2-nistp521` key exchange algorithms\n* Fixed https://github.com/hierynomus/sshj/issues/167[#167]: Added support for `diffie-hellman-group-exchange-sha1` and `diffie-hellman-group-exchange-sha256` key exchange methods\n* Fixed https://github.com/hierynomus/sshj/issues/212[#212]: Configure path escaping to enable shell expansion to work correctly\n* Merged https://github.com/hierynomus/sshj/issues/210[#210]: RemoteFileInputStream.skip returns wrong value (Fixes https://github.com/hierynomus/sshj/issues/209[#209])\n* Merged https://github.com/hierynomus/sshj/issues/208[#208]: Added SCP bandwidth limitation support\n* Merged https://github.com/hierynomus/sshj/issues/211[#211]: Made keyfile format detection more robust\nSSHJ 0.13.0 (2015-08-18)::\n* Merged https://github.com/hierynomus/sshj/issues/199[#199]: Fix for IndexOutOfBoundsException in ReadAheadRemoteFileInputStream, fixes https://github.com/hierynomus/sshj/issues/183[#183]\n* Merged https://github.com/hierynomus/sshj/issues/195[#195]: New authentication supported: `gssapi-with-mic`\n* Merged https://github.com/hierynomus/sshj/issues/201[#201]: New option to verify negotiated key exchange algorithms\n* Merged https://github.com/hierynomus/sshj/issues/196[#196]: Fix for looking up complete hostname in known hosts file\nSSHJ 0.12.0 (2015-04-14)::\n* Added support for HTTP proxies when running JDK6 or JDK7, fixes: https://github.com/hierynomus/sshj/issues/170[#170]\n* Merged https://github.com/hierynomus/sshj/issues/186[#186]: Fix for detecting end-of-stream\n* Compiling to JDK6, fixes https://github.com/hierynomus/sshj/issues/179[#179] and https://github.com/hierynomus/sshj/issues/185[#185]\n* Correctly close socket and channel when LocalPortForwarder fails to open and start the channel (Fixes https://github.com/hierynomus/sshj/issues/175[#175] and https://github.com/hierynomus/sshj/issues/176[#176])\n* Merged https://github.com/hierynomus/sshj/issues/181[#181]: Invalid write packet length when reading with offset (Fixes https://github.com/hierynomus/sshj/issues/180[#180])\nSSHJ 0.11.0 (2015-01-23)::\n* New maven coordinates `com.hierynomus:sshj:0.11.0` as https://github.com/hierynomus[@hierynomus] took over as maintainer of SSHJ\n* Migrated build system to Gradle 2.2.1\n* Merged https://github.com/hierynomus/sshj/issues/150[#150]: Fix for incorrect file handle on some SSH servers, fixes: https://github.com/hierynomus/sshj/issues/54[#54], https://github.com/hierynomus/sshj/issues/119[#119], https://github.com/hierynomus/sshj/issues/168[#168], https://github.com/hierynomus/sshj/issues/169[#169]\n* Made `jzlib` optional in OSGi bundling, fixes: https://github.com/hierynomus/sshj/issues/162[#162]\n* Improved some log levels, fixes: https://github.com/hierynomus/sshj/issues/161[#161]\n* Merged https://github.com/hierynomus/sshj/issues/156[#156], https://github.com/hierynomus/sshj/issues/164[#164], https://github.com/hierynomus/sshj/issues/165[#165]: Fixed block sizes for `hmac-sha2-256` and `hmac-sha2-512`\n* Merged https://github.com/hierynomus/sshj/issues/141[#141]: Add proxy support\n* Merged https://github.com/hierynomus/sshj/issues/157[#157], https://github.com/hierynomus/sshj/issues/163[#163]: Doc and build fixes\n* Upgraded BouncyCastle to 1.51, fixes: https://github.com/hierynomus/sshj/issues/142[#142]\n* Implemented keep-alive with connection drop detection, fixes https://github.com/hierynomus/sshj/issues/166[#166]\n"
        },
        {
          "name": "build-publishing.gradle",
          "type": "blob",
          "size": 4.1845703125,
          "content": "apply plugin: \"java\"\napply plugin: \"maven-publish\"\napply plugin: \"signing\"\n\ngroup = \"nl.javadude\"\nversion = \"0.10.1-SNAPSHOT\"\n\nrepositories {\n  mavenCentral()\n  mavenLocal()\n}\n\nconfigurations {\n  compile {\n    transitive = false\n  }\n  pom\n}\n\ndef bouncycastleVersion = \"1.67\"\n\ndependencies {\n  compile \"org.slf4j:slf4j-api:1.7.7\"\n  compile \"org.bouncycastle:bcprov-jdk15on:$bouncycastleVersion\"\n  compile \"org.bouncycastle:bcpkix-jdk15on:$bouncycastleVersion\"\n\n  testCompile \"junit:junit:4.11\"\n  testCompile \"org.mockito:mockito-core:1.9.5\"\n  testCompile \"org.apache.sshd:sshd-core:0.11.0\"\n  testRuntime \"ch.qos.logback:logback-classic:1.1.2\"\n}\n\ntask javadocJar(type: Jar) {\n  classifier = 'javadoc'\n  from javadoc\n}\n\ntask sourcesJar(type: Jar) {\n  classifier = 'sources'\n  from sourceSets.main.allSource\n}\n\ntask generatePom(type: GenerateMavenPom) {\n  destination = file(\"$buildDir/generated-pom.xml\")\n}\n\nartifacts {\n  archives javadocJar, sourcesJar\n  pom generatePom.destination\n}\n\nsigning {\n  sign configurations.archives\n}\n\ntask signPom(type: Sign) {\n  sign configurations.pom\n}\n\ndef getSignatureFiles = {\n  def allFiles = project.tasks.signArchives.signatureFiles.collect { it }\n  def signedSources = allFiles.find { it.name.contains('-sources') }\n  def signedJavadoc = allFiles.find { it.name.contains('-javadoc') }\n  def signedJar = (allFiles - [signedSources, signedJavadoc])[0]\n  return [\n    [archive: signedSources, classifier: 'sources', extension: 'jar.asc'],\n    [archive: signedJavadoc, classifier: 'javadoc', extension: 'jar.asc'],\n    [archive: signedJar,     classifier: null,      extension: 'jar.asc']\n  ]\n}\n\ndef getPomSignature = {\n    return project.tasks.signPom.signatureFiles.collect{it}[0]\n}\n\n\npublishing {\n  publications {\n    gpgJars(MavenPublication) {\n      getSignatureFiles().each {signature ->\n        artifact (signature.archive) {\n          classifier = signature.classifier\n          extension  = signature.extension\n        }\n      }\n    }\n    gpgPom(MavenPublication) {\n      artifact(getPomSignature()) {\n        classifier = null\n        extension = \"pom.asc\"\n      }\n    }\n    maven(MavenPublication) {\n      from components.java\n      artifact (javadocJar) {\n        classifier = 'javadoc'\n      }\n\n      artifact (sourcesJar) {\n        classifier = 'sources'\n      }\n\n      pom.withXml {\n        asNode().children().last() + {\n          resolveStrategy = Closure.DELEGATE_FIRST\n          name \"sshj\"\n          description \"SSHv2 library for Java\"\n          url \"https://github.com/hierynomus/sshj\"\n          inceptionYear \"2009\"\n\n          issueManagement {\n            system \"github\"\n            url \"https://github.com/hierynomus/sshj/issues\"\n          }\n\n          scm {\n            connection \"scm:git:git://github.com/hierynomus/sshj.git\"\n            developerConnection \"scm:git:git@github.com:hierynomus/sshj.git\"\n            url \"https://github.com/hierynomus/sshj.git\"\n          }\n\n          licenses {\n            license {\n              name \"Apache 2\"\n              url \"http://www.apache.org/licenses/LICENSE-2.0.txt\"\n              distribution \"repo\"\n            }\n          }\n\n          developers {\n            developer {\n              id \"hierynomus\"\n              name \"Jeroen van Erp\"\n              email \"jeroen@javadude.nl\"\n              roles {\n                role \"Lead developer\"\n              }\n            }\n            developer {\n              id \"shikhar\"\n              name \"Shikhar Bhushan\"\n              email \"shikhar@schmizz.net\"\n              url \"http://schmizz.net\"\n              roles {\n                role \"Previous lead developer\"\n              }\n            }\n            developer {\n              id \"iterate\"\n              name \"David Kocher\"\n              email \"dkocher@iterate.ch\"\n              organization \"iterage GmbH\"\n              organizationUrl \"https://iterate.ch\"\n              roles {\n                role \"Developer\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  repositories {\n    maven {\n      url \"file:/${project.projectDir}/artifacts\"\n    }\n  }\n}\n\nproject.afterEvaluate { p ->\n  p.tasks.publishGpgPomPublicationToMavenRepository.dependsOn(\"generatePom\", \"signPom\")\n}\n\ngeneratePom.configure {\n  pom = publishing.publications.getByName(\"maven\").pom\n}\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 8.28125,
          "content": "plugins {\n  id \"java\"\n  id \"jvm-test-suite\"\n  id \"groovy\"\n  id \"jacoco\"\n  id \"com.github.blindpirate.osgi\" version '0.0.6'\n  id \"maven-publish\"\n  id \"signing\"\n  id 'pl.allegro.tech.build.axion-release' version '1.15.3'\n  id \"com.github.hierynomus.license\" version \"0.16.1\"\n  id \"com.bmuschko.docker-remote-api\" version \"9.2.1\"\n  id 'ru.vyarus.github-info' version '1.5.0'\n  id \"io.github.gradle-nexus.publish-plugin\" version \"1.3.0\"\n}\n\ngroup = \"com.hierynomus\"\next.moduleName = \"${project.group}.${project.name}\"\n\ndefaultTasks \"build\"\n\nrepositories {\n  mavenCentral()\n}\n\nscmVersion {\n  tag {\n    prefix = 'v'\n    versionSeparator = ''\n  }\n  hooks {\n    pre 'fileUpdate', [file: 'README.adoc', pattern: { v, c -> /:sshj_version: .*/}, replacement: { v, c -> \":sshj_version: $v\" }]\n    pre 'commit'\n  }\n}\n\nproject.version = scmVersion.version\n\ncompileJava {\n  options.release = 8\n}\n\nconfigurations.implementation.transitive = false\n\ndef bouncycastleVersion = \"1.78.1\"\ndef sshdVersion = \"2.12.1\"\n\ndependencies {\n  implementation \"org.slf4j:slf4j-api:2.0.13\"\n  implementation \"org.bouncycastle:bcprov-jdk18on:$bouncycastleVersion\"\n  implementation \"org.bouncycastle:bcpkix-jdk18on:$bouncycastleVersion\"\n  implementation \"com.hierynomus:asn-one:0.6.0\"\n  implementation \"net.i2p.crypto:eddsa:0.3.0\"\n}\n\nlicense {\n  header rootProject.file('LICENSE_HEADER')\n  strictCheck true\n  mapping {\n    java = 'SLASHSTAR_STYLE'\n  }\n  excludes([\n    '**/com/hierynomus/sshj/userauth/keyprovider/bcrypt/*.java',\n    '**/files/test_file_*.txt',\n  ])\n}\n\njava {\n\twithJavadocJar()\n\twithSourcesJar()\n}\n\nif (!JavaVersion.current().isJava9Compatible()) {\n  throw new GradleScriptException(\"Minimum compilation version is Java 9\")\n}\n\n// This disables the pedantic doclint feature of JDK8\nif (JavaVersion.current().isJava8Compatible()) {\n  tasks.withType(Javadoc) {\n    options.addStringOption('Xdoclint:none', '-quiet')\n  }\n}\n\ntesting {\n  suites {\n    configureEach {\n      useJUnitJupiter()\n      dependencies {\n        implementation \"org.slf4j:slf4j-api:2.0.13\"\n        implementation 'org.spockframework:spock-core:2.3-groovy-3.0'\n        implementation \"org.mockito:mockito-core:4.11.0\"\n        implementation \"org.assertj:assertj-core:3.24.2\"\n        implementation \"ru.vyarus:spock-junit5:1.2.0\"\n        implementation \"org.apache.sshd:sshd-core:$sshdVersion\"\n        implementation \"org.apache.sshd:sshd-sftp:$sshdVersion\"\n        implementation \"org.apache.sshd:sshd-scp:$sshdVersion\"\n        implementation \"ch.qos.logback:logback-classic:1.3.14\"\n        implementation 'org.glassfish.grizzly:grizzly-http-server:3.0.1'\n      }\n\n      targets {\n        all {\n          testTask.configure {\n            testLogging {\n              showStandardStreams = false\n              exceptionFormat = 'full'\n            }\n            include \"**/*Test.*\"\n            include \"**/*Spec.*\"\n            afterSuite { descriptor, result ->\n              def indicator = \"\\u001B[32m✓\\u001b[0m\"\n              if (result.failedTestCount > 0) {\n                indicator = \"\\u001B[31m✘\\u001b[0m\"\n              }\n              logger.lifecycle(\"$indicator Test ${descriptor.name}; Executed: ${result.testCount}/\\u001B[32m${result.successfulTestCount}\\u001B[0m/\\u001B[31m${result.failedTestCount}\\u001B[0m\")\n            }\n          }\n        }\n      }\n    }\n\n    test {\n      sources {\n        groovy {\n          srcDirs = ['src/test/groovy']\n        }\n      }\n    }\n\n    integrationTest(JvmTestSuite) {\n      dependencies {\n        implementation project()\n        implementation 'org.testcontainers:testcontainers:1.19.8'\n        implementation 'org.testcontainers:junit-jupiter:1.19.8'\n      }\n\n      sources {\n        java {\n          srcDirs = ['src/itest/java']\n        }\n\n        resources {\n          srcDirs = ['src/itest/resources']\n        }\n      }\n\n      targets {\n        all {\n          testTask.configure {\n            shouldRunAfter(test)\n          }\n        }\n      }\n    }\n  }\n}\n\nproject.tasks.compileGroovy.onlyIf { false }\n\ntask writeSshjVersionProperties {\n  doLast {\n    project.file(\"${project.buildDir}/resources/main\").mkdirs()\n    project.file(\"${project.buildDir}/resources/main/sshj.properties\").withWriter { w ->\n      w.append(\"sshj.version=${version}\")\n    }\n  }\n}\n\njar.dependsOn writeSshjVersionProperties\njar {\n  inputs.property(\"moduleName\", moduleName)\n  manifest {\n    attributes 'Automatic-Module-Name': moduleName\n\n    // please see http://bnd.bndtools.org/chapters/390-wrapping.html\n    instruction \"Bundle-Description\", \"SSHv2 library for Java\"\n    instruction \"Bundle-License\", \"http://www.apache.org/licenses/LICENSE-2.0.txt\"\n    instruction \"Import-Package\", \"!net.schmizz.*\"\n    instruction \"Import-Package\", \"!com.hierynomus.sshj.*\"\n    instruction \"Import-Package\", \"javax.crypto*\"\n    instruction \"Import-Package\", \"!net.i2p.crypto.eddsa.math\"\n    instruction \"Import-Package\", \"net.i2p*\"\n    instruction \"Import-Package\", \"com.jcraft.jzlib*;version=\\\"[1.1,2)\\\";resolution:=optional\"\n    instruction \"Import-Package\", \"org.slf4j*;version=\\\"[1.7,5)\\\"\"\n    instruction \"Import-Package\", \"org.bouncycastle*;resolution:=optional\"\n    instruction \"Import-Package\", \"org.bouncycastle.jce.provider;resolution:=optional\"\n    instruction \"Import-Package\", \"*\"\n    instruction \"Export-Package\", \"com.hierynomus.sshj.*;version=\\\"${project.jar.manifest.version}\\\"\"\n    instruction \"Export-Package\", \"net.schmizz.*;version=\\\"${project.jar.manifest.version}\\\"\"\n  }\n}\n\nsourcesJar {\n  manifest {\n    attributes(\n      // Add the needed OSGI attributes\n      \"Bundle-ManifestVersion\": \"2\",\n      \"Bundle-Name\": \"${project.jar.manifest.name} Source\",\n      \"Bundle-Version\": project.jar.manifest.version,\n      \"Eclipse-SourceBundle\": \"${project.jar.manifest.symbolicName};version=\\\"${project.jar.manifest.version}\\\";roots:=\\\".\\\"\",\n      \"Bundle-SymbolicName\": \"${project.jar.manifest.symbolicName}.source\"\n    )\n  }\n}\n\ngithub {\n  user 'hierynomus'\n  license 'Apache'\n}\n\npublishing {\n\tpublications {\n\t\tmaven(MavenPublication) {\n\t\t\tfrom(components.java)\n\t\t}\n\t}\n}\n\nproject.signing {\n  required { project.gradle.taskGraph.hasTask(\"release\") }\n\tsign publishing.publications.maven\n\n  if (project.hasProperty(\"signingKeyId\") || project.hasProperty(\"signingKey\")) {\n\t\tdef signingKeyId = project.findProperty(\"signingKeyId\")\n\t\tdef signingKey = project.findProperty(\"signingKey\")\n\t\tdef signingPassword = project.findProperty(\"signingPassword\")\n\t\tif (signingKeyId) {\n\t\t\tuseInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)\n\t\t} else if (signingKey) {\n\t\t\tuseInMemoryPgpKeys(signingKey, signingPassword)\n\t\t}\n\t}\n}\n\nproject.plugins.withType(MavenPublishPlugin).all {\n\tPublishingExtension publishing = project.extensions.getByType(PublishingExtension)\n\tpublishing.publications.withType(MavenPublication).all { mavenPublication ->\n\t\tmavenPublication.pom {\n\t\t\tname = \"${project.name}\"\n      description = 'SSHv2 library for Java'\n      inceptionYear = '2009'\n      url = \"https://github.com/hierynomus/${project.name}\"\n\t\t\tlicenses {\n\t\t\t\tlicense {\n\t\t\t\t\tname = \"The Apache License, Version 2.0\"\n\t\t\t\t\turl = \"https://www.apache.org/licenses/LICENSE-2.0\"\n\t\t\t\t}\n\t\t\t}\n\t\t\tdevelopers {\n\t\t\t\tdeveloper {\n\t\t\t\t\tid = \"hierynomus\"\n\t\t\t\t\tname = \"Jeroen van Erp\"\n\t\t\t\t\temail = \"jeroen@hierynomus.com\"\n\t\t\t\t}\n\t\t\t\tdeveloper {\n\t\t\t\t\tid = \"shikhar\"\n\t\t\t\t\tname = \"Shikhar Bhushan\"\n\t\t\t\t\temail = \"shikhar@schmizz.net\"\n          url = \"http://schmizz.net\"\n          roles = [\"Previous Lead developer\"]\n\t\t\t\t}\n        developer {\n          id = \"iterate\"\n          name = \"David Kocher\"\n          email = \"dkocher@iterate.ch\"\n          organization = \"iterate GmbH\"\n          organizationUrl = \"https://iterate.ch\"\n          roles = [\"Developer\"]\n        }\n\t\t\t}\n      scm {\n        url = \"https://github.com/hierynomus/${project.name}\"\n        connection = \"scm:git@github.com:hierynomus/${project.name}.git\"\n        developerConnection = \"scm:git@github.com:hierynomus/${project.name}.git\"\n      }\n\t\t}\n\t}\n}\n\nnexusPublishing {\n\trepositories {\n\t\tsonatype()    //sonatypeUsername and sonatypePassword properties are used automatically\n\t}\n\n\tconnectTimeout = Duration.ofMinutes(3)\n\tclientTimeout = Duration.ofMinutes(3)\n}\n\njacocoTestReport {\n    reports {\n        xml.required = true\n        html.required = true\n    }\n}\n\nproject.tasks.release.dependsOn([project.tasks.integrationTest, project.tasks.build])\nproject.tasks.jacocoTestReport.dependsOn(project.tasks.test)\nproject.tasks.check.dependsOn(project.tasks.jacocoTestReport)\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 7.880859375,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\nAPP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=${0##*/}\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n# Collect all arguments for the java command;\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n#     shell script including quotes and variable substitutions, so put them in\n#     double quotes to make sure that they get re-expanded; and\n#   * put everything else in single quotes, so that it's not re-expanded.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.611328125,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.025390625,
          "content": "rootProject.name = \"sshj\"\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "sshj.code-workspace",
          "type": "blob",
          "size": 0.1220703125,
          "content": "{\n\t\"folders\": [\n\t\t{\n\t\t\t\"path\": \".\"\n\t\t}\n\t],\n\t\"settings\": {\n\t\t\"java.configuration.updateBuildConfiguration\": \"automatic\",\n\t}\n}\n"
        }
      ]
    }
  ]
}