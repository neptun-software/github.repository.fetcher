{
  "metadata": {
    "timestamp": 1736708549363,
    "page": 794,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "devopshydclub/vprofile-project",
      "stars": 2499,
      "defaultBranch": "vp-rem",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 3.845703125,
          "content": "pipeline {\n    \n\tagent any\n/*\t\n\ttools {\n        maven \"maven3\"\n\t\n    }\n*/\t\n    environment {\n        NEXUS_VERSION = \"nexus3\"\n        NEXUS_PROTOCOL = \"http\"\n        NEXUS_URL = \"172.31.40.209:8081\"\n        NEXUS_REPOSITORY = \"vprofile-release\"\n\tNEXUS_REPO_ID    = \"vprofile-release\"\n        NEXUS_CREDENTIAL_ID = \"nexuslogin\"\n        ARTVERSION = \"${env.BUILD_ID}\"\n    }\n\t\n    stages{\n        \n        stage('BUILD'){\n            steps {\n                sh 'mvn clean install -DskipTests'\n            }\n            post {\n                success {\n                    echo 'Now Archiving...'\n                    archiveArtifacts artifacts: '**/target/*.war'\n                }\n            }\n        }\n\n\tstage('UNIT TEST'){\n            steps {\n                sh 'mvn test'\n            }\n        }\n\n\tstage('INTEGRATION TEST'){\n            steps {\n                sh 'mvn verify -DskipUnitTests'\n            }\n        }\n\t\t\n        stage ('CODE ANALYSIS WITH CHECKSTYLE'){\n            steps {\n                sh 'mvn checkstyle:checkstyle'\n            }\n            post {\n                success {\n                    echo 'Generated Analysis Result'\n                }\n            }\n        }\n\n        stage('CODE ANALYSIS with SONARQUBE') {\n          \n\t\t  environment {\n             scannerHome = tool 'sonarscanner4'\n          }\n\n          steps {\n            withSonarQubeEnv('sonar-pro') {\n               sh '''${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=vprofile \\\n                   -Dsonar.projectName=vprofile-repo \\\n                   -Dsonar.projectVersion=1.0 \\\n                   -Dsonar.sources=src/ \\\n                   -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/ \\\n                   -Dsonar.junit.reportsPath=target/surefire-reports/ \\\n                   -Dsonar.jacoco.reportsPath=target/jacoco.exec \\\n                   -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml'''\n            }\n\n            timeout(time: 10, unit: 'MINUTES') {\n               waitForQualityGate abortPipeline: true\n            }\n          }\n        }\n\n        stage(\"Publish to Nexus Repository Manager\") {\n            steps {\n                script {\n                    pom = readMavenPom file: \"pom.xml\";\n                    filesByGlob = findFiles(glob: \"target/*.${pom.packaging}\");\n                    echo \"${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}\"\n                    artifactPath = filesByGlob[0].path;\n                    artifactExists = fileExists artifactPath;\n                    if(artifactExists) {\n                        echo \"*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version} ARTVERSION\";\n                        nexusArtifactUploader(\n                            nexusVersion: NEXUS_VERSION,\n                            protocol: NEXUS_PROTOCOL,\n                            nexusUrl: NEXUS_URL,\n                            groupId: pom.groupId,\n                            version: ARTVERSION,\n                            repository: NEXUS_REPOSITORY,\n                            credentialsId: NEXUS_CREDENTIAL_ID,\n                            artifacts: [\n                                [artifactId: pom.artifactId,\n                                classifier: '',\n                                file: artifactPath,\n                                type: pom.packaging],\n                                [artifactId: pom.artifactId,\n                                classifier: '',\n                                file: \"pom.xml\",\n                                type: \"pom\"]\n                            ]\n                        );\n                    } \n\t\t    else {\n                        error \"*** File: ${artifactPath}, could not be found\";\n                    }\n                }\n            }\n        }\n\n\n    }\n\n\n}\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.4970703125,
          "content": "# Prerequisites\n###\n- JDK 11\n- Maven 3 or later\n- MySQL 5.6 or later\n\n# Technologies \n- Spring MVC\n- Spring Security\n- Spring Data JPA\n- Maven\n- JSP\n- MySQL\n# Database\nHere,we used Mysql DB \nMSQL DB Installation Steps for Linux ubuntu 14.04:\n- $ sudo apt-get update\n- $ sudo apt-get install mysql-server\n\nThen look for the file :\n- /src/main/resources/accountsdb\n- accountsdb.sql file is a mysql dump file.we have to import this dump to mysql db server\n- > mysql -u <user_name> -p accounts < accountsdb.sql\n\n\n"
        },
        {
          "name": "ansible",
          "type": "tree",
          "content": null
        },
        {
          "name": "files",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 157.482421875,
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 7.1396484375,
          "content": "<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>com.visualpathit</groupId>\n    <artifactId>vprofile</artifactId>\n    <packaging>war</packaging>\n    <version>v2</version>\n    <name>Visualpathit VProfile Webapp</name>\n    <url>http://maven.apache.org</url>\n    <properties>\n        <spring.version>4.2.0.RELEASE</spring.version>\n        <spring-security.version>4.0.2.RELEASE</spring-security.version>\n        <spring-data-jpa.version>1.8.2.RELEASE</spring-data-jpa.version>\n        <hibernate.version>4.3.11.Final</hibernate.version>\n        <hibernate-validator.version>5.2.1.Final</hibernate-validator.version>\n        <mysql-connector.version>5.1.36</mysql-connector.version>\n        <commons-dbcp.version>1.4</commons-dbcp.version>\n        <jstl.version>1.2</jstl.version>\n        <junit.version>4.10</junit.version>\n        <logback.version>1.1.3</logback.version>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-web</artifactId>\n            <version>${spring.version}</version>\n        </dependency>\n\t    \n        <dependency>\n            <groupId>org.springframework</groupId>\n            <artifactId>spring-webmvc</artifactId>\n            <version>${spring.version}</version>\n        </dependency>\n\t    \n        <dependency>\n            <groupId>org.springframework.security</groupId>\n            <artifactId>spring-security-web</artifactId>\n            <version>${spring-security.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.security</groupId>\n            <artifactId>spring-security-config</artifactId>\n            <version>${spring-security.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.hibernate</groupId>\n            <artifactId>hibernate-validator</artifactId>\n            <version>${hibernate-validator.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.data</groupId>\n            <artifactId>spring-data-jpa</artifactId>\n            <version>${spring-data-jpa.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>org.hibernate</groupId>\n            <artifactId>hibernate-entitymanager</artifactId>\n            <version>${hibernate.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n            <version>${mysql-connector.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>commons-dbcp</groupId>\n            <artifactId>commons-dbcp</artifactId>\n            <version>${commons-dbcp.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>javax.servlet</groupId>\n            <artifactId>jstl</artifactId>\n            <version>${jstl.version}</version>\n        </dependency>\n\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>${junit.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n\t    <groupId>org.mockito</groupId>\n    \t    <artifactId>mockito-core</artifactId>\n            <version>1.9.5</version>\n            <scope>test</scope>\n\t</dependency>\n\t<dependency>\n\t     <groupId>org.springframework</groupId>\n\t     <artifactId>spring-test</artifactId>\n\t     <version>3.2.3.RELEASE</version>\n\t     <scope>test</scope>\n\t</dependency>\n\t<dependency>\n\t     <groupId>javax.servlet</groupId>\n\t     <artifactId>javax.servlet-api</artifactId>\n\t     <version>3.1.0</version>\n\t     <scope>provided</scope>\n\t</dependency>\t\t\n        <dependency>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n            <version>${logback.version}</version>\n        </dependency>\n        <dependency>\n    \t    <groupId>org.hamcrest</groupId>\n    \t    <artifactId>hamcrest-all</artifactId>\n    \t    <version>1.3</version>\n    \t    <scope>test</scope>\n\t\t</dependency>\n\t        <dependency>\n\t\t    <groupId>commons-fileupload</groupId>\n\t\t    <artifactId>commons-fileupload</artifactId>\n\t\t    <version>1.3.1</version>\n\t\t</dependency>\n\t\t <!-- Memcached Dependency -->\n\t\t<dependency>\n\t\t    <groupId>net.spy</groupId>\n\t\t    <artifactId>spymemcached</artifactId>\n\t\t    <version>2.12.3</version>\n\t\t</dependency>\t\t\t\t\n\t\t<dependency>\n\t\t    <groupId>commons-io</groupId>\n\t\t    <artifactId>commons-io</artifactId>\n\t\t    <version>2.4</version>\n\t    </dependency>\n\t    <!-- RabbitMQ Dependency -->\n\t    <dependency>\n\t            <groupId>org.springframework.amqp</groupId>\n\t            <artifactId>spring-rabbit</artifactId>\n\t            <version>1.7.1.RELEASE</version>\n\t    </dependency>\n\t\n\t    <dependency>\n\t            <groupId>com.rabbitmq</groupId>\n\t            <artifactId>amqp-client</artifactId>\n\t            <version>4.0.2</version>\n\t   </dependency>\n\t   <!-- Elasticsearch Dependency-->\n\t\t<dependency>\n\t\t    <groupId>org.elasticsearch</groupId>\n\t\t    <artifactId>elasticsearch</artifactId>\n\t\t    <version>5.6.4</version>\n\t\t</dependency>\n\t\t<!-- Transport Client-->\n\t\t<dependency>\n\t\t    <groupId>org.elasticsearch.client</groupId>\n\t\t    <artifactId>transport</artifactId>\n\t\t    <version>5.6.4</version>\n\t\t</dependency>\n\t\t<!--gson -->\n\t\t<dependency>\n\t\t    <groupId>com.google.code.gson</groupId>\n\t\t    <artifactId>gson</artifactId>\n\t\t    <version>2.8.2</version>\n\t\t</dependency>\n    </dependencies>\n     <build>\n        <plugins>\n            <plugin>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-maven-plugin</artifactId>\n                <version>9.2.11.v20150529</version>\n                <configuration>\n                    <scanIntervalSeconds>10</scanIntervalSeconds>\n                    <webApp>\n                        <contextPath>/</contextPath>\n                    </webApp>\n                </configuration>\n            </plugin>\n\t\t<!-- CODE COVERAGE -->\n\t            <plugin>\n                     <groupId>org.apache.maven.plugins</groupId>\n                     <artifactId>maven-war-plugin</artifactId>\n                     <version>3.2.2</version>\n                    </plugin>\n \t\t    <plugin>\n \t\t        <groupId>org.jacoco</groupId>\n \t\t        <artifactId>jacoco-maven-plugin</artifactId>\n\t\t\t<version>0.8.4</version>\n \t\t        <executions>\n \t\t            <execution>\n \t\t                <id>jacoco-initialize</id>\n \t\t                <phase>process-resources</phase>\n \t\t                <goals>\n \t\t                    <goal>prepare-agent</goal>\n \t\t                </goals>\n \t\t            </execution>\n \t\t            <execution>\n \t\t                <id>jacoco-site</id>\n \t\t                <phase>post-integration-test</phase>\n \t\t                <goals>\n \t\t                    <goal>report</goal>\n \t\t                </goals>\n \t\t            </execution>\n \t\t        </executions>\n \t\t</plugin>\n\t\t\n        </plugins>\n    </build>\n</project>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}