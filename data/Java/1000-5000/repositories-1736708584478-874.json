{
  "metadata": {
    "timestamp": 1736708584478,
    "page": 874,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "DSAppTeam/PanelSwitchHelper",
      "stars": 2394,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.083984375,
          "content": "*.iml\n.gradle\n/local.properties\n.DS_Store\n.idea\n/build\n/captures\n.externalNativeBuild\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.849609375,
          "content": "language: android\ndist : trusty\nsudo: required\njdk: oraclejdk8\n\nenv:\n  global:\n    - ANDROID_API_LEVEL=29\n    - ANDROID_BUILD_TOOLS_VERSION=29.0.1\n    - ANDROID_ABI=armeabi-v7a\n\nandroid:\n  components:\n    - tools\n    - platform-tools\n    - tools\n    - extra-android-m2repository\n  licenses:\n    - 'android-sdk-preview-license-52d11cd2'\n    - 'android-sdk-license-.+'\n    - 'google-gdk-license-.+'\n\nbefore_install:\n  - touch $HOME/.android/repositories.cfg\n  - yes | sdkmanager \"platforms;android-29\"\n  - yes | sdkmanager \"build-tools;29.0.1\"\n\nbefore_cache:\n  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock\n  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/\n\ncache:\n  directories:\n    - $HOME/.gradle/caches/\n    - $HOME/.gradle/wrapper/\n    - $HOME/.android/build-cache\n\nbefore_script:\n  - chmod +x gradlew\n\nscript:\n  - ./gradlew clean build\n  - ./gradlew test"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.076171875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2019] [yummylau]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README-zh.md",
          "type": "blob",
          "size": 14.7333984375,
          "content": "[![](https://travis-ci.org/YummyLau/PanelSwitchHelper.svg?branch=master)](https://travis-ci.org/YummyLau/panelSwitchHelper)\n![Language](https://img.shields.io/badge/language-java-orange.svg)\n![Language](https://img.shields.io/badge/language-kotlin-orange.svg)\n![Version](https://img.shields.io/badge/version-1.4.0-blue.svg)\n![Size](https://img.shields.io/badge/size-14K-brightgreen.svg)\n\nREADME: [English Doc](https://github.com/YummyLau/PanelSwitchHelper/blob/master/README.md)\n\n### 框架简介\n\n在开发聊天/视频/直播/信息流界面时，希望用户在输入法与功能面板（比如表情面板/更多选项面板等）的切换过程中保持平滑过渡。调研了市场上主流的app效果及实现，实现了一套兼容多场景的输入面板切换框架。目前该框架已测试使用。\n\n### 原理介绍\n\n* 方案1：在 setSoftInputMode = SOFT_INPUT_ADJUST_RESIZE 的场景下，通过ViewTreeObserver.OnGlobalLayoutListener或者ViewCompat.setOnApplyWindowInsetsListener来获取键盘高度，通过修改onLayout的方式调整输入面板的高度。\n* 方案2：在 setSoftInputMode = SOFT_INPUT_ADJUST_NOTHING 的场景下，通过ViewCompat.setWindowInsetsAnimationCallback监听键盘过渡动画，获取实时的键盘高度后，通过修改控件translationY的方式实现。\n\n其中方案2是在1.5.0版本中引入的，可以通过android11KeyboardFeature属性控制是否开启Android 11键盘特性（默认是开启的）。在部分应用场景中Android 11键盘特性无法生效，我们会降级成方案1的方式。\n\n备注：由于Android手机设备碎片化严重，可能会出现部分手机的兼容问题，我们为PanelSwitchLayout提供了两个兼容方法，当你的设备无法正常获取到键盘高度时，你可以尝试实现这两个方法来做兼容。\n\n```kotlin\n\n// 针对Android 11以上开启键盘动画特性，高度获取失败时，对外提供兼容方案\nvar softInputHeightCalculatorOnStart: ((animation: WindowInsetsAnimationCompat, bounds: WindowInsetsAnimationCompat.BoundsCompat) -> Int)? = null\nvar softInputHeightCalculatorOnProgress: ((insets: WindowInsetsCompat, runningAnimations: MutableList<WindowInsetsAnimationCompat>) -> Int)? = null\n\n\n```\n\n### 框架优势\n\n* 改进传统使用 `Weight+LinearLayout` 动态更改布局高度适配面板的技术方案，支持多种原生 ViewGroup 容器\n* 为了追求更平滑的适配效果，当输入法动态调整高度或动态隐藏导航栏时，功能面板能实时适配\n* 为了追求更流畅的切换效果，支持滑动模式，滑动会更流畅，同时也支持固定模式\n* 丰富的机型适配，适配 全面屏/刘海屏/挖孔屏/Pad 等非常规 Phone 机型\n* 丰富的场景支持，支持 Activity/Fragment/Dialog/PopupWindow，应用到聊天/视频/直播/信息流评论等场景\n* 丰富的 API 支持，可自定义内容容器，业务面板，灵活控制面板隐藏，灵活控制切换面板速度\n* 支持全屏模式，FullScreen 模式下也能处理面板切换\n\n更多细节可参考\n\n* [场景使用介绍](https://github.com/YummyLau/PanelSwitchHelper/blob/master/README_SENCE-zh.md)\n* [API 使用指南](https://github.com/YummyLau/PanelSwitchHelper/blob/master/README_API-zh.md)\n* [库版本更新日志](https://github.com/YummyLau/PanelSwitchHelper/blob/master/README_UPDATE-zh.md)\n\nDemo 内容如下\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/demo.png\" width = \"360\" height = \"790\"/>\n\n从二维码下载 Demo\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/qr_code_apk.png\" width = \"256\" height = \"256\"/>\n\n默认运行 Androidx 版本，如果需要打开非 Androidx，则在 `Settings.gradle` 中打开 `app` 并在 `gradle.properties` 中关闭 Androidx 配置即可。\n\n### 使用方法\n\n1. 在模块脚本 `build.gradle` 添加库依赖\n\n1.1、Add it in your root build.gradle at the end of repositories:\n\n```groovy\n\nallprojects {\n    repositories {\n        maven { url 'https://jitpack.io' }\n    }\n}\n```\n\n1.2、Add the dependency\n```groovy\n//1.4.0 版本及后续，仅支持 Androidx\ndependencies {\n    implementation 'com.github.DSAppTeam:PanelSwitchHelper:v1.5.12'\n}\n```\n\n2. 在布局文件 Xml 中使用框架提供的容器\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\">\n\n\t\t <!-- 不需要被框架处理的布局，可自由布置 -->\n        <RelativeLayout\n            android:id=\"@+id/cus_title_bar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"50dp\"\n            android:background=\"@color/colorPrimary\"\n            android:visibility=\"gone\">\n\n            <TextView\n                android:id=\"@+id/title\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:gravity=\"left|center_vertical\"\n                android:paddingLeft=\"20dp\"\n                android:text=\"自定义标题栏\"\n                android:textColor=\"@android:color/white\"\n                android:textSize=\"20sp\"\n                android:textStyle=\"bold\" />\n        </RelativeLayout>\n\n        <com.effective.android.panel.view.PanelSwitchLayout\n            android:id=\"@+id/panel_switch_layout\"\n            android:layout_width=\"match_parent\"\n            app:animationSpeed=\"standard\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\">\n\n            <!-- 内容区域 -->\n            <!-- linear_edit_view 指定一个 EditText 用于输入 ，必须项-->\n            <!-- linear_auto_reset_enable 指定是否 LinearContentContainer 是否能够接受 Touch 事件自动隐藏面板-->\n            <!-- linear_auto_reset_area 指定是否 LinearContentContainer 只接受某个 View 区域的 Touch 事件来自定隐藏面板-->\n            <com.effective.android.panel.view.content.LinearContentContainer\n                android:id=\"@+id/content_view\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:orientation=\"vertical\"\n                app:edit_view=\"@id/edit_text\">\n\n                <com.example.demo.scene.chat.view.HookActionUpRecyclerView\n                    android:id=\"@+id/recycler_view\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"0dp\"\n                    android:layout_weight=\"1\"/>\n\n                <LinearLayout\n                    android:id=\"@+id/bottom_action\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:background=\"@drawable/shape_input_layout\"\n                    android:gravity=\"bottom\"\n                    android:minHeight=\"@dimen/dp_50\"\n                    android:orientation=\"horizontal\"\n                    android:paddingLeft=\"@dimen/dp_10\"\n                    android:paddingRight=\"@dimen/dp_10\"\n                    android:paddingBottom=\"@dimen/dp_7.5\">\n\n                    <!-- 更多入口 -->\n                    <ImageView\n                        android:id=\"@+id/add_btn\"\n                        android:layout_width=\"@dimen/dp_35\"\n                        android:layout_height=\"@dimen/dp_35\"\n                        android:layout_marginRight=\"@dimen/dp_10\"\n                        android:src=\"@drawable/icon_add\" />\n\n                    <!-- 输入入口 -->\n                    <EditText\n                        android:id=\"@+id/edit_text\"\n                        android:layout_width=\"0dp\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_marginEnd=\"@dimen/dp_10\"\n                        android:layout_marginRight=\"@dimen/dp_10\"\n                        android:layout_weight=\"1\"\n                        android:background=\"@drawable/selector_edit_focus\"\n                        android:imeOptions=\"actionSearch\"\n                        android:maxLines=\"5\"\n                        android:minHeight=\"@dimen/dp_35\"\n                        android:paddingLeft=\"@dimen/dp_3\"\n                        android:paddingTop=\"@dimen/dp_7.5\"\n                        android:paddingRight=\"@dimen/dp_3\"\n                        android:paddingBottom=\"@dimen/dp_3\"\n                        android:textCursorDrawable=\"@drawable/shape_edit_cursor\"\n                        android:textSize=\"@dimen/sp_16\" />\n\n                    <LinearLayout\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"@dimen/dp_35\"\n                        android:orientation=\"horizontal\">\n\n                        <!-- 表情入口 -->\n                        <ImageView\n                            android:id=\"@+id/emotion_btn\"\n                            android:layout_width=\"@dimen/dp_35\"\n                            android:layout_height=\"@dimen/dp_35\"\n                            android:layout_marginEnd=\"@dimen/dp_10\"\n                            android:layout_marginRight=\"@dimen/dp_10\"\n                            android:src=\"@drawable/selector_emotion_btn\" />\n\n                        <TextView\n                            android:id=\"@+id/send\"\n                            android:layout_width=\"@dimen/dp_50\"\n                            android:layout_height=\"@dimen/dp_35\"\n                            android:background=\"@drawable/selector_send_btn\"\n                            android:gravity=\"center\"\n                            android:text=\"@string/send\"\n                            android:textColor=\"@color/color_send_btn\"\n                            android:textSize=\"@dimen/sp_15\" />\n                    </LinearLayout>\n\n                </LinearLayout>\n\n            </com.effective.android.panel.view.content.LinearContentContainer>\n\n\n            <!-- 面板区域，仅能包含PanelView-->\n            <com.effective.android.panel.view.panel.PanelContainer\n                android:id=\"@+id/panel_container\"\n                android:layout_width=\"match_parent\"\n                android:background=\"@color/common_page_bg_color\"\n                android:layout_height=\"wrap_content\">\n\n                <!-- 每一项面板 -->\n                <!-- panel_layout 用于指定面板该 ID 对应的布局 ，必须项-->\n                <!-- panel_trigger 用于用户点击该 ID 对应的 View 时切换到该面板 -->\n                <!-- panel_toggle  用于当该面板显示时 ，用户再次点击 panel_trigger 对应的 View 时是否回切输入法-->\n                <com.effective.android.panel.view.panel.PanelView\n                    android:id=\"@+id/panel_emotion\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    app:panel_layout=\"@layout/panel_emotion_layout\"\n                    app:panel_trigger=\"@id/emotion_btn\" />\n\n                <!-- 除了使用框架提供的 PanelView，也可以使用自定义 Panel -->\n                <com.example.demo.scene.api.CusPanelView\n                    android:id=\"@+id/panel_addition\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    app:cus_panel_trigger=\"@id/add_btn\"\n                    app:cus_panel_toggle=\"true\"/>\n\n            </com.effective.android.panel.view.panel.PanelContainer>\n        </com.effective.android.panel.view.PanelSwitchLayout>\n\n    </LinearLayout>\n</layout>\n```\n\n3. 初始化 PanelSwitchHelper 对象，框架会自动收集布局信息。同时在返回键会调时拦截处理即可。\n\n```\n\t//Activity 场景，在 onStart 方法初始化，其他如 Fragment/Dialog/PopupWindow 参考 Demo\n   private PanelSwitchHelper mHelper;\n\n   @Override\n   protected void onStart() {\n        super.onStart();\n        if (mHelper == null) {\n            mHelper = new PanelSwitchHelper.Builder(this)\n                   .addKeyboardStateListener {\n                        onKeyboardChange {\n                            //可选实现，监听输入法变化\n                        }\n                    }\n                    .addEditTextFocusChangeListener {\n                        onFocusChange { _, hasFocus ->\n\t\t\t\t\t\t\t\t //可选实现，监听输入框焦点变化\n                        }\n                    }\n                    .addViewClickListener {\n                        onClickBefore {\n \t\t\t\t\t\t\t\t//可选实现，监听触发器的点击\n                        }\n                    }\n                    .addPanelChangeListener {\n                        onKeyboard {\n \t\t\t\t\t\t\t\t//可选实现，输入法显示回调\n                        }\n                        onNone {\n \t\t\t\t\t\t\t\t//可选实现，默认状态回调\n                        }\n                        onPanel {\n \t\t\t\t\t\t\t\t//可选实现，面板显示回调\n                        }\n                        onPanelSizeChange { panelView, _, _, _, width, height ->\n \t\t\t\t\t\t\t\t//可选实现，输入法动态调整时引起的面板高度变化动态回调\n                        }\n                    }\n                    .addContentScrollMeasurer { //可选，滑动模式下，可以针对内容面板内的view，定制滑动距离，默认滑动距离为 defaultDistance\n                        getScrollDistance { defaultDistance -> defaultDistance - 200 }\n                        getScrollViewId { R.id.recycler_view }\n                    }\n                    .addPanelHeightMeasurer {   //可选 用于设置未获取输入法高度前面板的高度，如果不设置则默认以框架内高度为主\n                        synchronizeKeyboardHeight { false } // 设置面板高度是否和键盘高度同步\n                        getTargetPanelDefaultHeight { DisplayUtils.dip2px(this@DefaultHeightPanelActivity,400f)}\n                        getPanelTriggerId { R.id.add_btn }\n                    }   \n                    .contentScrollOutsideEnable(true)  //可选，默认为true    \n                    .logTrack(true)                   //可选，默认false，是否开启log信息输出\n                    .build(true)\t\t\t          //可选，默认false，是否默认打开输入法\n        }\n    }\n\n\n   @Override\n   public void onBackPressed() {\n   \t\t //用户按下返回键的时候，如果显示面板，则需要隐藏\n        if (mHelper != null && mHelper.hookSystemBackForHindPanel()) {\n            return;\n        }\n        super.onBackPressed();\n   }\n\n```\n\n### 期望\n\n编写该项目只是希望能提高日常开发的效率，专注于处理业务。如果更好的做法或者意见建议，欢迎写信到 yummyl.lau@gmail.com 。\n也可以微信“lym_llllll” 添加微信进群反馈。\n\n如果框架对你有帮助，可安利给身边的伙伴，每一个 star 都是对框架付出的肯定。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.037109375,
          "content": "[![](https://travis-ci.org/YummyLau/PanelSwitchHelper.svg?branch=master)](https://travis-ci.org/YummyLau/panelSwitchHelper)\n![Language](https://img.shields.io/badge/language-java-orange.svg)\n![Language](https://img.shields.io/badge/language-kotlin-orange.svg)\n![Version](https://img.shields.io/badge/version-1.4.0-blue.svg)\n![Size](https://img.shields.io/badge/size-14K-brightgreen.svg)\n\nREADME: [中文文档](https://github.com/YummyLau/PanelSwitchHelper/blob/master/README-zh.md)\n\n### Introduction to the framework\n\nWhen developing a chat/video/live/information interface, users are expected to maintain a smooth transition between the input method and the function panel (such as the expression panel/more options panel, etc.). Investigate the mainstream app effects and implementation in the market, and realize a set of input panel switching framework compatible with multiple scenes. Currently the framework has been tested and used.\n\n### Framework advantages\n\n* Improve the traditional technical solution of using `Weight+LinearLayout` to dynamically change the layout height to suit the panel, and support multiple native ViewGroup containers\n* In pursuit of a smoother adaptation effect, when the input method dynamically adjusts the height or dynamically hides the navigation bar, the function panel can be adapted in real time\n* In pursuit of a smoother switching effect, the sliding mode is supported, the sliding will be smoother, and the fixed mode is also supported\n* Rich model adaptation, adapt to non-conventional Phone models such as full screen/bang screen/digging screen/Pad\n* Rich scene support, support Activity/Fragment/Dialog/PopupWindow, apply to chat/video/live broadcast/stream comment, etc.\n* Rich API support, customizable content container, business panel, flexible control panel hiding, flexible control of switching panel speed\n* Support full screen mode, and panel switching can also be handled in FullScreen mode\n\nFor more details, please refer to\n\n* [Introduction to scenario usage](https://github.com/YummyLau/PanelSwitchHelper/blob/master/README_SENCE.md)\n* [API Usage Guide](https://github.com/YummyLau/PanelSwitchHelper/blob/master/README_API.md)\n* [Library version update log](https://github.com/YummyLau/PanelSwitchHelper/blob/master/README_UPDATE.md)\n\nDemo content is as follows\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/demo.png\" width = \"360\" height = \"790\"/>\n\nDownload from QR code\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/qr_code_apk.png\" width = \"256\" height = \"256\"/>\n\nThe Androidx version runs by default. If you need to open non-Androidx, open the app in `Settings.gradle` and close the Androidx configuration in `gradle.properties`.\n\n### Instructions\n\n1. How to\n\n1.1 Add library dependencies in module script `build.gradle`\n\n```groovy\n\nallprojects {\n    repositories {\n        maven { url 'https://jitpack.io' }\n    }\n}\n```\n\n1.2 Add the dependency\n\n```groovy\n//1.4.0 版本及后续，仅支持 Androidx\ndependencies {\n    implementation 'com.github.DSAppTeam:PanelSwitchHelper:v1.5.12'\n}\n```\n\n2. Use the container provided by the framework in the layout file Xml\n\n```\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\n\n    <LinearLayout\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\">\n\n\t\t <!-- Layout that does not need to be processed by the frame, can be arranged freely -->\n        <RelativeLayout\n            android:id=\"@+id/cus_title_bar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"50dp\"\n            android:background=\"@color/colorPrimary\"\n            android:visibility=\"gone\">\n\n            <TextView\n                android:id=\"@+id/title\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:gravity=\"left|center_vertical\"\n                android:paddingLeft=\"20dp\"\n                android:text=\"自定义标题栏\"\n                android:textColor=\"@android:color/white\"\n                android:textSize=\"20sp\"\n                android:textStyle=\"bold\" />\n        </RelativeLayout>\n\n        <com.effective.android.panel.view.PanelSwitchLayout\n            android:id=\"@+id/panel_switch_layout\"\n            android:layout_width=\"match_parent\"\n            app:animationSpeed=\"standard\"\n            android:layout_height=\"match_parent\"\n            android:orientation=\"vertical\">\n\n            <!-- ContentContainer -->\n            <!-- linear_edit_view, Specify an EditText for input, required-->\n            <!-- linear_auto_reset_enable,Specifies whether the LinearContentContainer can accept Touch events and automatically hide the panel-->\n            <!-- linear_auto_reset_area, Specifies whether the LinearContentContainer only accepts Touch events in a View area to customize the hidden panel-->\n            <com.effective.android.panel.view.content.LinearContentContainer\n                android:id=\"@+id/content_view\"\n                android:layout_width=\"match_parent\"\n                android:layout_height=\"match_parent\"\n                android:orientation=\"vertical\"\n                app:edit_view=\"@id/edit_text\">\n\n                <com.example.demo.scene.chat.view.HookActionUpRecyclerView\n                    android:id=\"@+id/recycler_view\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"0dp\"\n                    android:layout_weight=\"1\"/>\n\n                <LinearLayout\n                    android:id=\"@+id/bottom_action\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"wrap_content\"\n                    android:background=\"@drawable/shape_input_layout\"\n                    android:gravity=\"bottom\"\n                    android:minHeight=\"@dimen/dp_50\"\n                    android:orientation=\"horizontal\"\n                    android:paddingLeft=\"@dimen/dp_10\"\n                    android:paddingRight=\"@dimen/dp_10\"\n                    android:paddingBottom=\"@dimen/dp_7.5\">\n\n                    <!--More entrances -->\n                    <ImageView\n                        android:id=\"@+id/add_btn\"\n                        android:layout_width=\"@dimen/dp_35\"\n                        android:layout_height=\"@dimen/dp_35\"\n                        android:layout_marginRight=\"@dimen/dp_10\"\n                        android:src=\"@drawable/icon_add\" />\n\n                    <!-- Input entrances -->\n                    <EditText\n                        android:id=\"@+id/edit_text\"\n                        android:layout_width=\"0dp\"\n                        android:layout_height=\"wrap_content\"\n                        android:layout_marginEnd=\"@dimen/dp_10\"\n                        android:layout_marginRight=\"@dimen/dp_10\"\n                        android:layout_weight=\"1\"\n                        android:background=\"@drawable/selector_edit_focus\"\n                        android:imeOptions=\"actionSearch\"\n                        android:maxLines=\"5\"\n                        android:minHeight=\"@dimen/dp_35\"\n                        android:paddingLeft=\"@dimen/dp_3\"\n                        android:paddingTop=\"@dimen/dp_7.5\"\n                        android:paddingRight=\"@dimen/dp_3\"\n                        android:paddingBottom=\"@dimen/dp_3\"\n                        android:textCursorDrawable=\"@drawable/shape_edit_cursor\"\n                        android:textSize=\"@dimen/sp_16\" />\n\n                    <LinearLayout\n                        android:layout_width=\"wrap_content\"\n                        android:layout_height=\"@dimen/dp_35\"\n                        android:orientation=\"horizontal\">\n\n                        <!-- Emotion entrances -->\n                        <ImageView\n                            android:id=\"@+id/emotion_btn\"\n                            android:layout_width=\"@dimen/dp_35\"\n                            android:layout_height=\"@dimen/dp_35\"\n                            android:layout_marginEnd=\"@dimen/dp_10\"\n                            android:layout_marginRight=\"@dimen/dp_10\"\n                            android:src=\"@drawable/selector_emotion_btn\" />\n\n                        <TextView\n                            android:id=\"@+id/send\"\n                            android:layout_width=\"@dimen/dp_50\"\n                            android:layout_height=\"@dimen/dp_35\"\n                            android:background=\"@drawable/selector_send_btn\"\n                            android:gravity=\"center\"\n                            android:text=\"@string/send\"\n                            android:textColor=\"@color/color_send_btn\"\n                            android:textSize=\"@dimen/sp_15\" />\n                    </LinearLayout>\n\n                </LinearLayout>\n\n            </com.effective.android.panel.view.content.LinearContentContainer>\n\n\n            <!--Panel Container, can only contain PanelView-->\n            <com.effective.android.panel.view.panel.PanelContainer\n                android:id=\"@+id/panel_container\"\n                android:layout_width=\"match_parent\"\n                android:background=\"@color/common_page_bg_color\"\n                android:layout_height=\"wrap_content\">\n\n                <!-- Each panel -->\n                <!-- panel_layout,Used to specify the layout corresponding to the ID of the panel, required-->\n                <!-- panel_trigger, Used to switch to this panel when the user clicks the View corresponding to this ID -->\n                <!-- panel_toggle ,When the panel is displayed, if the user clicks the View corresponding to panel_trigger again, whether to switch back to the input method-->\n                <com.effective.android.panel.view.panel.PanelView\n                    android:id=\"@+id/panel_emotion\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    app:panel_layout=\"@layout/panel_emotion_layout\"\n                    app:panel_trigger=\"@id/emotion_btn\" />\n\n                <!-- In addition to using the PanelView provided by the framework, you can also use a custom Panel -->\n                <com.example.demo.scene.api.CusPanelView\n                    android:id=\"@+id/panel_addition\"\n                    android:layout_width=\"match_parent\"\n                    android:layout_height=\"match_parent\"\n                    app:cus_panel_trigger=\"@id/add_btn\"\n                    app:cus_panel_toggle=\"true\"/>\n\n            </com.effective.android.panel.view.panel.PanelContainer>\n        </com.effective.android.panel.view.PanelSwitchLayout>\n\n    </LinearLayout>\n</layout>\n```\n\n3. Initialize the PanelSwitchHelper object, and the framework will automatically collect layout information. At the same time, intercept the processing when the return key is adjusted.\n\n```\n\t//Activity scene, initialized in onStart method, others such as Fragment/Dialog/PopupWindow refer to Demo\n   private PanelSwitchHelper mHelper;\n\n   @Override\n   protected void onStart() {\n        super.onStart();\n        if (mHelper == null) {\n            mHelper = new PanelSwitchHelper.Builder(this)\n                   .addKeyboardStateListener {\n                        onKeyboardChange {\n                            //Optional implementation, monitor input method changes\n                        }\n                    }\n                    .addEditTextFocusChangeListener {\n                        onFocusChange { _, hasFocus ->\n\t\t\t\t\t\t\t //Optional implementation, monitor input box focus changes\n                        }\n                    }\n                    .addViewClickListener {\n                        onClickBefore {\n \t\t\t\t\t\t\t//Optional implementation, listen for trigger clicks\n                        }\n                    }\n                    .addPanelChangeListener {\n                        onKeyboard {\n \t\t\t\t\t\t\t\t//Optional implementation, input method display callback\n                        }\n                        onNone {\n \t\t\t\t\t\t\t\t//Optional implementation, default state callback\n                        }\n                        onPanel {\n \t\t\t\t\t\t\t\t//Optional implementation, panel display callback\n                        }\n                        onPanelSizeChange { panelView, _, _, _, width, height ->\n \t\t\t\t\t\t\t\t//Optional implementation, dynamic callback of panel height change caused by input method dynamic adjustment\n                        }\n                    }\n                    .addContentScrollMeasurer { //Optional, in sliding mode, the sliding distance can be customized for the view in the content panel, the default sliding distance is defaultDistance\n                        getScrollDistance { defaultDistance -> defaultDistance - 200 }\n                        getScrollViewId { R.id.recycler_view }\n                    }\n                    .addPanelHeightMeasurer {   //Optional It is used to set the height of the front panel without obtaining the height of the input method. If it is not set, the height within the frame is the default\n                        synchronizeKeyboardHeight { false } \n                        getTargetPanelDefaultHeight { DisplayUtils.dip2px(this@DefaultHeightPanelActivity,400f)}\n                        getPanelTriggerId { R.id.add_btn }\n                    }  \n                    .logTrack(true)                   //Optional, default false, whether to enable log information output\n                    .build(true)\t\t\t          //Optional, default false, whether to open the input method by default\n        }\n    }\n\n\n   @Override\n   public void onBackPressed() {\n   \t\t //When the user presses the return key, if the panel is displayed, it needs to be hidden\n        if (mHelper != null && mHelper.hookSystemBackForHindPanel()) {\n            return;\n        }\n        super.onBackPressed();\n   }\n\n```\n\n### Expectations\n\nThe project was written only to improve the efficiency of daily development and focus on processing business. If you have better practices or suggestions, please write to yummyl.lau@gmail.com.\n\nOr search WeChat \"lym_llllll\" and add WeChat for feedback.\n\nIf the framework is helpful to you, Amway can give the partners around you, and every star is an affirmation of the framework.\n"
        },
        {
          "name": "README_API-zh.md",
          "type": "blob",
          "size": 9.0634765625,
          "content": "### API 目录\n\n1. 框架视图结构\n2. 内容区域\n3. 面板区域\n4. PanelSwitchHelper 构建及使用细节\n\n#### 框架视图结构\n\n框架定义了 PanelSwitchLayout 容器，该容器内容由内容区域和面板区域构成。\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/api/arch.jpg\" width = \"696\" height = \"703\"/>\n\n同时基于上述结构，框架框支持以下两种模式\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/api/mode.jpg\" width = \"662\" height = \"444\" align=center />\n\n\n#### 内容面板\n\n框架提供了多种 Container 容器\n\n* `LinearContentContainer` 可当作 `LinearLayout` 功能使用\n* `RelativeContentContainer` 可当作 `RelativeLayout` 功能使用\n* `FrameContentContainer` 可当作 `FrameLayout` 功能使用\n\n所有提供的 Container 容器内部都是由实现了 `IContentContainer` 接口的 `ContentContainerImpl` 对象代理处理。开发者可使用 `ContentContainerImpl` 模仿框架提供的各种 Container 来实现自定义的 Container。 Demo 中 `CusContentContainer` 就是基于约束布局实现的一个例子。\n\n例子可参考 Demo：\n\n* **API-内容容器（线性布局）**\n* **API-内容容器（相对布局）**\n* **API-内容容器（帧布局）**\n* **API-内容容器（自定义布局）**\n\n开发中你可能会遇到：“在某种场景中，希望点击 Container 区域来隐藏已显示的面板，可能是输入法（输入法也是一种年版），也可能是业务面板。”\n框架基于这些场景，各个容器提供了自动隐藏面板的API，详情可查看 Demo 中的 `ResetActivity`。\n\n自动隐藏面板功能被定义在 container 的扩展属性内,包含\n\n* `auto_reset_enable` 表示是否支持点击内容区域内隐藏面板，默认打开。打开时，当区域内子view没有消费事件时，则会默认消费该事件并自动隐藏。\n* `auto_reset_area`, 当且仅当 auto_reset_enable 为 true 才有效，指定一个 view 的id，为 `auto_reset_enable` 的消费事件限定区域。\n\n\t1. 比如场景一，指定了空白透明 view  ，view 没有消费事件时，则才会自动隐藏面板；\n\t2. 比如场景二，指定了列表的 recyclerview ，则recyclerview 没有消费事件时，则才会自动隐藏面板；\n\t3. 比如场景三，场景二 recyclerview 时显然很难不消费事件，如果 holder 被点击（比如聊天项），则应该被正常消费如果点击 recyclerview 内的空白，recyclerview 也会默认消费，因为需要滑动.\n\n    为了解决这种下层应该消费点击滑动事件，而上层容器应该获取点击并自动隐藏，`HookActionUpRecyclerView` 就是该场景的 Demo,需要把下层消费完之后的 ACTION_UP 返回 false 让上层有机会处理。 `ContentContainerImpl` 内的实现预留了这种可能，用于处理该复杂场景。\n\n例子可参考 Demo：\n\n* **API-点击内容容器收起面板（默认处理）**\n* **API-点击空白 View 收起面板**\n* **API-点击原生 Recyclerview 收起面板**\n* **API-点击自定义 RecyclerView 收起面板**\n* **API-关闭点击内容容器收起面板**\n\n\n#### 功能区域\n\n面板区域是一个 `FrameLayout` 容器，内部可存放各个功能面板。\n\n```\n<!-- 面板区域，仅能包含PanelView-->\n<com.effective.android.panel.view.panel.PanelContainer\n    android:id=\"@+id/panel_container\"\n    android:layout_width=\"match_parent\"\n    android:background=\"@color/common_page_bg_color\"\n    android:layout_height=\"wrap_content\">\n\n\t<!-- 默认的 PanelView -->\n    <com.effective.android.panel.view.panel.PanelView\n        android:id=\"@+id/panel_emotion\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:panel_layout=\"@layout/panel_emotion_layout\"\n        app:panel_trigger=\"@id/emotion_btn\" />\n\n    <!-- 除了使用框架提供的 PanelView，也可以使用自定义 Panel -->\n    <com.example.demo.scene.api.CusPanelView\n        android:id=\"@+id/panel_addition\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:cus_panel_trigger=\"@id/add_btn\"\n        app:cus_panel_toggle=\"true\"/>\n\n</com.effective.android.panel.view.panel.PanelContainer>\n```\n\n框架默认提供了 `PanelView` 来定义一个功能面板,其定义了多个属性：\n\n* `panel_trigger` 用户点击该 ID 对应的 View 时切换到该面板\n* `panel_layout ` 用于扩展该面板的布局，功能和 <include> 标签相似\n* `panel_trigger` 用于当该面板显示时 ，用户再次点击 panel_trigger 对应的 View 时是否回切输入法\n\n同时嗨提供 `IPanelView` 接口用于自主实现 `PanelView`。例子可参考 Demo：**API-自定义PanelView 容器**\n\n#### PanelSwitchHelper 构建及使用细节\n\n可在 Activity/Fragment/Dialog/DialogFragment/PopupWindow 等使用 PanelSwitchHelper，如下代码\n\n```\nPanelSwitchHelper mHelper = new PanelSwitchHelper.Builder(this)\n           .addKeyboardStateListener {\n                onKeyboardChange {\n                    //可选实现，监听输入法变化\n                }\n            }\n            .addEditTextFocusChangeListener {\n                onFocusChange { _, hasFocus ->\n\t\t\t\t\t\t //可选实现，监听输入框焦点变化\n                }\n            }\n            .addViewClickListener {\n                onClickBefore {\n\t\t\t\t\t\t//可选实现，监听触发器的点击\n                }\n            }\n            .addPanelChangeListener {\n                onKeyboard {\n\t\t\t\t\t\t//可选实现，输入法显示回调\n                }\n                onNone {\n\t\t\t\t\t\t//可选实现，默认状态回调\n                }\n                onPanel {\n\t\t\t\t\t\t//可选实现，面板显示回调\n                }\n                onPanelSizeChange { panelView, _, _, _, width, height ->\n\t\t\t\t\t\t//可选实现，输入法动态调整时引起的面板高度变化动态回调\n                }\n            } \n            .addContentScrollMeasurer { //可选，滑动模式下，可以针对内容面板内的view，定制滑动距离，默认滑动距离为 defaultDistance\n                getScrollDistance { defaultDistance -> defaultDistance - 200 }\n                getScrollViewId { R.id.recycler_view }\n            }\n            .addPanelHeightMeasurer {   //可选 用于设置未获取输入法高度前面板的高度，如果不设置则默认以框架内高度为主\n                synchronizeKeyboardHeight { false } // 设置面板高度是否和键盘高度同步\n                getTargetPanelDefaultHeight { DisplayUtils.dip2px(this@DefaultHeightPanelActivity,400f)}\n                getPanelTriggerId { R.id.add_btn }\n            }  \n            .logTrack(true)                  \n            .build(true)\t\t\t          \n```\n\n其中，builder 构建过程可指定的功能如下：\n\n1. addKeyboardStateListener，用于监听输入法状态，可获取输入法的可见性及高度\n2. addEditTextFocusChangeListener，监听指定的输入源焦点变化\n3. addViewClickListener，监听 trigger 及输入源 的点击，比如点击表情切换按钮，输入源点击等\n4. addPanelChangeListener，监听面板变化，包括输入法显示，面板显示，输入法高度变化引起面板高度变化回调，隐藏面板状态\n5. addContentScrollMeasurer，用于干预框架的滑动，比如 ContentContainer 内部的的子View 不跟随父布局一起滑动\n    * getScrollDistance 参数 defaultDistance 为框架默认距离，外部可自主返回其他距离\n    * getScrollViewId，要干预处理的子view的id\n6. addPanelHeightMeasurer，用于设置面板的默认高度，当框架未获取输入法高度时，优先读取设置的高度，如果不存在则使用框架内默认高度\n    * synchronizeKeyboardHeight 面板高度是否同步使用键盘高度，返回值 = false 时，使用getTargetPanelDefaultHeight的值作为面板高度\n    * getPanelTriggerId 对应面板的触发器id\n    * getTargetPanelDefaultHeight 触发面板的默认高度\n7. logTrack 是否输出 log 信息\n8. build，返回 PanelSwitchHelper 对象，可传递参数指定第一次是否自动显示输入法，默认不显示。\n\n下图是通过 addContentScrollMeasurer 进行干预之后，软键盘/面板拉起后，内容区域内的多个 view 的行为\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/api/cus_scroll_content.gif\" width = \"289\" height = \"638\"/>\n\n其中列表及右侧两个 View 都做了干预，左侧 View 没有做干预，见 Demo 类 `ChatCusContentScrollActivity`\n\n除了上述构建过程中提供的功能，还提供以下重要方法使用：\n\n1. setContentScrollOutsideEnable 动态更改模式\n2. isContentScrollOutsizeEnable 获取模式\n3. toKeyboardState，切换成输入法面板\n4. toPanelState，切换成对应功能面板\n5. resetState，隐藏所有面板\n6. hookSystemBackByPanelSwitcher 拦截返回，如果当前用户按下返回或者业务返回键，则优先隐藏面板\n7. addSecondaryInputView/removeSecondaryInputView 添加额外输入源，用于驱动输入法显示\n8. setTriggerViewClickInterceptor 支持动态控制 TriggerView 是否自动响应\"点击触发切换面板\"行为，默认相应\n\n\n\n\n\n"
        },
        {
          "name": "README_API.md",
          "type": "blob",
          "size": 10.0703125,
          "content": "### API Directory\n\n1. Frame view structure\n2. Content area\n3. Panel area\n4. PanelSwitchHelper construction and use details\n\n#### Frame view structure\n\nThe framework defines the PanelSwitchLayout container, the content of which consists of the content area and the panel area.\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/api/arch.jpg\" width = \"696\" height = \"703\"/>\n\nBased on the above structure, the frame supports the following two modes\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/api/mode.jpg\" width = \"662\" height = \"444\" align=center />\n\n\n#### Content panel\n\nThe framework provides a variety of Container containers\n\n* `LinearContentContainer` can be used as a function of `LinearLayout`\n* `RelativeContentContainer` can be used as a function of `RelativeLayout`\n* `FrameContentContainer` can be used as a function of `FrameLayout`\n\nAll the provided Containers are handled by the `ContentContainerImpl` object proxy that implements the `IContentContainer` interface. Developers can use `ContentContainerImpl` to imitate various Containers provided by the framework to implement custom Containers. `CusContentContainer` in Demo is an example of implementation based on constrained layout.\n\nExamples can refer to Demo:\n\n* **API-content container (linear layout)**\n* **API-content container (relative layout)**\n* **API-content container (frame layout)**\n* **API-content container (custom layout)**\n\nDuring development, you may encounter: \"In a certain scenario, you want to click the Container area to hide the displayed panel. It may be an input method (the input method is also a kind of annual version), or it may be a business panel.\"\nThe framework is based on these scenarios, and each container provides an API to automatically hide the panel. For details, see `ResetActivity` in the Demo.\n\nThe function of automatically hiding the panel is defined in the extended attributes of the container, including\n\n* `auto_reset_enable` indicates whether to support clicking the hidden panel in the content area, which is opened by default. When open, when there is no consumption event in the subview in the area, the event will be consumed by default and hidden automatically.\n* `auto_reset_area`, if and only if auto_reset_enable is true, specify a view id, which is the consumption event limited area of ​​`auto_reset_enable`.\n\n    1. For example, in scenario 1, a blank transparent view is specified, and the panel will be automatically hidden only when there is no consumption event in the view;\n    2. For example, in scenario two, if the recyclerview of the list is specified, the panel will be hidden automatically when there is no consumption event in the recyclerview;\n    3. For Scenario 3 and Scenario 2, it is obviously difficult to not consume events during recyclerview. If the holder is clicked (such as a chat item), it should be consumed normally. If you click the blank in recyclerview, the recyclerview will also consume by default because it needs to slide.\n\n    In order to solve this kind of lower layer should consume the click sliding event, and the upper container should get the click and hide it automatically. `HookActionUpRecyclerView` is the demo of the scene. It is necessary to return ACTION_UP after the consumption of the lower layer to false to give the upper layer a chance to deal with it. The implementation in `ContentContainerImpl` reserves this possibility for handling this complex scenario.\n\nExamples can refer to Demo:\n\n* **API-click on the content container to collapse the panel (default processing)**\n* **API-click on blank View Collapse panel**\n* **API-click native Recyclerview to collapse the panel**\n* **API-click to customize RecyclerView to collapse the panel**\n* **API-Close the click content container to collapse the panel**\n\n\n#### Functional Area\n\nThe panel area is a `FrameLayout` container, and each function panel can be stored inside.\n\n```\n<!-- Panel area, can only contain PanelView-->\n<com.effective.android.panel.view.panel.PanelContainer\n    android:id=\"@+id/panel_container\"\n    android:layout_width=\"match_parent\"\n    android:background=\"@color/common_page_bg_color\"\n    android:layout_height=\"wrap_content\">\n\n<!-- Default PanelView -->\n    <com.effective.android.panel.view.panel.PanelView\n        android:id=\"@+id/panel_emotion\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:panel_layout=\"@layout/panel_emotion_layout\"\n        app:panel_trigger=\"@id/emotion_btn\" />\n\n    <!-- In addition to using the PanelView provided by the framework, you can also use a custom Panel -->\n    <com.example.demo.scene.api.CusPanelView\n        android:id=\"@+id/panel_addition\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        app:cus_panel_trigger=\"@id/add_btn\"\n        app:cus_panel_toggle=\"true\"/>\n\n</com.effective.android.panel.view.panel.PanelContainer>\n```\n\nThe framework provides `PanelView` by default to define a function panel, which defines multiple attributes:\n\n* `panel_trigger` users switch to this panel when they click the View corresponding to this ID\n* `panel_layout `is used to extend the layout of the panel, the function is similar to the <include> tag\n* `panel_trigger` is used to switch back to the input method when the user clicks the View corresponding to panel_trigger again when the panel is displayed\n\nAt the same time, he provides the `IPanelView` interface for autonomous implementation of `PanelView`. For an example, please refer to Demo: **API-Custom PanelView Container**\n\n#### PanelSwitchHelper construction and use details\n\nYou can use PanelSwitchHelper in Activity/Fragment/Dialog/DialogFragment/PopupWindow, etc., the following code\n\n```\nPanelSwitchHelper mHelper = new PanelSwitchHelper.Builder(this)\n           .addKeyboardStateListener {\n                onKeyboardChange {\n                    //Optional implementation, monitor input method changes\n                }\n            }\n            .addEditTextFocusChangeListener {\n                onFocusChange {_, hasFocus ->\n                    //Optional implementation, monitor input box focus changes\n                }\n            }\n            .addViewClickListener {\n                onClickBefore {\n                   //Optional implementation, monitor the click of trigger\n                }\n            }\n            .addPanelChangeListener {\n                onKeyboard {\n                  //Optional implementation, input method display callback\n                }\n                onNone {\n                    //Optional implementation, default state callback\n                }\n                onPanel {\n                   //Optional implementation, panel display callback\n                }\n                onPanelSizeChange {panelView, _, _, _, width, height ->\n                    //Optional implementation, dynamic callback of panel height change caused by dynamic adjustment of input method\n                }\n            }\n            .addDistanceMeasurer {      //IM scene is more important\n                getUnfilledHeight{\n                    //can be calculated dynamically\n                    0 \n                }\n                getViewTag{\n                    \"recyclerView\"\n                }\n            }\n            .logTrack(true)\n            .build(true)\n```\n\nAmong them, the functions that the builder can specify during the build process are as follows:\n\n1. addKeyboardStateListener, used to monitor the state of the input method, you can get the visibility and height of the input method\n2. addEditTextFocusChangeListener, monitor the focus change of the specified input source\n3. addViewClickListener, monitor trigger and input source clicks, such as clicking the emoticon switch button, input source click, etc.\n4. addPanelChangeListener, monitor panel changes, including input method display, panel display, the height change of the input method causes the panel height change callback, hide the panel status\n5. addContentScrollMeasurer, used to interfere with the sliding of the frame, such as the child View inside the ContentContainer does not slide along with the parent layout\n    * getScrollDistance parameter defaultDistance is the default distance of the frame, the outside can return other distances autonomously\n    * getScrollViewId, the id of the subview to be intervened\n6. addPanelHeightMeasurer, used to set the default height of the panel, when the frame does not get the height of the input method, the set height is read first, if not, the default height in the frame is used\n    * synchronizeKeyboardHeight \n    * getPanelTriggerId corresponds to the trigger id of the panel\n    * getTargetPanelDefaultHeight triggers the default height of the panel\n7. Does logTrack output log information\n8. Build, return the PanelSwitchHelper object, you can pass the parameter to specify whether to display the input method automatically for the first time, not by default.\n\nThe following figure shows the behavior of multiple views in the content area after the soft keyboard/panel is pulled up after intervention through addContentScrollMeasurer\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/api/cus_scroll_content.gif\" width = \"289\" height = \"638\"/>\n\nThe list and the two Views on the right have intervened, and the View on the left has not intervened, see the Demo class `ChatCusContentScrollActivity`\n\nIn addition to the functions provided in the above construction process, the following important methods are also provided:\n\n1. setContentScrollOutsideEnable dynamic change mode\n2. isContentScrollOutsizeEnable acquisition mode\n3. toKeyboardState, switch to input method panel\n4. toPanelState, switch to the corresponding function panel\n5. resetState, hide all panels\n6. hookSystemBackByPanelSwitcher intercepts the return, if the current user presses the return or business return button, the panel is preferentially hidden\n7. addSecondaryInputView/removeSecondaryInputView to add an additional input source to drive the input method display\n8. setTriggerViewClickInterceptor supports dynamic control of whether TriggerView automatically responds to the \"click to trigger the switch panel\" behavior, the default is corresponding"
        },
        {
          "name": "README_SENCE-zh.md",
          "type": "blob",
          "size": 3.1416015625,
          "content": "\n### 场景目录\n1. 支持动态更改输入法高度/隐藏显示导航栏时适配功能面板\n2. 聊天场景（类微信）\n3. 视频播放场景（类BiliBili）\n4. 电脑直播场景（类虎牙直播）\n5. 手机直播场景（类抖音直播）\n6. 信息流评论场景（类微信朋友圈）\n\n#### 支持动态更改输入法高度/隐藏显示导航栏时\n市面上的很多IM场景，用户更改输入法高度时切换回功能面板，则发生高度不一致，微信也如此。同时还需要适配存在导航栏操作的设备，常见如华为，小米等。为了追求更平滑的切换效果，框架支持动态更改输入法高度时适配功能面板。\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/auto_adjust.gif\" width = \"270\" height = \"480\"/><img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/compat_navigation.gif\" width = \"270\" height = \"480\"/>\n\n#### 聊天场景\n\n聊天场景适用于任何 IM 场景，Demo 分别使用了 Activity/Fragment/DialogFragment/PopupWindow/Dialog 来实现，满足你可所用的窗口技术。可参考 Demo 中的聊天场景。\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/chat.gif\" width = \"289\" height = \"638\"/>\n\n#### 视频播放场景\n\n视频播放效果参考 BiliBili 实现，左图为 BiliBili 效果，右图为 Demo 效果，效果优于 BiliBili 实现。\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/bilibili.gif\" width = \"289\" height = \"638\"/>   <img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/bilibili_demo.gif\" width = \"289\" height = \"638\"/>\n\n#### 电脑直播场景\n\n电脑直播效果参考 虎牙直播间 实现，左图为 虎牙直播间 效果，右图为 Demo 效果，效果优于 虎牙 实现。\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/huya.gif\" width = \"289\" height = \"638\"/>   <img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/huya_demo.gif\" width = \"289\" height = \"638\"/>\n\n\n#### 手机直播场景\n\n手机直播效果参考 抖音直播 实现，左图为 抖音直播 效果，右图为 Demo 效果，效果优于 抖音直播 实现。\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/douyin.gif\" width = \"289\" height = \"638\"/>   <img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/douyin_demo.gif\" width = \"289\" height = \"638\"/>\n\n\n#### 信息流评论场景\n\n信息流评论效果参考 微信朋友圈 实现，左图为 微信朋友圈 效果，右图为 Demo 效果，效果与微信朋友圈相同。\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/wechat_feed.gif\" width = \"289\" height = \"638\"/>   <img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/wechat_feed_demo.gif\" width = \"289\" height = \"638\"/>\n\n#### 复杂聊天场景\n\n* 自定义各个子View滑动\n* 支持模拟多个EditText拉起面板\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/api/cus_scroll_content.gif\" width = \"289\" height = \"638\"/>\n\n\n"
        },
        {
          "name": "README_SENCE.md",
          "type": "blob",
          "size": 3.6201171875,
          "content": "### Scene Directory\n1. Support changing the height of the input method dynamically/hiding the function panel when the navigation bar is hidden\n2. Chat scene (like WeChat)\n3. Video playback scene (class BiliBili)\n4. Computer live broadcast scene (like Huya live broadcast)\n5. Mobile phone live broadcast scene (like TikTok live broadcast)\n6. Information flow comment scene (like WeChat circle of friends)\n\n#### Support for dynamically changing the height of the input method/hiding the display of the navigation bar\nIn many IM scenarios on the market, when users change the height of the input method and switch back to the function panel, the height inconsistency occurs, as does WeChat. At the same time, it also needs to adapt to the devices with navigation bar operations, such as Huawei and Xiaomi. In order to pursue a smoother switching effect, the framework supports adapting the function panel when dynamically changing the height of the input method.\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/auto_adjust.gif\" width = \"270\" height = \"480\"/><img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/compat_navigation.gif\" width = \"270\" height = \"480\"/>\n\n#### Chat scene\n\nThe chat scene is applicable to any IM scene. Demo uses Activity/Fragment/DialogFragment/PopupWindow/Dialog respectively to realize the window technology you can use. You can refer to the chat scene in the Demo.\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/chat.gif\" width = \"289\" height = \"638\"/>\n\n#### Video playback scene\n\nRefer to the BiliBili implementation for video playback effects. The left picture shows the BiliBili effect, and the right picture shows the Demo effect. The effect is better than the BiliBili implementation.\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/bilibili.gif\" width = \"289\" height = \"638\"/>   <img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/bilibili_demo.gif\" width = \"289\" height = \"638\"/>\n\n#### Computer live broadcast scene\n\nRefer to the Huya live broadcast room for the computer live broadcast effect. The left picture shows the Huya live broadcast room. The right picture shows the Demo effect, which is better than the Huya live broadcast.\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/huya.gif\" width = \"289\" height = \"638\"/>   <img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/huya_demo.gif\" width = \"289\" height = \"638\"/>\n\n\n#### Mobile live broadcast scene\n\nFor the mobile phone live broadcast effect, please refer to the realization of Douyin Live. The picture on the left shows the effect of Douyin Live, and the picture on the right shows the effect of Demo.\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/douyin.gif\" width = \"289\" height = \"638\"/>   <img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/douyin_demo.gif\" width = \"289\" height = \"638\"/>\n\n\n#### Stream comment scene\n\nThe effect of the comment on the information flow can be found on the WeChat Moments. The picture on the left shows the effect of the WeChat Moments, and the picture on the right shows the effect of the Demo.\n\n<img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/wechat_feed.gif\" width = \"289\" height = \"638\"/>   <img src=\"https://github.com/YummyLau/PanelSwitchHelper/blob/master/source/scene/wechat_feed_demo.gif\" width = \"289\" height = \"638\"/>\n\n\n####Complex chat scene\n\n* Customize the sliding of each subview\n* Support to simulate multiple EditText to pull up the panel"
        },
        {
          "name": "README_UPDATE-zh.md",
          "type": "blob",
          "size": 6.708984375,
          "content": "### 更新日志\n\n* 1.0.1 支持兼容AndroidQ+焦点冲突，支持视频模式\n* 1.0.2 支持微信式滑动列表收起面板同时列表响应滑动事件，提升用户体验\n* 1.0.3 修复 [issue](https://github.com/YummyLau/PanelSwitchHelper/issues/10) 场景问题\n* 1.0.4 新增支持 Dialog/Fragment/DialogFragment\n* 1.0.5 支持适配华为/小米等支持动态导航栏隐藏的特殊机型\n* 1.1.0 追求极致的切换体验\n\t* 支持切换流程中动画加持，效果同步“微信聊天”场景，但支持的场景远远不止这些（见Demo），同时支持自定义动画速度\n\t* 优化框架内部切换流程，摈弃旧逻辑实现，新实现通过自定义绘制切换界面，无需担心内存泄漏\n\t* Demo新增自定义标题栏场景，优化视频场景体验\n* 1.1.1 支持适配全面屏/刘海屏/水滴屏幕等特殊场景\n\t* 优化内部计算有效面积高度，兼容特殊场景\n\t* 免去 bindPanelSwitchLayout api 调用，框架内部自定完成逻辑\n\t* Demo新增复杂IM交互场景\n* 1.1.2 新增内容滑动模式/内容固定模式动态切换api\n\t* 优化隐藏面板逻辑，提升动画流畅性\n\t* 新增内容滑动模式，内容区域可动态滑动到界面外部，类 adjustPan，默认开启\n\t* 新增内容固定模式，内容区域动态调整绘制区域，类 adjustResize\n\t* 解决 IM 场景下可能因为内容过少而被滑动外部的问题，支持动态切换模式，优化体验\n* 1.1.3 兼容谷歌渠道非公开SDK-API的使用要求，优化固定模式的绘制实现\n* 1.2.0 kotlin版本/新增支持多种布局类型的内容区域容器\n\t* panel 调整为 kotlin 语言实现，完全兼容现有功能及 Java，支持 DSL\n\t* 新增内容区域容器，默认提供线性/相对/帧布局，支持实现自定义内容区域容器\n\t* Demo 新增 kotlin 使用约束布局实现自定义容器，新增 4 种不同布局的容器场景\n* 1.2.2 修复已知缺陷及优化\n    * 合并 pr 修复 emptyView 引用错误问题\n    * 优化固定模式下切换的流畅性\n* 1.2.3 兼容 android pad 机型\n* 1.3.0 支持自动隐藏面板，开放自定义面板，优化性调整\n    * 新增 auto_reset_enable 及 auto_reset_area api 用于开放自动隐藏面板，摒弃 EmptyView\n    * 新增 IPanelView 接口，外部可自主实现 PanelView，更灵活\n    * 优化滑动模式下的动画实\n\n    `1.3.0` 为重要版本，建议升级，同时注意以下 Api 更改\n        * EmptyView 移除，可参考 Demo 如何更优雅实现隐藏面板\n        * 面板类规范命名，已原生 Linear/Relative/Frame 为前缀，更容易区分\n        * PanelView 迁移到 panel 包\n* 1.3.1 支持适配采用底部系统布局来捕获用户手势的机型，这部分机型在界面底部多出的系统view可能导致输入法计算有偏差。比如 Findx，红米等机型。\n* 1.3.2 支持xml布局预览，优化动画，解决Demo存在背景时切换面板背景可见的问题\n    * 1.3.2.1 兼容使用autoSize库的项目，解决可能因为状态栏高度被修改导致输入法高度计算错误的问题\n* 1.3.3 优化体验，修复已知问题\n    * 修复多fragment场景下 window 可能引起 fragment 内存泄漏问题\n    * 新增 `toPanelState`api 用于外部拉起面板\n    * 新增 `addDistanceMeasurer` 用于外部自主控制内容区域滑动，兼容 IM 场景下未满一屏数据被滑走的问题\n* 1.3.4 修复已知问题，增强功能\n    * 更改 api `contentCanScrollOutside` -> `contentScrollOutsideEnable`，用于切换固定/滑动模式\n    * 更改 api `addDistanceMeasurer` -> `addContentScrollMeasurer`, 当处于滑动模式时，可自主控制内容滑动距离\n    * 新增 api `addPanelHeightMeasurer` 用于设置默认面板高度，兼容未获取输入法场景\n    * 优化动画及内部逻辑\n* 1.3.5 兼容 AndroidQ 全屏虚拟导航栏手势模式，如 MiUI12 设备等\n* 1.3.6 扩展 api\n    * 扩展 `animationSpeed`，支持设置动画速度， `standard` 标准速，`slow` 慢速,`slowest` 最慢速,`fast` 快速,`fastest`最快速\n    * PanelSwitchHelper 新增判断当前面板状态，如 `isPanelState()` 等\n    * 优化全面屏软键盘高度计算逻辑，修复已知问题\n* 1.3.7 兼容OneUI 2版本前 s8/note8 等三星设备\n* 1.3.8 扩展 api\n    * 扩展 `PanelHeightMeasurer` 接口新增 `synchronizeKeyboardHeight` 方法控制面板高度是否同步软键盘高度\n    * Container 容器支持控制内部多层嵌套布局自由滑动\n* 1.3.10 支持全屏模式，支持额外设置EditText唤起面板，修复已知问题\n* 1.3.11 修复部分 MiUI 手机横屏状态栏拉起输入法异常问题，优化 Log 显示，统一所有自定义面板容器属性命名的前缀\n* 1.3.12 兼容悬浮键盘场景\n* 1.3.13 兼容部分手机锁屏收起输入法问题；兼容华为定制平板问题；优化全屏显示速度；\n* 1.4.0 该版本起仅支持 Androidx，非 Androidx 不再维护\n    * 修复三星部分设备的兼容问题\n    * 新增 `setTriggerViewClickInterceptor` 支持动态控制 TriggerView 是否自动响应\"点击触发切换面板\"行为，默认相应\n    * 新增 `DisUtils#setCompatSizeProxy` 支持动态设置像素转化逻辑\n* 1.5.0 支持Android 11键盘过渡动画特性\n    * 添加了悬浮弹窗场景的用例。\n    * `PanelSwitchLayout` 控件添加了 `enableKeyboardAnimator` 属性，用来控制是否启用Android 11 的键盘动画效果，默认开启。\n    * Android 11 键盘过渡动画需要在 SOFT_INPUT_ADJUST_NOTHING 模式下才能生效。\n    * 暂时不支持DialogFragment、PopupWindow、悬浮弹窗等场景下Android 11键盘过渡动画效果。\n    * 修复已知Bug [issue](https://github.com/DSAppTeam/PanelSwitchHelper/issues)\n* 1.5.1 修复已知Bug。\n    * 修复ContentScrollMeasurer计算子View高度不准确问题。\n    * IContentContainer#layoutContainer()添加了changed参数，用来判断是否需要重新布局。\n* 1.5.2 修复已知Bug。\n    * 修复Android 11 以上布局偏移量变化后，布局位置没有同步的问题。\n* 1.5.3 修复已知Bug。\n    * 修复快速滑动列表时，偏移量计算异常的问题。\n    * 优化viewPosition位置变化的监听。\n* 1.5.4 修复已知Bug，提供兼容方案。\n    * 更改 api `enableKeyboardAnimator` -> `android11KeyboardFeature`，用来控制是否启用Android 11 的键盘动画效果，默认开启。\n    * 新增 `PanelSwitchLayout`提供两个兼容方法（`softInputHeightCalculatorOnStart`，`softInputHeightCalculatorOnProgress`），针对Android 11以上开启键盘动画特性，高度获取失败时，对外提供兼容方案。\n* 1.5.5 修复已知Bug，支持ViewPager、ViewPager2场景。\n    * 添加 PanelSwitchLayout.recycle() 方法，用于释放键盘高度变化监听器。\n"
        },
        {
          "name": "README_UPDATE.md",
          "type": "blob",
          "size": 7.1015625,
          "content": "### Update log\n\n* 1.0.1 Support compatible AndroidQ+ focus conflict, support video mode\n* 1.0.2 Support WeChat-style sliding list. Collapse the panel while the list responds to sliding events, improving the user experience\n* 1.0.3 Fix [issue](https://github.com/YummyLau/PanelSwitchHelper/issues/10) scene issue\n* 1.0.4 Added support for Dialog/Fragment/DialogFragment\n* 1.0.5 Supports special models such as Huawei/Xiaomi that support dynamic navigation bar hiding\n* 1.1.0 Pursuing the ultimate switching experience\n    * Supports animation blessing in the switching process, the effect is synchronized with the \"WeChat chat\" scene, but the supported scenes are far more than these (see Demo), and support custom animation speed\n    * Optimize the internal switching process of the framework, abandon the old logic implementation, and the new implementation uses custom drawing to switch the interface without worrying about memory leaks\n    * Demo adds a custom title bar scene to optimize the video scene experience\n* 1.1.1 Supports special scenes such as full screen/bang screen/drop screen\n    * Optimize internal calculation of effective area height, compatible with special scenes\n    * Eliminate the call to bindPanelSwitchLayout api, and customize the logic inside the framework\n    * Demo adds complex IM interaction scenarios\n* 1.1.2 Added content sliding mode/content fixed mode dynamic switching api\n    * Optimize hidden panel logic to improve animation fluency\n    * Added content sliding mode, the content area can dynamically slide to the outside of the interface, class adjustPan, enabled by default\n    * Added content fixed mode, content area dynamically adjust drawing area, class adjustResize\n    * Solve the problem of being slid outside due to too little content in IM scenarios, support dynamic switching mode, optimize experience\n* 1.1.3 Compatible with the use requirements of Google channel non-public SDK-API, optimize the fixed mode drawing implementation\n* 1.2.0 kotlin version/new content area container that supports multiple layout types\n    * Panel is adjusted to kotlin language implementation, fully compatible with existing functions and Java, and supports DSL\n    * Added content area container, default provides linear/relative/frame layout, supports custom content area container\n    * Demo adds kotlin to use constraint layout to implement custom containers, and adds 4 different layout container scenarios\n* 1.2.2 Fix known defects and optimize\n    * Merged pr to fix emptyView reference error\n    * Optimize the smoothness of switching in fixed mode\n* 1.2.3 compatible with android pad models\n* 1.3.0 Support auto hide panel, open custom panel, optimization adjustment\n    * Added auto_reset_enable and auto_reset_area api to open auto hide panel and abandon EmptyView\n    * Add IPanelView interface, externally can realize PanelView independently, more flexible\n    * Optimized animation in sliding mode\n\n    `1.3.0` is an important version, it is recommended to upgrade, and pay attention to the following Api changes\n\n    * EmptyView removed, please refer to Demo How to realize hidden panel more elegantly\n    * Panel class specification naming, with native Linear/Relative/Frame as a prefix, it is easier to distinguish\n    * PanelView migrated to panel package\n\n* 1.3.1 supports using the bottom system layout to capture a copy of the user's gesture. The extra system view at the bottom of the interface in this part of the layout may cause input method calculations to be biased. Rice and other samples.\n* 1.3.2 supports xml layout preview, optimizes animation, and solves the problem that the background of the switch panel is visible when there is a background in the presentation\n    * 1.3.2.1 Compatible with projects that use the autoSize library, to solve the problem that the height of the input method may be incorrectly calculated due to the height of the status bar\n* 1.3.3 Optimize the experience and fix known problems\n     * Fixed the problem that window may cause fragment memory leak in multiple fragment scenarios\n     * Remove fixed mode, remove `contentCanScrollOutside` api, slide mode to achieve high performance sliding, remove bang api judgment\n     * Added `toPanelState`api for externally pulling up the panel\n     * Added `addDistanceMeasurer` for external autonomous control of content area sliding, compatible with the problem of data being swept away under a screen in IM scenarios\n* 1.3.4 Fix known issues and enhance functions\n    * Change api`contentCanScrollOutside`->`contentScrollOutsideEnable` to switch fixed/scroll mode\n    * Change api`addDistanceMeasurer`->`addContentScrollMeasurer`, when in sliding mode, can control the content sliding distance independently\n    * Add api`addPanelHeightMeasurer` to set the panel height, compatible with scenes without input method\n    * Optimized animation and internal logic\n* 1.3.5 Compatible with AndroidQ full-screen virtual navigation bar gesture mode, such as MiUI12 devices, etc.\n* 1.3.6 extended api\n    * Extended `animationSpeed`, supports setting the animation speed, `Standard`, `Slow`, `Slowest`, `Fast`, `Fastest`\n    * PanelSwitchHelper added to judge the current panel state, such as `isPanelState()` etc.\n    * Optimize the height calculation logic of the full-screen soft keyboard and fix known issues\n* 1.3.7 Compatible with Samsung devices such as s8/note8 before OneUI 2 version\n* 1.3.8 Extension api\n    * Extend the `PanelHeightMeasurer` interface and add the `synchronizeKeyboardHeight` method to control whether the panel height is synchronized with the soft keyboard height\n    * Container supports to control the internal multi-layer layout freely sliding\n* 1.3.10 Supports full screen mode, supports additional setting of EditText to invoke the panel, and fixes known issues\n* 1.3.11 Fixed some MiUI mobile phone horizontal screen status bar pull up the input method abnormal problem, optimize the Log display, unify the prefix of all custom panel container property names\n* 1.3.12 compatible with floating keyboard scene\n* 1.3.12 Compatible with some mobile phone lock screen input method issues; compatible with Huawei customized tablet issues; optimize the full screen display speed;\n* 1.4.0 Starting from 1.4.0, only Androidx is supported, non-Androidx is no longer maintained\n     * Fix the compatibility issue of some Samsung devices\n     * Added `setTriggerViewClickInterceptor` to support dynamic control of whether TriggerView automatically responds to the \"click to trigger switch panel\" behavior, the default is corresponding\n     * Added `DisUtils#setCompatSizeProxy` to support dynamic setting of pixel conversion logic\n* 1.5.0 Support WindowInsetsAnimation in android r (Android 11)\n  * Added use case for WindowManager#addView(View view, ViewGroup.LayoutParams params).\n  * Add Attributes `enableKeyboardAnimator` for `PanelSwitchLayout` , to enable support WindowInsetsAnimation in android r (Android 11).\n  * Note that WindowInsetsAnimation in android r (Android 11) should work with SOFT_INPUT_ADJUST_NOTHING.\n  * Currently WindowInsetsAnimation not supported well when use DialogFragment、PopupWindow and WindowManager.\n  * Fixed bug [issue](https://github.com/DSAppTeam/PanelSwitchHelper/issues)"
        },
        {
          "name": "android.keystore",
          "type": "blob",
          "size": 2.146484375,
          "content": null
        },
        {
          "name": "app-androidx",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.013671875,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    apply from: 'versions.gradle'\n    ext {\n        kotlin_version = '1.3.71'\n    }\n\n    repositories {\n        google()\n        jcenter()\n        maven { url 'https://jitpack.io' }\n    }\n    dependencies {\n        classpath \"com.android.tools.build:gradle:$versions.android_gradle_plugin\"\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n        maven { url 'https://jitpack.io' }\n    }\n    gradle.projectsEvaluated {\n        tasks.withType(JavaCompile) {\n            options.compilerArgs << \"-Xlint:unchecked\" << \"-Xlint:deprecation\"\n        }\n    }\n\n    tasks.withType(Javadoc) {\n        options.addStringOption('Xdoclint:none', '-quiet')\n        options.addStringOption('encoding', 'UTF-8')\n        options.addStringOption('charSet', 'UTF-8')\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.9931640625,
          "content": "## For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n#\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx1024m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n#\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n#Fri Jun 12 11:17:21 CST 2020\nandroid.enableJetifier=true\nandroid.useAndroidX=true\nandroid_gradle_plugin=4.1.2\norg.gradle.jvmargs=-Xmx2048M -Dkotlin.daemon.jvm.options\\=\"-Xmx2048M\"\n# mac 升级到 BigSur java 环境发生改变，主动申明\n#org.gradle.java.home=/Applications/Android Studio.app/Contents/jre/jdk/Contents/Home"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windows variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "panel-androidx",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0869140625,
          "content": "//include ':app'\n//include ':panel'\n\n//include ':app-androidx'\ninclude ':panel-androidx'\n"
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        },
        {
          "name": "versions.gradle",
          "type": "blob",
          "size": 1.91796875,
          "content": "ext.deps = [:]\ndef versions = [:]\nversions.android_gradle_plugin = android_gradle_plugin\nversions.support = \"27.1.1\"\nversions.pageindicator = \"v1.0.1\"\nversions.panelSwitchHelper = \"1.5.12\"\nversions.multidex = \"1.0.1\"\nversions.constraint = \"1.1.2\"\nversions.circleimageview = \"3.1.0\"\nversions.androidx = \"1.1.0\"\nversions.androidx_core = \"1.6.0\"\next.versions = versions\n\n\ndef support = [:]\nsupport.v7 = \"com.android.support:appcompat-v7:$versions.support\"\nsupport.annotations = \"com.android.support:support-annotations:$versions.support\"\nsupport.recyclerview = \"com.android.support:recyclerview-v7:$versions.support\"\nsupport.multidex = \"com.android.support:multidex:$versions.multidex\"\nsupport.constraint = \"com.android.support.constraint:constraint-layout:$versions.constraint\"\next.deps.support = support\n\ndef androidx = [:]\nandroidx.core = \"androidx.core:core:$versions.androidx_core\"\nandroidx.appcompat = \"androidx.appcompat:appcompat:$versions.androidx\"\nandroidx.annotations = \"androidx.annotation:annotation:$versions.androidx\"\nandroidx.recyclerview = \"androidx.recyclerview:recyclerview:$versions.androidx\"\nandroidx.multidex = \"androidx.multidex:multidex:$versions.androidx\"\nandroidx.constraint = \"androidx.constraintlayout:constraintlayout:$versions.androidx\"\next.deps.androidx = androidx\n\next.deps.pageindicator = \"com.github.romandanylyk:PageIndicatorView:$versions.pageindicator\"\next.deps.android_gradle_plugin = \"com.android.tools.build:gradle:$versions.android_gradle_plugin\"\next.deps.panelSwitchHelper_androidx = \"com.github.YummyLau:PanelSwitchHelper:$versions.panelSwitchHelper\"\next.deps.circleimageview = \"de.hdodenhof:circleimageview:$versions.circleimageview\"\n\ndef config = [:]\nconfig.min_sdk_version = 16\nconfig.target_sdk_version = 31\nconfig.compile_sdk_version = 31\nconfig.build_tool_version = \"30.0.3\"\nconfig.version_code = 1\nconfig.version_name = \"1.0\"\nconfig.java_source_version = \"1.8\"\nconfig.java_target_version = \"1.8\"\next.config = config\n\n"
        }
      ]
    }
  ]
}