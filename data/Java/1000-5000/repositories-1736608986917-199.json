{
  "metadata": {
    "timestamp": 1736608986917,
    "page": 199,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "oblac/jodd",
      "stars": 4059,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codacy.yml",
          "type": "blob",
          "size": 0.064453125,
          "content": "exclude_paths:\n  - '**/src/test/**'\n  - '**/asm6/**'\n  - '**/*.py'"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1787109375,
          "content": "root = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\n\n[*.java]\nindent_style = tab\n\n[*.js]\nindent_style = space\nindent_size = 2\n\n[*.gradle]\nindent_style = tab\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.134765625,
          "content": "*/dist/\n*/out/\n*/build\n*.iml\n.idea\n/user.*\n.gradle\ntarget\n/jodd-bom/jodd-bom.txt.asc\n\n.project\n.classpath\n.settings\n/.coveralls.yml\nbuild\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.76171875,
          "content": "[submodule \"jodd-lagarto\"]\n\tpath = jodd-lagarto\n\turl = https://github.com/oblac/jodd-lagarto\n[submodule \"jodd-util\"]\n\tpath = jodd-util\n\turl = https://github.com/oblac/jodd-util\n[submodule \"jodd-mail\"]\n\tpath = jodd-mail\n\turl = https://github.com/oblac/jodd-mail\n[submodule \"jodd-json\"]\n\tpath = jodd-json\n\turl = https://github.com/oblac/jodd-json\n[submodule \"jodd-http\"]\n\tpath = jodd-http\n\turl = https://github.com/oblac/jodd-http\n[submodule \"jodd-props\"]\n\tpath = jodd-props\n\turl = https://github.com/oblac/jodd-props\n[submodule \"jodd-proxetta\"]\n\tpath = jodd-proxetta\n\turl = https://github.com/oblac/jodd-proxetta\n[submodule \"jodd-petite\"]\n\tpath = jodd-petite\n\turl = https://github.com/oblac/jodd-petite\n[submodule \"jodd-db\"]\n\tpath = jodd-db\n\turl = https://github.com/oblac/jodd-db\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.47265625,
          "content": "sudo: required\nlanguage: java\n\njdk:\n  - openjdk8\n#  - openjdk11\n\nmatrix:\n  fast_finish: true\n  allow_failures:\n    - jdk: openjdk11\n\ninstall:\n  - TERM=dumb ./gradlew assemble\n\n#before_script:\n#  - sleep 15\n\nscript:\n  - TERM=dumb ./gradlew testAll codeCoverageReport --stacktrace\n\nafter_success:\n  - bash <(curl -s https://codecov.io/bash)\n\n#after_failure:\n#  - TERM=dumb ./gradlew build testAll --stacktrace\n\ncache:\n  directories:\n  - $HOME/.gradle/caches/\n  - $HOME/.gradle/wrapper/\n"
        },
        {
          "name": "ACKNOWLEDGEMENTS.md",
          "type": "blob",
          "size": 0.6806640625,
          "content": "# Acknowledgements\n\n## 3rd Party Libraries\n   \nJodd is bundled with the following 3rd party sources:\n\n+ [ASM v6.2](http://asm.ow2.org), BSD license\n+ [BCrypt v0.4](http://www.mindrot.org/projects/jBCrypt/), ISC/BSD licence\n+ [NanoHTTPD v1.25](https://github.com/NanoHttpd/nanohttpd), BSD license \n\n## Software\n\nJodd is made with:\n\n+ [IntelliJ IDEA](https://www.jetbrains.com/idea/)\n+ [YourKit profiler](https://www.yourkit.com)\n\nThanx for providing open-source licenses!\n\n## Friendly Projects\n\nThese projects made significant impact and provided awesome amount of help.\n\n+ [Gatling](https://gatling.io)\n+ [Liferay](http://liferay.com)\n\n(p.s. sorry if we missed someone; please let us know if so!)\n"
        },
        {
          "name": "BENCHMARKS.md",
          "type": "blob",
          "size": 0.9423828125,
          "content": "# Jodd Benchmarks\n\nWhile Jodd is developer-friendly, we also strive for the best performances possible under the hood. For some tools or components, we are the best in the class; for others we are among the most performing. While the performance is our priority, we will _never_ sacrifice the developer-friendly environment (usage and interfaces) that Jodd has. \n\n## Running Benchmarks :rocket:\n\nBenchmarks are started from command line in root directory with:\n \n```\ngradlew :<module>:<benchmark-class-name>\n````\n\n(e.g.: `gradlew :jodd-core:Base32Benchmark`) \n\n\n## 3rd Party Benchmarks :heart:\n\nOther people test Jodd, too :)\n\n+ Css selectors microbenchmark for the JVM; by [Gatling](https://gatling.io)\n\nhttps://github.com/gatling/lib-benchmarks/tree/master/cssselectors-benchmark-master\n\n+ JsonPath implementations microbenchmark for the JVM; by [Gatling](https://gatling.io) \n  \nhttps://github.com/gatling/lib-benchmarks/tree/master/jsonpath-benchmark-master\n\n \n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 6.5029296875,
          "content": "# Jodd Changelog\n\nAll notable changes to Jodd project are documented here.\n\n## [n/a](https://github.com/oblac/jodd/compare/v5.0.15...master)\n\n\n\n## [v5.0.15](https://github.com/oblac/jodd/compare/v5.0.13...v5.0.15)\n\n### New Features\n\n+ **madvoc** - added `@In.defaultValue()`\n+ **json** - added type parser map.\n+ **methref** - added counter for methref detection.\n\n### Breaking changes\n\n+ **methref** - methods `on()` and `to()` renamed to `of()` and `get()`. \n+ **pathref** - methods `on()` and `to()` renamed to `of()` and `get()`.\n+ **jerry** - removed `$()` method in favor of `s()` - graal compatible.\n\n### Bug fixes\n\n+ **http** - cookies not passed down in `HttpBrowser` after a redirect occurs.\n+ **lagarto** - fixed issue with the conditional comments \n\n## [v5.0.13](https://github.com/oblac/jodd/compare/v5.0.12...v5.0.13)\n\n### New Features\n\n+ **proxetta** - updated to ASM 7.1.\n\n### Breaking changes\n\n+ **jerry** - method `$()` deprecated (and will be removed soon). \n\n### Bug fixes\n\n+ **core** - `MimeTypes` return extensions in correct order.\n+ **http** - fixes special case when server returns `null` for chunked encoding.\n+ **http** - fixed `SSLSocketHttpConnectionProvider` that was being ignored.\n+ **db** - fix for primitives in `SqlChunk`.\n+ **proxetta** - fixed an issue when generics were defined in declaration of supertype.\n\n\n## [v5.0.12](https://github.com/oblac/jodd/compare/v5.0.11...v5.0.12)\n\n### Bug fixes\n\n+ **db** - fixed empty checking for numberic and char fields\n+ **db** - debug log works better for dates\n+ **json** - fixed lazy map\n+ **stapler** - fixed issue with data urls in CSS\n\n## [v5.0.11](https://github.com/oblac/jodd/compare/v5.0.10...v5.0.11)\n\n### Breaking changes\n\n+ **bean** - internals of Java system classes are no longer accessible.\n\n### Bug fixes\n\n+ **db** - fixed special case of double columns, used in PostgreSQL.\n+ **stapler** - fixed issue with absolute urls in CSS.\n\n\n## [v5.0.10](https://github.com/oblac/jodd/compare/v5.0.9...v5.0.10)\n\n### New features\n\n+ **decora** - added `decora.cache` flag that caches decorator content\n+ **decora** - added methods on `DecoraManager` to register the decorator content or files.\n+ **json** - internal improvements (thanx to [Gatling](https://gatling.io) !)\n\n### Bug fixes\n\n+ **json** - fixed issue with parsing slashes in lazy mode.\n\n\n## [v5.0.9](https://github.com/oblac/jodd/compare/v5.0.8...v5.0.9)\n\n### Bug fixes\n\n+ **core** - removed usage of `Random`.\n+ **dboom** - removed using aspects for `Loggable` connections.\n+ **http** - use `connectionTimeout` to timeout proxy sockets, too. \n\n\n## [v5.0.8](https://github.com/oblac/jodd/compare/v5.0.7...5.0.8)\n\n### New features\n\n+ **json** - added `strictTypes` flag for `JsonParser`.\n\n### Breaking changes\n\n+ **bean** - method/field descriptors are no longer getter/setters.\n\n### Bug fixes\n\n+ **http** - fixed particular case of changing the host value.\n+ **madvoc** - the matched path chunk with non-macros will win over the path chunk with macros. \n\n\n## [v5.0.7](https://github.com/oblac/jodd/compare/v5.0.6...v5.0.7)\n\n### New features\n\n+ **http** - added `EMLComposer.compose` for `ReceivedEmail`.\n+ **http** - added max number of redirects, defaulting to 50.\n\n### Breaking changes\n\n+ **db** - `GenericDao` uses generic id, not `long` anymore.\n+ **madvoc** - empty parameters are `null` now.\n\n### Bug fixes\n\n+ **props** - fixed conversion to `Map`.\n+ **db** - fixed `LocalDate` and `LocalDateTime` mappings.\n+ **http** - allowing `contentTypeJson` to be used in any order.\n+ **http** - fixed an issue with re-reading the request.\n+ **http** - fixed an issue with query param parsing.\n+ **core** - fixed up Java version parsing.\n\n\n## [v5.0.6](https://github.com/oblac/jodd/compare/v5.0.5...v5.0.6)\n\n### New features\n\n+ **bean** - added special support for inner `Supplier` for `BeanUtil`.\n+ **proxetta** - updated to ASM7.\n\n### Bug fixes\n\n+ **core** - fixed `java.version` parsing under Java 11.\n\n\n## [v5.0.5](https://github.com/oblac/jodd/compare/v5.0.4...v5.0.5)\n\nJust refreshing with some bug fixes and few new features.\n\n### Bug fixes\n\n+ **json** - fixed particular case with lazy parsing and escaped chars.\n+ **mail** - fixed special case with 1 body and 1 attachment.\n+ **core** - fixed Zip slip vulnerability.\n\n### New features\n\n+ **core** - `FileUtil.mkdirs` return created folder.\n+ **email** - added new method for unsetting the email flags in builder.\n\n\n## [v5.0.4](https://github.com/oblac/jodd/compare/v5.0.3...v5.0.4)\n\nMany little improvements plus one important fix for `jodd-mail`. Sorry for any inconvenience.\n\n### Bug fixes\n\n+ **core** - fixed special cases in `NaturalOrderComparator`, making rules a bit more strict.\n+ **mail** - fixed unused `debug` and `timeout`.\n+ **mail** - `RFC2822AddressParser` methods `parseToXxx()` now returns `null` for invalid emails.\n+ **http** - secure connection was sending `CONNECT` string twice.\n\n### Breaking changes\n\n+ **mail** - `debug` and `timeout` are now applied before creating the mail server.\n+ **http** - default security has been set to `TLSv1.1`.\n\n### New features\n\n+ **joy** - added excluded jars for faster scanning.\n+ **mail** - added custom properties.\n+ **json** - added `onValue` callback for JSON serializer.\n+ **json** - added `excludeEmpty` flag for JSON serializer.\n+ **json** - added `allowClass` for whitelisting class names.\n+ **petite** - allow injection in the private fields of super types.\n\n\n\n## [v5.0.3](https://github.com/oblac/jodd/compare/v5.0.2...v5.0.3)\n\n### New features\n\n+ **dboom** - added detection of the quote names in annotations.\n+ **dboom** - Added flags to column and table naming strategies for quote chars.\n\n\n\n## [v5.0.2](https://github.com/oblac/jodd/compare/v5.0.1...v5.0.2)\n\nOne minor fix and one important change for the bootstrap usages.\n\n### New features\n\n+ **joy** - added static method for registering joy servlet context listener.\n\n### Bug fixes\n\n+ **joy** - better output of the Joy configuration that does not cut of the values.\n\n\n\n## [v5.0.1](https://github.com/oblac/jodd/compare/v5.0.0...v5.0.1)\n\nMinor fixes and improvements.\n\n### New features\n\n+ **core*** - added the `Maybe.or(T)` method.\n+ **mail** - added `receive()` and fluent builder.\n+ **cli*** - parse values bundled with options (e.g. `--name=value`)\n\n### Bug fixes\n\n+ **cli** - fixed the behaviour of parameters\n\n\n\n## [v5](https://github.com/oblac/jodd/compare/v4.3.2...v5.0.0)\n\nWelcome to Jodd 5.\n\nVersion 5 contains a great number of new features, changes, bug fixes and performance improvements. It's all new Jodd: slick as before, just better.\n\nHigh-five!\n\n## Previous releases\n\n[v4.x](CHANGELOG_v4.md)\n[v3.x](CHANGELOG_v3.md)\n"
        },
        {
          "name": "CHANGELOG_v3.md",
          "type": "blob",
          "size": 4.65234375,
          "content": "# Jodd v3.x Changelog\n\n## [3.9.1](https://github.com/oblac/jodd/compare/v3.9...3.9.1)\n\n### Bug Fixes\n\n+ **proxetta** - fixed the bug with nested generics.\n+ **madvoc** - fixed bug with `move` result.\n+ **dboom** - fixed the issue with the MSSQL and custom behaviour.\n\n### Features\n\n+ **dboom** - Added support for SQLite.\n\n### Breaking changes\n\n+ **db** - `DbDetector` now returns a new type.\n+ **swingspy** - removed :)\n\n## [3.9](https://github.com/oblac/jodd/compare/v3.8.6...3.9)\n\n### Bug Fixes\n\n+ **http** - fixed bug with multiple headers.\n+ **db** - `CallableStatement` are supported in debug mode [#420](https://github.com/oblac/jodd/issues/420).\n+ **proxetta** - added all interfaces while scanning the target class info.\n+ **proxetta** - fixed generic array [#418](https://github.com/oblac/jodd/issues/418).\n\n### Features\n\n+ **http** - Added strict headers flag for storing headers as they are passed to the engine.\n+ **json** - Added two `JsonParser` methods for easier parsing to a map and a list.\n+ **json** - New generic JSON classes added: `JsonArray` and `JsonObject`.\n+ **core** - Added `MapEntry` implementations.\n+ **core** - Added `snapshot()` method to `Cache`.\n+ **proxetta** - Added `TypeInfo` for tracking method arguments and return types.\n\n## Breaking changes\n\n+ **http** - Http `headers` was removed in favor of `headerNames()`.\n+ **json** - strings are now not strictly parsed (`/` is not longer escaped).\n+ **proxetta** - all interfaces are scanned now when looking for the target info.\n+ **core** - `iterator()` removed from the `Cache`.\n+ **proxetta** - `MethodInfo` interface is changed.\n\n## [3.8.6](https://github.com/oblac/jodd/compare/v3.8.5...3.8.6)\n\n### Bug Fixes\n\n+ **core** - fixes `downloadFile` to download bigger files as well.\n+ **lagarto** - bug introduced in 3.8.5; bad parsing of pseudo-function arguments [#407](https://github.com/oblac/jodd/issues/407).\n\n### Features\n\n+ **http** - default user agent now can be set [#410](https://github.com/oblac/jodd/pull/410).\n+ **log** - added Log4j2 support.\n+ **jtx** - added `ReadWriteTransaction` annotation to codebase.\n\n## Breaking changes\n\n+ **log** - factories are now called \"providers\", now stored in each logger.\n+ **email** - Content-Disposition and Content-ID flags are now separate [#404](https://github.com/oblac/jodd/issues/404).\n\n\n## [3.8.5](https://github.com/oblac/jodd/compare/v3.8.1...v3.8.5)\n\n### Bug Fixes\n\n+ **db** - `SqlBuilder#generateQuery` may be called multiple times.\n+ **http** - `response#cookies()` does not throw exception on invalid cookies.\n+ **http** - fixed special case with `Cookie` parsing.\n+ **core** - natural comparison has been fixed to follow comparator contracts.\n\n### Features\n\n+ **core** - added `FileLRUCache`.\n+ **proxetta** - added `AopProxy`, simple tool for aop using just java.\n+ **core** - added `AppendableWriter`.\n+ **email** - `SendMailSession` is now `AutoCloseable`.\n+ **db** - added Db detector [#401](https://github.com/oblac/jodd/issues/401).\n+ **db** - added basic callable support [#389](https://github.com/oblac/jodd/issues/389).\n+ **lagarto** - allow strings in css selector pseudo functions without quotation marks [#301](https://github.com/oblac/jodd/issues/301).\n+ **db** - added `resetAll` method for hard-resetting the queries.\n+ **http** - address parsing and exception message is much better.\n+ **http** - added optional encoding for `HttpRequest#readFrom`.\n+ **email** - email parser is improved.\n+ **core** - natural comparison improved and accents added.\n+ **core** - added `ThreadFactoryBuilder`.\n+ **core** - added `Futures` utilities.\n+ **core** - added stream-related `Collection` utilities.\n\n### Breaking changes\n\n+ **core** - `ClassUtil#invoke` methods are gone.\n+ **core** - `ReflectUtil` is now `ClassUtil`: sorry, but the name was super ugly.\n+ **core** - `PreattyStringBuilder` simplified the interface.\n+ **core** - `DirWatcher` now accepts `Consumer`s instead of custom listener.\n+ **core** - `FindFile` interface changed to match Java8.\n+ **core** - renamed methods in `Cache` interface.\n+ **email** - renamed `EmailAddress`, it is used now as a Email parser.\n+ **dboom** - method `_` has been removed. Use `append` instead.\n\n### System\n\n+ **gradle** - updated to Gradle 3.4.1\n\n\n## [3.8.1](https://github.com/oblac/jodd/compare/v3.8.0...v3.8.1)\n\n### Bug Fixes\n\n+ **core** - fixed issue with `StringBand` calculation.\n\n## Performance\n\n+ **core** - added performance check for `StringBand`.\n\n### Features\n\n+ **lagarto** - added `contents`, `.after`, `replaceWith`, `unwrap`, `prepend`, `prevAll()`, `nextAll` to Jerry.\n+ **http** - added `trustAllCerts` to http client.\n+ **core** - added `Chalk` class.\n\n## Breaking changes\n\n+ **core** - `CommandLine` removes custom shell execution code.\n"
        },
        {
          "name": "CHANGELOG_v4.md",
          "type": "blob",
          "size": 3.529296875,
          "content": "# Jodd v4.x Changelog\n\n## [4.3.2](https://github.com/oblac/jodd/compare/v4.3.1...4.3.2)\n\nMinor fixes.\n\n### Features\n\n+ **bean** - added missing date-time type converters.\n+ **dboom** - added missing date-time sql type converters.\n+ **json** - added missing date-time json type converters.\n\n### Bug Fixes\n\n+ **core** - fixed special cases of `StringTemplateParser` usage.\n+ **mail** - fixed NPE when creating SSL variant of email server.\n\n\n## [4.3.1](https://github.com/oblac/jodd/compare/v4.3.0...4.3.1)\n\nJust few minor changes.\n\n### Features\n\n+ **madvoc** - added two more configurations: `defaultViewPageName` and `defaultViewExtensions`.\n+ **joy** - add option to use custom web application with `useWebApp()` method.\n\n### Breaking changes\n\n+ **code** - removed `JoddArrayList`. \n\n\n## [4.3.0](https://github.com/oblac/jodd/compare/v4.2.0...4.3.0)\n\nAn emotional roller coaster of the release :)\n\n### Breaking changes\n\n+ **all** - no more internal modules, removed `Defaults` \n+ **upload** - module moved to core\n+ **core** - `JDateTime` removed.\n+ **core** - `Printf` removed.\n+ **core** - `LocaleUtil` and `DateFormatSymbolsEx` removed.\n\n### Features\n\n+ **json** - the order of the keys in JSON is now preserved.\n+ **core** - added `TimeUtil` utils. \n+ **core** - added `JulianDate` class, just for Julian dates.\n+ **joy** - allow to set manually props files to load.\n\n### Bug Fixes\n\n+ **http** - special case of media and charset heading value.\n+ **madvoc** - fixes body reading on Jetty.\n\n## [4.2.0](https://github.com/oblac/jodd/compare/v4.1.5...4.2.0)\n\n### Features\n\n+ **json** - lazy parser mode performance improved... a lot.\n+ **core** - added `TypeCache` with 4 different implementations.\n\n## [4.1.5](https://github.com/oblac/jodd/compare/v4.1.4...4.1.5)\n\nLike in every movie flick, having a nice release is always a good thing. Jodd is ready for an Oscar :) In this episode find some sweet addons.\n\n### Features\n\n+ **bean** - `UUID` type converter added.\n+ **json** - added `UUID` JSON type serializer.\n+ **petite** - added `@PetiteValue` annotation for injecting parameters.\n+ **petite** - added `implicitParamInjection` flag to enable/disable implicit injection.\n+ **props** - added optional default values when getting props.\n+ **json** - added `PrettyJsonSerializer`!\n+ **core** - enabled unlimited crypto security (requires > Java8 u151)\n+ **core** - added engines for digest, hashes and encryption \n+ **core** - `StringUtil` methods for conversion to and from `byte[]`.\n\n### Bug Fixes\n\n+ **gradle** - fixes the `pom.xml` for `jodd-all`.\n\n\n## [4.1.4](https://github.com/oblac/jodd/compare/v4.1.1...v4.1.4)\n\n+ **core** added `jre9` classifier release\n+ **gradle** migrated to new `maven-publish` plugin\n+ **all** jars are now signed with the correct PGP key\n\n## [4.1.1](https://github.com/oblac/jodd/compare/v4.1.0...v4.1.1)\n\n### Bug Fixes\n\n+ **core** - fixed a regression with the stream copying.\n+ **email** - fixed access issue for a `Builder`.\n+ **core** - `JavaBridge` now works with Java9.\n\n### Features\n\n+ **http** - added a `header(Map)` method to `HttpRequest`.\n\n### Breaking changes\n\n+ **core** - `ClassScanner` now begins scanning with `scan()`.\n+ **http** - methods with `boolean` argument renamed to `*Overwrite`.\n+ **http** - methods named `remove` renamed. \n\n## [4.1.0](https://github.com/oblac/jodd/compare/v3.9.1...v4.1.0)\n\nThis is the first 4.x release. It contains a _massive_ set of changes from the version 3.\n\nHey, what happened to 4.0? It was not production ready. We introduced some performance regressions. THey are fixed now. \n\n## Previous releases\n\n[v3](CHANGELOG_v3.md)\n"
        },
        {
          "name": "CODE_COVERAGE.md",
          "type": "blob",
          "size": 0.892578125,
          "content": "# Code Coverage Report generation\n\nTo generate the code coverage report, execute the following command:\n\nWindows:\n\n\tgradlew.bat codeCoverageReport\n\nLinux/Unix/OSX:\n\n\t./gradlew codeCoverageReport\n\nThis will generate the code coverage report for **ALL** the modules.\n\n_NOTE_: since the code coverage task runs the integration tests, be sure that testing docker containers are up and running:\n\n\tcd docker\n\tdocker-compose -f docker-compose-test.yml up  \n\n### Reports location\n\nCode Coverage report is located here:\n\n\tbuild/reports/jacoco/codeCoverageReport/html/index.html\n\t\n## Code Coverage for a single module :star:\n\nRun:\n\n\t./gradlew :<MODULE>:codeCoverage\n\nThe result is located in:\n\n\tMODULE/build/reports/jacoco/index.html\n\t\nFor example:\n\n\t./gradlew :jodd-core:codeCoverage\n\topen jodd-core/build/reports/jacoco/index.html\n\t\n_NOTE_: Package `jodd.asm6` is _excluded_ from code coverage, but still reported locally."
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.107421875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, gender identity and expression, level of experience, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n+ Using welcoming and inclusive language\n+ Being respectful of differing viewpoints and experiences\n+ Gracefully accepting constructive criticism\n+ Focusing on what is best for the community\n+ Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n+ The use of sexualized language or imagery and unwelcome sexual attention or advances\n+ Trolling, insulting/derogatory comments, and personal or political attacks\n+ Public or private harassment\n+ Publishing others' private information, such as a physical or electronic address, without explicit permission\n+ Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at **igor@jodd.org**. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant](https://contributor-covenant.org), version 1.4, available at [https://contributor-covenant.org/version/1/4](http://contributor-covenant.org/version/1/4).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.9560546875,
          "content": "# How to contribute\n\nWant to show Jodd some love? Help out by contributing!\n\n## :beetle: Found a bug?\nLog it in our *issue tracker* (in GitHub or in old GoogleCode) or send a note to the *user group* or simply send us an *email*. Be sure to include all relevant information, like the versions of Jodd you’re using. A code snippet that caused the issue as well as any error messages are also very helpful.\n\n## :bar_chart: What is currently developing?\n\nThe best way to get overall information on what's planned is by using the [ZenHub](https://www.zenhub.com) plugin.\n\n## :star2: Have a patch?\nThe best way to make sure your issue or feature is addressed is to submit a patch. We accept patches through all mediums: pull requests, email, issue comment, link to a snippet, graffiti outside of John's apartment, etc.\n\nHowever, before sending a patch, please make sure that the following applies:\n\n* Your commit message is descriptive.\n* Your patch doesn't have useless merge commits.\n* Your coding style is similar to ours.\n* Your patch is 100% tested. We don't accept any test regressions. \n* See our [styleguide](STYLEGUIDE.md) how tests should be written.\n* All tests checks pass.\n* You understand that we're super grateful for your patch!\n\n## :heart: Adding something new?\nWe do love to enhance Jodd with you to become more powerful! The best way to workout your idea is to _discuss it first_! **Please**, if you can, don't just throw us the code of a new feature or a refactoring; lets first figure together what would be the best approach regarding the current architecture and future plans, before any development. This way we all get sure that your idea is aligned with the codebase and you can enjoy your happy coding even more :)\n\n## :question: Need help?\nSimply contact our *support* via email - or ask question on [stackoverflow](https://stackoverflow.com/questions/tagged/jodd).\n\n## :closed_book: Want to write docs?\nDocumentation is very valuable to us. So just send it any way you like :)\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.2841796875,
          "content": "Copyright (c) 2003-present, Jodd Team (https://jodd.org)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.451171875,
          "content": "\n<!--\nPLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.\nISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.\n-->\n\n## Current behavior\n\n<!-- Describe how the issue manifests. -->\n\n\n## Expected behavior\n\n<!-- Describe what the desired behavior would be. -->\n\n\n## Steps to Reproduce the Problem\n\n<!--\nFor bug reports please provide the *STEPS TO REPRODUCE* and if possible a *MINIMAL DEMO* of the problem.\n-->\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2841796875,
          "content": "Copyright (c) 2003-present, Jodd Team (https://jodd.org)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice,\nthis list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.572265625,
          "content": "\n<!--\nYou Are Awesome! Thank you for your contribution!\n-->\n\n## PR Checklist\n\nPlease check if your PR fulfills the following requirements:\n\n- [ ] The commit message follows our guidelines: https://github.com/oblac/jodd/blob/master/CONTRIBUTING.md\n- [ ] Tests for the changes have been added (for bug fixes / features)\n- [ ] Docs have been added / updated (for bug fixes / features)\n\n\n## Current behavior\n\n<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->\n\n\n## New behavior?\n\n<!-- Please describe the new behavior that PR introduces. -->\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.740234375,
          "content": "![](jodd-github-logo.png)\n<br>\n\n[![GitHub release](https://img.shields.io/github/release/oblac/jodd.svg)](https://jodd.org)\n[![Stack Overflow](https://img.shields.io/badge/stack%20overflow-jodd-4183C4.svg)](https://stackoverflow.com/questions/tagged/jodd)\n[![BSD License](https://img.shields.io/badge/license-BSD--2--Clause-blue.svg)](https://jodd.org/license.html)\n\n## 👋 Hello!\n\nWelcome to the **Jodd** - a unique, alternative world of Java :) You can find here some micro-frameworks and some handy tools. Nothing more, nothing less.\n\n<h4 align=\"center\">Jodd = tools + ioc + mvc + db + aop + tx + json + html < 1.7 Mb</h4>\n\nThe official web-site: https://jodd.org\n\n# ‼️ THIS IS THE OLD MONOREPO. USE NEW JODD REPOS FOR v6+ ‼️\n\n**Jodd v6** is the maintained version, working on Java 8 and 11. The following components are promoted to version 6:\n\n+ [jodd-util](https://github.com/oblac/jodd-util) ⭐\n+ [jodd-mail](https://github.com/oblac/jodd-mail) ⭐\n+ [jodd-json](https://github.com/oblac/jodd-json) ⭐\n+ [jodd-lagarto](https://github.com/oblac/jodd-lagarto) ⭐\n+ [jodd-http](https://github.com/oblac/jodd-http) ⭐\n+ [jodd-props](https://github.com/oblac/jodd-props) ⭐\n+ [jodd-petite](https://github.com/oblac/jodd-petite) ⭐\n+ [jodd-proxetta](https://github.com/oblac/jodd-proxetta) ⭐\n+ [jodd-db](https://github.com/oblac/jodd-db) ⭐\n\nThe decision which component is promoted is based on the Maven Central Repo statistics. \n\nVersion **v5** contains remaining libraries and frameworks. They are in maintenance mode.\n\nSorry, I can only do so much.\n\n---\n\n## :zap: Jodd\n\n**Jodd** is set of micro-frameworks and developer-friendly tools and utilities.\n\n_Use what you like._ **Thank you.** 🙏\n\n**Cool libraries**:\n\n+ `jodd-json` - JSON parser and serializer. ⭐\n+ `jodd-lagarto` - HTML parser with `Jerry` and `CSSelly` and `Form` tag. ⭐\n+ `jodd-http` - tiny HTTP client. ⭐\n+ `jodd-mail` - for easier email sending. ⭐\n\n**Micro-frameworks**:\n\n+ `jodd-madvoc` - slick MVC framework.\n+ `jodd-petite` - pragmatic DI container. ⭐\n+ `jodd-proxetta` - dynamic proxies and `Paramo`. ⭐\n+ `jodd-db` - thin database layer and object mapper. ⭐\n+ `jodd-jtx` - transactions management. ⭐\n\n**Less used tools**:\n\n+ `jodd-decora` - pages decorator.\n+ `jodd-htmlstapler` - static page resources handler.\n+ `jodd-vtor` - validation framework.\n\n**Full Stack Bundle**:\n\n+ `jodd-joy` - super-easy app framework, built with *Jodd* micro-frameworks.\n\n**Utilities**:\n\n+ `jodd-core` - contains many every-day utilities. ⭐\n+ `jodd-bean` - our infamous `BeanUtil`, type inspectors and converters. ⭐\n+ `jodd-props` - is the super-replacement for Java `Properties`. ⭐\n+ `jodd-servlet` - with many servlet utilities, including nice tag library.\n\nRead more in our [official documentation](http://jodd.org).\n\n## :octocat: Building Jodd from source\n\n**Jodd** is built with [Gradle](http://gradle.org/) on JDK8,\ntargeting Java 1.8. You don't have to install anything,\nthe only prerequisites are [Git](http://help.github.com/set-up-git-redirect)\nand Java JDK.\n\n## :gift_heart: Contribute\n\nFeel free to [contribute](CONTRIBUTING.md)! Follow these steps:\n\nFirst time only:\n\n+ fork the **Jodd** repo (`upstream`) to your GitHub account (`origin`)\n+ clone `origin` as your `local` repo\n\nEvery other time:\n\n+ update both `origin` and `local` repos from `upstream`\n+ create new branch for a feature or bug fix\n+ commit often :)\n+ once when work is done, push local changes to your `origin`\n+ send us a pull request (PR)\n\nWe will pickup up from there :)\n\n:rocket:\n\n## Code Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/oblac/jodd/graphs/contributors\"><img src=\"https://opencollective.com/jodd/contributors.svg?width=890&button=false\" /></a>\n"
        },
        {
          "name": "STYLEGUIDE.md",
          "type": "blob",
          "size": 4.20703125,
          "content": "# Styleguide and Naming conventions\n\nPlease follow this style guide and naming conventions when sending your submissions. Thank you!\n\n## Code :coffee:\n\n+ Use **TABS** and not spaces for indentation. We just had to choose one.\n+ Interfaces may contain static factories for known implementations. Examples:\n```java\n\tValue.of(123);      // creates a value\n\tList.arrayList();   // creates new array list\n\tComponent.get();    // returns default singleton implementation\n```\n\n+ _The common sense_ is assumed! We do not have extra code to prevent mis-usages of the API.\n+ Check for `null` using `Objects.requireNonNull()`, but only where it is really needed. Again, if code itself throws NPE, no need for additional checks.\n+ `*Util` classes do not have `private` constructor (_common sense principle_).\n+ Returning `null` should be generally avoided for the public methods.\n+ Only beans have accessors (`getFoo()` and `setFoo()` methods). Method should not be named with e.g. `get` if it is not a bean.\n+ Util static methods that return new instance should be named e.g. `create()` or `createFooBar()` if there is no argument or `fooBarOf(argument)` if there is an argument provided; but _never_ `getFooBar()`. Getters should never create a new instance of anything.\n+ _Builder_ pattern function should be named `create()`. Final builder method (that actually returns instance that is building) should be named `get()` or `buildFoo()`.\n+ Use `_this()` for base abstract classes of some fluent interfaces API:\n```java\n\t@SuppressWarnings(\"unchecked\")\n\tprotected T _this() {\n\t\treturn (T) this;\n\t}\n```\n+ Use `final` method arguments.\n\n### Singletons, implementations and defaults\n\n_Singletons_ are generally avoided. Singletons have static method `get()` used to fetch the singleton instange:\n\n```java\npublic class MyFoo {\n    private static final MyFoo MY_FOO = new MyFoo();\n\n    public static MyFoo get() {\n        return MY_FOO;\n    }\n}\n```\n\n_Default implementations_ of some interface are stored in static class named `Implementation`.\nTo emphasize the changing of the value, the `set()` method is part of the `Implementation` inner class.\n\n```java\npublic static interface MyFoo {\n    class Implementation {\n    \tprivate static MyFoo myFoo = new DefaultMyFoo();\n    \tpublic static void set(MyFoo myFoo) {\n    \t\tthis.myFoo = myFoo;\n    \t}\n    }\n\n    public static MyFoo get() {\n        return Implementation.myFoo;\n    }\n}\n```\n\n_Defaults_ is configuration for classes that are created by user directly (such as `JsonParser` or `HttpRequest`).\nThose classes may have some defaults so you don't need to change them all the time. Default configuration\ndoes not have sense on singletons! Inner class `Defaults` should contain only public static fields of common types.\n\n```java\npublic class MyFoo {\n\tpublic static class Defaults {\n\t\tpublic static boolean someFlag = false;\n\t}\n}\n```\n\n### About deprecation and @Since tag\n\nFor now, we are _not_ able to maintain deprecated methods and the use of `@Since` tag versions. We simply don't have enough resources for that atm, sorry. It's better not to have it, but to have it all wrong.\n\n\n## Test :hearts:\n\n+ Test classes ends with `*Test`, e.g. `StringUtilTest`.\n+ Test methods starts with `test*`, e.g. `testReplace()`.\n+ Test methods and classes are package scoped.\n+ It is it OK to use experimental features of Junit 5 - as long as you keep maintaining it.\n+ Nested test classes do not have the suffix in their names.\n+ Use static import for `Assert` methods.\n+ Use static import for optional `Assume` methods.\n+ Try to have one test method per feature.\n\n### Test class example\n\n```java\nclass FooTest {\n\n\t@Test\n\tvoid testSomething() {\n\t  // test code\n\t}\n\n\t@Nested\n\t@DisplayName(\"tests for a feature set\")\n\tclass FeatureSet {\n\n\t\t@Test\n\t\tvoid testFeature_with_null() {\n\t\t  // test code\n\t\t}\n\n\t\t@Test\n\t\tvoid testFeature_with_something_else() {\n\t\t  // test code\n\t\t}\n\t}\n}\n```\n\n## Benchmarks :zap:\n\n+ Each benchmark is stored in separated `*Benchmark` class.\n+ Benchmarks are executed via [JMH](http://openjdk.java.net/projects/code-tools/jmh/).\n+ Benchmark methods are annotated with an annotation.\n+ Don't use `BlackHole` argument if you can return the value.\n+ Each benchmark class must contain results in the Javadoc of the class: just copy/paste whatever is the JMH output.\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 13.546875,
          "content": "// Copyright (c) 2003-present, Jodd Team (http://jodd.org)\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright\n// notice, this list of conditions and the following disclaimer in the\n// documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nbuildscript {\n\text.kotlin_version = '1.3.61'\n\trepositories {\n\t\tmavenCentral()\n\t}\n\tdependencies {\n\t\tclasspath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n\t}\n}\nplugins {\n}\n\ndescription = '''\n\n\tJodd is an open-source Java utility library and set of micro frameworks.\n\tJodd tools enriches JDK with many powerful and feature rich utilities.\n\tIt helps with everyday task, makes code more robust and reliable.\n\tJodd frameworks is set of lightweight application frameworks, compact yet powerful.\n\tDesigned following the CoC, DRY and SCS principles, it makes development\n\tsimple, but not simpler.\n'''\n\n//version = '5.1.6-' + date()\nversion = '5.3.0'\n\n// --- properties -------------------------------------------------------------\n\next {\n\tgradleScriptDir = \"${rootProject.projectDir}/gradle\"\n\n\t// libraries\n\n\ttomcatVersion = '8.0.47'\n\tjettyVersion = '9.3.25.v20180904'\n\tjmhVersion = '1.23'\n\n\tlib = [\n\t\tactivation:\t\t'javax.activation:javax.activation-api:1.2.0',\n\t\tservlet:\t\t'javax.servlet:javax.servlet-api:3.1.0',\n\t\tjsp:\t\t\t'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3',\n\n\t\tlog_slf4j:\t\t\t 'org.slf4j:slf4j-api:[1.7,1.8)',\n\t\tlog_slf4j_simple:\t 'org.slf4j:slf4j-simple:[1.7,1.8)',\n\t\tlog_logback_core: \t 'ch.qos.logback:logback-core:[1.2,1.3)',\n\t\tlog_logback_classic: 'ch.qos.logback:logback-classic:[1.2,1.3)',\n\t\tlog_jcl:        \t 'commons-logging:commons-logging:[1.2,1.3)',\n\t\tlog_log4j2:\t\t     'org.apache.logging.log4j:log4j-api:[2.15.0,2.16)',\n\t\tlog_log4j2_core:     'org.apache.logging.log4j:log4j-core:[2.15.0,2.16)',\n\n\t\tjunit5:\t\t\t'org.junit.jupiter:junit-jupiter:5.6.0',\n\n\t\tmockito:\t\t'org.mockito:mockito-core:3.1.0',\n\t\thsqldb:\t\t\t'org.hsqldb:hsqldb:2.5.0',\n\t\th2db:\t\t\t'com.h2database:h2:1.4.200',\n\t\tpostgresql:\t\t'org.postgresql:postgresql:9.4-1201-jdbc41',\n\t\tmysql:\t\t\t'mysql:mysql-connector-java:8.0.12',\n\t\tmssql:\t\t\t'com.microsoft.sqlserver:mssql-jdbc:6.2.2.jre8',\n\t\twinstone:\t\t'net.sourceforge.winstone:winstone:0.9.10',\n\n\t\tel_api:\t\t\t\"org.apache.tomcat:tomcat-jasper:${tomcatVersion}\",\n\t\tserver_tomcat:\t\"org.apache.tomcat:tomcat-catalina:${tomcatVersion}\",\n\t\ttomcat_embed:\t[\n\t\t\t\t\t\t\t\"org.apache.tomcat:tomcat-jasper:${tomcatVersion}\",\n\t\t\t\t\t\t\t\"org.apache.tomcat:tomcat-jasper-el:${tomcatVersion}\",\n\t\t\t\t\t\t\t\"org.apache.tomcat:tomcat-catalina:${tomcatVersion}\",\n\t\t\t\t\t\t\t\"org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}\",\n\t\t\t\t\t\t\t\"org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}\",\n\t\t\t\t\t\t\t\"org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}\",\n\t\t\t\t\t\t\t\"org.apache.tomcat.embed:tomcat-embed-logging-log4j:${tomcatVersion}\"\n\t\t\t\t\t\t],\n\t\tjetty_embed:\t[\n\t\t        \t\t\t\"org.eclipse.jetty:jetty-server:${jettyVersion}\",\n\t\t\t\t\t\t\t\"org.eclipse.jetty:jetty-webapp:${jettyVersion}\",\n\t\t\t\t\t\t\t\"org.eclipse.jetty:jetty-jsp:9.2.26.v20180806\"\n\t\t\t\t\t\t],\n\t\tmockserver:\t\t'org.mock-server:mockserver-netty:5.2.3',\n\t]\n\n\tcommonManifest = [\n\t\t'Debug-Info' : 'on',\n\t\t'Built-By' : 'jodd.org',\n\t\t'Bundle-License' : 'https://jodd.org/license.html',\n\t\t'Bundle-Vendor' : 'Jodd',\n\t\t'Bundle-DocURL' : 'https://jodd.org',\n\t\t'Implementation-Version': version,\n\t\t'Implementation-Vendor': 'Jodd Team'\n\t]\n}\n\n// --- modules sets -----------------------------------------------------------\n\nallprojects {\n\tversion = rootProject.version\n\n\text.isRelease = !version.contains(\"-\")\n\text.isSnapshot = !ext.isRelease\n\text.isSubproject = project.parent != null\n\text.isAdminRelease = project.hasProperty('JODD_ADMIN')\n\n\trepositories {\n\t\tmavenCentral()\n//\t\tmavenLocal()\n\t}\n}\n\ndef javaModules() {\n\tsubprojects.findAll {\n\t\tit.name.contains('jodd-') &&\n\t\t!it.name.equals('jodd-bom') &&\n\t\t!it.name.equals('jodd-all')\n\t}\n}\n\ndef javaBundleModules() {\n\trootProject.subprojects.findAll {\n\t\tit.name.contains('jodd-') &&\n\t\t!it.name.equals('jodd-joy') &&\n\t\t!it.name.equals('jodd-bom') &&\n\t\t!it.name.equals('jodd-all')\n\t}\n}\n\n\n// --- configuration ----------------------------------------------------------\n\napply plugin: 'idea'\napply plugin: 'eclipse'\n\n// exclude folders from IDEA project\nidea {\n\tmodule {\n\t\texcludeDirs += file('.idea')\n\t}\n}\n\nconfigure(javaModules()) {\n\tapply plugin: 'java'\n\tapply plugin: 'java-library'\n\tapply plugin: 'jacoco'\n\tapply plugin: 'signing'\n\tapply plugin: 'maven-publish'\n\tapply plugin: 'idea'\n\tapply plugin: 'eclipse'\n\tapply from: \"${gradleScriptDir}/provided.gradle\"\n\tapply from: \"${gradleScriptDir}/publish-maven.gradle\"\n\n\tgroup = 'org.jodd'\n\n\t// *** COMPILE ***\n\n\tif (JavaVersion.current() < JavaVersion.VERSION_1_8) {\n\t\tthrow new GradleException(\"This build must be run with at least Java 8.\")\n\t}\n\n\tjava {\n\t\tsourceCompatibility = JavaVersion.VERSION_1_8\n\t\ttargetCompatibility = JavaVersion.VERSION_1_8\n\t\twithJavadocJar()\n\t\twithSourcesJar()\n\t}\n\n\tcompileJava {\n\t\toptions.encoding = 'UTF-8'\n\t\toptions.compilerArgs << \"-Xlint:-options\"\n//\t\toptions.compilerArgs << \"-Xlint:unchecked\"\n\t\toptions.compilerArgs << \"-Xlint:deprecation\"\n\t\toptions.incremental = true\n\t\toptions.fork = true\n\t\toptions.debug = true\n\t}\n\n\tjavadoc {\n\t\toptions.addStringOption('Xdoclint:none', '-quiet')\n\t}\n\n\t// *** JMH ***\n\n\tsourceSets {\n\t\tjmh {\n\t\t\tcompileClasspath += sourceSets.test.runtimeClasspath\n\t\t\truntimeClasspath += sourceSets.test.runtimeClasspath\n\t\t}\n\t}\n\n\tdependencies {\n\t\tjmhImplementation project\n\t\tjmhImplementation \"org.openjdk.jmh:jmh-core:${jmhVersion}\"\n\t\tjmhAnnotationProcessor \"org.openjdk.jmh:jmh-generator-annprocess:${jmhVersion}\"\n\t}\n\n\n\ttask jmh(type:JavaExec, dependsOn: build) {\n\t\tgroup 'Verification'\n\t\tdescription 'Execute JMH benchmarks.'\n\n\t\tmain 'org.openjdk.jmh.Main'\n\t\tclasspath =\n\t\t\t\tsourceSets.main.runtimeClasspath +\n\t\t\t\tsourceSets.jmh.compileClasspath +\n\t\t\t\tsourceSets.jmh.runtimeClasspath\n\n\t\tdef include = project.properties.get('include', '');\n\n\t\targs include\n\t}\n\n\t// Hook jmhClasses task to run after classes to make sure benchmarks are compiled with the rest of the code\n\tclasses.finalizedBy(jmhClasses)\n\n\ttasks.addRule(\"Pattern: <ClassName>Benchmark : Run benchmark.\") { String className ->\n\t\tif (className.endsWith(\"Benchmark\")) {\n\t\t\tprintln \"\\nRunning Benchmark: \" + className + \"\\n\"\n\n\t\t\ttask \"$className\"(type: JavaExec, dependsOn: 'build') {\n\t\t\t\tmain 'org.openjdk.jmh.Main'\n\t\t\t\targs =  ['.' + className + '.*']\n//\t\t\t\tjvmArgs = [\"-XX:+PrintCompilation\"]\n\t\t\t\tclasspath = sourceSets.main.runtimeClasspath + sourceSets.jmh.runtimeClasspath\n\t\t\t}\n\t\t}\n\t}\n\n\t// *** LICENCE ***\n\n\ttask copyLicense(type: Copy) {\n\t\tfrom file(\"$rootProject.projectDir/LICENSE\")\n\t\tinto file(\"$projectDir/src/main/resources/META-INF/\")\n\t\tduplicatesStrategy = DuplicatesStrategy.INCLUDE\n\t}\n\n\tjar {\n\t\tdependsOn copyLicense\n\t}\n\n\t// *** JACOCO ***\n\n\tdef jacocoExcludes = ['*Test*', '*.?', '*Foo*', 'jodd.asm6.*', '*.fixtures.*', '*.JavaBridge']\n\ttest {\n\t\tuseJUnitPlatform()\n\t\ttestLogging {\n\t\t\tevents \"passed\", \"skipped\", \"failed\"\n\t\t}\n\t\tjacoco {\n\t\t\texcludes += jacocoExcludes\n\t\t}\n\t}\n\n\tjacocoTestReport {\n\t\treports {\n\t\t\txml.enabled true\n\t\t\thtml.enabled true\n\t\t}\n\t}\n\n\ttask codeCoverage(type: JacocoReport, dependsOn: test) {\n\t\tgroup 'Verification'\n\t\tdescription 'Generates code coverage reports for a single module'\n\n\t\texecutionData fileTree(\"${buildDir}/jacoco/\").include(\"*.exec\")\n\t\t//sourceSets sourceSets.main\n\t\tsourceDirectories.from = files(sourceSets.main.java.srcDirs)\n\t\tclassDirectories.from = files(sourceSets.main.output.classesDirs)\n\n\t\treports {\n\t\t\thtml.enabled true\n\t\t\thtml.destination file(\"${buildDir}/reports/jacoco\")\n\t\t}\n\t}\n\n\t// *** ARTIFACTS ***\n\n\tartifacts {\n\t\tarchives jar\n\t\tarchives sourcesJar\n\t\tarchives javadocJar\n\t}\n\n\tjar {\n\t\tafterEvaluate {\n\t\t\tmanifest.attributes << commonManifest\n\t\t\tmanifest {\n\t\t\t\t//name = project.moduleName\n\t\t\t\t//version = project.version\n\t\t\t\tdescription = project.moduleDescription\n\t\t\t\tattributes 'Implementation-Title': project.moduleName\n\t\t\t\tattributes 'Implementation-Version': project.version\n\t\t\t}\n\t\t}\n\t}\n\n\tjavadoc {\n\t\texclude '**/asm6/**'\n\t\tafterEvaluate {\n\t\t\tconfigure(options) {\n\t\t\t\twindowTitle 'Jodd API Documentation'\n\t\t\t\tdocTitle \"$project.moduleName $project.version API Documentation\"\n\t\t\t\tbottom = 'Copyright &#169; 2003-present <a href=\"http://jodd.org\">Jodd Team</a>'\n\t\t\t\tbreakIterator = true\n\t\t\t\tauthor = false\n\t\t\t\tencoding = 'UTF-8'\n\t\t\t\tdocEncoding = 'UTF-8'\n\t\t\t\tstylesheetFile = file('src/main/javadoc/jodd.css')\n\t\t\t\tsource = '1.8'\n\t\t\t\tfailOnError = false\n\t\t\t}\n\t\t}\n\t}\n}\n\n// --- project ----------------------------------------------------------------\n\napply plugin: 'project-report'\napply plugin: 'jacoco'\napply from: \"${gradleScriptDir}/license.gradle\"\n\ndef javaBundleModulesSources = javaBundleModules().sourceSets.main\n\ntask buildModules {\n\tdependsOn javaModules().build\n}\n\ntask testAll {\n\tgroup 'Verification'\n\tdescription 'Runs all the tests.'\n\n\tdependsOn javaModules().test\n}\n\ntask clean(type: Delete) {\n\tgroup 'Project'\n\tdescription 'Cleans everything.'\n\n\tdelete buildDir\n\tdependsOn javaModules().clean\n}\n\ntask javadocAll(type: Javadoc) {\n\tgroup 'Documentation'\n\tdescription 'Builds the aggregated Java docs for all modules.'\n\tdependsOn buildModules\n\n\tmaxMemory '512m'\n\n\tsource javaBundleModulesSources.allJava\n\texclude '**/asm6/**'\n\n\tdestinationDir = file(\"$buildDir/reports/javadoc\")\n\tclasspath = files(javaBundleModulesSources.compileClasspath)\n\n\tconfigure(options) {\n\t\twindowTitle 'Jodd API Documentation'\n\t\tdocTitle \"Jodd Project $project.version API Documentation\"\n\t\tbottom = 'Copyright &#169; 2003-present <a href=\"http://jodd.org\">Jodd Team</a>'\n\t\tbreakIterator = true\n\t\tauthor = false\n\t\tencoding = 'UTF-8'\n\t\tdocEncoding = 'UTF-8'\n\t\tstylesheetFile = file('src/main/javadoc/jodd.css')\n\t\tsource = '1.8'\n\t}\n\n\toptions.addStringOption('Xdoclint:none', '-quiet')\n\n\tinputs.files(javaBundleModulesSources.allSource + javaBundleModulesSources.compileClasspath)\n\toutputs.dir destinationDir\n}\n\ndependencyReport {\n\tprojects = javaModules()\n}\n\ntask codeCoverageReport(type: JacocoReport) {\n\tgroup 'Verification'\n\tdescription 'Generates code coverage reports for the whole project'\n\n\texecutionData fileTree(project.rootDir.absolutePath).include(\"**/build/jacoco/*.exec\")\n\tjacocoClasspath\n\n\t// workaround for making jacoco working on java9\n\tFileCollection srcdirs = files()\n\tFileCollection classdirs = files()\n\tjavaModules().each {\n\t\t//sourceSets it.sourceSets.main\n\t\tsrcdirs += it.sourceSets.main.java\n\t\tclassdirs += it.sourceSets.main.output.classesDirs\n\t}\n\tsourceDirectories.from = srcdirs\n\tclassDirectories.from = classdirs\n\n\treports {\n\t\txml.enabled true\n\t\txml.destination file(\"${buildDir}/reports/jacoco/report.xml\")\n\t\thtml.enabled true\n\t\tcsv.enabled false\n\t}\n}\n\ncodeCoverageReport.dependsOn testAll\n\n\n// --- release ----------------------------------------------------------------\n\ntask release() {\n\tgroup 'Project'\n\tdescription 'Builds everything for the release.'\n\n\tdependsOn buildModules\n\tdependsOn testAll\n\tdependsOn codeCoverageReport\n\tdependsOn javadocAll\n}\n\ngradle.taskGraph.whenReady { taskGraph ->\n\tif (taskGraph.hasTask(release)) {\n\n\t\tprintln \"\"\n\t\tprintln \"\tYou are about to run the 'release' task for Jodd project!\"\n\t\tprintln \"\tThis task builds distribution artifacts, but also runs\"\n\t\tprintln \"\tintegration tests and generates reports (javadoc, coverage...)\"\n\t\tprintln \"\tFor running integration tests you need infrastructure running;\"\n\t\tprintln \"\tplease find more information here: http://jodd.org/code.html\"\n\t\tprintln \"\"\n\t\tprintln \"\tUsually, you don't need to run this task. If you want to build\"\n\t\tprintln \"\tdistribution jars and run all unit tests, then just run the \"\n\t\tprintln \"\tdefault 'build' task instead.\"\n\t\tprintln \"\"\n\n\t\tdef char c\n\n\t\tdef console = System.console()\n\t\tif (console) {\n\t\t\tline = console.readLine('\t> Do you want to continue? [y/N]: ')\n\t\t\tline = line.trim()\n\t\t\tc = line.charAt(0)\n\t\t}\n\t\telse {\n\t\t\tprintln \"\t> Do you want to continue? [y/N]: \"\n\t\t\tprintln \"\"\n\n\t\t\t// Can't use `console` because it does not work with Gradle Daemon\n\t\t\tdef DataInputStream dis = new DataInputStream(System.in);\n\n\t\t\tc = dis.readByte()\n\t\t}\n\n\t\tif (!(c == 'Y' || c == 'y')) {\n\t\t\tthrow new StopExecutionException(\"Execution terminated by user\")\n\t\t}\n\t}\n}\n\ntask version() {\n\tprintln \"-----------------\"\n\tprintln \" Jodd ${version}\\n\"\n\tif (isSnapshot) println \" snapshot: true\"\n\tif (isRelease) println \" release: true\"\n\tprintln \" java: v\" + JavaVersion.current()\n\tprintln \" date: \" + date()\n\tprintln \"-----------------\"\n}\n\n// --- util -------------------------------------------------------------------\n\nstatic def date() {\n\tdef date = new Date()\n\tdef formattedDate = date.format('yyyyMMdd')\n\treturn formattedDate\n}\n\n// --- wrapper ----------------------------------------------------------------\n\nwrapper {\n\tgradleVersion = '6.4'\n}\n"
        },
        {
          "name": "checkstyle-suppressions.xml",
          "type": "blob",
          "size": 0.4091796875,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE suppressions PUBLIC\n    \"-//Puppy Crawl//DTD Suppressions 1.1//EN\"\n    \"http://www.puppycrawl.com/dtds/suppressions_1_1.dtd\">\n\n<suppressions>\n\n\t<!-- ignore -->\n\t<suppress files=\".*[/\\\\]test[/\\\\].*\" checks=\".+\"/>\n\t<suppress files=\".*[/\\\\]testInt[/\\\\].*\" checks=\".+\"/>\n\t<suppress files=\".*[/\\\\]perf[/\\\\].*\" checks=\".+\"/>\n\t<suppress files=\".*[/\\\\]asm6[/\\\\].*\" checks=\".+\"/>\n\n</suppressions>"
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 6.7265625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC\n\t\t\"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n\t\t\"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<module name=\"Checker\">\n\t<property name=\"charset\" value=\"UTF-8\"/>\n\t<property name=\"severity\" value=\"warning\"/>\n\n\t<module name=\"SuppressionFilter\">\n\t\t<property name=\"file\" value=\"checkstyle-suppressions.xml\" />\n\t</module>\n\n    <!--\n        If you set the basedir property below, then all reported file\n        names will be relative to the specified directory. See\n        http://checkstyle.sourceforge.net/5.x/config.html#Checker\n\n        <property name=\"basedir\" value=\"${basedir}\"/>\n    -->\n\n    <property name=\"fileExtensions\" value=\"java, properties, xml\"/>\n\n    <!-- Checks that a package-info.java file exists for each package.     -->\n    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->\n    <!--module name=\"JavadocPackage\"/-->\n\n    <!-- Checks whether files end with a new line.                        -->\n    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->\n    <!--module name=\"NewlineAtEndOfFile\"/-->\n\n    <!-- Checks that property files contain the same keys.         -->\n    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->\n    <module name=\"Translation\"/>\n\n    <!-- Checks for Size Violations.                    -->\n    <!-- See http://checkstyle.sf.net/config_sizes.html -->\n    <module name=\"FileLength\"/>\n\n    <!-- Checks for whitespace                               -->\n    <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n    <!--module name=\"FileTabCharacter\"/-->\n\n    <!-- Miscellaneous other checks.                   -->\n    <!-- See http://checkstyle.sf.net/config_misc.html -->\n    <module name=\"RegexpSingleline\">\n       <property name=\"format\" value=\"\\s+$\"/>\n       <property name=\"minimum\" value=\"0\"/>\n       <property name=\"maximum\" value=\"0\"/>\n       <property name=\"message\" value=\"Line has trailing spaces.\"/>\n    </module>\n\n    <!-- Checks for Headers                                -->\n    <!-- See http://checkstyle.sf.net/config_header.html   -->\n    <!-- <module name=\"Header\"> -->\n    <!--   <property name=\"headerFile\" value=\"${checkstyle.header.file}\"/> -->\n    <!--   <property name=\"fileExtensions\" value=\"java\"/> -->\n    <!-- </module> -->\n\n    <module name=\"TreeWalker\">\n\n        <!-- Checks for Javadoc comments.                     -->\n        <!-- See http://checkstyle.sf.net/config_javadoc.html -->\n        <!--module name=\"JavadocMethod\">\n            <property name=\"scope\" value=\"public\"/>\n            <property name=\"allowUndeclaredRTE\" value=\"true\"/>\n            <property name=\"allowMissingReturnTag\" value=\"true\"/>\n            <property name=\"allowMissingThrowsTags\" value=\"true\"/>\n            <property name=\"allowMissingParamTags\" value=\"true\"/>\n        </module>\n        <module name=\"JavadocType\">\n            <property name=\"scope\" value=\"public\"/>\n            <property name=\"allowMissingParamTags\" value=\"true\"/>\n        </module>\n        <module name=\"JavadocVariable\">\n            <property name=\"scope\" value=\"public\"/>\n        </module-->\n        <module name=\"JavadocStyle\"/>\n\n        <!-- Checks for Naming Conventions.                  -->\n        <!-- See http://checkstyle.sf.net/config_naming.html -->\n        <module name=\"ConstantName\"/>\n        <module name=\"LocalFinalVariableName\"/>\n        <module name=\"LocalVariableName\"/>\n        <module name=\"MemberName\"/>\n        <module name=\"MethodName\"/>\n        <module name=\"PackageName\"/>\n        <module name=\"ParameterName\"/>\n        <module name=\"StaticVariableName\"/>\n        <module name=\"TypeName\"/>\n\n        <!-- Checks for imports                              -->\n        <!-- See http://checkstyle.sf.net/config_import.html -->\n        <module name=\"AvoidStarImport\"/>\n        <module name=\"IllegalImport\"/> <!-- defaults to sun.* packages -->\n        <module name=\"RedundantImport\"/>\n        <module name=\"UnusedImports\">\n            <property name=\"processJavadoc\" value=\"false\"/>\n        </module>\n\n        <!-- Checks for Size Violations.                    -->\n        <!-- See http://checkstyle.sf.net/config_sizes.html -->\n        <module name=\"LineLength\">\n\t\t\t<property name=\"max\" value=\"120\"/>\n\t\t\t<property name=\"ignorePattern\" value=\"^package.*|^import.*|a href|href|http://|https://|ftp://\"/>\n\t\t</module>\n\n        <module name=\"MethodLength\"/>\n        <module name=\"ParameterNumber\"/>\n\n        <!-- Checks for whitespace                               -->\n        <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n        <module name=\"EmptyForIteratorPad\"/>\n        <module name=\"GenericWhitespace\"/>\n        <module name=\"MethodParamPad\"/>\n        <module name=\"NoWhitespaceAfter\"/>\n        <module name=\"NoWhitespaceBefore\"/>\n        <module name=\"OperatorWrap\"/>\n        <module name=\"ParenPad\"/>\n        <module name=\"TypecastParenPad\"/>\n        <module name=\"WhitespaceAfter\"/>\n        <module name=\"WhitespaceAround\"/>\n\n        <!-- Modifier Checks                                    -->\n        <!-- See http://checkstyle.sf.net/config_modifiers.html -->\n        <module name=\"ModifierOrder\"/>\n        <module name=\"RedundantModifier\"/>\n\n        <!-- Checks for blocks. You know, those {}'s         -->\n        <!-- See http://checkstyle.sf.net/config_blocks.html -->\n        <module name=\"AvoidNestedBlocks\"/>\n        <module name=\"EmptyBlock\"/>\n        <module name=\"LeftCurly\"/>\n        <module name=\"NeedBraces\"/>\n        <module name=\"RightCurly\"/>\n\n        <!-- Checks for common coding problems               -->\n        <!-- See http://checkstyle.sf.net/config_coding.html -->\n        <!--module name=\"AvoidInlineConditionals\"/-->\n        <module name=\"EmptyStatement\"/>\n        <module name=\"EqualsHashCode\"/>\n        <module name=\"HiddenField\">\n            <property name=\"tokens\" value=\"VARIABLE_DEF\"/>\n        </module>\n        <module name=\"IllegalInstantiation\"/>\n        <module name=\"InnerAssignment\"/>\n        <!--module name=\"MagicNumber\"/-->\n        <module name=\"MissingSwitchDefault\"/>\n        <module name=\"SimplifyBooleanExpression\"/>\n        <module name=\"SimplifyBooleanReturn\"/>\n\n        <!-- Checks for class design                         -->\n        <!-- See http://checkstyle.sf.net/config_design.html -->\n        <!--module name=\"DesignForExtension\"/-->\n        <module name=\"FinalClass\"/>\n        <module name=\"HideUtilityClassConstructor\"/>\n        <module name=\"InterfaceIsType\"/>\n        <!--module name=\"VisibilityModifier\"/-->\n\n        <!-- Miscellaneous other checks.                   -->\n        <!-- See http://checkstyle.sf.net/config_misc.html -->\n        <module name=\"ArrayTypeStyle\"/>\n        <!--module name=\"FinalParameters\"/-->\n        <module name=\"TodoComment\"/>\n        <module name=\"UpperEll\"/>\n\n    </module>\n</module>"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.0283203125,
          "content": "ignore:\n  - \"**/jodd/asm6/**\""
        },
        {
          "name": "etc",
          "type": "tree",
          "content": null
        },
        {
          "name": "file_id.diz",
          "type": "blob",
          "size": 0.0947265625,
          "content": "\n  -= Jodd =-\n\n generic purpose\n  java library\n    tools and\n micro frameworks\n\n http://jodd.org\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.0869140625,
          "content": "org.gradle.jvmargs=-Xms1g\nsystemProp.org.gradle.internal.publish.checksums.insecure=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.62890625,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.775390625,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windows variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "jodd-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "jodd-db",
          "type": "commit",
          "content": null
        },
        {
          "name": "jodd-decora",
          "type": "tree",
          "content": null
        },
        {
          "name": "jodd-github-logo.png",
          "type": "blob",
          "size": 7.6513671875,
          "content": null
        },
        {
          "name": "jodd-htmlstapler",
          "type": "tree",
          "content": null
        },
        {
          "name": "jodd-http",
          "type": "commit",
          "content": null
        },
        {
          "name": "jodd-joy",
          "type": "tree",
          "content": null
        },
        {
          "name": "jodd-json",
          "type": "commit",
          "content": null
        },
        {
          "name": "jodd-lagarto",
          "type": "commit",
          "content": null
        },
        {
          "name": "jodd-madvoc",
          "type": "tree",
          "content": null
        },
        {
          "name": "jodd-mail",
          "type": "commit",
          "content": null
        },
        {
          "name": "jodd-petite",
          "type": "commit",
          "content": null
        },
        {
          "name": "jodd-props",
          "type": "commit",
          "content": null
        },
        {
          "name": "jodd-proxetta",
          "type": "commit",
          "content": null
        },
        {
          "name": "jodd-servlet",
          "type": "tree",
          "content": null
        },
        {
          "name": "jodd-util",
          "type": "commit",
          "content": null
        },
        {
          "name": "jodd-vtor",
          "type": "tree",
          "content": null
        },
        {
          "name": "ruleset.xml",
          "type": "blob",
          "size": 0.2470703125,
          "content": "<?xml version=\"1.0\"?>\n<ruleset name=\"Jodd-Rules\">\n\n\t<exclude-pattern>.*/test/.*</exclude-pattern>\n\t<exclude-pattern>.*/testInt/.*</exclude-pattern>\n\t<exclude-pattern>.*/perf/.*</exclude-pattern>\n\t<exclude-pattern>.*/asm6/.*</exclude-pattern>\n\n</ruleset>"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.1494140625,
          "content": "include 'jodd-core'\ninclude 'jodd-decora'\ninclude 'jodd-htmlstapler'\ninclude 'jodd-joy'\ninclude 'jodd-madvoc'\ninclude 'jodd-servlet'\ninclude 'jodd-vtor'\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}