{
  "metadata": {
    "timestamp": 1736708186697,
    "page": 660,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JsonChao/Awesome-WanAndroid",
      "stars": 2732,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.115234375,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n/build\n/captures\n.externalNativeBuild\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "App Architectrue.puml",
          "type": "blob",
          "size": 1.0654296875,
          "content": "@startuml\n\ntitle \\n Awesome-WanAndroid \\n\n\nskinparam backgroundColor #AEFFFF\nskinparam activityBackgroundColor peru\nskinparam activityBarColor #green\nskinparam activityBorderColor #ef5345\nskinparam activityFontName Impact\n\nrectangle View #lightGreen\nrectangle AbstractView #white\nrectangle AbstractPresenter #white\nrectangle Presenter #lightGreen\nrectangle DataManager #lightGreen\nrectangle HttpHelper #white\nrectangle HttpHelperImpl #lightGreen\nrectangle PreferenceHelper #white\nrectangle PreferenceHelperImpl #lightGreen\nrectangle DbHelper #white\nrectangle DBHelperImpl #lightGreen\n\nView -- AbstractView\nView -r-> AbstractPresenter\nAbstractPresenter -l-> View\nAbstractPresenter -- Presenter\nPresenter -l-> AbstractView\nAbstractView -r-> Presenter\nPresenter -r-> DataManager\nDataManager -l-> Presenter\nDataManager -r-> PreferenceHelper\nPreferenceHelper -l-> DataManager\nPreferenceHelper -r- PreferenceHelperImpl\nDataManager -u-> HttpHelper\nHttpHelper -d-> DataManager\nHttpHelper -u- HttpHelperImpl\nDataManager -d-> DbHelper\nDbHelper -u-> DataManager\nDbHelper -d- DBHelperImpl\n\n\n\n\n\n\n\n@enduml"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.07421875,
          "content": "<h1 align=\"center\">Awesome-WanAndroid</h1>\n\n<div align=\"center\">\n<img src=\"https://img.shields.io/badge/Version-V1.2.5-brightgreen.svg\">\n<img src=\"https://img.shields.io/badge/build-passing-brightgreen.svg\">\n<a href=\"https://developer.android.com/about/versions/android-5.0.html\">\n    <img src=\"https://img.shields.io/badge/API-21+-blue.svg\" alt=\"Min Sdk Version\">\n</a>\n<a href=\"http://www.apache.org/licenses/LICENSE-2.0\">\n    <img src=\"https://img.shields.io/badge/License-Apache2.0-blue.svg\" alt=\"License\" />\n</a>\n<img src=\"https://img.shields.io/badge/Gamil-chao.qu521@gmail.com-ff69b4.svg\">\n</div>\n\n<div align=\"center\">\n<img src=\"https://diycode.b0.upaiyun.com/user/avatar/2468.jpg\">\n</div>\n\n### 致力于打造一款极致体验的WanAndroid客户端，知识和美是可以并存的哦QAQn(*≧▽≦*)n ，更好的 Awesome-WanAndroid V1.2.5正式版发布，相比初始版本，项目的稳定性和界面的美化程度已提升了几个档次，如果您觉得还不错的话，就点个Star吧~(持续打磨中~，敬请关注)\n\n### 本项目采用的性能优化技术全部来自于[Awesome-Android-Performance](https://github.com/JsonChao/Awesome-Android-Performance)\n\n## Introduction\n\nAwesome WanAndroid项目基于Material Design + MVP + Rxjava2 + Retrofit + Dagger2 + GreenDao + Glide\n\n这是一款会让您觉得很nice的技术学习APP，所用技术基本涵盖了当前Android开发中常用的主流技术框架，阅读内容主要面向想在Android开发领域成为专家的朋友们。此外，我正在进行一个\n[全新的Android进阶计划](https://github.com/JsonChao/Awesome-Android-Exercise), 致力于成为更好的Android开发，有兴趣的朋友可以参考下~\n\n## Awesome-WanAndroid Architecture\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/AppArchitecture.png\">\n</div>\n\n#### 借鉴于[设计MVP架构的最佳实践](https://blog.mindorks.com/essential-guide-for-designing-your-android-app-architecture-mvp-part-1-74efaf1cda40#.3lyk8t57x)\n\n#### Tips：\n\n- Android Studio 上提示缺失Dagger生成的类，可以直接编译项目，会由Dagger2自动生成\n\n- 本项目还有一些不够完善的地方，如发现有Bug，欢迎[issue](https://github.com/JsonChao/Awesome-WanAndroid/issues)、Email([chao.qu521@gmail.com]())、PR\n\n- 项目中的API均来自于[WanAndroid网站](http://www.wanandroid.com)，纯属共享学习之用，不得用于商业用途！！大家有任何疑问或者建议的可以联系[chao.qu521@gmail.com]()\n\n## Preview\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/GIF1.gif\"><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/GIF2.gif\">\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/GIF3.gif\"><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/GIF4.gif\">\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/GIF5.gif\"><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/GIF6.gif\">\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG1.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG2.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG3.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG4.png\" width=20%>\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG5.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG6.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG7.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG8.png\" width=20%>\n    \n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG9.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG10.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG11.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG12.png\" width=20%>\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG13.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG14.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG15.png\" width=20%>\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG16.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG17.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG18.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG19.png\" width=20%>\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG20.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG21.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG22.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG23.png\" width=20%>\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG24.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG25.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG26.png\" width=20%><img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG27.png\" width=20%>\n</div>\n\n<div align=\"center\">\n<img src=\"https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/PNG28.png\" width=20%>\n</div>\n\n\n## Apk download（Android 5.0 or above it）（更好的Awesome-WanAndroid V1.2.5 来了）\n\n<center>\n\n![image](https://raw.githubusercontent.com/JsonChao/Awesome-WanAndroid/master/screenshots/apk.png)\n\n</center>\n\n## Skill points\n\n- 项目代码尽力遵循了阿里巴巴Java开发规范和阿里巴巴Android开发规范，并有良好的注释。\n\n- 使用Rxjava2结合Retrofit2进行网络请求。\n\n- 使用Rxjava2的操作符对事件流进行进行转换、延时、过滤等操作，其中使用Compose操作符结合RxUtils工具类简化线程切换调用的代码数量。\n\n- 使用Dagger2结合Dagger.Android无耦合地将Model注入Presenter、Presenter注入View，更高效地实现了MVP模式。\n\n- 使用BasePresenter对事件流订阅的生命周期做了集成管理。\n\n- 使用Material Design中的Behavior集合ToolBar实现了响应式的“上失下现”特效。\n\n- 多处使用了滑动到顶部的悬浮按钮，提升阅读的便利性。\n\n- 使用SmartRefreshLayout丰富的刷新动画将项目的美提升了一个档次。\n\n- 使用了腾讯Bugly，以便对项目进行Bug修复和CI。\n\n- 项目中多处使用了炫目的动画及特效。\n\n- 高覆盖率的单元测试及部分UI测试。\n\n- 更多请Clone本项目进行查看。。。\n\n## 笔者对项目所使用主流框架的源码分析\n\n请参见[Awesome-Third-Library-Source-Analysis](https://github.com/JsonChao/Awesome-Third-Library-Source-Analysis)\n\n\n## Version\n\n### :zap:v1.2.5\n\n1、将请求url的scheme字段全局替换为https\n\n2、解决issue上存在的bug\n\n\n### v1.2.4\n\n1.新增公众号栏目，支持公众号内搜索\n\n2.解决Bugly上的bug\n\n\n### v1.2.3\n\n1.适配Android O版本\n\n2.解决Bugly上的bug\n\n\n### v1.2.2\n\n1.增加了Presenter层单元测试和部分View层的自动化UI测试\n\n2.解决登陆状态过一段时间会失效的bug\n\n3.进行了适当的小规模重构\n\n4.解决Bugly的兼容性bug\n\n\n### v1.2.1\n\n1.增加dagger.android\n\n2.使用config.gradle统一管理gradle依赖\n\n3.封装RxBinding订阅处理\n\n4.增加共享元素适配处理\n\n5.使用Compose增加统一返回结果处理\n\n6.增加Glide memory、bitmapPool、diskCache配置\n\n7.优化加载错误页显示逻辑\n\n8.优化注册界面\n\n9.优化沉浸式状态栏显示效果\n\n10.更新Gradle版本到3.0.1\n\n\n### v1.2.0\n\n1.增加设置模块\n\n2.分离出常用网站界面\n\n3.增加item多标签\n\n4.美化详情界面菜单\n\n5.添加ActivityOption跳转动画\n\n6.解决90%以上的内存泄露\n\n\n### v1.1.0\n\n1.增加RxBus订阅管理，解决RxBus内存泄露的问题\n\n2.解决Webview有时加载不出来的问题\n\n3.增加RxPermission，处理Android 6.0权限问题\n\n4.Base响应基类泛型化，减少大量实体代码\n\n5.增加知识分类导航详情页\n\n6.搜索页面增加删除搜索记录，UI界面更加美观\n\n7.项目整体UI美化\n\n\n### v1.0.1\n\n1.合理化项目分包架构\n\n2.优化搜索模块\n\n3.增加自动登录\n\n4.增加TabLayout智能联动RecyclerView\n\n5.增加沉浸式状态栏\n\n6.优化详情文章菜单样式\n\n7.项目整体UI美化\n\n\n### V1.0.0\n\n1.提交Awesome WanAndroid第一版 \n\n## Thanks\n\n### API： \n\n鸿洋大大提供的\n[WanAndroid API](http://www.wanandroid.com/blog/show/2)\n\n### APP：\n\n[GeekNews](https://github.com/codeestX/GeekNews)\n提供了Dagger2配合MVP的架构思路\n\n[Toutiao](https://github.com/iMeiji/Toutiao)\n提供的MD特效实现思路\n\n[diycode](https://github.com/GcsSloop/diycode)\n提供的智能滑动悬浮按钮实现思路\n\n[Eyepetizer-in-Kotlin](https://github.com/LRH1993/Eyepetizer-in-Kotlin)\n提供的搜索界面切换特效实现思路\n\n此外，还参考了不少国内外牛人的项目，感谢开源！\n\n### UI design：\n\n[花瓣](https://huaban.com/) 提供了很美的UI界面设计，感谢花瓣\n\n### icon：\n\n[iconfont](http://www.iconfont.cn/) 阿里巴巴对外开放的很棒的icon资源\n\n### Excellent third-party open source library：\n\n#### Rx\n\n[Rxjava](https://github.com/ReactiveX/RxJava)\n\n[RxAndroid](https://github.com/ReactiveX/RxAndroid)\n\n[RxBinding](https://github.com/JakeWharton/RxBinding)\n\n#### Network\n\n[Retrofit](https://github.com/square/retrofit)\n\n[OkHttp](https://github.com/square/okhttp)\n\n[Gson](https://github.com/google/gson)\n\n#### Image Loader\n\n[Glide](https://github.com/bumptech/glide)\n\n#### DI\n\n[Dagger2](https://github.com/google/dagger)\n\n[ButterKnife](https://github.com/JakeWharton/butterknife)\n\n#### DB\n\n[GreenDao](https://github.com/greenrobot/greenDAO)\n\n#### UI\n\n[SmartRefreshLayout](https://github.com/scwang90/SmartRefreshLayout)\n\n[Lottie-android](https://github.com/airbnb/lottie-android)\n\n### 还有上面没列举的一些优秀的第三方开源库，感谢开源，愿我们一同成长~\n\n## 知识星球（推荐）\n\n现如今，Android 行业人才已逐渐饱和化，但高级人才依旧很稀缺，我们经常遇到的情况是，100份简历里只有2、3个比较合适的候选人，大部分的人都是疲于业务，没有花时间来好好学习，或是完全不知道学什么来提高自己的技术。对于 Android 开发者来说，尽早建立起一个完整的 Android 知识框架，了解目前大厂高频出现的常考知识点，掌握面试技巧，是一件非常需要重视的事情。\n\n去年，为了进入一线大厂去做更有挑战的事情，拿到更高的薪资，我提前准备了半年的时间，沉淀了一份 **「两年磨一剑」** 的体系化精品面试题，而后的半年，我都在不断地进行面试，总共面试了二三十家公司，每一场面试完之后，我都将对应的面试题和详细的答案进行了系统化的总结，并更新到了我的面试项目里，现在，在每一个模块之下，我都已经精心整理出了 **超高频和高频的常考** 知识点。\n\n在我近一年的大厂实战面试复盘中逐渐对原本的内容进行了大幅度的优化，并且新增了很多新的内容。它可以说是一线互联网大厂的面试精华总结，同时后续还会包含如何写简历和面试技巧的内容，能够帮你省时省力地准备面试，大大降低找到一个好工作的难度。\n\n这份面试项目不同于我 Github 上的 Awesome-Android-Interview 面试项目：https://github.com/JsonChao/Awesome-Android-Interview，Awesome-Android-Interview 已经在 2 年前（2020年 10 月停止更新），内容稍显陈旧，里面也有不少点表述不严谨，总体含金量较低。而我今天要分享的这份面试题库，是我在这两年持续总结、细化、沉淀出来的体系化精品面试题，里面很多的核心题答案在面试的压力下，经过了反复的校正与升华，含金量极高。\n\n在分享之前，有一点要注意的是，一定不要将资料泄露出去！细想一下就明白了：\n\n1、如果暴露出去，拿到手的人比你更快掌握，更早进入大厂，拿到高薪，你进大厂的机会就会变小，毕竟现在好公司就那么多，一个萝卜一个坑。 \n\n2、两年前我公开分享的简陋版 Awesome-Android-Interview 面试题库现在还在被各个培训机构当做引流资料，加大了现在 Android 内卷。。\n\n所以，这一点一定要切记。\n\n获取方法：扫描下方的二维码。\n\n<div align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/17464480/227223150-0b614156-7cfd-4b85-9f51-ff84c321acf8.png\" width=50%>\n</div>\n\n\n### 出身普通的人，如何真正改变命运？\n\n这是我过去七年一直研究的命题。首先，是为自己研究，因为我是从小城镇出来的，通过持续不断地逆袭立足深圳。**越是出身普通的人，就越需要有耐心，去进行系统性地全面提升，这方面，我有非常丰富的实践经验和方法论**。因此，我开启了 “JsonChao” 的成长社群，希望和你一起完成系统性地蜕变。\n\n### 星球目前有哪些服务？\n\n- 每周会提供一份让 **个人增值，避免踩坑 的硬干货**。\n- 每日以文字或语音的形式分享我个人学习和实践中的 **思考精华或复盘记录**。\n- 提供 **每月 三 次成长**、技术或面试指导的咨询服务。\n- 更多服务正在研发中...\n\n### 超哥的知识星球适合谁？\n\n- **如果你希望持续提升自己，获得更高的薪资或是想加入大厂**，那么超哥的知识星球会对你有很大的帮助。\n- **如果你既努力，又焦虑**，特别适合加入超哥的知识星球，因为我经历过同样的阶段，而且最后找到了走出焦虑，靠近梦想的地方。\n- **如果你希望改变自己的生活状态**，欢迎加入超哥的知识星球，和我一起每日迭代，持续精进。\n\n\n<div align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/17464480/227224387-dc9c669a-0d9b-4a53-9fd2-e225071cce2f.png\" width=50%>\n</div>\n\n## 公众号\n\n我的公众号 `JsonChao` 开通啦，专注于构建一套未来Android开发必备的知识体系。每个工作日为您推送高质量文章，让你每天都能涨知识。如果您想第一时间获取最新文章和最新动态，欢迎扫描关注~\n\n<div align=\"center\">\n<img src=\"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7da61f2739d34818be8a51a7afbbbb53~tplv-k3u1fbpfcp-watermark.image?\" width=30%>\n</div>\n\n### License\n\nCopyright 2018 JsonChao\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "UmlDemo.puml",
          "type": "blob",
          "size": 9.66015625,
          "content": "@startuml\n\n''plantUML入门\n'Alice -> Bob : Request\n'Alice -> Bob: Request\n'\n'Bob --> Alice : Response\n'Bob --> Alice : Response\n'\n''这是单行注释\n'/'这是\n'多行\n'注释'/\n'\n''声明参与者\n'\n''可以使用\n'participant s1\n''也可以使用\n'actor ac1\n'boundary ac2\n'control ac3\n'entity ac4\n'database ac5\n'ac1 -> ac2 : to boundary\n'ac2 -> ac3 : to control\n'ac3 -> ac4 : to entity\n'ac4 -> ac5 : to database\n'ac2 --> ac1 : to actor\n'ac3 --> ac2 : to boundary\n'ac4 --> ac3 : to control\n'ac5 --> ac4 : to entity\n'\n''使用#red追加背景色\n'actor sen #red\n''使用as ...追加别名\n'participant \"追加背景别名L\" as L #99ff99\n'\n'sen -> L : to L\n'L --> sen : to sen\n'\n''对于非字母的别名，可以使用\"\"，as后面的非字母别名也可以使用\"\"\n'jan -> \"qu()\" as didi\n'didi --> didi as \"quf()\"\n''注意，as两旁只能有一个为双引号\n'\n''发送消息给自己，使用/n换行\n'zan -> zan : This is a test to send message \\n to self\n'\n''改变箭头的样式，使用 < > 、<< >> 、\\ / 、\\\\ // 、o\n'js1 <-> js2\n'js2 <<->> js3\n'js3 \\-/ js4\n'js4 \\\\-// js5\n'js5 <-//o js6\n''-两旁只要有一个变实心箭头的操作符:<<、>>、//、\\\\，两旁全部变实心\n'\n''改变箭头的颜色，在箭头中间使用[#...]\n'cs1 -[#red]> cs2\n'cs2 -[#black]-> cs1\n'\n''消息序号，格式为autonumber start increment\n'autonumber\n'bs1 -[#ff99ff]> bs2\n'bs2 -[#ff99ff]> bs3\n'\n'autonumber 20\n'bs3 -> bs4\n'bs4 -> bs5\n'\n'autonumber 30 10\n'bs5 -> bs6\n'bs6 -> bs7\n'\n'/'使用HTML标签为序号指定数字格式,格式化过程是Java类中的\n'DecimalFormat执行的，\"0\"表示数字，\"#\"表示缺省符'/\n'autonumber \"<b>[000]\"\n'ds1 -> ds2\n'ds2 -> ds3\n'\n'autonumber \"<b>(<u>##<u>) \"\n'ds3 -> ds4\n'ds4 -> ds5\n'\n'autonumber 20 10 \"<font color=blue> message 0\"\n'ds5 -> ds6\n'ds6 -> ds7\n'\n''添加标题，使用title\n'title This is an awesome plantUML study demo\n'es1 -> es2\n'es2 -->> es3\n'\n'/'使用legend、end legend设置图形图例，\n'支持左对齐、右对齐、居中对齐'/\n'fs1 -> fs2\n'fs2 -> fs3\n'legend right\n'this is\n'legend show\n'end legend\n'\n'/'分割图形，使用newpage，将图像分割为块，\n'每块可看做是一个页面，后面可加描述'/\n'hs1 -> hs2\n'hs2 -> hs3\n'\n'newpage\n'hs1 -> hs2\n'hs2 -> hs3\n'\n'newpage this newpage usage\n'hs1 -> hs2\n'hs2 -> hs3\n'\n'/'消息分组\n'alt/else\n'opt\n'loop\n'par\n'break\n'critical\n'group\n'除了group外，其它的关键字都可以在后面\n'添加文本进行描述，group后面则跟的是组名,\n'使用end来关闭一个组'/\n'alt message group start\n'    gs1 -> gs2\n'else some other way\n'    gs2 -> gs3\n'    loop start loop\n'        gs3 -> gs2\n'        gs2 -> gs1\n'        group custom group\n'            gs1 -> gs2\n'            gs2 -> gs3\n'        end\n'    end\n'else final way\n'    gs3 -> gs4\n'end\n\n'/'消息注解，note left : /note right :\n' 在消息的左边或右边添加注解，起解释说明的作用, 如果有多行，\n' 使用 note left / note right 开始 加 end note 结束。'/\n'h1 -> h2 : first study\n'note left : this is first study\n'\n'h2 -> h1 : second study\n'note right : this is second study\n'\n'h2 -> h2 : third study\n'note left\n'    this is third study\n'end note\n\n'/'一些其它的注解方式，可以使用 note left of /\n'note right of / note over 将注解放在与之相关的参与者\n'旁边，通过改变注解的背景色，我们可以高亮一个注解模块'/\n'participant h3\n'participant h4\n'\n'note left of h3\n'    this is h3 range\n'end note\n'\n'note right of h4\n'     this is h4 range\n'end note\n'\n'note over h3 : I am in h3.\n'note over h4 : I am in h4.\n'\n'note over h3, h4 : locate in common area of h3 and h4\n'\n'note over h3, h4 #e2e2f3\n'    locate in common area of h3 and h4 + highlight\n'end note\n\n'/'使用HTML来格式化文本，常用的有：\n'<b> 加粗文本\n'<u> 或 <u:#ffffff> / <u:colorName> 加下滑线\n'<i> 斜体\n'<s> 或 <s:#ffffff> / <s:colorName> 加删除线\n'<w> 或 <w:#ffffff> / <w:colorName> 加波浪线\n'<color:#ffffff> / <color:colorName> 设置文本颜色\n'<back:#ffffff> / <back:colorName> 设置背景颜色\n'<size:aa> 设置文本大小\n'<img src=\"file\"> / <img:file> 设置图片\n'<img src=\"http://url\"> / <img:http://url> 设置网络图片'/\n'participant h5\n'participant \"hello, I am <b>h6</b>\" as h6\n'\n'note left of h5 : this is <u>h5 area</u>\n'note left of h5 : this is <u:#cbc2e5>h5 area</u>\n'\n'note right of h6 : this is <i>h6 area</i>\n'\n'note over h5\n'    locate in <s>h6</s>h5\n'end note\n'\n'note over h6\n'    locate in <s:#f2f2b2>h5</s>h6\n'end note\n'\n'note over h5, h6\n'    <back:#aaaaaa><size:16><w:#ff4081>locate in h5, h6</w></size></back>\n'end note\n'\n'note over h5, h6 #ececec\n'    <img:http://pics.sc.chinaz.com/Files/pic/icons128/6962/r10.png>\n'    <img:screenshots/apk.png>\n'end note\n\n''/'用例图'/\n'/'用例：使用() / usecase 关键字来创建一个用例图，as可以设置别名'/\n'(UC1)\n'(This is UC2) as UC2\n'usecase UC3\n'usecase (This is last\\n usecase) as UC4\n\n'/'参与者：使用:participant name: / actor 来创建一个参与者，as可以设置别名'/\n':UC1:\n':UC2: as UC2\n'actor UC3\n'actor :last actor: as UC4\n\n'/'示例'/\n'left to right direction\n'skinparam packageStyle rect\n':UC1:\n':UC2:\n'rectangle \"UC MODULE\" {\n'UC1 -- (UC)\n'(UC) .> (UC TOP)\n'(UC DOWN) .> (UC)\n'(UC) -- UC2\n'}\n\n'/'类图'/\n'\n'/'活动图'/\n'\n'/'简单活动，使用(*)来表示活动的开始点与结束点，--> 表示箭头。'/\n'(*) --> \"first activity\"\n'\"first activity\" --> (*)\n\n'/'带标注的箭头，形如 -->[...] '/\n'(*) --> \"first activity\"\n'--> [jump to the second activity] \"second activity\"\n'--> \"third activity\"\n'--> (*)\n\n'/'改变箭头的方向，形如\n'-down-> 向下，默认，等同于 -->\n'-up-> 向上\n'-left-> 向左\n'-right-> 向右\n'down/up/left/right 可以简写为前面1个或2个字母'/\n'(*) -r-> \"1\"\n'-r-> \"2\"\n'--> \"3\"\n'--> \"4\"\n'-l-> \"5\"\n'--> \"6\"\n'-r-> \"7\"\n'-r-> \"8\"\n'-r-> \"9\"\n'-r-> \"10\"\n'-u-> \"11\"\n'-l-> (*)\n\n'/'分支，使用if/then/else 来定义分支'/\n'(*) --> \"some test\"\n'\n'if \"do some judge\" then\n'    --> [true] \"some activity\"\n'    --> \"start up\"\n'else\n'    --> [false] \"other activity\"\n'    --> \"start up\"\n'    --> (*)\n'end if\n\n'/'多分支'/\n'(*) --> \"some test\"\n'\n'if \"event type\" then\n'    --> [true] \"touch screen\"\n'    --> \"to activity\"\n'    --> \"to window\"\n'    --> \"to content group\"\n'    --> \"to activity layout viewGroup\"\n'    --> \"last to the scrollView\" as a1\n'else\n'    --> [false] \"click screen\"\n'    --> \"to activity2\"\n'    -right-> \"to window2\"\n'    --> \"to content group2\"\n'    --> \"to activity layout viewGroup2\"\n'    -right-> \"to viewPager\"\n'    if \"if intercept\" then\n'        --> [true] \"intercept event\"\n'        if \"if touch\" then\n'            -l-> [true] \"viewPager touch event\"\n'            --> (*)\n'        else\n'            -r-> [false] \"viewPager not touch event\"\n'            --> \"last to the view2\"\n'        end if\n'    else\n'        -r-> [false] \"do not intercept event\"\n'        --> \"last to the view2\"\n'        --> (*)\n'    end if\n'end if\n'\n'a1 --> if \"if intercept\" then\n'    --> [true] \"last to the view2\"\n'else\n'    --> [false] \"scrollView touch\"\n'    --> (*)\n'end if\n\n'/'同步块，使用===code===表示'/\n'(*) --> ===B1===\n'    --> \"a2\"\n'    --> ===B2===\n'\n'===B1=== -> \"a3\"\n'    --> ===B2===\n'    --> (*)\n\n'/'一个实例'/\n'(*) --> \"WanAndroid\"\n'    --> \"computer basic knowledge\" as a1\n'    --> \"computer network\"\n'    --> ===B1===\n'\n'    ===B1=== --> [build base] \"java basic knowledge\"\n'    --> [java classify knowledge] ===B2===\n'\n'    ===B2=== --> \"java collection\"\n'        --> ===B3===\n'    ===B2=== --> \"java io\"\n'        --> ===B3===\n'    ===B2=== --> \"java concurrency\"\n'        --> ===B3===\n'    ===B2=== --> \"java network\"\n'        --> ===B3===\n'    ===B2=== --> \"jvm\"\n'        --> ===B3===\n'\n'    ===B3=== --> \"android basic knowledge\"\n'        --> \"android advance\"\n'        --> \"android source\"\n'        --> \"awesome third party source\"\n'        --> \"hot technology\"\n'        --> \"study more advance knowledge\"\n'        --> (*)\n'\n'a1 --> \"computer operating system\"\n'    --> ===B1===\n'\n'a1 --> \"database\"\n'    --> ===B1===\n'\n'a1 --> \"dataStruct and algorithm\"\n'    --> ===B1===\n\n'/'长文本的描述活动，可使用换行符\\n或者少量的HTML标签'/\n'(*) -l-> \"This is <size:25>activity</size> , it is <b>very large</b>\n' and it's <color:#ff4034>name</color> is <i>unique</i>\" as a1\n'    -u-> \"this is <b>super</b> activity\"\n'\n'a1 -d-> \"this is <b><i>subclass</i></b> activity, below is qrcode\\n\n'    <img:screenshots/apk.png>\"\n\n'/'注释，注释命令如下\n'note left\n'note right\n'note top\n'note bottom\n'可使用单行或多行形式'/\n'(*) --> \"some activity\" as a1\n'    note right: \"build some activity as show\"\n'\n'a1 -l-> \"left activity\"\n'\n'a1 --> \"bottom activity\"\n'    --> (*)\n\n'/'分区，使用 partition、end partition 定义分区，\n'也可以使用HTML的颜色码或颜色值设置背景色'/\n'partition H1 #ff4356\n'(*) --> \"first activity\"\n'    --> ===S1===\n'    --> \"second activity\" as a1\n'    --> ===S2===\n'    --> (*)\n'end partition\n'\n'partition H2 #blue\n'    a1 -r-> \"third activity\"\n'end partition\n'\n'partition H3 #cc4324\n'    a1 --> \"last activity\"\n'        --> (*)\n'end partition\n\n'/'图形标题，使用 title、title / end title 设置图形标题'/\n'title This RxJava study router\n'(*) --> observer and observable concept\n'    --> operator conscious\n'    --> exercise operator\n'    --> (*)\n\n'/'皮肤，使用 skinparam 来设置皮肤'/\n'skinparam backgroundColor #AEFFFF\n'skinparam activityBackgroundColor peru\n'skinparam activityStartColor #red\n'skinparam activityEndColor #white\n'skinparam activityBarColor #green\n'skinparam activityBorderColor #ef5345\n'skinparam activityFontName Impact\n'skinparam activityShape octagon\n'\n'(*) --> \"first activity\"\n'    --> ===B1===\n'    --> \"second activity\"\n'    -r-> ===B2===\n'    --> \"last activity\"\n'    --> (*)\n\n\n\n\n@enduml"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 7.6123046875,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\napply from: \"config.gradle\"\n\nbuildscript {\n    ext.plugin_version=\"0.1.4\"\n    repositories {\n        google()\n        jcenter()\n        mavenCentral()\n        maven { url 'https://maven.google.com' }\n        maven { url \"https://plugins.gradle.org/m2/\" }\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.1.4'\n        classpath 'com.jakewharton:butterknife-gradle-plugin:10.2.1'\n        classpath 'com.hujiang.aspectjx:gradle-android-plugin-aspectjx:2.0.4'\n        classpath 'org.greenrobot:greendao-gradle-plugin:3.2.2'\n        classpath 'me.tatarka:gradle-retrolambda:3.7.0'\n        classpath 'me.ele:lancet-plugin:1.0.5'\n        classpath \"com.didichuxing.tools:droidassist:1.1.0\"\n        classpath \"gradle.plugin.cn.cxzheng.methodTracePlugin:tracemanplugin:1.0.4\"\n\n        classpath 'com.mogujie.gradle:tinyPicPlugin:1.1.4'\n\n        classpath 'com.tencent.mm:AndResGuard-gradle-plugin:1.2.17'\n\n        classpath \"com.bytedance.android.byteX:base-plugin:${plugin_version}\"\n        // Add bytex plugins' dependencies on demand. 按需添加插件依赖\n        classpath \"com.bytedance.android.byteX:access-inline-plugin:${plugin_version}\"\n        classpath \"com.bytedance.android.byteX:shrink-r-plugin:${plugin_version}\"\n        classpath \"com.bytedance.android.byteX:const-inline-plugin:${plugin_version}\"\n        classpath \"com.bytedance.android.byteX:field-assign-opt-plugin:${plugin_version}\"\n        classpath \"com.bytedance.android.byteX:getter-setter-inline-plugin:${plugin_version}\"\n        classpath \"com.bytedance.android.byteX:method-call-opt-plugin:${plugin_version}\"\n\n        classpath \"com.bytedance.android.byteX:closeable-check-plugin:${plugin_version}\"\n\n        classpath 'com.smallsoho.mobcase:McImage:1.5.0'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n        mavenCentral()\n        maven {\n            url \"https://jitpack.io\"\n        }\n        maven { url \"https://plugins.gradle.org/m2/\" }\n        maven {\n            url 'http://maven.aliyun.com/nexus/content/repositories/releases/'\n        }\n    }\n}\n\n//// 1、删除根目录下的 build 文件\n//task clean(type: Delete) {\n//    delete rootProject.buildDir\n//}\n//\n//// 2、将 doc 复制到 build/target 目录下\n//task copyDocs(type: Copy) {\n//    from 'src/main/doc'\n//    into 'build/target/doc'\n//}\n//\n//// 3、执行时会复制源文件到目标目录，然后从目标目录删除所有非复制文件\n//task syncFile(type:Sync) {\n//    from 'src/main/doc'\n//    into 'build/target/doc'\n//}\n//\n//\n//project.task('JsonChao1').doFirst {\n//    println \"Beginning of execute JsonChao Task\"\n//}\n//\n//project.tasks.create('JsonChao2').doLast {\n//    println \"Ending of execute JsonChao Task\"\n//}\n//\n//project.task('JsonChao3', group: \"JsonChao\", description: \"my tasks\", dependsOn: [\"JsonChao1\", \"JsonChao2\"] ).doLast {\n//    println \"execute JsonChao3 Task\"\n//}\n//\n//\n//// 1、声明一个名为 JsonChao 的 gradle task\n//task JsonChao\n//\n//JsonChao {\n//\n//    // 2、在 JsonChao task 闭包内输出 hello~，\n//    // 执行在 gradle 生命周期的第二个阶段，即配置阶段。\n//    println(\"hello~\")\n//\n//    // 3、给 task 附带一些 执行动作（Action），执行在\n//    // gradle 生命周期的第三个阶段，即执行阶段。\n//    doFirst {\n//        println(\"start\")\n//    }\n//\n//    doLast {\n//        println(\"end\")\n//    }\n//}\n//\n//// 4、除了上述这种将声明与配置、Action 分别定义\n//// 的方式之外，也可以直接将它们结合起来。\n//// 这里我们又定义了一个 Android task，它依赖于 JsonChao\n//// task，也就是说，必须先执行完 JsonChao task，才能\n//// 去执行 Android task，由此，它们之间便组成了一个\n//// 有向无环图：JsonChao task => Android task\n//task Andorid(dependsOn:\"JsonChao\") {\n//    doLast {\n//        println(\"end?\")\n//    }\n//}\n//\n//defaultTasks \"Gradle_First\", \"Gradle_Last\"\n//\n//task Gradle_First() {\n//    ext.good = true\n//}\n//\n//task Gradle_Last() {\n//    doFirst {\n//        println Gradle_First.good\n//    }\n//    doLast {\n//        println \"I am not $Gradle_First.name\"\n//    }\n//}\n\n/**\n * Project API 详解\n */\n\n/**\n * 1、getAllProjects 使用示例\n */\n//this.getProjects()\n//\n//def getProjects() {\n//    println \"<================>\"\n//    println \" Root Project Start \"\n//    println \"<================>\"\n//    // getAllprojects 方法返回一个包含根 project 与其子 project 的 Set 集合\n//    // eachWithIndex 方法用于遍历集合、数组等可迭代的容器，\n//    // 并同时返回下标，不同于 each 方法仅返回 project\n//    this.getAllprojects().eachWithIndex { Project project, int index ->\n//        // 下标为 0，表明当前遍历的是 rootProject\n//        if (index == 0) {\n//            println \"Root Project is $project\"\n//        } else {\n//            println \"child Project is $project\"\n//        }\n//    }\n//}\n\n/**\n * 2、getAllsubproject 使用示例\n */\n//this.getSubProjects()\n//\n//def getSubProjects() {\n//    println \"<================>\"\n//    println \" Sub Project Start \"\n//    println \"<================>\"\n//    // getSubProjects 方法返回一个包含子 project 的 Set 集合\n//    this.getSubprojects().each { Project project ->\n//        println \"child Project is $project\"\n//    }\n//}\n\n//this.getParentProject()\n//\n//def getParentProject() {\n//    parentName = this.getParent().name\n//    println \"my parent project is $parentName\"\n//}\n\n/**\n * 4、getRootProject 使用示例\n */\n//this.getRootPro()\n//\n//def getRootPro() {\n//    def rootProjectName = this.getRootProject().name\n//    println \"root project is $rootProjectName\"\n//}\n//\n///**\n// * 5、project 使用示例\n// */\n//\n//// 1、闭包参数可以放在括号外面\n//project(\"app\") { Project project ->\n//    apply plugin: 'com.android.application'\n//}\n//\n//// 2、更简洁的写法是这样的\n//project(\"app\") {\n//    apply plugin: 'com.android.application'\n//}\n//\n///**\n// * 6、allprojects 使用示例\n// */\n//\n//// 同 project 一样的更简洁写法\n//allprojects {\n//    group \"com.json.chao\"\n//    version \"1.0.0\"\n//}\n//\n///**\n// * 7、subprojects 使用示例\n// */\n//\n//// 给所有的子工程引入 将 aar 文件上传置 Maven 服务器的配置脚本\n//subprojects {\n//    if (project.plugins.hasPlugin(\"com.android.library\")) {\n//        apply from: '../publishToMaven.gradle'\n//    }\n//}\n\n/**\n * 1、路径获取 API\n */\n//println \"the root file path is:\" + getRootDir().absolutePath\n//println \"this build file path is:\" + getBuildDir().absolutePath\n//println \"this Project file path is:\" + getProjectDir().absolutePath\n\n\n/**\n * 1、文件定位之 file\n */\n//this.getContent(\"config.gradle\")\n//\n//def getContent(String path) {\n//    try {\n//        // 不同与 new file 的需要传入 绝对路径 的方式，\n//        // file 从相对于当前的 project 工程开始查找\n//        def mFile = file(path)\n//        println mFile.text\n//    } catch (GradleException e) {\n//        println e.toString()\n//        return null\n//    }\n//}\n\n/**\n * 1、文件定位之 files\n */\n//this.getContent(\"config.gradle\", \"build.gradle\")\n//\n//def getContent(String path1, String path2) {\n//    try {\n//        // 不同与 new file 的需要传入 绝对路径 的方式，\n//        // file 从相对于当前的 project 工程开始查找\n//        def mFiles = files(path1, path2)\n//        println mFiles[0].text + mFiles[1].text\n//    } catch (GradleException e) {\n//        println e.toString()\n//        return null\n//    }\n//}\n\n\n\n"
        },
        {
          "name": "config.gradle",
          "type": "blob",
          "size": 9.8935546875,
          "content": "ext {\n\n    android = [\n            compileSdkVersion       : 27,\n            buildToolsVersion       : \"28.0.3\",\n            minSdkVersion           : 21,\n            targetSdkVersion        : 27,\n            versionCode             : 9,\n            versionName             : \"1.2.5\",\n            renderscriptTargetApi   : 21\n    ]\n\n    version = [\n            supportLibraryVersion   : \"28.0.0\",\n            smartrefreshVersion     : \"1.1.0-alpha-21\",\n            okhttpVersion           : \"3.9.0\",\n            retrofitVersion         : \"2.3.0\",\n            glideVersion            : \"4.0.0\",\n            daggerVersion           : \"2.15\",\n            butterknifeVersion      : \"8.8.1\",\n            fragmentationVersion    : \"1.2.4\",\n            leakcanaryVersion       : \"1.6.3\"\n    ]\n\n    dependencies = [\n            // base\n            \"appcompat-v7\"                      : \"com.android.support:appcompat-v7:${version[\"supportLibraryVersion\"]}\",\n            \"cardview-v7\"                       : \"com.android.support:cardview-v7:${version[\"supportLibraryVersion\"]}\",\n            \"support-v4\"                        : \"com.android.support:support-v4:${version[\"supportLibraryVersion\"]}\",\n            \"design\"                            : \"com.android.support:design:${version[\"supportLibraryVersion\"]}\",\n            \"constraint-layout\"                 : \"com.android.support.constraint:constraint-layout:1.0.2\",\n\n            // ui\n            \"SmartRefreshLayout\"                :\"com.scwang.smartrefresh:SmartRefreshLayout:${version[\"smartrefreshVersion\"]}\",\n            \"SmartRefreshHeader\"                : \"com.scwang.smartrefresh:SmartRefreshHeader:${version[\"smartrefreshVersion\"]}\",\n            \"banner\"                            : \"com.youth.banner:banner:1.4.10\",\n            \"FlycoTabLayout_Lib\"                : \"com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar\",\n            \"VerticalTabLayout\"                 : \"q.rorbin:VerticalTabLayout:1.2.5\",\n            \"flowlayout-lib\"                    : \"com.hyman:flowlayout-lib:1.1.2\",\n            \"agentweb\"                          : \"com.just.agentweb:agentweb:4.0.2\",\n\n            // net\n            \"gson\"                              : \"com.google.code.gson:gson:2.8.2\",\n            \"okhttp\"                            : \"com.squareup.okhttp3:okhttp:${version[\"okhttpVersion\"]}\",\n            \"logging-interceptor\"               : \"com.squareup.okhttp3:logging-interceptor:${version[\"okhttpVersion\"]}\",\n            \"retrofit\"                          : \"com.squareup.retrofit2:retrofit:${version[\"retrofitVersion\"]}\",\n            \"converter-gson\"                    : \"com.squareup.retrofit2:converter-gson:${version[\"retrofitVersion\"]}\",\n            \"adapter-rxjava2\"                   : \"com.squareup.retrofit2:adapter-rxjava2:${version[\"retrofitVersion\"]}\",\n            \"glide\"                             : \"com.github.bumptech.glide:glide:${version[\"glideVersion\"]}\",\n            \"retrofit-url-manager\"              : \"me.jessyan:retrofit-url-manager:1.4.0\",\n\n            // dao\n            \"greendao\"                          : \"org.greenrobot:greendao:3.2.2\",\n\n            // rx\n            \"rxjava\"                            : \"io.reactivex.rxjava2:rxjava:2.2.4\",\n            \"rxandroid\"                         : \"io.reactivex.rxjava2:rxandroid:2.1.0\",\n            \"rxbinding\"                         : \"com.jakewharton.rxbinding2:rxbinding:2.1.0\",\n            \"rxpermissions\"                     : \"com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar\",\n\n            // di\n            \"dagger\"                            : \"com.google.dagger:dagger:${version[\"daggerVersion\"]}\",\n            \"dagger-android\"                    : \"com.google.dagger:dagger-android:${version[\"daggerVersion\"]}\",\n            \"dagger-android-support\"            : \"com.google.dagger:dagger-android-support:${version[\"daggerVersion\"]}\",\n            \"javax_annotation\"                  : \"org.glassfish:javax.annotation:10.0-b28\",\n            \"butterknife\"                       : \"com.jakewharton:butterknife:${version[\"butterknifeVersion\"]}\",\n\n            // multidex\n            \"multidex\"                          : \"com.android.support:multidex:1.0.3\",\n\n            // other\n            \"lottie\"                            : \"com.airbnb.android:lottie:2.3.0\",\n            \"BaseRecyclerViewAdapterHelper\"     : \"com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.50\",\n            \"fragmentation\"                     : \"me.yokeyword:fragmentation:${version[\"fragmentationVersion\"]}\",\n            \"fragmentation-swipeback\"           : \"me.yokeyword:fragmentation-swipeback:${version[\"fragmentationVersion\"]}\",\n            \"crashreport_upgrade\"               : \"com.tencent.bugly:crashreport_upgrade:latest.release\",\n            \"logger\"                            : \"com.orhanobut:logger:2.1.1\",\n            \"ByeBurger\"                         : \"com.github.githubwing:ByeBurger:1.2.3\",\n            \"PersistentCookieJar\"               : \"com.github.franmontiel:PersistentCookieJar:v1.0.1\",\n            \"XUpdate\"                           : \"com.github.xuexiangjys:XUpdate:1.0.6\",\n\n            // performance\n            \"epic\"                              : \"me.weishu:epic:0.6.0\",\n            \"aspectjrt\"                         : \"org.aspectj:aspectjrt:1.8.14\",\n            \"x2c-lib\"                           : \"com.zhangyue.we:x2c-lib:1.0.6\",\n            \"soloader\"                          : \"com.facebook.soloader:soloader:0.8.0\",\n            \"stetho\"                            : \"com.facebook.stetho:stetho:1.5.1\",\n            \"stetho-okhttp3\"                    : \"com.facebook.stetho:stetho-okhttp3:1.4.2\"\n\n    ]\n\n    annotationProcessor = [\n            \"glide_compiler\"                    : \"com.github.bumptech.glide:compiler:${version[\"glideVersion\"]}\",\n            \"dagger-compiler\"                   : \"com.google.dagger:dagger-compiler:${version[\"daggerVersion\"]}\",\n            \"dagger-android-processor\"          : \"com.google.dagger:dagger-android-processor:${version[\"daggerVersion\"]}\",\n            \"butterknife-compiler\"              : \"com.jakewharton:butterknife-compiler:${version[\"butterknifeVersion\"]}\",\n            \"x2c-apt\"                           : \"com.zhangyue.we:x2c-apt:1.1.2\"\n    ]\n\n    apiFileDependencies = [\n            \"launchstarter\"                                   : \"libs/launchstarter-release-1.0.0.aar\",\n            \"yearclass\"                                       : \"libs/yearclass-release-1.0.0.aar\"\n\n    ]\n\n    debugImplementationDependencies = [\n            \"MethodTraceMan\"                                  : \"com.github.zhengcx:MethodTraceMan:1.0.7\"\n    ]\n\n    releaseImplementationDependencies = [\n            \"MethodTraceMan\"                                  : \"com.github.zhengcx:MethodTraceMan:1.0.5-noop\"\n    ]\n\n    androidTestImplementationDependencies = [\n            \"espresso-contrib\"                  : \"com.android.support.test.espresso:espresso-contrib:3.0.2\",\n            \"espresso-intents\"                  : \"com.android.support.test.espresso:espresso-intents:3.0.2\",\n            \"espresso-accessibility\"            : \"com.android.support.test.espresso:espresso-accessibility:3.0.2\",\n            \"espresso-web\"                      : \"com.android.support.test.espresso:espresso-web:3.0.2\",\n            \"idling-concurrent\"                 : \"com.android.support.test.espresso.idling:idling-concurrent:3.0.2\",\n            \"runner\"                            : \"com.android.support.test:runner:1.0.2\"\n    ]\n\n\n    testImplementationDependencies = [\n            \"asm\"                               : \"org.ow2.asm:asm:7.1\",\n            \"asm-commons\"                       : \"org.ow2.asm:asm-commons:7.1\",\n            // unit test , 为了整合mockito和PowerMockito，mockito暂时最高只支持2.8.9\n            \"junit\"                             : \"junit:junit:4.12\",\n            \"mockito\"                           : \"org.mockito:mockito-core:2.8.9\",\n            \"powermock-module-junit4\"           : \"org.powermock:powermock-module-junit4:1.7.4\",\n            \"powermock-module-junit4-rule\"      : \"org.powermock:powermock-module-junit4-rule:1.7.4\",\n            \"powermock-api-mockito2\"            : \"org.powermock:powermock-api-mockito2:1.7.4\",\n            \"powermock-classloading-xstream\"    : \"org.powermock:powermock-classloading-xstream:1.7.4\",\n            \"robolectric\"                       : \"org.robolectric:robolectric:3.8\",\n            \"shadows-support-v4\"                : \"org.robolectric:shadows-support-v4:3.4-rc2\",\n            \"shadows-multidex\"                  : \"org.robolectric:shadows-multidex:3.+\"\n    ]\n\n    debugApiDependencies = [\n            \"blockcanary-android\"                     : \"com.github.markzhai:blockcanary-android:1.5.0\"\n    ]\n\n    releaseApiDependencies = [\n            \"blockcanary-no-op\"                       : \"com.github.markzhai:blockcanary-no-op:1.5.0\"\n    ]\n\n    compileOnlyDependencies = [\n            \"lancet-base\"                       : \"me.ele:lancet-base:1.0.5\"\n    ]\n\n    implementationExcludes = [\n            \"com.android.support.test.espresso:espresso-idling-resource:3.0.2\" : [\n                    'com.android.support' : 'support-annotations'\n            ]\n    ]\n\n    debugImplementationExcludes = [\n            \"com.squareup.leakcanary:leakcanary-android:${version[\"leakcanaryVersion\"]}\" : [\n                    'com.android.support' : 'support-annotations'\n            ]\n    ]\n\n    releaseImplementationExcludes = [\n            \"com.squareup.leakcanary:leakcanary-android-no-op:${version[\"leakcanaryVersion\"]}\" : [\n                    'com.android.support' : 'support-annotations'\n            ]\n    ]\n\n    testImplementationExcludes = [\n            \"com.squareup.leakcanary:leakcanary-android-no-op:${version[\"leakcanaryVersion\"]}\" : [\n                    'com.android.support' : 'support-annotations'\n            ]\n    ]\n\n    androidTestImplementationExcludes = [\n            \"com.android.support.test.espresso:espresso-core:3.0.2\" : [\n                    'com.android.support' : 'support-annotations'\n            ]\n    ]\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.5556640625,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# The Gradle daemon aims to improve the startup and execution time of Gradle.\n# When set to true the Gradle daemon is to run the build.\norg.gradle.daemon = true\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\norg.gradle.jvmargs = -Xmx3072m -XX:MaxPermSize=1024m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\norg.gradle.parallel = true\n\n# Enables new incubating mode that makes Gradle selective when configuring projects.\n# Only relevant projects are configured which results in faster builds for large multi-projects.\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:configuration_on_demand\norg.gradle.configureondemand = true\nandroid.enableBuildCache=true\n\nandroid.enableR8=true\nandroid.enableR8.libraries=true\n\n\nRELEASE_KEY_PASSWORD = wanandroid\nRELEASE_KEY_ALIAS = wanandroid\nRELEASE_STORE_PASSWORD = wanandroid\nRELEASE_STORE_FILE = ../wan-android-key.jks\n\nmCompileVersion = 27\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "json",
          "type": "tree",
          "content": null
        },
        {
          "name": "mctools",
          "type": "tree",
          "content": null
        },
        {
          "name": "packageplugin.gradle",
          "type": "blob",
          "size": 9.193359375,
          "content": "/**\n * 创建时间：2017年12月22日 <br>\n * 作者：renzhiqiang <br>\n * 描述：对插件化项目中的各个插件自动更新的脚本（解决插件化开发中的痛点）\n * 流程描述：  1、解析插件配置\n *           2、请求该配置下的最新版本\n *           3、检验本地是否存在相同配置的版本\n *           4、ipackage下载插件\n *           5、校验下载的文件的合法性\n */\nimport groovy.json.JsonSlurper\nimport java.security.MessageDigest\n\n/**\n * 入口\n */\nthis.afterEvaluate {\n    this.android.applicationVariants.all { variant ->\n        // checkManifest 这个 Task 在 Task 容器中\n        // 靠前的位置，我们可以在这里预先更新插件。\n        def checkTask = variant.checkManifest\n        checkTask.doFirst {\n            def bt = variant.buildType.name\n            if (bt == 'qa' || bt == 'preview'\n                    || bt == 'release') {\n                update_plugin(bt)\n            }\n        }\n    }\n}\n\n/**\n * 1.读取配置文件\n * 2.根据配置生成获取插件下载地址的 url\n * 3.拼接下载地址，插件文件名，插件 md5 文件名成 string\n * @param buildType 打包的 buildType\n */\ndef update_plugin(String buildType) {\n    // 使用线上配置\n    def config = getJsonDataFromNet(rootProject.ext.android.pluginConfigUrl);\n    println 'plugin config is :' + config + \" \\ncount=\" + config.size()\n\n    def pluginUrl = 'http://i.package.imooc.com/api/package/search.json'\n    int pluginSize = config.size()\n    for (int i = 0; i < pluginSize; i++) {\n        def plugin = config[i]\n        println(\"1、解析\" + plugin.projectname + \"的插件配置\")\n        println(plugin.projectname + \"插件配置为：\" + plugin)\n        StringBuilder urlRequest = new StringBuilder(pluginUrl)\n        urlRequest.append('?')\n        urlRequest.append('project=').append(plugin.projectname).append('&')\n        urlRequest.append('version=').append(plugin.version).append('&')\n        if (plugin.type != null) {\n            urlRequest.append('type=').append(plugin.type)\n            if (plugin.commit_hash != null) {\n                urlRequest.append('&')\n                urlRequest.append('commit_hash=').append(plugin.commit_hash)\n            } else {\n                if (plugin.type == 'release') {\n                    //release时必须有commitHash否则直接返回失败\n//          return false\n                }\n            }\n        } else {\n            if (buildType.equals('qa')) {\n                urlRequest.append('type=').append('debug')\n                if (plugin.commit_hash != null) {\n                    urlRequest.append('&')\n                    urlRequest.append('commit_hash=').append(plugin.commit_hash)\n                }\n            } else if (buildType.equals('release')) {\n                //release时必须有commitHash否则直接返回失败\n                if (plugin.commit_hash == null) {\n//          return false\n                } else {\n                    urlRequest.append('type=').append('release').append('&')\n                    urlRequest.append('commit_hash=').append(plugin.commit_hash)\n                }\n            } else if (buildType.equals('preview')) {\n                //preview时必须有commitHash否则直接返回失败\n                if (plugin.commit_hash == null) {\n//          return false\n                } else {\n                    urlRequest.append('type=').append('preview').append('&')\n                    urlRequest.append('commit_hash=').append(plugin.commit_hash)\n                }\n            }\n        }\n        def success = askForLatest(urlRequest.toString(), plugin.jar_name, plugin.jar_md5_name)\n        if (success) {\n            println '-----------' + plugin.jar_name + ' update successfull-----'\n            println()\n        } else {\n            println '-----------' + plugin.jar_name + ' update failed-----'\n            println()\n            throw new IllegalArgumentException(plugin.jar_name + ' update failed !!!!!')\n        }\n    }\n}\n\n/**\n * 获取插件最新版本\n * 1、根据版本配置请求ipackage上该插件的所有文件（一个配置会有多个插件文件）\n * 2、下载最新一个文件（约定第一个为最新）\n * @param url\n * @param jarname\n * @param jarMd5name\n * @return\n */\ndef askForLatest(String url, String jarname, String jarMd5name) {\n    println(\"2、从ipackage请求该配置下的最新版本\")\n    println(\"请求链接为：\" + url)\n    def pluginList = getJsonDataFromNet(url).result\n    if (pluginList.size() > 0) {\n        def latestPlugin = pluginList[0]\n        println(\"搜索最新版本成功：\" + latestPlugin)\n        if (isPluginExist(jarname, jarMd5name, latestPlugin.md5)) {\n            return true;\n        } else {\n            def flag = down(latestPlugin.download_url, jarname)\n            if (flag) {\n                flag = checkMd5(jarname, latestPlugin.md5)\n            }\n            return flag\n        }\n    } else {\n        println(\"搜索最新版本失败，更新插件失败\")\n        return false\n    }\n}\n\n/**\n * 校验本地是否已经存在符合配置的插件\n * 1、校验插件文件是否存在\n * 2、校验插件md5文件是否存在以及内容是否一致\n * 3、1和2同时满足即为符合否则删除该插件的相关文件\n * @param jarname\n * @param jarMd5name\n * @param md5\n * @return\n */\ndef isPluginExist(String jarname, String jarMd5name, String md5) {\n    println(\"3、检验本地是否存在相同配置的版本\")\n    println(\"检验条件：\" + \"文件名\" + jarname + \"，md5值\" + md5)\n    String pluginPath = 'src/main/assets/plugins/'\n    File pluginfile;\n    File md5file;\n    String md5content;\n    FileCollection plugins = files { file(pluginPath).listFiles() }\n    plugins.each { File file ->\n        if (file.getName().equals(jarname)) {\n            pluginfile = file;\n        }\n        if (file.getName().equals(jarMd5name)) {\n            md5file = file;\n            md5content = getFileContent(file);\n        }\n    }\n    if (pluginfile != null && md5content.equals(md5)) {\n        println(\"本地存在相同配置的版本，跳过下载，返回成功\")\n        return true;\n    }\n\n    //本地的不匹配则删除\n    if (pluginfile != null) {\n        pluginfile.delete()\n    }\n\n    if (md5file != null) {\n        md5file.delete()\n    }\n    println(\"本地不存在相同配置的版本\")\n    return false\n}\n\n/**\n * 下载网络文件\n * @param url\n * @param jarname\n * @return\n */\ndef down(String url, String jarname) {\n    println(\"4、开始ipackage下载\")\n    println(\"下载url为：\" + url)\n    def file = new File(project.getProjectDir().getAbsolutePath() + \"/src/main/assets/plugins/\" + jarname)\n    InputStream is\n    FileOutputStream fos\n    try {\n        def connection = new URL(url).openConnection()\n        connection.setRequestMethod('GET')\n        connection.connect()\n        is = connection.getInputStream()\n        fos = new FileOutputStream(file)\n        byte[] b = new byte[1024]\n        int len = 0\n        while ((len = is.read(b)) != -1) {\n            fos.write(b, 0, len)\n        }\n        fos.flush()\n        println(\"文件下载成功\")\n        return true\n    } catch (Exception e) {\n        println(\"文件下载失败\")\n        println(e.printStackTrace())\n        return false\n    } finally {\n        if (fos != null) {\n            fos.close()\n        }\n        if (is != null) {\n            is.close()\n        }\n    }\n}\n\n/**\n * 下载成功后校验文件与返回的md5是否匹配\n * 不匹配则删除文件\n * @param jarname\n * @param md5\n * @return\n */\ndef checkMd5(String jarname, String md5) {\n    println(\"5、开始校验下载的文件的合法性\")\n    //  println(\"ipackage返回的md5 = \" + md5)\n    String pluginPath = 'src/main/assets/plugins/'\n    FileCollection plugins = files { file(pluginPath).listFiles() }\n    plugins.each { File file ->\n        if (file.getName().equals(jarname)) {\n            def digest = MessageDigest.getInstance(\"MD5\").digest(file.bytes).encodeHex().toString()\n            //      println(\"下载后计算的md5 = \" + digest)\n            if (digest.equals(md5)) {\n                File md5File = new File(pluginPath + file.name + '.md5')\n                FileCollection collectionss = files(md5File)\n                collectionss.getFiles().getAt(0).withWriter('UTF-8') { within -> within.append(digest) }\n                println(\"md5校验成功\")\n                return true;\n            } else {\n                file.delete()\n                println(\"md5校验失败，删除已下载文件\")\n                return false;\n            }\n        }\n    }\n}\n\n/**\n * 获取文件的第一行\n * md5文件只有一行\n * @param file\n * @return\n */\ndef getFileContent(File file) {\n    List<String> contents = file.readLines();\n    if (contents != null && contents.size() > 0) {\n        return contents.get(0);\n    }\n    return \"\";\n}\n\n/**\n * 从网络获取 json 数据\n *\n * @param url\n * @return\n */\ndef getJsonDataFromNet(String url) {\n    //使用接口配置\n    def connection = new URL(url).openConnection()\n    connection.setRequestMethod('GET')\n    connection.connect()\n    def resp = connection.content.text\n\n    def jsonSlurper = new JsonSlurper()\n    return jsonSlurper.parseText(resp).data\n}\n\n//关闭测试相关的task\ntasks.whenTaskAdded { task ->\n    if (task.name.contains('AndroidTest')) {\n        task.enabled = false\n    }\n}"
        },
        {
          "name": "redex-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "releaseinfo.gradle",
          "type": "blob",
          "size": 3.8125,
          "content": "import groovy.xml.MarkupBuilder\n\n/**\n * 创建时间：2017年12月13日 <br>\n * 作者：renzhiqiang <br>\n * 描述：版本发布文档自动维护脚本\n * 流程描述：  1、请求本次版本相关信息\n *           2、将版本相关信息解析出来\n *           3、将解析出的数据生成xml格式数据\n *           4、写入到已有的文档数据中\n **/\next {\n  versionName = rootProject.ext.android.versionName\n  versionCode = rootProject.ext.android.versionCode\n  versionInfo = 'App的第2个版本，上线了一些最基础核心的功能.'\n  destFile = file('releases.xml')\n  if (destFile != null && !destFile.exists()) {\n    destFile.createNewFile()\n  }\n}\n\nthis.project.afterEvaluate { project ->\n  def buildTask = project.tasks.findByName(\"build\")\n  doLast {\n    buildTask.doLast {\n      writeTask.execute()\n    }\n  }\n}\n\ntask writeTask {\n  inputs.property('versionCode', this.versionCode)\n  inputs.property('versionName', this.versionName)\n  inputs.property('versionInfo', this.versionInfo)\n  outputs.file this.destFile\n  doLast {\n    //将输入的内容写入到输出文件中去\n    def data = inputs.getProperties()\n    File file = outputs.getFiles().getSingleFile()\n    def versionMsg = new VersionMsg(data)\n    //将实体对象写入到xml文件中\n    def sw = new StringWriter()\n    def xmlBuilder = new MarkupBuilder(sw)\n    if (file.text != null && file.text.size() <= 0) {\n      //没有内容\n      xmlBuilder.releases {\n        release {\n          versionCode(versionMsg.versionCode)\n          versionName(versionMsg.versionName)\n          versionInfo(versionMsg.versionInfo)\n        }\n      }\n      //直接写入\n      file.withWriter { writer -> writer.append(sw.toString())\n      }\n    } else {\n      //已有其它版本内容\n      xmlBuilder.release {\n        versionCode(versionMsg.versionCode)\n        versionName(versionMsg.versionName)\n        versionInfo(versionMsg.versionInfo)\n      }\n      //插入到最后一行前面\n      def lines = file.readLines()\n      def lengths = lines.size() - 1\n      file.withWriter { writer ->\n        lines.eachWithIndex { line, index ->\n          if (index != lengths) {\n            writer.append(line + '\\r\\n')\n          } else if (index == lengths) {\n            writer.append('\\r\\r\\n' + sw.toString() + '\\r\\n')\n            writer.append(lines.get(lengths))\n          }\n        }\n      }\n    }\n  }\n}\n\nclass VersionMsg {\n  String versionCode\n  String versionName\n  String versionInfo\n}\n\ntask readTask {\n  //指定输入文件为上一个task的输出\n  inputs.file this.destFile\n  doLast {\n    //读取输入文件的内容并显示\n    def file = inputs.files.singleFile\n    println file.text\n  }\n}\n\ntask outputwithinputTask {\n  // 先执行写入，再执行读取\n  dependsOn writeTask, readTask\n  doLast {\n    println '输入输出任务结束'\n  }\n}\n\n\n\n\n//task handleReleaseFile {\n//  def srcFile = file('releases.xml')\n//  def destDir = new File(this.buildDir, 'generated/release/')\n//  doLast {\n//    println '开始解析对应的xml文件...'\n//    destDir.mkdir()\n//    def releases = new XmlParser().parse(srcFile)\n//    releases.release.each { releaseNode ->\n//      //解析每个release结点的内容\n//      def name = releaseNode.versionName.text()\n//      def versionCode = releaseNode.versionCode.text()\n//      def versionInfo = releaseNode.versionInfo.text()\n//      //创建文件并写入结点数据\n//      def destFile = new File(destDir, \"release-${name}.txt\")\n//      destFile.withWriter { writer -> writer.write(\"${name} -> ${versionCode} -> ${versionInfo}\")\n//      }\n//    }\n//  }\n//}\n\n// 读取本地的 release.xml 文件内容\n//task handleReleaseFileTest(dependsOn: handleReleaseFile) {\n//  def dir = fileTree(this.buildDir.path + 'generated/release/')\n//  doLast {\n//    dir.each {\n//      println 'the file name is:' + it\n//    }\n//    println '输出完成...'\n//  }\n//}"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 2.1376953125,
          "content": "include ':app'\n\n//if (useSpeechMoudle) {\n//    include \"speech\"\n//    project(\":speech\").projectDir = new File(\"../OtherApp/speech\")\n//}\n\nlong beginOfSetting = System.currentTimeMillis()\ndef beginOfConfig\ndef configHasBegin = false\ndef beginOfProjectConfig = new HashMap()\ndef beginOfProjectExcute\n\ngradle.projectsLoaded {\n    println '初始化阶段，耗时：' + (System.currentTimeMillis() - beginOfSetting) + 'ms'\n}\n\ngradle.beforeProject { project ->\n    if (!configHasBegin) {\n        configHasBegin = true\n        beginOfConfig = System.currentTimeMillis()\n    }\n    beginOfProjectConfig.put(project, System.currentTimeMillis())\n}\n\ngradle.afterProject { project ->\n    def begin = beginOfProjectConfig.get(project)\n    println '配置阶段，' + project + '耗时：' + (System.currentTimeMillis() - begin) + 'ms'\n}\n\ngradle.taskGraph.whenReady {\n    println '配置阶段，总共耗时：' + (System.currentTimeMillis() - beginOfConfig) + 'ms'\n    beginOfProjectExcute = System.currentTimeMillis()\n}\n\ngradle.taskGraph.beforeTask { task ->\n    task.doFirst {\n        task.ext.beginOfTask = System.currentTimeMillis()\n    }\n    task.doLast {\n        println '执行阶段，' + task + '耗时：' + (System.currentTimeMillis() - task.beginOfTask) + 'ms'\n    }\n}\n\ngradle.buildFinished {\n     println '执行阶段，耗时：' + (System.currentTimeMillis() - beginOfProjectExcute) + 'ms'\n}\n\n\ngradle.addBuildListener(new BuildListener() {\n\n    void buildStarted(Gradle var1) {\n        println '开始构建'\n    }\n\n    void settingsEvaluated(Settings var1) {\n        // var1.gradle.rootProject 这里访问 Project 对象时会报错，\n        // 因为还未完成 Project 的初始化。\n        println 'settings 评估完成（settings.gradle 中代码执行完毕）'\n    }\n\n    void projectsLoaded(Gradle var1) {\n        println '项目结构加载完成（初始化阶段结束）'\n        println '初始化结束，可访问根项目：' + var1.gradle.rootProject\n    }\n\n    void projectsEvaluated(Gradle var1) {\n        println '所有项目评估完成（配置阶段结束）'\n    }\n\n    void buildFinished(BuildResult var1) {\n        println '构建结束 '\n    }\n})\n\n\n"
        },
        {
          "name": "wan-android-key.jks",
          "type": "blob",
          "size": 2.2041015625,
          "content": null
        },
        {
          "name": "wan-android-key.jks.old",
          "type": "blob",
          "size": 2.2041015625,
          "content": null
        }
      ]
    }
  ]
}