{
  "metadata": {
    "timestamp": 1736609004205,
    "page": 224,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bepass-org/oblivion",
      "stars": 3951,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.28515625,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea/caches\n/.idea/libraries\n/.idea/modules.xml\n/.idea/workspace.xml\n/.idea/navEditor.xml\n/.idea/assetWizardSettings.xml\n.DS_Store\n/build\n/captures\n.externalNativeBuild\n.cxx\nlocal.properties\n.idea\n/app/libs/*.aar\n/app/libs/*.jar\n/app/libs/.idea\n/app/release\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.744140625,
          "content": "# Oblivion - Unofficial Warp Client for Android\n\n\"Internet, for all or none!\"\n\nOblivion provides secure, optimized internet access through a user-friendly Android app using cloudflare warp technology\n\nIt's leveraging `bepass-sdk` and a custom Go implementation of WireGuard, it's designed for fast and private online experiences.\n\n![oblivion3.jpg](media/oblivion3.jpg)\n\n## Features\n\n- **Secure VPN**: Custom WireGuard implementation in Go.\n- **Optimized Speeds**: Enhanced with `bepass-sdk` for minimal latency.\n- **User-Friendly**: Simple, intuitive interface.\n\n## Quick Start\n\n1. **Download**: Grab the APK from our [Releases](https://github.com/bepass-org/oblivion/releases) page or [Google play store](https://play.google.com/store/apps/details?id=org.bepass.oblivion) and install it.\n   <a href=\"https://play.google.com/store/apps/details?id=org.bepass.oblivion\">\n   <img alt=\"Get it on Google Play\" src=\"https://play.google.com/intl/en_us/badges/images/generic/en_badge_web_generic.png\" width=\"165\" height=\"64\" />\n   </a>\n\n2. **Connect**: Launch Oblivion and hit the switch button.\n\n## Building the Project\n\n### Prerequisites\n- NDK r26b (26.1.10909125)\n- Go 1.22\n\n### Follow the steps below to build the Oblivion:\n- In Android Studio, navigate to \"Build\" in the menu bar.\n- Select \"Generate Signed Bundle/APK...\"\n- Choose \"APK\" and proceed.\n\n## Get Involved\n\nWe're a community-driven project, aiming to make the internet accessible for all. Whether you want to contribute code, suggest features, or need some help, we'd love to hear from you! Check out our [GitHub Issues](https://github.com/bepass-org/oblivion/issues) or submit a pull request.\n\n## Acknowledgements and Credits\n\nThis project makes use of several open-source tools and libraries, and we are grateful to the developers and communities behind these projects. In particular, we would like to acknowledge:\n\n### Cloudflare Warp\n\n- **Project**: Cloudflare Warp\n- **Website**: [Cloudflare Warp](https://www.cloudflare.com/products/warp/)\n- **License**: [License information](https://www.cloudflare.com/application/terms/)\n- **Description**: Cloudflare Warp is a technology that enhances the security and performance of Internet applications. We use it in our project for its efficient and secure network traffic routing capabilities.\n\n### WireGuard-go\n\n- **Project**: WireGuard-go\n- **GitHub Repository**: [WireGuard-go on GitHub](https://github.com/WireGuard/wireguard-go)\n- **License**: [GNU General Public License v2.0](https://github.com/WireGuard/wireguard-go/blob/master/COPYING)\n- **Description**: WireGuard-go is an implementation of the WireGuard secure network tunnel. It's used in our project to provide fast, modern, and secure VPN tunneling.\n\nPlease note that the use of these tools is governed by their respective licenses, and you should consult those licenses for terms and conditions of use.\n\n## License\n\nThis project is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License - see the [CC BY-NC-SA 4.0 License](https://creativecommons.org/licenses/by-nc-sa/4.0/) for details.\n\n### Summary of License\n\nThe CC BY-NC-SA 4.0 License is a free, copyleft license suitable for non-commercial use. Here's what it means for using this project:\n\n- **Attribution (BY)**: You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.\n\n- **NonCommercial (NC)**: You may not use the material for commercial purposes.\n\n- **ShareAlike (SA)**: If you remix, transform, or build upon the material, you must distribute your contributions under the same license as the original.\n\nThis summary is only a brief overview. For the full legal text, please visit the provided link.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.234375,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\nplugins {\n    id 'com.android.application' version '8.4.0' apply false\n    id 'org.jetbrains.kotlin.android' version '1.8.10' apply false\n}\n"
        },
        {
          "name": "devshell.nix",
          "type": "blob",
          "size": 0.7001953125,
          "content": "{ pkgs }:\n\nwith pkgs;\n\n# Configure your development environment.\n#\n# Documentation: https://github.com/numtide/devshell\ndevshell.mkShell {\n  name = \"oblivion\";\n  motd = ''\n    Entered the Android app development environment.\n  '';\n  env = [\n    {\n      name = \"ANDROID_HOME\";\n      value = \"${android-sdk}/share/android-sdk\";\n    }\n    {\n      name = \"ANDROID_SDK_ROOT\";\n      value = \"${android-sdk}/share/android-sdk\";\n    }\n    {\n      name = \"JAVA_HOME\";\n      value = jdk11.home;\n    }\n    {\n      name = \"GOBIN\";\n      eval = \"$HOME/go/bin\";\n    }\n    {\n      name = \"PATH\";\n      eval = \"$HOME/go/bin:$PATH\";\n    }\n  ];\n  packages = [\n    android-studio\n    android-sdk\n    gradle\n    jdk11\n    go_1_22\n  ];\n}\n"
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 6.5703125,
          "content": "{\n  \"nodes\": {\n    \"android\": {\n      \"inputs\": {\n        \"devshell\": \"devshell\",\n        \"flake-utils\": \"flake-utils_2\",\n        \"nixpkgs\": \"nixpkgs\"\n      },\n      \"locked\": {\n        \"lastModified\": 1708373848,\n        \"narHash\": \"sha256-iUPd8izf1b30GmwuECHTMLBAhkPX0K1jcslclxTvHZQ=\",\n        \"owner\": \"tadfisher\",\n        \"repo\": \"android-nixpkgs\",\n        \"rev\": \"e7ea6fb9241b3eb255897a013cba4be0bf1975cd\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"tadfisher\",\n        \"repo\": \"android-nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"devshell\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nixpkgs\": [\n          \"android\",\n          \"nixpkgs\"\n        ]\n      },\n      \"locked\": {\n        \"lastModified\": 1705332421,\n        \"narHash\": \"sha256-USpGLPme1IuqG78JNqSaRabilwkCyHmVWY0M9vYyqEA=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"devshell\",\n        \"rev\": \"83cb93d6d063ad290beee669f4badf9914cc16ec\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"devshell\",\n        \"type\": \"github\"\n      }\n    },\n    \"devshell_2\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils_3\",\n        \"nixpkgs\": \"nixpkgs_2\"\n      },\n      \"locked\": {\n        \"lastModified\": 1705332421,\n        \"narHash\": \"sha256-USpGLPme1IuqG78JNqSaRabilwkCyHmVWY0M9vYyqEA=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"devshell\",\n        \"rev\": \"83cb93d6d063ad290beee669f4badf9914cc16ec\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"devshell\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-utils\": {\n      \"inputs\": {\n        \"systems\": \"systems\"\n      },\n      \"locked\": {\n        \"lastModified\": 1701680307,\n        \"narHash\": \"sha256-kAuep2h5ajznlPMD9rnQyffWG8EM/C73lejGofXvdM8=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"4022d587cbbfd70fe950c1e2083a02621806a725\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-utils_2\": {\n      \"inputs\": {\n        \"systems\": \"systems_2\"\n      },\n      \"locked\": {\n        \"lastModified\": 1705309234,\n        \"narHash\": \"sha256-uNRRNRKmJyCRC/8y1RqBkqWBLM034y4qN7EprSdmgyA=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"1ef2e671c3b0c19053962c07dbda38332dcebf26\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-utils_3\": {\n      \"inputs\": {\n        \"systems\": \"systems_3\"\n      },\n      \"locked\": {\n        \"lastModified\": 1701680307,\n        \"narHash\": \"sha256-kAuep2h5ajznlPMD9rnQyffWG8EM/C73lejGofXvdM8=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"4022d587cbbfd70fe950c1e2083a02621806a725\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"flake-utils_4\": {\n      \"inputs\": {\n        \"systems\": \"systems_4\"\n      },\n      \"locked\": {\n        \"lastModified\": 1705309234,\n        \"narHash\": \"sha256-uNRRNRKmJyCRC/8y1RqBkqWBLM034y4qN7EprSdmgyA=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"1ef2e671c3b0c19053962c07dbda38332dcebf26\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1708296515,\n        \"narHash\": \"sha256-FyF489fYNAUy7b6dkYV6rGPyzp+4tThhr80KNAaF/yY=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"b98a4e1746acceb92c509bc496ef3d0e5ad8d4aa\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixos-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs_2\": {\n      \"locked\": {\n        \"lastModified\": 1704161960,\n        \"narHash\": \"sha256-QGua89Pmq+FBAro8NriTuoO/wNaUtugt29/qqA8zeeM=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"63143ac2c9186be6d9da6035fa22620018c85932\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"ref\": \"nixpkgs-unstable\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs_3\": {\n      \"locked\": {\n        \"lastModified\": 1708296515,\n        \"narHash\": \"sha256-FyF489fYNAUy7b6dkYV6rGPyzp+4tThhr80KNAaF/yY=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"b98a4e1746acceb92c509bc496ef3d0e5ad8d4aa\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"id\": \"nixpkgs\",\n        \"ref\": \"nixos-unstable\",\n        \"type\": \"indirect\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"android\": \"android\",\n        \"devshell\": \"devshell_2\",\n        \"flake-utils\": \"flake-utils_4\",\n        \"nixpkgs\": \"nixpkgs_3\"\n      }\n    },\n    \"systems\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    },\n    \"systems_2\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    },\n    \"systems_3\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    },\n    \"systems_4\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 2.4765625,
          "content": "{\n  description = \"oblivion\";\n\n  inputs = {\n    nixpkgs.url = \"nixpkgs/nixos-unstable\";\n    devshell.url = \"github:numtide/devshell\";\n    flake-utils.url = \"github:numtide/flake-utils\";\n    android.url = \"github:tadfisher/android-nixpkgs\";\n  };\n\n  outputs = { self, nixpkgs, devshell, flake-utils, android }:\n    {\n      overlay = final: prev: {\n        inherit (self.packages.${final.system}) android-sdk android-studio;\n      };\n    }\n    //\n    flake-utils.lib.eachSystem [ \"aarch64-darwin\" \"x86_64-darwin\" \"x86_64-linux\" ] (system:\n      let\n        inherit (nixpkgs) lib;\n        pkgs = import nixpkgs {\n          inherit system;\n          config.allowUnfree = true;\n          overlays = [\n            devshell.overlays.default\n            self.overlay\n          ];\n        };\n      in\n      {\n        packages = {\n          android-sdk = android.sdk.${system} (sdkPkgs: with sdkPkgs; [\n            # Useful packages for building and testing.\n            build-tools-34-0-0\n            cmdline-tools-latest\n            emulator\n            platform-tools\n            platforms-android-34\n\n            # Other useful packages for a development environment.\n            ndk-26-1-10909125\n            # skiaparser-3\n            # sources-android-34\n          ]\n          ++ lib.optionals (system == \"aarch64-darwin\") [\n            # system-images-android-34-google-apis-arm64-v8a\n            # system-images-android-34-google-apis-playstore-arm64-v8a\n          ]\n          ++ lib.optionals (system == \"x86_64-darwin\" || system == \"x86_64-linux\") [\n            system-images-android-31-google-apis-x86-64\n            system-images-android-31-google-apis-playstore-x86-64\n            system-images-android-32-google-apis-x86-64\n            system-images-android-32-google-apis-playstore-x86-64\n            system-images-android-33-google-apis-x86-64\n            system-images-android-33-google-apis-playstore-x86-64\n            system-images-android-34-google-apis-x86-64\n            system-images-android-34-google-apis-playstore-x86-64\n          ]);\n        } // lib.optionalAttrs (system == \"x86_64-linux\") {\n          # Android Studio in nixpkgs is currently packaged for x86_64-linux only.\n          android-studio = pkgs.androidStudioPackages.stable;\n          # android-studio = pkgs.androidStudioPackages.beta;\n          # android-studio = pkgs.androidStudioPackages.preview;\n          # android-studio = pkgs.androidStudioPackage.canary;\n        };\n\n        devShell = import ./devshell.nix { inherit pkgs; };\n      }\n    );\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.3544921875,
          "content": "# Project-wide Gradle settings.\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n# AndroidX package structure to make it clearer which packages are bundled with the\n# Android operating system, and which are packaged with your app's APK\n# https://developer.android.com/topic/libraries/support-library/androidx-rn\nandroid.useAndroidX=true\n# Kotlin code style for this project: \"official\" or \"obsolete\":\nkotlin.code.style=official\n# Enables namespacing of each library's R class so that its R class includes only the\n# resources declared in the library itself and none from the library's dependencies,\n# thereby reducing the size of the R class for that library\nandroid.nonTransitiveRClass=true\nandroid.enableJetifier=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.630859375,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.611328125,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "media",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.3603515625,
          "content": "pluginManagement {\n    repositories {\n        google()\n        mavenCentral()\n        gradlePluginPortal()\n    }\n}\ndependencyResolutionManagement {\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\n    repositories {\n        google()\n        mavenCentral()\n        maven { url 'https://jitpack.io' }\n    }\n}\n\nrootProject.name = \"Oblivion\"\ninclude ':app'\n"
        },
        {
          "name": "tun2socks",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}