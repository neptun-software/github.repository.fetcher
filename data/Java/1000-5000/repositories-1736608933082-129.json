{
  "metadata": {
    "timestamp": 1736608933082,
    "page": 129,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "objectbox/objectbox-java",
      "stars": 4440,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.435546875,
          "content": ".DS_Store\n\n# IntelliJ Idea\n.idea/\n*.iml\n\n# Gradle & Java build\n.gradle\nbuild/\nbin/\ngen/\ntarget/\nout/\nclasses/\ngradle.properties\n\n# Local build properties\nbuild.properties\nlocal.properties\n\n# Native libs\nobjectbox*.dll\nlibobjectbox*.so\nlibobjectbox*.dylib\n\n### Test DB files\ndata.mdb\nlock.mdb\ntest-db/\njni-unit-test-db/\ntest-db64/\nperf-test-db/\nperf-test-db64/\n\n## Backups\n.gitignore~\n*.txt~\ndefault.json.bak\n\n# Java crash reports\nhs_err_pid*.log\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 6.49609375,
          "content": "# Default image for linux builds\n# Using core instead of base to get access to ASAN from clang.\nimage: objectboxio/buildenv-core:2023-07-28\n\n# Assumes these environment variables are configured in GitLab CI/CD Settings:\n# - OBX_READ_PACKAGES_TOKEN\n# - SONATYPE_USER\n# - SONATYPE_PWD\n# - GOOGLE_CHAT_WEBHOOK_JAVA_CI\n# Additionally, these environment variables used by the objectbox-publish Gradle script:\n# - ORG_GRADLE_PROJECT_signingKeyFile\n# - ORG_GRADLE_PROJECT_signingKeyId\n# - ORG_GRADLE_PROJECT_signingPassword\n\nvariables:\n  # Disable the Gradle daemon. Gradle may run in a Docker container with a shared\n  # Docker volume containing GRADLE_USER_HOME. If the container is stopped after a job\n  # Gradle daemons may get killed, preventing proper clean-up of lock files in GRADLE_USER_HOME.\n  # Configure file.encoding to always use UTF-8 when running Gradle.\n  # Use low priority processes to avoid Gradle builds consuming all build machine resources.\n  GRADLE_OPTS: \"-Dorg.gradle.daemon=false -Dfile.encoding=UTF-8 -Dorg.gradle.priority=low\"\n  GITLAB_REPO_ARGS: \"-PgitlabUrl=$CI_SERVER_URL -PgitlabPrivateTokenName=Deploy-Token -PgitlabPrivateToken=$OBX_READ_PACKAGES_TOKEN\"\n  GITLAB_PUBLISH_ARGS: \"-PgitlabPublishTokenName=Job-Token -PgitlabPublishToken=$CI_JOB_TOKEN\"\n  CENTRAL_PUBLISH_ARGS: \"-PsonatypeUsername=$SONATYPE_USER -PsonatypePassword=$SONATYPE_PWD\"\n  # CI_COMMIT_REF_SLUG is the branch or tag name, but web-safe (only 0-9, a-z)\n  VERSION_ARGS: \"-PversionPostFix=$CI_COMMIT_REF_SLUG\"\n\n# Using multiple test stages to avoid running some things in parallel (see job notes).\nstages:\n  - test\n  - upload-to-internal\n  - upload-to-central\n  - package-api-docs\n  - triggers\n\ntest:\n  stage: test\n  tags: [ docker, linux, x64 ]\n  variables:\n    # Image defaults to POSIX (ASCII), set a compatible locale so UTF-8 tests that interact with the file system work.\n    # Check with 'locale -a' for available locales.\n    LC_ALL: \"C.UTF-8\"\n  before_script:\n    # Print Gradle and JVM version info\n    - ./gradlew -version\n    # Remove any previous JVM (Hotspot) crash log.\n    # \"|| true\" for an OK exit code if no file is found\n    - rm **/hs_err_pid*.log || true\n  script:\n    - ./scripts/test-with-asan.sh $GITLAB_REPO_ARGS $VERSION_ARGS clean build\n  artifacts:\n    when: always\n    paths:\n      - \"**/hs_err_pid*.log\" # Only on JVM (Hotspot) crash.\n      - \"**/build/reports/spotbugs/*.html\"\n    reports:\n      junit: \"**/build/test-results/**/TEST-*.xml\"\n\n.test-template:\n  before_script:\n    # Print Gradle and JVM version info\n    - ./gradlew -version\n    # Remove any previous JVM (Hotspot) crash log.\n    # \"|| true\" for an OK exit code if no file is found\n    - rm **/hs_err_pid*.log || true\n  artifacts:\n    when: always\n    paths:\n      - \"**/hs_err_pid*.log\" # Only on JVM (Hotspot) crash.\n    reports:\n      junit: \"**/build/test-results/**/TEST-*.xml\"\n\ntest-windows:\n  extends: .test-template\n  needs: [\"test\"]\n  tags: [ windows ]\n  script: ./gradlew $GITLAB_REPO_ARGS $VERSION_ARGS clean build\n\ntest-macos:\n  extends: .test-template\n  needs: [\"test\"]\n  tags: [mac11+, x64]\n  script: ./gradlew $GITLAB_REPO_ARGS $VERSION_ARGS clean build\n\n# Address sanitizer is only available on Linux runners (see script).\n.test-asan-template:\n  extends: .test-template\n  tags: [ docker, linux, x64 ]\n  variables:\n    # Image defaults to POSIX (ASCII), set a compatible locale so UTF-8 tests that interact with the file system work.\n    # Check with 'locale -a' for available locales.\n    LC_ALL: \"C.UTF-8\"\n  script:\n    # Note: do not run check task as it includes SpotBugs.\n    - ./scripts/test-with-asan.sh $GITLAB_REPO_ARGS $VERSION_ARGS clean :tests:objectbox-java-test:test\n\n# Test oldest supported and a recent JDK.\n# Note: can not run these in parallel using a matrix configuration as Gradle would step over itself.\ntest-jdk-8:\n  extends: .test-asan-template\n  needs: [\"test\"]\n  variables:\n    TEST_JDK: 8\n\n# JDK 11 is the next oldest LTS release.\ntest-jdk-11:\n  extends: .test-asan-template\n  needs: [\"test-jdk-8\"]\n  variables:\n    TEST_JDK: 11\n\ntest-jdk-x86:\n  extends: .test-template\n  needs: [\"test-windows\"]\n  tags: [ windows ]\n  variables:\n    # TEST_WITH_JAVA_X86 makes objectbox-java-test use 32-bit java executable and therefore\n    # 32-bit ObjectBox to run tests (see build.gradle file).\n    # Note: assumes JAVA_HOME_X86 is set to 32-bit JDK path.\n    TEST_WITH_JAVA_X86: \"true\"\n  script: ./gradlew $GITLAB_REPO_ARGS $VERSION_ARGS clean build\n\nupload-to-internal:\n  stage: upload-to-internal\n  tags: [ docker, x64 ]\n  except:\n    - main # Do not upload duplicate release artifacts\n    - pipelines # Do not upload artifacts if triggered by upstream project to save on disk space\n    - schedules # Do not upload artifacts from scheduled jobs to save on disk space\n    - tags # Only upload artifacts from branches\n  script:\n    - ./gradlew $GITLAB_REPO_ARGS $GITLAB_PUBLISH_ARGS $VERSION_ARGS publishMavenJavaPublicationToGitLabRepository\n\nupload-to-central:\n  stage: upload-to-central\n  tags: [ docker, x64 ]\n  only:\n    - publish\n  before_script:\n    - ci/send-to-gchat.sh \"$GOOGLE_CHAT_WEBHOOK_JAVA_CI\" --thread $CI_COMMIT_SHA \"*Releasing Java library:* job $CI_JOB_NAME from branch $CI_COMMIT_BRANCH ($CI_COMMIT_SHORT_SHA)...\"\n  script:\n    # Note: supply internal repo as tests use native dependencies that might not be published, yet.\n    - ./gradlew $GITLAB_REPO_ARGS $VERSION_ARGS $CENTRAL_PUBLISH_ARGS publishMavenJavaPublicationToSonatypeRepository closeAndReleaseSonatypeStagingRepository\n  after_script:\n    # Also runs on failure, so show CI_JOB_STATUS.\n    - ci/send-to-gchat.sh \"$GOOGLE_CHAT_WEBHOOK_JAVA_CI\" --thread $CI_COMMIT_SHA \"*Releasing Java library:* *$CI_JOB_STATUS* for $CI_JOB_NAME\"\n    - ci/send-to-gchat.sh \"$GOOGLE_CHAT_WEBHOOK_JAVA_CI\" --thread $CI_COMMIT_SHA \"Check https://repo1.maven.org/maven2/io/objectbox/ in a few minutes.\"\n\npackage-api-docs:\n  stage: package-api-docs\n  tags: [ docker, x64 ]\n  only:\n    - publish\n  script:\n    - ./gradlew $GITLAB_REPO_ARGS $VERSION_ARGS :objectbox-java:packageJavadocForWeb\n  after_script:\n    - ci/send-to-gchat.sh \"$GOOGLE_CHAT_WEBHOOK_JAVA_CI\" --thread $CI_COMMIT_SHA \"API docs for web available as job artifact $CI_JOB_URL\"\n  artifacts:\n    paths:\n      - \"objectbox-java/build/dist/objectbox-java-web-api-docs.zip\"\n\ntrigger-plugin:\n  stage: triggers\n  except:\n    - schedules # Do not trigger when run on schedule, e.g. integ tests have own schedule.\n    - publish\n  inherit:\n    variables: false\n  allow_failure: true # Branch might not exist, yet, in plugin project.\n  trigger:\n    project: objectbox/objectbox-plugin\n    branch: $CI_COMMIT_BRANCH\n"
        },
        {
          "name": ".gitlab",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.01953125,
          "content": "# Changelog\n\nNotable changes to the ObjectBox Java library.\n\nFor more insights into what changed in the ObjectBox C++ core, [check the ObjectBox C changelog](https://github.com/objectbox/objectbox-c/blob/main/CHANGELOG.md).\n\n## 4.0.3 - 2024-10-15\n\n* Make closing the Store more robust. In addition to transactions, it also waits for ongoing queries. This is just an\n  additional safety net. Your apps should still make sure to finish all Store operations, like queries, before closing it.\n* [Flex properties](https://docs.objectbox.io/advanced/custom-types#flex-properties) support `null` map and list values.\n* Some minor vector search performance improvements.\n\n### Sync\n\n* **Fix a serious regression, please update as soon as possible.**\n* Add new options, notably for cluster configuration, when building `SyncServer`. Improve documentation.\n  Deprecate the old peer options in favor of the new cluster options.\n* Add `SyncHybrid`, a combination of a Sync client and a Sync server. It can be used in local cluster setups, in\n  which a \"hybrid\" functions as a client & cluster peer (server).\n\n## 4.0.2 - 2024-08-20\n\n* Add convenience `oneOf` and `notOneOf` conditions that accept `Date` to avoid manual conversion using `getTime()`.\n* When `BoxStore` is closing, briefly wait on active transactions to finish.\n* Guard against crashes when `BoxStore` was closed, but database operations do still occur concurrently (transactions are still active).\n\n## 4.0.1 - 2024-06-03\n\n* Examples: added [Vector Search example](https://github.com/objectbox/objectbox-examples/tree/main/java-main-vector-search) that demonstrates how to perform on-device [approximate nearest neighbor (ANN) search](https://docs.objectbox.io/on-device-vector-search).\n* Revert deprecation of `Box.query()`, it is still useful for queries without any condition.\n* Add note on old query API methods of `QueryBuilder` that they are not recommended for new projects. Use [the new query APIs](https://docs.objectbox.io/queries) instead.\n* Update and expand documentation on `ToOne` and `ToMany`.\n\n## 4.0.0 - Vector Search - 2024-05-16\n\n**ObjectBox now supports** [**Vector Search**](https://docs.objectbox.io/ann-vector-search) to enable efficient similarity searches.\n\nThis is particularly useful for AI/ML/RAG applications, e.g. image, audio, or text similarity. Other use cases include semantic search or recommendation engines.\n\nCreate a Vector (HNSW) index for a floating point vector property. For example, a `City` with a location vector:\n\n```java\n@Entity\npublic class City {\n\n    @HnswIndex(dimensions = 2)\n    float[] location;\n    \n}\n```\n\nPerform a nearest neighbor search using the new `nearestNeighbors(queryVector, maxResultCount)` query condition and the new \"find with scores\" query methods (the score is the distance to the query vector). For example, find the 2 closest cities:\n\n```java\nfinal float[] madrid = {40.416775F, -3.703790F};\nfinal Query<City> query = box\n        .query(City_.location.nearestNeighbors(madrid, 2))\n        .build();\nfinal City closest = query.findWithScores().get(0).get();\n```\n\nFor an introduction to Vector Search, more details and other supported languages see the [Vector Search documentation](https://docs.objectbox.io/ann-vector-search).\n\n* BoxStore: deprecated `BoxStore.sizeOnDisk()`. Instead use one of the new APIs to determine the size of a database:\n  * `BoxStore.getDbSize()` which for a file-based database returns the file size and for an in-memory database returns the approximately used memory,\n  * `BoxStore.getDbSizeOnDisk()` which only returns a non-zero size for a file-based database.\n* Query: add properly named `setParameter(prop, value)` methods that only accept a single parameter value, deprecated the old `setParameters(prop, value)` variants.\n* Sync: add `SyncCredentials.userAndPassword(user, password)`.\n* Gradle plugin: the license of the [Gradle plugin](https://github.com/objectbox/objectbox-java-generator) has changed to the GNU Affero General Public License (AGPL).\n\n## Previous versions\n\nSee the [Changelogs in the documentation](https://docs.objectbox.io/changelogs).\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 7.7138671875,
          "content": "// dev branch only: run every hour at 30th minute at night (1:00 - 5:00)\n// Avoid running at the same time as integration tests: uses this projects snapshots\n// so make sure to not run in the middle of uploading a new snapshot to avoid dependency resolution errors.\nString cronSchedule = BRANCH_NAME == 'dev' ? '30 1-5 * * *' : ''\nString buildsToKeep = '500'\n\nString gradleArgs = '--stacktrace'\nboolean isPublish = BRANCH_NAME == 'publish'\nString versionPostfix = isPublish ? '' : BRANCH_NAME // Build script detects empty string as not set.\n\n// Note: using single quotes to avoid Groovy String interpolation leaking secrets.\ndef signingArgs = '-PsigningKeyFile=$SIGNING_FILE -PsigningKeyId=$SIGNING_ID -PsigningPassword=$SIGNING_PWD'\ndef gitlabRepoArgs = '-PgitlabUrl=$GITLAB_URL -PgitlabPrivateToken=$GITLAB_TOKEN'\ndef uploadRepoArgsCentral = '-PsonatypeUsername=$OSSRH_LOGIN_USR -PsonatypePassword=$OSSRH_LOGIN_PSW'\n\nboolean startedByTimer = currentBuild.getBuildCauses('hudson.triggers.TimerTrigger$TimerTriggerCause').size() > 0\ndef buildCauses = currentBuild.getBuildCauses()\necho \"startedByTimer=$startedByTimer, build causes: $buildCauses\"\n\n// https://jenkins.io/doc/book/pipeline/syntax/\npipeline {\n    agent { label 'java' }\n    \n    environment {\n        GITLAB_URL = credentials('gitlab_url')\n        GITLAB_TOKEN = credentials('GITLAB_TOKEN_ALL')\n        GITLAB_INTEG_TESTS_TRIGGER_URL = credentials('gitlab-trigger-java-integ-tests')\n        // Note: for key use Jenkins secret file with PGP key as text in ASCII-armored format.\n        SIGNING_FILE = credentials('objectbox_signing_key')\n        SIGNING_ID = credentials('objectbox_signing_key_id')\n        SIGNING_PWD = credentials('objectbox_signing_key_password')\n    }\n\n    options {\n        buildDiscarder(logRotator(numToKeepStr: buildsToKeep, artifactNumToKeepStr: buildsToKeep))\n        timeout(time: 1, unit: 'HOURS') // If build hangs (regular build should be much quicker)\n        disableConcurrentBuilds() // limit to 1 job per branch\n        gitLabConnection('objectbox-gitlab-connection')\n    }\n\n    triggers {\n        upstream(upstreamProjects: \"ObjectBox-Linux/${env.BRANCH_NAME.replaceAll(\"/\", \"%2F\")}\",\n                threshold: hudson.model.Result.SUCCESS)\n        cron(cronSchedule)\n    }\n\n    stages {\n        stage('init') {\n            steps {\n                sh './gradlew -version'\n\n                // \"|| true\" for an OK exit code if no file is found\n                sh 'rm tests/objectbox-java-test/hs_err_pid*.log || true'\n            }\n        }\n\n        stage('build-java') {\n            steps {\n                sh \"./scripts/test-with-asan.sh $gradleArgs $signingArgs $gitlabRepoArgs clean build\"\n            }\n            post {\n                always {\n                    junit '**/build/test-results/**/TEST-*.xml'\n                    archiveArtifacts artifacts: 'tests/*/hs_err_pid*.log', allowEmptyArchive: true  // Only on JVM crash.\n                    recordIssues(tool: spotBugs(pattern: '**/build/reports/spotbugs/*.xml', useRankAsPriority: true))\n                }\n            }\n        }\n\n        // Test oldest supported and a recent JDK.\n        // Note: can not run these in parallel using a matrix configuration as Gradle would step over itself.\n        // Also shouldn't add agent config to avoid that as it triggers a separate job which can easily cause deadlocks.\n        stage(\"test-jdk-8\") {\n            environment {\n                TEST_JDK = \"8\"\n            }\n            steps {\n                // \"|| true\" for an OK exit code if no file is found\n                sh 'rm tests/objectbox-java-test/hs_err_pid*.log || true'\n                // Note: do not run check task as it includes SpotBugs.\n                sh \"./scripts/test-with-asan.sh $gradleArgs $gitlabRepoArgs clean :tests:objectbox-java-test:test\"\n            }\n            post {\n                always {\n                    junit '**/build/test-results/**/TEST-*.xml'\n                    archiveArtifacts artifacts: 'tests/*/hs_err_pid*.log', allowEmptyArchive: true  // Only on JVM crash.\n                }\n            }\n        }\n        stage(\"test-jdk-16\") {\n            environment {\n                TEST_JDK = \"16\"\n            }\n            steps {\n                // \"|| true\" for an OK exit code if no file is found\n                sh 'rm tests/objectbox-java-test/hs_err_pid*.log || true'\n                // Note: do not run check task as it includes SpotBugs.\n                sh \"./scripts/test-with-asan.sh $gradleArgs $gitlabRepoArgs clean :tests:objectbox-java-test:test\"\n            }\n            post {\n                always {\n                    junit '**/build/test-results/**/TEST-*.xml'\n                    archiveArtifacts artifacts: 'tests/*/hs_err_pid*.log', allowEmptyArchive: true  // Only on JVM crash.\n                }\n            }\n        }\n\n        stage('upload-to-internal') {\n            steps {\n                sh \"./gradlew $gradleArgs $signingArgs $gitlabRepoArgs -PversionPostFix=$versionPostfix publishMavenJavaPublicationToGitLabRepository\"\n            }\n        }\n\n        stage('upload-to-central') {\n            when { expression { return isPublish } }\n            environment {\n                OSSRH_LOGIN = credentials('ossrh-login')\n            }\n            steps {\n                googlechatnotification url: 'id:gchat_java',\n                    message: \"*Publishing* ${currentBuild.fullDisplayName} to Central...\\n${env.BUILD_URL}\"\n\n                // Note: supply internal repo as tests use native dependencies that might not be published, yet.\n                sh \"./gradlew $gradleArgs $signingArgs $gitlabRepoArgs $uploadRepoArgsCentral publishMavenJavaPublicationToSonatypeRepository closeAndReleaseStagingRepository\"\n\n                googlechatnotification url: 'id:gchat_java',\n                    message: \"Published ${currentBuild.fullDisplayName} successfully to Central - check https://repo1.maven.org/maven2/io/objectbox/ in a few minutes.\\n${env.BUILD_URL}\"\n            }\n        }\n\n    }\n\n    // For global vars see /jenkins/pipeline-syntax/globals\n    post {\n        always {\n            googlechatnotification url: 'id:gchat_java', message: \"${currentBuild.currentResult}: ${currentBuild.fullDisplayName}\\n${env.BUILD_URL}\",\n                                   notifyFailure: 'true', notifyUnstable: 'true', notifyBackToNormal: 'true'\n        }\n\n        failure {\n            updateGitlabCommitStatus name: 'build', state: 'failed'\n\n            emailext (\n                subject: \"${currentBuild.currentResult}: ${currentBuild.fullDisplayName}\",\n                mimeType: 'text/html',\n                recipientProviders: [[$class: 'DevelopersRecipientProvider']],\n                body: \"\"\"\n                    <p>${currentBuild.currentResult}:\n                        <a href='${env.BUILD_URL}'>${currentBuild.fullDisplayName}</a>\n                        (<a href='${env.BUILD_URL}/console'>console</a>)\n                    </p>\n                    <p>Git: ${GIT_COMMIT} (${GIT_BRANCH})\n                    <p>Build time: ${currentBuild.durationString}\n                \"\"\"\n            )\n        }\n\n        success {\n            updateGitlabCommitStatus name: 'build', state: 'success'\n            script {\n                if (startedByTimer) {\n                    echo \"Started by timer, not triggering integration tests\"\n                } else {\n                  // Trigger integration tests in GitLab\n                  // URL configured like <host>/api/v4/projects/<id>/trigger/pipeline?token=<token>\n                  // Note: do not fail on error in case ref does not exist, only output response\n                  // --silent --show-error disable progress output but still show errors\n                  sh 'curl --silent --show-error -X POST \"$GITLAB_INTEG_TESTS_TRIGGER_URL&ref=$GIT_BRANCH\"'\n                }\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.73828125,
          "content": "<p align=\"center\"><img width=\"466\" src=\"https://raw.githubusercontent.com/objectbox/objectbox-java/master/logo.png\" alt=\"ObjectBox\"></p>\n\n<p align=\"center\">\n  <a href=\"https://docs.objectbox.io/getting-started\">Getting Started</a> •\n  <a href=\"https://docs.objectbox.io\">Documentation</a> •\n  <a href=\"https://github.com/objectbox/objectbox-examples\">Example Apps</a> •\n  <a href=\"https://github.com/objectbox/objectbox-java/issues\">Issues</a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/objectbox/objectbox-java/releases/latest\">\n    <img src=\"https://img.shields.io/github/v/release/objectbox/objectbox-java?color=7DDC7D&style=flat-square\" alt=\"Latest Release\">\n  </a>\n  <a href=\"https://github.com/objectbox/objectbox-java/stargazers\">\n    <img src=\"https://img.shields.io/github/stars/objectbox/objectbox-java?color=17A6A6&logo=github&style=flat-square\" alt=\"Star objectbox-java\">\n  </a>\n  <a href=\"https://github.com/objectbox/objectbox-java/blob/main/LICENSE.txt\">\n    <img src=\"https://img.shields.io/github/license/objectbox/objectbox-java?color=7DDC7D&logo=apache&style=flat-square\" alt=\"Apache 2.0 license\">\n  </a>\n  <a href=\"https://twitter.com/ObjectBox_io\">\n    <img src=\"https://img.shields.io/twitter/follow/objectbox_io?color=%20%2300aced&logo=twitter&style=flat-square\" alt=\"Follow @ObjectBox_io\">\n  </a>\n</p>\n\n# ObjectBox - Fast and Efficient Java Database (Android, JVM) with Vector Search\n\nObjectBox Java is a lightweight yet powerful on-device database & vector database designed specifically for **Java and Kotlin** applications.\nStore and manage data effortlessly in your Android or JVM Linux, macOS or Windows app with ObjectBox.\nEasily manage vector data alongside your objects and perform superfast on-device vector search to empower your apps with RAG AI, generative AI, and similarity search.\nEnjoy exceptional speed, battery-friendly resource usage, and environmentally-friendly development. 💚\n\n## Demo code\n\n```java\n// Java\nPlaylist playlist = new Playlist(\"My Favorites\");\nplaylist.songs.add(new Song(\"Lalala\"));\nplaylist.songs.add(new Song(\"Lololo\"));\nbox.put(playlist);\n```\n\n➡️ [More details in the docs](https://docs.objectbox.io/)\n\n```kotlin\n// Kotlin\nval playlist = Playlist(\"My Favorites\")\nplaylist.songs.add(Song(\"Lalala\"))\nplaylist.songs.add(Song(\"Lololo\"))\nbox.put(playlist)\n```\n\n## Table of Contents\n\n- [Key Features](#key-features)\n- [Getting started](#getting-started)\n  - [Gradle setup](#gradle-setup)\n  - [First steps](#first-steps)\n- [Why use ObjectBox?](#why-use-objectbox-for-java-data-management)\n- [Community and Support](#community-and-support)\n- [Changelog](#changelog)\n- [Other languages/bindings](#other-languagesbindings)\n- [License](#license)\n\n## Key Features\n\n🧠 **First on-device vector database:** easily manage vector data and perform fast vector search\n🏁 **High performance:** exceptional speed, outperforming alternatives like SQLite and Realm in all CRUD operations.\\\n💚 **Efficient Resource Usage:** minimal CPU, power and memory consumption for maximum flexibility and sustainability.\\\n🔗 **[Built-in Object Relations](https://docs.objectbox.io/relations):** built-in support for object relations, allowing you to easily establish and manage relationships between objects.\\\n👌 **Ease of use:** concise API that eliminates the need for complex SQL queries, saving you time and effort during development.\n\n## Getting started\n\n### Gradle setup\n\nFor Android projects, add the ObjectBox Gradle plugin to your root `build.gradle`:\n\n```groovy\nbuildscript {\n    ext.objectboxVersion = \"4.0.3\"\n    repositories {        \n        mavenCentral()    \n    }\n    dependencies {\n        classpath(\"io.objectbox:objectbox-gradle-plugin:$objectboxVersion\")\n    }\n}\n```\n\nAnd in your app's `build.gradle` apply the plugin:\n\n```groovy\n// Using plugins syntax:\nplugins {\n    id(\"io.objectbox\") // Add after other plugins.\n}\n\n// Or using the old apply syntax:\napply plugin: \"io.objectbox\" // Add after other plugins.\n```\n\n### First steps\n\nCreate a data object class `@Entity`, for example \"Playlist\".\n\n```kotlin\n// Kotlin\n@Entity data class Playlist( ... )\n\n// Java\n@Entity public class Playlist { ... }\n```\n\nNow build the project to let ObjectBox generate the class `MyObjectBox` for you.\n\nPrepare the BoxStore object once for your app, e.g. in `onCreate` in your Application class:\n\n```java\nboxStore = MyObjectBox.builder().androidContext(this).build();\n```\n\nThen get a `Box` class for the Playlist entity class:\n\n```java\nBox<Playlist> box = boxStore.boxFor(Playlist.class);\n```\n\nThe `Box` object gives you access to all major functions, like `put`, `get`, `remove`, and `query`.\n\nFor details please check the [docs](https://docs.objectbox.io).\n\n## Why use ObjectBox for Java data management?\n\nObjectBox is a NoSQL Java database designed for local data storage on resource-restricted devices, prioritizing\noffline-first functionality. It is a smart and sustainable choice for local data persistence in Java and Kotlin\napplications. It offers efficiency, ease of use, and flexibility.\n\n### Fast but resourceful\n\nOptimized for speed and minimal resource consumption, ObjectBox is an ideal solution for mobile devices. It has\nexcellent performance, while also minimizing CPU, RAM, and power usage. ObjectBox outperforms SQLite and Realm across\nall CRUD (Create, Read, Update, Delete) operations. Check out our [Performance Benchmarking App repository](https://github.com/objectbox/objectbox-performance).\n\n### Simple but powerful\n\nWith its concise language-native API, ObjectBox simplifies development by requiring less code compared to SQLite. It\noperates on plain objects (POJOs) with built-in relations, eliminating the need to manage rows and columns. This\napproach is efficient for handling large data volumes and allows for easy model modifications.\n\n### Functionality\n\n💐 **[Queries](https://docs.objectbox.io/queries):** filter data as needed, even across relations\\\n💻 **[Multiplatform](https://docs.objectbox.io/faq#on-which-platforms-does-objectbox-run):** supports Android and JVM on Linux (also on ARM), Windows and macOS\\\n🌱 **Scalable:** handling millions of objects resource-efficiently with ease\\\n🦮 **Statically typed:** compile time checks & optimizations\\\n📃 **Automatic schema migrations:** no update scripts needed\n\n**And much more than just data persistence**\\\n🔄 **[ObjectBox Sync](https://objectbox.io/sync/):** keeps data in sync between devices and servers\\\n🕒 **[ObjectBox TS](https://objectbox.io/time-series-database/):** time series extension for time based data\n\n## Community and Support\n\n❤ **Tell us what you think!** Share your thoughts through our [Anonymous Feedback Form](https://forms.gle/bdktGBUmL4m48ruj7).\n\nAt ObjectBox, we are dedicated to bringing joy and delight to app developers by providing intuitive and fun-to-code-with\nAPIs. We genuinely want to hear from you: What do you love about ObjectBox? What could be improved? Where do you face\nchallenges in everyday app development?\n\n**We eagerly await your comments and requests, so please feel free to reach out to us:**\n\n- Add [GitHub issues](https://github.com/ObjectBox/objectbox-java/issues)\n- Upvote important issues 👍\n- Drop us a line via [@ObjectBox_io](https://twitter.com/ObjectBox_io/) or contact[at]objectbox.io\n- ⭐ us on GitHub if you like what you see!\n\nThank you! Stay updated with our [blog](https://objectbox.io/blog).\n\n## Changelog\n\nFor notable and important changes in new releases, read the [changelog](CHANGELOG.md).\n\n## Other languages/bindings\n\nObjectBox supports multiple platforms and languages.\nBesides JVM based languages like Java and Kotlin, ObjectBox also offers:\n\n- [Swift Database](https://github.com/objectbox/objectbox-swift): build fast mobile apps for iOS (and macOS)\n- [Dart/Flutter Database](https://github.com/objectbox/objectbox-dart): cross-platform for mobile and desktop apps\n- [Go Database](https://github.com/objectbox/objectbox-go): great for data-driven tools and embedded server applications\n- [C and C++ Database](https://github.com/objectbox/objectbox-c): native speed with zero copy access to FlatBuffer objects\n\n## License\n\n```text\nCopyright 2017-2024 ObjectBox Ltd. All rights reserved.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\nNote that this license applies to the code in this repository only.\nSee our website on details about all [licenses for ObjectBox components](https://objectbox.io/faq/#license-pricing).\n"
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 4.861328125,
          "content": "// This script supports some Gradle project properties:\n// https://docs.gradle.org/current/userguide/build_environment.html#sec:project_properties\n// - versionPostFix: appended to snapshot version number, e.g. \"1.2.3-<versionPostFix>-SNAPSHOT\".\n//   Use to create different versions based on branch/tag.\n// - sonatypeUsername: Maven Central credential used by Nexus publishing.\n// - sonatypePassword: Maven Central credential used by Nexus publishing.\n\nplugins {\n    // https://github.com/spotbugs/spotbugs-gradle-plugin/releases\n    id(\"com.github.spotbugs\") version \"5.0.14\" apply false\n    // https://github.com/gradle-nexus/publish-plugin/releases\n    id(\"io.github.gradle-nexus.publish-plugin\") version \"1.3.0\"\n}\n\nbuildscript {\n    // To publish a release, typically, only edit those two:\n    val objectboxVersionNumber = \"4.0.3\" // without \"-SNAPSHOT\", e.g. \"2.5.0\" or \"2.4.0-RC\"\n    val objectboxVersionRelease =\n        true // set to true for releasing to ignore versionPostFix to avoid e.g. \"-dev\" versions\n\n    // version post fix: \"-<value>\" or \"\" if not defined; e.g. used by CI to pass in branch name\n    val versionPostFixValue = project.findProperty(\"versionPostFix\")\n    val versionPostFix = if (versionPostFixValue != null) \"-$versionPostFixValue\" else \"\"\n    val obxJavaVersion by extra(objectboxVersionNumber + (if (objectboxVersionRelease) \"\" else \"$versionPostFix-SNAPSHOT\"))\n\n    // Native library version for tests\n    // Be careful to diverge here; easy to forget and hard to find JNI problems\n    val nativeVersion = objectboxVersionNumber + (if (objectboxVersionRelease) \"\" else \"-dev-SNAPSHOT\")\n    val osName = System.getProperty(\"os.name\").lowercase()\n    val objectboxPlatform = when {\n        osName.contains(\"linux\") -> \"linux\"\n        osName.contains(\"windows\") -> \"windows\"\n        osName.contains(\"mac\") -> \"macos\"\n        else -> \"unsupported\"\n    }\n    val obxJniLibVersion by extra(\"io.objectbox:objectbox-$objectboxPlatform:$nativeVersion\")\n\n    val essentialsVersion by extra(\"3.1.0\")\n    val junitVersion by extra(\"4.13.2\")\n    val mockitoVersion by extra(\"3.8.0\")\n    // The versions of Kotlin, Kotlin Coroutines and Dokka must work together.\n    // Check https://github.com/Kotlin/kotlinx.coroutines#readme\n    // and https://github.com/Kotlin/dokka/releases\n    // Note: when updating might also have to increase the minimum compiler version supported\n    // by consuming projects, see objectbox-kotlin/ build script.\n    val kotlinVersion by extra(\"1.8.20\")\n    val coroutinesVersion by extra(\"1.7.3\")\n    val dokkaVersion by extra(\"1.8.20\")\n\n    println(\"version=$obxJavaVersion\")\n    println(\"objectboxNativeDependency=$obxJniLibVersion\")\n\n    // To avoid duplicate release artifacts on the internal repository,\n    // prevent uploading from branches other than publish, and main (for which uploading is turned off).\n    val isCI = System.getenv(\"CI\") == \"true\"\n    val branchOrTag = System.getenv(\"CI_COMMIT_REF_NAME\")\n    if (isCI && objectboxVersionRelease && !(\"publish\" == branchOrTag || \"main\" == branchOrTag)) {\n        throw GradleException(\"objectboxVersionRelease = true is only allowed on branch publish or main\")\n    }\n\n    repositories {\n        mavenCentral()\n        maven {\n            url = uri(\"https://plugins.gradle.org/m2/\")\n        }\n    }\n\n    dependencies {\n        classpath(\"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion\")\n        classpath(\"org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion\")\n    }\n}\n\nallprojects {\n    group = \"io.objectbox\"\n    val obxJavaVersion: String by rootProject.extra\n    version = obxJavaVersion\n\n    repositories {\n        mavenCentral()\n    }\n\n    configurations.all {\n        // Projects are using snapshot dependencies that may update more often than 24 hours.\n        resolutionStrategy {\n            cacheChangingModulesFor(0, \"seconds\")\n        }\n    }\n}\n\ntasks.wrapper {\n    distributionType = Wrapper.DistributionType.ALL\n}\n\n// Plugin to publish to Central https://github.com/gradle-nexus/publish-plugin/\n// This plugin ensures a separate, named staging repo is created for each build when publishing.\napply(plugin = \"io.github.gradle-nexus.publish-plugin\")\nconfigure<io.github.gradlenexus.publishplugin.NexusPublishExtension> {\n    this.repositories {\n        sonatype {\n            if (project.hasProperty(\"sonatypeUsername\") && project.hasProperty(\"sonatypePassword\")) {\n                username.set(project.property(\"sonatypeUsername\").toString())\n                password.set(project.property(\"sonatypePassword\").toString())\n                println(\"Publishing: configured Maven Central repository\")\n            } else {\n                println(\"Publishing: Maven Central repository not configured\")\n            }\n        }\n    }\n    transitionCheckOptions {  // Maven Central may become very, very slow in extreme situations\n        maxRetries.set(900)  // with default delay of 10s, that's 150 minutes total; default is 60 (10 minutes)\n    }\n}\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.3271484375,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\nAPP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command;\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n#     shell script including quotes and variable substitutions, so put them in\n#     double quotes to make sure that they get re-expanded; and\n#   * put everything else in single quotes, so that it's not re-expanded.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.7109375,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "logo.png",
          "type": "blob",
          "size": 60.9287109375,
          "content": null
        },
        {
          "name": "objectbox-java-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "objectbox-java",
          "type": "tree",
          "content": null
        },
        {
          "name": "objectbox-kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "objectbox-rxjava",
          "type": "tree",
          "content": null
        },
        {
          "name": "objectbox-rxjava3",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 0.4365234375,
          "content": "plugins {\n    // Supports resolving toolchains for JVM projects\n    // https://docs.gradle.org/8.0/userguide/toolchains.html#sub:download_repositories\n    id(\"org.gradle.toolchains.foojay-resolver-convention\") version(\"0.4.0\")\n}\n\ninclude(\":objectbox-java-api\")\ninclude(\":objectbox-java\")\ninclude(\":objectbox-kotlin\")\ninclude(\":objectbox-rxjava\")\ninclude(\":objectbox-rxjava3\")\n\ninclude(\":tests:objectbox-java-test\")\ninclude(\":tests:test-proguard\")\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}