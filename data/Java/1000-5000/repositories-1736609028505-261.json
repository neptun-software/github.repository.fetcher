{
  "metadata": {
    "timestamp": 1736609028505,
    "page": 261,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "tronprotocol/java-tron",
      "stars": 3781,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.0947265625,
          "content": "version: \"2\"\r\nplugins:\r\n  sonar-java:\r\n    enabled: true\r\n    config:\r\n      sonar.java.source: 8"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0263671875,
          "content": "./*\n!docker-entrypoint.sh\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.6181640625,
          "content": "# IDEA\n.idea\n*iml\n.DS_Store\n\n# gradle\n.gradle\nbuild\n\n# log\nlogs\nconsensus-logs\n\n# lombok\nout\n\n# levelDB\ntron-data\ndatabase*\n\n# database\ndatabase\n\n# doc\ndoc\n\n# gossip\npernodedata.*\nringstate.*\nshareddata.*\n\n# protobuf generated classes\nsrc/main/gen\nsrc/main/java/org/tron/core/bftconsensus\nsrc/test/java/org/tron/consensus2\nsrc/main/java/META-INF/\nsrc/main/resources/META-INF/\n/bin/\n\n# Eclipse IDE specific files and folders\n/.project\n/.classpath\n/.settings/\n/.apt_generated/\n\n# output directory\n/output-directory/\n\n/output_manager/\n/output_witness/\noutput*\nnodeId.properties\nWallet\n\n# vm_trace\n/vm_trace/\n\n/framework/propPath\n.cache\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 12.75390625,
          "content": "# Contributing to java-tron\n\njava-tron is an open-source project which needs the support of open-source contributors.\n\nBelow are the instructions. We understand that there is much left to be desired, and if you see any room for improvement, please let us know. Thank you.\n\nHere are some guidelines to get started quickly and easily:\n- [Reporting An Issue](#Reporting-An-Issue)\n- [Working on java-tron](#Working-on-java-tron)\n  - [Key Branches](#Key-Branches)\n  - [Submitting Code](#Submitting-Code)\n- [Code Review Guidelines](#Code-Review-Guidelines)\n  - [Terminology](#Terminology)\n  - [The Process](#The-Process)\n  - [Code Style](#Code-Style)\n  - [Commit Messages](#Commit-Messages)\n  - [Branch Naming Conventions](#Branch-Naming-Conventions)\n  - [Pull Request Guidelines](#Pull-Request-Guidelines)\n  - [Special Situations And How To Deal With Them](#Special-Situations-And-How-To-Deal-With-Them)\n- [Conduct](#Conduct)\n\n\n### Reporting An Issue\n\nIf you're about to raise an issue because you think you've found a problem or bug with java-tron, please respect the following restrictions:\n\n- Please search for existing issues. Help us keep duplicate issues to a minimum by checking to see if someone has already reported your problem or requested your idea.\n\n- Use the Issue Report Template below.\n    ```\n    1.What did you do? \n\n    2.What did you expect to see? \n\n    3.What did you see instead?\n    ```\n\n\n## Working on java-tron\nThank you for considering to help out with the source code! We welcome contributions from anyone on the internet, and are grateful for even the smallest of fixes!\n\nIf you’d like to contribute to java-tron, for small fixes, we recommend that you send a pull request (PR) for the maintainers to review and merge into the main code base, make sure the PR contains a detailed description. For more complex changes, you need to submit an issue to the TIP repository to detail your motive and implementation plan, etc. For how to submit a TIP issue, please refer to [TIP Specification](https://github.com/tronprotocol/tips#to-submit-a-tip).\n\n\nAs the author of TIP issue, you are expected to encourage developers to discuss this issue, flesh out your issue by collecting their feedback, and eventually put your issue into practice.\n\n\n### Key Branches\njava-tron only has `master`, `develop`, `release-*`, `feature-*`, and `hotfix-*` branches, which are described below:\n\n- ``develop`` branch  \n  The `develop` branch only accept merge request from other forked branches or`release_*` branches. It is not allowed to directly push changes to the `develop` branch. A `release_*` branch has to be pulled from the develop branch when a new build is to be released.\n\n- ``master`` branch  \n  `release_*` branches and `hotfix/*` branches should only be merged into the `master` branch when a new build is released.\n\n- ``release`` branch  \n  `release_*` is a branch pulled from the `develop` branch for release. It should be merged into `master` after a regression test and will be permanently kept in the repository. If a bug is identified in a `release_*` branch, its fixes should be directly merged into the branch. After passing the regression test, the `release_*` branch should be merged back into the `develop` branch. Essentially, a `release_*` branch serves as a snapshot for each release.\n\n- ``feature`` branch  \n  `feature/*` is an important feature branch pulled from the `develop` branch. After the `feature/*` branch is code-complete, it should be merged back to the `develop` branch. The `feature/*` branch is maintainable.\n\n- ``hotfix`` branch  \n  It is pulled from the `master` branch and should be merged back into the master branch and the `develop` branch. Only pull requests of the fork repository (pull requests for bug fixes) should be merged into the `hotfix/` branch. `hotfix/` branches are used only for fixing bugs found after release.\n\n\n### Submitting Code\n\nIf you want to contribute codes to java-tron, please follow the following steps:\n\n* Fork code repository\n  Fork a new repository from tronprotocol/java-tron to your personal code repository\n\n* Edit the code in the fork repository\n    ```\n    git clone https://github.com/yourname/java-tron.git\n\n    git remote add upstream https://github.com/tronprotocol/java-tron.git     (\"upstream\" refers to upstream projects repositories, namely tronprotocol's repositories, and can be named as you like it. We usually call it \"upstream\" for convenience) \n    ```\n  Before developing new features, please synchronize your fork repository with the upstream repository.\n    ```\n    git fetch upstream \n    git checkout develop \n    git merge upstream/develop --no-ff (Add --no-ff to turn off the default fast merge mode)\n    ```\n\n  Pull a new branch from the develop branch of your repository for local development. Please refer to [Branch Naming Conventions](#Branch-Naming-Conventions),\n    ```\n    git checkout -b feature/branch_name develop\n    ```\n\n  Write and commit the new code when it is completed. Please refer to [Commit Messages](#Commit-Messages)\n     ```\n     git add .\n     git commit -m 'commit message'\n     ```\n  Commit the new branch to your personal remote repository\n     ```\n     git push origin feature/branch_name\n     ```\n\n* Push code\n\n  Submit a pull request (PR) from your repository to `tronprotocol/java-tron`.\n  Please be sure to click on the link in the red box shown below. Select the base branch for tronprotocol and the compare branch for your personal fork repository.\n  ![image](https://raw.githubusercontent.com/tronprotocol/documentation-en/master/images/javatron_pr.png)\n\n\n\n## Code Review Guidelines\nThe only way to get code into java-tron is to send a pull request. Those pull requests need to be reviewed by someone. The following guide explains our expectations around PRs for both authors and reviewers.\n\n### Terminology\n- The author of a pull request is the entity who wrote the diff and submitted it to GitHub.\n- The team consists of people with commit rights on the java-tron repository.\n- The reviewer is the person assigned to review the diff. The reviewer must be a team member.\n- The code owner is the person responsible for the subsystem being modified by the PR.\n\n### The Process\nThe first decision to make for any PR is whether it’s worth including at all. This decision lies primarily with the code owner, but may be negotiated with team members.\n\nTo make the decision we must understand what the PR is about. If there isn’t enough description content or the diff is too large, request an explanation. Anyone can do this part.\n\nWe expect that reviewers check the style and functionality of the PR, providing comments to the author using the GitHub review system. Reviewers should follow up with the PR until it is in good shape, then approve the PR. Approved PRs can be merged by any code owner.\n\nWhen communicating with authors, be polite and respectful.\n\n### Code Style\nWe would like all developers to follow a standard development flow and coding style. Therefore, we suggest the following:\n1. Review the code with coding style checkers.\n2. Review the code before submission.\n3. Run standardized tests.\n\n`Sonar`-scanner and `Travis CI` continuous integration scanner will be automatically triggered when a pull request has been submitted. When a PR passes all the checks, the **java-tron** maintainers will then review the PR and offer feedback and modifications when necessary.  Once adopted, the PR will be closed and merged into the `develop` branch.\n\nWe are glad to receive your pull requests and will try our best to review them as soon as we can. Any pull request is welcome, even if it is for a typo.\n\nPlease kindly address the issue you find. We would appreciate your contribution.\n\nPlease do not be discouraged if your pull request is not accepted, as it may be an oversight. Please explain your code as detailed as possible to make it easier to understand.\n\nPlease make sure your submission meets the following code style:\n\n- The code must conform to [Google Code Style](https://google.github.io/styleguide/javaguide.html).\n- The code must have passed the Sonar scanner test.\n- The code has to be pulled from the `develop` branch.\n- The commit message should start with a verb, whose initial should not be capitalized.\n- The commit message should be less than 50 characters in length.\n\n\n\n### Commit Messages\n\nCommit messages should follow the rule below, we provide a template with corresponding instructions.\n\nTemplate:\n```\n<commit type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n```\n\nThe message header is a single line that contains succinct description of the change containing a `commit type`, an optional `scope` and a subject.\n\n`commit type` describes the kind of change that this commit is providing:\n* feat     (new feature)\n* fix      (bug fix)\n* docs     (changes to documentation)\n* style    (formatting, missing semi colons, etc. no code change)\n* refactor (refactoring production code)\n* test     (adding or refactoring tests. no production code change)\n* chore    (updating grunt tasks etc. no production code change)\n\nThe `scope` can be anything specifying place of the commit change. For example:`protobuf`,`api`,`test`,`docs`,`build`,`db`,`net`.You can use * if there isn't a more fitting scope.\n\nThe subject contains a succinct description of the change:\n1. Limit the subject line, which briefly describes the purpose of the commit, to 50 characters.\n2. Start with a verb and use first-person present-tense (e.g., use \"change\" instead of \"changed\" or \"changes\").\n3. Do not capitalize the first letter.\n4. Do not end the subject line with a period.\n5. Avoid meaningless commits. It is recommended to use the git rebase command.\n\nMessage body uses the imperative, present tense: \"change\" not \"changed\" nor \"changes\". The body should include the motivation for the change and contrast this with previous behavior.\n\nHere is an example:\n```\nfeat(block): optimize the block-producing logic\n\n1. increase the priority that block producing thread acquires synchronization lock\n2. add the interruption exception handling in block-producing thread\n\nCloses #1234\n```\nIf the purpose of this submission is to modify one issue, you need to refer to the issue in the footer, starting with the keyword Closes, such as `Closes #1234`,if multiple bugs have been modified, separate them with commas,such as `Closes #123, #245, #992`.\n\n\n\n### Branch Naming Conventions\n1. Always name the `master` branch and `develop` branch as \"master\" and \"develop\".\n2. Name the `release_*` branch using version numbers, which are assigned by the project lead (e.g., Odyssey-v3.1.3, 3.1.3, etc.).\n3. Use `hotfix/` as the prefix of the `hotfix` branch, briefly describe the bug in the name, and connect words with underline (e.g., hotfix/typo, hotfix/null_point_exception, etc.).\n4. Use `feature/` as the prefix of the `feature` branch, briefly describe the feature in the name, and connect words with underline (e.g., feature/new_resource_model, etc.).\n### Pull Request Guidelines\n\n1. Create one PR for one issue.\n2. Avoid massive PRs.\n3. Write an overview of the purpose of the PR in its title.\n4. Write a description of the PR for future reviewers.\n5. Elaborate on the feedback you need (if any).\n6. Do not capitalize the first letter.\n7. Do not put a period (.) in the end.\n\n\n\n\n\n### Special Situations And How To Deal With Them\nAs a reviewer, you may find yourself in one of the situations below. Here’s how to deal with those:\n\nThe author doesn’t follow up: ping them after a while (i.e. after a few days). If there is no further response, close the PR or complete the work yourself.\n\nAuthor insists on including refactoring changes alongside bug fix: We can tolerate small refactorings alongside any change. If you feel lost in the diff, ask the author to submit the refactoring as an independent PR, or at least as an independent commit in the same PR.\n\nAuthor keeps rejecting your feedback: reviewers have authority to reject any change for technical reasons. If you’re unsure, ask the team for a second opinion. You may close the PR if no consensus can be reached.\n\n## Conduct\nWhile contributing, please be respectful and constructive, so that participation in our project is a positive experience for everyone.\n\nExamples of behavior that contributes to creating a positive environment include:\n\n- Using welcoming and inclusive language\n  Being respectful of differing viewpoints and experiences\n- Gracefully accepting constructive criticism\n- Focusing on what is best for the community\n- Showing empathy towards other community members\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery and unwelcome sexual attention or advances\n- Trolling, insulting/derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others’ private information, such as a physical or electronic address, without explicit permission\n- Other conduct which could reasonably be considered inappropriate in a professional setting\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 7.626953125,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\r\n                       Version 3, 29 June 2007\r\n\r\n Copyright (C) [2007] [TRON Foundation], Inc. <https://fsf.org/>\r\n Everyone is permitted to copy and distribute verbatim copies\r\n of this license document, but changing it is not allowed.\r\n\r\n\r\n  This version of the GNU Lesser General Public License incorporates\r\nthe terms and conditions of version 3 of the GNU General Public\r\nLicense, supplemented by the additional permissions listed below.\r\n\r\n  0. Additional Definitions.\r\n\r\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\r\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\r\nGeneral Public License.\r\n\r\n  \"The Library\" refers to a covered work governed by this License,\r\nother than an Application or a Combined Work as defined below.\r\n\r\n  An \"Application\" is any work that makes use of an interface provided\r\nby the Library, but which is not otherwise based on the Library.\r\nDefining a subclass of a class defined by the Library is deemed a mode\r\nof using an interface provided by the Library.\r\n\r\n  A \"Combined Work\" is a work produced by combining or linking an\r\nApplication with the Library.  The particular version of the Library\r\nwith which the Combined Work was made is also called the \"Linked\r\nVersion\".\r\n\r\n  The \"Minimal Corresponding Source\" for a Combined Work means the\r\nCorresponding Source for the Combined Work, excluding any source code\r\nfor portions of the Combined Work that, considered in isolation, are\r\nbased on the Application, and not on the Linked Version.\r\n\r\n  The \"Corresponding Application Code\" for a Combined Work means the\r\nobject code and/or source code for the Application, including any data\r\nand utility programs needed for reproducing the Combined Work from the\r\nApplication, but excluding the System Libraries of the Combined Work.\r\n\r\n  1. Exception to Section 3 of the GNU GPL.\r\n\r\n  You may convey a covered work under sections 3 and 4 of this License\r\nwithout being bound by section 3 of the GNU GPL.\r\n\r\n  2. Conveying Modified Versions.\r\n\r\n  If you modify a copy of the Library, and, in your modifications, a\r\nfacility refers to a function or data to be supplied by an Application\r\nthat uses the facility (other than as an argument passed when the\r\nfacility is invoked), then you may convey a copy of the modified\r\nversion:\r\n\r\n   a) under this License, provided that you make a good faith effort to\r\n   ensure that, in the event an Application does not supply the\r\n   function or data, the facility still operates, and performs\r\n   whatever part of its purpose remains meaningful, or\r\n\r\n   b) under the GNU GPL, with none of the additional permissions of\r\n   this License applicable to that copy.\r\n\r\n  3. Object Code Incorporating Material from Library Header Files.\r\n\r\n  The object code form of an Application may incorporate material from\r\na header file that is part of the Library.  You may convey such object\r\ncode under terms of your choice, provided that, if the incorporated\r\nmaterial is not limited to numerical parameters, data structure\r\nlayouts and accessors, or small macros, inline functions and templates\r\n(ten or fewer lines in length), you do both of the following:\r\n\r\n   a) Give prominent notice with each copy of the object code that the\r\n   Library is used in it and that the Library and its use are\r\n   covered by this License.\r\n\r\n   b) Accompany the object code with a copy of the GNU GPL and this license\r\n   document.\r\n\r\n  4. Combined Works.\r\n\r\n  You may convey a Combined Work under terms of your choice that,\r\ntaken together, effectively do not restrict modification of the\r\nportions of the Library contained in the Combined Work and reverse\r\nengineering for debugging such modifications, if you also do each of\r\nthe following:\r\n\r\n   a) Give prominent notice with each copy of the Combined Work that\r\n   the Library is used in it and that the Library and its use are\r\n   covered by this License.\r\n\r\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\r\n   document.\r\n\r\n   c) For a Combined Work that displays copyright notices during\r\n   execution, include the copyright notice for the Library among\r\n   these notices, as well as a reference directing the user to the\r\n   copies of the GNU GPL and this license document.\r\n\r\n   d) Do one of the following:\r\n\r\n       0) Convey the Minimal Corresponding Source under the terms of this\r\n       License, and the Corresponding Application Code in a form\r\n       suitable for, and under terms that permit, the user to\r\n       recombine or relink the Application with a modified version of\r\n       the Linked Version to produce a modified Combined Work, in the\r\n       manner specified by section 6 of the GNU GPL for conveying\r\n       Corresponding Source.\r\n\r\n       1) Use a suitable shared library mechanism for linking with the\r\n       Library.  A suitable mechanism is one that (a) uses at run time\r\n       a copy of the Library already present on the user's computer\r\n       system, and (b) will operate properly with a modified version\r\n       of the Library that is interface-compatible with the Linked\r\n       Version.\r\n\r\n   e) Provide Installation Information, but only if you would otherwise\r\n   be required to provide such information under section 6 of the\r\n   GNU GPL, and only to the extent that such information is\r\n   necessary to install and execute a modified version of the\r\n   Combined Work produced by recombining or relinking the\r\n   Application with a modified version of the Linked Version. (If\r\n   you use option 4d0, the Installation Information must accompany\r\n   the Minimal Corresponding Source and Corresponding Application\r\n   Code. If you use option 4d1, you must provide the Installation\r\n   Information in the manner specified by section 6 of the GNU GPL\r\n   for conveying Corresponding Source.)\r\n\r\n  5. Combined Libraries.\r\n\r\n  You may place library facilities that are a work based on the\r\nLibrary side by side in a single library together with other library\r\nfacilities that are not Applications and are not covered by this\r\nLicense, and convey such a combined library under terms of your\r\nchoice, if you do both of the following:\r\n\r\n   a) Accompany the combined library with a copy of the same work based\r\n   on the Library, uncombined with any other library facilities,\r\n   conveyed under the terms of this License.\r\n\r\n   b) Give prominent notice with the combined library that part of it\r\n   is a work based on the Library, and explaining where to find the\r\n   accompanying uncombined form of the same work.\r\n\r\n  6. Revised Versions of the GNU Lesser General Public License.\r\n\r\n  The Free Software Foundation may publish revised and/or new versions\r\nof the GNU Lesser General Public License from time to time. Such new\r\nversions will be similar in spirit to the present version, but may\r\ndiffer in detail to address new problems or concerns.\r\n\r\n  Each version is given a distinguishing version number. If the\r\nLibrary as you received it specifies that a certain numbered version\r\nof the GNU Lesser General Public License \"or any later version\"\r\napplies to it, you have the option of following the terms and\r\nconditions either of that published version or of any later version\r\npublished by the Free Software Foundation. If the Library as you\r\nreceived it does not specify a version number of the GNU Lesser\r\nGeneral Public License, you may choose any version of the GNU Lesser\r\nGeneral Public License ever published by the Free Software Foundation.\r\n\r\n  If the Library as you received it specifies that a proxy can decide\r\nwhether future versions of the GNU Lesser General Public License shall\r\napply, that proxy's public statement of acceptance of any version is\r\npermanent authorization for you to choose that version for the\r\nLibrary."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.3681640625,
          "content": "<h1 align=\"center\">\r\n  <br>\r\n  <img width=20% src=\"https://github.com/tronprotocol/wiki/blob/master/images/java-tron.jpg?raw=true\">\r\n  <br>\r\n  java-tron\r\n  <br>\r\n</h1>\r\n\r\n<h4 align=\"center\">\r\n  Java implementation of the <a href=\"https://tron.network\">Tron Protocol</a>\r\n</h4>\r\n\r\n<p align=\"center\">\r\n  <a href=\"https://gitter.im/tronprotocol/allcoredev\">\r\n    <img src=\"https://camo.githubusercontent.com/da2edb525cde1455a622c58c0effc3a90b9a181c/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\">\r\n  </a>\r\n\r\n  <a href=\"https://travis-ci.org/tronprotocol/java-tron\">\r\n    <img src=\"https://travis-ci.org/tronprotocol/java-tron.svg?branch=develop\">\r\n  </a>\r\n\r\n  <a href=\"https://codecov.io/gh/tronprotocol/java-tron\">\r\n    <img src=\"https://codecov.io/gh/tronprotocol/java-tron/branch/develop/graph/badge.svg\" />\r\n  </a>\r\n\r\n  <a href=\"https://github.com/tronprotocol/java-tron/issues\">\r\n    <img src=\"https://img.shields.io/github/issues/tronprotocol/java-tron.svg\">\r\n  </a>\r\n\r\n  <a href=\"https://github.com/tronprotocol/java-tron/pulls\">\r\n    <img src=\"https://img.shields.io/github/issues-pr/tronprotocol/java-tron.svg\">\r\n  </a>\r\n\r\n  <a href=\"https://github.com/tronprotocol/java-tron/graphs/contributors\">\r\n    <img src=\"https://img.shields.io/github/contributors/tronprotocol/java-tron.svg\">\r\n  </a>\r\n\r\n  <a href=\"LICENSE\">\r\n    <img src=\"https://img.shields.io/github/license/tronprotocol/java-tron.svg\">\r\n  </a>\r\n</p>\r\n\r\n## Table of Contents\r\n\r\n- [What’s TRON?](#whats-tron)\r\n- [Building the Source Code](#building-the-source-code)\r\n- [Running java-tron](#running-java-tron)\r\n- [Community](#community)\r\n- [Contribution](#contribution)\r\n- [Resources](#resources)\r\n- [Integrity Check](#integrity-check)\r\n- [License](#license)\r\n\r\n# What's TRON?\r\n\r\nTRON is a project dedicated to building the infrastructure for a truly decentralized Internet.\r\n\r\n- Tron Protocol, one of the largest blockchain-based operating systems in the world, offers scalable, high-availability and high-throughput support that underlies all the decentralized applications in the TRON ecosystem.\r\n\r\n- Tron Virtual Machine (TVM) allows anyone to develop decentralized applications (DAPPs) for themselves or their communities with smart contracts thereby making decentralized crowdfunding and token issuance easier than ever.\r\n\r\nTRON enables large-scale development and engagement. With over 2000 transactions per second (TPS), high concurrency, low latency, and massive data transmission. It is ideal for building decentralized entertainment applications. Free features and incentive systems allow developers to create premium app experiences for users.\r\n\r\n# Building the Source Code\r\n\r\nBuilding java-tron requires `git` package and 64-bit version of `Oracle JDK 1.8` to be installed, other JDK versions are not supported yet. Make sure you operate on `Linux` and `MacOS` operating systems.\r\n\r\nClone the repo and switch to the `master` branch\r\n\r\n```bash\r\n$ git clone https://github.com/tronprotocol/java-tron.git\r\n$ cd java-tron\r\n$ git checkout -t origin/master\r\n```\r\n\r\nthen run the following command to build java-tron, the `FullNode.jar` file can be found in `java-tron/build/libs/` after build successfully.\r\n\r\n```bash\r\n$ ./gradlew clean build -x test\r\n```\r\n\r\n# Running java-tron\r\n\r\nRunning java-tron requires 64-bit version of `Oracle JDK 1.8` to be installed, other JDK versions are not supported yet. Make sure you operate on `Linux` and `MacOS` operating systems.\r\n\r\nGet the mainnet configuration file: [main_net_config.conf](https://github.com/tronprotocol/tron-deployment/blob/master/main_net_config.conf), other network configuration files can be found [here](https://github.com/tronprotocol/tron-deployment).\r\n\r\n## Hardware Requirements\r\n\r\nMinimum:\r\n\r\n- CPU with 8 cores\r\n- 16GB RAM\r\n- 3TB free storage space to sync the Mainnet\r\n\r\nRecommended:\r\n\r\n- CPU with 16+ cores(32+ cores for a super representative)\r\n- 32GB+ RAM(64GB+ for a super representative)\r\n- High Performance SSD with at least 4TB free space\r\n- 100+ MB/s download Internet service\r\n\r\n## Running a full node for mainnet\r\n\r\nFull node has full historical data, it is the entry point into the TRON network, it can be used by other processes as a gateway into the TRON network via HTTP and GRPC endpoints. You can interact with the TRON network through full node：transfer assets, deploy contracts, interact with contracts and so on. `-c` parameter specifies a configuration file to run a full node:\r\n\r\n```bash\r\n$ nohup java -Xms9G -Xmx9G -XX:ReservedCodeCacheSize=256m \\\r\n             -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=512m \\\r\n             -XX:MaxDirectMemorySize=1G -XX:+PrintGCDetails \\\r\n             -XX:+PrintGCDateStamps  -Xloggc:gc.log \\\r\n             -XX:+UseConcMarkSweepGC -XX:NewRatio=2 \\\r\n             -XX:+CMSScavengeBeforeRemark -XX:+ParallelRefProcEnabled \\\r\n             -XX:+HeapDumpOnOutOfMemoryError \\\r\n             -XX:+UseCMSInitiatingOccupancyOnly  -XX:CMSInitiatingOccupancyFraction=70 \\\r\n             -jar FullNode.jar -c main_net_config.conf >> start.log 2>&1 &\r\n```\r\n\r\n## Running a super representative node for mainnet\r\n\r\nAdding the `--witness` parameter to the startup command, full node will run as a super representative node. The super representative node supports all the functions of the full node and also supports block production. Before running, make sure you have a super representative account and get votes from others. Once the number of obtained votes ranks in the top 27, your super representative node will participate in block production.\r\n\r\nFill in the private key of a super representative address into the `localwitness` list in the `main_net_config.conf`. Here is an example:\r\n\r\n```\r\n localwitness = [\r\n    <your_private_key>\r\n ]\r\n```\r\n\r\nthen run the following command to start the node:\r\n\r\n```bash\r\n$ nohup java -Xms9G -Xmx9G -XX:ReservedCodeCacheSize=256m \\\r\n             -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=512m \\\r\n             -XX:MaxDirectMemorySize=1G -XX:+PrintGCDetails \\\r\n             -XX:+PrintGCDateStamps  -Xloggc:gc.log \\\r\n             -XX:+UseConcMarkSweepGC -XX:NewRatio=2 \\\r\n             -XX:+CMSScavengeBeforeRemark -XX:+ParallelRefProcEnabled \\\r\n             -XX:+HeapDumpOnOutOfMemoryError \\\r\n             -XX:+UseCMSInitiatingOccupancyOnly  -XX:CMSInitiatingOccupancyFraction=70 \\\r\n             -jar FullNode.jar --witness -c main_net_config.conf >> start.log 2>&1 &\r\n```\r\n\r\n## Quick Start Tool\r\n\r\nAn easier way to build and run java-tron is to use `start.sh`. `start.sh` is a quick start script written in the Shell language. You can use it to build and run java-tron quickly and easily.\r\n\r\nHere are some common use cases of the scripting tool\r\n\r\n- Use `start.sh` to start a full node with the downloaded `FullNode.jar`\r\n- Use `start.sh` to download the latest `FullNode.jar` and start a full node.\r\n- Use `start.sh` to download the latest source code and compile a `FullNode.jar` and then start a full node.\r\n\r\nFor more details, please refer to the tool [guide](./shell.md).\r\n\r\n## Run inside Docker container\r\n\r\nOne of the quickest ways to get `java-tron` up and running on your machine is by using Docker:\r\n\r\n```shell\r\n$ docker run -d --name=\"java-tron\" \\\r\n             -v /your_path/output-directory:/java-tron/output-directory \\\r\n             -v /your_path/logs:/java-tron/logs \\\r\n             -p 8090:8090 -p 18888:18888 -p 50051:50051 \\\r\n             tronprotocol/java-tron \\\r\n             -c /java-tron/config/main_net_config.conf\r\n```\r\n\r\nThis will mount the `output-directory` and `logs` directories on the host, the docker.sh tool can also be used to simplify the use of docker, see more [here](docker/docker.md).\r\n\r\n# Community\r\n\r\n[Tron Developers & SRs](https://discord.gg/hqKvyAM) is Tron's official Discord channel. Feel free to join this channel if you have any questions.\r\n\r\n[Core Devs Community](https://t.me/troncoredevscommunity) is the Telegram channel for java-tron community developers. If you want to contribute to java-tron, please join this channel.\r\n\r\n[tronprotocol/allcoredev](https://gitter.im/tronprotocol/allcoredev) is the official Gitter channel for developers.\r\n\r\n# Contribution\r\n\r\nThank you for considering to help out with the source code! If you'd like to contribute to java-tron, please see the [Contribution Guide](./CONTRIBUTING.md) for more details.\r\n\r\n# Resources\r\n\r\n- [Medium](https://medium.com/@coredevs) java-tron's official technical articles are published there.\r\n- [Documentation](https://tronprotocol.github.io/documentation-en/introduction/) java-tron's official technical documentation website.\r\n- [Test network](http://nileex.io/) A stable test network of TRON contributed by TRON community.\r\n- [Tronscan](https://tronscan.org/#/) TRON network blockchain browser.\r\n- [Wallet-cli](https://github.com/tronprotocol/wallet-cli) TRON network wallet using command line.\r\n- [TIP](https://github.com/tronprotocol/tips) TRON Improvement Proposal (TIP) describes standards for the TRON network.\r\n- [TP](https://github.com/tronprotocol/tips/tree/master/tp) TRON Protocol (TP) describes standards already implemented in TRON network but not published as a TIP.\r\n\r\n# Integrity Check\r\n\r\n- After January 3, 2023, the release files will be signed using a GPG key pair, and the correctness of the signature will be verified using the following public key:\r\n  ```\r\n  pub: 1254 F859 D2B1 BD9F 66E7 107D F859 BCB4 4A28 290B\r\n  uid: build@tron.network\r\n  ```\r\n\r\n# License\r\n\r\njava-tron is released under the [LGPLv3 license](https://github.com/tronprotocol/java-tron/blob/master/LICENSE).\r\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.6474609375,
          "content": "## Supported Versions\nPlease see [Releases](https://github.com/tronprotocol/java-tron/releases). We recommend using the [most recently released version](https://github.com/tronprotocol/java-tron/releases/latest).\n\n## Reporting a Vulnerability\n**Please do not file a public ticket** mentioning the vulnerability.\nTo find out how to report a vulnerability in TRON, visit [https://hackerone.com/tron_dao](https://hackerone.com/tron_dao?type=team) or email [bounty@tron.network](mailto:bounty@tron.network).  \nPlease read the [disclosure policy](https://www.hackerone.com/disclosure-guidelines) for more information about publicly disclosed security vulnerabilities.\n"
        },
        {
          "name": "Tron protobuf protocol document.md",
          "type": "blob",
          "size": 56.869140625,
          "content": "# Tron Protocol \n\n## Overview \n\nThis is the description of  Google Protobuf implementation of Tron's protocol.\n\n## Contents \n\n#### [1. Account](#account)\n\n#### [2. Witness](#witness)\n\n#### [3. Block](#block)\n\n#### [4. Transaction](#trans)\n\n#### [5. Contract](#contract)\n\n#### [6. Network](#net)\n\n## Protocols\n\n### <span id=\"account\">1. Account</span>\n\nAccount and account-related messages.\n\n- Tron has 3 `types` of account: Normal, AssetIssue, Contract\n\n```java\nenum AccountType {\n  Normal = 0;\n  AssetIssue = 1;\n  Contract = 2;\n}\n```\n\n- message `Account` has multiple attributes and 2 nested messages: \n\n  message `Frozen`:\n\n  ```java\n  message Frozen {\n    int64 frozen_balance = 1; \n    int64 expire_time = 2; \n  }\n  ```\n\n  message `AccountResource`:\n\n  ```java\n  message AccountResource {\n    int64 energy_usage = 1;\n    Frozen frozen_balance_for_energy = 2;\n    int64 latest_consume_time_for_energy = 3;\n    int64 acquired_delegated_frozen_balance_for_energy = 4;\n    int64 delegated_frozen_balance_for_energy = 5;\n    int64 storage_limit = 6;\n    int64 storage_usage = 7;\n    int64 latest_exchange_storage_time = 8;\n  }\n  ```\n  \n  `account_name`: the name of this account. – e.g. “*BillsAccount*”\n  \n  `type`: what type of this account is – e.g. *0* stands for type Normal.\n  \n  `address`: the address of this account\n  \n  `account_id`: the id of this account \n\n  `balance`: the TRX balance of this account.\n\n  `votes`: received votes of this account. – e.g. *{(“0x1b7w…9xj3”,323), (“0x8djq…j12m”,88),…,(“0x82nd…mx6i”,10001)}*.\n\n  `asset`: other assets except TRX in this account – e.g. *{<“WishToken”,66666>,<”Dogie”,233>}*.\n\n  `assetV2`: other assets except TRX in this account – e.g. *{<“WishToken”,66666>,<”Dogie”,233>}*. (used after allowing same name of token87)\n\n  `frozen`: the freezed TRX of this account for receiving bandwidth\n\n  `net_usage`: the used bandwidth of this account\n\n  `acquired_delegated_fronzen_balance_for_bandwidth`: the freezed balance for receiving delegated bandwidth this account acquired.\n\n  `delegated_frozen_balance_for_bandwidth`: the balance for delegated bandwidth this account freezed\n\n  `create_time`: he create time of this account.\n\n  `latest_opration_time`: the latest operation time of this account.\n\n  `allowance`: the allowance of this account.\n\n  `latest_withdraw_time`: the latest operation time of this account.\n\n  `code`: reserved\n\n  `is_witness`:  identifies whether the account is a witness node.\n\n  `is_committee`: reserved\n\n  `frozen_supply`: \n\n  `asset_issued_name`: the name of asset issued by this account.\n\n  `asset_issued_ID`: the ID of asset issued by this account.\n\n  `latest_asset_operation_time`: the latest time of operating asset.\n\n  `latest_asset_operation_timeV2`: the latest time of operating asset(used after allowing same name of token)\n\n  `free_net_usage`: free bandwidth used of this account.\n\n  `free_asset_net_usage`: the free bandwidth used when this account transferring asset.\n\n  `free_asset_net_usageV2`: the free bandwidth used when this account transferring asset (used after allowing same name of token)\n\n  `latest_consume_time`: the latest consume energy time of this account.\n\n  `latest_consume_free_time`: the latest consume free bandwidth time of this account.\n\n ```java\nmessage Account {\n    message Frozen {\n    int64 frozen_balance = 1; \n      int64 expire_time = 2;\n  }\n    bytes account_name = 1;\n    AccountType type = 2;\n    bytes address = 3;\n    int64 balance = 4;\n    repeated Vote votes = 5;\n    map<string, int64> asset = 6;\n    map<string, int64> assetV2 = 56;\n    repeated Frozen frozen = 7;\n    int64 net_usage = 8;\n    int64 acquired_delegated_frozen_balance_for_bandwidth = 41;\n    int64 delegated_frozen_balance_for_bandwidth = 42;\n    int64 create_time = 0x09;\n    int64 latest_opration_time = 10;\n    int64 allowance = 0x0B;\n    int64 latest_withdraw_time = 0x0C;\n    bytes code = 13;\n    bool is_witness = 14;\n    bool is_committee = 15;\n    repeated Frozen frozen_supply = 16;\n    bytes asset_issued_name = 17;\n    bytes asset_issued_ID = 57;\n    map<string, int64> latest_asset_operation_time = 18;\n    map<string, int64> latest_asset_operation_timeV2 = 58;\n    int64 free_net_usage = 19;\n    map<string, int64> free_asset_net_usage = 20;\n    map<string, int64> free_asset_net_usageV2 = 59;\n    int64 latest_consume_time = 21;\n    int64 latest_consume_free_time = 22;\n    bytes account_id = 23;\n    message AccountResource {\n      int64 energy_usage = 1;\n      Frozen frozen_balance_for_energy = 2;\n      int64 latest_consume_time_for_energy = 3;\n      int64 acquired_delegated_frozen_balance_for_energy = 4;\n      int64 delegated_frozen_balance_for_energy = 5;\n      int64 storage_limit = 6;\n      int64 storage_usage = 7;\n      int64 latest_exchange_storage_time = 8;\n    }\n    AccountResource account_resource = 26;\n    bytes codeHash = 30;\n    Permission owner_permission = 31;\n    Permission witness_permission = 32;\n    repeated Permission active_permission = 33;\n  }\n  ```\n  \n  - message `Vote`\n  \n    `vote_address`: the super representative address.\n  \n    `vote_count`: the vote number to this super representative.\n  \n    ```java\n    message Vote {\n      bytes vote_address = 1;\n      int64 vote_count = 2;\n    }\n    ```\n    \n  - Message `AccountId`\n  \n    `name`: the name of this account.\n  \n    `address`: the address of this account.\n  \n    ```java\n    message AccountId {\n      bytes name = 1;\n      bytes address = 2;\n    }\n    ```\n  \n    \n  \n    \n  \n\n### <span id=\"witness\"> 2. Witness</span>\n\nWitness and witness-related messages.\n\n- message `Witness`\n\n  `address`: the address of this witness.\n\n  `voteCount`: total votes received.\n\n  `pubkey`: the public key of this witness.\n\n  `url`: witness information related to url.\n\n  `totalProduce`: total number of blocks produced.\n\n  `totalMissed`: total number of blocks missed.\n\n  `latestBlockNum`: the latest block height.\n\n  `latestSlotNum`: the latest produce block slot.\n\n  `isJobs`: whether it can produce blocks.\n\n  ```java\n  message Witness {\n    bytes address = 1;\n    int64 voteCount = 2;\n    bytes pubKey = 3;\n    string url = 4;\n    int64 totalProduced = 5;\n    int64 totalMissed = 6;\n    int64 latestBlockNum = 7;\n    int64 latestSlotNum = 8;\n    bool isJobs = 9;\n  }\n  ```\n\n\n### <span id=\"block\"> 3. Block</span>\n\n- message `Block`\n\n  `transaction`: refer to [`Transaction`](#trans).\n\n  `block_header`:\n\n  ```java\n  message Block {\n    repeated Transaction transactions = 1;\n    BlockHeader block_header = 2;\n  }\n  ```\n\n- Message `BlockHeader`\n\n  message `BlockHeader` has multiple attributes and 1 nested message.\n\n  message `raw`:\n\n  ​    `timestamp`: the timestamp of this block.\n\n  ​    `txTrieRoot`: the root hash of Transactions Merkle Tree in this block.\n\n  ​    `parentHash`: the parent block’s hash of this block.\n\n  ​    `number`: the height of this block.\n\n  ​    `witness_id`: the id of witness which packed this block.\n\n  ​    `witness_address`: the address of witness which packed this block.\n\n  ​    `version`: the version of this block.\n\n  ​    `accountStateRoot`: the account state root of this block.\n\n  ```java\n  message raw {\n    int64 timestamp = 1;\n    bytes txTrieRoot = 2;\n    bytes parentHash = 3;\n    int64 number = 7;\n    int64 witness_id = 8;\n    bytes witness_address = 9;\n    int32 version = 10;\n    bytes accountStateRoot = 11;\n  }\n  ```\n  \n  `raw_data`: \n\n  `witness_signature`: signature for this block header from witness node.\n\n ```java\nmessage BlockHeader {\n    message raw {\n      int64 timestamp = 1;\n      bytes txTrieRoot = 2;\n      bytes parentHash = 3;\n      int64 number = 7;\n      int64 witness_id = 8;\n      bytes witness_address = 9;\n      int32 version = 10;\n      bytes accountStateRoot = 11;\n    }\n    raw raw_data = 1;\n    bytes witness_signature = 2;\n  }\n  ```\n  \n\n\n### <span id=\"trans\"> 4. Transaction</span>\n\nTransaction and transaction-related messages.\n\n- Any behaviors which consume energy are regarded as transaction.\n\n  \n\n- message `TXInput` has multiple attributes and 1 nested message\n\n  message `raw`:\n\n  ​    `txID`: transaction ID.\n\n  ​    `vout`: value of last output.\n\n  ​    `pubKey`: public key.\n\n  ```java\n  message raw {\n    bytes txID = 1;\n    int64 vout = 2;\n    bytes pubKey = 3;\n  }\n  ```\n\n  `raw_data`: a message `raw`.\n\n  `signature`: signature for this `TXInput`.\n\n  ```java\n  message TXInput {\n    message raw {\n      bytes txID = 1;\n      int64 vout = 2;\n      bytes pubKey = 3;\n    }\n    raw raw_data = 1;\n    bytes signature = 4;\n  }\n  ```\n\n- message `txOutput`\n\n  `value`: output value.\n\n  `pubKeyHash`: hash of public key.\n\n  ```java\n  message TXOutput {\n    int64 value = 1;\n    bytes pubKeyHash = 2;\n  }\n  ```\n\n- message `TransactionRet`\n\n  `blockNumber`: the block number of transaction.\n\n  `blockTimeStamp`: the time stamp of packing transaction into block.\n\n  `transactionInfo`: transaction information.\n\n  ```java\n  message TransactionRet {\n    int64 blockNumber = 1;\n    int64 blockTimeStamp = 2;\n    repeated TransactionInfo transactioninfo = 3;\n  }\n  ```\n\n  - message `TransactionSign`\n\n    `transaction`: transaction data.\n\n    `privateKey`: private key.\n\n    ```java\n    message TransactionSign {\n      Transaction transaction = 1;\n      bytes privateKey = 2;\n    }\n    ```\n\n  - message `ResourceReceipt`\n\n    `energy_usage`: consume yourself account energy.\n\n    `energy_fee`: consume yourself account fee.\n\n    `origin_energy_usage`: consume contract owner account energy.\n\n    `energy_usage_total`: consume total account fee.\n\n    `net_usage`: consume yourself net.\n\n    `net_fee`: consume yourself trx of net usage.\n\n    `result`: the result of executing transaction.\n\n    ```java\n    message ResourceReceipt {\n      int64 energy_usage = 1;\n      int64 energy_fee = 2;\n      int64 origin_energy_usage = 3;\n      int64 energy_usage_total = 4;\n      int64 net_usage = 5;\n      int64 net_fee = 6;\n      Transaction.Result.contractResult result = 7;\n    }\n    ```\n\n  - Message `InternalTransaction`\n\n    message `InternalTransaction` has multiple attributes and 1 nested message\n\n    message `CallValueInfo`:\n\n    ​    `note`: note is a comment of internal contract transaction.\n\n    ​    `rejected`: rejected is whether internal transaction is rejected or not.\n\n    ```java\n    message CallValueInfo {\n      int64 callValue = 1;\n      string tokenId = 2;\n    }\n    ```\n    \n    `hash`:  internal transaction hash, and it should equals to root transaction id.\n\n    `caller_address`:\n\n    `transferTo_address`:\n\n    `callValueInfo`: Refers to asset transfer information in internal transactions, including trx and trc10.\n\n   ```java\n       message InternalTransaction {\n          bytes hash = 1;\n          bytes caller_address = 2;\n          bytes transferTo_address = 3;\n          message CallValueInfo {\n            int64 callValue = 1;\n            string tokenId = 2;\n          }\n          repeated CallValueInfo callValueInfo = 4;\n          bytes note = 5;\n          bool rejected = 6;\n        }\n   ```\n    \n  - message `Transaction`\n  \n    message `Transaction` has multiple attributes and 3 nested messages.\n  \n    message `Contract`: refer to [`Contract`](#contract).\n  \n    message  `Result`\n  \n    ​enum `code`:\n    \n    ```java\n    enum code {\n          SUCESS = 0;\n          FAILED = 1;\n        }\n    ```\n    enum `contractResult`: refer to [`Contract`](#contract).\n    \n     `fee`:\n     \n     `ret`:\n     \n     `contractRet`:\n     \n     `assetIssueID`:\n     \n     `withdraw_amount`:\n     \n     `unfreeze_amount`:\n     \n     `exchange_received_amount`:\n     \n     `exchange_inject_another_amount`:\n     \n     `exchange_withdraw_another_amount`:\n     \n     `exchange_id`:\n     \n     `shielded_transaction_fee`:\n     \n     ```java\n       message Result {\n           enum code {\n           SUCESS = 0;\n             FAILED = 1;\n         }\n           enum contractResult {\n           DEFAULT = 0;\n             SUCCESS = 1;\n           REVERT = 2;\n             BAD_JUMP_DESTINATION = 3;\n           OUT_OF_MEMORY = 4;\n             PRECOMPILED_CONTRACT = 5;\n             STACK_TOO_SMALL = 6;\n             STACK_TOO_LARGE = 7;\n             ILLEGAL_OPERATION = 8;\n             STACK_OVERFLOW = 9;\n             OUT_OF_ENERGY = 10;\n             OUT_OF_TIME = 11;\n             JVM_STACK_OVER_FLOW = 12;\n             UNKNOWN = 13;\n             TRANSFER_FAILED = 14;\n           }\n           int64 fee = 1;\n           code ret = 2;\n           contractResult contractRet = 3;\n         \n           string assetIssueID = 14;\n           int64 withdraw_amount = 15;\n           int64 unfreeze_amount = 16;\n           int64 exchange_received_amount = 18;\n           int64 exchange_inject_another_amount = 19;\n           int64 exchange_withdraw_another_amount = 20;\n           int64 exchange_id = 21;\n           int64 shielded_transaction_fee = 22;\n         }\n     ```\n  \n  message `raw`\n  \n   `ref_block_bytes`: intercepted part of the now block bytes in transaction head.\n  \n   `ref_block_num`: Deprecated.\n  \n   `ref_block_hash`:intercepted part of the now block hash in transaction head..\n  \n   `expiration`: the expiration time in transaction head.\n  \n   `auths`: deprecated.\n\n   `contract`: the contract type for transaction, and only support size = 1 when repeated list here for extension.\n\n   `timestamp`: timestamp for transaction.\n\n   `fee_limit`: the cost limit for energy and fee when trigger and create contract.\n   \n   ```java\n  message raw {\n      bytes ref_block_bytes = 1;\n      int64 ref_block_num = 3;\n      bytes ref_block_hash = 4;\n      int64 expiration = 8;\n      repeated authority auths = 9;\n      bytes data = 10;\n      repeated Contract contract = 11;\n      bytes scripts = 12;\n      int64 timestamp = 14;\n      int64 fee_limit = 18;\n    }\n   ```\n    \n   `raw_data`: raw data in transaction.\n    \n  `signature`: signature in transaction.\n    \n  `ret`: result for transaction.\n    \n  ```java\n  message Transaction {\n    message Contract {\n        enum ContractType {\n          AccountCreateContract = 0;\n          TransferContract = 1;\n          TransferAssetContract = 2;\n          VoteAssetContract = 3;\n          VoteWitnessContract = 4;\n          WitnessCreateContract = 5;\n          AssetIssueContract = 6;\n          WitnessUpdateContract = 8;\n          ParticipateAssetIssueContract = 9;\n          AccountUpdateContract = 10;\n          FreezeBalanceContract = 11;\n          UnfreezeBalanceContract = 12;\n          WithdrawBalanceContract = 13;\n          UnfreezeAssetContract = 14;\n          UpdateAssetContract = 15;\n          ProposalCreateContract = 16;\n          ProposalApproveContract = 17;\n          ProposalDeleteContract = 18;\n          SetAccountIdContract = 19;\n          CustomContract = 20;\n          CreateSmartContract = 30;\n          TriggerSmartContract = 31;\n          GetContract = 32;\n          UpdateSettingContract = 33;\n          ExchangeCreateContract = 41;\n          ExchangeInjectContract = 42;\n          ExchangeWithdrawContract = 43;\n          ExchangeTransactionContract = 44;\n          UpdateEnergyLimitContract = 45;\n          AccountPermissionUpdateContract = 46;\n          ClearABIContract = 48;\n          UpdateBrokerageContract = 49;\n          ShieldedTransferContract = 51;\n          MarketSellAssetContract = 52;\n          MarketCancelOrderContract = 53;\n          FreezeBalanceV2Contract = 54;\n          UnfreezeBalanceV2Contract = 55;\n          WithdrawExpireUnfreezeContract = 56;\n          DelegateResourceContract = 57;\n          UnDelegateResourceContract = 58;\n          CancelAllUnfreezeV2Contract = 59;\n        }\n        ContractType type = 1;\n        google.protobuf.Any parameter = 2;\n        bytes provider = 3;\n        bytes ContractName = 4;\n        int32 Permission_id = 5;\n      }\n    \n      message Result {\n        enum code {\n          SUCESS = 0;\n          FAILED = 1;\n        }\n        enum contractResult {\n          DEFAULT = 0;\n          SUCCESS = 1;\n          REVERT = 2;\n          BAD_JUMP_DESTINATION = 3;\n          OUT_OF_MEMORY = 4;\n          PRECOMPILED_CONTRACT = 5;\n          STACK_TOO_SMALL = 6;\n          STACK_TOO_LARGE = 7;\n          ILLEGAL_OPERATION = 8;\n          STACK_OVERFLOW = 9;\n          OUT_OF_ENERGY = 10;\n          OUT_OF_TIME = 11;\n          JVM_STACK_OVER_FLOW = 12;\n          UNKNOWN = 13;\n          TRANSFER_FAILED = 14;\n        }\n        int64 fee = 1;\n        code ret = 2;\n        contractResult contractRet = 3;\n    \n        string assetIssueID = 14;\n        int64 withdraw_amount = 15;\n        int64 unfreeze_amount = 16;\n        int64 exchange_received_amount = 18;\n        int64 exchange_inject_another_amount = 19;\n        int64 exchange_withdraw_another_amount = 20;\n        int64 exchange_id = 21;\n        int64 shielded_transaction_fee = 22;\n      }\n    \n      message raw {\n        bytes ref_block_bytes = 1;\n        int64 ref_block_num = 3;\n        bytes ref_block_hash = 4;\n        int64 expiration = 8;\n        repeated authority auths = 9;\n        bytes data = 10;\n        repeated Contract contract = 11;\n        bytes scripts = 12;\n        int64 timestamp = 14;\n        int64 fee_limit = 18;\n      }\n      raw raw_data = 1;\n      repeated bytes signature = 2;\n      repeated Result ret = 5;\n    }\n   ```\n    \n  - message `TransactionInfo`\n  \n    message `TransactionInfo` has multiple attributes, a nested enumeration and 1 nested message.\n  \n    enum `code`\n  \n    ```java\n    enum code {\n      SUCESS = 0;\n      FAILED = 1;\n    }\n    ```\n  \n    message `log`\n    \n      `address`: the address for log contract.\n      \n      `topics`: subscribed topics for contract. \n      \n      `data`: unsubscribed topics for contract.\n        \n       ```java\n    message Log {\n      bytes address = 1;\n      repeated bytes topics = 2;\n      bytes data = 3;\n    }\n       ```\n        \n   `id`: transaction id.\n  \n   `fee`: transaction fee.\n\n   `blockNumber`: the block number of packing this transaction.\n\n   `blockTimeStamp`: the time of generating block for this transaction.\n   \n   `contractResult`: the contract result of this transaction.\n\n   `contract_address`: the address of call or create contract.\n\n   `receipt`: the receipt of fee and energy usage. \n   \n   `log`: the log for triggering contract.\n   \n   `result`: the result code for triggering contract.\n  \n   `resMessage`: the response message for triggering contract .\n\n   `assetIssueID`: the ID for issue an asset.\n\n   `withdraw_amount`: the amount for witness withdraw.\n\n   `unfreeze_amount`: unfreeze trx amount.\n\n   `internal_transactions`: internal transaction lists.\n\n   `exchange_received_amount`: The number of tokens received by the transaction, only has value when the contract type is ExchangeTransactionContract.\n\n   `exchange_inject_another_amount`: The number of another token injected into the exchange pair, only has value when the contract type is ExchangeInjectContract.\n\n   `exchange_withdraw_another_amount`:  The number of tokens withdrew from the exchange pair, only has value when the contract type is ExchangeWithdrawContract.\n\n   `exchange_id`: the token pair id.\n\n   `shielded_transaction_fee`: the usage fee for shielded transaction.\n\n   ```java\n  message TransactionInfo {\n      enum code {\n      SUCESS = 0;\n        FAILED = 1;\n    }\n      message Log {\n      bytes address = 1;\n        repeated bytes topics = 2;\n      bytes data = 3;\n      }\n      bytes id = 1;\n      int64 fee = 2;\n      int64 blockNumber = 3;\n      int64 blockTimeStamp = 4;\n      repeated bytes contractResult = 5;\n      bytes contract_address = 6;\n      ResourceReceipt receipt = 7;\n      repeated Log log = 8;\n      code result = 9;\n      bytes resMessage = 10;\n    \n      string assetIssueID = 14;\n      int64 withdraw_amount = 15;\n      int64 unfreeze_amount = 16;\n      repeated InternalTransaction internal_transactions = 17;\n      int64 exchange_received_amount = 18;\n      int64 exchange_inject_another_amount = 19;\n      int64 exchange_withdraw_another_amount = 20;\n      int64 exchange_id = 21;\n      int64 shielded_transaction_fee = 22;\n    }\n   ```\n   - message `Transactions`\n  \n     `transaction`: list of transactions.\n     \n     ```java\n     message Transactions {\n       repeated Transaction transactions = 1;\n     }\n     ```\n  \n  - message `Authority` (deprecated)\n  \n    `account`:\n  \n    `permission_name`:\n  \n    ```java\n    message authority {\n      AccountId account = 1;\n      bytes permission_name = 2;\n    }\n     ```\n  \n- message `TXOutputs`\n  \n    `outputs`: output value.\n  \n    ```java\n    message TXOutputs {\n    repeated TXOutput outputs = 1;\n    }\n  ```\n  \n\n\n### <span id=\"contract\"> 5. Contract</span>\n\nContract and contract-related messages.\n\n- Tron has 33 types of Contracts declared within [`Transaction`](#trans).\n\n- message `Contract`\n\n  enum `ContractType`\n\n  `type`: the type of the contract, it is a Enumuration type.\n\n  `parameter`: binary data of the contract after serialization.\n\n  `provider`: reservedUpdateEnergyLimitContract.\n\n  `ContractName`: reserved\n\n  `Permission_id`: for multisign, the value is in [0, 9], 0 is owner，1 is witness, 2-9 is active.\n\n  ```java\n  message Contract {\n    enum ContractType {\n      AccountCreateContract = 0;\n      TransferContract = 1;\n      TransferAssetContract = 2;\n      VoteAssetContract = 3;\n      VoteWitnessContract = 4;\n      WitnessCreateContract = 5;\n      AssetIssueContract = 6;\n      WitnessUpdateContract = 8;\n      ParticipateAssetIssueContract = 9;\n      AccountUpdateContract = 10;\n      FreezeBalanceContract = 11;\n      UnfreezeBalanceContract = 12;\n      WithdrawBalanceContract = 13;\n      UnfreezeAssetContract = 14;\n      UpdateAssetContract = 15;\n      ProposalCreateContract = 16;\n      ProposalApproveContract = 17;\n      ProposalDeleteContract = 18;\n      SetAccountIdContract = 19;\n      CustomContract = 20;\n      CreateSmartContract = 30;\n      TriggerSmartContract = 31;\n      GetContract = 32;\n      UpdateSettingContract = 33;\n      ExchangeCreateContract = 41;\n      ExchangeInjectContract = 42;\n      ExchangeWithdrawContract = 43;\n      ExchangeTransactionContract = 44;\n      UpdateEnergyLimitContract = 45;\n      AccountPermissionUpdateContract = 46;\n      ClearABIContract = 48;\n      UpdateBrokerageContract = 49;\n      ShieldedTransferContract = 51;\n      MarketSellAssetContract = 52;\n      MarketCancelOrderContract = 53;\n      FreezeBalanceV2Contract = 54;\n      UnfreezeBalanceV2Contract = 55;\n      WithdrawExpireUnfreezeContract = 56;\n      DelegateResourceContract = 57;\n      UnDelegateResourceContract = 58;\n      CancelAllUnfreezeV2Contract = 59;\n    }\n    ContractType type = 1;\n    google.protobuf.Any parameter = 2;\n    bytes provider = 3;\n    bytes ContractName = 4;\n    int32 Permission_id = 5;\n  }\n  ```\n\n- There are 15 types of results while deploying contracts (refer to `Transaction.Result`):\n\n  ```java\n  enum contractResult {\n    DEFAULT = 0;\n    SUCCESS = 1;\n    REVERT = 2;\n    BAD_JUMP_DESTINATION = 3;\n    OUT_OF_MEMORY = 4;\n    PRECOMPILED_CONTRACT = 5;\n    STACK_TOO_SMALL = 6;\n    STACK_TOO_LARGE = 7;\n    ILLEGAL_OPERATION = 8;\n    STACK_OVERFLOW = 9;\n    OUT_OF_ENERGY = 10;\n    OUT_OF_TIME = 11;\n    JVM_STACK_OVER_FLOW = 12;\n    UNKNOWN = 13;\n    TRANSFER_FAILED = 14;\n  }\n  ```\n\n  #### Contract Details\n\n  - message `AccountCreateContract`\n\n    `owner_address`: the address of the contract owner.\n\n    `account_address`: the new address of the new account.\n\n    `type`: the type of the account.\n\n    ```java\n    message AccountCreateContract {\n      bytes owner_address = 1;\n      bytes account_address = 2;\n      AccountType type = 3;\n    }\n    ```\n\n  - message `TransferContract`\n\n    `owner_address`: address of contract owner.\n\n    `to_address`: receiver address.\n\n    `amount`：amount of TRX.\n\n    ```java\n    message TransferContract {\n        bytes owner_address = 1;\n        bytes to_address = 2;\n        int64 amount = 3;\n    }\n    ```\n\n  - message `TransferAssetContract`\n\n    `asset_name`: name of asset.\n\n    `owner_address`: address of contract owner.\n\n    `to_address`: receiver address.\n\n    `amount`: amount of asset.\n\n    ```java\n    message TransferAssetContract {\n        bytes asset_name = 1;\n        bytes owner_address = 2;\n        bytes to_address = 3;\n        int64 amount = 4;\n    }\n    ```\n\n  - message `VoteAssetContract`\n\n    `owner_address`: address of contract owner.\n\n    `vote_address`: voted address of asset.\n\n    `support`: votes supportive or not.\n\n    `count`: votes count.\n\n    ```java\n    message VoteAssetContract {\n        bytes owner_address = 1;\n        repeated bytes vote_address = 2;\n        bool support = 3;\n        int32 count = 5;\n    }\n    ```\n\n  - message `VoteWitnessContract`\n\n    message `Vote`:  \n\n    ```java\n    message Vote {\n        bytes vote_address = 1;\n        int64 vote_count = 2;\n    }\n    ```\n\n    `owner_address`: address of the owner.\n\n    `votes`: voting list.\n\n    `support`: votes supportive or not.\n\n    ```java\n    message VoteWitnessContract {\n        message Vote {\n            bytes vote_address = 1;\n            int64 vote_count = 2;\n        }\n        bytes owner_address = 1;\n        repeated Vote votes = 2;\n        bool support = 3;\n    }\n    ```\n\n    - message `WitnessCreateContract`\n\n      `owner_address`: address of the owner.\n\n      `url`: url of witness.\n\n      ```java\n      message WitnessCreateContract {\n          bytes owner_address = 1;\n          bytes url = 2;\n      }\n      ```\n\n    - message `AssetIssueContract`\n\n      `id`: id.\n\n      message `FrozenSupply`:\n\n      ​    `frozen_amount`: frozen amount of token.\n\n      ​    `frozen_days`: frozen period of token.\n\n      ```java\n      message FrozenSupply {\n          int64 frozen_amount = 1;\n          int64 frozen_days = 2;\n      }\n      ```\n\n      `owner_address`: address of the owner.\n\n      `name`: contract name.\n\n      `abbr`: contract abbr.\n\n      `total_supply`: maximum of asset.\n\n      `frozen_supply`: frozen supply of asset.\n\n      `trx_num`: trx num defines token price.\n\n      `precision`: precision.\n\n      `num`: trx num defines token price.\n\n      `start_time`: starting date of contract.\n\n      `end_time`: ending date of contract.\n\n      `vote_score`: vote score of contract received.\n\n      `description`: description of contract.\n\n      `url`: url of contract.\n\n      `free_asset_net_limit`: free bandwidth limit each account owns when transfers asset.\n\n      `public_free_asset_net_limit`: free bandwidth limit for all accounts.\n\n      `public_free_asset_net_usage`: free bandwidth usage of all accounts.\n\n      `public_latest_free_net_time`: the latest bandwidth consumption time for token transfer.\n\n      ```java\n      message AssetIssueContract {\n          string id = 41;\n      \n          message FrozenSupply {\n              int64 frozen_amount = 1;\n              int64 frozen_days = 2;\n          }\n          bytes owner_address = 1;\n          bytes name = 2;\n          bytes abbr = 3;\n          int64 total_supply = 4;\n          repeated FrozenSupply frozen_supply = 5;\n          int32 trx_num = 6;\n          int32 precision = 7;\n          int32 num = 8;\n          int64 start_time = 9;\n          int64 end_time = 10;\n          int64 order = 11;\n          int32 vote_score = 16;\n          bytes description = 20;\n          bytes url = 21;\n          int64 free_asset_net_limit = 22;\n          int64 public_free_asset_net_limit = 23;\n          int64 public_free_asset_net_usage = 24;\n          int64 public_latest_free_net_time = 25;\n      }\n      ```\n\n    - message `WitnessUpdateContract`\n\n      `owner_address`: address of owner.\n\n      `update_url`: witness url.\n\n      ```java\n      message WitnessUpdateContract {\n          bytes owner_address = 1;\n          bytes update_url = 12;\n      }\n      ```\n\n    - message `ParticipateAssetIssueContract`\n\n      `owner_address`: owner address.\n\n      `to_address`: receiver address.\n\n      `asset_name`: target asset name.\n\n      `amount`: amount of suns.\n\n      ```java\n      message ParticipateAssetIssueContract {\n          bytes owner_address = 1;\n          bytes to_address = 2;\n          bytes asset_name = 3;\n          int64 amount = 4; \n      }\n      ```\n\n    - message `AccountUpdateContract`\n\n      `account_name`: account name.\n\n      `owner_address`: address of owner.\n\n      ```java\n      message AccountUpdateContract {\n        bytes account_name = 1;\n        bytes owner_address = 2;\n      }\n      ```\n\n    - message `FreezeBalanceContract`\n\n      `owner_address`: address of owner.\n\n      `frozen_balance`: frozen amount of TRX.\n\n      `frozen_duration`: frozen duration of TRX.\n\n      `resource`: type of resource gained from freezing TRX.\n\n      `receiver_address`: account address to receive resource.\n\n      ```java\n      message FreezeBalanceContract {\n          bytes owner_address = 1;\n          int64 frozen_balance = 2;\n          int64 frozen_duration = 3;\n      \n          ResourceCode resource = 10;\n          bytes receiver_address = 15;\n      }\n      ```\n\n    - message `UnfreezeBalanceContract`\n\n      `owner_address`: address of owner.\n\n      `resource`: type of resource, BANDWIDTH / ENERGY. \n\n      `receiver_address`: resource receiver address.\n\n      ```java\n      message UnfreezeBalanceContract {\n          bytes owner_address = 1;\n          ResourceCode resource = 10;\n          bytes receiver_address = 15;\n      }\n      ```\n      \n     - message `WithdrawBalanceContract`\n    \n       `owner_address`: address of owner.\n    \n      ```java\n      message WithdrawBalanceContract {\n          bytes owner_address = 1;\n      }\n      ```\n    \n     - message `UnfreezeAssetContract`\n    \n       `owner_address`: owner address.\n    \n      ```java\n      message UnfreezeAssetContract {\n          bytes owner_address = 1;\n      }\n       ```\n    \n     - message `UpdateAssetContract`\n    \n       `owner_address`: address of owner.\n    \n       `description`: description of asset.\n    \n       `url`: asset url.\n    \n       `new_limit`: bandwidth consumption limit for each account when transfer.\n    \n       `new_public_limit`: bandwidth consumption limit of the accounts.\n    \n      ```java\n      message UpdateAssetContract {\n          bytes owner_address = 1;\n          bytes description = 2;\n          bytes url = 3;\n          int64 new_limit = 4;\n          int64 new_public_limit = 5;\n      }\n       ```\n    \n     - message `ProposalCreateContract`\n    \n       `owner_address`: address of owner.\n    \n       `parameters`: options and their values of proposals.\n    \n      ```java\n      message ProposalCreateContract {\n          bytes owner_address = 1;\n          map<int64, int64> parameters = 2;\n      }\n      ```\n    \n     - message `ProposalApproveContract`\n    \n       `owner_address`: address of owner.\n    \n       `proposal_id`: proposal id.\n    \n       `is_add_approval`: whether to approve.\n    \n      ```java\n      message ProposalApproveContract {\n          bytes owner_address = 1;\n          int64 proposal_id = 2;\n          bool is_add_approval = 3; \n      }\n      ```\n    \n     - message `ProposalDeleteContract`\n    \n       `owner_address`: address of owner.\n    \n       `proposal_id`: proposal id.\n    \n      ```java\n      message ProposalDeleteContract {\n          bytes owner_address = 1;\n          int64 proposal_id = 2;\n      }\n      ```\n    \n     - message `SetAccountIdContract`\n    \n       `account_id`: account id.\n    \n       `owner_address`: address of owner.\n    \n      ```java\n      message SetAccountIdContract {\n        bytes account_id = 1;\n        bytes owner_address = 2;\n      }\n      ```\n    \n     - `CustomContract`\n    \n     - message `CreateSmartContract`\n    \n       `owner_address`: address of owner.\n    \n       `new_contract`:  details of the new smart contract.\n    \n       `call_token_value`: amount of TRC10 token sent to the newly created smart contract.\n    \n       `token_id`: TRC10 token id.\n    \n      ```java\n      message CreateSmartContract {\n          bytes owner_address = 1;\n          SmartContract new_contract = 2;\n          int64 call_token_value = 3;\n          int64 token_id = 4;\n      }\n      ```\n    \n     - message `TriggerSmartContract`\n    \n       `owner_address`: address of owner.\n    \n       `contract_address`: smart contract address to interact with.\n    \n       `call_value`: TRX amount sent to smart contract.\n    \n       `data`: functions and parameters called in smart contract.\n    \n       `call_token_value`: TRC10 token amount sent to smart contract.\n    \n       `token_id`: TRC10 token id.\n    \n      ```java\n      message TriggerSmartContract {\n          bytes owner_address = 1;\n          bytes contract_address = 2;\n          int64 call_value = 3;\n          bytes data = 4;\n          int64 call_token_value = 5;\n          int64 token_id = 6;\n      }\n      ```\n    \n     - `GetContract`\n    \n     - message `UpdateSettingContract`\n    \n       `owner_address`: address of owner.\n    \n       `contract_address`: smart contract address.\n    \n       `consume_user_resource_percent`: user energy payment percentage of whole energy payment includes contract deployer’s and user's energy payment.\n    \n      ```java\n      message UpdateSettingContract {\n          bytes owner_address = 1;\n          bytes contract_address = 2;\n          int64 consume_user_resource_percent = 3;\n      }\n      ```\n    \n     - message `ExchangeCreateContract`\n    \n       `owner_address`: address of owner.\n    \n       `first_token_id`: supplied token.\n    \n       `first_token_balance`: supplied token amount.\n    \n       `second_token_id`: second token id.\n    \n       `second_token_balance`: second token balance.\n    \n      ```java\n      message ExchangeCreateContract {\n          bytes owner_address = 1;\n          bytes first_token_id = 2;\n          int64 first_token_balance = 3;\n          bytes second_token_id = 4;\n          int64 second_token_balance = 5;\n      }\n      ```\n    \n     - message `ExchangeInjectContract`\n    \n       `owner_address`: address of owner.\n    \n       `exchange_id`: token pair id.\n    \n       `token_id`: token id to inject.\n    \n       `quant`: token amount to inject.\n    \n      ```java\n      message ExchangeInjectContract {\n          bytes owner_address = 1;\n          int64 exchange_id = 2;\n          bytes token_id = 3;\n          int64 quant = 4;\n      }\n      ```\n    \n     - message `ExchangeWithdrawContract`\n    \n       `owner_address`: address of owner.\n    \n       `exchange_id`: token pair id.\n    \n       `token_id`: token id to withdraw.\n    \n       `quant`: token amount to withdraw.\n    \n      ```java\n      message ExchangeWithdrawContract {\n          bytes owner_address = 1;\n          int64 exchange_id = 2;\n          bytes token_id = 3;\n          int64 quant = 4;\n      }\n      ```\n    \n     - message `ExchangeTransactionContract`\n    \n       `owner_address`: address of owner.\n    \n       `exchange_id`: token pair id.\n    \n       `token_id`: token id to sell.\n    \n       `quant`: token amount to sell.\n    \n       `expected`: expected minimum number of tokens.\n    \n      ```java\n      message ExchangeTransactionContract {\n          bytes owner_address = 1;\n          int64 exchange_id = 2;\n          bytes token_id = 3;\n          int64 quant = 4;\n          int64 expected = 5;\n      }\n      ```\n    \n     - message `UpdateEnergyLimitContract`:\n    \n       `owner_address`: address of owner.\n    \n       `contract_address`: smart contract address.\n    \n       `origin_energy_limit`: value of owner’s consume energy limit for each transaction.\n    \n      ```java\n      message UpdateEnergyLimitContract {\n          bytes owner_address = 1;\n          bytes contract_address = 2;\n          int64 origin_energy_limit = 3;\n      }\n      ```\n    \n     - message `AccountPermissionUpdateContract`\n    \n       `owner_address`: address of owner.\n    \n       `owner`: authority to execute all contracts.\n    \n       `witness`: used by SR for generating blocks.\n    \n       `actives`: custom a combination of contracts permission sets.\n    \n      ```java\n      message AccountPermissionUpdateContract {\n        bytes owner_address = 1;\n        Permission owner = 2; \n        Permission witness = 3; \n        repeated Permission actives = 4;\n      }\n      ```\n    \n     - message `ClearABIContract`\n    \n       `owner_address`: address of owner.\n    \n       `contract_address`: contract address.\n    \n      ```java\n      message ClearABIContract {\n          bytes owner_address = 1;\n          bytes contract_address = 2;\n      }\n      ```\n    \n     - message `UpdateBrokerageContract`\n    \n       `owner_address`: address of owner.\n         \n       `brokerage`: draw ratio of SR.\n    \n      ```java\n      message UpdateBrokerageContract {\n          bytes owner_address = 1;\n          int32 brokerage = 2;\n      }\n      ```\n    \n     - message `ShieldedTransferContract`\n    \n       `transparent_from_address`: transparent address of sender.\n    \n       `from_amount`: amount from sender.\n    \n       `spend_description`: input data of transaction.\n    \n       `receive_description`: output data of transaction.\n    \n       `binding_signature`: signature to verify transaction.\n    \n       `transparent_to_address`: transparent address of receiver.\n    \n       `to_amount`: amount to transparent to_address\n    \n      ```java\n      message ShieldedTransferContract {\n          bytes transparent_from_address = 1; \n          int64 from_amount = 2;\n          repeated SpendDescription spend_description = 3;\n          repeated ReceiveDescription receive_description = 4;\n          bytes binding_signature = 5;\n          bytes transparent_to_address = 6;\n          int64 to_amount = 7; \n      }\n      ```\n    \n  attributes' type refer to [Shield Contract Related](#shieldc)\n  \n\n  \n### <span id=\"smartc\">Smart Contract</span>\n  \nmessage `SmartContract` has multiple attributes and nested message `ABI`\n  \n- message `SmartContract`\n  \n  - message `ABI`\n  \n    - message `Entry`\n  \n      - Enum `EntryType`\n  \n        ```java\n          enum EntryType {\n              UnknownEntryType = 0;\n              Constructor = 1;\n              Function = 2;\n              Event = 3;\n              Fallback = 4;\n              Receive = 5;\n          }\n          ```\n  \n      - message `Param`\n  \n        `indexed`: `true` if the field is part of the log’s topics, `false` if it is one of the log’s data segment.\n  \n        `name`: name of the parameter.\n  \n        `type`: canonical type of the parameter (more below).\n  \n        ```java\n          message Param {\n              bool indexed = 1;\n              string name = 2;\n              string type = 3;\n              // SolidityType type = 3;\n          }\n          ```\n  \n      - Enum `StateMutabilityType`\n  \n        ```java\n          enum StateMutabilityType {  \n              UnknownMutabilityType = 0;\n              Pure = 1;\n              View = 2;\n              Nonpayable = 3;\n              Payable = 4;\n          }\n          ```\n  \n      `anonymous`: `true` if the event was declared as `anonymous`.\n  \n      `constant`: `true` if function is either `pure` or `view`, `false` otherwise.\n  \n      `name`: function name.\n  \n      `inputs`: an array of objects.\n  \n      `outputs`: an array of objects similar to `inputs`.\n  \n      `type`: can be omitted, defaulting to `\"function\"`, likewise `payable` and `constant` can be omitted, both defaulting to `false`.\n  \n      `payable`: `true` if function accepts Ether, `false` otherwise.\n  \n      `stateMutability`: a string with one of the following values: `pure` (specified to not read blockchain state), `view` (specified to not modify the blockchain state), `nonpayable` (function does not accept Ether) and `payable` (function accepts Ether).\n  \n    `entrys`: a function description.\n  \n  `origin_address`: address of smart contract owner.\n  \n  `contract_address`:  address of the smart contract.\n  \n  `abi`: abi of the smart contract.\n  \n  `bytecode`: bytecode of the smart contract.\n  \n  `call_value`: amount of TRX that send to the smart contract.\n  \n  `consume_user_resource_percent`: user energy payment percentage of the whole energy payment which includes both contract deployer’s payment and user energy payment.\n  \n  `name`: the name of the smart contract.\n  \n  `origin_energy_limit`: value of the owner’s consume energy limit for each transaction.\n  \n  `code_hash`: hash of smart contract bytecode.\n  \n  `trx_hash`:  transactionId of Deploying contract transaction.\n  \n  ```java\n    message SmartContract {\n        message ABI {\n            message Entry {\n                enum EntryType {\n                     UnknownEntryType = 0;\n                     Constructor = 1;\n                     Function = 2;\n                     Event = 3;\n                     Fallback = 4;\n                     Receive = 5;\n                }\n                message Param {\n                    bool indexed = 1;\n                    string name = 2;\n                    string type = 3;\n                }\n                enum StateMutabilityType {\n                    UnknownMutabilityType = 0;\n                    Pure = 1;\n                    View = 2;\n                    Nonpayable = 3;\n                    Payable = 4;\n                }\n    \n                bool anonymous = 1;\n                bool constant = 2;\n                string name = 3;\n                repeated Param inputs = 4;\n                repeated Param outputs = 5;\n                EntryType type = 6;\n                bool payable = 7;\n                StateMutabilityType stateMutability = 8;\n            }\n            repeated Entry entrys = 1;\n        }\n        bytes origin_address = 1;\n        bytes contract_address = 2;\n        ABI abi = 3;\n        bytes bytecode = 4;\n        int64 call_value = 5;\n        int64 consume_user_resource_percent = 6;\n        string name = 7;\n        int64 origin_energy_limit = 8;\n        bytes code_hash = 9;\n        bytes trx_hash = 10;\n    }\n    ```\n  \n  ####<span id=\"shieldc\">Shield Contract Related</span>\n\n  - message `AuthenticationPath`\n\n    `value`: merkle authentication path.\n\n   ```java\n  message AuthenticationPath {\n        repeated bool value = 1;\n    }\n    ```\n  \n  - message `MerklePath`\n\n    `authentication_paths`: merkle tree authentication path.\n\n    `index`: index for the merkle authentication path.\n\n    `rt`: merkle tree root.\n\n   ```java\n  message MerklePath {\n        repeated AuthenticationPath authentication_paths = 1;\n        repeated bool index = 2;\n        bytes rt = 3;\n    }\n    ```\n  \n  - message `OutputPoint`\n\n    `hash`: transaction hash value.\n\n    `index`: output index.\n\n   ```java\n  message OutputPoint {\n        bytes hash = 1;\n        int32 index = 2;\n    }\n    ```\n  \n  - message `OutputPointInfo`\n\n    `out_points`: output points.\n\n    `block_num`: block number.\n\n   ```java\n  message OutputPointInfo {\n        repeated OutputPoint out_points = 1;\n        int32 block_num = 2;\n    }\n    ```\n  \n  - message `PedersenHash`\n\n    `content`: pedersen hash value.\n\n   ```java\n  message PedersenHash {\n        bytes content = 1;\n    }\n    ```\n  \n  - message `IncrementalMerkleTree`\n\n    `left`: PedersenHash value of left child node.\n\n    `right`: PedersenHash value of right child node.\n\n    `parents`: PedersenHash values of parent nodes.\n\n   ```java\n  message IncrementalMerkleTree {\n        PedersenHash left = 1;\n        PedersenHash right = 2;\n        repeated PedersenHash parents = 3;\n    }\n    ```\n  \n  - message `IncrementalMerkleVoucher`\n\n    `tree`: incremental merkle tree.\n\n    `filled`: this is an array, it contains the root of the subtree which can be combined with the param tree to be a new merkle tree.\n\n    `cursor`: the node that can be combined to a subtree, when they are combined to a subtree, compute its root and put it into the filled.\n\n    `cursor_depth`:  the tree height, in which depth it can be combined to be a subtree.\n\n    `rt`: merkle tree root.\n\n    `output_point`: output point.\n\n   ```java\n  message IncrementalMerkleVoucher {\n        IncrementalMerkleTree tree = 1;\n        repeated PedersenHash filled = 2;\n        IncrementalMerkleTree cursor = 3;\n        int64 cursor_depth = 4;\n        bytes rt = 5;\n        OutputPoint output_point = 10;\n    }\n    ```\n  \n  - message `IncrementalMerkleVoucherInfo`\n\n    `vouchers`: this is an array, each items represents the merklevoucher of the outputpoint.\n\n    `paths`: this is an array each items represents the path of the outputpoint.\n\n   ```java\n  message IncrementalMerkleVoucherInfo {\n        repeated IncrementalMerkleVoucher vouchers = 1;\n        repeated bytes paths = 2;\n    }\n    ```\n  \n  - message `SpendDescription`\n\n    `value_commitment`: commitment to value.\n\n    `anchor`: merkle root.\n\n    `nullifier`: used for check double spend.\n\n    `rk`: used for spend authority signature.\n\n    `zkproof`: zero-knowledge proof of input.\n\n    `spend_authority_signature`: signature for the spend authority.\n\n   ```java\n  message SpendDescription {\n        bytes value_commitment = 1;\n        bytes anchor = 2; \n        bytes nullifier = 3;\n        bytes rk = 4;\n        bytes zkproof = 5;\n        bytes spend_authority_signature = 6;\n    }\n    ```\n  \n  - message `ReceiveDescription`\n\n    `value_commitment`: commitment to the value.\n\n    `note_commitment`: commitment to note.\n\n    `epk`: ephemeral public key for encryption.\n\n    `c_enc`: encryption for incoming, decrypt it with ivk.\n\n    `c_out`: encryption for audit, decrypt it with ovk.\n\n    `zkproof`: zero-knowledge proof of output.\n\n   ```java\n  message ReceiveDescription {\n        bytes value_commitment = 1;\n        bytes note_commitment = 2;\n        bytes epk = 3; \n        bytes c_enc = 4; \n        bytes c_out = 5; \n        bytes zkproof = 6;\n    }\n    ```\n  \n  - message `ShieldedTransferContract`\n\n    `transparent_from_address`: sender transparent address.\n\n    `from_amount`: sender amount.\n\n    `spend_description`: transaction input data.\n\n    `receive_description`: transaction output data.\n\n    `binding_signature`: signature to verify the transaction.\n\n    `transparent_to_address`: transparent address of receiver.\n\n    `to_amount`: amount to receiver.\n\n   ```java\n  message ShieldedTransferContract {\n        bytes transparent_from_address = 1; \n        int64 from_amount = 2;\n        repeated SpendDescription spend_description = 3;\n        repeated ReceiveDescription receive_description = 4;\n        bytes binding_signature = 5;\n        bytes transparent_to_address = 6; \n        int64 to_amount = 7; \n    }\n    ```\n\n### <span id=\"net\"> 6. Network</span>\n\n- #### Inventory\n\n  - message `ChainInventory`\n\n    - message `BlockId`\n\n      `hash`: block hash\n\n      `number`: block height\n\n      ```java\n      message BlockId {\n        bytes hash = 1;\n        int64 number = 2;\n      }\n      ```\n\n    `ids`: block header list of blockchain.\n\n    `remain_num`: number of remaining blocks in blockchain.\n\n    ```java\n    message ChainInventory {\n      message BlockId {\n        bytes hash = 1;\n        int64 number = 2;\n      }\n      repeated BlockId ids = 1;\n      int64 remain_num = 2;\n    }\n    ```\n\n  - message `BlockInventory`\n\n    - Enum `Type`\n \n      ```java\n      enum Type {\n        SYNC = 0;\n        ADVTISE = 1;\n        FETCH = 2;\n      }\n      ```\n\n    - message `BlockId`\n\n      `hash`: block hash value.\n\n      `number`: block height.\n\n      ```java\n      message BlockId {\n        bytes hash = 1;\n        int64 number = 2;\n      }\n      ```\n\n    `ids`: block header list of block inventory.\n\n    `type`: type of block inventory.\n\n    ```java\n    message BlockInventory {\n      enum Type {\n        SYNC = 0;\n        ADVTISE = 1;\n        FETCH = 2;\n      }\n    \n      message BlockId {\n        bytes hash = 1;\n        int64 number = 2;\n      }\n      repeated BlockId ids = 1;\n      Type type = 2;\n    }\n    ```\n\n  - message `Inventory`\n\n    Enum `InventoryType`:\n\n    ```java\n    enum InventoryType {\n      TRX = 0;\n      BLOCK = 1;\n    }\n    ```\n\n    `type`: type of inventory.\n\n    `ids`: hash list of transaction or block.\n\n    ```java\n    message Inventory {\n      enum InventoryType {\n        TRX = 0;\n        BLOCK = 1;\n      }\n      InventoryType type = 1;\n      repeated bytes ids = 2;\n    }\n    ```\n\n  - message `Items`\n\n    Enum `ItemType`:\n\n    ```java\n    enum ItemType {\n      ERR = 0;\n      TRX = 1;\n      BLOCK = 2;\n      BLOCKHEADER = 3;\n    }\n    ```\n\n    `type`: item type.\n\n    `blocks`: block list of item.\n\n    `block_headers`: block header list of item.\n\n    `transactions`: transaction list of item.\n\n    ```java\n    message Items {\n      enum ItemType {\n        ERR = 0;\n        TRX = 1;\n        BLOCK = 2;\n        BLOCKHEADER = 3;\n      }\n    \n      ItemType type = 1;\n      repeated Block blocks = 2;\n      repeated BlockHeader block_headers = 3;\n      repeated Transaction transactions = 4;\n    }\n    ```\n\n- #### DynamicProperty\n\n  - message `DynamicProperties`\n\n    `last_solidity_block_num`: number of latest solidity block.\n\n    ```java\n    message DynamicProperties {\n      int64 last_solidity_block_num = 1;\n    }\n    ```\n\n- #### Reason Code\n\n  - enum `ReasonCode`\n\n    ```java\n    enum ReasonCode {\n      REQUESTED = 0x00;\n      BAD_PROTOCOL = 0x02;\n      TOO_MANY_PEERS = 0x04;\n      DUPLICATE_PEER = 0x05;\n      INCOMPATIBLE_PROTOCOL = 0x06;\n      RANDOM_ELIMINATION = 0x07;\n      PEER_QUITING = 0x08;\n      UNEXPECTED_IDENTITY = 0x09;\n      LOCAL_IDENTITY = 0x0A;\n      PING_TIMEOUT = 0x0B;\n      USER_REASON = 0x10;\n      RESET = 0x11;\n      SYNC_FAIL = 0x12;\n      FETCH_FAIL = 0x13;\n      BAD_TX = 0x14;\n      BAD_BLOCK = 0x15;\n      FORKED = 0x16;\n      UNLINKABLE = 0x17;\n      INCOMPATIBLE_VERSION = 0x18;\n      INCOMPATIBLE_CHAIN = 0x19;\n      TIME_OUT = 0x20;\n      CONNECT_FAIL = 0x21;\n      TOO_MANY_PEERS_WITH_SAME_IP = 0x22;\n      UNKNOWN = 0xFF;\n    }\n    ```\n\n- #### Message\n\n  - message `DisconnectMessage`\n\n    `reason`: disconnect reason from ReasonCode above\n\n    ```java\n    message DisconnectMessage {\n      ReasonCode reason = 1;\n    }\n    ```\n\n  - message  `HelloMessage`\n\n    - message `BlockId`:  \n\n      `hash`: block hash value.\n\n      `number`: block height.\n\n      ```java\n      message BlockId {\n        bytes hash = 1;\n        int64 number = 2;\n      }\n      ```\n\n    `from`: ip, port and nodeID of message sender.\n\n    `version`: p2p version.\n\n    `timestamp`: time of establishing connection.\n\n    `genesisBlockId`: genesis block id.\n\n    `solidBlockId`: solid block id.\n\n    `headBlockId`: head block id.\n\n    `address`: node account address, for signature verification.\n\n    `signature`: signature for sender.\n\n    ```java\n    message DisconnectMessage {\n      ReasonCode reason = 1;\n    }\n    \n    message HelloMessage {\n      message BlockId {\n        bytes hash = 1;\n        int64 number = 2;\n      }\n    \n      Endpoint from = 1;\n      int32 version = 2;\n      int64 timestamp = 3;\n      BlockId genesisBlockId = 4;\n      BlockId solidBlockId = 5;\n      BlockId headBlockId = 6;\n      bytes address = 7;\n      bytes signature = 8;\n    }\n    ```\n\n- #### Node Information\n\n  Node information is separated into several parts and implemented by nested messages.\n\n  \n\n  - message `NodeInfo`\n\n    `beginSyncNum`: beginning block height for synchronize.\n\n    `block`: head block id.\n\n    `solidityBlock`: latest solidity block id.\n\n    `currentConnectCount`: current connection count.\n\n    `activeConnectCount`: active connection count.\n\n    `passiveConnectCount`: trusted connection count.\n\n    `totalFlow`: total TCP flow.\n\n    `peerInfoList`: peer information list.\n\n    `configNodeInfo`: node config information.\n\n    `machineInfo`: machine information.\n\n    `cheatWitnessInfoMap`: cheating witness information map.\n\n    - message `PeerInfo`:\n\n      `lastSyncBlock`: last block id for synchronize.\n\n      `remainNum`: number of remaining blocks.\n\n      `lastBlockUpdateTime`: latest block update time .\n\n      `syncFlag`: is synchronizing or not.\n\n      `headBlockTimeWeBothHave`: timestamp of common head block.\n\n      `needSyncFromPeer`: need to sync from peer or not.\n\n      `needSyncFromUs`: need to sync from myself or not.\n\n      `host`: IP address\n\n      `port`: listening port.\n\n      `nodeId`: randomly generated node ID\n\n      `connectTime`: connection time period from established.\n\n      `avgLatency`: average latency\n\n      `syncToFetchSize`:  block count in sync queue.\n\n      `syncToFetchSizePeekNum`: height of the first block in sync queue.\n\n      `syncBlockRequestedSize`: block count in request sync queue.\n\n      `unFetchSynNum`: unsync block count.\n\n      `blockInPorcSize`: size of the processing block queue.\n\n      `headBlockWeBothHave`: common head block id.\n\n      `isActive`: true if not `dead` or `nonActive`\n\n      `score`: peer score calculated from connection information.\n\n      `nodeCount`: neighbors count.\n\n      `inFlow`: TCP flow from exact peer.\n\n      `disconnectTimes`: disconnection time.\n\n      `localDisconnectReason`: local disconnect reason.\n\n      `remoteDisconnectReason`: remote disconnect reason.\n\n      ```java\n      message PeerInfo {\n        string lastSyncBlock = 1;\n        int64 remainNum = 2;\n        int64 lastBlockUpdateTime = 3;\n        bool syncFlag = 4;\n        int64 headBlockTimeWeBothHave = 5;\n        bool needSyncFromPeer = 6;\n        bool needSyncFromUs = 7;\n        string host = 8;\n        int32 port = 9;\n        string nodeId = 10;\n        int64 connectTime = 11;\n        double avgLatency = 12;\n        int32 syncToFetchSize = 13;\n        int64 syncToFetchSizePeekNum = 14;\n        int32 syncBlockRequestedSize = 15;\n        int64 unFetchSynNum = 16;\n        int32 blockInPorcSize = 17;\n        string headBlockWeBothHave = 18;\n        bool isActive = 19;\n        int32 score = 20;\n        int32 nodeCount = 21;\n        int64 inFlow = 22;\n        int32 disconnectTimes = 23;\n        string localDisconnectReason = 24;\n        string remoteDisconnectReason = 25;\n      }\n      ```\n\n    - message `ConfigNodeInfo`:\n\n      `codeVersion`: code version.\n\n      `p2pVersion`: p2p version.\n\n      `listenPort`: listening port.\n\n      `discoverEnable`: whether to turn on neighbor discovery.\n\n      `activeNodeSize`: size of active node.\n\n      `passiveNodeSize`: size of passive node.\n\n      `sendNodeSize`: size of sending node.\n\n      `maxConnectCount`: maximum connection.\n\n      `sameIpMaxConnectCount`: maximum connection from the same host.\n\n      `backupListenPort`:  backup listening port.\n\n      `backupMemberSize`: backup member size.\n\n      `backupPriority`: priority of backup.\n\n      `dbVersion`: database version \n\n      `minParticipationRate`: minimum participation rate.\n\n      `supportConstant`: whether to support constant.\n\n      `minTimeRatio`: time ratio to force timeout.\n\n      `maxTimeRatio`: time ratio to avoid timeout.\n\n      `allowCreationOfContracts`:  permission of creating contracts.\n\n      `allowAdaptiveEnergy`: permission of turning on adaptive energy.\n\n      ```java\n      message ConfigNodeInfo {\n        string codeVersion = 1;\n        string p2pVersion = 2;\n        int32 listenPort = 3;\n        bool discoverEnable = 4;\n        int32 activeNodeSize = 5;\n        int32 passiveNodeSize = 6;\n        int32 sendNodeSize = 7;\n        int32 maxConnectCount = 8;\n        int32 sameIpMaxConnectCount = 9;\n        int32 backupListenPort = 10;\n        int32 backupMemberSize = 11;\n        int32 backupPriority = 12;\n        int32 dbVersion = 13;\n        int32 minParticipationRate = 14;\n        bool supportConstant = 15;\n        double minTimeRatio = 16;\n        double maxTimeRatio = 17;\n        int64 allowCreationOfContracts = 18;\n        int64 allowAdaptiveEnergy = 19;\n      }\n      ```\n\n    - message `MachineInfo`:\n\n      `threadCount`: number of threads\n\n      `deadLockThreadCount`: number of dead lock threads\n\n      `cpuCount`: CPU cores.\n\n      `totalMemory`: total memory\n\n      `freeMemory`: memory not in use.\n\n      `cpuRate`: CPU unusing rate \n\n      `javaVersion`: java version.\n\n      `osName`: os name.\n\n      `jvmTotalMemory`: jvm total memory.\n\n      `jvmFreeMemory`: jvm unused memory.\n\n      `processCpuRate`: cpu usage.\n\n      `memoryDescInfoList`: memory description information.\n\n      `deadLockThreadInfoList`: deadlock thread information.\n\n      - message `MemoryDescInfo`:\n\n        `name`: memory name.\n\n        `initSize`: memory initialize size.\n\n        `useSize`: memory use size.\n\n        `maxSize`: memory max size.\n\n        `useRate`: memory use rate.\n\n        ```java\n        message MemoryDescInfo {\n          string name = 1;\n          int64 initSize = 2;\n          int64 useSize = 3;\n          int64 maxSize = 4;\n          double useRate = 5;\n        }\n        ```\n\n      - message `DeadLockThreadInfo`:\n\n        `name`: thread name.\n\n        `lockName`: lock name.\n\n        `lockOwner`: lock owner.\n\n        `state`: thread state.\n\n        `blockTime`: dead block time.\n\n        `waitTime`: wait time.\n\n        `stackTrace`: stack trace message.\n\n        ```java\n        message DeadLockThreadInfo {\n          string name = 1;\n          string lockName = 2;\n          string lockOwner = 3;\n          string state = 4;\n          int64 blockTime = 5;\n          int64 waitTime = 6;\n          string stackTrace = 7;\n        }\n        ```\n\n      ```java\n      message MachineInfo {\n        int32 threadCount = 1;\n        int32 deadLockThreadCount = 2;\n        int32 cpuCount = 3;\n        int64 totalMemory = 4;\n        int64 freeMemory = 5;\n        double cpuRate = 6;\n        string javaVersion = 7;\n        string osName = 8;\n        int64 jvmTotalMemory = 9;\n        int64 jvmFreeMemory = 10;\n        double processCpuRate = 11;\n        repeated MemoryDescInfo memoryDescInfoList = 12;\n        repeated DeadLockThreadInfo deadLockThreadInfoList = 13;\n      \n        message MemoryDescInfo {\n          string name = 1;\n          int64 initSize = 2;\n          int64 useSize = 3;\n          int64 maxSize = 4;\n          double useRate = 5;\n        }\n      \n        message DeadLockThreadInfo {\n          string name = 1;\n          string lockName = 2;\n          string lockOwner = 3;\n          string state = 4;\n          int64 blockTime = 5;\n          int64 waitTime = 6;\n          string stackTrace = 7;\n        }\n      }\n      ```\n\n  \n"
        },
        {
          "name": "actuator",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 2.8271484375,
          "content": "allprojects {\n    version = \"1.0.0\"\n    apply plugin: \"java-library\"\n}\n\nsubprojects {\n    apply plugin: \"jacoco\"\n    apply plugin: \"maven-publish\"\n\n    sourceCompatibility = JavaVersion.VERSION_1_8\n    targetCompatibility = JavaVersion.VERSION_1_8\n\n    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'\n\n    buildscript {\n        repositories {\n            mavenCentral()\n            maven { url 'https://jitpack.io' }\n            maven {\n                url \"https://plugins.gradle.org/m2/\"\n            }\n        }\n        dependencies {\n            classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.1'\n            classpath \"gradle.plugin.com.github.johnrengelman:shadow:7.1.2\"\n        }\n    }\n\n    repositories {\n        mavenLocal()\n        mavenCentral()\n        maven { url 'https://repo.spring.io/plugins-release' }\n        maven { url 'https://jitpack.io' }\n    }\n\n    dependencies {\n        implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'\n        implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.25'\n        implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.9'\n        implementation \"com.google.code.findbugs:jsr305:3.0.0\"\n        implementation group: 'org.springframework', name: 'spring-context', version: '5.3.18'\n        implementation group: 'org.springframework', name: 'spring-tx', version: '5.3.18'\n        implementation \"org.apache.commons:commons-lang3:3.4\"\n        implementation group: 'org.apache.commons', name: 'commons-math', version: '2.2'\n        implementation \"org.apache.commons:commons-collections4:4.1\"\n        implementation group: 'joda-time', name: 'joda-time', version: '2.3'\n        implementation group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: '1.69'\n\n        compileOnly 'org.projectlombok:lombok:1.18.12'\n        annotationProcessor 'org.projectlombok:lombok:1.18.12'\n        testCompileOnly 'org.projectlombok:lombok:1.18.12'\n        testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'\n\n        testImplementation group: 'junit', name: 'junit', version: '4.13.2'\n        testImplementation \"org.mockito:mockito-core:2.13.0\"\n    }\n\n    task sourcesJar(type: Jar, dependsOn: classes) {\n        classifier = \"sources\"\n        from sourceSets.main.allSource\n        duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates\n    }\n\n\n    tasks.withType(AbstractArchiveTask) {\n        preserveFileTimestamps = false\n        reproducibleFileOrder = true\n        duplicatesStrategy = DuplicatesStrategy.INCLUDE // allow duplicates\n    }\n}\n\ntask copyToParent(type: Copy) {\n    into \"$buildDir/libs\"\n    subprojects {\n        from tasks.withType(Jar)\n    }\n}\n\nbuild.finalizedBy(copyToParent)\n\ngradle.buildFinished {\n    if (project.hasProperty('cleanSubBuild')) {\n        subprojects {\n            buildDir.deleteDir()\n        }\n    }\n}\n"
        },
        {
          "name": "build.md",
          "type": "blob",
          "size": 3.037109375,
          "content": "# How to Build\n\n## Prepare dependencies\n\n* JDK 1.8 (JDK 1.9+ are not supported yet)\n* On Linux Ubuntu system (e.g. Ubuntu 16.04.4 LTS), ensure that the machine has [__Oracle JDK 8__](https://www.digitalocean.com/community/tutorials/how-to-install-java-with-apt-get-on-ubuntu-16-04), instead of having __Open JDK 8__ in the system. If you are building the source code by using __Open JDK 8__, you will get [__Build Failed__](https://github.com/tronprotocol/java-tron/issues/337) result.\n* Open **UDP** ports for connection to the network\n* **Minimum** 2 CPU Cores\n\n## Build and Deploy automatically using scripts\n\n- Please take a look at the [Tron Deployment Scripts](https://github.com/tronprotocol/TronDeployment) repository.\n\n## Getting the code with git\n\n* Use Git from the console, see the [Setting up Git](https://help.github.com/articles/set-up-git/) and [Fork a Repo](https://help.github.com/articles/fork-a-repo/) articles.\n* `develop` branch: the newest code \n* `master` branch: more stable than develop.\nIn the shell command, type:\n  ```bash\n  git clone https://github.com/tronprotocol/java-tron.git\n  git checkout -t origin/master\n  ```\n\n* For Mac, you can also install **[GitHub for Mac](https://mac.github.com/)** then **[fork and clone our repository](https://guides.github.com/activities/forking/)**. \n\n* If you'd rather not use Git, **[Download the ZIP](https://github.com/tronprotocol/java-tron/archive/develop.zip)**\n\n## Including java-tron as dependency\n\nIf you don't want to checkout the code and build the project, you can include it directly as a dependency.\n\n**Using gradle:**\n\n```\nrepositories {\n   maven { url 'https://jitpack.io' }\n}\ndependencies {\n   implementation 'com.github.tronprotocol:java-tron:develop-SNAPSHOT'\n}\n```\n  \n**Using maven:**\n\n```xml\n<repositories>\n  <repository>    \n      <id>jitpack.io</id>\n      <url>https://jitpack.io</url>\n  </repository>\n</repositories>\n\n<dependency>\n    <groupId>com.github.tronprotocol</groupId>\n    <artifactId>java-tron</artifactId>\n    <version>develop-SNAPSHOT</version>\n    <!--You can use any of the tag/branch name available-->\n</dependency>\n```\n\n## Building from source code\n\n- **Building using the console:**\n\n  ```bash\n  cd java-tron\n  ./gradlew build\n  ```\n\n- **Building using [IntelliJ IDEA](https://www.jetbrains.com/idea/) (community version is enough):**\n\n  **Please run `./gradlew build` once to build the protocol files**\n\n  1. Start IntelliJ.  \n  Select `File` -> `Open`, then locate to the java-tron folder which you have git cloned to your local drive. Then click `Open` button on the right bottom.\n  2. Check on `Use auto-import` on the `Import Project from Gradle` dialog. Select JDK 1.8 in the `Gradle JVM` option. Then click `OK`.\n  3. IntelliJ will import the project and start gradle syncing, which will take several minutes, depending on your network connection and your IntelliJ configuration\n  4. Enable Annotations, `Preferences` -> Search `annotations` -> check `Enable Annotation Processing`.\n  5. When the syncing finishes, select `Gradle` -> `Tasks` -> `build`, and then double click `build` option.\n  \n"
        },
        {
          "name": "chainbase",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "consensus",
          "type": "tree",
          "content": null
        },
        {
          "name": "crypto",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "gen.sh",
          "type": "blob",
          "size": 0.048828125,
          "content": "protoc --java_out=./  ./core/*.proto ./api/*.proto"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.0498046875,
          "content": "org.gradle.parallel=true\norg.gradle.jvmargs=-Xms1g\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.8203125,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.873046875,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "jitpack.yml",
          "type": "blob",
          "size": 0.078125,
          "content": "install:\n  - ./gradlew clean -xtest -xlint -xcheck -PbinaryRelease=false install"
        },
        {
          "name": "lombok.config",
          "type": "blob",
          "size": 0.0263671875,
          "content": "lombok.log.fieldName=logger"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "prop.properties",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "protocol",
          "type": "tree",
          "content": null
        },
        {
          "name": "quickstart.md",
          "type": "blob",
          "size": 9.1279296875,
          "content": "# How to quick start\n\n## Introduction\n\nThis guide provides two ways for TRON quickstart:\n- Set up a FullNode using the official tools: providing a wealth of configurable parameters to startup a FullNode\n- Set up a complete private network for Tron development using a third-party tool: [docker-tron-quickstart](https://github.com/TRON-US/docker-tron-quickstart)\n\n## Dependencies\n\n### Docker\n\nPlease download and install the latest Docker from Docker official website:\n* Docker Installation for [Mac](https://docs.docker.com/docker-for-mac/install/)\n* Docker Installation for [Windows](https://docs.docker.com/docker-for-windows/install/)   \n\n## Quickstart based on official tools\n\n### Build the docker image from source\n\n#### Clone the java-tron repo\n\nClone the java-tron repo from github and enter the directory `java-tron`:\n```\ngit clone https://github.com/tronprotocol/java-tron.git\ncd java-tron\n```\n\n#### Build the docker image\n\nUse the command below to navigate to the docker directory and start the build:\n```\ncd docker\ndocker build -t tronprotocol/java-tron .\n```\n\n#### Using the official Docker images\n\nDownload the official docker image from the Dockerhub with below command if you'd like to use the official images:\n```\ndocker pull tronprotocol/java-tron\n```\n\n### Run the container\n\nYou can run the command below to start the java-tron:\n```\ndocker run -it -d -p 8090:8090 -p 8091:8091 -p 18888:18888 -p 50051:50051 --restart always tronprotocol/java-tron \n```\n\nThe `-p` flag defines the ports that the container needs to be mapped on the host machine. By default the container will start and join in the mainnet\nusing the built-in configuration file, you can specify other configuration file by mounting a directory and using the flag `-c`.\nThis image also supports customizing some startup parameters，here is an example for running a FullNode as an SR in production env:\n```\ndocker run -it -d -p 8080:8080 -p 8090:8090 -p 18888:18888 -p 50051:50051 \\\n           -v /Users/quan/tron/docker/conf:/java-tron/conf \\\n           -v /Users/quan/tron/docker/datadir:/java-tron/data \\\n           tronprotocol/java-tron \\\n           -jvm \"{-Xmx10g -Xms10g}\" \\\n           -c /java-tron/conf/config-localtest.conf \\\n           -d /java-tron/data \\\n           -w \n```\nNote: The directory `/Users/tron/docker/conf` must contain the file `config-localtest.conf`. The jvm parameters must be enclosed in double quotes and braces.\n\n## Quickstart for using docker-tron-quickstart\n\nThe image exposes a Full Node, Solidity Node, and Event Server. Through TRON Quickstart, users can deploy DApps, smart contracts, and interact with the TronWeb library.\nCheck more information at [Quickstart:](https://github.com/TRON-US/docker-tron-quickstart)\n\n### Node.JS Console\n  Node.JS is used to interact with the Full and Solidity Nodes via Tron-Web.  \n  [Node.JS](https://nodejs.org/en/) Console Download\n  \n### Clone TRON Quickstart  \n```shell\ngit clone https://github.com/TRON-US/docker-tron-quickstart.git\n```  \n\n### Pull the image using docker:\n```shell\ndocker pull trontools/quickstart\n```  \n\n## Setup TRON Quickstart   \n### TRON Quickstart Run\nRun the \"docker run\" command to launch TRON Quickstart. TRON Quickstart exposes port 9090 for Full Node, Solidity Node, and Event Server.\n```shell\ndocker run -it \\\n  -p 9090:9090 \\\n  --rm \\\n  --name tron \\\n  trontools/quickstart\n```  \nNotice: the option --rm automatically removes the container after it exits. This is very important because the container cannot be restarted, it MUST be run from scratch to correctly configure the environment.\n\n### Testing\n\nIf everything goes well, your terminal console output will look like following : \n <details>\n\n<summary>Run Console Output </summary>\n<!-- **Run Output:** -->\n\n    [PM2] Spawning PM2 daemon with pm2_home=/root/.pm2\n    [PM2] PM2 Successfully daemonized\n    [PM2][WARN] Applications eventron not running, starting...\n    [PM2] App [eventron] launched (1 instances)\n    ┌──────────┬────┬─────────┬──────┬─────┬────────┬─────────┬────────┬─────┬───────────┬──────┬──────────┐\n    │ App name │ id │ version │ mode │ pid │ status │ restart │ uptime │ cpu │ mem       │ user │ watching │\n    ├──────────┼────┼─────────┼──────┼─────┼────────┼─────────┼────────┼─────┼───────────┼──────┼──────────┤\n    │ eventron │ 0  │ N/A     │ fork │ 60  │ online │ 0       │ 0s     │ 0%  │ 25.4 MB   │ root │ disabled │\n    └──────────┴────┴─────────┴──────┴─────┴────────┴─────────┴────────┴─────┴───────────┴──────┴──────────┘\n    Use `pm2 show <id|name>` to get more details about an app\n    Start the http proxy for dApps...\n    [HPM] Proxy created: /  ->  http://127.0.0.1:18191\n    [HPM] Proxy created: /  ->  http://127.0.0.1:18190\n    [HPM] Proxy created: /  ->  http://127.0.0.1:8060\n\n    Tron Quickstart listening on http://127.0.0.1:9090\n\n\n\n    ADMIN /admin/accounts-generation\n    Sleeping for 1 second...Waiting when nodes are ready to generate 10 accounts...\n    (1) Waiting for sync...\n    Slept.\n    ...\n    Loading the accounts and waiting for the node to mine the transactions...\n    (1) Waiting for receipts...\n    Sending 10000 TRX to TSjfWSWcKCrJ1DbgMZSCbSqNK8DsEfqM9p\n    Sending 10000 TRX to THpWnj3dBQ5FrqW1KMVXXYSbHPtcBKeUJY\n    Sending 10000 TRX to TWFTHaKdeHWi3oPoaBokyZFfA7q1iiiAAb\n    Sending 10000 TRX to TFDGQo6f6dm9ikoV4Rc9NyTxMD5NNiSFJD\n    Sending 10000 TRX to TDZZNigWitFp5aE6j2j8YcycF7DVjtogBu\n    Sending 10000 TRX to TT8NRMcwdS9P3X9pvPC8JWi3x2zjwxZuhs\n    Sending 10000 TRX to TBBJw6Bk7w2NSZeqmzfUPnsn6CwDJAXTv8\n    Sending 10000 TRX to TVcgSLpT97mvoiyv5ChyhQ6hWbjYLWdCVB\n    Sending 10000 TRX to TYjQd4xrLZQGYMdLJqsTCuXVGapPqUp9ZX\n    Sending 10000 TRX to THCw6hPZpFcLCWDcsZg3W77rXZ9rJQPncD\n    Sleeping for 3 seconds... Slept.\n    (2) Waiting for receipts...\n    Sleeping for 3 seconds... Slept.\n    (3) Waiting for receipts...\n    Sleeping for 3 seconds... Slept.\n    (4) Waiting for receipts...\n    Sleeping for 3 seconds... Slept.\n    (5) Waiting for receipts...\n    Sleeping for 3 seconds... Slept.\n    (6) Waiting for receipts...\n    Sleeping for 3 seconds... Slept.\n    (7) Waiting for receipts...\n    Done.\n\n    Available Accounts\n    ==================\n\n    (0) TSjfWSWcKCrJ1DbgMZSCbSqNK8DsEfqM9p (10000 TRX)\n    (1) THpWnj3dBQ5FrqW1KMVXXYSbHPtcBKeUJY (10000 TRX)\n    (2) TWFTHaKdeHWi3oPoaBokyZFfA7q1iiiAAb (10000 TRX)\n    (3) TFDGQo6f6dm9ikoV4Rc9NyTxMD5NNiSFJD (10000 TRX)\n    (4) TDZZNigWitFp5aE6j2j8YcycF7DVjtogBu (10000 TRX)\n    (5) TT8NRMcwdS9P3X9pvPC8JWi3x2zjwxZuhs (10000 TRX)\n    (6) TBBJw6Bk7w2NSZeqmzfUPnsn6CwDJAXTv8 (10000 TRX)\n    (7) TVcgSLpT97mvoiyv5ChyhQ6hWbjYLWdCVB (10000 TRX)\n    (8) TYjQd4xrLZQGYMdLJqsTCuXVGapPqUp9ZX (10000 TRX)\n    (9) THCw6hPZpFcLCWDcsZg3W77rXZ9rJQPncD (10000 TRX)\n\n</details>\n  \n\n### web browser ###\n1. open your web browser\n2. enter : http://127.0.0.1:9090/\n3. there will be a response JSON data: \n\n```\n {\"Welcome to\":\"TronGrid v2.2.8\"}\n```\n\n## Docker Commands \nHere are some useful docker commands, which will help you manage the TRON Quickstart Docker container on your machine. \n\n**To list all active containers on your machine, run:**\n```shell\ndocker container ps\n```  \n**Output:**\n```shell\ndocker container ps\n\nCONTAINER ID        IMAGE               COMMAND                 CREATED             STATUS              PORTS                                              NAMES\n513078dc7816        tron                \"./quickstart v2.0.0\"   About an hour ago   Up About an hour    0.0.0.0:9090->9090/tcp, 0.0.0.0:18190->18190/tcp   tron\n```  \n**To kill an active container, run:**\n```shell\ndocker container kill 513078dc7816   // use your container ID\n```  \n\n### How to check the logs of the FullNode ###\n```\n  docker exec -it tron tail -f /tron/FullNode/logs/tron.log \n```\n\n <details>\n\n<summary>Output: something like following </summary>\n\n  ```\n  number=204\n  parentId=00000000000000cb0985978b3c780e4219dc51e4329beecabe7b71f99d269985\n  witness address=41928c9af0651632157ef27a2cf17ca72c575a4d21\n  generated by myself=true\n  generate time=2019-12-09 18:33:33.0\n  txs are empty\n  ]\n  18:33:33.008 INFO  [Thread-5] [DB](Manager.java:1095) pushBlock block number:204, cost/txs:1/0\n  18:33:33.008 INFO  [Thread-5] [witness](WitnessService.java:283) Produce block successfully, blockNumber:204, abSlot[525305471], blockId:00000000000000ccc37f1f5c2ceb574d14c490e3d0b86909855646f9384ba666, transactionSize:0, blockTime:2019-12-09T18:33:33.000Z, parentBlockId:00000000000000cb0985978b3c780e4219dc51e4329beecabe7b71f99d269985\n  18:33:33.008 INFO  [Thread-5] [net](AdvService.java:156) Ready to broadcast block Num:204,ID:00000000000000ccc37f1f5c2ceb574d14c490e3d0b86909855646f9384ba666\n  ........  etc\n  ```\n</details>\n"
        },
        {
          "name": "run.md",
          "type": "blob",
          "size": 13.4677734375,
          "content": "# How to Running\n\n### Running multi-nodes\n\nhttps://github.com/tronprotocol/Documentation/blob/master/TRX/Solidity_and_Full_Node_Deployment_EN.md\n\n## Running a local node and connecting to the public testnet \n\nUse the [Testnet Config](https://github.com/tronprotocol/TronDeployment/blob/master/test_net_config.conf) or use the [Tron Deployment Scripts](https://github.com/tronprotocol/TronDeployment).\n\n\n### Running a Super Representative Node for mainnet\n\n**Use the executable JAR(Recommended way):**\n\n```bash\njava -jar FullNode.jar -p <your_private_key> --witness -c your config.conf(Example：/data/java-tron/config.conf)\nExample:\njava -jar FullNode.jar -p <your_private_key> --witness -c /data/java-tron/config.conf\n\n```\n\nThis is similar to running a private testnet, except that the IPs in the `config.conf` are officially declared by TRON.\n\n<details>\n<summary>Correct output</summary>\n\n```bash\n\n20:43:18.138 INFO  [main] [o.t.p.FullNode](FullNode.java:21) Full node running.\n20:43:18.486 INFO  [main] [o.t.c.c.a.Args](Args.java:429) Bind address wasn't set, Punching to identify it...\n20:43:18.493 INFO  [main] [o.t.c.c.a.Args](Args.java:433) UDP local bound to: 10.0.8.146\n20:43:18.495 INFO  [main] [o.t.c.c.a.Args](Args.java:448) External IP wasn't set, using checkip.amazonaws.com to identify it...\n20:43:19.450 INFO  [main] [o.t.c.c.a.Args](Args.java:461) External address identified: 47.74.147.87\n20:43:19.599 INFO  [main] [o.s.c.a.AnnotationConfigApplicationContext](AbstractApplicationContext.java:573) Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@124c278f: startup date [Fri Apr 27 20:43:19 CST 2018]; root of context hierarchy\n20:43:19.972 INFO  [main] [o.s.b.f.a.AutowiredAnnotationBeanPostProcessor](AutowiredAnnotationBeanPostProcessor.java:153) JSR-330 'javax.inject.Inject' annotation found and supported for autowiring\n20:43:20.380 INFO  [main] [o.t.c.d.DynamicPropertiesStore](DynamicPropertiesStore.java:244) update latest block header timestamp = 0\n20:43:20.383 INFO  [main] [o.t.c.d.DynamicPropertiesStore](DynamicPropertiesStore.java:252) update latest block header number = 0\n20:43:20.393 INFO  [main] [o.t.c.d.DynamicPropertiesStore](DynamicPropertiesStore.java:260) update latest block header id = 00\n20:43:20.394 INFO  [main] [o.t.c.d.DynamicPropertiesStore](DynamicPropertiesStore.java:265) update state flag = 0\n20:43:20.559 INFO  [main] [o.t.c.c.TransactionCapsule](TransactionCapsule.java:83) Transaction create succeeded！\n20:43:20.567 INFO  [main] [o.t.c.c.TransactionCapsule](TransactionCapsule.java:83) Transaction create succeeded！\n20:43:20.568 INFO  [main] [o.t.c.c.TransactionCapsule](TransactionCapsule.java:83) Transaction create succeeded！\n20:43:20.568 INFO  [main] [o.t.c.c.TransactionCapsule](TransactionCapsule.java:83) Transaction create succeeded！\n20:43:20.569 INFO  [main] [o.t.c.c.TransactionCapsule](TransactionCapsule.java:83) Transaction create succeeded！\n20:43:20.596 INFO  [main] [o.t.c.d.Manager](Manager.java:300) create genesis block\n20:43:20.607 INFO  [main] [o.t.c.d.Manager](Manager.java:306) save block: BlockCapsule\n\n```\n\nThen observe whether block synchronization success，If synchronization successfully explains the success of the super node\n\n</details>\n\n\n### Running a Super Representative Node for private testnet\n* use master branch\n* You should modify the config.conf\n  1. Replace existing entry in genesis.block.witnesses with your address.\n  2. Replace existing entry in seed.node ip.list with your ip list.\n  3. The first Super Node start, needSyncCheck should be set false\n  4. Set p2pversion to 61 \n\n* Use the executable JAR(Recommended way)\n\n```bash\ncd build/libs\njava -jar FullNode.jar -p <your_private_key> --witness -c your config.conf (Example：/data/java-tron/config.conf)\nExample:\njava -jar FullNode.jar -p <your_private_key> --witness -c /data/java-tron/config.conf\n\n```\n  \n<details>\n<summary>Show Output</summary>\n\n```bash\n> ./gradlew run -Pwitness\n\n> Task :generateProto UP-TO-DATE\nUsing TaskInputs.file() with something that doesn't resolve to a File object has been deprecated and is scheduled to be removed in Gradle 5.0. Use TaskInputs.files() instead.\n\n> Task :run \n20:39:22.749 INFO [o.t.c.c.a.Args] private.key = 63e62a71ed3...\n20:39:22.816 WARN [o.t.c.c.a.Args] localwitness size must be one, get the first one\n20:39:22.832 INFO [o.t.p.FullNode] Here is the help message.output-directory/\n三月 22, 2018 8:39:23 下午 org.tron.core.services.RpcApiService start\n信息: Server started, listening on 50051\n20:39:23.706 INFO [o.t.c.o.n.GossipLocalNode] listener message\n20:39:23.712 INFO [o.t.c.o.n.GossipLocalNode] sync group = a41d27f10194c53703be90c6f8735bb66ffc53aa10ea9024d92dbe7324b1aee3\n20:39:23.716 INFO [o.t.c.s.WitnessService] Sleep : 1296 ms,next time:2018-03-22T20:39:25.000+08:00\n20:39:23.734 WARN [i.s.t.BootstrapFactory] Env doesn't support epoll transport\n20:39:23.746 INFO [i.s.t.TransportImpl] Bound to: 192.168.10.163:7080\n20:39:23.803 INFO [o.t.c.n.n.NodeImpl] other peer is nil, please wait ... \n20:39:25.019 WARN [o.t.c.d.Manager] nextFirstSlotTime:[2018-03-22T17:57:20.001+08:00],now[2018-03-22T20:39:25.067+08:00]\n20:39:25.019 INFO [o.t.c.s.WitnessService] ScheduledWitness[448d53b2df0cd78158f6f0aecdf60c1c10b15413],slot[1946]\n20:39:25.021 INFO [o.t.c.s.WitnessService] It's not my turn\n20:39:25.021 INFO [o.t.c.s.WitnessService] Sleep : 4979 ms,next time:2018-03-22T20:39:30.000+08:00\n20:39:30.003 WARN [o.t.c.d.Manager] nextFirstSlotTime:[2018-03-22T17:57:20.001+08:00],now[2018-03-22T20:39:30.052+08:00]\n20:39:30.003 INFO [o.t.c.s.WitnessService] ScheduledWitness[6c22c1af7bfbb2b0e07148ecba27b56f81a54fcf],slot[1947]\n20:39:30.003 INFO [o.t.c.s.WitnessService] It's not my turn\n20:39:30.003 INFO [o.t.c.s.WitnessService] Sleep : 4997 ms,next time:2018-03-22T20:39:35.000+08:00\n20:39:33.803 INFO [o.t.c.n.n.NodeImpl] other peer is nil, please wait ... \n20:39:35.005 WARN [o.t.c.d.Manager] nextFirstSlotTime:[2018-03-22T17:57:20.001+08:00],now[2018-03-22T20:39:35.054+08:00]\n20:39:35.005 INFO [o.t.c.s.WitnessService] ScheduledWitness[48e447ec869216de76cfeeadf0db37a3d1c8246d],slot[1948]\n20:39:35.005 INFO [o.t.c.s.WitnessService] It's not my turn\n20:39:35.005 INFO [o.t.c.s.WitnessService] Sleep : 4995 ms,next time:2018-03-22T20:39:40.000+08:00\n20:39:40.005 WARN [o.t.c.d.Manager] nextFirstSlotTime:[2018-03-22T17:57:20.001+08:00],now[2018-03-22T20:39:40.055+08:00]\n20:39:40.010 INFO [o.t.c.d.Manager] postponedTrxCount[0],TrxLeft[0]\n20:39:40.022 INFO [o.t.c.d.DynamicPropertiesStore] update latest block header id = fd30a16160715f3ca1a5bcad18e81991cd6f47265a71815bd2c943129b258cd2\n20:39:40.022 INFO [o.t.c.d.TronStoreWithRevoking] Address is [108, 97, 116, 101, 115, 116, 95, 98, 108, 111, 99, 107, 95, 104, 101, 97, 100, 101, 114, 95, 104, 97, 115, 104], BytesCapsule is org.tron.core.capsule.BytesCapsule@2ce0e954\n20:39:40.023 INFO [o.t.c.d.DynamicPropertiesStore] update latest block header number = 140\n20:39:40.024 INFO [o.t.c.d.TronStoreWithRevoking] Address is [108, 97, 116, 101, 115, 116, 95, 98, 108, 111, 99, 107, 95, 104, 101, 97, 100, 101, 114, 95, 110, 117, 109, 98, 101, 114], BytesCapsule is org.tron.core.capsule.BytesCapsule@83924ab\n20:39:40.024 INFO [o.t.c.d.DynamicPropertiesStore] update latest block header timestamp = 1521722380001\n20:39:40.024 INFO [o.t.c.d.TronStoreWithRevoking] Address is [108, 97, 116, 101, 115, 116, 95, 98, 108, 111, 99, 107, 95, 104, 101, 97, 100, 101, 114, 95, 116, 105, 109, 101, 115, 116, 97, 109, 112], BytesCapsule is org.tron.core.capsule.BytesCapsule@ca6a6f8\n20:39:40.024 INFO [o.t.c.d.Manager] updateWitnessSchedule number:140,HeadBlockTimeStamp:1521722380001\n20:39:40.025 WARN [o.t.c.u.RandomGenerator] index[-3] is out of range[0,3],skip\n20:39:40.070 INFO [o.t.c.d.TronStoreWithRevoking] Address is [73, 72, -62, -24, -89, 86, -39, 67, 112, 55, -36, -40, -57, -32, -57, 61, 86, 12, -93, -115], AccountCapsule is account_name: \"Sun\"\naddress: \"IH\\302\\350\\247V\\331Cp7\\334\\330\\307\\340\\307=V\\f\\243\\215\"\nbalance: 9223372036854775387\n\n20:39:40.081 INFO [o.t.c.d.TronStoreWithRevoking] Address is [41, -97, 61, -72, 10, 36, -78, 10, 37, 75, -119, -50, 99, -99, 89, 19, 47, 21, 127, 19], AccountCapsule is type: AssetIssue\naddress: \")\\237=\\270\\n$\\262\\n%K\\211\\316c\\235Y\\023/\\025\\177\\023\"\nbalance: 420\n\n20:39:40.082 INFO [o.t.c.d.TronStoreWithRevoking] Address is [76, 65, 84, 69, 83, 84, 95, 83, 79, 76, 73, 68, 73, 70, 73, 69, 68, 95, 66, 76, 79, 67, 75, 95, 78, 85, 77], BytesCapsule is org.tron.core.capsule.BytesCapsule@ec1439\n20:39:40.083 INFO [o.t.c.d.Manager] there is account List size is 8\n20:39:40.084 INFO [o.t.c.d.Manager] there is account ,account address is 448d53b2df0cd78158f6f0aecdf60c1c10b15413\n20:39:40.084 INFO [o.t.c.d.Manager] there is account ,account address is 548794500882809695a8a687866e76d4271a146a\n20:39:40.084 INFO [o.t.c.d.Manager] there is account ,account address is 48e447ec869216de76cfeeadf0db37a3d1c8246d\n20:39:40.084 INFO [o.t.c.d.Manager] there is account ,account address is 55ddae14564f82d5b94c7a131b5fcfd31ad6515a\n20:39:40.085 INFO [o.t.c.d.Manager] there is account ,account address is 6c22c1af7bfbb2b0e07148ecba27b56f81a54fcf\n20:39:40.085 INFO [o.t.c.d.Manager] there is account ,account address is 299f3db80a24b20a254b89ce639d59132f157f13\n20:39:40.085 INFO [o.t.c.d.Manager] there is account ,account address is abd4b9367799eaa3197fecb144eb71de1e049150\n20:39:40.085 INFO [o.t.c.d.Manager] there is account ,account address is 4948c2e8a756d9437037dcd8c7e0c73d560ca38d\n20:39:40.085 INFO [o.t.c.d.TronStoreWithRevoking] Address is [108, 34, -63, -81, 123, -5, -78, -80, -32, 113, 72, -20, -70, 39, -75, 111, -127, -91, 79, -49], WitnessCapsule is org.tron.core.capsule.WitnessCapsule@4cb4f7fb\n20:39:40.086 INFO [o.t.c.d.TronStoreWithRevoking] Address is [41, -97, 61, -72, 10, 36, -78, 10, 37, 75, -119, -50, 99, -99, 89, 19, 47, 21, 127, 19], WitnessCapsule is org.tron.core.capsule.WitnessCapsule@7be2474a\n20:39:40.086 INFO [o.t.c.d.TronStoreWithRevoking] Address is [72, -28, 71, -20, -122, -110, 22, -34, 118, -49, -18, -83, -16, -37, 55, -93, -47, -56, 36, 109], WitnessCapsule is org.tron.core.capsule.WitnessCapsule@3e375891\n20:39:40.086 INFO [o.t.c.d.TronStoreWithRevoking] Address is [68, -115, 83, -78, -33, 12, -41, -127, 88, -10, -16, -82, -51, -10, 12, 28, 16, -79, 84, 19], WitnessCapsule is org.tron.core.capsule.WitnessCapsule@55d77b83\n20:39:40.090 INFO [o.t.c.d.Manager] countWitnessMap size is 0\n20:39:40.091 INFO [o.t.c.d.TronStoreWithRevoking] Address is [41, -97, 61, -72, 10, 36, -78, 10, 37, 75, -119, -50, 99, -99, 89, 19, 47, 21, 127, 19], WitnessCapsule is org.tron.core.capsule.WitnessCapsule@310dd876\n20:39:40.092 INFO [o.t.c.d.TronStoreWithRevoking] Address is [72, -28, 71, -20, -122, -110, 22, -34, 118, -49, -18, -83, -16, -37, 55, -93, -47, -56, 36, 109], WitnessCapsule is org.tron.core.capsule.WitnessCapsule@151b42bc\n20:39:40.092 INFO [o.t.c.d.TronStoreWithRevoking] Address is [108, 34, -63, -81, 123, -5, -78, -80, -32, 113, 72, -20, -70, 39, -75, 111, -127, -91, 79, -49], WitnessCapsule is org.tron.core.capsule.WitnessCapsule@2d0388aa\n20:39:40.092 INFO [o.t.c.d.TronStoreWithRevoking] Address is [68, -115, 83, -78, -33, 12, -41, -127, 88, -10, -16, -82, -51, -10, 12, 28, 16, -79, 84, 19], WitnessCapsule is org.tron.core.capsule.WitnessCapsule@478a55e7\n20:39:40.101 INFO [o.t.c.d.TronStoreWithRevoking] Address is [-3, 48, -95, 97, 96, 113, 95, 60, -95, -91, -68, -83, 24, -24, 25, -111, -51, 111, 71, 38, 90, 113, -127, 91, -46, -55, 67, 18, -101, 37, -116, -46], BlockCapsule is BlockCapsule{blockId=fd30a16160715f3ca1a5bcad18e81991cd6f47265a71815bd2c943129b258cd2, num=140, parentId=dadeff07c32d342b941cfa97ba82870958615e7ae73fffeaf3c6a334d81fe3bd, generatedByMyself=true}\n20:39:40.102 INFO [o.t.c.d.Manager] save block: BlockCapsule{blockId=fd30a16160715f3ca1a5bcad18e81991cd6f47265a71815bd2c943129b258cd2, num=140, parentId=dadeff07c32d342b941cfa97ba82870958615e7ae73fffeaf3c6a334d81fe3bd, generatedByMyself=true}\n20:39:40.102 INFO [o.t.c.s.WitnessService] Block is generated successfully, Its Id is fd30a16160715f3ca1a5bcad18e81991cd6f47265a71815bd2c943129b258cd2,number140 \n20:39:40.102 INFO [o.t.c.n.n.NodeImpl] Ready to broadcast a block, Its hash is fd30a16160715f3ca1a5bcad18e81991cd6f47265a71815bd2c943129b258cd2\n20:39:40.107 INFO [o.t.c.s.WitnessService] Produced\n20:39:40.107 INFO [o.t.c.s.WitnessService] Sleep : 4893 ms,next time:2018-03-22T20:39:45.000+08:00\n20:39:43.805 INFO [o.t.c.n.n.NodeImpl] other peer is nil, please wait ... \n20:39:45.002 WARN [o.t.c.d.Manager] nextFirstSlotTime:[2018-03-22T20:39:45.001+08:00],now[2018-03-22T20:39:45.052+08:00]\n20:39:45.003 INFO [o.t.c.s.WitnessService] ScheduledWitness[48e447ec869216de76cfeeadf0db37a3d1c8246d],slot[1]\n20:39:45.003 INFO [o.t.c.s.WitnessService] It's not my turn\n20:39:45.003 INFO [o.t.c.s.WitnessService] Sleep : 4997 ms,next time:2018-03-22T20:39:50.000+08:00\n20:39:50.002 WARN [o.t.c.d.Manager] nextFirstSlotTime:[2018-03-22T20:39:45.001+08:00],now[2018-03-22T20:39:50.052+08:00]\n20:39:50.003 INFO [o.t.c.s.WitnessService] ScheduledWitness[6c22c1af7bfbb2b0e07148ecba27b56f81a54fcf],slot[2]\n20:39:50.003 INFO [o.t.c.s.WitnessService] It's not my turn\n20:39:50.003 INFO [o.t.c.s.WitnessService] Sleep : 4997 ms,next time:2018-03-22T20:39:55.000+08:00\n\n```\n\n</details>\n\n* In IntelliJ IDEA\n  \n<details>\n<summary>\n\nOpen the configuration panel:\n\n</summary>\n\n![](docs/images/program_configure.png)\n\n</details>  \n\n<details>\n<summary>\n\nIn the `Program arguments` option, fill in `--witness`:\n\n</summary>\n\n![](docs/images/set_witness_param.jpeg)\n\n</details> \n  \nThen, run `FullNode::main()` again.\n\n## Advanced Configurations\n\nRead the [Advanced Configurations](common/src/main/java/org/tron/core/config/README.md).\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.2119140625,
          "content": "rootProject.name = 'java-tron'\ninclude 'framework'\ninclude 'chainbase'\ninclude 'protocol'\ninclude 'actuator'\ninclude 'consensus'\ninclude 'common'\ninclude 'example:actuator-example'\ninclude 'crypto'\ninclude 'plugins'\n\n"
        },
        {
          "name": "shell.md",
          "type": "blob",
          "size": 4.8173828125,
          "content": "# Quick Start Scripting Tool\n\n# Introduction\n\nUsing the `start.sh` script, you can quickly and easily run and build java-tron.\n\nIf you already downloaded the `FullNode.jar`, you can use `start.sh` to run it, or if you have not downloaded java-tron source code or jar packages, you can use `start.sh` to download the source code, compile, run or get the latest release version in the form of a `jar package ` and run.\n\nThe script is available in the java-tron project at [github](https://github.com/tronprotocol/java-tron), or if you need a separate script: [start.sh](https://github.com/tronprotocol/java-tron/blob/develop/start.sh)\n\n***\n\n# Usage\n\n## Examples\n\n* Start the `FullNode.jar` (`start.sh`, `config.conf` and `FullNode.jar` in the same directory.)\n\n  ```\n  sh start.sh --run\n  ```\n  \n  Start the service with options.\n  \n  ```\n  sh start.sh --run -j /data/FullNode.jar -c /data/config.conf -d /data/output-directory\n  ```\n  \n* Stop the `FullNode.jar`\n\n  ```\n  sh start.sh --stop\n  ```\n\n* Get the latest version of `FullNode.jar` and start it\n\n  ```\n  sh start.sh --release --run\n  ```\n  \n* Clone the source code, compile `java-tron`, and generate `FullNode.jar` and start it\n\n  ```\n  sh start.sh -cb --run\n  ```\n\n* Select a supported network,default network `main`, optional network `test`,`private`\n  ```\n  sh start.sh --net test\n  ```\n\n\n## Options\n\n### Service operation\n\n* `--run` \n\n  start the service\n\n* `--stop`\n\n  stop the service\n\n* `-c`\n\n  Specify the configuration file, by default it will load the `config.conf` in the same directory as `FullNode.jar`\n\n* `-d`\n\n  Specify the database storage path, The default path is the same directory where `FullNode.jar` is located.\n\n* `-j`\n\n  Specify the jar package, default value is the `FullNode.jar` in the current path.\n\n* `-mem`\n\n  Specify the maximum memory of the `FullNode.jar` service in`MB`, jvm's startup maximum memory will be adjusted according to this parameter.\n  \n* `--net`\n    Select test and private networks.\n\n### build project\n\n* `-cb`\n\n  Clone the latest source code and compile.\n\n* `--release`\n\n  Get the latest released version of the `jar` package from github.\n\n\n### rebuild the manifest\n\n* `-d`\n\n  specify the `output-directory` db directory\n\n* `-m`\n\n  specify the minimum required manifest file size ，unit:M，default：0\n\n* `-b`\n\n  specify the batch manifest size,default：80000\n\n* `-dr` or `--disable-rewrite-manifest`  \n  disable rewrite manifest\n\n***\n\n## How to use\n\n* Local mode\n\n  Start the service using the local Jar package\n\n* Online mode\n\n  Get the latest code or latest release from github and start the service\n\n### 1.local mode\n\nFormat:\n\n```\nsh start.sh [-j <jarName>] [-d <db database-directory>] [-c <configFile>] [[--run] | [--stop]]\n```\n\n**start service**\n\n```\nsh start.sh --run\n```\n\n**stop service**\n\n```\nsh start.sh --stop\n```\n\n### 2.online mode\n\n* Get the latest release\n\n* Clone the source code and build\n\n**Get the latest release**\n\nFormat:\n\n```\nsh start.sh <[--release | -cb]> <--run> [-m <manifest size>] | [-b <batch size>] | [-d <db database-directory> | [-dr | --disable-rewrite-manifes]]\n```\n\nGet the latest released version.\n\n\n```\nsh start.sh --release --run\n```\n\nFollowing file structure will be generated after executing the above command and the `FullNode.jar` will be started. \n\n```\n├── ...\n├── FullNode/\n    ├── config.conf\n    ├── FullNode.jar\n    ├── start.sh\n```\n\n**Clone the source code and build**\n\nGet the latest code from master branch of https://github.com/tronprotocol/java-tron and compile. \n\nAfter using this command, the \"FullNode\" directory will be created, the compiled file `FullNode.jar` and the configuration file will be copied to this directory\n\ndemo:\n\n```\nsh start.sh -cb --run\n```\n\nFollowing file structure will be created：\n\n```\n├── ...\n├── java-tron\n    ├── actuator/\n    ├── chainbase/\n    ├── common/\n    ├── config/\n    ├── consensus/    \n    ├── crypto/\n    ├── docker/\n    ├── docs/\n    ├── example/   \n    ├── framework/\n    ├── gradle/\n    ├── plugins/\n    ├── protocol/\n    ├── config.conf\n    ├── FullNode.jar\n    ├── start.sh\n    ├── README.md\n    ├── ...\n```\n\n```\n├── java-tron/\n├── FullNode/\n    |── config.conf\n    ├── FullNode.jar\n    ├── start.sh\n```\n\n### 3. rebuild manifest tool\n\nThis tool provides the ability to reformat the manifest based on current database, Enabled by default.\n\n1.Local mode:\n\n```\nsh start.sh --run -d /tmp/db/database -m 128 -b 64000\n```\n\n2.Online mode  \n\n```\nsh start.sh --release --run -d /tmp/db/database -m 128 -b 64000\n```\n\nFor more design details, please refer to: [TIP298](https://github.com/tronprotocol/tips/issues/298) | [Leveldb Startup Optimization Plugins](https://github.com/tronprotocol/documentation-en/blob/master/docs/developers/archive-manifest.md)\n"
        },
        {
          "name": "sonar-project.properties",
          "type": "blob",
          "size": 0.9580078125,
          "content": "sonar.projectKey=java-tron\nsonar.projectName=java-tron\nsonar.projectVersion=2.1\n# =====================================================\n#   Meta-data for the project\n# =====================================================\nsonar.links.homepage=https://github.com/tronprotocol/java-tron\nsonar.links.ci=https://travis-ci.org/tronprotocol/java-tron\nsonar.links.scm=https://github.com/tronprotocol/java-tron\nsonar.links.issue=https://github.com/tronprotocol/java-tron/issues\n# =====================================================\n#   Properties that will be shared amongst all modules\n# =====================================================\n# SQ standard properties\nsonar.sources=./actuator/src,./framework/src/main,./consensus/src,./chainbase/src\nsonar.java.binaries=./actuator/build/classes,./framework/build/classes,./consensus/build/classes,\\\n  ./chainbase/build/classes\n# =====================================================\n#   Properties that will be shared amongst all modules"
        },
        {
          "name": "sprout-verifying.key",
          "type": "blob",
          "size": 1.4150390625,
          "content": null
        },
        {
          "name": "start.sh",
          "type": "blob",
          "size": 15.25,
          "content": "#!/bin/bash\n#############################################################################\n#\n#                    GNU LESSER GENERAL PUBLIC LICENSE\n#                        Version 3, 29 June 2007\n#\n#  Copyright (C) [2007] [TRON Foundation], Inc. <https://fsf.org/>\n#  Everyone is permitted to copy and distribute verbatim copies\n#  of this license document, but changing it is not allowed.\n#\n#\n#   This version of the GNU Lesser General Public License incorporates\n# the terms and conditions of version 3 of the GNU General Public\n# License, supplemented by the additional permissions listed below.\n#\n# You can find java-tron at https://github.com/tronprotocol/java-tron/\n#\n##############################################################################\n\n# Build FullNode config\nFULL_NODE_DIR=\"FullNode\"\nFULL_NODE_CONFIG_DIR=\"config\"\n# config file\nFULL_NODE_CONFIG_MAIN_NET=\"main_net_config.conf\"\nFULL_NODE_CONFIG_TEST_NET=\"test_net_config.conf\"\nFULL_NODE_CONFIG_PRIVATE_NET=\"private_net_config.conf\"\nDEFAULT_FULL_NODE_CONFIG='config.conf'\nJAR_NAME=\"FullNode.jar\"\nFULL_START_OPT=''\n\n# Github\nGITHUB_BRANCH='master'\nGITHUB_CLONE_TYPE='HTTPS'\nGITHUB_REPOSITORY=''\nGITHUB_REPOSITORY_HTTPS_URL='https://github.com/tronprotocol/java-tron.git'\nGITHUB_REPOSITORY_SSH_URL='git@github.com:tronprotocol/java-tron.git'\n\n# Shell option\nALL_OPT_LENGTH=$#\n# Start service option\nMAX_STOP_TIME=60\n# Modify this option to allow the minimum memory to be started, unit MB\nALLOW_MIN_MEMORY=8192\n\n# JVM option\nMAX_DIRECT_MEMORY=1g\nJVM_MS=4g\nJVM_MX=4g\nIS_BACKUP_GC_LOG=true\n\nSPECIFY_MEMORY=0\nRUN=false\nUPGRADE=false\n\n# Rebuild manifest\nREBUILD_MANIFEST=true\nREBUILD_DIR=\"$PWD/output-directory/database\"\nREBUILD_MANIFEST_SIZE=0\nREBUILD_BATCH_SIZE=80000\n\n# Download and upgrade\nDOWNLOAD=false\nRELEASE_URL='https://github.com/tronprotocol/java-tron/releases'\nQUICK_START=false\nCLONE_BUILD=false\n\nif [[ $GITHUB_CLONE_TYPE == 'HTTPS' ]]; then\n  GITHUB_REPOSITORY=$GITHUB_REPOSITORY_HTTPS_URL\nelse\n  GITHUB_REPOSITORY=$GITHUB_REPOSITORY_SSH_URL\nfi\n\n# Determine the Java command to use to start the JVM.\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`which java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nbackupGCLog() {\n  local maxFile=5\n  local gcLogDir=logs/gc_logs/\n  if [ ! -d \"$gcLogDir\" ];then\n    mkdir -p 'logs/gc_logs'\n  fi\n\n  if [ -f 'gc.log' ]; then\n    echo '[info] backup gc.log'\n    local dateformat=`date \"+%Y-%m-%d_%H-%M-%S\"`\n    tar -czvf gc.log_$dateformat'.tar.gz' gc.log\n    mv gc.log_$dateformat'.tar.gz' $gcLogDir\n    rm -rf gc.log\n\n    # checking the number of backups\n    local currentDirCount=`ls -l $gcLogDir | grep \"gc.log*\" | wc -l`\n    if [ $currentDirCount -gt $maxFile ]; then\n      local oldFileSize=`expr $currentDirCount - $maxFile`\n      local oldGcLogFiles=(`ls -1 $gcLogDir |head -n $oldFileSize`)\n    fi\n\n    for fileName in ${oldGcLogFiles[@]}; do\n      rm -rf $gcLogDir$fileName\n    done\n  fi\n}\n\ngetLatestReleaseVersion() {\n  full_node_version=`git ls-remote --tags $GITHUB_REPOSITORY |grep GreatVoyage- | awk -F '/' 'END{print $3}'`\n  if [[ -n $full_node_version ]]; then\n   echo $full_node_version\n  else\n   echo ''\n  fi\n}\n\ncheckVersion() {\n github_release_version=$(`echo getLatestReleaseVersion`)\n if [[ -n $github_release_version ]]; then\n  echo \"info: github latest version: $github_release_version\"\n  echo $github_release_version\n else\n    echo 'info: not getting the latest version'\n    exit\n fi\n}\n\nupgrade() {\n  latest_version=$(`echo getLatestReleaseVersion`)\n  echo \"info: latest version: $latest_version\"\n  if [[ -n $latest_version ]]; then\n    old_jar=\"$PWD/$JAR_NAME\"\n    if [[ -f $old_jar ]]; then\n      echo \"info: backup $old_jar\"\n      mv $PWD/$JAR_NAME $PWD/$JAR_NAME'_bak'\n    fi\n    download $RELEASE_URL/download/$latest_version/$JAR_NAME $JAR_NAME\n    if [[ $? == 0 ]]; then\n      echo \"info: download version $latest_version success\"\n    fi\n  else\n    echo 'info: nothing to upgrade'\n  fi\n}\n\ndownload() {\n  local url=$1\n  local file_name=$2\n  if type wget >/dev/null 2>&1; then\n    wget --no-check-certificate -q $url\n  elif type curl >/dev/null 2>&1; then\n    echo \"curl -OLJ $url\"\n    curl -OLJ $url\n  else\n    echo 'info: no exists wget or curl, make sure the system can use the \"wget\" or \"curl\" command'\n  fi\n}\n\nmkdirFullNode() {\n  if [ ! -d $FULL_NODE_DIR ]; then\n    echo \"info: create $FULL_NODE_DIR\"\n    mkdir $FULL_NODE_DIR\n    $(cp $0 $FULL_NODE_DIR)\n    cd $FULL_NODE_DIR\n  elif [ -d $FULL_NODE_DIR ]; then\n    cd $FULL_NODE_DIR\n  fi\n}\n\nquickStart() {\n  full_node_version=$(`echo getLatestReleaseVersion`)\n  if [[ -n $full_node_version ]]; then\n    mkdirFullNode\n    echo \"info: check latest version: $full_node_version\"\n    echo 'info: download config'\n    download https://raw.githubusercontent.com/tronprotocol/tron-deployment/$GITHUB_BRANCH/$FULL_NODE_CONFIG_MAIN_NET $FULL_NODE_CONFIG_MAIN_NET\n    mv $FULL_NODE_CONFIG_MAIN_NET 'config.conf'\n\n    echo \"info: download $full_node_version\"\n    download $RELEASE_URL/download/$full_node_version/$JAR_NAME $JAR_NAME\n    checkSign\n  else\n    echo 'info: not getting the latest version'\n    exit\n  fi\n}\n\ncloneCode() {\n  if type git >/dev/null 2>&1; then\n    git_clone=$(git clone -b $GITHUB_BRANCH $GITHUB_REPOSITORY)\n    if [[ git_clone == 0 ]]; then\n      echo 'info: git clone java-tron success'\n    fi\n  else\n    echo 'info: no exists git, make sure the system can use the \"git\" command'\n  fi\n}\n\ncloneBuild() {\n  local currentPwd=$PWD\n  echo 'info: clone java-tron'\n  cloneCode\n\n  echo 'info: build java-tron'\n  cd java-tron\n  sh gradlew clean build -x test\n  if [[ $? == 0 ]];then\n    cd $currentPwd\n    mkdirFullNode\n    cp '../java-tron/build/libs/FullNode.jar' $PWD\n    cp '../java-tron/framework/src/main/resources/config.conf' $PWD\n  else\n    exit\n  fi\n}\n\ncheckPid() {\n  if [[ $JAR_NAME =~ '/' ]]; then\n    JAR_NAME=$(echo $JAR_NAME |awk -F '/' '{print $NF}')\n  fi\n  pid=$(ps -ef | grep -v start | grep $JAR_NAME | grep -v grep | awk '{print $2}')\n  return $pid\n}\n\nstopService() {\n  count=1\n  while [ $count -le $MAX_STOP_TIME ]; do\n    checkPid\n    if [ $pid ]; then\n      kill -15 $pid\n      sleep 1\n    else\n      echo \"info: java-tron stop\"\n      return\n    fi\n    count=$(($count + 1))\n    if [ $count -eq $MAX_STOP_TIME ]; then\n      kill -9 $pid\n      sleep 1\n    fi\n  done\n  sleep 5\n}\n\ncheckAllowMemory() {\n  os=`uname`\n  totalMemory=$(`echo getTotalMemory`)\n  total=`expr $totalMemory / 1024`\n  if [[ $os == 'Darwin' ]]; then\n    return\n  fi\n\n  if [[ $total -lt $ALLOW_MIN_MEMORY ]]; then\n    echo \"warn: the memory $total MB cannot be smaller than the minimum memory $ALLOW_MIN_MEMORY MB\"\n    exit\n  elif [[ $SPECIFY_MEMORY -gt 0 ]] &&\n   [[ $SPECIFY_MEMORY -lt $ALLOW_MIN_MEMORY ]]; then\n    echo \"warn: the specified memory $SPECIFY_MEMORY MB cannot be smaller than the minimum memory $ALLOW_MIN_MEMORY MB\"\n    echo 'warn: start abort'\n    exit\n  fi\n}\n\nsetTCMalloc() {\n  os=`uname`\n  if [[ $os == 'Linux' ]] || [[ $os == 'linux' ]] ; then\n    lib_tc_malloc=\"/usr/lib64/libtcmalloc.so\"\n    if [[ -f $lib_tc_malloc ]]; then\n      export LD_PRELOAD=\"$lib_tc_malloc\"\n      export TCMALLOC_RELEASE_RATE=10\n    else\n      echo 'info: recommended for linux systems using tcmalloc as the default memory management tool'\n    fi\n  fi\n}\n\ngetTotalMemory() {\n  os=`uname`\n  if [[ $os == 'Linux' ]] || [[ $os == 'linux' ]] ; then\n    total=$(cat /proc/meminfo | grep MemTotal | awk -F ' ' '{print $2}')\n    echo $total\n    return\n  elif [[  $os == 'Darwin' ]]; then\n    total=$(sysctl -a | grep mem |grep hw.memsize |awk -F ' ' '{print $2}')\n    echo `expr $total / 1024`\n  fi\n}\n\nsetJVMMemory() {\n  os=`uname`\n  if [[ $os == 'Linux' ]] || [[ $os == 'linux' ]] ; then\n    if [[ $SPECIFY_MEMORY >0 ]]; then\n      max_direct=$(echo \"$SPECIFY_MEMORY/1024*0.1\" | bc | awk -F. '{print $1\"g\"}')\n      if [[ \"$max_direct\" != \"g\" ]]; then\n        MAX_DIRECT_MEMORY=$max_direct\n      fi\n      JVM_MX=$(echo \"$SPECIFY_MEMORY/1024*0.6\" | bc | awk -F. '{print $1\"g\"}')\n      JVM_MS=$JVM_MX\n    else\n      total=$(`echo getTotalMemory`)\n      MAX_DIRECT_MEMORY=$(echo \"$total/1024/1024*0.1\" | bc | awk -F. '{print $1\"g\"}')\n      JVM_MX=$(echo \"$total/1024/1024*0.6\" | bc | awk -F. '{print $1\"g\"}')\n      JVM_MS=$JVM_MX\n    fi\n\n  elif [[ $os == 'Darwin' ]]; then\n    MAX_DIRECT_MEMORY='1g'\n  fi\n}\n\nstartService() {\n  echo $(date) >>start.log\n  if [[ ! $JAR_NAME =~ '-c' ]]; then\n     FULL_START_OPT=\"$FULL_START_OPT -c $DEFAULT_FULL_NODE_CONFIG\"\n  fi\n\n  if [[ ! -f $JAR_NAME ]]; then\n    echo \"warn: jar file $JAR_NAME not exist\"\n    exit\n  fi\n\n  nohup $JAVACMD -Xms$JVM_MS -Xmx$JVM_MX -XX:+UseConcMarkSweepGC -XX:+PrintGCDetails -Xloggc:./gc.log \\\n    -XX:+PrintGCDateStamps -XX:+CMSParallelRemarkEnabled -XX:ReservedCodeCacheSize=256m -XX:+UseCodeCacheFlushing \\\n    -XX:MetaspaceSize=256m -XX:MaxMetaspaceSize=512m \\\n    -XX:MaxDirectMemorySize=$MAX_DIRECT_MEMORY -XX:+HeapDumpOnOutOfMemoryError \\\n    -XX:NewRatio=2 -jar \\\n    $JAR_NAME $FULL_START_OPT >>start.log 2>&1 &\n  checkPid\n  echo \"info: start java-tron with pid $pid on $HOSTNAME\"\n  echo \"info: if you need to stop the service, execute: sh start.sh --stop\"\n}\n\nrebuildManifest() {\n  if [[ $REBUILD_MANIFEST = false ]]; then\n    echo 'info: disable rebuild manifest!'\n    return\n  fi\n\n  if [[ ! -d $REBUILD_DIR ]]; then\n    echo \"info: database not exists, skip rebuild manifest\"\n    return\n  fi\n\n  ARCHIVE_JAR='ArchiveManifest.jar'\n  if [[ -f $ARCHIVE_JAR ]]; then\n    echo 'info: execute rebuild manifest.'\n    $JAVACMD -jar $ARCHIVE_JAR -d $REBUILD_DIR -m $REBUILD_MANIFEST_SIZE -b $REBUILD_BATCH_SIZE\n  else\n    echo 'info: download the rebuild manifest plugin from the github'\n    local latest=$(`echo getLatestReleaseVersion`)\n    download $RELEASE_URL/download/GreatVoyage-v\"$latest\"/$ARCHIVE_JAR $ARCHIVE_JAR\n    if [[ $download == 0 ]]; then\n      echo 'info: download success, rebuild manifest'\n      $JAVACMD -jar $ARCHIVE_JAR $REBUILD_DIR -m $REBUILD_MANIFEST_SIZE -b $REBUILD_BATCH_SIZE\n    fi\n  fi\n  if [[ $? == 0 ]]; then\n    echo 'info: rebuild manifest success'\n  else\n    echo 'info: rebuild manifest fail, log in logs/archive.log'\n  fi\n}\n\nspecifyConfig(){\n  echo \"info: specify the net: $1\"\n  local netType=$1\n  local configName;\n  if [[ \"$netType\" = 'test' ]]; then\n    configName=$FULL_NODE_CONFIG_TEST_NET\n  elif [[ \"$netType\" = 'private' ]]; then\n    configName=$FULL_NODE_CONFIG_PRIVATE_NET\n  else\n    echo \"warn: no support config $nodeType\"\n    exit\n  fi\n\n  if [[ ! -d $FULL_NODE_CONFIG_DIR ]]; then\n    mkdir -p $FULL_NODE_CONFIG_DIR\n  fi\n\n  if [[ -d $FULL_NODE_CONFIG_DIR/$configName ]]; then\n    DEFAULT_FULL_NODE_CONFIG=$FULL_NODE_CONFIG_DIR/$configName\n    break\n  fi\n\n  if [[ ! -f $FULL_NODE_CONFIG_DIR/$configName ]]; then\n    download https://raw.githubusercontent.com/tronprotocol/tron-deployment/$GITHUB_BRANCH/$configName $configName\n    mv  $configName $FULL_NODE_CONFIG_DIR/$configName\n    DEFAULT_FULL_NODE_CONFIG=$FULL_NODE_CONFIG_DIR/$configName\n  fi\n}\n\ncheckSign() {\n  echo 'info: verify signature'\n  local latest_version=$(`echo getLatestReleaseVersion`)\n  download $RELEASE_URL/download/$latest_version/sha256sum.txt sha256sum.txt\n  fullNodeSha256=$(cat sha256sum.txt|grep 'FullNode'| awk -F ' ' '{print $1}')\n\n  os=`uname`\n  if [[ $os == 'Linux' ]] || [[ $os == 'linux' ]] ; then\n    releaseFullNodeSha256=$(sha256sum FullNode.jar| grep FullNode | awk -F ' ' '{print $1}')\n  elif [[ $os == 'Darwin' ]]; then\n    releaseFullNodeSha256=$(shasum -a 256 FullNode.jar| grep FullNode | awk -F ' ' '{print $1}')\n    cat $releaseFullNodeSha256 | awk -F ' ' '{print $0}'\n  fi\n\n  echo \"info:      release sha256sum sign: $releaseFullNodeSha256\"\n  echo \"info: FullNode.jar sha256sum sign: $fullNodeSha256\"\n\n  if [[ \"$fullNodeSha256\" == \"$releaseFullNodeSha256\" ]]; then\n    echo 'info: sha256 signatures pass'\n  else\n    echo 'info: sha256 signature exception!!!'\n    echo 'info: please compile from the code or download the latest version from https://github.com/tronprotocol/java-tron'\n  fi\n}\n\nrestart() {\n  stopService\n  checkAllowMemory\n  rebuildManifest\n  setTCMalloc\n  setJVMMemory\n  startService\n}\n\nwhile [ -n \"$1\" ]; do\n  case \"$1\" in\n  -c)\n    DEFAULT_FULL_NODE_CONFIG=$2\n    shift 2\n    ;;\n  -d)\n    REBUILD_DIR=$2/database\n    FULL_START_OPT=\"$FULL_START_OPT $1 $2\"\n    shift 2\n    ;;\n  -j)\n    JAR_NAME=$2\n    shift 2\n    ;;\n  -p)\n    FULL_START_OPT=\"$FULL_START_OPT $1 $2\"\n    shift 2\n    ;;\n  -w)\n    FULL_START_OPT=\"$FULL_START_OPT $1\"\n    shift 1\n    ;;\n  --witness)\n    FULL_START_OPT=\"$FULL_START_OPT $1\"\n    shift 1\n    ;;\n  --net)\n    specifyConfig $2\n    shift 2\n    ;;\n  -m)\n    REBUILD_MANIFEST_SIZE=$2\n    shift 2\n    ;;\n  -n)\n    JAR_NAME=$2\n    shift 2\n    ;;\n  -b)\n    REBUILD_BATCH_SIZE=$2\n    shift 2\n    ;;\n  -cb)\n    CLONE_BUILD=true\n    shift 1\n    ;;\n  --download)\n    DOWNLOAD=true\n    shift 1\n    ;;\n  --deploy)\n    QUICK_START=true\n    shift 1\n    ;;\n  --release)\n    QUICK_START=true\n    shift 1\n    ;;\n  --clone)\n    cloneCode\n    exit\n    ;;\n  -mem)\n    SPECIFY_MEMORY=$2\n    shift 2\n    ;;\n  --disable-rewrite-manifes)\n    REBUILD_MANIFEST=false\n    shift 1\n    ;;\n  -dr)\n    REBUILD_MANIFEST=false\n    shift 1\n    ;;\n  --upgrade)\n    UPGRADE=true\n    shift 1\n    ;;\n  --run)\n    if [[ $ALL_OPT_LENGTH -eq 1 ]]; then\n      restart\n    fi\n    RUN=true\n    shift 1\n    ;;\n  --stop)\n    stopService\n    ;;\n  FullNode)\n    RUN=true\n    shift 1\n    ;;\n  FullNode.jar)\n    RUN=true\n    shift 1\n    ;;\n  *.jar)\n    RUN=true\n    shift 1\n    ;;\n  *)\n    if [[ $ALL_OPT_LENGTH -eq 1 ]]; then\n      if [[ ! \"$1\" =~ \"-\" ]] && [[ ! \"$1\" =~ \"--\" ]]; then\n        if [[ $1 =~ '.jar' ]]; then\n          JAR_NAME=$1\n        else\n          JAR_NAME=\"$1.jar\"\n        fi\n        restart\n        exit\n      fi\n    fi\n    FULL_START_OPT=\"$FULL_START_OPT $@\"\n    break\n    ;;\n  esac\ndone\n\nif [[ $IS_BACKUP_GC_LOG = true ]]; then\n  backupGCLog\nfi\n\nif [[ $CLONE_BUILD == true ]];then\n  cloneBuild\nfi\n\nif [[ $QUICK_START == true ]]; then\n  quickStart\n  if [[ $? == 0 ]] ; then\n    if [[ $RUN == true ]]; then\n      cd $FULL_NODE_DIR\n      FULL_START_OPT=''\n      restart\n    fi\n  fi\nfi\n\nif [[ $UPGRADE == true ]]; then\n  upgrade\nfi\n\nif [[ $DOWNLOAD == true ]]; then\n  latest=$(`echo getLatestReleaseVersion`)\n  if [[ -n $latest ]]; then\n    download $RELEASE_URL/download/$latest/$JAR_NAME $latest\n    exit\n  else\n    echo 'info: not getting the latest version'\n  fi\nfi\n\nif [[ $ALL_OPT_LENGTH -eq 0 || $ALL_OPT_LENGTH -gt 0 ]]; then\n  restart\nfi\n\nif [[ $RUN == true ]]; then\n  restart\nfi\n\n"
        },
        {
          "name": "ver.sh",
          "type": "blob",
          "size": 0.904296875,
          "content": "#!/bin/bash\nset -x \ncurrentBranch=`git rev-parse --abbrev-ref HEAD`\n\nif [ \"$currentBranch\"x != \"master\"x ]\nthen\n  echo The current branch is not master. Please checkout into master.\n  exit 1\nelse\n  git pull origin master\nfi\n\nversionName=`git describe --tags`\nversionCode=`git rev-list HEAD --count`\nversionBranch=version/$versionName\n\ngit checkout -b $versionBranch\nif [ $? -ne 0 ]\nthen\n  echo A branch named $versionBranch already exists. Will delete the local and remote branch and re run.\n  git branch -D $versionBranch\n  git push origin :$versionBranch\n  git checkout -b $versionBranch\nfi\n\n\nversionPath=\"src/main/java/org/tron/program/Version.java\"\nsed -i -e \"s/VERSION_NAME.*$/VERSION_NAME = \\\"$versionName\\\";/g;s/VERSION_CODE.*$/VERSION_CODE = \\\"$versionCode\\\";/g\" $versionPath\ngit add $versionPath\ngit commit -m \"update a new version. version name:$versionName,version code:$versionCode\"\ngit push origin $versionBranch\n"
        }
      ]
    }
  ]
}