{
  "metadata": {
    "timestamp": 1736608850522,
    "page": 12,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "j-easy/easy-rules",
      "stars": 4962,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.087890625,
          "content": ".idea/\n*.iml\n**/target/*\nsite/_site\n.project\n.settings\n.classpath\n**/.gradle/*\n**/build/*\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.0908203125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2021 Mahmoud Ben Hassine (mahmoud.benhassine@icloud.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.2041015625,
          "content": "***\n\n<div align=\"center\">\n    <b><em>Easy Rules</em></b><br>\n    The simple, stupid rules engine for Java&trade;\n</div>\n\n<div align=\"center\">\n\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat)](http://opensource.org/licenses/MIT)\n[![Build Status](https://github.com/j-easy/easy-rules/workflows/Java%20CI/badge.svg)](https://github.com/j-easy/easy-rules/actions)\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.jeasy/easy-rules-core/badge.svg?style=flat)](http://search.maven.org/#artifactdetails|org.jeasy|easy-rules-core|4.1.0|)\n[![Javadoc](https://www.javadoc.io/badge/org.jeasy/easy-rules-core.svg)](http://www.javadoc.io/doc/org.jeasy/easy-rules-core)\n[![Project status](https://img.shields.io/badge/Project%20status-Maintenance-orange.svg)](https://img.shields.io/badge/Project%20status-Maintenance-orange.svg)\n\n</div>\n\n***\n\n## Project status\n\nAs of December 2020, Easy Rules is in maintenance mode. This means only bug fixes will be addressed from now on.\nVersion 4.1.x is the only supported version. Please consider upgrading to this version at your earliest convenience.\n\n## Latest news\n\n* 06/12/2020: Version 4.1 is out with a new module to support [Apache JEXL](https://commons.apache.org/proper/commons-jexl/) as an additional supported expression language! You can find all details about other changes in the [release notes](https://github.com/j-easy/easy-rules/releases).\n\n## What is Easy Rules?\n\nEasy Rules is a Java rules engine inspired by an article called *\"[Should I use a Rules Engine?](http://martinfowler.com/bliki/RulesEngine.html)\"* of [Martin Fowler](http://martinfowler.com/) in which Martin says:\n\n> You can build a simple rules engine yourself. All you need is to create a bunch of objects with conditions and actions, store them in a collection, and run through them to evaluate the conditions and execute the actions.\n\nThis is exactly what Easy Rules does, it provides the `Rule` abstraction to create rules with conditions and actions, and the `RulesEngine` API that runs through a set of rules to evaluate conditions and execute actions.\n\n## Core features\n\n * Lightweight library and easy to learn API\n * POJO based development with an annotation programming model\n * Useful abstractions to define business rules and apply them easily with Java\n * The ability to create composite rules from primitive ones\n * The ability to define rules using an Expression Language (Like MVEL, SpEL and JEXL)\n\n## Example\n\n### 1. First, define your rule..\n\n#### Either in a declarative way using annotations:\n\n```java\n@Rule(name = \"weather rule\", description = \"if it rains then take an umbrella\")\npublic class WeatherRule {\n\n    @Condition\n    public boolean itRains(@Fact(\"rain\") boolean rain) {\n        return rain;\n    }\n    \n    @Action\n    public void takeAnUmbrella() {\n        System.out.println(\"It rains, take an umbrella!\");\n    }\n}\n```\n\n#### Or in a programmatic way with a fluent API:\n\n```java\nRule weatherRule = new RuleBuilder()\n        .name(\"weather rule\")\n        .description(\"if it rains then take an umbrella\")\n        .when(facts -> facts.get(\"rain\").equals(true))\n        .then(facts -> System.out.println(\"It rains, take an umbrella!\"))\n        .build();\n```\n\n#### Or using an Expression Language:\n\n```java\nRule weatherRule = new MVELRule()\n        .name(\"weather rule\")\n        .description(\"if it rains then take an umbrella\")\n        .when(\"rain == true\")\n        .then(\"System.out.println(\\\"It rains, take an umbrella!\\\");\");\n```\n\n#### Or using a rule descriptor:\n\nLike in the following `weather-rule.yml` example file:\n\n```yaml\nname: \"weather rule\"\ndescription: \"if it rains then take an umbrella\"\ncondition: \"rain == true\"\nactions:\n  - \"System.out.println(\\\"It rains, take an umbrella!\\\");\"\n```\n\n```java\nMVELRuleFactory ruleFactory = new MVELRuleFactory(new YamlRuleDefinitionReader());\nRule weatherRule = ruleFactory.createRule(new FileReader(\"weather-rule.yml\"));\n```\n\n### 2. Then, fire it!\n\n```java\npublic class Test {\n    public static void main(String[] args) {\n        // define facts\n        Facts facts = new Facts();\n        facts.put(\"rain\", true);\n\n        // define rules\n        Rule weatherRule = ...\n        Rules rules = new Rules();\n        rules.register(weatherRule);\n\n        // fire rules on known facts\n        RulesEngine rulesEngine = new DefaultRulesEngine();\n        rulesEngine.fire(rules, facts);\n    }\n}\n```\n\nThis is the hello world of Easy Rules. You can find other examples like the [Shop](https://github.com/j-easy/easy-rules/wiki/shop), [Airco](https://github.com/j-easy/easy-rules/wiki/air-conditioning) or [WebApp](https://github.com/j-easy/easy-rules/wiki/web-app) tutorials in the wiki.\n\n## Contribution\n\nYou are welcome to contribute to the project with pull requests on GitHub.\nPlease note that Easy Rules is in [maintenance mode](https://github.com/j-easy/easy-rules#project-status),\nwhich means only pull requests for bug fixes will be considered.\n\nIf you believe you found a bug or have any question, please use the [issue tracker](https://github.com/j-easy/easy-rules/issues).\n\n## Awesome contributors\n\n* [Alexey1Gavrilov](https://github.com/Alexey1Gavrilov)\n* [andersonkyle](https://github.com/andersonkyle)\n* [aston2016](https://github.com/aston2016)\n* [avakimov](https://github.com/avakimov)\n* [beccagaspard](https://github.com/beccagaspard)\n* [bpoussin](https://github.com/bpoussin)\n* [cgonul](https://github.com/cgonul)\n* [cemo](https://github.com/cemo)\n* [dagframstad](https://github.com/dagframstad)\n* [danrivcap](https://github.com/danrivcap)\n* [Desislav-Petrov](https://github.com/Desislav-Petrov)\n* [drem-darios](https://github.com/drem-darios)\n* [gs-spadmanabhan](https://github.com/gs-spadmanabhan)\n* [JurMarky](https://github.com/JurMarky)\n* [jordanjennings](https://github.com/jordanjennings)\n* [kayeight](https://github.com/kayeight)\n* [khandelwalankit](https://github.com/khandelwalankit)\n* [lranasingha](https://github.com/lranasingha)\n* [laurikimmel](https://github.com/laurikimmel)\n* [mrcritical](https://github.com/mrcritical)\n* [paulbrejla](https://github.com/paulbrejla)\n* [richdouglasevans](https://github.com/richdouglasevans)\n* [ruanjiehui](https://github.com/ruanjiehui)\n* [spearway](https://github.com/spearway)\n* [stefanbirkner](https://github.com/stefanbirkner)\n* [toudidel](https://github.com/toudidel)\n* [vinoct6](https://github.com/vinoct6)\n* [wg1j](https://github.com/wg1j)\n* [will-gilbert](https://github.com/will-gilbert)\n* [WayneCui](https://github.com/WayneCui)\n* [sanmibuh](https://github.com/sanmibuh)\n* [shivmitra](https://github.com/shivmitra)\n* [zhhaojie](https://github.com/zhhaojie)\n\nThank you all for your contributions!\n\n## Easy Rules in other languages\n\n* [EasyRulesGo](https://github.com/CrowdStrike/easyrulesgo) : A port of EasyRules to Golang by [@jiminoc](https://github.com/jiminoc)\n* [EasyRulesGroovy](https://github.com/will-gilbert/easyrules-tutorials-groovy) : A port of EasyRules tutorials to Groovy by [@will-gilbert](https://github.com/will-gilbert)\n* [EasyRulesCsharp](https://github.com/feldrim/EasyRulesCsharp) : A port of EasyRules to CSharp (WIP) by [@feldrim](https://github.com/feldrim)\n\n## Who is using Easy Rules?\n\n* [Apache Nifi](https://nifi.apache.org) (see [Nifi EasyRules Bundle](https://github.com/apache/nifi/tree/rel/nifi-1.12.1/nifi-nar-bundles/nifi-easyrules-bundle))\n* [Open Remote](https://openremote.io) (see [build.gradle](https://github.com/openremote/openremote/blob/v1.0.4/model/build.gradle#L27))\n* [Open Smart Register Platform](http://smartregister.org) (see [build.gradle](https://github.com/OpenSRP/opensrp-client-anc/blob/v1.5.0/opensrp-anc/build.gradle#L196))\n* [Toad Edge by Quest](https://support.quest.com/fr-fr/technical-documents/toad-edge/2.1/user-guide/14)\n* [Extreme Networks](https://cloud.kapostcontent.net/pub/c4c24aae-b82d-44e4-8d86-01c235e4b40f/open-source-declaration-for-extr-xmc-8-dot-5)\n\n## Credits\n\n![YourKit Java Profiler](https://www.yourkit.com/images/yklogo.png)\n\nMany thanks to [YourKit, LLC](https://www.yourkit.com/) for providing a free license of [YourKit Java Profiler](https://www.yourkit.com/java/profiler/index.jsp) to support the development of Easy Rules.\n\n## License\n\nEasy Rules is released under the terms of the MIT license:\n\n```\nThe MIT License (MIT)\n\nCopyright (c) 2021 Mahmoud Ben Hassine (mahmoud.benhassine@icloud.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n```\n"
        },
        {
          "name": "easy-rules-archetype",
          "type": "tree",
          "content": null
        },
        {
          "name": "easy-rules-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "easy-rules-jexl",
          "type": "tree",
          "content": null
        },
        {
          "name": "easy-rules-mvel",
          "type": "tree",
          "content": null
        },
        {
          "name": "easy-rules-spel",
          "type": "tree",
          "content": null
        },
        {
          "name": "easy-rules-support",
          "type": "tree",
          "content": null
        },
        {
          "name": "easy-rules-tutorials",
          "type": "tree",
          "content": null
        },
        {
          "name": "licence-header-template.txt",
          "type": "blob",
          "size": 1.111328125,
          "content": "The MIT License\n\n Copyright (c) ${currentYear}, Mahmoud Ben Hassine (mahmoud.benhassine@icloud.com)\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE."
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 8.1875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.sonatype.oss</groupId>\n        <artifactId>oss-parent</artifactId>\n        <version>7</version>\n    </parent>\n\n    <groupId>org.jeasy</groupId>\n    <artifactId>easy-rules</artifactId>\n    <version>4.1.1-SNAPSHOT</version>\n\n    <modules>\n        <module>easy-rules-archetype</module>\n        <module>easy-rules-core</module>\n        <module>easy-rules-tutorials</module>\n        <module>easy-rules-mvel</module>\n        <module>easy-rules-support</module>\n        <module>easy-rules-spel</module>\n        <module>easy-rules-jexl</module>\n    </modules>\n\n    <packaging>pom</packaging>\n\n    <name>Easy Rules</name>\n    <description>Easy Rules is a simple, stupid rules engine for Java</description>\n    <url>http://www.github.com/j-easy/easy-rules</url>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <java.version>1.8</java.version>\n        <junit.version>4.13.1</junit.version>\n        <assertj.version>3.18.1</assertj.version>\n        <mockito.version>3.6.0</mockito.version>\n        <system-lambda.version>1.1.1</system-lambda.version>\n        <slf4j.version>1.7.30</slf4j.version>\n        <jackson.version>2.11.3</jackson.version>\n        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>\n        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>\n        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>\n        <maven-javadoc-plugin.version>3.2.0</maven-javadoc-plugin.version>\n        <maven-license-plugin.version>3.0</maven-license-plugin.version>\n        <maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>\n    </properties>\n\n    <scm>\n        <url>git@github.com:j-easy/easy-rules.git</url>\n        <connection>scm:git:git@github.com:j-easy/easy-rules.git</connection>\n        <developerConnection>scm:git:git@github.com:j-easy/easy-rules.git</developerConnection>\n        <tag>HEAD</tag>\n    </scm>\n\n    <issueManagement>\n        <system>GitHub</system>\n        <url>https://github.com/j-easy/easy-rules/issues</url>\n    </issueManagement>\n\n    <ciManagement>\n        <system>Github Actions</system>\n        <url>https://github.com/j-easy/easy-rules/actions</url>\n    </ciManagement>\n\n    <developers>\n        <developer>\n            <id>benas</id>\n            <name>Mahmoud Ben Hassine</name>\n            <url>http://benas.github.io</url>\n            <email>mahmoud.benhassine@icloud.com</email>\n            <roles>\n                <role>Lead developer</role>\n            </roles>\n        </developer>\n    </developers>\n\n    <licenses>\n        <license>\n            <name>MIT License</name>\n            <url>http://opensource.org/licenses/mit-license.php</url>\n        </license>\n    </licenses>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-simple</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>${junit.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.assertj</groupId>\n                <artifactId>assertj-core</artifactId>\n                <version>${assertj.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.mockito</groupId>\n                <artifactId>mockito-core</artifactId>\n                <version>${mockito.version}</version>\n                <scope>test</scope>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-release-plugin</artifactId>\n                    <version>${maven-release-plugin.version}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>${maven-compiler-plugin.version}</version>\n                    <configuration>\n                        <verbose>true</verbose>\n                        <source>${java.version}</source>\n                        <target>${java.version}</target>\n                        <showWarnings>true</showWarnings>\n                        <compilerArgs>\n                            <arg>-verbose</arg>\n                            <arg>-Xlint:unchecked</arg>\n                        </compilerArgs>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>${maven-surefire-plugin.version}</version>\n                    <configuration>\n                        <includes>\n                            <include>**/*Test*.java</include>\n                        </includes>\n                        <reportFormat>html</reportFormat>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <version>${maven-javadoc-plugin.version}</version>\n                    <executions>\n                        <execution>\n                            <phase>install</phase>\n                            <goals>\n                                <goal>javadoc</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>com.mycila</groupId>\n                    <artifactId>license-maven-plugin</artifactId>\n                    <version>${maven-license-plugin.version}</version>\n                    <configuration>\n                        <properties>\n                            <currentYear>2020</currentYear>\n                        </properties>\n                        <strictCheck>true</strictCheck>\n                        <includes>\n                            <include>src/**/*.java</include>\n                        </includes>\n                        <mapping>\n                            <java>SLASHSTAR_STYLE</java>\n                        </mapping>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <phase>validate</phase>\n                            <goals>\n                                <goal>format</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>${maven-enforcer-plugin.version}</version>\n                <executions>\n                    <execution>\n                        <id>enforce-dependency-convergence</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <dependencyConvergence />\n                            </rules>\n                            <fail>true</fail>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n"
        }
      ]
    }
  ]
}