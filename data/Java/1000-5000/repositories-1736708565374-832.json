{
  "metadata": {
    "timestamp": 1736708565374,
    "page": 832,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "BaronZ88/MinimalistWeather",
      "stars": 2444,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.064453125,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea\n.DS_Store\n/build\n/captures\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.4052734375,
          "content": "# MinimalistWeather\n\n> 欢迎关注微信公众号：**BaronTalk**\n\n\n## 一. 前言\n\n推荐阅读：\n\n* [安居客 Android 项目架构演进](https://mp.weixin.qq.com/s?__biz=MzU4ODM2MjczNA==&mid=2247483731&idx=1&sn=76bd5612ba723171b6ebac69aaf039f8&chksm=fddca7d2caab2ec4eec8736cf4005615c401984e2218a0cfc71dddfe3a204495c4e8a7312b4a&scene=38#wechat_redirect)\n* [Android 模块化探索与实践](https://mp.weixin.qq.com/s?__biz=MzU4ODM2MjczNA==&mid=2247483732&idx=1&sn=b7ee1151b2c8ad2e997b8db39adf3267&chksm=fddca7d5caab2ec33905cc3350f31c0c98794774b0d04a01845565e3989b1f20205c7f432cb9&scene=38#wechat_redirect)\n\n**MinimalistWeather 是 Android 平台上一款开源天气 App ，目前还在开发中。项目基于 MVP 架构，采用各主流开源库实现。开发此项目主要是为展示各种开源库的使用方式以及 Android 项目的设计方案，并作为团队项目开发规范的一部分。**\n\n采用的开源库包括：\n\n* RxJava\n* Retrofit2\n* OKHttp3\n* ORMLite\n* Dagger2\n* ButterKnife\n* RetroLambda\n* Stetho\n\n**本项目还展示了：**\n\n* MVP+RxJava在实际项目中的应用，MVP中RxJava生命周期的管理...；\n* 上述罗列的各种开源框架的使用方法；\n* Java8 Lambda表达式和Stream API的用法；\n* 怎样适配Material Design；\n* ToolBar、RecycleView、CardView、CoordinatorLayout等新控件的用法；\n* Gradle的基本配置（包括签名打包、项目依赖等等）；\n* 如何更好的管理Gradle依赖库的版本；\n* 代码混淆配置；\n* 如何快速开发一款结构清晰、可扩展性强的Android Application。\n\n## 二. 项目结构设计图\n\n![架构设计图](framework_minimalist_weather.png)\n\n## 三. 项目包结构介绍\n\n**App Module包结构**\n\n```Java\n-com.baronzhang.android.weather\n    + base\t  // MVP 各组件的基类及相关基础类\n    + data    // MVP 中所有 Model 层的数据处理都在这里\n    - feature       // 业务 feature，feature 内按页面划分，如果是大型项目可以按业务模块划分，对于特大型项目建议走模块化（组件化）方案，每个业务模块再按照 MinimalistWeather 的分包规则来分包\n        + home\n        - selectcity\n            - xxActivity.java // Activity 作为全局的控制者，用来负责创建 View 和 Presenter 的实例\n            - xxFragment.java \n            - xxPresenter.java\n            - xxContract.java // 契约类，用来统一管理 View 和 Presenter 的接口\n    + util\n    - AppConstants.java        // App 全局常量\n    - WeatherApplication.java  // Application 类\n    - WelcomeActivity.java     // 放在这里是为了便于查找应用程序入口\n```\n\n**欢迎扫码关注公众号交流**\n\n<div align=\"center\"><img src=\"http://resources.baronzhang.com/blog/common/gzh3.png\" width=\"80%\"/></div>\n\n## 三. 开源许可 [![Hex.pm](https://img.shields.io/hexpm/l/plug.svg)](https://www.apache.org/licenses/LICENSE-2.0)\n\n```\nCopyright 2017 Baron Zhang\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.5947265625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\napply from: \"dependencies.gradle\"\n\nbuildscript {\n    repositories {\n        jcenter()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.6.3'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        maven { url 'https://jitpack.io' }\n        google()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "dependencies.gradle",
          "type": "blob",
          "size": 3.6650390625,
          "content": "//def supportVersion = \"28.0.0\"\ndef rxBindingVersion = \"0.4.0\"\ndef retrofitVersion = \"2.5.0\"\ndef okHttpVersion = \"3.14.0\"\ndef stethoVersion = \"1.5.0\"\ndef butterKnifeVersion = \"10.1.0\"\ndef daggerVersion = \"2.8\"\ndef ormLiteVersion = \"4.48\"\ndef fastJsonVersion = \"1.1.60.android\"\n\nproject.ext {\n    android = [\n            compileSdkVersion: 28,\n            applicationId    : \"com.baronzhang.android.weather\",\n            minSdkVersion    : 19,\n            targetSdkVersion : 28,\n            versionCode      : 1,\n            versionName      : \"1.0\"\n    ]\n\n    dependencies = [\n            //android-support\n//            \"support-v4\"                  : \"com.android.support:support-v4:${supportVersion}\",\n//            \"appcompat-v7\"                : \"com.android.support:appcompat-v7:${supportVersion}\",\n//            \"design\"                      : \"com.android.support:design:${supportVersion}\",\n//            \"recyclerview\"                : \"com.android.support:recyclerview-v7:${supportVersion}\",\n//            \"cardview\"                    : \"com.android.support:cardview-v7:${supportVersion}\",\n\n            \"support-v4\"                  : \"androidx.legacy:legacy-support-v4:1.0.0\",\n            \"appcompat-v7\"                : \"androidx.appcompat:appcompat:1.0.0\",\n            \"design\"                      : \"com.google.android.material:material:1.0.0-rc01\",\n            \"recyclerview\"                : \"androidx.recyclerview:recyclerview:1.0.0\",\n            \"cardview\"                    : \"androidx.cardview:cardview:1.0.0\",\n\n            //java8-support\n            \"stream\"                      : \"com.annimon:stream:1.0.8\",\n\n            //rx\n            \"rxandroid\"                   : \"io.reactivex:rxandroid:1.2.1\",\n            \"rxbinding\"                   : \"com.jakewharton.rxbinding:rxbinding:${rxBindingVersion}\",\n            \"rxbinding-support-v4\"        : \"com.jakewharton.rxbinding:rxbinding-support-v4:${rxBindingVersion}\",\n            \"rxbinding-appcompat-v7\"      : \"com.jakewharton.rxbinding:rxbinding-appcompat-v7:${rxBindingVersion}\",\n            \"rxbinding-design\"            : \"com.jakewharton.rxbinding:rxbinding-design:${rxBindingVersion}\",\n            \"rxbinding-recyclerview-v7\"   : \"com.jakewharton.rxbinding:rxbinding-recyclerview-v7:${rxBindingVersion}\",\n\n            //retrofit\n            \"retrofit\"                    : \"com.squareup.retrofit2:retrofit:${retrofitVersion}\",\n            \"adapter-rxjava\"              : \"com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}\",\n\n            //dagger\n            \"dagger\"                      : \"com.google.dagger:dagger:${daggerVersion}\",\n            \"dagger-compiler\"             : \"com.google.dagger:dagger-compiler:${daggerVersion}\",\n\n            //facebook\n            \"stetho\"                      : \"com.facebook.stetho:stetho:${stethoVersion}\",\n            \"stetho-okhttp3\"              : \"com.facebook.stetho:stetho-okhttp3:${stethoVersion}\",\n\n            //others\n            \"okhttp3-logging-interceptor\" : \"com.squareup.okhttp3:logging-interceptor:${okHttpVersion}\",\n            \"ormlite-android\"             : \"com.j256.ormlite:ormlite-android:${ormLiteVersion}\",\n            \"fastjson\"                    : \"com.alibaba:fastjson:${fastJsonVersion}\",\n            \"butterknife\"                 : \"com.jakewharton:butterknife:${butterKnifeVersion}\",\n            \"butterknife-compiler\"        : \"com.jakewharton:butterknife-compiler:${butterKnifeVersion}\",\n            \"retrofit2-fastjson-converter\": \"com.github.BaronZ88:Retrofit2-FastJson-Converter:1.2\",\n            \"SmartRefreshLayout\"          : \"com.scwang.smartrefresh:SmartRefreshLayout:1.0.3\",\n            \"SmartRefreshHeader\"          : \"com.scwang.smartrefresh:SmartRefreshHeader:1.0.3\"\n    ]\n}"
        },
        {
          "name": "framework_minimalist_weather.png",
          "type": "blob",
          "size": 245.6552734375,
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8515625,
          "content": "## For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n#\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx1024m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n#\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n#Wed Apr 29 01:18:35 CST 2020\nandroid.enableJetifier=true\norg.gradle.jvmargs=-Xmx1536M -Dkotlin.daemon.jvm.options\\=\"-Xmx1536M\"\nandroid.useAndroidX=true\nandroid.enableBuildCache=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.037109375,
          "content": "include ':app', ':library', ':widget'\n"
        },
        {
          "name": "widget",
          "type": "tree",
          "content": null
        },
        {
          "name": "扫码关注.png",
          "type": "blob",
          "size": 73.7197265625,
          "content": null
        }
      ]
    }
  ]
}