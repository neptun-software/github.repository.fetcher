{
  "metadata": {
    "timestamp": 1736708542121,
    "page": 779,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vector4wang/spring-boot-quick",
      "stars": 2521,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".DS_Store",
          "type": "blob",
          "size": 6.00390625,
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.44921875,
          "content": "*.class\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.ear\n*.zip\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n\ntarget/\n!.mvn/wrapper/maven-wrapper.jar\n\n### STS ###\n.apt_generated\n.classpath\n.factorypath\n.project\n.settings\n.springBeans\n\n### IntelliJ IDEA ###\n.idea\n*.iws\n*.iml\n*.ipr\n\n### NetBeans ###\nnbproject/private/\nbuilds/\nnbbuild/\ndist/\nnbdist/\n.nb-gradle/\n\nlog/\nlogs/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0673828125,
          "content": "language: java\n\njdk:\n    - oraclejdk9\n\ninstall: true\n\nscript: test -B"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.056640625,
          "content": "欢迎大家留言和PR~\n\n> Tip: 技术更新换代太快，本仓库仅做参考，自己的项目具体使用哪个版本还需谨慎思考~(不推荐使用最新的版本，推荐使用(最新-1|2)的版本，会比较稳定)\n\n# spring-boot-quick\n[![LICENSE](https://img.shields.io/badge/license-Anti%20996-blue.svg)](https://github.com/996icu/996.ICU/blob/master/LICENSE)\n[![知识共享协议（CC协议）](https://img.shields.io/badge/License-Creative%20Commons-DC3D24.svg)](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)\n[![Build Status](https://travis-ci.org/vector4wang/spring-boot-quick.svg?branch=master)](https://travis-ci.org/vector4wang/spring-boot-quick)\n[![Average time to resolve an issue](http://isitmaintained.com/badge/resolution/vector4wang/spring-boot-quick.svg)](http://isitmaintained.com/project/vector4wang/spring-boot-quick \"Average time to resolve an issue\")\n[![Percentage of issues still open](http://isitmaintained.com/badge/open/vector4wang/spring-boot-quick.svg)](http://isitmaintained.com/project/vector4wang/spring-boot-quick \"Percentage of issues still open\")\n[![GitHub stars](https://img.shields.io/github/stars/vector4wang/spring-boot-quick.svg?style=flat&label=Star)](https://github.com/vector4wang/spring-boot-quick/stargazers)\n[![GitHub forks](https://img.shields.io/github/forks/vector4wang/spring-boot-quick.svg?style=flat&label=Fork)](https://github.com/vector4wang/spring-boot-quick/fork)\n\n# 前言\n　　自己很早就想搞一个总的仓库就是将自己平时遇到的和学习到的东西整合在一起，方便后面用的时候快速的查找与使用，之前是通过branch\n的方式去整理，感觉不直观，一咬牙就花了点时间将所有的分支整合在一起（之前使用branch方式的兄dei，这里对不住了，你们可以将之前的干掉，重新克隆总的），方便自己也方便大家参考，以下是我的相关博客，有兴趣的\n可以去浏览浏览，觉得对自己有点启发或者解决了一些问题，可以点个赞~\n\n[![](https://img.shields.io/badge/CSDN-@%E7%88%86%E7%B1%B3%E8%8A%B1%E6%9C%BA%E6%9E%AA%E6%89%8B-red.svg)](http://blog.csdn.net/qqhjqs?viewmode=list)\n[![](https://img.shields.io/badge/BLOG-@%E5%86%AC%E4%B8%8E%E6%99%A8-lightgrey.svg)](http://blog.wangxc.club)\n[![](https://img.shields.io/badge/%E7%AE%80-@%E5%86%AC%E4%B8%8E%E6%99%A8-E9705E.svg)](https://www.jianshu.com/u/223a1314e818)\n[![](https://img.shields.io/badge/Github-@vector4wang-25292E.svg)](https://github.com/vector4wang)\n[![](https://img.shields.io/badge/%E7%A0%81%E4%BA%91-@BMHJQS-C5212A.svg)](https://gitee.com/backwxc)\n\n```bash\n.\n├── README.md\n├── pom.xml\n├── quick-activemq\n├── quick-activemq2\n├── quick-async\n├── quick-batch\n├── quick-cache\n├── quick-config-encrypt\n├── quick-docker\n├── quick-dubbo\n├── quick-dynamic-bean\n├── quick-exception\n├── quick-feign\n├── quick-hbase\n├── quick-img2txt\n├── quick-jdbc\n├── quick-jpa\n├── quick-jsp\n├── quick-jwt\n├── quick-kafka\n├── quick-log\n├── quick-logback\n├── quick-lombok\n├── quick-modules\n├── quick-monitor-thread\n├── quick-multi-data\n├── quick-multi-rabbitmq\n├── quick-mybatis-druid\n├── quick-oauth2\n├── quick-okhttp\n├── quick-oss\n├── quick-package-assembly\n├── quick-package-assembly-multi-env\n├── quick-rabbitmq\n├── quick-redies\n├── quick-rest-template\n├── quick-rocketmq\n├── quick-starter\n├── quick-starter-demo\n├── quick-swagger\n├── quick-vue\n├── quick-vw-crawler\n└── quick-wx-public\n\n\n```\n\n## spring-boot-quick\n基于springboot的快速学习示例\n\n\n## 所有分支介绍\n\n## quick-idea\n\n- 自己用idea的配置\n- ignore的模板\n\n## quick-crawler 平时的爬虫\n\n- 领英爬虫\n- 百度搜索领英种子url爬虫和\"随机应变\"的处理方式 （没想到现在对领英爬虫的需求这么大，最近给一个客户开了自动抓取领英数据的系统，处于安全，就把代码删掉了）\n- 一键导出CSDN某用户的所有博客内容并转换为MD格式到本地\n\n已经将爬虫模块迁移到[crawlers](https://github.com/vector4wang/Crawlers)\n\n## quick-swagger \n\n - web接口的规范化示例\n - 添加了当传递参数为对象时，如何使用swagger注解\n \n 注意:*如果接受参数是已@RequestBody方式并且参数中包含日期类型的参数，可在对应模型的日期属性上面添加`@JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\")`注解*\n 如\n```java\n    @JsonFormat(pattern = \"yyyy-MM-dd HH:mm:ss\",locale = \"zh\" , timezone=\"GMT+8\") // 注意时区的设置\n    private Date birthday; // 出生日期\n```\n\nswagger升级到2.7版本，添加了使用swagger验证功能，注意这里不是auth2鉴权\n\n\n## quick-thread \njava线程池Executor的示例 [点我](https://github.com/vector4wang/java-learning-quick/tree/master/src/feature_learn/thread/future)\n\n\n## quick-modules  \nspringboot 模块化开发示例\n\n\n## quick-mybatis-druid\nspringboot整合mybatis和阿里云的druid监控功能，日志可以控制sql的输出\n添加springboot的health监控，链接如下\n\n| HTTP方法 | 路径 | 描述 | 鉴权 |\n|---|---|---|---|\n| GET | /autoconfig | 查看自动配置的使用情况，该报告展示所有auto-configuration候选者及它们被应用或未被应用的原因 | true |\n| GET | /configprops | 显示一个所有@ConfigurationProperties的整理列表 | true |\n| GET | /beans | 显示一个应用中所有Spring Beans的完整列表 | true |\n| GET | /dump | 打印线程栈 | true |\n| GET | /env | 查看所有环境变量 | true |\n| GET | /env/{name} | 查看具体变量值 | true |\n| GET | /health | 查看应用健康指标 | false |\n| GET | /info | 查看应用信息 | false |\n| GET | /mappings | 查看所有url映射 | true |\n| GET | /metrics | 查看应用基本指标 | true |\n| GET | /metrics/{name} | 查看具体指标 | true |\n| POST | /shutdown | 允许应用以优雅的方式关闭（默认情况下不启用） | true |\n| GET | /trace | 查看基本追踪信息 | true |\n\n## quick-multi-data\n- springboot mybatis 多数据源配置，别忘了为多数据源的连接池配置\n- 改为druid多数据源，方便监控数据库查询和性能\n \n\n## quick-spark \nspringboot整合spark示例 已抽离 [点我](https://github.com/vector4wang/quick-spark-process/tree/master/sb-word-count)\n\n\n## quick-package-assembly \n\n- maven打包示例包含jar的启动与停止脚本(简单粗暴，慎重考虑再使用)\n- 使用assembly打包mybatis产生的xml时，可将对应mapperxml文件放在resources文件，然后再application.properties里配置对应路径，如\n `mybatis.mapperLocations=classpath:mapper/*.xml` 这里需要注意一下\n\n## quick-package-assembly-multi-env\n程序 依赖包 分开化的多环境部署\n\n## quick-tika \napache的文本抽取开源框架，整合到springboot中\n\n\n## quick-ElasticSearch \n关于es搜索的相关内容\n     现在在学习Elasticsearch+Logstash+Kibana 后续会有相关博文、和代码示例~\n\n注意：想要用好es，搜索是关键  移步[这里](https://github.com/vector4wang/quick-elasticsearch)\n \n \n## quick-img2txt 图片与文字转换的程序示例\n- 文字转换成图片\n- 图片转换为txt，可作为一些程序启动的注释，如佛祖注释，spring启动注释，等等，可以根据你输入的图片制作(背景一定要为白色)，如\n\n前方预警！！！！\n\n![转换前](https://ooo.0o0.ooo/2017/06/11/593c2c1d64882.jpg)\n![转换后](https://ooo.0o0.ooo/2017/06/11/593c2a4b4980f.jpg)\n-  **验证码识别** 使用easyocr(项目地址)提供的api接口，可以识别验证码，这简直是小虫子的福利，就问你怕不怕!(现在收费了。。。)\n\n\n\n## quick-batch \n\nspring下的批量处理大数据模块，这里是从mysql里读取然后再写入mysql中，可以借鉴下，来源https://github.com/geekyjaat/spring-batch\n\n## quick-rabbit\n\nrabbit模块\n做了个接口服务\n\n![ui](http://upload-images.jianshu.io/upload_images/3167229-945c72c2569f754a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\n应网友@Android-BRUCE 的要求，添加了延迟队列的处理方式，包括针对消息和针对队列的处理方式\n\n[![WX20180613-233153@2x.png](https://i.loli.net/2018/06/13/5b213948c6e1a.png)](https://i.loli.net/2018/06/13/5b213948c6e1a.png)\n\n一定要把图看懂。。。\n**友情提示：如果在刚开始queue与exchange绑定错了强烈建议从Rabbit管理页面上删除对应的配置再测试！！！**\n\n## quick-exception\n\nspringboot下统一处理异常方法，即，在请求没到达对应controller报错之后的处理方法，比如404,400和500错误，此处返回的是json字符串，页面的暂时没有\n\n## quick-log\n\n- 使用log4j2作为日志体系。主要实现的功能\n- 控制台输出的是error日志，但是日志文件里存的是info和error日志，并且按年月日生成对应日志文件\n- 控制台颜色输出插件:Grep console\n- 使用AOP输出每个请求的详细日志\n\n## quick-wx-api\n自己开发的小程序(哇哦窝)使用到的api，非常简单，里面集成了阿里封装的httpclient工具包，挺好用的。\n\n## quick-jsp\n前段时间一直没有搞定在springboot中使用jsp，今天抽了点时间搞定了，有几点需要注意的地方\n\n- 创建项目的时候这样选择\"spring initializr-->web\",ok之后的项目的resource下会有tamplates包，可以删掉\n- 创建webapp/WEB-INF目录(具体根据自己喜好，只要在配置文件写对路径就可以了)\n- 然后在pom文件中添加一下配置，目的是为了让webapp下的jsp文件留在META-INF中，让boot访问到\n```xml\n<plugins>\n\t<plugin>\n\t\t<groupId>org.springframework.boot</groupId>\n\t\t<artifactId>spring-boot-maven-plugin</artifactId>\n\t\t<executions>\n\t\t\t<execution>\n\t\t\t\t<goals>\n\t\t\t\t\t<goal>repackage</goal>\n\t\t\t\t</goals>\n\t\t\t</execution>\n\t\t</executions>\n\t</plugin>\n\t<plugin>\n\t\t<groupId>org.apache.maven.plugins</groupId>\n\t\t<artifactId>maven-war-plugin</artifactId>\n\t\t<configuration>\n\t\t\t<failOnMissingWebXml>false</failOnMissingWebXml>\n\t\t</configuration>\n\t</plugin>\n</plugins>\n<resources>\n\t<!-- 打包时将jsp文件拷贝到META-INF目录下-->\n\t<resource>\n\t\t<!-- 指定resources插件处理哪个目录下的资源文件 -->\n\t\t<directory>src/main/webapp</directory>\n\t\t<!--注意此次必须要放在此目录下才能被访问到-->\n\t\t<targetPath>META-INF/resources</targetPath>\n\t\t<includes>\n\t\t\t<include>**/**</include>\n\t\t</includes>\n\t</resource>\n\t<resource>\n\t\t<directory>src/main/resources</directory>\n\t\t<includes>\n\t\t\t<include>**/**</include>\n\t\t</includes>\n\t\t<filtering>false</filtering>\n\t</resource>\n</resources>\n```\n\n## quick-redis\n工作上用到了redis，就添加了redis模块，很简单有key就获取，没有就插入\n\n## quick-rocketmq\n此处的不是Apache 的Rocketmq，是阿里云服务上的一个消息队列\n\n## quick-logback\nspringboot內置的日志管理模块，使用slf4j\n\n## quick-activemq\n- springboot 整合activemq 服务 非常简单，更负责的配置可以自定义containerFactory\n- 添加导出消息队列消息但不消费的方法(慎重使用，不知是否会对mq服务增加压力)\n\n## quick-docker\n\n使用docker部署springboot的示例demo，更多内容请见blog\n\n## quick-dynamic-bean\n根据条件动态的创建bean\n用到的场景:有的时候本地测试不想使用mq，可以在将mq对应consumer bean 加上contional注解，并\n配置条件\n\n2019年03月14日00:12:54更新\n动态创建bean的方式：\n- 动态设置属性；\n- 动态设置属性文件，来改变要生成bean上的注解内容，如@Jmslistener(des=\"${key}\"),我们可以动态改变key来生成不同的bean\n\n## quick-dubbo\n整合dubbo，用的不是官方的dubbo-stater，用的是这个https://github.com/halober/spring-boot-starter-dubbo 配置很详细\n注意dubbo的结构\n\n[![dubbo admin ui](https://i.loli.net/2018/05/25/5b07728002ea8.jpg)](https://i.loli.net/2018/05/25/5b07728002ea8.jpg)\n\n---\n\n---\n\n## quick-vw-crawler\n\n结合比较流行的框架SpringBoot抓取CSDN的数据(有关的Spingboot的使用可以参考[这里](https://github.com/vector4wang/spring-boot-quick))\n有关VW-Cralwer的介绍可以看[这里](https://github.com/vector4wang/vw-crawler),简单轻便开源的一款Java爬虫框架。\n\n## quick-feign\n\n单独使用feign做为请求http接口的客户端工具\n\n(后面会持续更新)\n\n## quick-config-encrypt\n配置加密功能(待完成)\n\n## quick-jwt\n参考https://github.com/murraco/spring-boot-jwt 添加的jwt模块，实现网站的简单鉴权\n\n## quick-hbase\n使用docker搭建hbase环境，springboot集成hbase client，完成基本的CURD；\n\n## quick-kafka\n使用docker搭建的kafka环境，springboot集成kafka，完成消息的接受和发送\n\n## quick-starter\n一个开发xxx-starter的示例，帮助你快速开发和部署自己的xxx-starter\n\n### 温馨提示\n　　如果您自己想在本地跑一跑，可以将其checkout到本地，直接`mvn clean install -U` 就ok了，如果您只想运行某个模块，直接复制配置文件和代码就ok了，如果您在测试某个模块但该模块出错，请尽快联系本人,邮箱:**vector4wang@qq.com**,我会在第一时间将其修复\n\n欢迎star、fork 和 pr\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "mybatis-crypt-plugin-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "mybatis-crypt-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "nacos-common-config",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 3.58984375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.quick</groupId>\n    <artifactId>spring-boot-quick</artifactId>\n    <version>1.0-SNAPSHOT</version>\n    <modules>\n        <!--  基础依赖包 -->\n        <module>quick-platform</module>\n        <module>quick-framework</module>\n        <module>quick-swagger</module>\n        <module>quick-modules</module>\n        <module>quick-package-assembly</module>\n        <module>quick-img2txt</module>\n        <module>quick-batch</module>\n        <module>quick-rabbitmq</module>\n        <module>quick-multi-data</module>\n        <module>quick-package-assembly-multi-env</module>\n        <module>quick-exception</module>\n        <module>quick-log</module>\n        <module>quick-oss</module>\n        <module>quick-jsp</module>\n        <module>quick-mybatis-druid</module>\n        <module>quick-jdbc</module>\n        <module>quick-okhttp</module>\n        <module>quick-redies</module>\n        <module>quick-oauth2</module>\n        <module>quick-jpa</module>\n        <module>quick-rocketmq</module>\n        <module>quick-logback</module>\n        <module>quick-activemq</module>\n        <module>quick-container</module>\n        <module>quick-vue</module>\n        <module>quick-dynamic-bean</module>\n        <module>quick-activemq2</module>\n        <module>quick-dubbo</module>\n        <module>quick-async</module>\n        <module>quick-vw-crawler</module>\n        <module>quick-cache</module>\n        <module>quick-feign</module>\n        <module>quick-config-encrypt</module>\n        <module>quick-jwt</module>\n        <module>quick-wx-public</module>\n        <module>quick-lombok</module>\n        <module>quick-monitor-thread</module>\n        <module>quick-rest-template</module>\n        <module>quick-multi-rabbitmq</module>\n        <module>quick-kafka</module>\n        <module>quick-hbase</module>\n        <module>quick-starter</module>\n        <module>quick-starter-demo</module>\n        <module>quick-mongodb</module>\n        <module>quick-method-evaluate</module>\n        <module>quick-spring-shiro</module>\n        <module>quick-config-server</module>\n        <module>quick-i18n</module>\n        <module>quick-undertow</module>\n        <module>quick-mail</module>\n        <module>quick-graphQL</module>\n        <module>quick-saturn</module>\n        <module>quick-zookeeper</module>\n        <module>quick-app</module>\n        <module>quick-profiles</module>\n        <module>quick-hmac</module>\n        <module>quick-dubbo-nacos</module>\n        <module>nacos-common-config</module>\n        <module>mybatis-crypt-plugin</module>\n        <module>mybatis-crypt-plugin-test</module>\n        <module>quick-shiro</module>\n        <module>quick-camunda</module>\n        <module>quick-flowable</module>\n        <module>quick-sharding-jdbc</module>\n        <module>quick-shiro-cas</module>\n        <module>quick-maven-plugin</module>\n        <module>quick-sse</module>\n        <module>quick-multi-api-invoker</module>\n        <module>quick-abstract-template</module>\n        <module>quick-abstract-template2</module>\n        <module>quick-api-invoker</module>\n        <module>quick-platform-component</module>\n        <module>quick-platform-common</module>\n        <module>quick-sample-server</module>\n    </modules>\n    <packaging>pom</packaging>\n    <description>使用springboot框架做的一些例子，做个记录，以后方便即拿即用</description>\n\n</project>\n"
        },
        {
          "name": "quick-abstract-template",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-abstract-template2",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-activemq",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-activemq2",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-api-invoker",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-archetype",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-async",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-batch",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-camunda",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-config-encrypt",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-config-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-container",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-dubbo-nacos",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-dubbo",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-dynamic-bean",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-exception",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-feign",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-flowable",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-graphQL",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-hbase",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-hmac",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-i18n",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-img2txt",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-jdbc",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-jpa",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-jsp",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-jwt",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-kafka",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-liteflow",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-log",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-logback",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-lombok",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-mail",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-maven-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-method-evaluate",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-mongodb",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-monitor-thread",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-multi-api-invoker",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-multi-data",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-multi-rabbitmq",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-mybatis-druid",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-oauth2",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-okhttp",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-oss",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-package-assembly-multi-env",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-package-assembly",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-platform-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-platform-component",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-platform",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-profiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-rabbitmq",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-redies",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-rest-template",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-rocketmq",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-sample-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-saturn",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-sharding-jdbc",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-shiro-cas",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-shiro",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-spring-shiro",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-sse",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-starter-demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-starter",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-swagger",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-undertow",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-vue",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-vw-crawler",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-wx-public",
          "type": "tree",
          "content": null
        },
        {
          "name": "quick-zookeeper",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}