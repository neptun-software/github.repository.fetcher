{
  "metadata": {
    "timestamp": 1736609081602,
    "page": 341,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "CodePhiliaX/fastexcel",
      "stars": 3532,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.3017578125,
          "content": "root = true\n\n[*.{groovy, java, kt, xml}]\n#缩进风格：空格\nindent_style = space\n#缩进大小\nindent_size = 4\n#换行符lf\nend_of_line = lf\n#字符集utf-8\ncharset = utf-8\n#是否删除行尾的空格\ntrim_trailing_whitespace = true\n#是否在文件的最后插入一个空行\ninsert_final_newline = true"
        },
        {
          "name": ".gitee",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.18359375,
          "content": ".idea/\n*/.settings/\n*.idea\n.DS_Store\n**/.iml*\n*.iml\n**/.class\n**/.classpath\n**/.project\n*/target/\ntarget/\n*.ipr\n*.iws\nantx.properties\noutput/\n.flattened-pom.xml\ndependency-reduced-pom.xml\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2024 CodePhiliaX\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.1630859375,
          "content": "\n[中文](README.md) |[English](README_EN.md) | [日本語](README_JP.md)\n\n## 什么是 FastExcel\n\nFastExcel 是由原 EasyExcel 作者创建的新项目。2023 年我已从阿里离职，近期阿里宣布停止更新 EasyExcel，我决定继续维护和升级这个项目。在重新开始时，我选择为它起名为 FastExcel，以突出这个框架在处理 Excel 文件时的高性能表现，而不仅仅是简单易用。\n\nFastExcel 将始终坚持免费开源，并采用最开放的 MIT 协议，使其适用于任何商业化场景。这为开发者和企业提供了极大的自由度和灵活性。FastExcel 的一些显著特点包括：\n\n- 1、完全兼容原 EasyExcel 的所有功能和特性，这使得用户可以无缝过渡。\n\n- 2、从 EasyExcel 迁移到 FastExcel 只需简单地更换包名和 Maven 依赖即可完成升级。\n\n- 3、在功能上，比 EasyExcel 提供更多创新和改进。\n\n- 4、FastExcel 1.0.0 版本新增了读取 Excel 指定行数和将 Excel 转换为 PDF 的功能。\n\n\n我们计划在未来推出更多新特性，以不断提升用户体验和工具实用性。欢迎大家关注 程序员小懒的公众号 关注FastExcel的发展。FastExcel 致力于成为您处理 Excel 文件的最佳选择。\n\n## 主要特性\n\n- 1. 高性能读写：FastExcel 专注于性能优化，能够高效处理大规模的 Excel 数据。相比一些传统的 Excel 处理库，它能显著降低内存占用。\n- 2. 简单易用：该库提供了简洁直观的 API，使得开发者可以轻松集成到项目中，无论是简单的 Excel 操作还是复杂的数据处理都能快速上手。\n- 3. 流式操作：FastExcel 支持流式读取，将一次性加载大量数据的问题降到最低。这种设计方式在处理数十万甚至上百万行的数据时尤为重要。\n\n\n## 安装\n\n下表列出了各版本 FastExcel 基础库对 Java 语言版本最低要求的情况：\n\n| 版本   | jdk版本支持范围 | 备注                             |\n|--------|:---------------:|----------------------------------|\n| 1.0.0+ | jdk8 - jdk21     | 目前的master分支，完全兼容easyexcel |\n\n我们强烈建议您使用最新版本的 FastExcel，因为最新版本中的性能优化、BUG修复和新功能都会让您的使用更加方便。\n\n> 当前 FastExcel 底层使用 poi 作为基础包，如果您的项目中已经有 poi 相关组件，需要您手动排除 poi 的相关 jar 包。\n\n### Maven\n如果您使用 Maven 进行项目构建，请在 `pom.xml` 文件中引入以下配置：\n```xml\n<dependency>\n    <groupId>cn.idev.excel</groupId>\n    <artifactId>fastexcel</artifactId>\n    <version>1.0.0</version>\n</dependency>\n```\n### Gradle\n如果您使用 Gradle 进行项目构建，请在 `build.gradle` 文件中引入以下配置：\n```gradle\ndependencies {\n    implementation 'cn.idev.excel:fastexcel:1.0.0'\n}\n```\n## EasyExcel 与 FastExcel 的区别\n- 1. FastExcel 支持所有 EasyExcel 的功能，但是 FastExcel 的性能更好，更稳定。\n- 2. FastExcel 与 EasyExcel 的 API 完全一致，可以无缝切换。\n- 3. FastExcel 会持续的更新，修复 bug，优化性能，增加新功能。\n\n## EasyExcel 如何升级到 FastExcel\n\n### 1. 修改依赖\n将 EasyExcel 的依赖替换为 FastExcel 的依赖，如下：\n```xml\n<!-- easyexcel 依赖 -->\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>easyexcel</artifactId>\n    <version>xxxx</version>\n</dependency>\n```\n的依赖替换为\n```xml\n<dependency>\n    <groupId>cn.idev.excel</groupId>\n    <artifactId>fastexcel</artifactId>\n    <version>1.0.0</version>\n</dependency>\n```\n\n### 2. 修改代码\n将 EasyExcel 的包名替换为 FastExcel 的包名，如下：\n```java\n// 将 easyexcel 的包名替换为 FastExcel 的包名\nimport com.alibaba.excel.**;\n```\n替换为\n```java\nimport cn.idev.excel.**;\n```\n### 3. 不修改代码直接依赖 FastExcel\n如果由于种种原因您不想修改代码，可以直接依赖 FastExcel ，然后在 `pom.xml` 文件中直接依赖 FastExcel。\nEasyExcel 与 FastExcel 可以共存，但是长期建议替换为 FastExcel。\n\n### 4. 建议以后使用 FastExcel 类\n为了兼容性考虑保留了 EasyExcel 类，但是建议以后使用 FastExcel 类，FastExcel 类是FastExcel 的入口类，功能包含了 EasyExcel 类的所有功能，以后新特性仅在 FastExcel 类中添加。\n\n\n## 简单示例：读取 Excel 文件\n\n下面是读取 Excel 文档的例子：\n```java\n// 实现 ReadListener 接口，设置读取数据的操作\npublic class DemoDataListener implements ReadListener<DemoData> {\n    @Override\n    public void invoke(DemoData data, AnalysisContext context) {\n        System.out.println(\"解析到一条数据\" + JSON.toJSONString(data));\n    }\n\n    @Override\n    public void doAfterAllAnalysed(AnalysisContext context) {\n        System.out.println(\"所有数据解析完成！\");\n    }\n}\n\npublic static void main(String[] args) {\n    String fileName = \"demo.xlsx\";\n    // 读取 Excel 文件\n    FastExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead();\n}\n```\n\n## 简单示例：创建 Excel 文件\n\n下面是一个创建 Excel 文档的简单例子：\n```java\n// 示例数据类\npublic class DemoData {\n    @ExcelProperty(\"字符串标题\")\n    private String string;\n    @ExcelProperty(\"日期标题\")\n    private Date date;\n    @ExcelProperty(\"数字标题\")\n    private Double doubleData;\n    @ExcelIgnore\n    private String ignore;\n}\n\n// 填充要写入的数据\nprivate static List<DemoData> data() {\n    List<DemoData> list = new ArrayList<>();\n    for (int i = 0; i < 10; i++) {\n        DemoData data = new DemoData();\n        data.setString(\"字符串\" + i);\n        data.setDate(new Date());\n        data.setDoubleData(0.56);\n        list.add(data);\n    }\n    return list;\n}\n\npublic static void main(String[] args) {\n    String fileName = \"demo.xlsx\";\n    // 创建一个名为“模板”的 sheet 页，并写入数据\n    FastExcel.write(fileName, DemoData.class).sheet(\"模板\").doWrite(data());\n}\n```\n\n## 关注作者\n关注作者“程序员小懒“的公众号加入技术交流群，获取更多技术干货和最新动态。\n\n\n<a><img src=\"https://github.com/user-attachments/assets/b40aebe8-0552-4fb2-b184-4cb64a5b1229\" width=\"30%\"/></a>\n\n"
        },
        {
          "name": "README_EN.md",
          "type": "blob",
          "size": 6.5439453125,
          "content": "[中文](README.md) |[English](README_EN.md) | [日本語](README_JP.md)\n\n## What is FastExcel\n\nFastExcel is the latest work created by the original author of EasyExcel. After I left Alibaba in 2023, and with Alibaba announcing the cessation of EasyExcel updates, I decided to continue maintaining and upgrading this project. When restarting, I chose the name FastExcel to emphasize the high performance of this framework when handling Excel files, not just its simplicity and ease of use.\n\nFastExcel will always remain free and open-source, adopting the most open MIT license, making it suitable for any commercial scenarios. This provides developers and enterprises with great freedom and flexibility. Some notable features of FastExcel include:\n\n- 1. Full compatibility with all functionalities and features of the original EasyExcel, allowing users to transition seamlessly.\n- 2. Migrating from EasyExcel to FastExcel only requires a simple change of package name and Maven dependency to complete the upgrade.\n- 3. Functionally, it offers more innovations and improvements than EasyExcel.\n- 4. The FastExcel 1.0.0 version introduced the ability to read a specified number of Excel rows and convert Excel to PDF.\n\nWe plan to introduce more new features in the future to continually enhance user experience and tool usability. Stay tuned to \"Programmer Xiao Lan's\" public account for updates on the development of FastExcel. FastExcel is committed to being your best choice for handling Excel files.\n\n## Key Features\n\n- 1. High-performance Reading and Writing: FastExcel focuses on performance optimization, capable of efficiently handling large-scale Excel data. Compared to some traditional Excel processing libraries, it can significantly reduce memory consumption.\n- 2. Simplicity and Ease of Use: The library offers a simple and intuitive API, allowing developers to easily integrate it into projects, whether for simple Excel operations or complex data processing.\n- 3. Stream Operations: FastExcel supports stream reading, minimizing the problem of loading large amounts of data at once. This design is especially important when dealing with hundreds of thousands or even millions of rows of data.\n\n## Installation\n\nThe following table lists the minimum Java language version requirements for each version of the FastExcel library:\n\n| Version | JDK Version Support Range | Notes                          |\n|---------|:-------------------------:|--------------------------------|\n| 1.0.0+  | JDK8 - JDK21              | Current master branch, fully compatible with EasyExcel |\n\nWe strongly recommend using the latest version of FastExcel, as performance optimizations, bug fixes, and new features in the latest version will enhance your experience.\n\n> Currently, FastExcel uses POI as its underlying package. If your project already includes POI-related components, you will need to manually exclude POI-related jar files.\n\n### Maven\nIf you are using Maven for project building, add the following configuration in the `pom.xml` file:\n```xml\n<dependency>\n    <groupId>cn.idev.excel</groupId>\n    <artifactId>fastexcel</artifactId>\n    <version>1.0.0</version>\n</dependency>\n```\n### Gradle\nIf you are using Gradle for project building, add the following configuration in the build.gradle file:\n\n```gradle\ndependencies {\n    implementation 'cn.idev.excel:fastexcel:1.0.0'\n}\n```\n\n## Differences Between EasyExcel and FastExcel\n- FastExcel supports all the features of EasyExcel but with better performance and stability.\n- FastExcel has an identical API to EasyExcel, allowing seamless switching.\n- FastExcel will continue to update, fix bugs, optimize performance, and add new features.\n## How to Upgrade from EasyExcel to FastExcel\n\n### 1. Modify Dependencies\nReplace the EasyExcel dependency with the FastExcel dependency, as follows:\n\n```xml\n<!-- EasyExcel dependency -->\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>easyexcel</artifactId>\n    <version>xxxx</version>\n</dependency>\n```\nReplace with:\n```xml\n<dependency>\n    <groupId>cn.idev.excel</groupId>\n    <artifactId>fastexcel</artifactId>\n    <version>1.0.0</version>\n</dependency>\n```\n### 2. Modify Code\nReplace the EasyExcel package name with the FastExcel package name, as follows:\n```java\n// Replace EasyExcel package name with FastExcel package name\nimport com.alibaba.excel.**;\n```\n\nReplace with:\n\n```java\nimport cn.idev.excel.** ;\n```\n\n### 3. Depend on FastExcel Without Modifying Code\nIf you do not want to modify the code for various reasons, you can directly depend on FastExcel by directly adding the dependency in the pom.xml file. EasyExcel and FastExcel can coexist, but long-term switching to FastExcel is recommended.\n\n### 4. Future Use of FastExcel Classes Recommended\nTo maintain compatibility, EasyExcel classes are retained, but using FastExcel classes in the future is recommended. FastExcel classes are the entry classes for FastExcel and encompass all features of EasyExcel. New features will only be added to FastExcel classes.\n\n## Simple Example: Reading Excel Files\nBelow is an example of reading an Excel document:\n```java\n// Implement the ReadListener interface to set up operations for reading data\npublic class DemoDataListener implements ReadListener<DemoData> {\n    @Override\n    public void invoke(DemoData data, AnalysisContext context) {\n        System.out.println(\"Parsed a data entry\" + JSON.toJSONString(data));\n    }\n\n    @Override\n    public void doAfterAllAnalysed(AnalysisContext context) {\n        System.out.println(\"All data parsed!\");\n    }\n}\n\npublic static void main(String[] args) {\n    String fileName = \"demo.xlsx\";\n    // Read Excel file\n    FastExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead();\n}\n```\n\n### Simple Example: Creating Excel Files\nBelow is a simple example of creating an Excel document:\n```java\n// Sample data class\npublic class DemoData {\n    @ExcelProperty(\"String Title\")\n    private String string;\n    @ExcelProperty(\"Date Title\")\n    private Date date;\n    @ExcelProperty(\"Number Title\")\n    private Double doubleData;\n    @ExcelIgnore\n    private String ignore;\n}\n\n// Prepare data to write\nprivate static List<DemoData> data() {\n    List<DemoData> list = new ArrayList<>();\n    for (int i = 0; i < 10; i++) {\n        DemoData data = new DemoData();\n        data.setString(\"String\" + i);\n        data.setDate(new Date());\n        data.setDoubleData(0.56);\n        list.add(data);\n    }\n    return list;\n}\n\npublic static void main(String[] args) {\n    String fileName = \"demo.xlsx\";\n    // Create a \"Template\" sheet and write data\n    FastExcel.write(fileName, DemoData.class).sheet(\"Template\").doWrite(data());\n}\n```\n\n"
        },
        {
          "name": "README_JP.md",
          "type": "blob",
          "size": 8.0693359375,
          "content": "[中文](README.md) |[English](README_EN.md) | [日本語](README_JP.md)\n\n## FastExcelとは\n\nFastExcelは、元EasyExcelの作者によって作成された最新の作品です。2023年に私がアリババを退職した後、アリババがEasyExcelの更新を停止することを発表したことに伴い、このプロジェクトを引き続きメンテナンスおよびアップグレードすることを決定しました。再び始める際に、私はこのフレームワークの名前をFastExcelとし、Excelファイルの処理における高性能を強調しました。その使いやすさだけではありません。\n\nFastExcelは常に無料でオープンソースであり、最もオープンなMITライセンスを採用しており、任意の商業シナリオで使用できます。これにより、開発者や企業に大きな自由度と柔軟性が提供されます。FastExcelのいくつかの顕著な特徴は以下の通りです：\n\n- 1. 元のEasyExcelのすべての機能と特性との完全な互換性があるため、ユーザーはシームレスに移行できます。\n- 2. EasyExcelからFastExcelへの移行は、パッケージ名とMaven依存関係を単純に変更するだけでアップグレードが完了します。\n- 3. 機能的には、EasyExcelよりも多くの革新と改善を提供します。\n- 4. FastExcel 1.0.0バージョンでは、指定行数のExcelを読み取り、ExcelをPDFに変換する機能を新たに追加しました。\n\n私たちは、将来的にさらなる新機能を導入し続けて、ユーザーエクスペリエンスとツールの実用性を継続的に向上させる計画です。開発の進捗を追い、FastExcelの発展をサポートするため、「プログラマー・シャオラン」の公式アカウントをお見逃しなく。FastExcelは、Excelファイルの処理におけるお客様の最良の選択肢となることに専念しています。\n\n## 主な機能\n\n- 1. 高性能な読み書き：FastExcelはパフォーマンスの最適化に重点を置き、大規模なExcelデータを効率的に処理することができます。いくつかの伝統的なExcel処理ライブラリと比較して、メモリ消費を大幅に削減できます。\n- 2. 簡単で使いやすい：このライブラリは簡潔で直感的なAPIを提供しており、開発者がプロジェクトに簡単に統合でき、簡単なExcel操作から複雑なデータ処理まで迅速に習得できます。\n- 3. ストリーム操作：FastExcelはストリーム読み取りをサポートしており、大量のデータを一度にロードする問題を最小限に抑えます。この設計方式は数十万行、または数百万行のデータを処理する際に特に重要です。\n\n## インストール\n\n以下の表は、各バージョンのFastExcel基礎ライブラリのJava言語バージョンの最低要件を一覧にしたものです：\n\n| バージョン   | JDKバージョンサポート範囲 | 備考                             |\n|--------------|:--------------------------:|----------------------------------|\n| 1.0.0+       | JDK8 - JDK21               | 現在のマスターブランチ、EasyExcelと完全互換 |\n\n最新のFastExcelバージョンを使用することを強くお勧めします。最新バージョンのパフォーマンス最適化、バグ修正、および新機能は、使用の利便性を向上させます。\n\n> 現在、FastExcelの基盤としてPOIを使用しています。プロジェクトに既にPOI関連のコンポーネントが含まれている場合、POI関連のjarファイルを手動で除外する必要があります。\n\n### Maven\nMavenでプロジェクトを構築する場合、`pom.xml`ファイルに次の構成を含めてください：\n```xml\n<dependency>\n    <groupId>cn.idev.excel</groupId>\n    <artifactId>fastexcel</artifactId>\n    <version>1.0.0</version>\n</dependency>\n```\n### Gradle\n\nGradleでプロジェクトを構築する場合、build.gradleファイルに次の構成を含めてください：\n```gradle\ndependencies {\n    implementation 'cn.idev.excel:fastexcel:1.0.0'\n}\n```\n## EasyExcelとFastExcelの違い\n- FastExcelはEasyExcelのすべての機能をサポートしていますが、FastExcelのパフォーマンスはより良く、より安定しています。\n- FastExcelとEasyExcelのAPIは完全に一致しているため、シームレスに切り替えることができます。\n- FastExcelは継続して更新され、バグを修正し、パフォーマンスを最適化し、新機能を追加します。\n## EasyExcelをFastExcelにアップグレードする方法\n### 1. 依存関係の変更\nEasyExcelの依存関係をFastExcelの依存関係に置き換えます。以下のように：\n```xml\n<!-- easyexcel 依存 -->\n<dependency>\n    <groupId>com.alibaba</groupId>\n    <artifactId>easyexcel</artifactId>\n    <version>xxxx</version>\n</dependency>\n```\nを以下に置き換えます\n```xml\n<dependency>\n    <groupId>cn.idev.excel</groupId>\n    <artifactId>fastexcel</artifactId>\n    <version>1.0.0</version>\n</dependency>\n```\n### 2. コードの修正\nEasyExcelのパッケージ名をFastExcelのパッケージ名に置き換えます。以下のように：\n```java\n// EasyExcelのパッケージ名をFastExcelのパッケージ名に置き換えます\nimport com.alibaba.excel.**;\n```\nを以下に置き換えます\n```java\nimport cn.idev.excel.** ;\n```\n### 3. コードを修正せずにFastExcelを直接依存する\n何らかの理由でコードを修正したくない場合は、FastExcelに直接依存し、pom.xmlファイル内でFastExcelに直接依存できます。EasyExcelとFastExcelは共存できますが、長期的にはFastExcelを使用することを推奨します。\n\n### 4. 以後はFastExcelクラスを使用することをお勧めします\n互換性を考慮してEasyExcelクラスが保持されていますが、今後はFastExcelクラスを使用することをお勧めします。FastExcelクラスはFastExcelのエントリークラスであり、EasyExcelクラスのすべての機能を含んでいます。新機能は以後、FastExcelクラスにのみ追加されます。\n\n## シンプルな例：Excelファイルを読む\n以下にExcelドキュメントを読んでいる例を示します：\n```java\n// ReadListenerインターフェースを実装してデータを読む操作を設定します\npublic class DemoDataListener implements ReadListener<DemoData> {\n    @Override\n    public void invoke(DemoData data, AnalysisContext context) {\n        System.out.println(\"データエントリを解析しました\" + JSON.toJSONString(data));\n    }\n\n    @Override\n    public void doAfterAllAnalysed(AnalysisContext context) {\n        System.out.println(\"すべてのデータの解析が完了しました！\");\n    }\n}\n\npublic static void main(String[] args) {\n    String fileName = \"demo.xlsx\";\n    // Excelファイルを読む\n    FastExcel.read(fileName, DemoData.class, new DemoDataListener()).sheet().doRead();\n}\n```\n## シンプルな例：Excelファイルを作成\n以下はExcelドキュメントを作成する簡単な例です：\n```java\n// サンプルデータクラス\npublic class DemoData {\n    @ExcelProperty(\"文字列タイトル\")\n    private String string;\n    @ExcelProperty(\"日付タイトル\")\n    private Date date;\n    @ExcelProperty(\"数字タイトル\")\n    private Double doubleData;\n    @ExcelIgnore\n    private String ignore;\n}\n\n// 書き込むデータを準備します\nprivate static List<DemoData> data() {\n    List<DemoData> list = new ArrayList<>();\n    for (int i = 0; i < 10; i++) {\n        DemoData data = new DemoData();\n        data.setString(\"文字列\" + i);\n        data.setDate(new Date());\n        data.setDoubleData(0.56);\n        list.add(data);\n    }\n    return list;\n}\n\npublic static void main(String[] args) {\n    String fileName = \"demo.xlsx\";\n    // 「テンプレート」と名付けたシートを作成し、データを書き込みます\n    FastExcel.write(fileName, DemoData.class).sheet(\"テンプレート\").doWrite(data());\n}\n```\n\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "easyexcel_en.md",
          "type": "blob",
          "size": 0.0009765625,
          "content": "1"
        },
        {
          "name": "fastexcel-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastexcel-support",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastexcel-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "fastexcel",
          "type": "tree",
          "content": null
        },
        {
          "name": "img",
          "type": "tree",
          "content": null
        },
        {
          "name": "lombok.config",
          "type": "blob",
          "size": 0.0712890625,
          "content": "lombok.toString.callSuper = CALL\nlombok.equalsAndHashCode.callSuper= CALL"
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.0419921875,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n      else\n        export JAVA_HOME=\"/Library/Java/Home\"\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`\\\\unset -f command; \\\\command -v java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=`find_maven_basedir \"$(pwd)\"`\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nif [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n    fi\nelse\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n    fi\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      jarUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    else\n      jarUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    fi\n    while IFS=\"=\" read key value; do\n      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n      esac\n    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Downloading from: $jarUrl\"\n    fi\n    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n    if $cygwin; then\n      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n    fi\n\n    if command -v wget > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found wget ... using wget\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        else\n            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found curl ... using curl\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        else\n            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        fi\n\n    else\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Falling back to using Java to download\"\n        fi\n        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaClass=`cygpath --path --windows \"$javaClass\"`\n        fi\n        if [ -e \"$javaClass\" ]; then\n            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n                fi\n                # Compiling the Java class\n                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n            fi\n            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                # Running the downloader\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Running MavenWrapperDownloader.java ...\"\n                fi\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\nexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nif [ \"$MVNW_VERBOSE\" = true ]; then\n  echo $MAVEN_PROJECTBASEDIR\nfi\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.5751953125,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Maven Start Up Batch script\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM M2_HOME - location of maven2's installed home dir\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %DOWNLOAD_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% ^\n  %JVM_CONFIG_MAVEN_PROPS% ^\n  %MAVEN_OPTS% ^\n  %MAVEN_DEBUG_OPTS% ^\n  -classpath %WRAPPER_JAR% ^\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n\ncmd /C exit /B %ERROR_CODE%\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 9.9990234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>cn.idev.excel</groupId>\n    <artifactId>fastexcel-parent</artifactId>\n    <packaging>pom</packaging>\n    <version>${revision}</version>\n    <name>fastexcel-parent</name>\n    <description>fastexcel is a excel handle tools written in Java</description>\n    <url>https://github.com/CodePhiliaX/fastexcel</url>\n    <inceptionYear>2024</inceptionYear>\n\n    <modules>\n        <module>fastexcel-core</module>\n        <module>fastexcel-support</module>\n        <module>fastexcel-test</module>\n        <module>fastexcel</module>\n    </modules>\n\n\n    <properties>\n        <revision>1.0.0</revision>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <jdk.version>1.8</jdk.version>\n        <gpg.skip>true</gpg.skip>\n        <maven.javadoc.skip>true</maven.javadoc.skip>\n        <maven.test.skip>true</maven.test.skip>\n    </properties>\n\n    <scm>\n        <url>https://github.com/CodePhiliaX/fastexcel</url>\n        <connection>scm:git:https://git@github.com/CodePhiliaX/fastexcel.git</connection>\n    </scm>\n\n\n    <organization>\n        <name>Chat2DB</name>\n        <url>https://github.com/CodePhiliaX</url>\n    </organization>\n\n    <developers>\n        <developer>\n            <id>jipengfei</id>\n            <name>jipengfei</name>\n            <email>1558143046@qq.com</email>\n        </developer>\n        <developer>\n            <id>zhuangjiaju</id>\n            <name>Jiaju Zhuang</name>\n            <email>zhuangjiaju@qq.com</email>\n        </developer>\n    </developers>\n\n    <licenses>\n        <license>\n            <name>MIT License</name>\n            <url>https://opensource.org/licenses/MIT</url>\n            <distribution>repo</distribution>\n            <comments>A permissive license that allows for wide reuse</comments>\n        </license>\n    </licenses>\n\n\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n\n    <dependencyManagement>\n        <dependencies>\n        </dependencies>\n    </dependencyManagement>\n\n\n    <dependencies>\n<!--        <dependency>-->\n<!--            <groupId>org.slf4j</groupId>-->\n<!--            <artifactId>slf4j-api</artifactId>-->\n<!--        </dependency>-->\n<!--        <dependency>-->\n<!--            <groupId>org.projectlombok</groupId>-->\n<!--            <artifactId>lombok</artifactId>-->\n<!--            <scope>provided</scope>-->\n<!--        </dependency>-->\n    </dependencies>\n\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-compiler-plugin</artifactId>\n                    <version>3.8.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-source-plugin</artifactId>\n                    <version>3.2.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-gpg-plugin</artifactId>\n                    <version>1.6</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <version>3.1.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.projectlombok</groupId>\n                    <artifactId>lombok-maven-plugin</artifactId>\n                    <version>1.18.20.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>3.3.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-shade-plugin</artifactId>\n                    <version>3.6.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>flatten-maven-plugin</artifactId>\n                    <version>1.2.7</version>\n                </plugin>\n<!--                <plugin>-->\n<!--                    <groupId>org.sonatype.plugins</groupId>-->\n<!--                    <artifactId>nexus-staging-maven-plugin</artifactId>-->\n<!--                    <version>1.6.13</version>-->\n<!--                </plugin>-->\n                <plugin>\n                    <groupId>org.sonatype.central</groupId>\n                    <artifactId>central-publishing-maven-plugin</artifactId>\n                    <version>0.4.0</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <!-- code style -->\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <source>1.8</source>\n                    <target>1.8</target>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <configuration>\n                    <attach>true</attach>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>compile</phase>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-gpg-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>sign</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <!-- Configuration GPG plug-ins don't tip password -->\n                <configuration>\n                    <gpgArguments>\n                        <argument>--pinentry-mode</argument>\n                        <argument>loopback</argument>\n                    </gpgArguments>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>attach-javadocs</id>\n                        <goals>\n                            <goal>jar</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.projectlombok</groupId>\n                <artifactId>lombok-maven-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <phase>generate-sources</phase>\n                        <goals>\n                            <goal>delombok</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>flatten-maven-plugin</artifactId>\n                <configuration>\n                    <updatePomFile>true</updatePomFile>\n                    <flattenMode>oss</flattenMode>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>flatten.process-resources</id>\n                        <phase>process-resources</phase>\n                        <goals>\n                            <goal>flatten</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>flatten</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>flatten</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>flatten.clean</id>\n                        <phase>clean</phase>\n                        <goals>\n                            <goal>clean</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <!-- Publish package to the Maven Central Repository -->\n<!--            <plugin>-->\n<!--                <groupId>org.sonatype.plugins</groupId>-->\n<!--                <artifactId>nexus-staging-maven-plugin</artifactId>-->\n<!--                <extensions>true</extensions>-->\n<!--                <configuration>-->\n<!--                    <serverId>ossrh</serverId>-->\n<!--                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>-->\n<!--                    <autoReleaseAfterClose>true</autoReleaseAfterClose>-->\n<!--                </configuration>-->\n<!--            </plugin>-->\n            <plugin>\n                <groupId>org.sonatype.central</groupId>\n                <artifactId>central-publishing-maven-plugin</artifactId>\n                <extensions>true</extensions>\n                <configuration>\n                    <publishingServerId>ossrh</publishingServerId>\n                    <tokenAuth>true</tokenAuth>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n</project>\n"
        },
        {
          "name": "quickstart.md",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "style",
          "type": "tree",
          "content": null
        },
        {
          "name": "update.md",
          "type": "blob",
          "size": 0,
          "content": ""
        }
      ]
    }
  ]
}