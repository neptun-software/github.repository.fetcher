{
  "metadata": {
    "timestamp": 1736708564942,
    "page": 831,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jobrunr/jobrunr",
      "stars": 2444,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.091796875,
          "content": "# ignore .git and .cache folders\n.git\n.cache\n.github\nbuild\nbin\n**/build\n**/bin\n**/node_modules"
        },
        {
          "name": ".drone.yml",
          "type": "blob",
          "size": 7.6298828125,
          "content": "---\nkind: pipeline\ntype: docker\nname: default\n\ntrigger:\n  branch:\n    - master\n  event:\n    - push\n    - pull_request\n\nconcurrency:\n  limit: 1\n\nsteps:\n  - name: prepare\n    image: plugins/docker\n    commands:\n      - docker build -f PrepareDockerfile -t jobrunr.io/build-container:1.3 .\n    volumes:\n      - name: dockersock\n        path: /var/run/docker.sock\n\n  - name: build\n    image: jobrunr.io/build-container:1.3\n    commands:\n      - rm -rf /tmp/reports/*\n      - find /root/.gradle -name \"*.lock\" -type f -delete\n      - find /drone/src/.gradle -name \"*.lock\" -type f -delete\n      - ./gradlew -Djib.console=plain --no-daemon -i clean build test --fail-fast\n      #- gradle assemble :tests:e2e-ui-gson:test :tests:e2e-ui-jackson:test  --tests org.jobrunr.tests.e2e.**\n    volumes:\n      - name: dockersock\n        path: /var/run/docker.sock\n      - name: gradle-cache\n        path: /root/.gradle\n      - name: gradle-project-cache\n        path: /drone/src/.gradle\n      - name: frontend-node-modules-cache\n        path: /drone/src/core/src/main/resources/org/jobrunr/dashboard/frontend/node_modules\n      - name: frontend-build-cache\n        path: /drone/src/core/src/main/resources/org/jobrunr/dashboard/frontend/build\n      - name: maven-local\n        path: /root/.m2\n      - name: reports\n        path: /tmp/reports\n\n#  - name: slack\n#    image: plugins/slack\n#    settings:\n#      webhook:\n#        from_secret: SLACK_WEBHOOK\n#      channel: drone\n#    when:\n#      status: [ success, failure ]\n\nvolumes:\n  - name: dockersock\n    host:\n      path: /var/run/docker.sock\n  - name: maven-local\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/m2/cache\n  - name: gradle-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/gradle/cache\n  - name: gradle-project-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/cache/gradle-project\n  - name: frontend-node-modules-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/cache/frontend-node-modules\n  - name: frontend-build-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/cache/frontend-build\n  - name: reports\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/reports\n\n---\nkind: pipeline\ntype: docker\nname: sonar\n\ntrigger:\n  event:\n    - custom\n\nconcurrency:\n  limit: 1\n\nsteps:\n  - name: prepare\n    image: plugins/docker\n    commands:\n      - docker build -f PrepareDockerfile -t jobrunr.io/build-container:1.3 .\n    volumes:\n      - name: dockersock\n        path: /var/run/docker.sock\n\n  - name: build\n    image: jobrunr.io/build-container:1.3\n    commands:\n      - rm -rf /tmp/reports/*\n      - find /root/.gradle -name \"*.lock\" -type f -delete\n      - find /drone/src/.gradle -name \"*.lock\" -type f -delete\n      - ./gradlew --continue -Djib.console=plain --no-daemon -i clean build jacocoTestReport sonar\n    environment:\n      SONAR_TOKEN:\n        from_secret: SONAR_TOKEN\n      #- gradle assemble :tests:e2e-ui-gson:test :tests:e2e-ui-jackson:test  --tests org.jobrunr.tests.e2e.**\n    volumes:\n      - name: dockersock\n        path: /var/run/docker.sock\n      - name: gradle-cache\n        path: /root/.gradle\n      - name: gradle-project-cache\n        path: /drone/src/.gradle\n      - name: frontend-node-modules-cache\n        path: /drone/src/core/src/main/resources/org/jobrunr/dashboard/frontend/node_modules\n      - name: frontend-build-cache\n        path: /drone/src/core/src/main/resources/org/jobrunr/dashboard/frontend/build\n      - name: maven-local\n        path: /root/.m2\n      - name: reports\n        path: /tmp/reports\n\n#  - name: slack\n#    image: plugins/slack\n#    settings:\n#      webhook:\n#        from_secret: SLACK_WEBHOOK\n#      channel: drone\n#    when:\n#      status: [ success, failure ]\n\nvolumes:\n  - name: dockersock\n    host:\n      path: /var/run/docker.sock\n  - name: maven-local\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/m2/cache\n  - name: gradle-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/gradle/cache\n  - name: gradle-project-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/cache/gradle-project\n  - name: frontend-node-modules-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/cache/frontend-node-modules\n  - name: frontend-build-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/cache/frontend-build\n  - name: reports\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/reports\n\n\n---\nkind: pipeline\ntype: docker\nname: release\n\ntrigger:\n  event:\n    - tag\n\nsteps:\n  - name: build-and-upload-to-maven-central\n    image: jobrunr.io/build-container:1.3\n    commands:\n      - rm -f *.hprof\n      - rm -rf /tmp/reports/*\n      - find /root/.gradle -name \"*.lock\" -type f -delete\n      - find /drone/src/.gradle -name \"*.lock\" -type f -delete\n      - ./gradlew --no-daemon -i clean assemble publishToSonatype\n    environment:\n      SIGNING_KEY:\n        from_secret: SIGNING_KEY\n      SIGNING_PASSWORD:\n        from_secret: SIGNING_PASSWORD\n      ORG_GRADLE_PROJECT_sonatypeUsername:\n        from_secret: ORG_GRADLE_PROJECT_sonatypeUsername\n      ORG_GRADLE_PROJECT_sonatypePassword:\n        from_secret: ORG_GRADLE_PROJECT_sonatypePassword\n    volumes:\n      - name: dockersock\n        path: /var/run/docker.sock\n      - name: gradle-cache\n        path: /root/.gradle\n      - name: gradle-project-cache\n        path: /drone/src/.gradle\n      - name: frontend-node-modules-cache\n        path: /drone/src/core/src/main/resources/org/jobrunr/dashboard/frontend/node_modules\n      - name: frontend-build-cache\n        path: /drone/src/core/src/main/resources/org/jobrunr/dashboard/frontend/build\n      - name: maven-local\n        path: /root/.m2\n      - name: reports\n        path: /tmp/reports\n\n  #  - name: upload-to-github\n  #    image: plugins/github-release\n  #    settings:\n  #      api_key:\n  #        from_secret: GITHUB_TOKEN\n  #      files: core/build/libs/*\n  #    when:\n  #      event: tag\n\n  - name: update and push readme\n    image: jobrunr.io/build-container:1.3\n    environment:\n      GITHUB_PAT:\n        from_secret: GITHUB_TOKEN\n    commands:\n      - rm -f *.hprof\n      - sed -i \"s@<version>.*</version>@<version>${DRONE_TAG}</version>@g\" README.md # replace version in README\n      - sed -i \"s@'org.jobrunr:jobrunr:.*'@'org.jobrunr:jobrunr:${DRONE_TAG}'@g\" README.md # replace version in README\n      - git config --global user.email \"drone-bot@jobrunr.io\"\n      - git config --global user.name \"drone-bot\"\n      - git add README.md\n      - git commit -m \"Update readme to version ${DRONE_TAG} [CI SKIP]\"\n      - git push https://$(GITHUB_PAT)@github.com/jobrunr/jobrunr.git\n\n#  - name: slack\n#    image: plugins/slack\n#    settings:\n#      webhook:\n#        from_secret: SLACK_WEBHOOK\n#      channel: drone\n#    when:\n#      status: [ success, failure ]\n\nvolumes:\n  - name: dockersock\n    host:\n      path: /var/run/docker.sock\n  - name: maven-local\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/m2/cache\n  - name: gradle-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/gradle/cache\n  - name: gradle-project-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/cache/gradle-project\n  - name: frontend-node-modules-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/cache/frontend-node-modules\n  - name: frontend-build-cache\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/cache/frontend-build\n  - name: reports\n    host:\n      path: /volume2/docker/jobrunr-services/drone-work-dir/jobrunr/reports\n\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.181640625,
          "content": "\n# Created by https://www.gitignore.io/api/java,gradle,intellij\n# Edit at https://www.gitignore.io/?templates=java,gradle,intellij\n\n### Intellij ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm\n# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839\n\n# User-specific stuff\n.idea/**/workspace.xml\n.idea/**/tasks.xml\n.idea/**/usage.statistics.xml\n.idea/**/dictionaries\n.idea/**/shelf\n.idea/compiler.xml\n\n# Generated files\n.idea/**/contentModel.xml\n\n# Sensitive or high-churn files\n.idea/**/dataSources/\n.idea/**/dataSources.ids\n.idea/**/dataSources.local.xml\n.idea/**/sqlDataSources.xml\n.idea/**/dynamic.xml\n.idea/**/uiDesigner.xml\n.idea/**/dbnavigator.xml\n\n# Gradle\n.idea/**/gradle.xml\n.idea/**/libraries\n\n# Gradle and Maven with auto-import\n# When using Gradle or Maven with auto-import, you should exclude module files,\n# since they will be recreated, and may cause churn.  Uncomment if using\n# auto-import.\n# .idea/modules.xml\n# .idea/*.iml\n# .idea/modules\n# *.iml\n# *.ipr\n\n# CMake\ncmake-build-*/\n\n# Mongo Explorer plugin\n.idea/**/mongoSettings.xml\n\n# File-based project format\n*.iws\n\n# IntelliJ\nout/\n\n# mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# JIRA plugin\natlassian-ide-plugin.xml\n\n# Cursive Clojure plugin\n.idea/replstate.xml\n\n# Crashlytics plugin (for Android Studio and IntelliJ)\ncom_crashlytics_export_strings.xml\ncrashlytics.properties\ncrashlytics-build.properties\nfabric.properties\n\n# Editor-based Rest Client\n.idea/httpRequests\n\n# Android studio 3.1+ serialized cache file\n.idea/caches/build_file_checksums.ser\n\n### Intellij Patch ###\n# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721\n\n# *.iml\n# modules.xml\n# .idea/misc.xml\n# *.ipr\n\n# Sonarlint plugin\n.idea/**/sonarlint/\n\n# SonarQube Plugin\n.idea/**/sonarIssues.xml\n\n# Markdown Navigator plugin\n.idea/**/markdown-navigator.xml\n.idea/**/markdown-navigator/\n\n### Java ###\n# Compiled class file\n*.class\n\n# Log file\n*.log\n\n# BlueJ files\n*.ctxt\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.nar\n*.ear\n*.zip\n*.tar.gz\n*.rar\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n### Gradle ###\n.gradle\nbuild/\n\n# Ignore Gradle GUI config\ngradle-app.setting\n\n# Avoid ignoring Gradle wrapper jar file (.jar files are usually ignored)\n!gradle-wrapper.jar\n\n# Cache of project\n.gradletasknamecache\n\n# # Work around https://youtrack.jetbrains.com/issue/IDEA-116898\n# gradle/wrapper/gradle-wrapper.properties\n\n### Gradle Patch ###\n**/build/\n\n# End of https://www.gitignore.io/api/java,gradle,intellij\n\n### Maven ###\ntarget\n\n.drone-secrets\n\n# Frontend\n# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n\n# dependencies\n/core/src/main/resources/org/jobrunr/dashboard/frontend/node_modules\n/.pnp\n.pnp.js\n\n# testing\n/core/src/main/resources/org/jobrunr/dashboard/frontend/coverage\n\n# production\n/core/src/main/resources/org/jobrunr/dashboard/frontend/build\n\n# misc\n.DS_Store\n.env.development\n.env.development.local\n.env.test.local\n.env.production.local\n\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n*.secrets\ndependency-check-bin\ndependency-check-reports\n/renovate.js\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "CLA.md",
          "type": "blob",
          "size": 3.0634765625,
          "content": "# Contributor License Agreement\n\nThe following terms are used throughout this agreement:\n\n**You** - the person or legal entity including its affiliates asked to accept this agreement.\nAn affiliate is any entity that controls or is controlled by the legal entity, or is under common control with it.\n\n**Project** - is an umbrella term that refers to any and all JobRunr open-source projects.\n\n**Contribution** - any type of work that is submitted to a Project, including any modifications or additions to existing work.\n\n**Submitted** - conveyed to a Project via a pull request, commit, issue, or any form of electronic, written, or\nverbal communication with JobRunr, contributors or maintainers.\n\n# 1. Grant of Copyright License.\n\nSubject to the terms and conditions of this agreement, You grant to the Projects’ maintainers, contributors,\nusers and to JobRunr a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce,\nprepare derivative works of, publicly display, publicly perform, sublicense, and distribute Your contributions and such\nderivative works. Except for this license, You reserve all rights, title, and interest in your contributions.\n\n# 2. Grant of Patent License.\n\nSubject to the terms and conditions of this agreement, You grant to the Projects’ maintainers, contributors, users and to\nJobRunr a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent\nlicense to make, have made, use, offer to sell, sell, import, and otherwise transfer your contributions, where such license\napplies only to those patent claims licensable by you that are necessarily infringed by your contribution or by combination of\nyour contribution with the project to which this contribution was submitted.\n\nIf any entity institutes patent litigation - including cross-claim or counterclaim in a lawsuit - against You alleging that\nyour contribution or any project it was submitted to constitutes or is responsible for direct or contributory patent infringement,\nthen any patent licenses granted to that entity under this agreement shall terminate as of the date such litigation is filed.\n\n# 3. Source of Contribution.\n\nYour contribution is either your original creation, based upon previous work that, to the best of your knowledge,\nis covered under an appropriate open source license and you have the right under that license to submit that work with modifications,\nwhether created in whole or in part by you, or you have clearly identified the source of the contribution and any license or other\nrestriction (like related patents, trademarks, and license agreements) of which you are personally aware.\n\n## Attribution\n\nThis Contributor License Agreement is adapted from the HomeAssistant CLA.\n\n## Signing\n\nTo sign this CLA you must first submit a pull request to the [clabot-config](https://github.com/jobrunr/clabot-config) repository under the JobRunr organization.\n\n## Adoption\n\nThis Contributor License Agreement (CLA) was first announced on June 2nd, 2022 in [this blog post](https://www.jobrunr.io/en/blog/2022-06-02-cla/).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.263671875,
          "content": "\n## Contributing to jobrunr\nJobRunr follows a very standard Github development process, using Github tracker for issues and merging pull requests into master. If you want to contribute even something trivial please do not hesitate, but follow the guidelines below.\n\n### Contact via GitHub Discussions\n\nGitHub Discussions is the recommended way for discussing almost anything that relates to JobRunr. We look forward to your input!\n\n### Reporting issue\n\nPlease follow the [template](https://github.com/jobrunr/jobrunr/issues/new?template=bug_report.md&title=%5BBUG%5D) for reporting any issues.\n\n### Code Conventions\nOur code style is almost in line with the standard java conventions (Popular IDE's default setting satisfy this), with the following additional restricts:  \n\n* Unit tests should be added for a new feature or an important bugfix.\n* If no-one else is using your branch, please rebase it against the current master (or other target branch in the main project).\n* When writing a commit message please follow these conventions, if you are fixing an existing issue please add Fixes #XXX at the end of the commit message (where XXX is the issue number).\n\n### Contribution flow\nBefore contribution to JobRunr, you must agree to the [JobRunr Contributors Agreement](https://github.com/jobrunr/jobrunr/blob/master/CLA.md). Once you have reviewed and agree with it, please sign the Contributors Agreement by adding yourself to the contributors of JobRunr as [explained here](https://github.com/jobrunr/clabot-config). \n\nThis is a rough outline of what a contributor's workflow looks like:\n\n* Fork the current repository\n* Create a topic branch from where to base the contribution. This is usually master.\n* Make commits of logical units.\n* Make sure commit messages are in the proper format.\n* Push changes in a topic branch to your forked repository.\n* Before you send out the pull request, please sync your forked repository with remote repository, this will make your pull request simple and clear. See guide below:\n```\ngit remote add upstream git@github.com:jobrunr/jobrunr.git\ngit fetch upstream\ngit rebase upstream/master\ngit checkout -b your_awesome_patch\n... add some work\ngit push origin your_awesome_patch\n```\n* Submit a pull request to jobrunr/jobrunr and wait for the reply.\n\nThanks for contributing!\n"
        },
        {
          "name": "License-lgpl.md",
          "type": "blob",
          "size": 7.435546875,
          "content": "GNU Lesser General Public License\n=================================\n\n_Version 3, 29 June 2007_  \n_Copyright © 2007 Free Software Foundation, Inc. &lt;<https://fsf.org/>&gt;_\n\nEveryone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed.\n\nThis version of the GNU Lesser General Public License incorporates the terms and conditions of version 3 of the GNU\nGeneral Public License, supplemented by the additional permissions listed below.\n\n### 0. Additional Definitions\n\nAs used herein, “this License” refers to version 3 of the GNU Lesser General Public License, and the “GNU GPL” refers to\nversion 3 of the GNU General Public License.\n\n“The Library” refers to a covered work governed by this License, other than an Application or a Combined Work as defined\nbelow.\n\nAn “Application” is any work that makes use of an interface provided by the Library, but which is not otherwise based on\nthe Library. Defining a subclass of a class defined by the Library is deemed a mode of using an interface provided by\nthe Library.\n\nA “Combined Work” is a work produced by combining or linking an Application with the Library. The particular version of\nthe Library with which the Combined Work was made is also called the “Linked Version”.\n\nThe “Minimal Corresponding Source” for a Combined Work means the Corresponding Source for the Combined Work, excluding\nany source code for portions of the Combined Work that, considered in isolation, are based on the Application, and not\non the Linked Version.\n\nThe “Corresponding Application Code” for a Combined Work means the object code and/or source code for the Application,\nincluding any data and utility programs needed for reproducing the Combined Work from the Application, but excluding the\nSystem Libraries of the Combined Work.\n\n### 1. Exception to Section 3 of the GNU GPL\n\nYou may convey a covered work under sections 3 and 4 of this License without being bound by section 3 of the GNU GPL.\n\n### 2. Conveying Modified Versions\n\nIf you modify a copy of the Library, and, in your modifications, a facility refers to a function or data to be supplied\nby an Application that uses the facility (other than as an argument passed when the facility is invoked), then you may\nconvey a copy of the modified version:\n\n* **a)** under this License, provided that you make a good faith effort to ensure that, in the event an Application does\n  not supply the function or data, the facility still operates, and performs whatever part of its purpose remains\n  meaningful, or\n\n* **b)** under the GNU GPL, with none of the additional permissions of this License applicable to that copy.\n\n### 3. Object Code Incorporating Material from Library Header Files\n\nThe object code form of an Application may incorporate material from a header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n* **a)** Give prominent notice with each copy of the object code that the Library is used in it and that the Library and\n  its use are covered by this License.\n* **b)** Accompany the object code with a copy of the GNU GPL and this license document.\n\n### 4. Combined Works\n\nYou may convey a Combined Work under terms of your choice that, taken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n* **a)** Give prominent notice with each copy of the Combined Work that the Library is used in it and that the Library\n  and its use are covered by this License.\n\n* **b)** Accompany the Combined Work with a copy of the GNU GPL and this license document.\n\n* **c)** For a Combined Work that displays copyright notices during execution, include the copyright notice for the\n  Library among these notices, as well as a reference directing the user to the copies of the GNU GPL and this license\n  document.\n\n* **d)** Do one of the following:\n    - **0)** Convey the Minimal Corresponding Source under the terms of this License, and the Corresponding Application\n      Code in a form suitable for, and under terms that permit, the user to recombine or relink the Application with a\n      modified version of the Linked Version to produce a modified Combined Work, in the manner specified by section 6\n      of the GNU GPL for conveying Corresponding Source.\n    - **1)** Use a suitable shared library mechanism for linking with the Library. A suitable mechanism is one that **(\n      a)** uses at run time a copy of the Library already present on the user's computer system, and **(b)** will\n      operate properly with a modified version of the Library that is interface-compatible with the Linked Version.\n\n* **e)** Provide Installation Information, but only if you would otherwise be required to provide such information under\n  section 6 of the GNU GPL, and only to the extent that such information is necessary to install and execute a modified\n  version of the Combined Work produced by recombining or relinking the Application with a modified version of the\n  Linked Version. (If you use option **4d0**, the Installation Information must accompany the Minimal Corresponding\n  Source and Corresponding Application Code. If you use option **4d1**, you must provide the Installation Information in\n  the manner specified by section 6 of the GNU GPL for conveying Corresponding Source.)\n\n### 5. Combined Libraries\n\nYou may place library facilities that are a work based on the Library side by side in a single library together with\nother library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n* **a)** Accompany the combined library with a copy of the same work based on the Library, uncombined with any other\n  library facilities, conveyed under the terms of this License.\n* **b)** Give prominent notice with the combined library that part of it is a work based on the Library, and explaining\n  where to find the accompanying uncombined form of the same work.\n\n### 6. Revised Versions of the GNU Lesser General Public License\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU Lesser General Public License from time\nto time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new\nproblems or concerns.\n\nEach version is given a distinguishing version number. If the Library as you received it specifies that a certain\nnumbered version of the GNU Lesser General Public License “or any later version” applies to it, you have the option of\nfollowing the terms and conditions either of that published version or of any later version published by the Free\nSoftware Foundation. If the Library as you received it does not specify a version number of the GNU Lesser General\nPublic License, you may choose any version of the GNU Lesser General Public License ever published by the Free Software\nFoundation.\n\nIf the Library as you received it specifies that a proxy can decide whether future versions of the GNU Lesser General\nPublic License shall apply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary."
        },
        {
          "name": "License-royaltyfree.md",
          "type": "blob",
          "size": 11.9697265625,
          "content": "Royalty-free End-user License Agreement\n=======================================\n\nTHIS LICENSE AGREEMENT DESCRIBES YOUR RIGHTS WITH RESPECT TO THE SOFTWARE AND ITS COMPONENTS.\n\n1. OWNERSHIP, LICENSE GRANT\n\nThis is a license agreement and not an agreement for sale. We reserve ownership of all intellectual property rights inherent in or relating to the Software, which include, but are not limited to, all copyright, patent rights, all rights in relation to registered and unregistered trademarks (including service marks), confidential information (including trade secrets and know-how) and all rights other than those expressly granted by this License Agreement.\n\nSubject to the payment of the fee required and subject to the terms and conditions of this License Agreement, We grant to You a revocable, non- transferable and non-exclusive license (i) for Designated User(s) (as defined below) within Your organization to install and use the Software on any workstations used exclusively by such Designated User and (ii) for You to install and use the Software in connection with unlimited domains and sub-domains on unlimited servers, solely in connection with distribution of the Software in accordance with sections 3 and 4 below. This license is not sublicensable except as explicitly set forth herein. \"Designated User(s)\" shall mean Your employee(s) acting within the scope of their employment or Your consultant(s) or contractor(s) acting within the scope of the services they provide for You or on Your behalf for whom You have purchased a license to use the Software.\n\n2. PERMITTED USES, SOURCE CODE, MODIFICATIONS\n\nWe provide You with source code so that You can create Modifications of the original Software, where Modification means: a) any addition to or deletion from the contents of a file included in the original Software or previous Modifications created by You, or b) any new file that contains any part of the original Software or previous Modifications. While You retain all rights to any original work authored by You as part of the Modifications, We continue to own all copyright and other intellectual property rights in the Software.\n\n3. DISTRIBUTION\n\nYou may distribute the Software in any applications, frameworks, or elements (collectively referred to as an \"Application\" or \"Applications\") that you develop using the Software in accordance with this License Agreement, provided that such distribution does not violate the restrictions set forth in section 4 of this License Agreement. You must not remove, obscure or interfere with any copyright, acknowledgment, attribution, trademark, warning or disclaimer statement affixed to, incorporated in or otherwise applied in connection with the Software.\n\nYou are required to ensure that the Software is not reused by or with any applications other than those with which You distribute it as permitted herein. For example, if You install the Software on a customer's server, that customer is not permitted to use the Software independently of Your application, and must be informed as such.\n\nYou will not owe Us any royalties for Your distribution of the Software in accordance with this License Agreement.\n\n4. PROHIBITED USES\n\nYou may not, without Our prior written consent, redistribute the Software or Modifications other than by including the Software or a portion thereof within Your own product, which must have substantially different functionality than the Software or Modifications and must not allow any third party to use the Software or Modifications, or any portions thereof, for software development or application development purposes. You are explicitly not allowed to redistribute the Software or Modifications as part of any product that can be described as a development toolkit or library, an application builder, a website builder or any product that is intended for use by software, application, or website developers or designers. You may not change or remove the copyright notice from any of the files included in the Software or Modifications.\n\nYou may redistribute the Software as part of Your own products.\n\nUNDER NO CIRCUMSTANCES MAY YOU USE THE SOFTWARE FOR A PRODUCT THAT IS INTENDED FOR SOFTWARE OR APPLICATION DEVELOPMENT PURPOSES.\n\n5. TERMINATION\n\nThis License Agreement and Your right to use the Software and Modifications will terminate immediately without notice if You fail to comply with the terms and conditions of this License Agreement. Upon termination, You agree to immediately cease using and destroy the Software or Modifications, including all accompanying documents. The provisions of sections 4, 5, 6, 7, 8, 9, 10 and 11 will survive any termination of this License Agreement.\n\n6. DISCLAIMER OF WARRANTIES\n\nTO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, WE AND OUR SUPPLIERS DISCLAIM ALL WARRANTIES AND CONDITIONS, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT, WITH REGARD TO THE SOFTWARE. WE DO NOT GUARANTEE THAT THE OPERATION OF THE SOFTWARE WILL BE UNINTERRUPTED OR ERROR-FREE, AND YOU ACKNOWLEDGE THAT IT IS NOT TECHNICALLY PRACTICABLE FOR US TO DO SO.\n\n7. LIMITATION OF LIABILITIES\n\nTO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL WE OR OUR SUPPLIERS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION OR ANY OTHER PECUNIARY LAW) ARISING OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE, EVEN IF WE HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. IN ANY CASE, OUR ENTIRE LIABILITY UNDER ANY PROVISION OF THIS LICENSE AGREEMENT SHALL BE LIMITED TO THE AMOUNT ACTUALLY PAID BY YOU FOR THE SOFTWARE.\n\n8. VERIFICATION\n\nWe or a certified auditor acting on Our behalf, may, upon its reasonable request and at its expense, audit You with respect to the use of the Software. Such audit may be conducted by mail, electronic means or through an in-person visit to Your place of business. Any such in-person audit shall be conducted during regular business hours at Your facilities and shall not unreasonably interfere with Your business activities. We shall not remove, copy, or redistribute any electronic material during the course of an audit. If an audit reveals that You are using the Software in a way that is in material violation of the terms of the License Agreement, then You shall pay Our reasonable costs of conducting the audit. In the case of a material violation, You agree to pay Us any amounts owing that are attributable to the unauthorized use. In the alternative, We reserve the right, at Our sole option, to terminate the licenses for the Software.\n\n9. THIRD PARTY SOFTWARE\n\nThe Software may contain third party open-source software which requires notices and/or additional terms and conditions.\nSuch required third party software notices and/or additional terms and conditions are located in the NOTICES file\naccompanying the Software distribution (also available at https://www.jobrunr.io/documentation/credits-to/), and are\nmade a part of and incorporated by reference into this Agreement. By accepting this Agreement, you are also accepting\nthe additional terms and conditions, if any, set forth therein.\n\n10. PAYMENT AND TAXES\n\nIf credit has been extended to You by Us, all payments under this License Agreement are due within thirty (30) days of the date We mail an invoice to You. If We have not extended credit to You, You shall be required to make payment concurrent with the delivery of the Software by Us. All amounts payable are gross amounts but exclusive of any value added tax, use tax, sales tax or similar tax. You shall be entitled to withhold from payments any applicable withholding taxes and comply with all applicable tax and employment legislation. Each party shall pay all taxes (including, but not limited to, taxes based upon its income) or levies imposed on it under applicable laws, regulations and tax treaties as a result of this Agreement and any payments made hereunder (including those required to be withheld or deducted from payments). Each party shall furnish evidence of such paid taxes as is sufficient to enable the other party to obtain any credits available to it, including original withholding tax certificates.\n\n11. MISCELLANEOUS\n\nThe license granted herein applies only to the version of the Software available when purchased in connection with the terms of this License Agreement. Any previous or subsequent license granted to You for use of the Software shall be governed by the terms and conditions of the agreement entered in connection with purchase of that version of the Software. You agree that you will comply with all applicable laws and regulations with respect to the Software, including without limitation all export and re-export control laws and regulations.\n\nWhile redistributing the Software or Modifications thereof, You may choose to offer acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License Agreement. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on Our behalf. You agree to indemnify, defend, and hold Us harmless from and against any liability incurred by, or claims asserted against, Us (i) by reason of Your accepting any such support, warranty, indemnity or additional liability; or (ii) arising out of the use, reproduction or distribution of Your Application, except to the extent such claim is solely based on the inclusion of the Software therein.\n\nYou agree to be identified as a customer of ours and You agree that We may refer to You by name, trade name and trademark, if applicable, and may briefly describe Your business in our marketing materials and web site.\n\nYou may not assign this License Agreement without Our prior written consent, which will not be unreasonably withheld. This License Agreement will inure to the benefit of Our successors and assigns.\n\nYou acknowledge that this License Agreement is complete and is the exclusive representation of our agreement. No oral or written information given by Us or on our behalf shall create a warranty or collateral contract, or in any way increase the scope of this License Agreement in any way, and You may not rely on any such oral or written information. No term or condition contained in any purchase order shall apply unless expressly accepted by Us in writing.\n\nThere are no implied licenses or other implied rights granted under this License Agreement, and all rights, save for those expressly granted hereunder, shall remain with Us and our licensors. In addition, no licenses or immunities are granted to the combination of the Software and/or Modifications, as applicable, with any other software or hardware not delivered by Us to You under this License Agreement.\n\nIf any provision in this License Agreement shall be determined to be invalid, such provision shall be deemed omitted; the remainder of this License Agreement shall continue in full force and effect. If any remedy provided is determined to have failed for its essential purpose, all limitations of liability and exclusions of damages set forth in this License Agreement shall remain in effect.\n\nThis License Agreement may be modified only by a written instrument signed by an authorized representative of each party.\n\nThis License Agreement is governed by the Belgian law (notwithstanding conflicts of laws provisions), and all parties irrevocably submit to the jurisdiction of the courts of Belgium and further agree to commence any litigation which may arise hereunder in the state or federal courts located in the judicial district of Leuven, Vlaams-Brabant, Belgium.\n\nIf the Software or any related documentation is licensed to the U.S. government or any agency thereof, it will be deemed to be \"commercial computer software\" or \"commercial computer software documentation\", pursuant to DFAR Section 227.7202 and FAR Section 12.212. Any use of the Software or related documentation by the U.S. government will be governed solely by the terms of this License Agreement."
        },
        {
          "name": "License-standard.md",
          "type": "blob",
          "size": 12.42578125,
          "content": "Standard End-user License Agreement\n===================================\n\nTHIS LICENSE AGREEMENT DESCRIBES YOUR RIGHTS WITH RESPECT TO THE SOFTWARE AND ITS COMPONENTS.\n\n1. OWNERSHIP, LICENSE GRANT\n\nThis is a license agreement and not an agreement for sale. We reserve ownership of all intellectual property rights inherent in or relating to the Software, which include, but are not limited to, all copyright, patent rights, all rights in relation to registered and unregistered trademarks (including service marks), confidential information (including trade secrets and know-how) and all rights other than those expressly granted by this License Agreement.\n\nSubject to the payment of the fee required and subject to the terms and conditions of this License Agreement, We grant to You a revocable, non- transferable and non-exclusive license (i) for Designated User(s) (as defined below) within Your organization to install and use the Software on any workstations used exclusively by such Designated User and (ii) for You to install and use the Software in connection with unlimited domains and sub-domains on unlimited servers, solely in connection with distribution of the Software in accordance with sections 3 and 4 below. This license is not sublicensable except as explicitly set forth herein. \"Designated User(s)\" shall mean Your employee(s) acting within the scope of their employment or Your consultant(s) or contractor(s) acting within the scope of the services they provide for You or on Your behalf for whom You have purchased a license to use the Software.\n\n2. PERMITTED USES, SOURCE CODE, MODIFICATIONS\n\nWe provide You with source code so that You can create Modifications of the original Software, where Modification means: a) any addition to or deletion from the contents of a file included in the original Software or previous Modifications created by You, or b) any new file that contains any part of the original Software or previous Modifications. While You retain all rights to any original work authored by You as part of the Modifications, We continue to own all copyright and other intellectual property rights in the Software.\n\n3. DISTRIBUTION\n\nYou may distribute the Software in any applications, frameworks, or elements (collectively referred to as an \"Application\" or \"Applications\") that you develop using the Software in accordance with this License Agreement, provided that such distribution does not violate the restrictions set forth in section 4 of this License Agreement. You must not remove, obscure or interfere with any copyright, acknowledgment, attribution, trademark, warning or disclaimer statement affixed to, incorporated in or otherwise applied in connection with the Software.\n\nYou are required to ensure that the Software is not reused by or with any applications other than those with which You distribute it as permitted herein. For example, if You install the Software on a customer's server, that customer is not permitted to use the Software independently of Your application, and must be informed as such.\n\nYou will not owe Us any royalties for Your distribution of the Software in accordance with this License Agreement.\n\n4. PROHIBITED USES\n\nYou may not, without Our prior written consent, redistribute the Software or Modifications other than by including the Software or a portion thereof within Your own product, which must have substantially different functionality than the Software or Modifications and must not allow any third party to use the Software or Modifications, or any portions thereof, for software development or application development purposes. You are explicitly not allowed to redistribute the Software or Modifications as part of any product that can be described as a development toolkit or library, an application builder, a website builder or any product that is intended for use by software, application, or website developers or designers. You may not change or remove the copyright notice from any of the files included in the Software or Modifications.\n\nYou may not redistribute the Software as part of a product, \"appliance\" or \"virtual server\". You may not redistribute the Software on any server which is not directly under Your control.\n\nUNDER NO CIRCUMSTANCES MAY YOU USE THE SOFTWARE FOR A PRODUCT THAT IS INTENDED FOR SOFTWARE OR APPLICATION DEVELOPMENT PURPOSES.\n\n5. TERMINATION\n\nThis License Agreement and Your right to use the Software and Modifications will terminate immediately without notice if You fail to comply with the terms and conditions of this License Agreement. Upon termination, You agree to immediately cease using and destroy the Software or Modifications, including all accompanying documents. The provisions of sections 4, 5, 6, 7, 8, 9, 10 and 11 will survive any termination of this License Agreement.\n\n6. DISCLAIMER OF WARRANTIES\n\nTO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, WE AND OUR SUPPLIERS DISCLAIM ALL WARRANTIES AND CONDITIONS, EITHER EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT, WITH REGARD TO THE SOFTWARE. WE DO NOT GUARANTEE THAT THE OPERATION OF THE SOFTWARE WILL BE UNINTERRUPTED OR ERROR-FREE, AND YOU ACKNOWLEDGE THAT IT IS NOT TECHNICALLY PRACTICABLE FOR US TO DO SO.\n\n7. LIMITATION OF LIABILITIES\n\nTO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, IN NO EVENT SHALL WE OR OUR SUPPLIERS BE LIABLE FOR ANY SPECIAL, INCIDENTAL, INDIRECT OR CONSEQUENTIAL DAMAGES WHATSOEVER (INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION, LOSS OF BUSINESS INFORMATION OR ANY OTHER PECUNIARY LAW) ARISING OUT OF THE USE OF OR INABILITY TO USE THE SOFTWARE, EVEN IF WE HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. IN ANY CASE, OUR ENTIRE LIABILITY UNDER ANY PROVISION OF THIS LICENSE AGREEMENT SHALL BE LIMITED TO THE AMOUNT ACTUALLY PAID BY YOU FOR THE SOFTWARE.\n\n8. VERIFICATION\n\nWe or a certified auditor acting on Our behalf, may, upon its reasonable request and at its expense, audit You with respect to the use of the Software. Such audit may be conducted by mail, electronic means or through an in-person visit to Your place of business. Any such in-person audit shall be conducted during regular business hours at Your facilities and shall not unreasonably interfere with Your business activities. We shall not remove, copy, or redistribute any electronic material during the course of an audit. If an audit reveals that You are using the Software in a way that is in material violation of the terms of the License Agreement, then You shall pay Our reasonable costs of conducting the audit. In the case of a material violation, You agree to pay Us any amounts owing that are attributable to the unauthorized use. In the alternative, We reserve the right, at Our sole option, to terminate the licenses for the Software.\n\n9. THIRD PARTY SOFTWARE\n\nThe Software may contain third party open-source software which requires notices and/or additional terms and conditions. Such required third party software notices and/or additional terms and conditions are located in the NOTICES file accompanying the Software distribution (also available at https://www.jobrunr.io/documentation/credits-to/), and are made a part of and incorporated by reference into this Agreement. By accepting this Agreement, you are also accepting the additional terms and conditions, if any, set forth therein.\n\n10. PAYMENT AND TAXES\n\nIf credit has been extended to You by Us, all payments under this License Agreement are due within thirty (30) days of the date We mail an invoice to You. If We have not extended credit to You, You shall be required to make payment concurrent with the delivery of the Software by Us. All amounts payable are gross amounts but exclusive of any value added tax, use tax, sales tax or similar tax. You shall be entitled to withhold from payments any applicable withholding taxes and comply with all applicable tax and employment legislation. Each party shall pay all taxes (including, but not limited to, taxes based upon its income) or levies imposed on it under applicable laws, regulations and tax treaties as a result of this Agreement and any payments made hereunder (including those required to be withheld or deducted from payments). Each party shall furnish evidence of such paid taxes as is sufficient to enable the other party to obtain any credits available to it, including original withholding tax certificates.\n\n11. MISCELLANEOUS\n\nThe license granted herein applies only to the version of the Software available when purchased in connection with the terms of this License Agreement. Any previous or subsequent license granted to You for use of the Software shall be governed by the terms and conditions of the agreement entered in connection with purchase of that version of the Software. You agree that you will comply with all applicable laws and regulations with respect to the Software, including without limitation all export and re-export control laws and regulations.\n\nWhile redistributing the Software or Modifications thereof, You may choose to offer acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License Agreement. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on Our behalf. You agree to indemnify, defend, and hold Us harmless from and against any liability incurred by, or claims asserted against, Us (i) by reason of Your accepting any such support, warranty, indemnity or additional liability; or (ii) arising out of the use, reproduction or distribution of Your Application, except to the extent such claim is solely based on the inclusion of the Software therein.\n\nYou agree to be identified as a customer of ours and You agree that We may refer to You by name, trade name and trademark, if applicable, and may briefly describe Your business in our marketing materials and web site.\n\nYou may not assign this License Agreement without Our prior written consent, which will not be unreasonably withheld. This License Agreement will inure to the benefit of Our successors and assigns.\n\nYou acknowledge that this License Agreement is complete and is the exclusive representation of our agreement. No oral or written information given by Us or on our behalf shall create a warranty or collateral contract, or in any way increase the scope of this License Agreement in any way, and You may not rely on any such oral or written information. No term or condition contained in any purchase order shall apply unless expressly accepted by Us in writing.\n\nThere are no implied licenses or other implied rights granted under this License Agreement, and all rights, save for those expressly granted hereunder, shall remain with Us and our licensors. In addition, no licenses or immunities are granted to the combination of the Software and/or Modifications, as applicable, with any other software or hardware not delivered by Us to You under this License Agreement.\n\nIf any provision in this License Agreement shall be determined to be invalid, such provision shall be deemed omitted; the remainder of this License Agreement shall continue in full force and effect. If any remedy provided is determined to have failed for its essential purpose, all limitations of liability and exclusions of damages set forth in this License Agreement shall remain in effect.\n\nThis License Agreement may be modified only by a written instrument signed by an authorized representative of each party.\n\nThis License Agreement is governed by the Belgian law (notwithstanding conflicts of laws provisions), and all parties irrevocably submit to the jurisdiction of the courts of Belgium and further agree to commence any litigation which may arise hereunder in the state or federal courts located in the judicial district of Leuven, Vlaams-Brabant, Belgium.This License Agreement is governed by the Belgian law (notwithstanding conflicts of laws provisions), and all parties irrevocably submit to the jurisdiction of the courts of Belgium and further agree to commence any litigation which may arise hereunder in the state or federal courts located in the judicial district of Leuven, Vlaams-Brabant, Belgium.\n\nIf the Software or any related documentation is licensed to the U.S. government or any agency thereof, it will be deemed to be \"commercial computer software\" or \"commercial computer software documentation\", pursuant to DFAR Section 227.7202 and FAR Section 12.212. Any use of the Software or related documentation by the U.S. government will be governed solely by the terms of this License Agreement."
        },
        {
          "name": "License.md",
          "type": "blob",
          "size": 1.216796875,
          "content": "License\n========\n\nCopyright © 2019-2021 Ronald Dehuysser\n\nJobRunr software is an open-source software that is multi-licensed under the terms of the licenses listed in this file. Recipients may choose the terms under which they are want to use or distribute the software, when all the preconditions of a chosen license are satisfied.\n\nLGPL v3 License\n---------------\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.\n\nPlease see License-lgpl.md file for details.\n\nCommercial License\n------------------\n\nSubject to the purchase of a corresponding subscription (see https://www.jobrunr.io/en/pricing/), you may distribute\nJobRunr under the terms of commercial license, that allows you to distribute private forks and modifications. Please see\nLicense-standard.md and License-royaltyfree.md files for details.\n"
        },
        {
          "name": "PrepareDockerfile",
          "type": "blob",
          "size": 0.654296875,
          "content": "FROM eclipse-temurin:17-jdk-focal@sha256:7f6e0f1356bb8d04aecc3d780fdaed5b01265b128692879eb13de1ba3e9214ab\n\nRUN apt-get update\nRUN apt-get install -y software-properties-common git ca-certificates curl gnupg lsb-release docker.io\nSHELL [\"/bin/bash\", \"--login\", \"-i\", \"-c\"]\nRUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.4/install.sh | bash\nRUN source /root/.bashrc\nRUN nvm install 18.17\nRUN npm -v\nRUN ln -s /root/.nvm/versions/node/v18.17.0/bin/npm /usr/bin/npm\nRUN ln -s /root/.nvm/versions/node/v18.17.0/bin/node /usr/bin/node\n\nENV GRADLE_VERSION 8.5\nCOPY gradle /home/gradle/gradle\nCOPY gradlew /home/gradle/gradlew\nRUN /home/gradle/gradlew -version\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.7998046875,
          "content": "<p align=\"center\">\n <a href=\"https://www.jobrunr.io/en/\" target=\"_blank\"><img src=\"https://user-images.githubusercontent.com/567842/80095933-1181c900-8569-11ea-85e7-14129b3f8142.png\" alt=\"JobRunr logo\"></img></a>\n</p>  \n<p align=\"center\">\nThe ultimate library to perform background processing on the JVM.<br/>\nDead simple API. Extensible. Reliable. <br/>\nDistributed and backed by persistent storage. <br/>\nOpen and free for commercial use.  <br/>\nRecommended and <a href=\"https://www.thoughtworks.com/radar/languages-and-frameworks/jobrunr\">loved by ThoughtWorks</a>.\n</p>  \n<br/>\n\n\n\n<p align=\"center\">\n    <a href=\"https://search.maven.org/artifact/org.jobrunr/jobrunr\"><img src=\"https://maven-badges.herokuapp.com/maven-central/org.jobrunr/jobrunr/badge.svg\"></a>&nbsp;\n    <img alt=\"Drone Build\" src=\"https://build.jobrunr.io/api/badges/jobrunr/jobrunr/status.svg\" />&nbsp;\n    <a href=\"https://www.bestpractices.dev/projects/7376\"><img alt=\"OpenSSF Best Practices\" src=\"https://www.bestpractices.dev/projects/7376/badge\"/></a>&nbsp;\n    <img alt=\"LGPLv3 Licence\" src=\"https://img.shields.io/badge/license-LGPLv3-green.svg\" /><br/>\n    <a href=\"https://sonarcloud.io/dashboard?id=jobrunr_jobrunr\"><img alt=\"Quality Scale\" src=\"https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&metric=sqale_rating\" /></a>&nbsp;\n    <a href=\"https://sonarcloud.io/dashboard?id=jobrunr_jobrunr\"><img alt=\"Vulnerabilities\" src=\"https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&metric=vulnerabilities\" /></a>&nbsp;\n    <a href=\"https://sonarcloud.io/dashboard?id=jobrunr_jobrunr\"><img alt=\"Security Rating\" src=\"https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&metric=security_rating\" /></a><br/>\n    <!--a href=\"https://sonarcloud.io/dashboard?id=jobrunr_jobrunr\"><img alt=\"Coverage\" src=\"https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&metric=coverage\" /></a>&nbsp;\n    <a href=\"https://sonarcloud.io/dashboard?id=jobrunr_jobrunr\"><img alt=\"Reliability Rating\" src=\"https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&metric=reliability_rating\" /></a>&nbsp;\n    <a href=\"https://sonarcloud.io/dashboard?id=jobrunr_jobrunr\"><img alt=\"Bugs\" src=\"https://sonarcloud.io/api/project_badges/measure?project=jobrunr_jobrunr&metric=bugs\" /></a--><br/>\n    <a href=\"https://twitter.com/intent/tweet?text=Try%20JobRunr%20for%20easy%20distributed%20background%20job%20processing%20on%20the%20JVM%21%20&url=https://www.jobrunr.io&via=jobrunr&hashtags=java,scheduling,processing,distributed,developers\"><img alt=\"Tweet about us!\" src=\"https://www.jobrunr.io/tweet-btn.svg?v2\" /></a>&nbsp;\n    <a href=\"https://github.com/jobrunr/jobrunr/stargazers\"><img alt=\"Star us!\" src=\"https://www.jobrunr.io/github-star-btn.svg?v2\" /></a>\n    <a href=\"https://github.com/jobrunr/jobrunr/discussions\"><img src=\"https://img.shields.io/badge/chat-Github%20discussions-green\" alt=\"Join the chat at Gitter\" /></a><br />\n</p>\n\n## Overview\n```java\nBackgroundJob.enqueue(() -> System.out.println(\"This is all you need for distributed jobs!\"));\n```\n\nIncredibly easy way to perform **fire-and-forget**, **delayed**, **scheduled** and **recurring jobs** inside **Java applications** using only *Java 8 lambda's*. CPU and I/O intensive, long-running and short-running jobs are supported. Persistent storage is done via either RDBMS (e.g. Postgres, MariaDB/MySQL, Oracle, SQL Server, DB2 and SQLite) or NoSQL (ElasticSearch, MongoDB and Redis).\n\nJobRunr provides a unified programming model to handle background tasks in a **reliable way** and runs them on shared hosting, dedicated hosting or in the cloud ([hello Kubernetes](https://www.jobrunr.io/en/blog/2020-05-06-jobrunr-kubrnetes-terraform/)) within a JVM instance.\n\n\n## Feedback\n> Thanks for building JobRunr, I like it a lot! Before that I used similar libraries in Ruby and Golang and JobRunr so far is the most pleasant one to use. I especially like the dashboard, it’s awesome! [Alex Denisov](https://www.linkedin.com/in/alex-denisov-a29bab2a/)\n\nView more feedback on [jobrunr.io](https://www.jobrunr.io/en/#why-jobrunr).\n\n\n## Features\n- Simple: just use Java 8 lambda's to create a background job.\n- Distributed & cluster-friendly: guarantees execution by single scheduler instance using optimistic locking.\n- Persistent jobs: using either a RDBMS (four tables and a view) or a NoSQL data store.\n- Embeddable: built to be embedded in existing applications.\n- Minimal dependencies: ([ASM](https://asm.ow2.io/), slf4j and either [jackson](https://github.com/FasterXML/jackson) and jackson-datatype-jsr310, [gson](https://github.com/google/gson) or a JSON-B compliant library).\n\n## Usage scenarios\nSome scenarios where it may be a good fit:\n- within a REST api return response to client immediately and perform long-running job in the background\n- mass notifications/newsletters\n- calculations of wages and the creation of the resulting documents\n- batch import from xml, csv or json\n- creation of archives\n- firing off web hooks\n- image/video processing\n- purging temporary files\n- recurring automated reports\n- database maintenance\n- updating elasticsearch/solr after data changes \n- *…and so on*\n\nYou can start small and process jobs within your web app or scale horizontally and add as many background job servers as you want to handle a peak of jobs. JobRunr will distribute the load over all the servers for you. JobRunr is also fault-tolerant - is an external web service down? No worries, the job is automatically retried 10-times with a smart back-off policy.\n\nJobRunr is a Java alternative to [HangFire](https://github.com/HangfireIO/Hangfire), [Resque](https://github.com/resque/resque), [Sidekiq](http://sidekiq.org), [delayed_job](https://github.com/collectiveidea/delayed_job), [Celery](https://github.com/celery/celery) and is similar to [Quartz](https://github.com/quartz-scheduler/quartz) and [Spring Task Scheduler](https://github.com/spring-guides/gs-scheduling-tasks).\n\n\nScreenshots\n-----------\n<img src=\"https://user-images.githubusercontent.com/567842/80217070-60019700-863f-11ea-9f02-d62c77e97a1c.png\" width=\"45%\" style=\"margin-right: 20px;\"></img>&nbsp;&nbsp;&nbsp;<img src=\"https://user-images.githubusercontent.com/567842/80217075-609a2d80-863f-11ea-8994-cd0ca16b31c4.png\" width=\"45%\"></img> <br/> <img src=\"https://user-images.githubusercontent.com/567842/80217067-5f690080-863f-11ea-9d41-3e2878ae7ac8.png\" width=\"45%\" style=\"margin-right: 20px;\"></img>&nbsp;&nbsp;&nbsp;<img src=\"https://user-images.githubusercontent.com/567842/80217063-5ed06a00-863f-11ea-847b-3ed829fd5503.png\" width=\"45%\"></img><br /><img src=\"https://user-images.githubusercontent.com/567842/80217079-6132c400-863f-11ea-9789-8633897ef317.png\" width=\"45%\" style=\"margin-right: 20px;\"></img>&nbsp;&nbsp;&nbsp;<img src=\"https://user-images.githubusercontent.com/567842/80217078-609a2d80-863f-11ea-9b49-c891985de924.png\" width=\"45%\"></img> \n\nUsage\n------\n\n[**Fire-and-forget tasks**](https://www.jobrunr.io/en/documentation/background-methods/enqueueing-jobs/)\n\nDedicated worker pool threads execute queued background jobs as soon as possible, shortening your request's processing time.\n\n```java\nBackgroundJob.enqueue(() -> System.out.println(\"Simple!\"));\n```\n\n[**Delayed tasks**](https://www.jobrunr.io/en/documentation/background-methods/scheduling-jobs/)\n\nScheduled background jobs are executed only after a given amount of time.\n\n```java\nBackgroundJob.schedule(Instant.now().plusHours(5), () -> System.out.println(\"Reliable!\"));\n```\n\n[**Recurring tasks**](https://www.jobrunr.io/en/documentation/background-methods/recurring-jobs/)\n\nRecurring jobs have never been simpler; just call the following method to perform any kind of recurring task using the [CRON expressions](http://en.wikipedia.org/wiki/Cron#CRON_expression).\n\n```java\nBackgroundJob.scheduleRecurrently(\"my-recurring-job\", Cron.daily(), () -> service.doWork());\n```\n\n**Process background tasks inside a web application…**\n\nYou can process background tasks in any web application and we have thorough support for [Spring](https://spring.io/) - JobRunr is reliable to process your background jobs within a web application.\n\n**… or anywhere else**\n\nLike a Spring Console Application, wrapped in a docker container, that keeps running forever and polls for new background jobs.\n\nSee [https://www.jobrunr.io](https://www.jobrunr.io) for more info.\n\nInstallation\n------------\n \n #### Using Maven?\n \n JobRunr is available in Maven Central - all you need to do is add the following dependency:\n \n ```xml\n<dependency>\n    <groupId>org.jobrunr</groupId>\n    <artifactId>jobrunr</artifactId>\n    <version>${jobrunr.version}</version>\n</dependency>\n```\n \n #### Using Gradle?\n \nJust add the dependency to JobRunr:\n ```groovy\nimplementation 'org.jobrunr:jobrunr:${jobrunr.version}'\n```\n\nConfiguration\n------------\n#### Do you like to work Spring based?\n\nAdd the [*jobrunr-spring-boot-3-starter*](https://search.maven.org/artifact/org.jobrunr/jobrunr-spring-boot-3-starter) to your dependencies and you're almost ready to go! Just set up your `application.properties`:\n\n```\n# the job-scheduler is enabled by default\n# the background-job-server and dashboard are disabled by default\norg.jobrunr.job-scheduler.enabled=true\norg.jobrunr.background-job-server.enabled=true\norg.jobrunr.dashboard.enabled=true\n```\n\n#### Or do you prefer a fluent API?\nDefine a `javax.sql.DataSource` and put the following code on startup:\n\n```java\n@SpringBootApplication\npublic class JobRunrApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(JobRunrApplication.class, args);\n    }\n\n    @Bean\n    public JobScheduler initJobRunr(DataSource dataSource, JobActivator jobActivator) {\n        return JobRunr.configure()\n                .useJobActivator(jobActivator)\n                .useStorageProvider(SqlStorageProviderFactory\n                          .using(dataSource))\n                .useBackgroundJobServer()\n                .useDashboard()\n                .initialize().getJobScheduler();\n    }\n}\n```\n## Contributing\n\nSee [CONTRIBUTING](https://github.com/jobrunr/jobrunr/blob/master/CONTRIBUTING.md) for details on submitting patches and the contribution workflow.\n\n### How can I contribute?\n* Take a look at issues with tag called [`Good first issue`](https://github.com/jobrunr/jobrunr/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22)\n* Join the discussion on [Github discussion](https://github.com/jobrunr/jobrunr/discussions) - we won't be using Gitter anymore.\n* Answer questions on [issues](https://github.com/jobrunr/jobrunr/issues).\n* Fix bugs reported on [issues](https://github.com/jobrunr/jobrunr/issues), and send us pull request.\n\n### How to build?\n* `git clone https://github.com/jobrunr/jobrunr.git`\n* `cd jobrunr`\n* `cd core/src/main/resources/org/jobrunr/dashboard/frontend`\n* `npm i`\n* `npm run build`\n* `cd -`\n* `./gradlew publishToMavenLocal`\n\nThen, in your own project you can depend on `org.jobrunr:jobrunr:1.0.0-SNAPSHOT`.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.84375,
          "content": "# Security Policy\n\n\n## JobRunr OSS Supported Versions\n\nHere you can find the different supported JobRunr OSS versions that are supported and will get security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| LATEST   | :white_check_mark: |\n| < LATEST | :x:                |\n\n\n## JobRunr Pro Supported Versions\n\nHere you can find the different supported JobRunr Pro versions that are supported and will get security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| LATEST   | :white_check_mark: |\n| < LATEST   | :x:  |\n| 5.3.x  |  :white_check_mark: |\n| <= 5.3.x   | :x:  |\n\n\n## Reporting a Vulnerability\n\nIf you find a security vulerability, please email us at [hello@jobrunr.io](hello@jobrunr.io) with the details.\n\nWe will answer within 1 business day and keep you updated on our findings along the way.\n"
        },
        {
          "name": "Testing.md",
          "type": "blob",
          "size": 5.5078125,
          "content": "# Testing\n\n## Postgres\n\n`docker run -p 5432:5432 -e POSTGRES_PASSWORD=postgres -d postgres`\n\n```properties\nspring.datasource.url=jdbc:postgresql://localhost:5432/postgres\nspring.datasource.username=postgres\nspring.datasource.password=postgres\n```\n\n## MySQL\n\n`docker run -p 3306:3306 -e MYSQL_ROOT_PASSWORD=mysql -e MYSQL_DATABASE=mysql -d mysql:5.7`\n\n```properties\nspring.datasource.url=jdbc:mysql://localhost:3306/mysql\nspring.datasource.username=root\nspring.datasource.password=mysql\n```\n\n## MariaDB\n\n`docker run -p 3306:3306 -e MYSQL_ROOT_PASSWORD=mysql -e MYSQL_DATABASE=mysql -d mariadb`\n\n```properties\nspring.datasource.url=jdbc:mariadb://localhost:3306/mysql\nspring.datasource.username=root\nspring.datasource.password=mysql\n```\n\n## SQL Server\n\n`docker run -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=sqlServer(!)' -p 1433:1433 -d mcr.microsoft.com/mssql/server:2017-latest`\n\n```properties\nspring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=tempdb\nspring.datasource.username=sa\nspring.datasource.password=sqlServer(!)\n```\n\n## Oracle\n\n`docker run -d --env DB_PASSWD=oracle -p 1527:1521 -p 5507:5500 -it --shm-size=\"8g\" container-registry.oracle.com/database/standard:12.1.0.2`\n\n```properties\nspring.datasource.url=jdbc:oracle:thin:@localhost:1527:ORCL\nspring.datasource.username=system\nspring.datasource.password=oracle\n```\n\n## DB2\n\n`docker run -itd --privileged=true -p 50000:50000 -e LICENSE=accept -e DB2INST1_PASSWORD=db2password -e DBNAME=testdb ibmcom/db2`\n\n```properties\nspring.datasource.url=jdbc:db2://127.0.0.1:50000/testdb\nspring.datasource.username=db2inst1\nspring.datasource.password=db2password\n```\n\n## Redis\n\n`docker run -d -p 6379:6379 redis`\n\n### Jedis\n\n```java\n    @Bean\npublic StorageProvider storageProvider(JobMapper jobMapper){\nfinal JedisRedisStorageProvider jedisRedisStorageProvider=new JedisRedisStorageProvider(getJedisPool(),rateLimit().withoutLimits());\n        jedisRedisStorageProvider.setJobMapper(new JobMapper(new JacksonJsonMapper()));\n        return jedisRedisStorageProvider;\n        }\n\nprivate JedisPool getJedisPool(){\n        return new JedisPool(\"127.0.0.1\",6379);\n        }\n```\n\n### Lettuce\n\n```java\n    @Bean\npublic StorageProvider storageProvider(JobMapper jobMapper){\nfinal LettuceRedisStorageProvider lettuceRedisStorageProvider=new LettuceRedisStorageProvider(getRedisClient(),rateLimit().withoutLimits());\n        lettuceRedisStorageProvider.setJobMapper(jobMapper);\n        return lettuceRedisStorageProvider;\n        }\n\nprivate RedisClient getRedisClient(){\n        return RedisClient.create(RedisURI.create(\"127.0.0.1\",6379));\n        }\n```\n\n## Mongo\n\n`docker run -d -p 27017:27017 mongo:4.4`\n\n```java\n    @Bean\npublic StorageProvider storageProvider(JobMapper jobMapper){\nfinal MongoDBStorageProvider dbStorageProvider=new MongoDBStorageProvider(mongoClient(),rateLimit().withoutLimits());\n        dbStorageProvider.setJobMapper(jobMapper);\n        return dbStorageProvider;\n        }\n\nprivate MongoClient mongoClient(){\n        CodecRegistry codecRegistry=CodecRegistries.fromRegistries(\n        CodecRegistries.fromCodecs(new UuidCodec(UuidRepresentation.STANDARD)),\n        MongoClientSettings.getDefaultCodecRegistry()\n        );\n        return MongoClients.create(\n        MongoClientSettings.builder()\n        .applyToClusterSettings(builder->builder.hosts(Arrays.asList(new ServerAddress(\"127.0.0.1\",27017))))\n        .codecRegistry(codecRegistry)\n        .build());\n        }\n```\n\n## DocumentDB\n\n- Start new DocumentDB instance in cloud with username jobrunr and password jobrunr123.\n  note: TLS must be enabled, see https://stackoverflow.com/questions/68322959/why-am-i-getting-connection-timed-out-when-connecting-to-aws-document-db-from-my\n- Create a new Ubuntu EC2 instance in the same VPC (Virtual Private Cloud) and GENERATE a new key pair (will be downloaded automatically). Call it\n  default-documentdb.pem\n- chmod 400 default-documentdb.pem\n- Change the Inbound Rules of the EC2 instance and ADD A NEW rule to allow access from everywhere\n- Create a new DocumentDB cluster parameter group and disable TLS\n- Assign the new Cluster Parameter Group to the DocumentDB cluster\n- Restart the cluster\n- Use the link provided by Amazon and create a ConnectionString with it passing it to the client\n\n```java\n    @Bean\nprivate MongoClient mongoClient(){\n        CodecRegistry codecRegistry=CodecRegistries.fromRegistries(\n        CodecRegistries.fromCodecs(new UuidCodec(UuidRepresentation.STANDARD)),\n        MongoClientSettings.getDefaultCodecRegistry()\n        );\n        if(mongoClient==null){\n        mongoClient=MongoClients.create(\n        MongoClientSettings.builder()\n        .applyConnectionString(new ConnectionString(\"mongodb://jobrunr:jobrunr123@docdb-2023-04-24-09-47-54.cluster-cjpre4alt9oy.us-east-1.docdb.amazonaws.com:27017/?replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false\"))\n        .codecRegistry(codecRegistry)\n        .build());\n\n        }\n        return mongoClient;\n        }\n```\n\n## ElasticSearch\n\n`docker run -p 9200:9200 -p 9300:9300 -e \"discovery.type=single-node\" elasticsearch:7.9.1`\n\n```java\n    @Bean\npublic StorageProvider storageProvider(JobMapper jobMapper){\nfinal ElasticSearchStorageProvider elasticSearchStorageProvider=new ElasticSearchStorageProvider(getElasticSearchClient(),rateLimit().withoutLimits());\n        elasticSearchStorageProvider.setJobMapper(jobMapper);\n        return elasticSearchStorageProvider;\n        }\n\nprivate RestHighLevelClient getElasticSearchClient(){\n        return new RestHighLevelClient(\n        RestClient.builder(\n        new HttpHost(\"127.0.0.1\",9200,\"http\")));\n\n        }\n```"
        },
        {
          "name": "Todo.md",
          "type": "blob",
          "size": 0.6884765625,
          "content": "# Todo\n\n- [ ] In case of too much logging, truncate\n- [ ] Pro only: allow to set amount of cycles if CPUAllocationInfo problem occurs\n- [ ] Use code below to provide more info about stop the world GC in dashboard and github SevereJobRunrException\n- [ ] JobFilters in different threads\n\n\n```java\ntry{\n        List<GarbageCollectorMXBean> gcMxBeans=ManagementFactory.getGarbageCollectorMXBeans();\n\n        for(GarbageCollectorMXBean gcMxBean:gcMxBeans){\n        System.out.println(gcMxBean.getName());\n        System.out.println(gcMxBean.getObjectName());\n        }\n        }catch(RuntimeException re){\n        throw re;\n        }catch(Exception exp){\n        throw new RuntimeException(exp);\n        }\n```\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 3.5244140625,
          "content": "plugins {\n    id 'com.github.ben-manes.versions' version '0.51.0'\n    id 'org.sonarqube' version '4.4.1.3373'\n    id 'io.github.gradle-nexus.publish-plugin' version '2.0.0'\n    id 'signing'\n}\n\nnexusPublishing {\n    packageGroup = \"org.jobrunr\"\n    repositories {\n        sonatype()\n    }\n}\n\nsubprojects {\n    group = 'org.jobrunr'\n    version = System.getenv('DRONE_TAG')?.replace(\"v\", \"\") ?: \"v1.0.0-SNAPSHOT\".replace(\"v\", \"\")\n}\n\ndef isNonStable = { String version ->\n    def isPreview = ['SNAPSHOT', 'ALPHA'].any { it -> version.toUpperCase().contains(it) }\n    def isRelease = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }\n    def regex = /(?!\\.)(\\d+(\\.\\d+)+)(?![\\d\\.])?(\\.jre\\d)?/\n    def isVersionMatch = (version ==~ regex)\n    def result = isPreview || !(isRelease || isVersionMatch)\n    return result\n}\n\ntasks.named(\"dependencyUpdates\").configure {\n    rejectVersionIf {\n        isNonStable(it.candidate.version) && !isNonStable(it.currentVersion)\n    }\n}\n\nconfigure(subprojects.findAll { !['platform'].contains(it.name) }) {\n    apply plugin: 'java'\n    apply plugin: 'idea'\n    apply plugin: 'jacoco'\n\n    compileJava {\n        sourceCompatibility = JavaVersion.VERSION_1_8\n        targetCompatibility = JavaVersion.VERSION_1_8\n        options.encoding = \"UTF-8\"\n        options.release = 8\n    }\n\n    compileTestJava {\n        sourceCompatibility = JavaVersion.VERSION_11\n        targetCompatibility = JavaVersion.VERSION_11\n        options.encoding = \"UTF-8\"\n    }\n\n    javadoc {\n        options.encoding = \"UTF-8\"\n    }\n\n    repositories {\n        mavenCentral()\n        mavenLocal()\n    }\n\n    dependencies {\n        implementation platform(project(':platform'))\n\n        testImplementation 'org.junit.jupiter:junit-jupiter'\n        testImplementation 'io.github.artsok:rerunner-jupiter'\n        testImplementation 'org.awaitility:awaitility'\n        testImplementation 'org.assertj:assertj-core'\n        testImplementation 'com.tngtech.archunit:archunit-junit5'\n        testImplementation 'net.javacrumbs.json-unit:json-unit-assertj'\n        testImplementation 'ch.qos.logback:logback-classic'\n        testImplementation 'org.mockito:mockito-inline'\n        testImplementation 'org.mockito:mockito-junit-jupiter'\n    }\n\n    tasks.clean.doFirst {\n        delete \"/tmp/reports/$project.name\"\n        println \"Deleted /tmp/reports/$project.name\"\n    }\n\n    test {\n        finalizedBy jacocoTestReport\n        reports.junitXml.destination = file(\"/tmp/reports/$project.name\")\n        reports.html.destination = file(\"/tmp/reports/$project.name\")\n\n        useJUnitPlatform()\n        testLogging {\n            minGranularity = 3\n            events \"passed\", \"skipped\", \"failed\"\n        }\n    }\n\n    sonar {\n        properties {\n            property \"sonar.sourceEncoding\", \"UTF-8\"\n            property \"sonar.projectKey\", \"jobrunr_jobrunr\"\n            property \"sonar.organization\", \"jobrunr\"\n            property \"sonar.branch.name\", System.getenv(\"DRONE_BRANCH\") ?: \"master\"\n            property \"sonar.coverage.jacoco.xmlReportPaths\", \"/tmp/reports/$project.name/jacocoTestCoverage.xml\"\n        }\n    }\n\n    jacoco {\n        toolVersion = \"0.8.12\"\n    }\n\n    jacocoTestReport {\n        reports {\n            xml.required = true\n            xml.destination = file(\"/tmp/reports/$project.name/jacocoTestCoverage.xml\")\n            csv.required = false\n            html.required = false\n        }\n    }\n\n    if (JavaVersion.current().isJava8Compatible()) {\n        tasks.withType(Javadoc) {\n            options.addStringOption('Xdoclint:none', '-quiet')\n        }\n    }\n}"
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "framework-support",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.208984375,
          "content": "org.gradle.jvmargs=--add-opens=java.base/java.io=ALL-UNNAMED\norg.gradle.caching=true\nsystemProp.sonar.host.url=https://sonarcloud.io\nsystemProp.sonar.organization=jobrunr\nsystemProp.sonar.projectKey=jobrunr_jobrunr"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.48828125,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd \"${APP_HOME:-./}\" > /dev/null && pwd -P ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.7109375,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "language-support",
          "type": "tree",
          "content": null
        },
        {
          "name": "platform",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.9365234375,
          "content": "pluginManagement {\n    repositories {\n        mavenCentral()\n        maven { url 'https://plugins.gradle.org/m2/' }\n        maven { url 'https://repo.spring.io/release' }\n        maven { url 'https://repo.spring.io/milestone' }\n        gradlePluginPortal()\n    }\n}\n\nrootProject.name = 'JobRunr'\ninclude ':platform'\ninclude ':core'\ninclude ':language-support:jobrunr-kotlin-19-support'\ninclude ':language-support:jobrunr-kotlin-20-support'\ninclude ':language-support:jobrunr-kotlin-21-support'\ninclude ':framework-support:jobrunr-micronaut-feature'\ninclude ':framework-support:jobrunr-quarkus-extension:quarkus-jobrunr-deployment'\ninclude ':framework-support:jobrunr-quarkus-extension:quarkus-jobrunr'\ninclude ':framework-support:jobrunr-quarkus-extension:tests'\ninclude ':framework-support:jobrunr-spring-boot-2-starter'\ninclude ':framework-support:jobrunr-spring-boot-3-starter'\ninclude ':tests:e2e-base'\ninclude ':tests:e2e-ui'\ninclude ':tests:e2e-vm-jdk'\n\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}