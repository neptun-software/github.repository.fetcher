{
  "metadata": {
    "timestamp": 1736708547706,
    "page": 789,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xtuhcy/gecco",
      "stars": 2505,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.07421875,
          "content": "/target/\n/.settings/\n/doc/\n.project\n.classpath\n/gecco.iml\n/.idea\n.gitignore\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.03515625,
          "content": "language: java\r\njdk:\r\n  - oraclejdk8"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.048828125,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 xtuhcy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.3828125,
          "content": "![ci](https://api.travis-ci.org/xtuhcy/gecco.svg?branch=master)\n![maven](https://img.shields.io/maven-central/v/com.geccocrawler/gecco.svg?style=flat-square)\n[![996.icu](https://img.shields.io/badge/link-996.icu-red.svg)](https://996.icu)\n\n## What is Gecco\n\nGecco is a easy to use lightweight web crawler developed with java language.Gecco integriert jsoup, httpclient, fastjson, spring, htmlunit, redission ausgezeichneten framework,Let you only need to configure a number of jQuery style selector can be very quick to write a crawler.Gecco framework has excellent scalability, the framework based on the principle of open and close design, to modify the closure, the expansion of open.At the same time Gecco is based on a very open MIT open source protocol, whether you are a user or want to jointly improve the Gecco developer, welcome to request pull.If you like the crawler framework,please [star or fork](https://github.com/xtuhcy/gecco)!\n\n- [中文说明](https://github.com/xtuhcy/gecco/blob/master/README_CN.md)\n\n## Main features\n\n- [x] Easy to use, use jQuery style selector to extract elements\n- [x] Support for asynchronous Ajax requests in the page\n- [x] Support page JavaScript variable extraction\n- [x] Using Redis to realize distributed crawling,reference [gecco-redis](https://github.com/xtuhcy/gecco-redis)\n- [x] Support the development of business logic with Spring,reference [gecco-spring](https://github.com/xtuhcy/gecco-spring)\n- [x] Support htmlunit extension,reference [gecco-htmlunit](https://github.com/xtuhcy/gecco-htmlunit)\n- [x] Support extension mechanism\n- [x] Support download UserAgent random selection\n- [x] Support the download proxy server randomly selected\n\n## Framework overview\n\n![架构图](https://raw.githubusercontent.com/xtuhcy/gecco/master/doc/%E6%9E%B6%E6%9E%84%E5%9B%BE.jpg)\n\n## Download\n\n### Download via Maven\n\n```xml\n<dependency>\n    <groupId>com.geccocrawler</groupId>\n    <artifactId>gecco</artifactId>\n    <version>x.x.x</version>\n</dependency>\n```\n\n![maven](https://img.shields.io/maven-central/v/com.geccocrawler/gecco.svg?style=flat-square)\n\n### Dependent project\n\nhttpclient，jsoup，fastjson，reflections，cglib，rhino，log4j，jmxutils，commons-lang3\n\n## Quick start\n\n```java\n@Gecco(matchUrl=\"https://github.com/{user}/{project}\", pipelines=\"consolePipeline\")\npublic class MyGithub implements HtmlBean {\n\n    private static final long serialVersionUID = -7127412585200687225L;\n\n    @RequestParameter(\"user\")\n    private String user;\n\n    @RequestParameter(\"project\")\n    private String project;\n\n    @Text\n    @HtmlField(cssPath=\".pagehead-actions li:nth-child(2) .social-count\")\n    private String star;\n\n    @Text\n    @HtmlField(cssPath=\".pagehead-actions li:nth-child(3) .social-count\")\n    private String fork;\n\n    @Html\n    @HtmlField(cssPath=\".entry-content\")\n    private String readme;\n\n    public String getReadme() {\n        return readme;\n    }\n\n    public void setReadme(String readme) {\n        this.readme = readme;\n    }\n\n    public String getUser() {\n        return user;\n    }\n\n    public void setUser(String user) {\n        this.user = user;\n    }\n\n    public String getProject() {\n        return project;\n    }\n\n    public void setProject(String project) {\n        this.project = project;\n    }\n\n    public String getStar() {\n        return star;\n    }\n\n    public void setStar(String star) {\n        this.star = star;\n    }\n\n    public String getFork() {\n        return fork;\n    }\n\n    public void setFork(String fork) {\n        this.fork = fork;\n    }\n\n    public static void main(String[] args) {\n        GeccoEngine.create()\n        .classpath(\"com.geccocrawler.gecco.demo\")\n        .start(\"https://github.com/xtuhcy/gecco\")\n        .thread(1)\n        .interval(2000)\n        .loop(true)\n        .mobile(false)\n        .start();\n    }\n}\n```\n\n## DynamicGecco\n\nThe purpose of DynamicGecco is to implement the runtime configuration of the crawl rule without defining the SpiderBean.In fact, the principle is the use of byte code programming, dynamic generation of SpiderBean, but also through the custom GeccoClassLoader to achieve the rule of hot deployment.Below is a simple Demo, more complex Demo can refer to the example below com.geccocrawler.gecco.demo.dynamic.\n\nThe following code implements the runtime configuration of the crawl rule:\n\n    DynamicGecco.html()\n    .gecco(\"https://github.com/{user}/{project}\", \"consolePipeline\")\n    .requestField(\"request\").request().build()\n    .stringField(\"user\").requestParameter(\"user\").build()\n    .stringField(\"project\").requestParameter().build()\n    .stringField(\"star\").csspath(\".pagehead-actions li:nth-child(2) .social-count\").text(false).build()\n    .stringField(\"fork\").csspath(\".pagehead-actions li:nth-child(3) .social-count\").text().build()\n    .stringField(\"contributors\").csspath(\"ul.numbers-summary > li:nth-child(4) > a\").href().build()\n    .register();\n\n    GeccoEngine.create()\n    .classpath(\"com.geccocrawler.gecco.demo\")\n    .start(\"https://github.com/xtuhcy/gecco\")\n    .run();\n\nYou can see that the DynamicGecco way compared to the traditional way of annotation code greatly reduced, and a very cool point is DynamicGecco to support the operation of the definition and modification of rules.\n\n## Demo\n\n[教您使用 java 爬虫 gecco 抓取 JD 全部商品信息（一）](http://my.oschina.net/u/2336761/blog/620158)\n\n[教您使用 java 爬虫 gecco 抓取 JD 全部商品信息（二）](http://my.oschina.net/u/2336761/blog/620827)\n\n[教您使用 java 爬虫 gecco 抓取 JD 全部商品信息（三）](http://my.oschina.net/u/2336761/blog/624683)\n\n[集成 Htmlunit 下载页面](http://my.oschina.net/u/2336761/blog/631959)\n\n[爬虫的监控](http://my.oschina.net/u/2336761/blog/644330)\n\n[一个完整的例子，分页处理，结合 spring，mysql 入库](http://git.oschina.net/xiaomaoguai/gecco-demo)\n\n## Similar Tool Comparison\n\nA list of similar tools and how they compare is available here:\n\n[Web Archiving Software Comparision](https://github.com/archivers-space/research/tree/master/web_archiving)\n\n## Contact and communication\n\n- blog：http://my.oschina.net/u/2336761/blog\n- email：xtuhcy@163.com\n\n## 请作者喝杯咖啡\n\nGecco 的发展离不开大家支持，扫一扫请作者喝杯咖啡～\n\n![支付宝](http://www.geccocrawler.com/content/images/jz-zfb.jpg?xx=2)\n![支付宝](http://www.geccocrawler.com/content/images/jz-wx.png)\n\n## License\n\nPlease follow the open source protocol [MIT](https://raw.githubusercontent.com/xtuhcy/gecco/master/LICENSE)!\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 8.697265625,
          "content": "![ci](https://api.travis-ci.org/xtuhcy/gecco.svg?branch=master)\n![maven](https://img.shields.io/maven-central/v/com.geccocrawler/gecco.svg?style=flat-square)\n\n## Gecco 是什么\n\nGecco 是一款用 java 语言开发的轻量化的易用的网络爬虫。Gecco 整合了 jsoup、httpclient、fastjson、spring、htmlunit、redission 等优秀框架，让您只需要配置一些 jquery 风格的选择器就能很快的写出一个爬虫。Gecco 框架有优秀的可扩展性，框架基于开闭原则进行设计，对修改关闭、对扩展开放。同时 Gecco 基于十分开放的 MIT 开源协议，无论你是使用者还是希望共同完善 Gecco 的开发者，欢迎 pull request。如果你喜欢这款爬虫框架请[star 或者 fork](https://gitee.com/xtuhcy/gecco)!\n\n[参考手册](http://www.geccocrawler.com/)\n\n## 主要特征\n\n- [x] 简单易用，使用 jquery 风格的选择器抽取元素\n- [x] 支持爬取规则的动态配置和加载\n- [x] 支持页面中的异步 ajax 请求\n- [x] 支持页面中的 javascript 变量抽取\n- [x] 利用 Redis 实现分布式抓取,参考[gecco-redis](https://github.com/xtuhcy/gecco-redis)\n- [x] 支持结合 Spring 开发业务逻辑,参考[gecco-spring](https://github.com/xtuhcy/gecco-spring)\n- [x] 支持 htmlunit 扩展,参考[gecco-htmlunit](https://github.com/xtuhcy/gecco-htmlunit)\n- [x] 支持插件扩展机制\n- [x] 支持下载时 UserAgent 随机选取\n- [x] 支持下载代理服务器随机选取\n\n## 框架概述\n\n![架构图](https://raw.githubusercontent.com/xtuhcy/gecco/master/doc/%E6%9E%B6%E6%9E%84%E5%9B%BE.jpg)\n\n### GeccoEngine\n\n> GeccoEngine 是爬虫引擎，每个爬虫引擎最好是一个独立进程，在分布式爬虫场景下，建议每台爬虫服务器（物理机或者虚机）运行一个 GeccoEngine。爬虫引擎包括 Scheduler、Downloader、Spider、SpiderBeanFactory、PipelineFactory5 个主要模块。\n\n### Scheduler\n\n> 通常爬虫需要一个有效管理下载地址的角色，Scheduler 负责下载地址的管理。gecco 对初始地址的管理使用 StartScheduler，StartScheduler 内部采用一个阻塞的 FIFO 的队列。初始地址通常会派生出很多其他待抓取的地址，派生出来的其他地址采用 SpiderScheduler 进行管理，SpiderScheduler 内部采用线程安全的非阻塞 FIFO 队列。这种设计使的 gecco 对初始地址采用了深度遍历的策略，即一个线程抓取完一个初始地址后才会去抓取另外一个初始地址；对初始地址派生出来的地址，采用广度优先策略。\n\n### Downloader\n\n> Downloader 负责从 Scheduler 中获取需要下载的请求，gecco 默认采用 httpclient4.x 作为下载引擎。通过实现 Downloader 接口可以自定义自己的下载引擎。你也可以对每个请求定义 BeforeDownload 和 AfterDownload，实现不同的请求下载的个性需求。\n\n### SpiderBeanFactory\n\n> Gecco 将下载下来的内容渲染为 SpiderBean，所有爬虫渲染的 JavaBean 都统一继承 SpiderBean，SpiderBean 又分为 HtmlBean 和 JsonBean 分别对应 html 页面的渲染和 json 数据的渲染。SpiderBeanFactroy 会根据请求的 url 地址，匹配相应的 SpiderBean，同时生成该 SpiderBean 的上下文 SpiderBeanContext。上下文 SpiderBeanContext 会告知这个 SpiderBean 采用什么渲染器，采用那个下载器，渲染完成后采用哪些 pipeline 处理等相关上下文信息。\n\n### PipelineFactory\n\n> pipeline 是 SpiderBean 渲染完成的后续业务处理单元，PipelineFactory 是 pipeline 的工厂类，负责 pipeline 实例化。通过扩展 PipelineFactory 就可以实现和 Spring 等业务处理框架的整合。\n\n### Spider\n\n> Gecco 框架最核心的类应该是 Spider 线程，一个爬虫引擎可以同时运行多个 Spider 线程。Spider 描绘了这个框架运行的基本骨架，先从 Scheduler 获取请求，再通过 SpiderBeanFactory 匹配 SpiderBeanClass，再通过 SpiderBeanClass 找到 SpiderBean 的上下文，下载网页并对 SpiderBean 做渲染，将渲染后的 SpiderBean 交个 pipeline 处理。\n\n## 下载\n\n### 通过 Maven 下载\n\n```xml\n<dependency>\n    <groupId>com.geccocrawler</groupId>\n    <artifactId>gecco</artifactId>\n    <version>x.x.x</version>\n</dependency>\n```\n\n![maven](https://img.shields.io/maven-central/v/com.geccocrawler/gecco.svg?style=flat-square)\n\n### 依赖项目\n\nhttpclient，jsoup，fastjson，reflections，cglib，rhino，log4j，jmxutils，commons-lang3\n\n## 快速开始\n\n```java\n@Gecco(matchUrl=\"https://github.com/{user}/{project}\", pipelines=\"consolePipeline\")\npublic class MyGithub implements HtmlBean {\n\n    private static final long serialVersionUID = -7127412585200687225L;\n\n    @RequestParameter(\"user\")\n    private String user;//url中的{user}值\n\n    @RequestParameter(\"project\")\n    private String project;//url中的{project}值\n\n    @Text\n    @HtmlField(cssPath=\".pagehead-actions li:nth-child(2) .social-count\")\n    private String star;//抽取页面中的star\n\n    @Text\n    @HtmlField(cssPath=\".pagehead-actions li:nth-child(3) .social-count\")\n    private String fork;//抽取页面中的fork\n\n    @Html\n    @HtmlField(cssPath=\".entry-content\")\n    private String readme;//抽取页面中的readme\n\n    public String getReadme() {\n        return readme;\n    }\n\n    public void setReadme(String readme) {\n        this.readme = readme;\n    }\n\n    public String getUser() {\n        return user;\n    }\n\n    public void setUser(String user) {\n        this.user = user;\n    }\n\n    public String getProject() {\n        return project;\n    }\n\n    public void setProject(String project) {\n        this.project = project;\n    }\n\n    public String getStar() {\n        return star;\n    }\n\n    public void setStar(String star) {\n        this.star = star;\n    }\n\n    public String getFork() {\n        return fork;\n    }\n\n    public void setFork(String fork) {\n        this.fork = fork;\n    }\n\n    public static void main(String[] args) {\n        GeccoEngine.create()\n        //工程的包路径\n        .classpath(\"com.geccocrawler.gecco.demo\")\n        //开始抓取的页面地址\n        .start(\"https://github.com/xtuhcy/gecco\")\n        //开启几个爬虫线程\n        .thread(1)\n        //单个爬虫每次抓取完一个请求后的间隔时间\n        .interval(2000)\n        //循环抓取\n        .loop(true)\n        //使用pc端userAgent\n        .mobile(false)\n        //非阻塞方式运行\n        .start();\n    }\n}\n```\n\n## DynamicGecco\n\nDynamicGecco 的目的是在不定义 SpiderBean 的情况下实现爬取规则的运行时配置。其实现原理是采用字节码编程，动态生成 SpiderBean，而且通过自定义的 GeccoClassLoader 实现了抓取规则的热部署。下面是一个简单 Demo，更复杂的 Demo 可以参考 com.geccocrawler.gecco.demo.dynamic 下的例子。\n\n下面的代码实现了爬取规则的运行时配置：\n\n    DynamicGecco.html()\n    .gecco(\"https://github.com/{user}/{project}\", \"consolePipeline\")\n    .requestField(\"request\").request().build()\n    .stringField(\"user\").requestParameter(\"user\").build()\n    .stringField(\"project\").requestParameter().build()\n    .stringField(\"star\").csspath(\".pagehead-actions li:nth-child(2) .social-count\").text(false).build()\n    .stringField(\"fork\").csspath(\".pagehead-actions li:nth-child(3) .social-count\").text().build()\n    .stringField(\"contributors\").csspath(\"ul.numbers-summary > li:nth-child(4) > a\").href().build()\n    .register();\n\n    //开始抓取\n    GeccoEngine.create()\n    .classpath(\"com.geccocrawler.gecco.demo\")\n    .start(\"https://github.com/xtuhcy/gecco\")\n    .run();\n\n可以看到，DynamicGecco 的方式相比传统的注解方式代码量大大减少，而且很酷的一点是 DynamicGecco 支持运行时定义和修改规则。\n\n## 完整演示\n\n[教您使用 java 爬虫 gecco 抓取 JD 全部商品信息（一）](http://my.oschina.net/u/2336761/blog/620158)\n\n[教您使用 java 爬虫 gecco 抓取 JD 全部商品信息（二）](http://my.oschina.net/u/2336761/blog/620827)\n\n[教您使用 java 爬虫 gecco 抓取 JD 全部商品信息（三）](http://my.oschina.net/u/2336761/blog/624683)\n\n[集成 Htmlunit 下载页面](http://my.oschina.net/u/2336761/blog/631959)\n\n[爬虫的监控](http://my.oschina.net/u/2336761/blog/644330)\n\n[一个完整的例子，分页处理，结合 spring，mysql 入库](http://git.oschina.net/xiaomaoguai/gecco-demo)\n\n## 交流联系\n\n- 博客：http://my.oschina.net/u/2336761/blog\n- 邮箱：xtuhcy@163.com\n- QQ 群：531949844\n\n## 请作者喝杯咖啡\n\nGecco 的发展离不开大家支持，扫一扫请作者喝杯咖啡～\n\n![支付宝](http://www.geccocrawler.com/content/images/jz-zfb.jpg?xx=2)\n![支付宝](http://www.geccocrawler.com/content/images/jz-wx.png)\n\n## 开源协议\n\n请遵守开源协议[MIT](https://raw.githubusercontent.com/xtuhcy/gecco/master/LICENSE)\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 6.140625,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<groupId>com.geccocrawler</groupId>\r\n\t<artifactId>gecco</artifactId>\r\n\t<version>1.3.21</version>\r\n\r\n\t<name>Gecco</name>\r\n\t<description>Easy to use lightweight web crawler</description>\r\n\t<url>https://github.com/xtuhcy/gecco</url>\r\n\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.httpcomponents</groupId>\r\n\t\t\t<artifactId>httpclient</artifactId>\r\n\t\t\t<version>4.5.12</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.jsoup</groupId>\r\n\t\t\t<artifactId>jsoup</artifactId>\r\n\t\t\t<version>1.15.3</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.reflections</groupId>\r\n\t\t\t<artifactId>reflections</artifactId>\r\n\t\t\t<version>0.9.11</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.alibaba</groupId>\r\n\t\t\t<artifactId>fastjson</artifactId>\r\n\t\t\t<version>1.2.83</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>log4j</groupId>\r\n\t\t\t<artifactId>log4j</artifactId>\r\n\t\t\t<version>1.2.17</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>cglib</groupId>\r\n\t\t\t<artifactId>cglib</artifactId>\r\n\t\t\t<version>3.3.0</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.apache.commons</groupId>\r\n\t\t\t<artifactId>commons-lang3</artifactId>\r\n\t\t\t<version>3.8.1</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.mozilla</groupId>\r\n\t\t\t<artifactId>rhino</artifactId>\r\n\t\t\t<version>1.7.12</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.weakref</groupId>\r\n\t\t\t<artifactId>jmxutils</artifactId>\r\n\t\t\t<version>1.19</version>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.google.guava</groupId>\r\n\t\t\t<artifactId>guava</artifactId>\r\n\t\t\t<version>27.0.1-jre</version>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\t<build>\r\n\t\t<pluginManagement>\r\n\t\t\t<plugins>\r\n\t\t\t\t<plugin>\r\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\r\n\t\t\t\t\t<configuration>\r\n\t\t\t\t\t\t<source>1.8</source>\r\n\t\t\t\t\t\t<target>1.8</target>\r\n\t\t\t\t\t\t<encoding>UTF-8</encoding>\r\n\t\t\t\t\t</configuration>\r\n\t\t\t\t</plugin>\r\n\t\t\t\t<plugin>\r\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\r\n\t\t\t\t\t<configuration>\r\n\t\t\t\t\t\t<skip>true</skip>\r\n\t\t\t\t\t</configuration>\r\n\t\t\t\t</plugin>\r\n\t\t\t\t<plugin>\r\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t\t<artifactId>maven-resources-plugin</artifactId>\r\n\t\t\t\t\t<configuration>\r\n\t\t\t\t\t\t<encoding>UTF-8</encoding>\r\n\t\t\t\t\t</configuration>\r\n\t\t\t\t</plugin>\r\n\t\t\t\t<plugin>\r\n\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t\t<artifactId>maven-jar-plugin</artifactId>\r\n\t\t\t\t\t<configuration>\r\n\t\t\t\t\t\t<archive>\r\n\t\t\t\t\t\t\t<manifest>\r\n\t\t\t\t\t\t\t\t<addDefaultImplementationEntries>true</addDefaultImplementationEntries>\r\n\t\t\t\t\t\t\t\t<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\r\n\t\t\t\t\t\t\t</manifest>\r\n\t\t\t\t\t\t</archive>\r\n\t\t\t\t\t</configuration>\r\n\t\t\t\t</plugin>\r\n\t\t\t</plugins>\r\n\t\t</pluginManagement>\r\n\t</build>\r\n\t<scm>\r\n\t\t<connection>scm:git:https://github.com/xtuhcy/gecco.git</connection>\r\n\t\t<developerConnection>scm:git:https://github.com/xtuhcy/gecco.git</developerConnection>\r\n\t\t<url>https://github.com/xtuhcy/gecco</url>\r\n\t\t<tag>v1.0.6</tag>\r\n\t</scm>\r\n\t<developers>\r\n\t\t<developer>\r\n\t\t\t<name>xtuhcy</name>\r\n\t\t\t<email>xtuhcy@163.com</email>\r\n\t\t\t<organization>geccocrawler</organization>\r\n\t\t\t<organizationUrl>http://www.geccocrawler.com</organizationUrl>\r\n\t\t</developer>\r\n\t</developers>\r\n\t<licenses>\r\n\t\t<license>\r\n\t\t\t<name>The MIT License (MIT)</name>\r\n\t\t\t<url>https://raw.githubusercontent.com/xtuhcy/gecco/master/LICENSE</url>\r\n\t\t</license>\r\n\t</licenses>\r\n\r\n\r\n\r\n\r\n\r\n\t<profiles>\r\n\t\t<profile>\r\n\t\t\t<id>release</id>\r\n\t\t\t<distributionManagement>\r\n\t\t\t\t<snapshotRepository>\r\n\t\t\t\t\t<id>ossrh</id>\r\n\t\t\t\t\t<url>https://oss.sonatype.org/content/repositories/snapshots</url>\r\n\t\t\t\t</snapshotRepository>\r\n\t\t\t\t<repository>\r\n\t\t\t\t\t<id>ossrh</id>\r\n\t\t\t\t\t<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>\r\n\t\t\t\t</repository>\r\n\t\t\t</distributionManagement>\r\n\t\t\t<build>\r\n\t\t\t\t<plugins>\r\n\t\t\t\t\t<plugin>\r\n\t\t\t\t\t\t<groupId>org.sonatype.plugins</groupId>\r\n\t\t\t\t\t\t<artifactId>nexus-staging-maven-plugin</artifactId>\r\n\t\t\t\t\t\t<extensions>true</extensions>\r\n\t\t\t\t\t\t<configuration>\r\n\t\t\t\t\t\t\t<serverId>ossrh</serverId>\r\n\t\t\t\t\t\t\t<nexusUrl>https://oss.sonatype.org/</nexusUrl>\r\n\t\t\t\t\t\t\t<autoReleaseAfterClose>true</autoReleaseAfterClose>\r\n\t\t\t\t\t\t</configuration>\r\n\t\t\t\t\t</plugin>\r\n\t\t\t\t\t<plugin>\r\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t\t\t<artifactId>maven-release-plugin</artifactId>\r\n\t\t\t\t\t\t<configuration>\r\n\t\t\t\t\t\t\t<autoVersionSubmodules>true</autoVersionSubmodules>\r\n\t\t\t\t\t\t\t<useReleaseProfile>false</useReleaseProfile>\r\n\t\t\t\t\t\t\t<releaseProfiles>release</releaseProfiles>\r\n\t\t\t\t\t\t\t<goals>deploy</goals>\r\n\t\t\t\t\t\t</configuration>\r\n\t\t\t\t\t</plugin>\r\n\t\t\t\t\t<plugin>\r\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\r\n\t\t\t\t\t\t<configuration>\r\n\t\t\t\t\t\t\t<source>1.8</source>\r\n\t\t\t\t\t\t\t<target>1.8</target>\r\n\t\t\t\t\t\t\t<encoding>UTF-8</encoding>\r\n\t\t\t\t\t\t</configuration>\r\n\t\t\t\t\t</plugin>\r\n\t\t\t\t\t<plugin>\r\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t\t\t<artifactId>maven-gpg-plugin</artifactId>\r\n\t\t\t\t\t\t<executions>\r\n\t\t\t\t\t\t\t<execution>\r\n\t\t\t\t\t\t\t\t<id>sign-artifacts</id>\r\n\t\t\t\t\t\t\t\t<phase>verify</phase>\r\n\t\t\t\t\t\t\t\t<goals>\r\n\t\t\t\t\t\t\t\t\t<goal>sign</goal>\r\n\t\t\t\t\t\t\t\t</goals>\r\n\t\t\t\t\t\t\t</execution>\r\n\t\t\t\t\t\t</executions>\r\n\t\t\t\t\t</plugin>\r\n\t\t\t\t\t<plugin>\r\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t\t\t<artifactId>maven-source-plugin</artifactId>\r\n\t\t\t\t\t\t<executions>\r\n\t\t\t\t\t\t\t<execution>\r\n\t\t\t\t\t\t\t\t<id>attach-sources</id>\r\n\t\t\t\t\t\t\t\t<goals>\r\n\t\t\t\t\t\t\t\t\t<goal>jar-no-fork</goal>\r\n\t\t\t\t\t\t\t\t</goals>\r\n\t\t\t\t\t\t\t</execution>\r\n\t\t\t\t\t\t</executions>\r\n\t\t\t\t\t</plugin>\r\n\t\t\t\t\t<plugin>\r\n\t\t\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t\t\t<artifactId>maven-javadoc-plugin</artifactId>\r\n\t\t\t\t\t\t<configuration>\r\n\t\t\t\t\t\t\t<encoding>UTF-8</encoding>\r\n\t\t\t\t\t\t</configuration>\r\n\t\t\t\t\t\t<executions>\r\n\t\t\t\t\t\t\t<execution>\r\n\t\t\t\t\t\t\t\t<id>attach-javadocs</id>\r\n\t\t\t\t\t\t\t\t<goals>\r\n\t\t\t\t\t\t\t\t\t<goal>jar</goal>\r\n\t\t\t\t\t\t\t\t</goals>\r\n\t\t\t\t\t\t\t</execution>\r\n\t\t\t\t\t\t</executions>\r\n\t\t\t\t\t</plugin>\r\n\t\t\t\t</plugins>\r\n\t\t\t</build>\r\n\t\t</profile>\r\n\t</profiles>\r\n</project>\r\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}