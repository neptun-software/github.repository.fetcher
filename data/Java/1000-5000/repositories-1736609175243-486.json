{
  "metadata": {
    "timestamp": 1736609175243,
    "page": 486,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "BruceEckel/OnJava8-Examples",
      "stars": 3097,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.369140625,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.595703125,
          "content": "# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n# =========================\n# Operating System Files\n# =========================\n\n# OSX\n# =========================\n\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Thumbnails\n._*\n\n# Files that might appear on external disk\n.Spotlight-V100\n.Trashes\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n*.class\n*output.txt\nGenerated.txt\n*-control.txt\n*-results.txt\n*-out.txt\nOutputErrors.txt\nreport.txt\nfailures\nPeople.xml\nannotations/Test0.txt\nannotations/Test1.txt\nannotations/Test2.txt\nio/*.out\nio/*.txt\nio/*.dat\nio/*.tmp\nio/test.zip\nio/test.gz\nio/X.file\n*.pyc\n\n*.out\n*.err\n/files/bytes.dat\n/files/test/\n/exceptions/Results.txt\n/files/Cheese.txt\n/files/StreamInAndOut.txt\n\n.gradle\n/*.iml\n/.idea/\n\n/serialization/Blip3.serialized\n/serialization/Blips.serialized\n\nbuild/\nbuildSrc/\n\n/compression/test.gz\n/compression/test.zip\n/iostreams/BasicFileOutput.dat\n/iostreams/Data.txt\n/iostreams/FileOutputShortcut.dat\n/iostreams/rtest.dat\n/logging/LogToFile.xml\n/logging/LogToFile2.txt\n/logging/MultipleHandlers.xml\n/logging/MultipleHandlers2.xml\n/logging/java0.log\n/logging/java1.log\n/logging/java2.log\n/newio/TransferTo.txt\n/newio/data2.txt\n/newio/file.txt\n/newio/test.dat\n/newio/test.txt\n/serialization/CADState.dat\n/serialization/worm.dat\n/serialization/Logon.dat\n/serialization/X.file\n/standardio/Redirecting.txt\n/threads/PSP2.txt\n/threads/primes.txt\n_*\nconfig.py\n"
        },
        {
          "name": ".travisXX.yml",
          "type": "blob",
          "size": 0.1943359375,
          "content": "language: java\njdk:\n  - oraclejdk11\ninstall: true\nscript:\n  - ./gradlew --no-daemon --stacktrace run\n#  - ./gradlew --parallel --stacktrace run\n#  - ./gradlew --parallel --stacktrace :validating:jmh\n"
        },
        {
          "name": "Copyright.txt",
          "type": "blob",
          "size": 3.1884765625,
          "content": "// Copyright.txt\nThis computer source code is Copyright Â©2021 MindView LLC.\nAll Rights Reserved.\n\nPermission to use, copy, modify, and distribute this\ncomputer source code (Source Code) and its documentation\nwithout fee and without a written agreement for the\npurposes set forth below is hereby granted, provided that\nthe above copyright notice, this paragraph and the\nfollowing five numbered paragraphs appear in all copies.\n\n1. Permission is granted to compile the Source Code and to\ninclude the compiled code, in executable format only, in\npersonal and commercial software programs.\n\n2. Permission is granted to use the Source Code without\nmodification in classroom situations, including in\npresentation materials, provided that the book \"On\nJava 8\" is cited as the origin.\n\n3. Permission to incorporate the Source Code into printed\nmedia may be obtained by contacting:\n\nMindView LLC, PO Box 969, Crested Butte, CO 81224\nMindViewInc@gmail.com\n\n4. The Source Code and documentation are copyrighted by\nMindView LLC. The Source code is provided without express\nor implied warranty of any kind, including any implied\nwarranty of merchantability, fitness for a particular\npurpose or non-infringement. MindView LLC does not\nwarrant that the operation of any program that includes the\nSource Code will be uninterrupted or error-free. MindView\nLLC makes no representation about the suitability of the\nSource Code or of any software that includes the Source\nCode for any purpose. The entire risk as to the quality\nand performance of any program that includes the Source\nCode is with the user of the Source Code. The user\nunderstands that the Source Code was developed for research\nand instructional purposes and is advised not to rely\nexclusively for any reason on the Source Code or any\nprogram that includes the Source Code. Should the Source\nCode or any resulting software prove defective, the user\nassumes the cost of all necessary servicing, repair, or\ncorrection.\n\n5. IN NO EVENT SHALL MINDVIEW LLC, OR ITS PUBLISHER BE\nLIABLE TO ANY PARTY UNDER ANY LEGAL THEORY FOR DIRECT,\nINDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES,\nINCLUDING LOST PROFITS, BUSINESS INTERRUPTION, LOSS OF\nBUSINESS INFORMATION, OR ANY OTHER PECUNIARY LOSS, OR FOR\nPERSONAL INJURIES, ARISING OUT OF THE USE OF THIS SOURCE\nCODE AND ITS DOCUMENTATION, OR ARISING OUT OF THE INABILITY\nTO USE ANY RESULTING PROGRAM, EVEN IF MINDVIEW LLC, OR\nITS PUBLISHER HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGE. MINDVIEW LLC SPECIFICALLY DISCLAIMS ANY\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE. THE SOURCE CODE AND DOCUMENTATION PROVIDED\nHEREUNDER IS ON AN \"AS IS\" BASIS, WITHOUT ANY ACCOMPANYING\nSERVICES FROM MINDVIEW LLC, AND MINDVIEW LLC HAS NO\nOBLIGATIONS TO PROVIDE MAINTENANCE, SUPPORT, UPDATES,\nENHANCEMENTS, OR MODIFICATIONS.\n\nPlease note that MindView LLC maintains a Web site which\nis the sole distribution point for electronic copies of the\nSource Code, https://github.com/BruceEckel/OnJava8-examples,\nwhere it is freely available under the terms stated above.\n\nIf you think you've found an error in the Source Code,\nplease submit a correction at:\nhttps://github.com/BruceEckel/OnJava8-examples/issues\n"
        },
        {
          "name": "NOTES.md",
          "type": "blob",
          "size": 0.15234375,
          "content": "For generating table of contents in README.md\nhttps://ecotrust-canada.github.io/markdown-toc/\n(Replace double hyphens with single hyphens after generation)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.9130859375,
          "content": "# Examples for *On Java 8* by Bruce Eckel\n\nIf you want to experiment with the code examples from the book [On Java\n8](https://www.onjava8.com/), you're in the right place.\n\nThese examples are automatically extracted directly from the book. This repository\nincludes tests to verify that the code in the book is correct.\n\n> NOTE: Do not attempt to use JDK 16 or greater with gradle. \n> This produces a `BUG!` message from Gradle, which is broken for those versions.\n\n## Contents\n\n- [Building From the Command Line: Quick Version](#building-from-the-command-line-quick-version)\n- [Building From the Command Line: Detailed Instructions](#building-from-the-command-line-detailed-instructions)\n  * [Install Java](#install-java)\n    + [Windows](#windows)\n    + [Macintosh](#macintosh)\n    + [Linux](#linux)\n  * [Verify Your Installation](#verify-your-installation)\n  * [Installing and Running the Book Examples](#installing-and-running-the-book-examples)\n- [Appendix A: Command-Line Basics](#appendix-a-command-line-basics)\n  * [Editors](#editors)\n  * [The Shell](#the-shell)\n    + [Starting a Shell](#starting-a-shell)\n    + [Directories](#directories)\n    + [Basic Shell Operations](#basic-shell-operations)\n    + [Unpacking a Zip Archive](#unpacking-a-zip-archive)\n- [Appendix B: Testing](#appendix-b-testing)\n- [Appendix C: Troubleshooting](#appendix-c-troubleshooting)\n\n# Building From the Command Line: Quick Version\n\nBefore you can run the examples from this repository, you must install\n[JDK8](http://www.oracle.com/technetwork/java/javase/downloads/index.html), the\n*Java Development Kit* for version 8 of the language.\n\nIf you just want to download and check the code, [Download\nHere](https://github.com/BruceEckel/OnJava8-Examples/archive/refs/heads/master.zip)\nand [unzip it](#unpacking-a-zip-archive) into your destination directory. Open\na [shell/command window](#appendix-a-command-line-basics) and move into the\nroot of that directory. You'll know you are in the right directory if you see\nthe files `gradlew` and `gradlew.bat`.\n\nYou'll need an Internet connection the first time you compile the code,\nbecause Gradle needs to first install itself, then all the support libraries.\nOnce these are installed you can perform additional compiling and running\noffline.\n\nOn Mac/Linux, enter:\n\n```\n./gradlew test\n```\n\n(If you get a *Permission denied* error, run `chmod +x ./gradlew`)\n\nOn Windows, enter\n\n```\ngradlew test\n```\n\nIf all goes well, the tests will run. Everything should complete without errors.\n\nAll the book examples are in the subdirectory `Examples` in subdirectories\ncorresponding to the atom names.\n\n# Building From the Command Line: Detailed Instructions\n\nIf you are not familiar with the command line, first read [Command-Line\nBasics](#appendix-a-command-line-basics).\n\n## Install Java\n\nYou must first install the *Java Development Kit* (JDK).\n\n### Windows\n\n1. Follow the instructions to [install Chocolatey](https://chocolatey.org/).\n\n2. At a [shell prompt](#appendix-a-command-line-basics), type:Â `choco install\njdk8` (you may also select a more recent version, like `jdk11`). The\ninstallation process takes some time, but when it's finished Java is installed\nand the necessary environment variables are set.\n\n### Macintosh\n\nThe Mac comes with a much older version of Java that won't work for the\nexamples in this book, so you'll need to update it to (at least) Java 8.\n\n  1.  Follow the instructions at this link to [Install HomeBrew](http://brew.sh/)\n\n  2.  At a [shell prompt](#appendix-a-command-line-basics), first type\n      `brew update`. When that completes, enter `brew cask install java`.\n\n**NOTE:** Sometimes the default version of Java that you get with the above\ninstallation will be too recent and not validated by the Mac's security\nsystem. If this happens you'll either need to turn off the security by hand\nor install an earlier version of Java. For either choice, you'll need to Google\nfor answers on how to solve the problem (often the easiest approach is to just\nsearch for the error message produced by the Mac).\n\n### Linux\n\nUse the standard package installer with the following [shell commands](#appendix-a-command-line-basics):\n\n*Ubuntu/Debian*:\n\n  1. `sudo apt-get update`\n\n  2. `sudo apt-get install default-jdk`\n\n*Fedora/Redhat*:\n\n```\nsu -c \"yum install java-1.8.0-openjdk\"\n```\n\n## Verify Your Installation\n\n[Open a new shell](#appendix-a-command-line-basics) and type:\n\n```\njava -version\n```\n\nYou should see something like the following (Version numbers and actual text\nwill vary):\n\n```\nopenjdk version \"11\" 2018-09-25\nOpenJDK Runtime Environment 18.9 (build 11+28)\nOpenJDK 64-Bit Server VM 18.9 (build 11+28, mixed mode)\n```\n\nIf you see a message that the command is not found or not recognized, review\nthe installation instructions. If you still can't get it to work, check\n[StackOverflow](http://stackoverflow.com/search?q=installing+java).\n\n## Installing and Running the Book Examples\n\nOnce you have Java installed, the process to install and run the book examples\nis the same for all platforms:\n\n1. Download the book examples from the\n[GitHub Repository](https://github.com/BruceEckel/OnJava8-Examples/archive/refs/heads/master.zip).\n\n2. [Unzip](#unpacking-a-zip-archive) the downloaded file into the directory of your choice.\n\n3. Use the Windows Explorer, the Mac Finder, or Nautilus or equivalent on Linux\nto browse to the directory where you uzipped `OnJava8-Examples`, and\n[open a shell](#appendix-a-command-line-basics) there.\n\n4. If you're in the right directory, you should see files named `gradlew` and\n`gradlew.bat` in that directory, along with numerous other files and\ndirectories. The directories correspond to the chapters in the book.\n\n5. At the shell prompt, type `gradlew test` (Windows) or `./gradlew test`\n(Mac/Linux).\n\nThe first time you do this, Gradle will install itself and numerous other\npackages, so it will take some time. After everything is installed, subsequent\nbuilds and runs will be much faster.\n\nNote that you must be connected to the Internet the first time you run `gradlew`\nso that Gradle can download the necessary packages.\n\n# Appendix A: Command-Line Basics\n\nBecause it is possible for a \"dedicated beginner\" to learn programming from\nthis book, you may not have previously used your computer's command-line shell.\nIf you have, you can go directly to the\n[installation instructions](#building-from-the-command-line-detailed-instructions).\n\n## Editors\n\nTo create and modify Java program files&mdash;the code listings shown in this\nbook&mdash;you need a program called an *editor*. You'll also need the editor to\nmake changes to your system configuration files, which is sometimes required\nduring installation.\n\nProgramming editors vary from heavyweight *Integrated Development Environments*\n(IDEs, like Eclipse, NetBeans and IntelliJ IDEA) to more basic text\nmanipulation applications. If you already have an IDE and are comfortable with\nit, feel free to use that for this book.\n\nNumerous explanations in this book are specific to IntelliJ IDEA so if you\ndon't already have an IDE you might as well start with IDEA. There are many\nother editors; these are a subculture unto themselves and people sometimes get\ninto heated arguments about their merits. If you find one you like better, it's\nnot too hard to change. The important thing is to choose one and get\ncomfortable with it.\n\n## The Shell\n\nIf you haven't programmed before, you might be unfamiliar with your operating\nsystem *shell* (also called the *command prompt* in Windows). The shell harkens\nback to the early days of computing when everything happened by typing commands\nand the computer responded by displaying responses&mdash;everything was text-based.\n\nAlthough it can seem primitive in the age of graphical user interfaces, a shell\nprovides a surprising number of valuable features.\n\nTo learn more about your shell than we cover here, see\n[Bash Shell](https://en.wikipedia.org/wiki/Bash_(Unix_shell)) for Mac/Linux\nor [Windows Shell](https://en.wikipedia.org/wiki/Windows_shell).\n\n### Starting a Shell\n\n**Mac**: Click on the *Spotlight* (the magnifying-glass icon in the upper-right\ncorner of the screen) and type \"terminal.\" Click on the application that looks\nlike a little TV screen (you might also be able to hit \"Return\"). This starts a\nshell in your home directory.\n\n**Windows**: First, start the Windows Explorer to navigate through your\ndirectories:\n\n- *Windows 7*: click the \"Start\" button in the lower left corner of the screen.\nIn the Start Menu search box area type \"explorer\" and then press the \"Enter\"\nkey.\n\n- *Windows 8*: click Windows+Q, type \"explorer\" and then press the \"Enter\" key.\n\n- *Windows 10*: click Windows+E.\n\nOnce the Windows Explorer is running, move through the folders on your computer\nby double-clicking on them with the mouse. Navigate to the desired folder. Now\nclick the file tab at the top left of the Explorer window and select \"Open\nWindows Powershell.\" This opens a shell in the destination directory.\n\n**Linux**: To open a shell in your home directory:\n\n- *Debian*: Press Alt+F2. In the dialog that pops up, type 'gnome-terminal'\n\n- *Ubuntu*: Either right-click on the desktop and select 'Open Terminal', or\n  press Ctrl+Alt+T\n\n- *Redhat*: Right-click on the desktop and select 'Open Terminal'\n\n- *Fedora*: Press Alt+F2. In the dialog that pops up, type 'gnome-terminal'\n\n\n### Directories\n\n*Directories* are one of the fundamental elements of a shell. Directories hold\nfiles, as well as other directories. Think of a directory as a tree with\nbranches. If `books` is a directory on your system and it has two other\ndirectories as branches, for example `math` and `art`, we say that you have a\ndirectory `books` with two *subdirectories* `math` and `art`. We refer to them\nas `books/math` and `books/art` since `books` is their *parent* directory.\nNote that Windows uses backslashes rather than forward slashes to separate the\nparts of a directory.\n\n### Basic Shell Operations\n\nThe shell operations shown here are approximately identical across operating\nsystems. For the purposes of this book, here are the essential operations in a\nshell:\n\n-   **Change directory**: Use `cd` followed by the name of the\n    directory where you want to move, or `cd ..` if you want to move\n    up a directory. If you want to move to a different directory while\n    remembering where you came from, use `pushd` followed by the different\n    directory name. Then, to return to the previous directory, just say\n    `popd`.\n\n-   **Directory listing**: `ls` (`dir` in Windows) displays all the files and\n    subdirectory names in the current directory. Use the wildcard `*` (asterisk) to\n    narrow your search. For example, if you want to list all the files ending in\n    \".kt,\" you say `ls *.kt` (Windows: `dir *.kt`). If you want to list the\n    files starting with \"F\" and ending in \".kt,\" you say `ls F*.kt` (Windows:\n    `dir F*.kt`).\n\n-   **Create a directory**: use the `mkdir` (\"make directory\") command\n    (Windows: `md`), followed by the name of the directory you want to create.\n    For example, `mkdir books` (Windows: `md books`).\n\n-   **Remove a file**: Use `rm` (\"remove\") followed by the name of the file\n    you wish to remove (Windows: `del`). For example, `rm somefile.kt` (Windows:\n    `del somefile.kt`).\n\n-   **Remove a directory**: use the `rm -r` command to remove the files in\n    the directory and the directory itself (Windows: `deltree`). For example,\n    `rm -r books` (Windows: `deltree books`).\n\n-   **Repeat a command**: The \"up arrow\" on all three operating\n    systems moves through previous commands so you can edit and\n    repeat them. On Mac/Linux, `!!` repeats the last command and\n    `!n` repeats the nth command.\n\n-   **Command history**: Use `history` in Mac/Linux or press the F7 key in Windows.\n    This gives you a list of all the commands you've entered. Mac/Linux provides\n    numbers to refer to when you want to repeat a command.\n\n### Unpacking a Zip Archive\n\nA file name ending with `.zip` is an archive containing other files in a\ncompressed format. Both Linux and Mac have command-line `unzip` utilities, and\nit's possible to install a command-line `unzip` for Windows via the Internet.\n\nHowever, in all three systems the graphical file browser (Windows Explorer, the\nMac Finder, or Nautilus or equivalent on Linux) will browse to the directory\ncontaining your zip file. Then right-mouse-click on the file and select \"Open\"\non the Mac, \"Extract Here\" on Linux, or \"Extract all ...\" on Windows.\n\n# Appendix B: Testing\n\nThe test system is built in so that we (the authors) can verify the correctness\nof what goes into the book.\n\nYou don't need to run the tests, but if you want to, you can just run `gradlew\ntest` (on Windows) or `./gradlew test` (Mac/Linux).\n\nTo compile and run everything, the command is:\n\n`gradlew run`\n\nIf you are on a Unix/Linux based system, you must select the local directory for all commands, for example:\n\n`./gradlew run`\n\nTo only compile everything, the command is:\n\n`gradlew compileJava`\n\nTo compile only a single chapter (including dependencies), use for example:\n\n`gradlew :strings:compileJava`\n\nTo run only a single chapter, say:\n\n`gradlew :strings:run`\n\nGradle can also be used to run a single program. Here, we run the **ReplacingStringTokenizer.java**\nprogram in the **strings** chapter subdirectory:\n\n`gradlew  :strings:ReplacingStringTokenizer`\n\nHowever, if the file name is unique throughout the book (the majority are), you\ncan just give the program name, like this:\n\n`gradlew  ReplacingStringTokenizer`\n\nNote that all commands are run from the base directory where the example code is\ninstalled, and where you find the `gradlew` script.\n\nYou can learn about other options by just typing `gradlew` with no arguments.\n\n# Appendix C: Troubleshooting\n\nIf any terminology or processes described here remain unclear to you, you can\nusually find explanations or answers through [Google](https://www.google.com/).\nFor more specific issues or problems, try\n[StackOverflow](http://stackoverflow.com/). Sometimes you can find installation\ninstructions on [YouTube](https://www.youtube.com/).\n\nSometimes a Gradle build will be unable to connect to the internet and download\nthe necessary components, producing an error message containing:\n\n```\njavax.net.ssl.SSLException: java.lang.RuntimeException: Unexpected error: java.security.InvalidAlgorithmParameterException: the trustAnchors parameter must be non-empty\n```\n\nNormally this means you have multiple Java installations on your machine\n(applications built with Java ordinarily install their own version of Java), and\nsomehow the `cacerts` security file is interfering with the `cacerts` file for\nthe Java you have installed. It can be difficult to know which `cacerts` file is\ninterfering with yours. The brute-force approach is to search for all the\n`cacerts` files on your machine and begin uninstalling the associated\napplications---or in some cases, simply removing the directory containing the\n`cacerts` file---until the Gradle build begins to work. You might also need to\nadjust some environment variables and/or your path. Once you get the Gradle\nbuild working successfully, you should be able to reinstall any applications you\nremoved in the process.\n"
        },
        {
          "name": "annotations",
          "type": "tree",
          "content": null
        },
        {
          "name": "appveyorXX.yml",
          "type": "blob",
          "size": 0.068359375,
          "content": "build_script:\n  - gradlew.bat --no-daemon --stacktrace run\n\ntest: off\n"
        },
        {
          "name": "arrays",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.6767578125,
          "content": "buildscript {\n    repositories {\n        maven {\n            url 'https://plugins.gradle.org/m2/'\n        }\n    }\n    dependencies {\n        classpath 'me.champeau.gradle:jmh-gradle-plugin:0.5.2'\n    }\n}\n\napply plugin: 'com.mindviewinc.example-output-verification'\n\nsubprojects {\n    apply from: \"$rootProject.projectDir/gradle/java.gradle\"\n    apply from: \"$rootProject.projectDir/gradle/junit-jupiter.gradle\"\n    apply from: \"$rootProject.projectDir/gradle/jmh.gradle\"\n    // apply from: \"$rootProject.projectDir/gradle/checkstyle.gradle\"\n    apply from: \"$rootProject.projectDir/gradle/findbugs.gradle\"\n    apply plugin: 'com.mindviewinc.tagging'\n}\n\napply from: 'gradle/subprojects.gradle'\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 6.7001953125,
          "content": "<?xml version=\"1.0\"?>\n<!DOCTYPE module PUBLIC\n        \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\"\n        \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<!--\n\n  Checkstyle configuration that checks the sun coding conventions from:\n\n    - the Java Language Specification at\n      http://java.sun.com/docs/books/jls/second_edition/html/index.html\n\n    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/\n\n    - the Javadoc guidelines at\n      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html\n\n    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html\n\n    - some best practices\n\n  Checkstyle is very configurable. Be sure to read the documentation at\n  http://checkstyle.sf.net (or in your downloaded distribution).\n\n  Most Checks are configurable, be sure to consult the documentation.\n\n  To completely disable a check, just comment it out or delete it from the file.\n\n  Finally, it is worth reading the documentation.\n\n-->\n\n<module name=\"Checker\">\n    <!--\n        If you set the basedir property below, then all reported file\n        names will be relative to the specified directory. See\n        http://checkstyle.sourceforge.net/5.x/config.html#Checker\n\n        <property name=\"basedir\" value=\"${basedir}\"/>\n    -->\n\n    <!-- Checks that a package-info.java file exists for each package.     -->\n    <!-- See http://checkstyle.sf.net/config_javadoc.html#JavadocPackage -->\n    <!-- <module name=\"JavadocPackage\"/> -->\n\n    <!-- Checks whether files end with a new line.                        -->\n    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->\n    <!-- <module name=\"NewlineAtEndOfFile\"/> -->\n\n    <!-- Checks that property files contain the same keys.         -->\n    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->\n    <module name=\"Translation\"/>\n\n    <!-- Checks for Size Violations.                    -->\n    <!-- See http://checkstyle.sf.net/config_sizes.html -->\n    <module name=\"FileLength\"/>\n\n    <!-- Checks for whitespace                               -->\n    <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n    <module name=\"FileTabCharacter\"/>\n\n    <!-- Miscellaneous other checks.                   -->\n    <!-- See http://checkstyle.sf.net/config_misc.html -->\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"\\s+$\"/>\n        <property name=\"minimum\" value=\"0\"/>\n        <property name=\"maximum\" value=\"0\"/>\n        <property name=\"message\" value=\"Line has trailing spaces.\"/>\n    </module>\n\n    <!-- Checks for Headers                                -->\n    <!-- See http://checkstyle.sf.net/config_header.html   -->\n    <!-- <module name=\"Header\"> -->\n    <!--   <property name=\"headerFile\" value=\"${checkstyle.header.file}\"/> -->\n    <!--   <property name=\"fileExtensions\" value=\"java\"/> -->\n    <!-- </module> -->\n\n    <module name=\"TreeWalker\">\n\n        <!-- Checks for Javadoc comments.                     -->\n        <!-- See http://checkstyle.sf.net/config_javadoc.html -->\n<!--         <module name=\"JavadocMethod\"/>\n        <module name=\"JavadocType\"/>\n        <module name=\"JavadocVariable\"/>\n        <module name=\"JavadocStyle\"/>\n -->\n\n        <!-- Checks for Naming Conventions.                  -->\n        <!-- See http://checkstyle.sf.net/config_naming.html -->\n        <module name=\"ConstantName\"/>\n        <module name=\"LocalFinalVariableName\"/>\n        <module name=\"LocalVariableName\"/>\n        <module name=\"MemberName\"/>\n        <module name=\"MethodName\"/>\n        <module name=\"PackageName\"/>\n        <module name=\"ParameterName\"/>\n        <module name=\"StaticVariableName\"/>\n        <module name=\"TypeName\"/>\n\n\n        <!-- Checks for imports                              -->\n        <!-- See http://checkstyle.sf.net/config_import.html -->\n<!--         <module name=\"AvoidStarImport\"/> -->\n        <module name=\"IllegalImport\"/>\n        <!-- defaults to sun.* packages -->\n        <module name=\"RedundantImport\"/>\n        <module name=\"UnusedImports\"/>\n\n\n        <!-- Checks for Size Violations.                    -->\n        <!-- See http://checkstyle.sf.net/config_sizes.html -->\n        <module name=\"LineLength\"/>\n        <!-- <module name=\"MethodLength\"/> -->\n        <module name=\"ParameterNumber\"/>\n\n\n        <!-- Checks for whitespace                               -->\n        <!-- See http://checkstyle.sf.net/config_whitespace.html -->\n<!--         <module name=\"EmptyForIteratorPad\"/>\n        <module name=\"GenericWhitespace\"/>\n        <module name=\"MethodParamPad\"/>\n        <module name=\"NoWhitespaceAfter\"/>\n        <module name=\"NoWhitespaceBefore\"/>\n        <module name=\"OperatorWrap\"/>\n        <module name=\"ParenPad\"/>\n        <module name=\"TypecastParenPad\"/>\n        <module name=\"WhitespaceAfter\"/>\n        <module name=\"WhitespaceAround\"/>\n -->\n\n        <!-- Modifier Checks                                    -->\n        <!-- See http://checkstyle.sf.net/config_modifiers.html -->\n        <module name=\"ModifierOrder\"/>\n        <module name=\"RedundantModifier\"/>\n\n\n        <!-- Checks for blocks. You know, those {}'s         -->\n        <!-- See http://checkstyle.sf.net/config_blocks.html -->\n<!--         <module name=\"AvoidNestedBlocks\"/>\n        <module name=\"EmptyBlock\"/>\n        <module name=\"LeftCurly\"/>\n        <module name=\"NeedBraces\"/>\n        <module name=\"RightCurly\"/> -->\n\n\n        <!-- Checks for common coding problems               -->\n        <!-- See http://checkstyle.sf.net/config_coding.html -->\n        <!-- <module name=\"AvoidInlineConditionals\"/> -->\n        <!-- <module name=\"EmptyStatement\"/> -->\n        <module name=\"EqualsHashCode\"/>\n        <!-- <module name=\"HiddenField\"/> -->\n        <module name=\"IllegalInstantiation\"/>\n<!--         <module name=\"InnerAssignment\"/> -->\n<!--         <module name=\"MagicNumber\"/> -->\n        <module name=\"MissingSwitchDefault\"/>\n        <!-- Checkstyle stopped working on the following for some reason: -->\n<!--         <module name=\"RedundantThrows\"/> -->\n        <!-- <module name=\"SimplifyBooleanExpression\"/> -->\n        <module name=\"SimplifyBooleanReturn\"/>\n\n        <!-- Checks for class design                         -->\n        <!-- See http://checkstyle.sf.net/config_design.html -->\n        <!-- <module name=\"DesignForExtension\"/> -->\n        <module name=\"FinalClass\"/>\n        <!-- <module name=\"HideUtilityClassConstructor\"/> -->\n        <!-- <module name=\"InterfaceIsType\"/> -->\n        <!-- <module name=\"VisibilityModifier\"/> -->\n\n\n        <!-- Miscellaneous other checks.                   -->\n        <!-- See http://checkstyle.sf.net/config_misc.html -->\n        <module name=\"ArrayTypeStyle\"/>\n        <!-- <module name=\"FinalParameters\"/> -->\n        <module name=\"TodoComment\"/>\n        <module name=\"UpperEll\"/>\n\n    </module>\n\n</module>\n"
        },
        {
          "name": "chkstyle.bat",
          "type": "blob",
          "size": 0.078125,
          "content": "@echo run gradlew clean first!\ngradlew checkstyleMain 1> checkstyleout.txt 2>&1\n"
        },
        {
          "name": "collections",
          "type": "tree",
          "content": null
        },
        {
          "name": "collectiontopics",
          "type": "tree",
          "content": null
        },
        {
          "name": "com",
          "type": "tree",
          "content": null
        },
        {
          "name": "compression",
          "type": "tree",
          "content": null
        },
        {
          "name": "concurrent",
          "type": "tree",
          "content": null
        },
        {
          "name": "control",
          "type": "tree",
          "content": null
        },
        {
          "name": "enumerations",
          "type": "tree",
          "content": null
        },
        {
          "name": "enums",
          "type": "tree",
          "content": null
        },
        {
          "name": "equalshashcode",
          "type": "tree",
          "content": null
        },
        {
          "name": "exceptions",
          "type": "tree",
          "content": null
        },
        {
          "name": "files",
          "type": "tree",
          "content": null
        },
        {
          "name": "functional",
          "type": "tree",
          "content": null
        },
        {
          "name": "generics",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.076171875,
          "content": "org.gradle.parallel=true\norg.gradle.caching=true\norg.gradle.warning.mode=none\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.630859375,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.611328125,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "hiding",
          "type": "tree",
          "content": null
        },
        {
          "name": "housekeeping",
          "type": "tree",
          "content": null
        },
        {
          "name": "innerclasses",
          "type": "tree",
          "content": null
        },
        {
          "name": "interfaces",
          "type": "tree",
          "content": null
        },
        {
          "name": "iostreams",
          "type": "tree",
          "content": null
        },
        {
          "name": "javadoc",
          "type": "tree",
          "content": null
        },
        {
          "name": "lowlevel",
          "type": "tree",
          "content": null
        },
        {
          "name": "newio",
          "type": "tree",
          "content": null
        },
        {
          "name": "objects",
          "type": "tree",
          "content": null
        },
        {
          "name": "onjava",
          "type": "tree",
          "content": null
        },
        {
          "name": "operators",
          "type": "tree",
          "content": null
        },
        {
          "name": "patterns",
          "type": "tree",
          "content": null
        },
        {
          "name": "polymorphism",
          "type": "tree",
          "content": null
        },
        {
          "name": "references",
          "type": "tree",
          "content": null
        },
        {
          "name": "reflection",
          "type": "tree",
          "content": null
        },
        {
          "name": "reuse",
          "type": "tree",
          "content": null
        },
        {
          "name": "serialization",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.30078125,
          "content": "def isSubproject = { File file ->\n    file.isDirectory() &&\n    !file.name.startsWith('.') &&\n    !file.name.contains('build') &&\n    !file.name.contains('gradle') &&\n    !file.name.contains('test')\n}\n\nString[] subprojects = rootDir.listFiles().findAll(isSubproject).collect { it.name }\n\ninclude subprojects\n"
        },
        {
          "name": "standardio",
          "type": "tree",
          "content": null
        },
        {
          "name": "staticchecking",
          "type": "tree",
          "content": null
        },
        {
          "name": "streams",
          "type": "tree",
          "content": null
        },
        {
          "name": "strings",
          "type": "tree",
          "content": null
        },
        {
          "name": "validating",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}