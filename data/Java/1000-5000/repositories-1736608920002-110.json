{
  "metadata": {
    "timestamp": 1736608920002,
    "page": 110,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjExMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Flipboard/bottomsheet",
      "stars": 4527,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.935546875,
          "content": "###Android###\n\n# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n\n###OSX###\n\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\r\r\n\n# Thumbnails\n._*\n\n# Files that might appear on external disk\n.Spotlight-V100\n.Trashes\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n\n###Linux###\n\n*~\n\n# KDE directory preferences\n.directory\n\n\n###Windows###\n\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n# Windows Installer files\n*.cab\n*.msi\n*.msm\n*.msp\n\n# Windows shortcuts\n*.lnk\n\n\n###IntelliJ###\n\n*.iml\n*.ipr\n*.iws\n.idea/\n\n\n###Gradle###\n\n.gradle\nbuild/"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1455078125,
          "content": "language: android\nandroid:\n  components:\n    - platform-tools\n    - tools\n    - build-tools-23.0.2\n    - android-23\n    - extra-android-m2repository\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.44140625,
          "content": "Copyright (c) 2015, Flipboard\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n\n* Neither the name of Flipboard nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.4619140625,
          "content": "# BottomSheet\n\n[![Build Status](https://travis-ci.org/Flipboard/bottomsheet.svg)](https://travis-ci.org/Flipboard/bottomsheet) [![Join the chat at https://gitter.im/Flipboard/bottomsheet](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Flipboard/bottomsheet?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nBottomSheet is an Android component which presents a dismissible view from the bottom of the screen. BottomSheet can be a useful replacement for dialogs and menus but can hold any view so the use cases are endless. This repository includes the BottomSheet component itself but also includes a set of common view components presented in a bottom sheet. These are located in the commons module.\n\nBottomSheet has been used in production at Flipboard for a while now so it is thoroughly tested. Here is a GIF of it in action inside of Flipboard!\n\n![FlipUI gif](http://i.imgur.com/2e3ZhoU.gif)\n\n## Installation\n\nIf all you want is the BottomSheet component and don't need things from commons you can skip that dependency.\n\n```groovy\nrepositories {\n    jcenter()\n}\n\ndependencies {\n    compile 'com.flipboard:bottomsheet-core:1.5.3'\n    compile 'com.flipboard:bottomsheet-commons:1.5.3' // optional\n}\n```\n\n## Getting Started\n\nGet started by wrapping your layout in a `BottomSheetLayout`. So if you currently have this:\n\n```xml\n<LinearLayout\n    android:id=\"@+id/root\"\n    android:orientation=\"vertical\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <View\n        android:id=\"@+id/view1\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"/>\n\n</LinearLayout>\n```\n\nYou would have to update it to look like this:\n\n```xml\n<com.flipboard.bottomsheet.BottomSheetLayout\n    android:id=\"@+id/bottomsheet\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <LinearLayout\n        android:id=\"@+id/root\"\n        android:orientation=\"vertical\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n\n        <View\n            android:id=\"@+id/view1\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"/>\n\n    </LinearLayout>\n\n</com.flipboard.bottomsheet.BottomSheetLayout>\n```\n\nBack in your activity or fragment you would get a reference to the BottomSheetLayout like any other view.\n\n```java\nBottomSheetLayout bottomSheet = (BottomSheetLayout) findViewById(R.id.bottomsheet);\n```\n\nNow all you need to do is show a view in the bottomSheet:\n\n```java\nbottomSheet.showWithSheetView(LayoutInflater.from(context).inflate(R.layout.my_sheet_layout, bottomSheet, false));\n```\n\nYou could also use one of the sheet views from the commons module.\n\n```java\nbottomSheet.showWithSheetView(new IntentPickerSheetView(this, shareIntent, \"Share with...\", new IntentPickerSheetView.OnIntentPickedListener() {\n    @Override\n    public void onIntentPicked(IntentPickerSheetView.ActivityInfo activityInfo) {\n        bottomSheet.dismissSheet();\n        startActivity(activityInfo.getConcreteIntent(shareIntent));\n    }\n}));\n```\n\nThat's it for the simplest of use cases. Check out the [API documentation](https://github.com/Flipboard/bottomsheet/wiki/API-Documentation) to find out how to customize BottomSheet to fit your use cases.\n\nFor more examples, also see the [Recipes](https://github.com/Flipboard/bottomsheet/wiki/Recipes) wiki.\n\n## Common Components\n\nThese are located in the optional `bottomsheet-commons` dependency and implement common use cases for bottom sheet.\n\nIntent Picker | Menu Sheet | ImagePicker Sheet\n--- | --- | ---\n![IntentPickerSheetView gif](http://i.imgur.com/wr9HJD1.gif) | ![MenuSheetView gif](http://i.imgur.com/f2j9Y5e.gif) | ![ImagePickerSheetView gif](https://camo.githubusercontent.com/23a9cf2bf9353a98d1b585e79d06639c7f5297c7/687474703a2f2f692e696d6775722e636f6d2f6f67764b4735692e676966)\n\n### IntentPickerSheetView\n\nThis component presents an intent chooser in the form of a BottomSheet view. Give it an intent such as a share intent and let the user choose what activity they want to share the intent with in a BottomSheet.\n\nExample from the sample app.\n\n```java\nIntentPickerSheetView intentPickerSheet = new IntentPickerSheetView(MainActivity.this, shareIntent, \"Share with...\", new IntentPickerSheetView.OnIntentPickedListener() {\n    @Override\n    public void onIntentPicked(IntentPickerSheetView.ActivityInfo activityInfo) {\n        bottomSheet.dismissSheet();\n        startActivity(activityInfo.getConcreteIntent(shareIntent));\n    }\n});\n// Filter out built in sharing options such as bluetooth and beam.\nintentPickerSheet.setFilter(new IntentPickerSheetView.Filter() {\n    @Override\n    public boolean include(IntentPickerSheetView.ActivityInfo info) {\n        return !info.componentName.getPackageName().startsWith(\"com.android\");\n    }\n});\n// Sort activities in reverse order for no good reason\nintentPickerSheet.setSortMethod(new Comparator<IntentPickerSheetView.ActivityInfo>() {\n    @Override\n    public int compare(IntentPickerSheetView.ActivityInfo lhs, IntentPickerSheetView.ActivityInfo rhs) {\n        return rhs.label.compareTo(lhs.label);\n    }\n});\nbottomSheet.showWithSheetView(intentPickerSheet);\n```\n\n### MenuSheetView\n\nThis component presents a BottomSheet view that's backed by a menu. It behaves similarly to the new `NavigationView` in the Design support library, and is intended to mimic the examples in the Material Design spec. It supports list and grid states, with the former adding further support for separators and subheaders.\n\nExample from the sample app.\n\n```java\nMenuSheetView menuSheetView =\n        new MenuSheetView(MenuActivity.this, MenuSheetView.MenuType.LIST, \"Create...\", new MenuSheetView.OnMenuItemClickListener() {\n            @Override\n            public boolean onMenuItemClick(MenuItem item) {\n                Toast.makeText(MenuActivity.this, item.getTitle(), Toast.LENGTH_SHORT).show();\n                if (bottomSheetLayout.isSheetShowing()) {\n                    bottomSheetLayout.dismissSheet();\n                }\n                return true;\n            }\n        });\nmenuSheetView.inflateMenu(R.menu.create);\nbottomSheetLayout.showWithSheetView(menuSheetView);\n```\n\n## Contributing\n\nWe welcome pull requests for bug fixes, new features, and improvements to BottomSheet. Contributors to the main BottomSheet repository must accept Flipboard's Apache-style [Individual Contributor License Agreement (CLA)](https://docs.google.com/forms/d/1gh9y6_i8xFn6pA15PqFeye19VqasuI9-bGp_e0owy74/viewform) before any changes can be merged.\n"
        },
        {
          "name": "README.md.template",
          "type": "blob",
          "size": 6.2880859375,
          "content": "#BottomSheet\n\n[![Build Status](https://travis-ci.org/Flipboard/bottomsheet.svg)](https://travis-ci.org/Flipboard/bottomsheet) [![Join the chat at https://gitter.im/Flipboard/bottomsheet](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Flipboard/bottomsheet?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nBottomSheet is an Android component which presents a dismissible view from the bottom of the screen. BottomSheet can be a useful replacement for dialogs and menus but can hold any view so the use cases are endless. This repository includes the BottomSheet component itself but also includes a set of common view components presented in a bottom sheet. These are located in the commons module.\n\nBottomSheet has been used in production at Flipboard for a while now so it is thoroughly tested. Here is a GIF of it in action inside of Flipboard!\n\n![FlipUI gif](http://i.imgur.com/2e3ZhoU.gif)\n\n##Installation\nIf all you want is the BottomSheet component and don't need things from commons you can skip that dependency.\n```groovy\nrepositories {\n    jcenter()\n}\n\ndependencies {\n    compile 'com.flipboard:bottomsheet-core:%%version%%'\n    compile 'com.flipboard:bottomsheet-commons:%%version%%' // optional\n}\n```\n\n##Getting Started\nGet started by wrapping your layout in a `BottomSheetLayout`. So if you currently have this:\n```xml\n<LinearLayout\n\tandroid:id=\"@+id/root\"\n\tandroid:orientation=\"vertical\"\n\tandroid:layout_width=\"match_parent\"\n\tandroid:layout_height=\"match_parent\">\n\n\t<View\n\t\tandroid:id=\"@+id/view1\"\n\t\tandroid:layout_width=\"match_parent\"\n\t\tandroid:layout_height=\"match_parent\"/>\n\n</LinearLayout>\n```\n\nYou would have to update it to look like this:\n```xml\n<com.flipboard.bottomsheet.BottomSheetLayout\n\tandroid:id=\"@+id/bottomsheet\"\n\tandroid:layout_width=\"match_parent\"\n\tandroid:layout_height=\"match_parent\">\n\n\t<LinearLayout\n\t\tandroid:id=\"@+id/root\"\n\t\tandroid:orientation=\"vertical\"\n\t\tandroid:layout_width=\"match_parent\"\n\t\tandroid:layout_height=\"match_parent\">\n\n\t\t<View\n\t\t\tandroid:id=\"@+id/view1\"\n\t\t\tandroid:layout_width=\"match_parent\"\n\t\t\tandroid:layout_height=\"match_parent\"/>\n\n\t</LinearLayout>\n\n</com.flipboard.bottomsheet.BottomSheetLayout>\n```\n\nBack in your activity or fragment you would get a reference to the BottomSheetLayout like any other view.\n```java\nBottomSheetLayout bottomSheet = (BottomSheetLayout) findViewById(R.id.bottomsheet);\n```\n\nNow all you need to do is show a view in the bottomSheet:\n```java\nbottomSheet.showWithSheetView(LayoutInflater.from(context).inflate(R.layout.my_sheet_layout, bottomSheet, false));\n```\n\nYou could also use one of the sheet views from the commons module.\n```java\nbottomSheet.showWithSheetView(new IntentPickerSheetView(this, shareIntent, \"Share with...\", new IntentPickerSheetView.OnIntentPickedListener() {\n\t@Override\n\tpublic void onIntentPicked(IntentPickerSheetView.ActivityInfo activityInfo) {\n        bottomSheet.dismissSheet();\n\t\tstartActivity(activityInfo.getConcreteIntent(shareIntent));\n\t}\n}));\n```\n\nThat's it for the simplest of use cases. Check out the [API documentation](https://github.com/Flipboard/bottomsheet/wiki/API-Documentation) to find out how to customize BottomSheet to fit your use cases.\n\nFor more examples, also see the [Recipes](https://github.com/Flipboard/bottomsheet/wiki/Recipes) wiki.\n\n##Common Components\nThese are located in the optional `bottomsheet-commons` dependency and implement common use cases for bottom sheet.\n\nIntent Picker | Menu Sheet | ImagePicker Sheet\n--- | --- | ---\n![IntentPickerSheetView gif](http://i.imgur.com/wr9HJD1.gif) | ![MenuSheetView gif](http://i.imgur.com/f2j9Y5e.gif) | ![ImagePickerSheetView gif](https://camo.githubusercontent.com/23a9cf2bf9353a98d1b585e79d06639c7f5297c7/687474703a2f2f692e696d6775722e636f6d2f6f67764b4735692e676966)\n\n####IntentPickerSheetView\nThis component presents an intent chooser in the form of a BottomSheet view. Give it an intent such as a share intent and let the user choose what activity they want to share the intent with in a BottomSheet.\n\nExample from the sample app.\n```java\nIntentPickerSheetView intentPickerSheet = new IntentPickerSheetView(MainActivity.this, shareIntent, \"Share with...\", new IntentPickerSheetView.OnIntentPickedListener() {\n\t@Override\n\tpublic void onIntentPicked(IntentPickerSheetView.ActivityInfo activityInfo) {\n\t\tbottomSheet.dismissSheet();\n\t\tstartActivity(activityInfo.getConcreteIntent(shareIntent));\n\t}\n});\n// Filter out built in sharing options such as bluetooth and beam.\nintentPickerSheet.setFilter(new IntentPickerSheetView.Filter() {\n\t@Override\n\tpublic boolean include(IntentPickerSheetView.ActivityInfo info) {\n\t\treturn !info.componentName.getPackageName().startsWith(\"com.android\");\n\t}\n});\n// Sort activities in reverse order for no good reason\nintentPickerSheet.setSortMethod(new Comparator<IntentPickerSheetView.ActivityInfo>() {\n\t@Override\n\tpublic int compare(IntentPickerSheetView.ActivityInfo lhs, IntentPickerSheetView.ActivityInfo rhs) {\n\t\treturn rhs.label.compareTo(lhs.label);\n\t}\n});\nbottomSheet.showWithSheetView(intentPickerSheet);\n```\n\n####MenuSheetView\nThis component presents a BottomSheet view that's backed by a menu. It behaves similarly to the new `NavigationView` in the Design support library, and is intended to mimic the examples in the Material Design spec. It supports list and grid states, with the former adding further support for separators and subheaders.\n\nExample from the sample app.\n```java\nMenuSheetView menuSheetView =\n        new MenuSheetView(MenuActivity.this, MenuSheetView.MenuType.LIST, \"Create...\", new MenuSheetView.OnMenuItemClickListener() {\n            @Override\n            public boolean onMenuItemClick(MenuItem item) {\n                Toast.makeText(MenuActivity.this, item.getTitle(), Toast.LENGTH_SHORT).show();\n                if (bottomSheetLayout.isSheetShowing()) {\n                    bottomSheetLayout.dismissSheet();\n                }\n                return true;\n            }\n        });\nmenuSheetView.inflateMenu(R.menu.create);\nbottomSheetLayout.showWithSheetView(menuSheetView);\n```\n\n##Contributing\nWe welcome pull requests for bug fixes, new features, and improvements to BottomSheet. Contributors to the main BottomSheet repository must accept Flipboard's Apache-style [Individual Contributor License Agreement (CLA)](https://docs.google.com/forms/d/1gh9y6_i8xFn6pA15PqFeye19VqasuI9-bGp_e0owy74/viewform) before any changes can be merged.\n"
        },
        {
          "name": "bottomsheet-commons",
          "type": "tree",
          "content": null
        },
        {
          "name": "bottomsheet-sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "bottomsheet",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.5087890625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.1.0'\n        classpath 'com.novoda:bintray-release:0.3.4'\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n\next {\n    VERSION = version()\n}\n\ntask bumpMajor << {\n    ant.propertyfile(file: 'version.properties') {\n        entry(key: 'major', type: 'int', operation: '+', value: 1)\n        entry(key: 'minor', type: 'int', operation: '=', value: 0)\n        entry(key: 'patch', type: 'int', operation: '=', value: 0)\n    }\n}\n\ntask bumpMinor << {\n    ant.propertyfile(file: 'version.properties') {\n        entry(key: 'minor', type: 'int', operation: '+', value: 1)\n        entry(key: 'patch', type: 'int', operation: '=', value: 0)\n    }\n}\n\ntask bumpPatch << {\n    ant.propertyfile(file: 'version.properties') {\n        entry(key: 'patch', type: 'int', operation: '+', value: 1)\n    }\n}\n\ntask genReadMe << {\n    def template = file('README.md.template').text\n    def result = template.replaceAll(\"%%version%%\", version())\n    file(\"README.md\").withWriter{ it << result }\n}\n\ntask version << {\n    println version()\n}\n\ndef String version() {\n    def versionPropsFile = file('version.properties')\n    def Properties versionProps = new Properties()\n    versionProps.load(new FileInputStream(versionPropsFile))\n\n    return versionProps['major'] + \".\" + versionProps['minor'] + \".\" + versionProps['patch']\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8349609375,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.068359375,
          "content": "include ':bottomsheet', ':bottomsheet-commons', ':bottomsheet-sample'\n"
        },
        {
          "name": "version.properties",
          "type": "blob",
          "size": 0.0849609375,
          "content": "#Tue, 29 Nov 2016 11:06:26 -0800\n#Tue Jun 02 09:57:59 PDT 2015\nmajor=1\nminor=5\npatch=3\n"
        }
      ]
    }
  ]
}