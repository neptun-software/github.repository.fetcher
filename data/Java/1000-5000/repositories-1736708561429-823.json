{
  "metadata": {
    "timestamp": 1736708561429,
    "page": 823,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wuxudong/react-native-charts-wrapper",
      "stars": 2458,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.162109375,
          "content": ".*\n!/.gitignore\ntarget\nbuild\ngradle.properties\nproguard-rules.pro\nBUCK\nkeystores\nlocal.properties\nPods\nPodfile.lock\nExample.xcworkspace\nnode_modules\n*.iml\nxcuserdata\n"
        },
        {
          "name": "Example",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.8828125,
          "content": "# React Native Charts Wrapper\nThis library is React Native wrapper of popular Native charting library [MPAndroidChart](https://github.com/PhilJay/MPAndroidChart) and [Charts](https://github.com/danielgindi/Charts)\n\n\n## Introduction\n\nInspired by [react-native-mp-android-chart](https://github.com/mskec/react-native-mp-android-chart) and [react-native-ios-charts](https://github.com/Jpadilla1/react-native-ios-charts)\n\nReact Native Charts Wrapper is built on MPAndroidChart(v3.1.0) & Charts(v3.3.0), support both android & iOS.\n\n\n### ANDROID \n![](https://raw.githubusercontent.com/wuxudong/react-native-charts-wrapper/master/screenshot/Android%20ScreenShot.png)\n\n### IOS\n![](https://raw.githubusercontent.com/wuxudong/react-native-charts-wrapper/master/screenshot/IOS%20ScreenShot.png)\n\n## Supported Chart Type\n\n* Bar(Stack,Group)\n* Line\n* Scatter\n* Bubble\n* Pie\n* Radar\n* Combined\n* CandleStick\n\n## Setup\n\n\n### expo\n1. expo init demo\n2. cd demo\n3. expo install react-native-charts-wrapper\n4. eas build \n\n### react-native\n\n\n-  npx react-native init demo \n-  cd demo \n-  npm install --save react-native-charts-wrapper\n-  cd ios && pod install \n-  npx react-native run-ios/run-android\n\n\n### update App.js \n\n\n \n```\nimport React from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  Text,\n  View, processColor\n} from 'react-native';\n\nimport {LineChart} from 'react-native-charts-wrapper';\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <View style={{flex: 1}}>\n        <View style={styles.container}>\n          <LineChart style={styles.chart}\n            data={{dataSets:[{label: \"demo\", values: [{y: 1}, {y: 2}, {y: 1}]}]}}\n          />\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5FCFF'\n  },\n  chart: {\n    flex: 1\n  }\n});\n\n```\n\n![](https://raw.githubusercontent.com/wuxudong/react-native-charts-wrapper/master/screenshot/iOS.png)\n\n\n\n## Usage\nThere are 8 supported charts with many configuration options.\nAlmost all configuration available in base MPAndroidChart library are available through this wrapper.\nMore details on available configuration can be found on their [wiki](https://github.com/PhilJay/MPAndroidChart/wiki).\n\nExample of how charts are used and how to apply configuration can be found in example.\n\n\n\n## Convention\n\nAndroid and IOS have different convention:\n\n1. color's alpha in android is 0-255, in ios is 0-1\n2. percent in android is 0-100, in ios is 0-1\n3. animation.duration in MpAndroidChart is milliseconds, in Charts is seconds.\n4. their enum case name is always different, for example XAxisPosition, in MpAndroidChart is BOTH_SIDED, in Charts is bothSided.\n\n**Here we use android Convention**\n\n**Always use processColor to set color**\n\n\n\n## Data Format\n\n- Complete Form\n\n\n        data : {\n            ...\n            dataSets: [\n                {\n                    values: [\n                        {x: 5, y: 90},\n                        {x: 10, y: 130},\n                        {x: 50, y: 2000, marker: \"eat more\"},\n                        {x: 80, y: 9000, marker: \"eat less\"}\n                    ]\n                },\n                ...\n            ]\n        }Ï\n\nmarker is optional,  if x is omitted, index will be used.\n\n- Simplified Form\n\n        data: {\n            ...\n            dataSets: [\n                {\n                    values: [5, 40, 77, 81, 43]\n                },\n                ....\n            ]\n        }\n\t\nindex will used as x.\n\n\ncheck Example->TimeSeriesLineChart for details\n\n\n## Supported Callbacks\n\n**onSelect**\n\nTriggered when a chart value is selected. The event passed back will include the coordinates of the touch as well as the data (including marker label) selected.\n\n**onChange**\n\nTriggered for various supported events on each platform. Due to the different nature of gesture handling on each platform as well as the different implementations of the underlying chart libraries, the same events are not supported on every platform. For full details on the supported events, see the table below:\n\n| Event Name | Description | iOS | Android |\n| --------------- | -------- | ------- | ---- |\n| `chartScaled`       | When a chart is scaled/zoomed via a pinch zoom gesture. | ✅ | ✅ |\n| `chartTranslated`   | When a chart is moved/translated via a drag gesture. | ✅ | ✅ |\n| `chartPanEnd`       | When a chart pan gesture ends. | ✅ | ❌ |\n| `chartGestureStart` | When a chart gesture starts. | ❌ | ✅ |\n| `chartGestureEnd`   | When a chart gesture ends. | ❌ | ✅ |\n| `chartLongPress`    | When a chart is long pressed. | ❌ | ✅ |\n| `chartSingleTap`    | When a chart is single tapped. | ❌ | ✅ |\n| `chartFling`        | When a chart recieves a fling gesture. | ❌ | ✅ |\n| `doubleTapped`      | When a chart is double tapped | ❌ | ✅ |\n\n\ncheck Example->MultipleChart for details.\n\n## Direct Function Call\n\nSupport direct function call.\n\nYou can use `chart.moveViewToX(...)` or other functions directly.\n\ncheck Example->MovingWindowChart for details.\n\nsupported functions:\n\n1. highlights([...]) \n\n   it can be used to highlight entries programmatically, or clear already highlighted entries if you pass empty array to it: highlights([])\n\n2. moveViewTo/moveViewToX/moveViewToAnimated/centerViewTo/centerViewToAnimated\n3. fitScreen\n4. setDataAndLockIndex\n\n   It will rescale and move to the begining of your data when new data is set by default, this is not expected when you want to load more data when user scrolls.  \n   setDataAndLockIndex will remain x/y/zoom when you load more data.  \n   Because of the implementation of MpAndroidChart, if the action of setDataAndLockIndex is triggered by user dragging,  \n   then the range of new data (xMax - xMin) should be equal to original data(this basicly means size of new data equals to old one), otherwise the calculation of position transition won't be accurate,  \n   use may find the chart suddenly blink to another position.         \n   This restriction only exists in android, in iOS, we have no such problem.\n   \n   You can check the example InfiniteScrollLineChartScreen.\n\n## Special properties\n\nSeveral extra properties are introduced:\n\n1. group&identifier&syncX&syncY\n\n   They are useful when you want to implement linkage charts.\n   \n   Charts will sync its operation to other charts in the same group. All these sync jobs are done at native side.\n   \n   You can check the example LinkageChartScreen.\n   \n   Another way of syncing charts is to use onChange, but the performace is poor. \n   You can check the example MultipleChartScreen.\n   \n   \n   There is a stock kLine chart in example, it combines group&identifier and setDataAndLockIndex together.\n      \n\n## Custom Marker Content \n\nSupport custom marker content. \n\ncheck Example->TimeSeriesLineChart for details.\n\n## Notice\n\n  \n**size of chart**\n\nyou can set chart to fixed width & height, or flex:1\n  \n\n\n\n## License\nThe MIT License\n\nCopyright (c) 2017 wuxudong\n\nCopyright (c) 2016 Martin Skec\n\nCopyright (c) 2016 Jose E. Padilla\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs.md",
          "type": "blob",
          "size": 33.072265625,
          "content": "# Documentation\n\n## For complete properties list, please check files under lib/*\n\n## Description (prop for all charts)\n\n| Prop         | Type     | Default | Note |\n| ------------ | -------- | ------- | ---- |\n| `text`       | `string` |         |      |\n| `textColor`  | `number` |         |      |\n| `textSize`   | `number` |         |      |\n| `positionX`  | `number` |         |      |\n| `positionY`  | `number` |         |      |\n\n## Legend (prop for all charts)\n\n| Prop                      | Type                                                          | Default | Note |\n| ------------------------- | ------------------------------------------------------------- | ------- | ---- |\n| `enabled`                 | `bool`                                                        |         |      |\n| `text`                    | `string`                                                      |         |      |\n| `textColor`               | `number`                                                      |         |      |\n| `textSize`                | `number`                                                      |         |      |\n| `fontFamily`              | `string`                                                      |         |      |\n| `fontStyle`               | `number`                                                      |         |      |\n| `wordWrapEnabled`         | `bool`                                                        |         |      |\n| `maxSizePercent`          | `number`                                                      |         |      |\n| `horizontalAlignment`     | one of `'LEFT', 'CENTER', 'RIGHT'`                            |         |      |\n| `verticalAlignment`       | one of `'TOP', 'CENTER', 'BOTTOM'`                            |         |      |\n| `orientation`             | one of `'HORIZONTAL', 'VERTICAL'`                             |         |      |\n| `drawInside`              | `bool`                                                        |         |      |\n| `direction`               | one of `LEFT_TO_RIGHT', 'RIGHT_TO_LEFT`                       |         |      |\n| `form`                    | `string`                                                      |         |      |\n| `formSize`                | `number`                                                      |         |      |\n| `xEntrySpace`             | `bool`                                                        |         |      |\n| `yEntrySpace`             | `number`                                                      |         |      |\n| `formToTextSpace`         | `number`                                                      |         |      |\n| `custom`                  | `{`<br />`colors: [number],`<br />`labels: [string]`<br />`}` |         |      |\n\n## Common Props for xAxis and yAxis\n\n| Prop                       | Type                                                                                     | Default | Note                                                                                                                        |\n| -------------------------- | ---------------------------------------------------------------------------------------- | ------- | --------------------------------------------------------------------------------------------------------------------------- |\n| `enabled`                  | `bool`                                                                                   |         |                                                                                                                             |\n| `drawLabels`               | `bool`                                                                                   |         |                                                                                                                             |\n| `drawAxisLine`             | `bool`                                                                                   |         |                                                                                                                             |\n| `drawGridLines`            | `bool`                                                                                   |         |                                                                                                                             |\n| `textColor`                | `number`                                                                                 |         |                                                                                                                             |\n| `textSize`                 | `number`                                                                                 |         |                                                                                                                             |\n| `fontFamily`               | `string`                                                                                 |         |                                                                                                                             |\n| `fontStyle`                | `number`                                                                                 |         |                                                                                                                             |\n| `gridColor`                | `bool`                                                                                   |         |                                                                                                                             |\n| `gridLineWidth`            | `bool`                                                                                   |         |                                                                                                                             |\n| `axisLineColor`            | `bool`                                                                                   |         |                                                                                                                             |\n| `axisLineWidth`            | `bool`                                                                                   |         |                                                                                                                             |\n| `gridDashedLine`           | `{`<br />`lineLength: number,`<br />`spaceLength: number,`<br />`phase: number`<br />`}` |         |                                                                                                                             |\n| `limitLines`               | array : `[{ limit: number, label: string, lineColor: number, lineWidth: number, valueTextColor: number, valueFont: number, fontFamily: string, fontStyle: string, fontWeight: string, labelPosition: string, lineDashPhase: number, lineDashLengths: [number] }]`                                                                                 |         |                                                                                                                             |\n| `drawLimitLinesBehindData` | `bool`                                                                                   |         |                                                                                                                             |\n| `axisMaximum`              | `number`                                                                                 |         |                                                                                                                             |\n| `axisMinimum`              | `number`                                                                                 |         |                                                                                                                             |\n| `granularity`              | `number`                                                                                 |         |                                                                                                                             |\n| `granularityEnabled`       | `bool`                                                                                   |         |                                                                                                                             |\n| `labelCount`               | `number`                                                                                 |         |                                                                                                                             |\n| `labelCountForce`          | `bool`                                                                                   |         |                                                                                                                             |\n| `centerAxisLabels`         | `bool`                                                                                   |         | Centers the axis labels instead of drawing them at their original position. This is useful especially for grouped BarChart. |\n| `valueFormatter`           | one of `'largeValue', 'percent', 'date', string, [string]`                               |         |                                                                                                                             |\n| `valueFormatterPattern`    | `string`                                                                                 |         |\n| `yOffset`                  | `number`                                                                                 |    0    | adjust vertical label position\n\n## xAxis\n\n#### Common props plus props below.\n\n| Prop                     | Type     | Default | Note |\n| ------------------------ | -------- | ------- | ---- |\n| `labelRotationAngle`     | `number` |         |      |\n| `avoidFirstLastClipping` | `bool`   |         |      |\n| `position`               | `string` |         | Should be in upper case. you will get an error in android if the position is in lower case      |\n| `valueFormatterPattern`  | `string` |         |      |\n\n## yAxis\n\n#### Common props plus props below.\n\n| Prop          | Type                                                                                  | Default | Note |\n| ------------- | ------------------------------------------------------------------------------------- | ------- | ---- |\n| `inverted`    | `number`                                                                              |         |      |\n| `left`\t\t\t  | `config`                                                                              |         | Applies config to left line      |\n| `right`\t\t    | `config`                                                                              |         | Applies config to right line     |\n| `spaceTop`    | `bool`                                                                                |         |      |\n| `spaceBottom` | `number`                                                                              |         |      |\n| `position`    | `number`                                                                              |         |      |\n| `maxWidth`    | `bool`                                                                                |         |      |\n| `minWidth`    | `string`                                                                              |         |      |\n| `zeroLine`    | `{`<br />`enabled: bool,`<br />`lineWidth: number,`<br />`lineColor: number`<br />`}` |         |      |\n\n## Chart Base (All charts have these props)\n\n#### Chart Base inherits props from react-native 'View' in addition to the props below.\n\n| Prop                           | Type                                                                                                                                            | Default | Note                                                                                                                                                                                                                                                        |\n| ------------------------------ | ----------------------------------------------------------------------------------------------------------------------------------------------- | ------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `animation`                    | `{`<br />`durationX: number,`<br />`durationY: number,`<br />`easingX: string,`<br />`easingY: string`<br />`}`                                 |         | Durations are in milliseconds.                                                                                                                                                                                                                              |\n| `chartBackgroundColor`         | `number`                                                                                                                                        |         |                                                                                                                                                                                                                                                             |\n| `logEnabled`                   | `bool`                                                                                                                                          |         |                                                                                                                                                                                                                                                             |\n| `noDataText`                   | `string`                                                                                                                                        |         |                                                                                                                                                                                                                                                             |\n| `noDataTextColor`              | `number`                                                                                                                                        |         |                                                                                                                                                                                                                                                             |\n| `touchEnabled`                 | `bool`                                                                                                                                          |         |                                                                                                                                                                                                                                                             |\n| `dragDecelerationEnabled`      | `bool`                                                                                                                                          |         |                                                                                                                                                                                                                                                             |\n| `dragDecelerationFrictionCoef` | `function`                                                                                                                                      |         |                                                                                                                                                                                                                                                             |\n| `chartDescription`             | `Description`                                                                                                                                   |         |                                                                                                                                                                                                                                                             |\n| `legend`                       | `Legend`                                                                                                                                        |         |                                                                                                                                                                                                                                                             |\n| `xAxis`                        | `XAksis`                                                                                                                                        |         |                                                                                                                                                                                                                                                             |\n| `marker`                       | `{`<br />`enabled: bool,`<br />`digits: number,`<br />`markerColor: number,`<br />`textColor: number,`<br />`textSize: number`<br />`}`         |         |                                                                                                                                                                                                                                                             |\n| `highlights`                   | Array of <br/>`{`<br />`x: number,`<br />`dataSetIndex: number,`<br />`dataIndex: number,`<br />`y: number,`<br />`stackIndex: number`<br />`}` |         | `x` is required and represents the index of the x values.<br /> `dataSetIndex` is used in stacked bar chart.<br />`dataIndex` is necessary in combined chart when default highlight is set. The default sequence is line, bar, scatter, candle, bubble. |\n\n## BarLineChartBase\n\n#### _Chart Base props plus props listed below_.\n\n| Prop                     | Type                                                                                                                                                            | Default | Note |\n| ------------------------ | --------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------- | ---- |\n| `drawGridBackground`     | `bool`                                                                                                                                                          |         |      |\n| `gridBackgroundColor`    | `number`                                                                                                                                                        |         |      |\n| `drawBorders`            | `bool`                                                                                                                                                          |         |      |\n| `borderColor`            | `number`                                                                                                                                                        |         |      |\n| `borderWidth`            | `number`                                                                                                                                                        |         |      |\n| `minOffset`              | `number`                                                                                                                                                        |         |      |\n| `maxVisibleValueCount`   | `number`                                                                                                                                                        |         |      |\n| `visibleRange`           | `{`<br />`x: { min: number, max: number },`<br />`y: {`<br />`left: { min: number, max: number },`<br />`right: { min: number, max: number }`<br />`}`<br />`}` |         |      |\n| `autoScaleMinMaxEnabled` | `bool`                                                                                                                                                          |         |      |\n| `keepPositionOnRotation` | `bool`                                                                                                                                                          |         |      |\n| `scaleEnabled`           | `bool`                                                                                                                                                          |         |      |\n| `scaleXEnabled`          | `bool`                                                                                                                                                          |         |      |\n| `scaleYEnabled`          | `bool`                                                                                                                                                          |         |      |\n| `dragEnabled`            | `bool`                                                                                                                                                          |         |      |\n| `pinchZoom`              | `bool`                                                                                                                                                          |         |      |\n| `doubleTapToZoomEnabled` | `bool`                                                                                                                                                          |         |      |\n| `yAksis`                 | `{ left: YAksis, right: YAksis }`                                                                                                                               |         |      |\n| `zoom`                   | `{`<br />`scaleX: number,`<br />`scaleY: number,`<br />`xValue: number,`<br />`yValue: number,`<br />`axisDependency: 'LEFT' or 'RIGHT'`<br />`}`               |         |      |\n| `viewPortOffsets`        | `{`<br />`left: number,`<br />`top: number,`<br />`right: number,`<br />`bottom: number,`<br />`}`                                                              |         |      |\n\n## BarChart\n\n#### _ChartBase props plus props listed below_.\n\n| Prop                | Type                | Default | Note |\n| ------------------- | ------------------- | ------- | ---- |\n| `drawValueAboveBar` | `bool`              |         |      |\n| `drawBarShadow`     | `bool`              |         |      |\n| `data`              | `DataTypes.barData` |         |      |\n\n## BubbleChart\n\n#### _BarLineChartBase props plus props listed below_.\n\n| Prop   | Type                   | Default | Note |\n| ------ | ---------------------- | ------- | ---- |\n| `data` | `DataTypes.bubbleData` |         |      |\n\n## CandleStickChart\n\n#### _BarLineChartBase props plus props listed below_.\n\n| Prop   | Type                   | Default | Note |\n| ------ | ---------------------- | ------- | ---- |\n| `data` | `DataTypes.candleData` |         |      |\n\n## CombinedChart\n\n#### _BarLineChartBase props plus props listed below_.\n\n| Prop        | Type                                                 | Default | Note |\n| ------      | ---------------------------------------------------- | ------- | ---- |\n| `data`      | `DataTypes.combinedData`                             |         |      |\n| `drawOrder` | `array with one of: ['SCATTER', 'BAR', 'LINE']`      |         |      |\n\n## HorizontalBarChart\n\n#### _BarLineChartBase props plus props listed below_.\n\n| Prop                | Type                | Default | Note |\n| ------------------- | ------------------- | ------- | ---- |\n| `drawValueAboveBar` | `bool`              |         |      |\n| `drawBarShadow`     | `bool`              |         |      |\n| `data`              | `DataTypes.barData` |         |      |\n\n## LineChart\n\n#### _BarLineChartBase props plus props listed below_.\n\n| Prop   | Type                 | Default | Note |\n| ------ | -------------------- | ------- | ---- |\n| `data` | `DataTypes.lineData` |         |      |\n\n## ScatterChart\n\n#### _BarLineChartBase props plus props listed below_.\n\n| Prop   | Type                    | Default | Note |\n| ------ | ----------------------- | ------- | ---- |\n| `data` | `DataTypes.scatterData` |         |      |\n\n## PieRadarChartBase\n\n#### _ChartBase props plus props listed below_.\n\n| Prop              | Type     | Default | Note |\n| ----------------- | -------- | ------- | ---- |\n| `minOffset`       | `number` |         |      |\n| `rotationEnabled` | `bool`   |         |      |\n| `rotationAngle`   | `number` |         |      |\n\n## PieChart\n\n#### _PieRadarChartBase props plus props listed below_.\n\n| Prop                      | Type                                                                                                   | Default | Note |\n| ------------------------- | ------------------------------------------------------------------------------------------------------ | ------- | ---- |\n| `extraOffsets`            | `{`<br />`left: number,`<br />`top: number,`<br />`right: number,`<br />`bottom: number,`<br />`}`     |         |      |\n| `drawEntryLabels`         | `bool`                                                                                                 |         |      |\n| `usePercentValues`        | `bool`                                                                                                 |         |      |\n| `centerText`              | `string`                                                                                               |         |      |\n| `styledCenterText`        | `{`<br />`text: string,`<br />`color: number,`<br />`fontFamily: string,`<br />`size: number`<br />`}` |         |      |\n| `centerTextRadiusPercent` | `number`                                                                                               |         |      |\n| `holeRadius`              | `number`                                                                                               |         |      |\n| `holeColor`               | `number`                                                                                               |         |      |\n| `transparentCircleRadius` | `number`                                                                                               |         |      |\n| `transparentCircleColor`  | `number`                                                                                               |         |      |\n| `entryLabelColor`         | `number`                                                                                               |         |      |\n| `entryLabelTextSize`      | `number`                                                                                               |         |      |\n| `entryLabelFontFamily`    | `string`                                                                                               |         |      |\n| `maxAngle`                | `number`                                                                                               |         |      |\n| `data`                    | `DataTypes.pieData`                                                                                    |         |      |\n\n## RadarChart\n\n#### _PieRadarChartBase props plus props listed below_.\n\n| Prop               | Type                  | Default | Note |\n| ------------------ | --------------------- | ------- | ---- |\n| `yAxis`            | `YAxis`               |         |      |\n| `drawWeb`          | `bool`                |         |      |\n| `skipWebLineCount` | `number`              |         |      |\n| `data`             | `DataTypes.radarData` |         |      |\n\n# ConfigTypes\n\n```\ntype common {\n  colors: [number],\n  highlightEnabled: bool,\n  drawValues: bool,\n  valueTextSize: number,\n  valueTextColor: number,\n  visible: bool,\n  valueFormatter: string or 'largeValue' or 'percent' or 'date' or 'labelByXValue',\n  valueFormatterPattern: string,\n  valueFormatterLabels: {\n    x: number, // required\n    label: string // required\n  },\n  axisDependency: string,\n}\n```\n\n```\ntype barLineScatterCandleBubble { highlightColor: number }\n```\n\n```\ntype lineScatterCandleRadar {\n  drawVerticalHighlightIndicator: bool,\n  drawHorizontalHighlightIndicator: bool,\n  highlightLineWidth: number\n}\n```\n\n```\ntype lineRadar \t{\n  fillGradient: {\n    colors: [number],\n    // iOS\n    positions: [numbers],\n    angle: number,\n    //Android\n    orientation: 'TOP_BOTTOM' | 'TR_BL' | 'RIGHT_LEFT' | 'BR_TL' | 'BOTTOM_TOP' | 'BL_TR' | 'LEFT_RIGHT' | 'TL_BR',\n  },\n  fillColor: number,\n  fillAlpha: number,\n  drawFilled: function\n}\n```\n\n# DataTypes\n\n```\ntype lineData {\n  dataSets: [\n    {\n      values: [\n        number or\n        {\n          x: number,\n          y: number,\n          marker: string\n        }\n      ],\n      label: string, // required\n      config: {\n        ...ConfigTypes.common,\n        ...ConfigTypes.barLineScatterCandleBubble,\n        ...ConfigTypes.lineScatterCandleRadar,\n        ...ConfigTypes.lineRadar,\n        circleRadius: number,\n        drawCircles: bool,\n        mode: bool,\n        lineWidth: number, // min: 0, max: 10\n        drawCubicIntensity: number,\n        circleColor: number,\n        circleColors: [number],\n        circleHoleColor: number,\n        drawCircleHole: bool,\n        dashedLine: {\n          lineLength: number, // required\n          spaceLength: number, // required\n          phase: number\n        },\n        fillFormatter: {\n            min: number // required\n        }\n      }\n    }\n  ]\n}\n```\n\n```\ntype barData {\n  dataSets: [\n    {\n      values: [\n        {\n          x: number,\n          y: number or [number],\n          marker: string or [string]\n        }\n        or number or [number]\n      ],\n      label: string, // required\n      config: {\n        ...ConfigTypes.common,\n        ...ConfigTypes.barLineScatterCandleBubble,\n        barShadowColor: number,\n        highlightAlpha: number,  // using android format (0-255), not ios format(0-1), the conversion is x/255\n        stackLabels: [string]\n      }\n    }\n  ],\n  config: {\n    barWidth: number,\n    group: {\n      fromX: number, // required\n      groupSpace: number, // required\n      barSpace: number // required\n    }\n  }\n}\n```\n\n```\ntype bubbleData {\n  dataSets: [\n    {\n      values: [\n        {\n          x: PropTypes.number,\n          y: PropTypes.number, // required\n          size: PropTypes.number, // required\n          marker: PropTypes.string,\n        }\n      ],\n      label: string, // required\n      config: {\n        ...ConfigTypes.common,\n        ...ConfigTypes.barLineScatterCandleBubble\n      }\n    }\n  ]\n}\n```\n\n```\ntype candleData {\n  dataSets: [\n    {\n      values: [\n        {\n          x: number,\n          shadowH: number, // required\n          shadowL: number, // required\n          open: number, // required\n          close: number, // required\n          marker: string,\n        }\n      ],\n      label: string, // required\n      config: {\n        ...ConfigTypes.common,\n        ...ConfigTypes.barLineScatterCandleBubble,\n        ...ConfigTypes.lineScatterCandleRadar,\n\n        barSpace: number,\n        shadowWidth: number,\n        shadowColor: number,\n        shadowColorSameAsCandle: bool,\n        neutralColor: number,\n        decreasingColor: number,\n        decreasingPaintStyle: string,\n        increasingColor: number,\n        increasingPaintStyle: string\n      }\n    }\n  ]\n}\n```\n\n```\ntype pieData {\n  dataSets: [\n    {\n      values: [\n        {\n          value: number, // required\n          label: string\n        }\n        or number\n      ],\n      label: string, // required\n      config: {\n        ...ConfigTypes.common,\n\n        sliceSpace: number,\n        selectionShift: number,\n        xValuePosition: string, // INSIDE_SLICE,OUTSIDE_SLICE\n        yValuePosition: string // INSIDE_SLICE,OUTSIDE_SLICE\n      }\n    }\n  ]\n}\n```\n\n```\ntype radarData {\n  dataSets: [\n    {\n      values: [\n        {\n          value: number // required\n        }\n        or number\n      ],\n      label: string, // required\n      config: {\n        ...ConfigTypes.common,\n        ...ConfigTypes.lineScatterCandleRadar,\n        ...ConfigTypes.lineRadar\n      }\n    }\n  ],\n  labels: [string]\n}\n```\n\n```\ntype scatterData {\n  dataSets: [\n    {\n      values: [\n        {\n          x: number,\n          y: number, // required\n          marker: string,\n        }\n        or number\n      ],\n      label: string, // required\n      config: {\n        ...ConfigTypes.common,\n        ...ConfigTypes.barLineScatterCandleBubble,\n        ...ConfigTypes.lineScatterCandleRadar,\n\n        scatterShapeSize: number,\n        scatterShape: 'SQUARE' or 'CIRCLE' or 'TRIANGLE' or 'CROSS' or 'X'\n        scatterShapeHoleColor: number,\n        scatterShapeHoleRadius: number\n      }\n    }\n  ],\n  labels: [string]\n}\n```\n\n```\ntype combinedData {\n  lineData: lineData,\n  barData: barData,\n  scatterData: scatterData,\n  candleData: candleData,\n  bubbleData: bubbleData\n}\n```\n"
        },
        {
          "name": "index.js",
          "type": "blob",
          "size": 0.56640625,
          "content": "import BarChart from './lib/BarChart';\nimport HorizontalBarChart from './lib/HorizontalBarChart';\nimport BubbleChart from './lib/BubbleChart';\nimport CandleStickChart from './lib/CandleStickChart';\nimport LineChart from './lib/LineChart';\nimport PieChart from './lib/PieChart';\nimport RadarChart from './lib/RadarChart';\nimport ScatterChart from './lib/ScatterChart';\nimport CombinedChart from './lib/CombinedChart';\n\nmodule.exports = {\n  BarChart,\n  HorizontalBarChart,\n  BubbleChart,\n  CandleStickChart,\n  LineChart,\n  PieChart,\n  RadarChart,\n  ScatterChart,\n  CombinedChart\n};\n"
        },
        {
          "name": "ios",
          "type": "tree",
          "content": null
        },
        {
          "name": "issue_template.md",
          "type": "blob",
          "size": 0.2998046875,
          "content": "**Do read files under `lib/*` before reporting issues, you can find all the config there, all of them are straightforward.**\n\n### Expected Behavior\n\n### Actual Behavior\n\n### Screenshots\n\n### Data and config\n\n### Steps to Reproduce the Problem\n\n\n\n### Specifications\n\n  - Version:\n  - Platform:\n  - Subsystem:"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.943359375,
          "content": "{\n  \"name\": \"react-native-charts-wrapper\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/wuxudong/react-native-charts-wrapper.git\"\n  },\n  \"version\": \"0.6.0\",\n  \"description\": \"A react-native charts support both android and iOS.\",\n  \"author\": \"wuxudong\",\n  \"license\": \"MIT\",\n  \"nativePackage\": true,\n  \"homepage\": \"https://github.com/wuxudong/react-native-charts-wrapper\",\n  \"keywords\": [\n    \"react native\",\n    \"chart\",\n    \"android\",\n    \"MPAndroidChart\",\n    \"ios\",\n    \"Charts\"\n  ],\n  \"files\": [\n    \"android/src\",\n    \"android/build.gradle\",\n    \"android/gradle.properties\",\n    \"ios/**/*.h\",\n    \"ios/**/*.m\",\n    \"ios/**/*.swift\",\n    \"lib\",\n    \"index.js\",\n    \"react-native-charts-wrapper.podspec\",\n    \"ios/ReactNativeCharts/ReactNativeCharts.xcodeproj/project.pbxproj\"\n  ],\n  \"dependencies\": {\n    \"deprecated-react-native-prop-types\": \"^2.3.0\",\n    \"prop-types\": \"^15.8.1\"\n  },\n  \"peerDependencies\": {\n    \"react\": \">=16.0.0\"\n  }\n}\n"
        },
        {
          "name": "react-native-charts-wrapper.podspec",
          "type": "blob",
          "size": 0.6982421875,
          "content": "require \"json\"\n\npackage = JSON.parse(File.read(File.join(__dir__, \"package.json\")))\n\nPod::Spec.new do |s|\n  s.name         = 'react-native-charts-wrapper'\n  s.version      = package[\"version\"]\n  s.summary      = package[\"description\"]\n  s.author       = package[\"author\"]\n\n  s.homepage     = package[\"homepage\"]\n\n  s.license      = package[\"license\"]\n  s.platform     = :ios, \"12.0\"\n\n  s.source       = { :git => \"https://github.com/wuxudong/react-native-charts-wrapper.git\", :tag => \"#{s.version}\" }\n  s.source_files = \"ios/ReactNativeCharts/**/*.{h,m,swift}\"\n  s.static_framework = true\n\n  s.swift_version = '5.0'\n  s.dependency 'React'\n  s.dependency 'SwiftyJSON', '5.0'\n  s.dependency 'DGCharts', '5.0.0'\n\n\nend\n"
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "yarn.lock",
          "type": "blob",
          "size": 1.76953125,
          "content": "# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v1\n\n\n\"js-tokens@^3.0.0 || ^4.0.0\":\n  version \"4.0.0\"\n  resolved \"http://registry.npm.taobao.org/js-tokens/download/js-tokens-4.0.0.tgz#19203fb59991df98e3a287050d4647cdeaf32499\"\n\nloose-envify@^1.1.0, loose-envify@^1.4.0:\n  version \"1.4.0\"\n  resolved \"http://registry.npm.taobao.org/loose-envify/download/loose-envify-1.4.0.tgz#71ee51fa7be4caec1a63839f7e682d8132d30caf\"\n  dependencies:\n    js-tokens \"^3.0.0 || ^4.0.0\"\n\nobject-assign@^4.1.1:\n  version \"4.1.1\"\n  resolved \"http://registry.npm.taobao.org/object-assign/download/object-assign-4.1.1.tgz#2109adc7965887cfc05cbbd442cac8bfbb360863\"\n\nprop-types@^15.5.10, prop-types@^15.6.2:\n  version \"15.7.2\"\n  resolved \"http://registry.npm.taobao.org/prop-types/download/prop-types-15.7.2.tgz?cache=0&other_urls=http%3A%2F%2Fregistry.npm.taobao.org%2Fprop-types%2Fdownload%2Fprop-types-15.7.2.tgz#52c41e75b8c87e72b9d9360e0206b99dcbffa6c5\"\n  dependencies:\n    loose-envify \"^1.4.0\"\n    object-assign \"^4.1.1\"\n    react-is \"^16.8.1\"\n\nreact-is@^16.8.1:\n  version \"16.8.6\"\n  resolved \"http://registry.npm.taobao.org/react-is/download/react-is-16.8.6.tgz#5bbc1e2d29141c9fbdfed456343fe2bc430a6a16\"\n\nreact@16.8.3:\n  version \"16.8.3\"\n  resolved \"http://registry.npm.taobao.org/react/download/react-16.8.3.tgz?cache=0&other_urls=http%3A%2F%2Fregistry.npm.taobao.org%2Freact%2Fdownload%2Freact-16.8.3.tgz#c6f988a2ce895375de216edcfaedd6b9a76451d9\"\n  dependencies:\n    loose-envify \"^1.1.0\"\n    object-assign \"^4.1.1\"\n    prop-types \"^15.6.2\"\n    scheduler \"^0.13.3\"\n\nscheduler@^0.13.3:\n  version \"0.13.6\"\n  resolved \"http://registry.npm.taobao.org/scheduler/download/scheduler-0.13.6.tgz#466a4ec332467b31a91b9bf74e5347072e4cd889\"\n  dependencies:\n    loose-envify \"^1.1.0\"\n    object-assign \"^4.1.1\"\n"
        }
      ]
    }
  ]
}