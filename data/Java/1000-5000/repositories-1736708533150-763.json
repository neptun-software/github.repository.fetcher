{
  "metadata": {
    "timestamp": 1736708533150,
    "page": 763,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "connectbot/connectbot",
      "stars": 2558,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2998046875,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=auto\n\n# Explicitly declare text files we want to always be normalized and converted \n# to native line endings on checkout.\n*.java text\n\n# Denote all files that are truly binary and should not be modified.\n*.png binary\n*.jpg binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.388671875,
          "content": "# translation artifacts\nlaunchpad-*.tar.gz\n\n# local config files\nlocal.properties\n\n# working files\n*~\n\n# OS X sucks\n.DS_Store\n\n# SublimeText working files\n*.sublime-project\n*.sublime-workspace\n\n# Android Studio\n.gradle/\nbuild/\n\n# Android gradle native build\n\\.externalNativeBuild/\n\n# keep code style\n.idea/*\n!.idea/codeStyles/\n!.idea/copyright/\n\n**/.cxx\n\n# Jenkinsfile-runner\n\\.jenkinsfile-runner/\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".linthub.yml",
          "type": "blob",
          "size": 0.068359375,
          "content": "java:\n  lint: true\n  config: config/quality/checkstyle/checkstyle.xml\n"
        },
        {
          "name": ".stickler.yml",
          "type": "blob",
          "size": 0.068359375,
          "content": "linters:\n  checkstyle:\n    config: ./config/checkstyle/checkstyle.xml\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.498046875,
          "content": "# Change Log\nAll notable changes to this project will be documented in this file.\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n## [1.9.8][1.9.8]\n### Fixed\n- Issue on some MediaTek phones where arithmetic errors show up\n  when connecting using Ed25519.\n\n## [1.9.7][1.9.7]\n### Fixed\n- Added support for rsa-sha2-512 by updating sshlib\n\n## [1.9.6][1.9.6]\n### Fixed\n- Fixed crash when using tmux\n\n## [1.9.5][1.9.5]\n### Fixed\n- This fixes an incompatibility with OpenSSH 7.8\n\n## [1.9.0-alpha1][1.9.0-alpha1]\n### Changed\n- Major Material Design overhaul of UI.\n- Improved cut-and-paste interface.\n\n### Added\n- Tabs are now used on large screens.\n- Keyboard shortcuts and EULA in help menu.\n- Terminal mouse support including mouse wheel.\n- Full IPv6 host support.\n\n### Removed\n- No more intro wizard on first start.\n- No more outdated physical or virtual keyboard instructions.\n\n## [1.8.6][1.8.6] - 2015-08-24\n### Fixed\n- Crash due to no grantpt symbol in newer NDK was fixed.\n\n## [1.8.5][1.8.5] - 2015-08-11\n### Added\n- Mouse support for right click and selection and mouse wheel\n  (third button) to paste.\n- Hot keys for keyboard including Ctrl - and Ctrl + for decreasing\n  and increasing font resolution and Ctrl Shift V for pasting.\n- Running notification now has a \"disconnect all\" button to\n  quickly close all connections.\n- Support for all ABIs including x86, MIPS, aarch64.\n\n### Changed\n- Default RSA key size is now 2048 bits.\n- New soft keypad including directional arrows.\n- Moved from ViewFlipper to ViewPager for better swipe handling in\n  the console.\n\n### Fixed\n- Pubkeys now have the correct strength listed in the pubkey list.\n- EC key operations would fail on some devices.\n- Connecting to a host from the host list no longer asks which\n  app you want to use.\n- The text in the entropy gathering dialog is now scaled correctly.\n- Touch slop was not correctly scaled when determining dragging.\n\n## [1.8.4][1.8.4] - 2015-04-19\n### Fixed\n- Key exchange and host key algorithm preference order was not being\n  respected.\n- ECDH would sometimes fail because the shared secret would be encoded\n  as a negative integer.\n- DSA host key support was broken from the beginning of the v1.8 series.\n- Connections would sometimes close when leaving ConnectBot.\n- Telnet port range too high will no longer cause crashes.\n\n### Added\n- More context is given for failures to connect via SSH which should\n  reveal why a host might be incompatible with ConnectBot.\n- SSH key exchange algorithm will now be printed upon connection.\n- All addresses for a particular host will be tried when connecting\n  (including IPv6).\n\n## [1.8.3][1.8.3] - 2015-04-02\n### Fixed\n- Only enable EC support when the device supports it.\n- Default font size scales with the device display density.\n- Color picker scales correctly depending on device density.\n- Color picker color numbers are now localized\n\n\n[1.9.8]: https://github.com/connectbot/connectbot/compare/v1.9.7...v1.9.8\n[1.9.7]: https://github.com/connectbot/connectbot/compare/v1.9.6...v1.9.7\n[1.9.6]: https://github.com/connectbot/connectbot/compare/v1.9.5...v1.9.6\n[1.9.5]: https://github.com/connectbot/connectbot/compare/v1.9.4...v1.9.5\n[1.9.0-alpha1]: https://github.com/connectbot/connectbot/compare/v1.8.6...v1.9.0-alpha1\n[1.8.6]: https://github.com/connectbot/connectbot/compare/v1.8.5...v1.8.6\n[1.8.5]: https://github.com/connectbot/connectbot/compare/v1.8.4...v1.8.5\n[1.8.4]: https://github.com/connectbot/connectbot/compare/v1.8.3...v1.8.4\n[1.8.3]: https://github.com/connectbot/connectbot/compare/v1.8.2...v1.8.3\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.451171875,
          "content": "# How to contribute\n\nConnectBot is maintained by a small number of people and we don't have access to the device models that everyone may have. We want your help in solving issues that make ConnectBot a better client. Here are a few guidelines that we ask contributors to follow.\n\n## Getting started\n\n* Make sure you have a [GitHub account](https://github.com/signup/free)\n* [Open an issue](https://github.com/connectbot/connectbot/issues) if one doesn't already exist\n* Fork the repository on GitHub and then clone:\n  * `git clone git@github.com:your-username/connectbot.git`\n* Try to build for the first time:\n  * `./gradlew assemble`\n* Run the tests:\n  * `./gradlew test`\n\n## Making changes\n\n* Create a topic branch from where you want to base your work.\n  * This should be based off the master branch.\n  * To create a topic branch based on master:\n    * `git checkout -b my_fix master`\n  * Make commits of logical units\n  * Make sure your commit messages are in the proper format (from [Pro Git chapter 5.2](https://git-scm.com/book/en/v2/Distributed-Git-Contributing-to-a-Project)).\n````\n    Short (50 chars or less) summary of changes\n\n    More detailed explanatory text, if necessary.  Wrap it to\n    about 72 characters or so.  In some contexts, the first\n    line is treated as the subject of an email and the rest of\n    the text as the body.  The blank line separating the\n    summary from the body is critical (unless you omit the body\n    entirely); tools like rebase can get confused if you run\n    the two together.\n\n    Further paragraphs come after blank lines.\n\n        - Bullet points are okay, too\n\n        - Typically a hyphen or asterisk is used for the bullet,\n          preceded by a single space, with blank lines in\n          between, but conventions vary here\n````\n  * Make sure you have added necessary tests to your changes.\n  * Check for unnecessary whitespace:\n    * `git diff --check`\n  * Make sure no new Android lint issues pop up:\n    * `./gradlew lint`\n    * Read the output to see if any of your newly-added or changed lines have lint errors.\n  * Make sure all the checks and tests pass:\n    * `./gradlew check test`\n\n## Submitting changes\n\n* Push your changes to a topic branch in your fork of the repository.\n* Start a [pull request](https://github.com/connectbot/connectbot/compare/) for ConnectBot.\n\n## Additional resources\n\n* [#connectbot IRC channel](http://webchat.freenode.net/?channels=%23connectbot&uio=OT10cnVlJjExPTIwNQa5) on [Freenode](https://freenode.net/).\n"
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 2.712890625,
          "content": "pipeline {\n  agent {\n    dockerfile {\n      dir 'ci/builder'\n      args \"${env.JAVA_OPTS ? \"-e JAVA_OPTS=\\\"$env.JAVA_OPTS\\\"\" : ''} \" +\n           \"${env.GRADLE_BUILD_CACHE ? \" -e GRADLE_BUILD_CACHE=\\\"$env.GRADLE_BUILD_CACHE\\\"\" : ''} \" +\n           \"${env.MAVEN_REPO_CACHE ? \" -e MAVEN_REPO_CACHE=\\\"$env.MAVEN_REPO_CACHE\\\"\" : ''} \" +\n           \"${env.DOCKER_NETWORK ? \" --network \\\"$env.DOCKER_NETWORK\\\"\" : ''}\"\n    }\n  }\n\n  stages {\n    stage('Build') {\n      steps {\n        gradlew 'assemble'\n      }\n    }\n\n    stage('Test') {\n      steps {\n        gradlew 'check jacocoTestReport'\n\n        junit 'app/build/test-results/**/*.xml'\n      }\n    }\n\n    stage('Device test') {\n      when { expression { env.ANDROID_ADB_SERVER_ADDRESS != null } }\n      steps {\n        script {\n          sh \"ANDROID_ADB_SERVER_ADDRESS=${env.ANDROID_ADB_SERVER_ADDRESS ?: \"host.docker.internal\"} \" +\n             \"ANDROID_ADB_SERVER_PORT=${env.ANDROID_ADB_SERVER_PORT ?: \"5037\"} \" +\n             \"./gradlew connectedCheck --stacktrace --no-daemon\"\n        }\n      }\n    }\n  }\n\n  post {\n    always {\n      jacoco(\n        execPattern: 'app/build/jacoco/*.exec, app/build/outputs/code-coverage/connected/**/*.ec',\n        sourcePattern: 'app/src/*/java',\n        classPattern: 'app/build/intermediates/javac/**/classes',\n        inclusionPattern: 'org/connectbot/**/*.class',\n        exclusionPattern: '**/R$*.class, **/*$ViewInjector*.*, **/BuildConfig.*, **/Manifest*.*'\n      )\n\n      publishCoverage adapters: [\n          jacocoAdapter('app/build/reports/jacoco/jacocoTestGoogleDebugUnitTestReport/jacocoTestGoogleDebugUnitTestReport.xml'),\n          jacocoAdapter('app/build/reports/jacoco/jacocoTestGoogleReleaseUnitTestReport/jacocoTestGoogleReleaseUnitTestReport.xml'),\n          jacocoAdapter('app/build/reports/jacoco/jacocoTestOssDebugUnitTestReport/jacocoTestOssDebugUnitTestReport.xml'),\n          jacocoAdapter('app/build/reports/jacoco/jacocoTestOssReleaseUnitTestReport/jacocoTestOssReleaseUnitTestReport.xml')\n      ]\n\n      dir('app/build') {\n        archiveArtifacts artifacts: 'outputs/apk/**/*.apk', fingerprint: true\n        archiveArtifacts 'outputs/apk/**/output.json'\n\n        archiveArtifacts 'jacoco/*.exec'\n\n        archiveArtifacts 'test-results/**/*.xml'\n\n        checkstyle pattern: 'reports/checkstyle/*.xml'\n        archiveArtifacts 'reports/checkstyle/*.html'\n        archiveArtifacts 'reports/checkstyle/*.xml'\n\n        androidLint pattern: 'reports/lint-results*.xml'\n        archiveArtifacts 'reports/lint-results*.xml'\n\n        archiveArtifacts 'reports/tests/**/*'\n      }\n    }\n  }\n}\n\ndef gradlew(command) {\n  if (isUnix()) {\n    sh \"./gradlew ${command} --stacktrace --no-daemon\"\n  } else {\n    bat \"./gradlew.bat ${command} --stacktrace --no-daemon\"\n  }\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.689453125,
          "content": "[![Build Status](https://travis-ci.com/connectbot/connectbot.svg?branch=master)](\nhttps://travis-ci.com/connectbot/connectbot)\n\n# ConnectBot\n\nConnectBot is a [Secure Shell](https://en.wikipedia.org/wiki/Secure_Shell)\nclient for Android that lets you connect to remote servers over a\ncryptographically secure link.\n\n\n## Google Play\n\n[![Get it on Google Play][2]][1]\n\n  [1]: https://play.google.com/store/apps/details?id=org.connectbot\n  [2]: https://developer.android.com/images/brand/en_generic_rgb_wo_60.png\n\n\n## Compiling\n\n### Android Studio\n\nConnectBot is most easily developed in [Android Studio](\nhttps://developer.android.com/studio/). You can import this project\ndirectly from its project creation screen by importing from the GitHub URL.\n\n### Command line\n\nTo compile ConnectBot using `gradlew`, you must first specify where your\nAndroid SDK is via the `ANDROID_SDK_HOME` environment variable. Then\nyou can invoke the Gradle wrapper to build:\n\n```sh\n./gradlew build\n```\n\n### Reproducing Continuous Integration (CI) builds locally\n\nTo run the Jenkins CI pipeline locally, you can use\n`jenkinsfile-runner` via a Docker installation which can be invoked like\nthis:\n\n```sh\ndocker run -it -v $(pwd):/workspace \\\n    -v jenkinsfile-runner-cache:/var/jenkinsfile-runner-cache \\\n    -v jenkinsfile-runner:/var/jenkinsfile-runner \\\n    -v /var/run/docker.sock:/var/run/docker.sock \\\n    -v $(which docker):$(which docker) \\\n    -e ANDROID_ADB_SERVER_ADDRESS=host.docker.internal \\\n    jenkins/jenkinsfile-runner\n```\n\n\n## Translations\n\nIf you'd like to correct or contribute new translations to ConnectBot,\nthen head on over to [ConnectBot's translations project](\nhttps://translations.launchpad.net/connectbot/trunk/+pots/fortune)\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.275390625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n\tproject.ext.MAVEN_REPO_CACHE = System.getenv(\"MAVEN_REPO_CACHE\")?.trim()\n\tproject.ext.TRANSLATIONS_ONLY = System.getenv(\"TRANSLATIONS_ONLY\")?.trim()\n\tif (MAVEN_REPO_CACHE) {\n\t\trepositories { maven { url MAVEN_REPO_CACHE } }\n\t} else {\n\t\trepositories {\n\t\t\tgoogle()\n\t\t\tmavenCentral()\n\t\t}\n\t}\n}\n\nplugins {\n\tid 'com.diffplug.spotless' version '6.25.0'\n}\n\nif (MAVEN_REPO_CACHE) {\n\tallprojects {\n\t\tbuildscript {\n\t\t\trepositories { maven { url MAVEN_REPO_CACHE } }\n\t\t}\n\t\trepositories { maven { url MAVEN_REPO_CACHE } }\n\t}\n} else {\n\tallprojects {\n\t\tbuildscript {\n\t\t\trepositories {\n\t\t\t\tgoogle()\n\t\t\t\tmavenCentral()\n\t\t\t}\n\t\t}\n\t\trepositories {\n\t\t\tgoogle()\n\t\t\tmavenCentral()\n\t\t}\n\t}\n}\n\nif (!TRANSLATIONS_ONLY) {\n\tapply from: 'spotless.gradle'\n}\n\ntask resolveDependencies {\n\tsetDescription \"Resolves all projects dependencies from the repository.\"\n\tsetGroup \"Build Server\"\n\n\tdoLast {\n\t\trootProject.allprojects { project ->\n\t\t\tproject.buildscript.configurations.forEach { configuration ->\n\t\t\t\tif (configuration.canBeResolved) {\n\t\t\t\t\tconfiguration.resolve()\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproject.configurations.forEach { configuration ->\n\t\t\t\tif (configuration.canBeResolved) {\n\t\t\t\t\tconfiguration.resolve()\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "connectbot.iml",
          "type": "blob",
          "size": 0.9296875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module external.linked.project.id=\"connectbot\" external.linked.project.path=\"$MODULE_DIR$\" external.root.project.path=\"$MODULE_DIR$\" external.system.id=\"GRADLE\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"java-gradle\" name=\"Java-Gradle\">\n      <configuration>\n        <option name=\"BUILD_FOLDER_PATH\" value=\"$MODULE_DIR$/build\" />\n        <option name=\"BUILDABLE\" value=\"false\" />\n      </configuration>\n    </facet>\n    <facet type=\"Python\" name=\"Python\">\n      <configuration sdkName=\"\" />\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/.gradle\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.2021484375,
          "content": "jacocoVersion=0.8.10\norg.gradle.caching=true\norg.gradle.jvmargs=-Xmx2048m\nandroid.useAndroidX=true\nandroid.enableJetifier=false\nandroid.jetifier.ignorelist=bcprov-jdk15on\norg.gradle.configuration-cache=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 7.99609375,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/master/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\nAPP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=${0##*/}\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n# Collect all arguments for the java command;\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n#     shell script including quotes and variable substitutions, so put them in\n#     double quotes to make sure that they get re-expanded; and\n#   * put everything else in single quotes, so that it's not re-expanded.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.6826171875,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "icons",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins.txt",
          "type": "blob",
          "size": 0.142578125,
          "content": "android-lint:latest\nblueocean:latest\nbuild-pipeline-plugin:latest\ncheckstyle:latest\ndocker-slaves:latest\njacoco:latest\nworkflow-aggregator:latest\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.830078125,
          "content": "pluginManagement {\n\tdef MAVEN_REPO_CACHE = System.getenv(\"MAVEN_REPO_CACHE\")?.trim()\n\tif (MAVEN_REPO_CACHE) {\n\t\trepositories {\n\t\t\tmaven {\n\t\t\t\turl MAVEN_REPO_CACHE\n\t\t\t}\n\t\t}\n\t} else {\n\t\trepositories {\n\t\t\tgoogle()\n\t\t\tgradlePluginPortal()\n\t\t}\n\t}\n\n\tresolutionStrategy {\n\t\teachPlugin {\n\t\t\tif (requested.id.id == \"com.android.application\") {\n\t\t\t\tuseModule(\"com.android.tools.build:gradle:${requested.version}\")\n\t\t\t}\n\t\t}\n\t}\n}\n\next.MAVEN_REPO_CACHE = System.getenv(\"MAVEN_REPO_CACHE\")?.trim()\next.GRADLE_BUILD_CACHE = System.getenv(\"GRADLE_BUILD_CACHE\")?.trim()\next.TRANSLATIONS_ONLY = System.getenv(\"TRANSLATIONS_ONLY\")?.trim()\n\nbuildCache {\n\tlocal { enabled = !GRADLE_BUILD_CACHE }\n\tif (GRADLE_BUILD_CACHE) {\n\t\tremote(HttpBuildCache) {\n\t\t\turl = GRADLE_BUILD_CACHE\n\t\t\tpush = true\n\t\t}\n\t}\n}\n\nif (!TRANSLATIONS_ONLY) {\n\tinclude ':app'\n}\ninclude ':translations'\n"
        },
        {
          "name": "spotless.gradle",
          "type": "blob",
          "size": 0.15625,
          "content": "spotless {\n\tgroovyGradle {\n\t\ttarget '**/*.gradle'\n\t}\n\n\tformat 'misc', {\n\t\ttarget '**/*.md', '**/.gitignore'\n\n\t\ttrimTrailingWhitespace()\n\t\tendWithNewline()\n\t}\n}\n"
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}