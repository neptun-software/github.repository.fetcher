{
  "metadata": {
    "timestamp": 1736608944096,
    "page": 143,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/shiro",
      "stars": 4350,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 1.203125,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\ngithub:\n  description: \"Apache Shiro\"\n  homepage: https://shiro.apache.org/\n  dependabot_alerts: true\n  protected_branches:\n    main: { }\n  features:\n    wiki: false\n    issues: true\n    projects: true\n  enabled_merge_buttons:\n    squash:  false\n    merge:   true\n    rebase:  false\n\nnotifications:\n  pullrequests: commits@shiro.apache.org\n  commits: commits@shiro.apache.org\n  issues:  issues@shiro.apache.org\n  jira_options: link label worklog\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.087890625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# IntelliJ\n*.ipr\n*.iml\n*.iws\n.idea/\n\n#\n# Eclipse metadata.\n#\n.project\n.classpath\n.settings/\n\n#\n# Eclipse and Maven output folders.\n#\nbin/\ntarget/\n\n#\n# NetBeans metadata\n#\n**nb-configuration.xml\n**faces-config.NavData\n\n#\n# VS Code\n#\n.factorypath\n\n#\n# Maven release metadata\n#\nrelease.properties\npom.xml.*\n-\n.sdkmanrc\n.DS_Store\n"
        },
        {
          "name": ".jenkins.groovy",
          "type": "blob",
          "size": 8.01171875,
          "content": "/*\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\ndef deployableBranch = env.BRANCH_NAME ==~ /(1.12.x|1.11.x|1.10.x|main)/\n\npipeline {\n\n    agent none\n\n    options {\n        // When we have test-fails e.g. we don't need to run the remaining steps\n        skipStagesAfterUnstable()\n        buildDiscarder(logRotator(numToKeepStr: '5', artifactNumToKeepStr: '5'))\n    }\n\n    stages {\n        stage('Build') {\n            matrix {\n                axes {\n                    axis {\n                        // https://cwiki.apache.org/confluence/display/INFRA/JDK+Installation+Matrix\n                        name 'MATRIX_JDK'\n                        values 'jdk_11_latest', 'jdk_17_latest', 'jdk_21_latest', 'jdk_23_latest'\n                    }\n                    // Additional axes, like OS and maven version can be configured here.\n                }\n\n                agent {\n                    node {\n                        // https://cwiki.apache.org/confluence/display/INFRA/ci-builds.apache.org\n                        label 'ubuntu'\n                        customWorkspace \"workspace/${JOB_NAME}/MatrixCheckout/${MATRIX_JDK}/\"\n                    }\n                }\n\n                options {\n                    // Configure an overall timeout for the build of one hour.\n                    timeout(time: 1, unit: 'HOURS')\n                }\n\n                tools {\n                    // https://cwiki.apache.org/confluence/display/INFRA/Maven+Installation+Matrix\n                    maven 'maven_3_latest'\n                    jdk \"${MATRIX_JDK}\"\n                }\n\n                stages {\n                    stage('Initialization') {\n                        steps {\n                            echo 'Building Branch: ' + env.BRANCH_NAME\n                            echo 'Using PATH = ' + env.PATH\n                            echo 'Slave Node = ' + env.NODE_NAME\n                        }\n                    }\n\n                    stage('Cleanup') {\n                        steps {\n                            echo 'Cleaning up the workspace'\n                            cleanBeforeCheckout()\n                        }\n                    }\n\n                    stage('Checkout') {\n                        steps {\n                            echo 'Checking out branch ' + env.BRANCH_NAME\n                            checkout scm\n                        }\n                    }\n\n                    stage('License check') {\n                        steps {\n                            echo 'License check'\n                            sh './mvnw --batch-mode -Drat.consoleOutput=true apache-rat:check'\n                        }\n                    }\n\n                    stage('Build') {\n                        steps {\n                            echo 'Building'\n                            sh './mvnw clean verify --show-version --errors --batch-mode --no-transfer-progress -Pdocs \\\n                            -Dmaven.test.failure.ignore=true -Pskip_jakarta_ee_tests'\n                        }\n                        post {\n                            always {\n                                junit(testResults: '**/surefire-reports/*.xml', allowEmptyResults: true)\n                                junit(testResults: '**/failsafe-reports/*.xml', allowEmptyResults: true)\n                                archiveArtifacts artifacts: '**/logs/server.log*', allowEmptyArchive: true\n                            }\n                        }\n                    }\n\n                    stage('Deploy') {\n                        when {\n                            allOf {\n                                expression { deployableBranch }\n                                expression { MATRIX_JDK == 'jdk_11_latest' }\n                                // is not a PR (GitHub) / MergeRequest (GitLab) / Change (Gerrit)?\n                                not { changeRequest() }\n                            }\n                        }\n                        steps {\n                            echo 'Deploying'\n                            sh './mvnw --batch-mode clean deploy -Pdocs -DskipTests -DskipITs'\n                        }\n                    }\n\n                } // end of stages\n\n                // Do any post build stuff ... such as sending emails depending on the overall build result.\n                post {\n                    // If this build failed, send an email to the list.\n                    failure {\n                        script {\n                            if (deployableBranch) {\n                                emailext(\n                                        subject: \"[BUILD-FAILURE]: Job '${env.JOB_NAME} [${env.BRANCH_NAME}] [${env.BUILD_NUMBER}]'\",\n                                        body: \"\"\"\nBUILD-FAILURE: Job '${env.JOB_NAME} [${env.BRANCH_NAME}] [${env.BUILD_NUMBER}]':\nCheck console output at \"<a href=\"${env.BUILD_URL}\">${env.JOB_NAME} [${env.BRANCH_NAME}] [${env.BUILD_NUMBER}]</a>\"\n\"\"\",\n                                        to: \"dev@shiro.apache.org\",\n                                        recipientProviders: [[$class: 'DevelopersRecipientProvider']]\n                                )\n                            }\n                        }\n                    }\n\n                    // If this build didn't fail, but there were failing tests, send an email to the list.\n                    unstable {\n                        script {\n                            if (deployableBranch) {\n                                emailext(\n                                        subject: \"[BUILD-UNSTABLE]: Job '${env.JOB_NAME} [${env.BRANCH_NAME}] [${env.BUILD_NUMBER}]'\",\n                                        body: \"\"\"\nBUILD-UNSTABLE: Job '${env.JOB_NAME} [${env.BRANCH_NAME}] [${env.BUILD_NUMBER}]':\nCheck console output at \"<a href=\"${env.BUILD_URL}\">${env.JOB_NAME} [${env.BRANCH_NAME}] [${env.BUILD_NUMBER}]</a>\"\n\"\"\",\n                                        to: \"dev@shiro.apache.org\",\n                                        recipientProviders: [[$class: 'DevelopersRecipientProvider']]\n                                )\n                            }\n                        }\n                    }\n\n                    // Send an email, if the last build was not successful and this one is.\n                    success {\n                        // Cleanup the build directory if the build was successful\n                        // (in this case we probably don't have to do any post-build analysis)\n                        cleanBeforeCheckout()\n                        script {\n                            if (deployableBranch\n                                    && (currentBuild.previousBuild != null) && (currentBuild.previousBuild.result != 'SUCCESS')) {\n                                emailext(\n                                        subject: \"[BUILD-STABLE]: Job '${env.JOB_NAME} [${env.BRANCH_NAME}] [${env.BUILD_NUMBER}]'\",\n                                        body: \"\"\"\nBUILD-STABLE: Job '${env.JOB_NAME} [${env.BRANCH_NAME}] [${env.BUILD_NUMBER}]':\nIs back to normal.\n\"\"\",\n                                        to: \"dev@shiro.apache.org\",\n                                        recipientProviders: [[$class: 'DevelopersRecipientProvider']]\n                                )\n                            }\n                        }\n                    }\n                } // end of post\n\n            } // end of matrix\n\n        } // main stage ('Build')\n\n    } // main stages\n}\n"
        },
        {
          "name": ".jenkins_maven_args",
          "type": "blob",
          "size": 0.02734375,
          "content": "-Dmaven.compiler.release=11\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.455078125,
          "content": "Contributing to Apache Shiro\n=======================================\n\nSummary\n-------\nThis document covers how to contribute to the Apache Shiro project. These instructions assume you have a GitHub.com account, so if you don't have one you will have to create one. Your proposed code changes will be published to your own fork of the Apache Shiro project and you will submit a Pull Request for your changes to be added.\n\n_Lets get started!!!_\n\n\nFork the code\n-------------\n\nIn your browser, navigate to: [https://github.com/apache/shiro](https://github.com/apache/shiro)\n\nFork the repository by clicking on the 'Fork' button on the top right hand side.  \nThe fork will happen and you will be taken to your own fork of the repository.  \nCopy the Git repository URL by clicking on the clipboard next to the URL on the right hand side of the page under '**HTTPS** clone URL'.  \nYou will paste this URL when doing the following `git clone` command.\n\nOn your computer, follow these steps to setup a local repository for working on Apache Shiro:\n\n``` bash\n$ git clone https://github.com/YOUR_ACCOUNT/shiro.git\n$ cd shiro\n$ git remote add upstream https://github.com/apache/shiro.git\n$ git checkout main\n$ git fetch upstream\n$ git rebase upstream/main\n```\n\n\nMaking changes\n--------------\n\nIt is important that you create a new branch to make changes on and that you do not change the `main` branch (other than to rebase in changes from `upstream/main`).  \nIn this example I will assume you will be making your changes to a branch called `feature_x`.  This `feature_x` branch will be created on your local repository and\nwill be pushed to your forked repository on GitHub.  Once this branch is on your fork you will create a Pull Request for the changes to be added to the Apache Shiro project.\n\nIt is best practice to create a new branch each time you want to contribute to the project and only track the changes for that pull request in this branch.\n\n``` bash\n$ git checkout -b feature_x\n   (make your changes)\n$ git status\n$ git add .\n$ git commit -a -m \"descriptive commit message for your changes\"\n```\n\n> The `-b` specifies that you want to create a new branch called `feature_x`.  You only specify `-b` the first time you checkout because you are creating a new branch.  \n> Once the `feature_x` branch exists, you can later switch to it with only `git checkout feature_x`.\n\n\nRebase `feature_x` to include updates from `upstream/main`\n------------------------------------------------------------\n\nIt is important that you maintain an up-to-date `main` branch in your local repository.  This is done by rebasing in the code changes from `upstream/main` \n(the official Apache Shiro project repository) into your local repository.  You will want to do this before you start working on a feature as well as right \nbefore you submit your changes as a pull request.  I recommend you do this process periodically while you work to make sure you are working off the most recent project code.\n\nThis process will do the following:\n\n1. Checkout your local `main` branch\n2. Synchronize your local `main` branch with the `upstream/main` so you have all the latest changes from the project\n3. Rebase the latest project code into your `feature_x` branch so it is up-to-date with the upstream code\n\n``` bash\n$ git checkout main\n$ git fetch upstream\n$ git rebase upstream/main\n$ git checkout feature_x\n$ git rebase main\n```\n\n> Now your `feature_x` branch is up-to-date with all the code in `upstream/main`.\n\n\nMake a GitHub Pull Request to contribute your changes\n-----------------------------------------------------\n\nWhen you are happy with your changes and you are ready to contribute them, you will create a Pull Request on GitHub to do so.  This is done by pushing your local changes \nto your forked repository (default remote name is `origin`) and then initiating a pull request on GitHub.\n\n> **IMPORTANT:** Make sure you have rebased your `feature_x` branch to include the latest code from `upstream/main` _before_ you do this.\n\n``` bash\n$ git push origin main\n$ git push origin feature_x\n```\n\nNow that the `feature_x` branch has been pushed to your GitHub repository, you can initiate the pull request.\n\nTo initiate the pull request, do the following:\n\n1. In your browser, navigate to your forked repository: [https://github.com/YOUR_ACCOUNT/shiro](https://github.com/YOUR_ACCOUNT/shiro)\n2. Click the new button called '**Compare & pull request**' that showed up just above the main area in your forked repository\n3. Validate the pull request will be into the upstream `main` and will be from your `feature_x` branch\n4. Enter a detailed description of the work you have done and then click '**Send pull request**'\n\nIf you are requested to make modifications to your proposed changes, make the changes locally on your `feature_x` branch, re-push the `feature_x` branch to your fork.  \nThe existing pull request should automatically pick up the change and update accordingly.\n\n\nCleaning up after a successful pull request\n-------------------------------------------\n\nOnce the `feature_x` branch has been committed into the `upstream/main` branch, your local `feature_x` branch and the `origin/feature_x` branch are no longer needed. \nIf you want to make additional changes, restart the process with a new branch.\n\n> **IMPORTANT:** Make sure that your changes are in `upstream/main` before you delete your `feature_x` and `origin/feature_x` branches!\n\nYou can delete these deprecated branches with the following:\n\n``` bash\n$ git checkout main\n$ git branch -D feature_x\n$ git push origin :feature_x\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.28515625,
          "content": "                                 Apache License\r\n                           Version 2.0, January 2004\r\n                        http://www.apache.org/licenses/\r\n\r\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n\r\n   1. Definitions.\r\n\r\n      \"License\" shall mean the terms and conditions for use, reproduction,\r\n      and distribution as defined by Sections 1 through 9 of this document.\r\n\r\n      \"Licensor\" shall mean the copyright owner or entity authorized by\r\n      the copyright owner that is granting the License.\r\n\r\n      \"Legal Entity\" shall mean the union of the acting entity and all\r\n      other entities that control, are controlled by, or are under common\r\n      control with that entity. For the purposes of this definition,\r\n      \"control\" means (i) the power, direct or indirect, to cause the\r\n      direction or management of such entity, whether by contract or\r\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\r\n      outstanding shares, or (iii) beneficial ownership of such entity.\r\n\r\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\r\n      exercising permissions granted by this License.\r\n\r\n      \"Source\" form shall mean the preferred form for making modifications,\r\n      including but not limited to software source code, documentation\r\n      source, and configuration files.\r\n\r\n      \"Object\" form shall mean any form resulting from mechanical\r\n      transformation or translation of a Source form, including but\r\n      not limited to compiled object code, generated documentation,\r\n      and conversions to other media types.\r\n\r\n      \"Work\" shall mean the work of authorship, whether in Source or\r\n      Object form, made available under the License, as indicated by a\r\n      copyright notice that is included in or attached to the work\r\n      (an example is provided in the Appendix below).\r\n\r\n      \"Derivative Works\" shall mean any work, whether in Source or Object\r\n      form, that is based on (or derived from) the Work and for which the\r\n      editorial revisions, annotations, elaborations, or other modifications\r\n      represent, as a whole, an original work of authorship. For the purposes\r\n      of this License, Derivative Works shall not include works that remain\r\n      separable from, or merely link (or bind by name) to the interfaces of,\r\n      the Work and Derivative Works thereof.\r\n\r\n      \"Contribution\" shall mean any work of authorship, including\r\n      the original version of the Work and any modifications or additions\r\n      to that Work or Derivative Works thereof, that is intentionally\r\n      submitted to Licensor for inclusion in the Work by the copyright owner\r\n      or by an individual or Legal Entity authorized to submit on behalf of\r\n      the copyright owner. For the purposes of this definition, \"submitted\"\r\n      means any form of electronic, verbal, or written communication sent\r\n      to the Licensor or its representatives, including but not limited to\r\n      communication on electronic mailing lists, source code control systems,\r\n      and issue tracking systems that are managed by, or on behalf of, the\r\n      Licensor for the purpose of discussing and improving the Work, but\r\n      excluding communication that is conspicuously marked or otherwise\r\n      designated in writing by the copyright owner as \"Not a Contribution.\"\r\n\r\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\r\n      on behalf of whom a Contribution has been received by Licensor and\r\n      subsequently incorporated within the Work.\r\n\r\n   2. Grant of Copyright License. Subject to the terms and conditions of\r\n      this License, each Contributor hereby grants to You a perpetual,\r\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n      copyright license to reproduce, prepare Derivative Works of,\r\n      publicly display, publicly perform, sublicense, and distribute the\r\n      Work and such Derivative Works in Source or Object form.\r\n\r\n   3. Grant of Patent License. Subject to the terms and conditions of\r\n      this License, each Contributor hereby grants to You a perpetual,\r\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n      (except as stated in this section) patent license to make, have made,\r\n      use, offer to sell, sell, import, and otherwise transfer the Work,\r\n      where such license applies only to those patent claims licensable\r\n      by such Contributor that are necessarily infringed by their\r\n      Contribution(s) alone or by combination of their Contribution(s)\r\n      with the Work to which such Contribution(s) was submitted. If You\r\n      institute patent litigation against any entity (including a\r\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\r\n      or a Contribution incorporated within the Work constitutes direct\r\n      or contributory patent infringement, then any patent licenses\r\n      granted to You under this License for that Work shall terminate\r\n      as of the date such litigation is filed.\r\n\r\n   4. Redistribution. You may reproduce and distribute copies of the\r\n      Work or Derivative Works thereof in any medium, with or without\r\n      modifications, and in Source or Object form, provided that You\r\n      meet the following conditions:\r\n\r\n      (a) You must give any other recipients of the Work or\r\n          Derivative Works a copy of this License; and\r\n\r\n      (b) You must cause any modified files to carry prominent notices\r\n          stating that You changed the files; and\r\n\r\n      (c) You must retain, in the Source form of any Derivative Works\r\n          that You distribute, all copyright, patent, trademark, and\r\n          attribution notices from the Source form of the Work,\r\n          excluding those notices that do not pertain to any part of\r\n          the Derivative Works; and\r\n\r\n      (d) If the Work includes a \"NOTICE\" text file as part of its\r\n          distribution, then any Derivative Works that You distribute must\r\n          include a readable copy of the attribution notices contained\r\n          within such NOTICE file, excluding those notices that do not\r\n          pertain to any part of the Derivative Works, in at least one\r\n          of the following places: within a NOTICE text file distributed\r\n          as part of the Derivative Works; within the Source form or\r\n          documentation, if provided along with the Derivative Works; or,\r\n          within a display generated by the Derivative Works, if and\r\n          wherever such third-party notices normally appear. The contents\r\n          of the NOTICE file are for informational purposes only and\r\n          do not modify the License. You may add Your own attribution\r\n          notices within Derivative Works that You distribute, alongside\r\n          or as an addendum to the NOTICE text from the Work, provided\r\n          that such additional attribution notices cannot be construed\r\n          as modifying the License.\r\n\r\n      You may add Your own copyright statement to Your modifications and\r\n      may provide additional or different license terms and conditions\r\n      for use, reproduction, or distribution of Your modifications, or\r\n      for any such Derivative Works as a whole, provided Your use,\r\n      reproduction, and distribution of the Work otherwise complies with\r\n      the conditions stated in this License.\r\n\r\n   5. Submission of Contributions. Unless You explicitly state otherwise,\r\n      any Contribution intentionally submitted for inclusion in the Work\r\n      by You to the Licensor shall be under the terms and conditions of\r\n      this License, without any additional terms or conditions.\r\n      Notwithstanding the above, nothing herein shall supersede or modify\r\n      the terms of any separate license agreement you may have executed\r\n      with Licensor regarding such Contributions.\r\n\r\n   6. Trademarks. This License does not grant permission to use the trade\r\n      names, trademarks, service marks, or product names of the Licensor,\r\n      except as required for reasonable and customary use in describing the\r\n      origin of the Work and reproducing the content of the NOTICE file.\r\n\r\n   7. Disclaimer of Warranty. Unless required by applicable law or\r\n      agreed to in writing, Licensor provides the Work (and each\r\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\r\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\n      implied, including, without limitation, any warranties or conditions\r\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\n      PARTICULAR PURPOSE. You are solely responsible for determining the\r\n      appropriateness of using or redistributing the Work and assume any\r\n      risks associated with Your exercise of permissions under this License.\r\n\r\n   8. Limitation of Liability. In no event and under no legal theory,\r\n      whether in tort (including negligence), contract, or otherwise,\r\n      unless required by applicable law (such as deliberate and grossly\r\n      negligent acts) or agreed to in writing, shall any Contributor be\r\n      liable to You for damages, including any direct, indirect, special,\r\n      incidental, or consequential damages of any character arising as a\r\n      result of this License or out of the use or inability to use the\r\n      Work (including but not limited to damages for loss of goodwill,\r\n      work stoppage, computer failure or malfunction, or any and all\r\n      other commercial damages or losses), even if such Contributor\r\n      has been advised of the possibility of such damages.\r\n\r\n   9. Accepting Warranty or Additional Liability. While redistributing\r\n      the Work or Derivative Works thereof, You may choose to offer,\r\n      and charge a fee for, acceptance of support, warranty, indemnity,\r\n      or other liability obligations and/or rights consistent with this\r\n      License. However, in accepting such obligations, You may act only\r\n      on Your own behalf and on Your sole responsibility, not on behalf\r\n      of any other Contributor, and only if You agree to indemnify,\r\n      defend, and hold each Contributor harmless for any liability\r\n      incurred by, or claims asserted against, such Contributor by reason\r\n      of your accepting any such warranty or additional liability.\r\n\r\n   END OF TERMS AND CONDITIONS\r\n\r\n   APPENDIX: How to apply the Apache License to your work.\r\n\r\n      To apply the Apache License to your work, attach the following\r\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\r\n      replaced with your own identifying information. (Don't include\r\n      the brackets!)  The text should be enclosed in the appropriate\r\n      comment syntax for the file format. We also recommend that a\r\n      file or class name and description of purpose be included on the\r\n      same \"printed page\" as the copyright notice for easier\r\n      identification within third-party archives.\r\n\r\n   Copyright [yyyy] [name of copyright owner]\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License."
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.642578125,
          "content": "Apache Shiro\nCopyright 2008-2022 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nThe implementation for org.apache.shiro.util.SoftHashMap is based \non initial ideas from Dr. Heinz Kabutz's publicly posted version \navailable at http://www.javaspecialists.eu/archive/Issue015.html,\nwith continued modifications.  \n\nCertain parts (StringUtils, IpAddressMatcher, AntPathMatcherTests, etc.) of the\nsource code for this product was copied for simplicity and to reduce\ndependencies from the source code developed by the Spring Framework Project\n(http://www.springframework.org).\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 1.0087890625,
          "content": "This distribution includes cryptographic software.  The country in\nwhich you currently reside may have restrictions on the import,\npossession, use, and/or re-export to another country, of\nencryption software.  BEFORE using any encryption software, please\ncheck your country's laws, regulations and policies concerning the\nimport, possession, or use, and re-export of encryption software, to\nsee if this is permitted.  See http://www.wassenaar.org for more\ninformation.\n\nThe U.S. Government Department of Commerce, Bureau of Industry and\nSecurity (BIS), has classified this software as Export Commodity\nControl Number (ECCN) 5D002.C.1, which includes information security\nsoftware using or performing cryptographic functions with asymmetric\nalgorithms.  The form and manner of this Apache Software Foundation\ndistribution makes it eligible for export under the License Exception\nENC Technology Software Unrestricted (TSU) exception (see the BIS\nExport Administration Regulations, Section 740.13) for both object\ncode and source code.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.552734375,
          "content": "[<img src=\"http://shiro.apache.org/images/apache-shiro-logo.png\" align=\"right\" />](http://shiro.apache.org)\n\n[![Maven Central](https://img.shields.io/maven-central/v/org.apache.shiro/shiro-core)](https://central.sonatype.com/artifact/org.apache.shiro/shiro-core/)\n[![Build Status](https://ci-builds.apache.org/buildStatus/icon?job=Shiro%2FShiro-all%2Fmain)](https://ci-builds.apache.org/job/Shiro/job/Shiro-all/job/main/)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/apache/shiro/badge)](https://api.securityscorecards.dev/projects/github.com/apache/shiro)\n[![Reproducible Builds](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/jvm-repo-rebuild/reproducible-central/master/content/org/apache/shiro/badge.json)](https://github.com/jvm-repo-rebuild/reproducible-central/blob/master/content/org/apache/shiro/README.md)\n\nApache Shiro\n============\n\n[Apache Shiro](http://shiro.apache.org) is a powerful and easy-to-use Java security framework that performs authentication, authorization, cryptography, and session management. With Shiro’s easy-to-understand API, you can quickly and easily secure any application – from the smallest mobile applications to the largest web and enterprise applications.\n\nDocumentation and Examples\n--------------------------\nhttp://shiro.apache.org\n\nTutorials\n---------\n* [10 Minute Tutorial](http://shiro.apache.org/10-minute-tutorial.html)\n* [Web Application](http://shiro.apache.org/webapp-tutorial.html) \n\nLicense\n-------\n[Apache License, Version 2.0](https://www.apache.org/licenses/LICENSE-2.0.txt)\n"
        },
        {
          "name": "RELEASE-NOTES",
          "type": "blob",
          "size": 23.8994140625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\r\n# or more contributor license agreements.  See the NOTICE file\r\n# distributed with this work for additional information\r\n# regarding copyright ownership.  The ASF licenses this file\r\n# to you under the Apache License, Version 2.0 (the\r\n# \"License\"); you may not use this file except in compliance\r\n# with the License.  You may obtain a copy of the License at\r\n#\r\n#     http://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n# Unless required by applicable law or agreed to in writing,\r\n# software distributed under the License is distributed on an\r\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n# KIND, either express or implied.  See the License for the\r\n# specific language governing permissions and limitations\r\n# under the License.\r\n\r\nThis is not an official release notes document.  It exists for Shiro developers\r\nto jot down their notes while working in the source code.  These notes will be\r\ncombined with Jira’s auto-generated release notes during a release for the\r\ntotal set.\r\n\r\n###########################################################\r\n# 2.0.0\r\n###########################################################\r\n\r\nImprovement\r\n\r\n    [SHIRO-290] Implement bcrypt and argon2 KDF algorithms\r\n\r\nBackwards Incompatible Changes\r\n--------------------------------\r\n\r\n* Changed default DefaultPasswordService.java algorithm to \"Argon2id\".\r\n* PasswordService.encryptPassword(Object plaintext) will now throw a NullPointerException on null parameter.\r\n  It was never specified how this method would behave.\r\n* Made salt non-nullable.\r\n* Removed methods in PasswordMatcher.\r\n\r\n\r\n###########################################################\r\n# 1.7.1\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-797] - Shiro 1.7.0 is lower than using springboot version 2.0.7 dependency error\r\n\r\n\r\n###########################################################\r\n# 1.7.0\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-767] - org.apache.shiro.util.ClassUtil cannot load the array of Primitive DataType when use undertow as web container\r\n    [SHIRO-792] - ShiroWebFilterConfiguration seems to conflict with other FilterRegistrationBean\r\n\r\nNew Feature\r\n\r\n    [SHIRO-789] - Also add cookie SameSite option to Spring\r\n\r\nImprovement\r\n\r\n    [SHIRO-740] - SslFilter with HTTP Strict Transport Security (HSTS)\r\n    [SHIRO-794] - Add system property to enable backslash path normalization\r\n    [SHIRO-795] - Disable session path rewriting by default\r\n\r\nTask\r\n\r\n    [SHIRO-793] - deleteMe cookie should use the defined \"sameSite\"\r\n\r\n\r\n###########################################################\r\n# 1.6.0\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-610] - Incorrect filterchainResolver in 1.4.0-RC2\r\n    [SHIRO-762] - SecurityUtils.securityManager should be volatile\r\n    [SHIRO-766] - ArrayIndexOutOfBoundsException in Base64#decode\r\n\r\nNew Feature\r\n\r\n    [SHIRO-788] - Add support for Global Filters\r\n\r\nWish\r\n\r\n    [SHIRO-780] - NOTICE files of shiro components don't match NOTICE in source code repository\r\n\r\n\r\n###########################################################\r\n# 1.5.3\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-530] - INI parser does not properly handled backslashes at end of values\r\n    [SHIRO-751] - SimplePrincipalMap and SimplePrincipalCollection throw different exceptions for the same problem\r\n    [SHIRO-753] - Regression in URI parsing in Shiro 1.5.2\r\n\r\nDependency upgrade\r\n\r\n    [SHIRO-754] - Upgrade to Apache Commons Codec 1.14\r\n    [SHIRO-755] - Upgrade to Hazelcast 3.12.6\r\n    [SHIRO-756] - Upgrade to Spring 5.2.5.RELEASE and Spring boot 2.2.6.RELEASE\r\n    [SHIRO-757] - Upgrade to Htmlunit 2.39.0\r\n    [SHIRO-758] - Upgrade to Jetty 9.4.27.v20200227\r\n    [SHIRO-759] - Upgrade to Karaf 4.2.8\r\n\r\n\r\n###########################################################\r\n# 1.5.2\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-747] - FirstSuccessfulStrategy doesn't properly short circuit\r\n    [SHIRO-749] - shiro-all jar is missing cache package\r\n\r\nImprovement\r\n\r\n    [SHIRO-748] - Update Commons Configuration to 2.7\r\n\r\n\r\n###########################################################\r\n# 1.5.1\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-736] - DefaultCipherInstance is an alias which is not available in every JVM or JCA Provider\r\n    [SHIRO-739] - Bean reflection property failed with Enum values\r\n    [SHIRO-741] - Matching of / (root) is broken\r\n    [SHIRO-742] - fix throw exception when request uri is /\r\n\r\nDependency upgrade\r\n\r\n    [SHIRO-738] - Upgrade to Spring 5.2.3.RELEASE and Spring boot 2.2.4.RELEASE\r\n\r\n\r\n###########################################################\r\n# 1.5.0\r\n###########################################################\r\n\r\nNotes: this release require a JRE 8 minimum.\r\n\r\nBug\r\n\r\n    [SHIRO-458] - Possible leaked timing information from DefaultPasswordService\r\n    [SHIRO-469] - Wrong description of JdbcRealm#setPermissionsQuery\r\n    [SHIRO-552] - JdbcRealm in SaltStyle.COLUMN assumes that password column is Base64 but salt column is utf8 bytes\r\n    [SHIRO-661] - Add check for the principal of subject whether is null\r\n    [SHIRO-682] - fix the potential threat when use \"uri = uri + '/' \" to bypassed shiro protect\r\n    [SHIRO-684] - INI parser keeps escape characters in keys and values\r\n    [SHIRO-685] - Potential NullPointerException if PermissionResolver return null/empty string\r\n    [SHIRO-687] - Additional Servlet Filters are not available to ShiroFilterFactorBean (unless using XML based beans)\r\n\r\nNew Feature\r\n\r\n    [SHIRO-694] - Adds BearerToken support\r\n    [SHIRO-722] - Add SameSite option to cookies\r\n\r\nImprovement\r\n\r\n    [SHIRO-668] - Catch unexpected errors which can lead to oom\r\n    [SHIRO-669] - Included a boolean flag in FirstSuccessfulStrategy to break after first successful authentication\r\n    [SHIRO-670] - ByteSource Serializable\r\n    [SHIRO-681] - Upgrade to compiler Java 8\r\n    [SHIRO-693] - Update plugins\r\n    [SHIRO-700] - Minor spring updates\r\n    [SHIRO-706] - Switch to Guice4 by default in the build\r\n    [SHIRO-709] - Fix Shiro Spring feature\r\n    [SHIRO-710] - Update Commons Lang3 + remove older Commons Lang\r\n    [SHIRO-711] - Deprecate JavaEnvironment\r\n    [SHIRO-712] - Add BasicIniEnvironment\r\n    [SHIRO-715] - Remove old JSTL jars\r\n    [SHIRO-720] - Update Commons BeanUtils\r\n    [SHIRO-724] - Update Jetty, Spring, Spring Boot, Htmlunit dependencies\r\n    [SHIRO-726] - Add dynamic import package\r\n    [SHIRO-728] - Update Spring Boot to 2.1.10\r\n    [SHIRO-729] - Update Quartz\r\n    [SHIRO-730] - Updates the default Cipher mode to GCM in AesCipherService\r\n    [SHIRO-731] - Use OWasp Java Encoder to escape user supplied content to the logs\r\n\r\nTest\r\n\r\n    [SHIRO-697] - Reduce shiro test logging level to INFO\r\n\r\nTask\r\n\r\n    [SHIRO-690] - Validate JDK11 compatibility\r\n    [SHIRO-692] - Upgrade and enforce min build maven version to 3.5.0\r\n    [SHIRO-698] - Improve build with maven profile\r\n    [SHIRO-734] - Remove Spring-client sample\r\n    [SHIRO-735] - Shiro does not support servlet-3.1 void method(@Suspended AsyncResponse)\r\n\r\nDependency upgrade\r\n\r\n    [SHIRO-688] - Upgrade to commons-cli 1.4\r\n    [SHIRO-689] - Upgrade to commons-codec 1.12\r\n    [SHIRO-691] - Upgrade to maven-jar-plugin 3.1.1\r\n    [SHIRO-695] - Update Hazelcast\r\n    [SHIRO-696] - Update Jetty\r\n    [SHIRO-699] - Fix maven warning for exec-maven-plugin and upgrade to 1.6.0\r\n    [SHIRO-701] - Update logback\r\n    [SHIRO-702] - Upgrade to jacoco-maven-plugin 0.8.4\r\n    [SHIRO-703] - Update HSQL\r\n    [SHIRO-704] - Update Spring, Spring Boot, Hibernate\r\n    [SHIRO-705] - Update Easymock + Powermock\r\n    [SHIRO-707] - Misc dependency updates\r\n    [SHIRO-716] - Upgrade to commons-codec 1.13\r\n    [SHIRO-717] - Upgrade to maven-pmd-plugin 3.12.0\r\n    [SHIRO-718] - Upgrade to xmlsec 2.1.4\r\n    [SHIRO-719] - Upgrade to Karaf 4.2.6\r\n\r\nRequest\r\n\r\n    [SHIRO-723] - Provide Minor Shiro Release that includes CVE-2019-10086 Fix\r\n\r\n\r\n###########################################################\r\n# 1.4.2\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-721] - RememberMe Padding Oracle Vulnerability\r\n\r\nImprovement\r\n\r\n    [SHIRO-730] - Updates the default Cipher mode to GCM in AesCipherService\r\n\r\n\r\n###########################################################\r\n# 1.4.1\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-457] - Login without static VM security manager cause exception in debug\r\n    [SHIRO-563] - shiro-aspectj karaf feature can't be installed\r\n    [SHIRO-624] - OSGI: commons configuration import should be optional\r\n    [SHIRO-626] - Bundle symbolic name conflict\r\n    [SHIRO-637] - Refresh cached session in HTTP request after user logs out\r\n    [SHIRO-650] - Shiro JAX-RS is not an OSGi bundle\r\n    [SHIRO-653] - Spring-boot registers shiro filter only on REQUEST dispatcher\r\n    [SHIRO-655] - shiro-core has an undesirable runtime OSGi dependency to spring-beans\r\n    [SHIRO-658] - Problems building shiro on openjdk-8 on current debian stable (9.6 \"stretch\")\r\n    [SHIRO-660] - Bug in FirstSuccessfulStrategy\r\n    [SHIRO-680] - Duplicate Bundle-SymbolicName for Different Shiro Modules\r\n\r\nNew Feature\r\n\r\n    [SHIRO-638] - Update osgi bundle manifest to support Spring 4.x\r\n\r\nImprovement\r\n\r\n    [SHIRO-560] - Shiro-web feature can't be installed in karaf 4.0.4\r\n    [SHIRO-652] - Upgrade Shiro Feature to Karaf 4.x\r\n    [SHIRO-664] - Upgrade to Apache pom parent 21\r\n    [SHIRO-665] - Upgrade to maven-bundle-plugin 4.1.0\r\n    [SHIRO-667] - Upgrade to Spring 4.3.22-RELEASE\r\n    [SHIRO-672] - Upgrade to jacoco-maven-plugin 0.8.3\r\n    [SHIRO-673] - Upgrade to maven-compiler-plugin 3.8.0\r\n    [SHIRO-674] - Upgrade to maven-dependency-plugin to 3.1.1\r\n    [SHIRO-675] - Upgrade to maven-surefire-plugins 3.0.0-M3\r\n    [SHIRO-676] - Upgrade to maven-jar-plugin 3.1.0\r\n    [SHIRO-677] - Upgrade to versions-maven-plugin 2.7\r\n    [SHIRO-683] - Upgrade to spring-boot 1.5.19.RELEASE\r\n\r\nTask\r\n\r\n    [SHIRO-662] - Constant Name Change in AuthenticationRealm\r\n    [SHIRO-663] - Clean up pom parent relative path\r\n\r\nDependency upgrade\r\n\r\n    [SHIRO-659] - Upgrade to OWASP dependency-check-maven plugin 4.0.0\r\n\r\n\r\n###########################################################\r\n# 1.4.0\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-559] - shiro-guice violates the JEE specification\r\n    [SHIRO-579] - Permission filter is validating last matched path\r\n    [SHIRO-603] - Endless recursion in ShiroSecurityContext.getUserPrincipal()\r\n    [SHIRO-605] - ShiroWebModule creates out of order filter chain.\r\n    [SHIRO-607] - AuthorizationAttributeSourceAdvisor ignores type-annotations\r\n    [SHIRO-608] - Use a ServiceLoader to discover WebEnvironments\r\n    [SHIRO-611] - Spring web module does not load correct SessionStorageEvaluator\r\n\r\nImprovement\r\n\r\n    [SHIRO-596] - shiro-tools-hasher needs private salt option\r\n    [SHIRO-618] - Spring Boot Web Starter- Autoconfiguration for Realm and ShiroFilterChainDefinition\r\n\r\n\r\n###########################################################\r\n# 1.4.0-RC2\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-493] - shiro-guice not working with the guice 4.x\r\n    [SHIRO-576] - Commons-beanutils dependency is not security compliant\r\n    [SHIRO-586] - Can't Search For Groups In Active Directory Without A System User\r\n    [SHIRO-587] - Can't Access Groups If userPrincipalName Doesn't Exist\r\n    [SHIRO-591] - Basic Auth Filter permissive mode does NOT work\r\n    [SHIRO-592] - ModularRealmAuthenticator causes log spam when one realm throws exception\r\n    [SHIRO-593] - Allow for IniWebEnvironment subclasses to specify defaults objects to ReflectionBuilder\r\n    [SHIRO-594] - Update Hazelcast version to latest supported version (3.7.2)\r\n    [SHIRO-595] - Allow for POST only logout requests\r\n    [SHIRO-612] - Need to upgrade BeanUtils to avoid vulnerability\r\n\r\nNew Feature\r\n\r\n    [SHIRO-501] - Add ability to set system properties in shiro.ini\r\n    [SHIRO-589] - Add Servlet 3.x fragment\r\n    [SHIRO-590] - Add Spring Boot support / starters\r\n\r\nImprovement\r\n\r\n    [SHIRO-296] - Typo fixes\r\n    [SHIRO-301] - Call permissionResolver directly in AuthorizingRealm\r\n    [SHIRO-392] - Shiro Extension for JAX-RS\r\n    [SHIRO-599] - Fix file encoding warnings during maven build and reporting\r\n\r\n\r\n###########################################################\r\n# 1.3.2\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-584] - URL Path matching issue with WebUtils.getPathWithinApplication\r\n\r\n\r\n###########################################################\r\n# 1.3.1\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-577] - Regression - Unable to set custom SessionValidationScheduler\r\n    [SHIRO-581] - Improve log message when remember me cipher has changed\r\n\r\n\r\n###########################################################\r\n# 1.3.0\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-373] - Complete CAS remember-me support\r\n    [SHIRO-397] - SingleArgumentMethodEventListenerTest fails\r\n    [SHIRO-421] - Unable to set long timeouts on HttpServletSession\r\n    [SHIRO-435] - SecurityManager is not a singleton in ShiroWebModule\r\n    [SHIRO-473] - DefaultAnnotationResolver.getAnnotation throws NullPointerException\r\n    [SHIRO-480] - setTarget method in DomainPermission does not set targets\r\n    [SHIRO-483] - passwordsMatch() returns false with right plain password-encrypted password in JVM with default locale tr_TR\r\n    [SHIRO-502] - OSGi import of com.google.inject in shiro-guice has incorrect version range\r\n    [SHIRO-513] - Misleading error message when using custom WebEnvironment\r\n    [SHIRO-515] - ExecutorServiceSessionValidationScheduler leaks resources due to improper synchronization\r\n    [SHIRO-547] - Use MessageDigest#isEqual() instead of Arrays#equals() for comparing digests\r\n    [SHIRO-568] - hash iterations is calculated wrongly in SimpleHash\r\n    [SHIRO-570] - SimpleCookie should check the path of the cookie\r\n\r\nNew Feature\r\n\r\n    [SHIRO-200] - Add ability to configure basic authentication for specific HTTP methods\r\n    [SHIRO-395] - Add an Event Bus for event publishing and low-coupling for custom components/plugins.\r\n    [SHIRO-412] - Hazelcast-based caching and session clustering\r\n    [SHIRO-436] - Add EnvironmentLoader finalizeEnvironment method\r\n\r\nImprovement\r\n\r\n    [SHIRO-278] - Rename JndiLdapRealm to DefaultLdapRealm\r\n    [SHIRO-300] - WildcardPermission: change visibility of field 'parts' to protected\r\n    [SHIRO-361] - HttpServletResponse.encodeURL: only append JSESSIONID when necessary\r\n    [SHIRO-428] - AuthorizingRealm \"no cache\" logging should be at DEBUG level, not INFO, OR is should log only once\r\n    [SHIRO-437] - WildcardPermission: conformed toString\r\n    [SHIRO-514] - ExecutorServiceSessionValidationScheduler should create threads with a configurable name\r\n    [SHIRO-564] - WildcardPermission case-insensitive makes parts collections twice\r\n    [SHIRO-566] - CollectionUtils should use Collections wrappers of arrays if possible\r\n\r\nTask\r\n\r\n    [SHIRO-208] - Correct JDK 1.5 / 1.6 incompatibilities\r\n    [SHIRO-320] - Add an example for using Guice integration.\r\n    [SHIRO-571] - Mark shiro-cas deprecated (replaced with buji-pac4j)\r\n\r\n\r\n###########################################################\r\n# 1.2.6\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-545] - JavaEnvironment version getter\r\n    [SHIRO-567] - shiro-root-1.2.5.pom uses invalid encoding, fails to parse with Gradle 2.14\r\n\r\n\r\n###########################################################\r\n# 1.2.5\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-443] - SessionValidationScheduler created multiple times, enabling it is not thread safe\r\n    [SHIRO-462] - Authentication exceptions are swallowed\r\n    [SHIRO-467] - Authentication exception gets swallowed\r\n    [SHIRO-550] - Randomize default remember me cipher\r\n\r\nImprovement\r\n\r\n    [SHIRO-504] - Java 8 support\r\n    [SHIRO-516] - Explicitly specify the version of aspectjtools to avoid build warning\r\n    [SHIRO-562] - WildcardPermission calls String.trim() twice in setParts()\r\n\r\n\r\n###########################################################\r\n# 1.2.4\r\n###########################################################\r\n\r\nBug\r\n\r\n    [SHIRO-517] - Caused by: java.lang.NoClassDefFoundError: Lcom/google/inject/internal/util/$ImmutableList;\r\n    [SHIRO-518] - Shiro-CAS: Security Problem in cas-client-core versions older than 3.3.2\r\n    [SHIRO-556] - https://shiro.apache.org/realm.html appears to link to the javadoc under static/current/apidocs not static/latest\r\n\r\nImprovement\r\n\r\n    [SHIRO-332] - Change access level of method 'isPermitted' in org.apache.shiro.realm.AuthorizingRealm (line 461) from private to protected\r\n    [SHIRO-496] - Update shiro.guice dependency\r\n    [SHIRO-498] - ThreadLocal should not be created when not necessary\r\n\r\n\r\n###########################################################\r\n# 1.2.2\r\n###########################################################\r\n\r\nBug:\r\n\r\n    [SHIRO-316] - Annotations in samples-aspectj Project Does not Work\r\n    [SHIRO-351] - Shiro Native Session implementation cannot extract JSESSIONID From URL if JSESSIONID is URL parameter (not HTTP parameter)\r\n    [SHIRO-379] - SimpleAccountRealm concurrency access to roles and users\r\n    [SHIRO-380] - runAs feature (still) doesn't work\r\n    [SHIRO-387] - EnvironmentLoader destroys wrong environment\r\n    [SHIRO-388] - Stackoverflow org.apache.shiro.session.SessionListener.onStop()\r\n    [SHIRO-389] - Fix OSGI Exports for shiro-ehcache\r\n    [SHIRO-390] - OSGi Import for JSP (javax.servlet.jsp) should be declared optional\r\n    [SHIRO-394] - PropertiesRealm reloading not working when loading from file\r\n    [SHIRO-399] - Memory leak for invalid sessions\r\n    [SHIRO-403] - Trunk will not build under JDK 1.7 due to webstart plugin\r\n    [SHIRO-413] - init() method is not called on class that implements org.apache.shiro.util.Initializable\r\n    [SHIRO-415] - isLoginAttempt method in BasicHttpAuthenticationFilter class fails if used in any locale other than English\r\n    [SHIRO-418] - Javadoc typo in JdbcRealm.SaltStyle\r\n    [SHIRO-423] - INI ReflectionBuilder should not wrap reference values\r\n    [SHIRO-429] - perms filter parsing is too sensitive to a trailing space\r\n    [SHIRO-431] - please use git ignore\r\n    [SHIRO-447] - Broken Javadoc links\r\n\r\n\r\n###########################################################\r\n# 1.2.1\r\n###########################################################\r\n\r\nBug:\r\n\r\n    [SHIRO-341] - ReflectionBuilder has invalid log message format\r\n    [SHIRO-342] - Running the example as described at http://shiro.apache.org/10-minute-tutorial.html fails\r\n    [SHIRO-344] - runAs feature doesn't work\r\n    [SHIRO-350] - Creating a subject should not create a session\r\n    [SHIRO-353] - DefaultSecurityManager has invalid SLF4J log instruction\r\n    [SHIRO-354] - Authentication cache\r\n    [SHIRO-358] - Source Tarball doesn't Build\r\n    [SHIRO-363] - PasswordMatcher should support character arrays\r\n    [SHIRO-368] - DomainPermission(string, string) constructor sets targets to the same value as actions\r\n    [SHIRO-375] - Basic authentication issue when using COLON character\r\n    [SHIRO-376] - shiro-cas feature should not depend on shiro-cas\r\n    [SHIRO-377] - PropertiesRealm unable to reload Properties\r\n\r\n\r\n###########################################################\r\n# 1.2.0\r\n###########################################################\r\n\r\nBackwards Incompatible Changes\r\n--------------------------------\r\n- The following org.apache.shiro.mgt.DefaultSecurityManager methods have been removed:\r\n  bindPrincipalsToSession(principals, context)\r\n\r\n  This logic has been moved into a SubjectDAO concept to allow end-users to control\r\n  exactly how the Session may be used for subject state persistence.  This allows a\r\n  single point of control rather than needing to configure Shiro in multiple places.\r\n\r\n  If you overrode this method in Shiro 1.0 or 1.1, please look at the new\r\n  org.apache.shiro.mgt.DefaultSubjectDAO implementation, which performs compatible logic.\r\n  Documentation for this is covered here:\r\n  http://shiro.apache.org/session-management.html#SessionManagement-SessionsandSubjectState\r\n\r\n- The org.apache.shiro.web.session.mgt.ServletContainerSessionManager implementation\r\n  (enabled by default for all web applications) no longer subclasses\r\n  org.apache.shiro.session.mgt.AbstractSessionManager.  AbstractSessionManager existed\r\n  originally to consolidate a 'globalSessionTimeout' configuration property for\r\n  subclasses.  However, the ServletContainerSessionManager has been changed to always\r\n  reflect the session configuration from web.xml (per its namesake).  Because web.xml\r\n  is the definitive source for session timeout configuration, the 'extends' clause\r\n  was removed to avoid configuration confusion: if someone attempted to configure\r\n  'globalSessionTimeout' on a ServletContainerSessionManager instance, it would never\r\n  be honored.  It was better to remove the extends clause to ensure that any\r\n  such configuration would fail fast when Shiro starts up to reflect the invalid config.\r\n\r\n\r\nPotential Breaking Changes\r\n--------------------------------\r\n- The org.apache.shiro.web.filter.mgt.FilterChainManager class's\r\n  addFilter(String name, Filter filter) semantics have changed.  It now no longer\r\n  attempts to initialize a filter by default before adding the filter to the chain.\r\n  If you ever called this method, you can call the\r\n  addFilter(name, filter, true) method to achieve the <= 1.1 behavior.\r\n\r\n- The org.apache.shiro.crypto.SecureRandomNumberGenerator previously defaulted to generating\r\n  128 random _bytes_ each time the nextBytes() method was called.  This is too large for most purposes, so the\r\n  default has been changed to 16 _bytes_ (which equals 128 bits - what was originally intended).  If for some reason\r\n  you need more than 16 bytes (128 bits) of randomly generated bits, you will need to configure the\r\n  'defaultNextByteSize' property to match your desired size (in bytes, NOT bits).\r\n\r\n- Shiro's Block Cipher Services (AesCipherService, BlowfishCipherService) have had the following changes:\r\n\r\n  1) The internal Cipher Mode and Streaming Cipher Mode have been changed from CFB to the new default of CBC.\r\n     CBC is more commonly used for block ciphers today (e.g. SSL).\r\n     If you were using an AES or Blowfish CipherService you will want to revert to the previous defaults in your config\r\n     to ensure you can still decrypt previously encrypted data.  For example, in code:\r\n\r\n     blockCipherService.setMode(OperationMode.CFB);\r\n     blockCipherService.setStreamingMode(OperationMode.CFB);\r\n\r\n     or, in shiro.ini:\r\n\r\n     blockCipherService.modeName = CFB\r\n     blockCipherService.streamingModeName = CFB\r\n\r\n  2) The internal Streaming Padding Scheme has been changed from NONE to PKCS5 as PKCS5 is more commonly used.\r\n     If you were using an AES or Blowfish CipherService for streaming operations, you will want to revert to the\r\n     previous padding scheme default to ensure you can still decrypt previously encrypted data.  For example, in code:\r\n\r\n     blockCipherService.setStreamingPaddingScheme(PaddingScheme.NONE);\r\n\r\n     or, in shiro.ini:\r\n\r\n     blockCipherService.streamingPaddingSchemeName = NoPadding\r\n\r\n     Note the difference in code vs shiro.ini in this last example: 'NoPadding' is the correct text value, 'NONE' is\r\n     the correct Enum value.\r\n\r\n###########################################################\r\n# 1.1.0\r\n###########################################################\r\n\r\nBackwards Incompatible Changes\r\n--------------------------------\r\n- The org.apache.shiro.web.util.RedirectView class's\r\n  appendQueryProperties(StringBuffer targetUrl, Map model, String encodingScheme)\r\n  method has been changed to accept a StringBuilder argument instead of a\r\n  StringBuffer per SHIRO-191.  RedirectView is considered an internal\r\n  implementation support class and Shiro end-users should not be affected by this.\r\n"
        },
        {
          "name": "bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "cache",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "crypto",
          "type": "tree",
          "content": null
        },
        {
          "name": "event",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "jitpack.yml",
          "type": "blob",
          "size": 0.931640625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\njdk:\n  - openjdk17\nbefore_install:\n  - sdk install java 19.0.2-zulu\n  - sdk use java 19.0.2-zulu\n  - sdk install maven\ninstall:\n  - mvn install -DskipTests -DskipITs\n"
        },
        {
          "name": "lang",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.4150390625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.3.2\n#\n# Optional ENV vars\n# -----------------\n#   JAVA_HOME - location of a JDK home dir, required when download maven via java source\n#   MVNW_REPOURL - repo url base for downloading maven distribution\n#   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n#   MVNW_VERBOSE - true: enable verbose log; debug: trace the mvnw script; others: silence the output\n# ----------------------------------------------------------------------------\n\nset -euf\n[ \"${MVNW_VERBOSE-}\" != debug ] || set -x\n\n# OS specific support.\nnative_path() { printf %s\\\\n \"$1\"; }\ncase \"$(uname)\" in\nCYGWIN* | MINGW*)\n  [ -z \"${JAVA_HOME-}\" ] || JAVA_HOME=\"$(cygpath --unix \"$JAVA_HOME\")\"\n  native_path() { cygpath --path --windows \"$1\"; }\n  ;;\nesac\n\n# set JAVACMD and JAVACCMD\nset_java_home() {\n  # For Cygwin and MinGW, ensure paths are in Unix format before anything is touched\n  if [ -n \"${JAVA_HOME-}\" ]; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n      JAVACCMD=\"$JAVA_HOME/jre/sh/javac\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n      JAVACCMD=\"$JAVA_HOME/bin/javac\"\n\n      if [ ! -x \"$JAVACMD\" ] || [ ! -x \"$JAVACCMD\" ]; then\n        echo \"The JAVA_HOME environment variable is not defined correctly, so mvnw cannot run.\" >&2\n        echo \"JAVA_HOME is set to \\\"$JAVA_HOME\\\", but \\\"\\$JAVA_HOME/bin/java\\\" or \\\"\\$JAVA_HOME/bin/javac\\\" does not exist.\" >&2\n        return 1\n      fi\n    fi\n  else\n    JAVACMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v java\n    )\" || :\n    JAVACCMD=\"$(\n      'set' +e\n      'unset' -f command 2>/dev/null\n      'command' -v javac\n    )\" || :\n\n    if [ ! -x \"${JAVACMD-}\" ] || [ ! -x \"${JAVACCMD-}\" ]; then\n      echo \"The java/javac command does not exist in PATH nor is JAVA_HOME set, so mvnw cannot run.\" >&2\n      return 1\n    fi\n  fi\n}\n\n# hash string like Java String::hashCode\nhash_string() {\n  str=\"${1:-}\" h=0\n  while [ -n \"$str\" ]; do\n    char=\"${str%\"${str#?}\"}\"\n    h=$(((h * 31 + $(LC_CTYPE=C printf %d \"'$char\")) % 4294967296))\n    str=\"${str#?}\"\n  done\n  printf %x\\\\n $h\n}\n\nverbose() { :; }\n[ \"${MVNW_VERBOSE-}\" != true ] || verbose() { printf %s\\\\n \"${1-}\"; }\n\ndie() {\n  printf %s\\\\n \"$1\" >&2\n  exit 1\n}\n\ntrim() {\n  # MWRAPPER-139:\n  #   Trims trailing and leading whitespace, carriage returns, tabs, and linefeeds.\n  #   Needed for removing poorly interpreted newline sequences when running in more\n  #   exotic environments such as mingw bash on Windows.\n  printf \"%s\" \"${1}\" | tr -d '[:space:]'\n}\n\n# parse distributionUrl and optional distributionSha256Sum, requires .mvn/wrapper/maven-wrapper.properties\nwhile IFS=\"=\" read -r key value; do\n  case \"${key-}\" in\n  distributionUrl) distributionUrl=$(trim \"${value-}\") ;;\n  distributionSha256Sum) distributionSha256Sum=$(trim \"${value-}\") ;;\n  esac\ndone <\"${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n[ -n \"${distributionUrl-}\" ] || die \"cannot read distributionUrl property in ${0%/*}/.mvn/wrapper/maven-wrapper.properties\"\n\ncase \"${distributionUrl##*/}\" in\nmaven-mvnd-*bin.*)\n  MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/\n  case \"${PROCESSOR_ARCHITECTURE-}${PROCESSOR_ARCHITEW6432-}:$(uname -a)\" in\n  *AMD64:CYGWIN* | *AMD64:MINGW*) distributionPlatform=windows-amd64 ;;\n  :Darwin*x86_64) distributionPlatform=darwin-amd64 ;;\n  :Darwin*arm64) distributionPlatform=darwin-aarch64 ;;\n  :Linux*x86_64*) distributionPlatform=linux-amd64 ;;\n  *)\n    echo \"Cannot detect native platform for mvnd on $(uname)-$(uname -m), use pure java version\" >&2\n    distributionPlatform=linux-amd64\n    ;;\n  esac\n  distributionUrl=\"${distributionUrl%-bin.*}-$distributionPlatform.zip\"\n  ;;\nmaven-mvnd-*) MVN_CMD=mvnd.sh _MVNW_REPO_PATTERN=/maven/mvnd/ ;;\n*) MVN_CMD=\"mvn${0##*/mvnw}\" _MVNW_REPO_PATTERN=/org/apache/maven/ ;;\nesac\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\n[ -z \"${MVNW_REPOURL-}\" ] || distributionUrl=\"$MVNW_REPOURL$_MVNW_REPO_PATTERN${distributionUrl#*\"$_MVNW_REPO_PATTERN\"}\"\ndistributionUrlName=\"${distributionUrl##*/}\"\ndistributionUrlNameMain=\"${distributionUrlName%.*}\"\ndistributionUrlNameMain=\"${distributionUrlNameMain%-bin}\"\nMAVEN_USER_HOME=\"${MAVEN_USER_HOME:-${HOME}/.m2}\"\nMAVEN_HOME=\"${MAVEN_USER_HOME}/wrapper/dists/${distributionUrlNameMain-}/$(hash_string \"$distributionUrl\")\"\n\nexec_maven() {\n  unset MVNW_VERBOSE MVNW_USERNAME MVNW_PASSWORD MVNW_REPOURL || :\n  exec \"$MAVEN_HOME/bin/$MVN_CMD\" \"$@\" || die \"cannot exec $MAVEN_HOME/bin/$MVN_CMD\"\n}\n\nif [ -d \"$MAVEN_HOME\" ]; then\n  verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  exec_maven \"$@\"\nfi\n\ncase \"${distributionUrl-}\" in\n*?-bin.zip | *?maven-mvnd-?*-?*.zip) ;;\n*) die \"distributionUrl is not valid, must match *-bin.zip or maven-mvnd-*.zip, but found '${distributionUrl-}'\" ;;\nesac\n\n# prepare tmp dir\nif TMP_DOWNLOAD_DIR=\"$(mktemp -d)\" && [ -d \"$TMP_DOWNLOAD_DIR\" ]; then\n  clean() { rm -rf -- \"$TMP_DOWNLOAD_DIR\"; }\n  trap clean HUP INT TERM EXIT\nelse\n  die \"cannot create temp dir\"\nfi\n\nmkdir -p -- \"${MAVEN_HOME%/*}\"\n\n# Download and Install Apache Maven\nverbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nverbose \"Downloading from: $distributionUrl\"\nverbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n# select .zip or .tar.gz\nif ! command -v unzip >/dev/null; then\n  distributionUrl=\"${distributionUrl%.zip}.tar.gz\"\n  distributionUrlName=\"${distributionUrl##*/}\"\nfi\n\n# verbose opt\n__MVNW_QUIET_WGET=--quiet __MVNW_QUIET_CURL=--silent __MVNW_QUIET_UNZIP=-q __MVNW_QUIET_TAR=''\n[ \"${MVNW_VERBOSE-}\" != true ] || __MVNW_QUIET_WGET='' __MVNW_QUIET_CURL='' __MVNW_QUIET_UNZIP='' __MVNW_QUIET_TAR=v\n\n# normalize http auth\ncase \"${MVNW_PASSWORD:+has-password}\" in\n'') MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nhas-password) [ -n \"${MVNW_USERNAME-}\" ] || MVNW_USERNAME='' MVNW_PASSWORD='' ;;\nesac\n\nif [ -z \"${MVNW_USERNAME-}\" ] && command -v wget >/dev/null; then\n  verbose \"Found wget ... using wget\"\n  wget ${__MVNW_QUIET_WGET:+\"$__MVNW_QUIET_WGET\"} \"$distributionUrl\" -O \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" || die \"wget: Failed to fetch $distributionUrl\"\nelif [ -z \"${MVNW_USERNAME-}\" ] && command -v curl >/dev/null; then\n  verbose \"Found curl ... using curl\"\n  curl ${__MVNW_QUIET_CURL:+\"$__MVNW_QUIET_CURL\"} -f -L -o \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" \"$distributionUrl\" || die \"curl: Failed to fetch $distributionUrl\"\nelif set_java_home; then\n  verbose \"Falling back to use Java to download\"\n  javaSource=\"$TMP_DOWNLOAD_DIR/Downloader.java\"\n  targetZip=\"$TMP_DOWNLOAD_DIR/$distributionUrlName\"\n  cat >\"$javaSource\" <<-END\n\tpublic class Downloader extends java.net.Authenticator\n\t{\n\t  protected java.net.PasswordAuthentication getPasswordAuthentication()\n\t  {\n\t    return new java.net.PasswordAuthentication( System.getenv( \"MVNW_USERNAME\" ), System.getenv( \"MVNW_PASSWORD\" ).toCharArray() );\n\t  }\n\t  public static void main( String[] args ) throws Exception\n\t  {\n\t    setDefault( new Downloader() );\n\t    java.nio.file.Files.copy( java.net.URI.create( args[0] ).toURL().openStream(), java.nio.file.Paths.get( args[1] ).toAbsolutePath().normalize() );\n\t  }\n\t}\n\tEND\n  # For Cygwin/MinGW, switch paths to Windows format before running javac and java\n  verbose \" - Compiling Downloader.java ...\"\n  \"$(native_path \"$JAVACCMD\")\" \"$(native_path \"$javaSource\")\" || die \"Failed to compile Downloader.java\"\n  verbose \" - Running Downloader.java ...\"\n  \"$(native_path \"$JAVACMD\")\" -cp \"$(native_path \"$TMP_DOWNLOAD_DIR\")\" Downloader \"$distributionUrl\" \"$(native_path \"$targetZip\")\"\nfi\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\nif [ -n \"${distributionSha256Sum-}\" ]; then\n  distributionSha256Result=false\n  if [ \"$MVN_CMD\" = mvnd.sh ]; then\n    echo \"Checksum validation is not supported for maven-mvnd.\" >&2\n    echo \"Please disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  elif command -v sha256sum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | sha256sum -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  elif command -v shasum >/dev/null; then\n    if echo \"$distributionSha256Sum  $TMP_DOWNLOAD_DIR/$distributionUrlName\" | shasum -a 256 -c >/dev/null 2>&1; then\n      distributionSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n    echo \"Please install either command, or disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  fi\n  if [ $distributionSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified distributionSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\n# unzip and move\nif command -v unzip >/dev/null; then\n  unzip ${__MVNW_QUIET_UNZIP:+\"$__MVNW_QUIET_UNZIP\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -d \"$TMP_DOWNLOAD_DIR\" || die \"failed to unzip\"\nelse\n  tar xzf${__MVNW_QUIET_TAR:+\"$__MVNW_QUIET_TAR\"} \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -C \"$TMP_DOWNLOAD_DIR\" || die \"failed to untar\"\nfi\nprintf %s\\\\n \"$distributionUrl\" >\"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain/mvnw.url\"\nmv -- \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" \"$MAVEN_HOME\" || [ -d \"$MAVEN_HOME\" ] || die \"fail to move MAVEN_HOME\"\n\nclean || :\nexec_maven \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.75,
          "content": "<# : batch portion\n@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Apache Maven Wrapper startup batch script, version 3.3.2\n@REM\n@REM Optional ENV vars\n@REM   MVNW_REPOURL - repo url base for downloading maven distribution\n@REM   MVNW_USERNAME/MVNW_PASSWORD - user and password for downloading maven\n@REM   MVNW_VERBOSE - true: enable verbose log; others: silence the output\n@REM ----------------------------------------------------------------------------\n\n@IF \"%__MVNW_ARG0_NAME__%\"==\"\" (SET __MVNW_ARG0_NAME__=%~nx0)\n@SET __MVNW_CMD__=\n@SET __MVNW_ERROR__=\n@SET __MVNW_PSMODULEP_SAVE=%PSModulePath%\n@SET PSModulePath=\n@FOR /F \"usebackq tokens=1* delims==\" %%A IN (`powershell -noprofile \"& {$scriptDir='%~dp0'; $script='%__MVNW_ARG0_NAME__%'; icm -ScriptBlock ([Scriptblock]::Create((Get-Content -Raw '%~f0'))) -NoNewScope}\"`) DO @(\n  IF \"%%A\"==\"MVN_CMD\" (set __MVNW_CMD__=%%B) ELSE IF \"%%B\"==\"\" (echo %%A) ELSE (echo %%A=%%B)\n)\n@SET PSModulePath=%__MVNW_PSMODULEP_SAVE%\n@SET __MVNW_PSMODULEP_SAVE=\n@SET __MVNW_ARG0_NAME__=\n@SET MVNW_USERNAME=\n@SET MVNW_PASSWORD=\n@IF NOT \"%__MVNW_CMD__%\"==\"\" (%__MVNW_CMD__% %*)\n@echo Cannot start maven from wrapper >&2 && exit /b 1\n@GOTO :EOF\n: end batch / begin powershell #>\n\n$ErrorActionPreference = \"Stop\"\nif ($env:MVNW_VERBOSE -eq \"true\") {\n  $VerbosePreference = \"Continue\"\n}\n\n# calculate distributionUrl, requires .mvn/wrapper/maven-wrapper.properties\n$distributionUrl = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionUrl\nif (!$distributionUrl) {\n  Write-Error \"cannot read distributionUrl property in $scriptDir/.mvn/wrapper/maven-wrapper.properties\"\n}\n\nswitch -wildcard -casesensitive ( $($distributionUrl -replace '^.*/','') ) {\n  \"maven-mvnd-*\" {\n    $USE_MVND = $true\n    $distributionUrl = $distributionUrl -replace '-bin\\.[^.]*$',\"-windows-amd64.zip\"\n    $MVN_CMD = \"mvnd.cmd\"\n    break\n  }\n  default {\n    $USE_MVND = $false\n    $MVN_CMD = $script -replace '^mvnw','mvn'\n    break\n  }\n}\n\n# apply MVNW_REPOURL and calculate MAVEN_HOME\n# maven home pattern: ~/.m2/wrapper/dists/{apache-maven-<version>,maven-mvnd-<version>-<platform>}/<hash>\nif ($env:MVNW_REPOURL) {\n  $MVNW_REPO_PATTERN = if ($USE_MVND) { \"/org/apache/maven/\" } else { \"/maven/mvnd/\" }\n  $distributionUrl = \"$env:MVNW_REPOURL$MVNW_REPO_PATTERN$($distributionUrl -replace '^.*'+$MVNW_REPO_PATTERN,'')\"\n}\n$distributionUrlName = $distributionUrl -replace '^.*/',''\n$distributionUrlNameMain = $distributionUrlName -replace '\\.[^.]*$','' -replace '-bin$',''\n$MAVEN_HOME_PARENT = \"$HOME/.m2/wrapper/dists/$distributionUrlNameMain\"\nif ($env:MAVEN_USER_HOME) {\n  $MAVEN_HOME_PARENT = \"$env:MAVEN_USER_HOME/wrapper/dists/$distributionUrlNameMain\"\n}\n$MAVEN_HOME_NAME = ([System.Security.Cryptography.MD5]::Create().ComputeHash([byte[]][char[]]$distributionUrl) | ForEach-Object {$_.ToString(\"x2\")}) -join ''\n$MAVEN_HOME = \"$MAVEN_HOME_PARENT/$MAVEN_HOME_NAME\"\n\nif (Test-Path -Path \"$MAVEN_HOME\" -PathType Container) {\n  Write-Verbose \"found existing MAVEN_HOME at $MAVEN_HOME\"\n  Write-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\n  exit $?\n}\n\nif (! $distributionUrlNameMain -or ($distributionUrlName -eq $distributionUrlNameMain)) {\n  Write-Error \"distributionUrl is not valid, must end with *-bin.zip, but found $distributionUrl\"\n}\n\n# prepare tmp dir\n$TMP_DOWNLOAD_DIR_HOLDER = New-TemporaryFile\n$TMP_DOWNLOAD_DIR = New-Item -Itemtype Directory -Path \"$TMP_DOWNLOAD_DIR_HOLDER.dir\"\n$TMP_DOWNLOAD_DIR_HOLDER.Delete() | Out-Null\ntrap {\n  if ($TMP_DOWNLOAD_DIR.Exists) {\n    try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\n    catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\n  }\n}\n\nNew-Item -Itemtype Directory -Path \"$MAVEN_HOME_PARENT\" -Force | Out-Null\n\n# Download and Install Apache Maven\nWrite-Verbose \"Couldn't find MAVEN_HOME, downloading and installing it ...\"\nWrite-Verbose \"Downloading from: $distributionUrl\"\nWrite-Verbose \"Downloading to: $TMP_DOWNLOAD_DIR/$distributionUrlName\"\n\n$webclient = New-Object System.Net.WebClient\nif ($env:MVNW_USERNAME -and $env:MVNW_PASSWORD) {\n  $webclient.Credentials = New-Object System.Net.NetworkCredential($env:MVNW_USERNAME, $env:MVNW_PASSWORD)\n}\n[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n$webclient.DownloadFile($distributionUrl, \"$TMP_DOWNLOAD_DIR/$distributionUrlName\") | Out-Null\n\n# If specified, validate the SHA-256 sum of the Maven distribution zip file\n$distributionSha256Sum = (Get-Content -Raw \"$scriptDir/.mvn/wrapper/maven-wrapper.properties\" | ConvertFrom-StringData).distributionSha256Sum\nif ($distributionSha256Sum) {\n  if ($USE_MVND) {\n    Write-Error \"Checksum validation is not supported for maven-mvnd. `nPlease disable validation by removing 'distributionSha256Sum' from your maven-wrapper.properties.\"\n  }\n  Import-Module $PSHOME\\Modules\\Microsoft.PowerShell.Utility -Function Get-FileHash\n  if ((Get-FileHash \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -Algorithm SHA256).Hash.ToLower() -ne $distributionSha256Sum) {\n    Write-Error \"Error: Failed to validate Maven distribution SHA-256, your Maven distribution might be compromised. If you updated your Maven version, you need to update the specified distributionSha256Sum property.\"\n  }\n}\n\n# unzip and move\nExpand-Archive \"$TMP_DOWNLOAD_DIR/$distributionUrlName\" -DestinationPath \"$TMP_DOWNLOAD_DIR\" | Out-Null\nRename-Item -Path \"$TMP_DOWNLOAD_DIR/$distributionUrlNameMain\" -NewName $MAVEN_HOME_NAME | Out-Null\ntry {\n  Move-Item -Path \"$TMP_DOWNLOAD_DIR/$MAVEN_HOME_NAME\" -Destination $MAVEN_HOME_PARENT | Out-Null\n} catch {\n  if (! (Test-Path -Path \"$MAVEN_HOME\" -PathType Container)) {\n    Write-Error \"fail to move MAVEN_HOME\"\n  }\n} finally {\n  try { Remove-Item $TMP_DOWNLOAD_DIR -Recurse -Force | Out-Null }\n  catch { Write-Warning \"Cannot remove $TMP_DOWNLOAD_DIR\" }\n}\n\nWrite-Output \"MVN_CMD=$MAVEN_HOME/bin/$MVN_CMD\"\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 82.056640625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one\n  ~ or more contributor license agreements.  See the NOTICE file\n  ~ distributed with this work for additional information\n  ~ regarding copyright ownership.  The ASF licenses this file\n  ~ to you under the Apache License, Version 2.0 (the\n  ~ \"License\"); you may not use this file except in compliance\n  ~ with the License.  You may obtain a copy of the License at\n  ~\n  ~     http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing,\n  ~ software distributed under the License is distributed on an\n  ~ \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n  ~ KIND, either express or implied.  See the License for the\n  ~ specific language governing permissions and limitations\n  ~ under the License.\n  -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <!-- pick up Apache distributionManagement for releasing (snapshots, releases, etc.): -->\n    <parent>\n        <groupId>org.apache</groupId>\n        <artifactId>apache</artifactId>\n        <version>33</version>\n    </parent>\n\n    <groupId>org.apache.shiro</groupId>\n    <artifactId>shiro-root</artifactId>\n    <packaging>pom</packaging>\n    <version>2.0.0-SNAPSHOT</version>\n\n    <name>Apache Shiro</name>\n    <url>https://shiro.apache.org/</url>\n    <description>\n        Apache Shiro is a powerful and flexible open-source security framework that cleanly handles\n        authentication, authorization, enterprise session management, single sign-on and cryptography services.\n    </description>\n    <inceptionYear>2004</inceptionYear>\n\n    <scm>\n        <connection>scm:git:https://gitbox.apache.org/repos/asf/shiro.git</connection>\n        <developerConnection>scm:git:https://gitbox.apache.org/repos/asf/shiro.git</developerConnection>\n        <url>https://github.com/apache/shiro/tree/${project.scm.tag}</url>\n        <tag>main</tag>\n    </scm>\n    <issueManagement>\n        <system>Jira</system>\n        <url>https://issues.apache.org/jira/browse/SHIRO</url>\n    </issueManagement>\n    <ciManagement>\n        <system>Jenkins</system>\n        <url>https://builds.apache.org/job/Shiro/</url>\n    </ciManagement>\n\n    <distributionManagement>\n        <site>\n            <id>shiro.website</id>\n            <name>Apache Shiro Site</name>\n            <url>scp://people.apache.org/www/shiro.apache.org/static/latest</url>\n        </site>\n        <downloadUrl>https://shiro.apache.org/download.html</downloadUrl>\n    </distributionManagement>\n\n    <properties>\n        <shiro.previousVersion>2.0.0</shiro.previousVersion>\n        <!-- Replaced by the build number plugin at build time: -->\n        <buildNumber>${user.name}-${maven.build.timestamp}</buildNumber>\n        <project.build.outputTimestamp>2022-03-22T23:08:15Z</project.build.outputTimestamp>\n        <jacoco.skip>true</jacoco.skip>\n        <!--suppress CheckTagEmptyBody -->\n        <surefire.argLine></surefire.argLine>\n        <!--suppress CheckTagEmptyBody -->\n        <failsafe.argLine></failsafe.argLine>\n        <junit5.parallel.tests.enabled>true</junit5.parallel.tests.enabled>\n        <junit5.parallel.tests.mode>concurrent</junit5.parallel.tests.mode>\n        <nexus.deploy.skip>false</nexus.deploy.skip>\n        <nexus-staging-profile>nexus-staging</nexus-staging-profile>\n        <jacocoAgent/>\n        <!-- non-dependency-based properties: -->\n        <shiro.osgi.importRange>[2, 3)</shiro.osgi.importRange>\n        <jcache.osgi.importRange>[1.1,2)</jcache.osgi.importRange>\n\n        <!-- Compile 3rd party dependencies: -->\n        <!-- Don't change this version without also changing the shiro-aspect and shiro-features\n             modules' OSGi metadata: -->\n        <aspectj.version>1.9.20.1</aspectj.version>\n        <commons.beanutils.version>1.10.0</commons.beanutils.version>\n        <commons.cli.version>1.9.0</commons.cli.version>\n        <commons.collection.version>3.2.2</commons.collection.version>\n        <commons.configuration2.version>2.11.0</commons.configuration2.version>\n        <commons.lang3.version>3.17.0</commons.lang3.version>\n        <commons.logging.version>1.3.4</commons.logging.version>\n        <commons.text.version>1.8</commons.text.version>\n        <!-- Don't change this version without also changing the shiro-ehcache and shiro-features\n             modules' OSGi metadata: -->\n        <ehcache.version>2.6.11</ehcache.version>\n        <!-- Don't change this version without also changing the shiro-hazelcast and shiro-features OSGi metadata: -->\n        <hazelcast.version>5.3.8</hazelcast.version>\n        <hsqldb.version>2.7.4</hsqldb.version>\n        <javax.annotation.api.version>1.3.2</javax.annotation.api.version>\n        <jcache.api.version>1.1.1</jcache.api.version>\n        <jdk.version>11</jdk.version>\n        <jetty.version>9.4.57.v20241219</jetty.version>\n        <owasp.java.encoder.version>1.3.1</owasp.java.encoder.version>\n        <!-- Don't change this version without also changing the shiro-quartz and shiro-features\n             modules' OSGi metadata: -->\n        <quartz.version>2.5.0</quartz.version>\n        <quartz.docs.version>2.3.0</quartz.docs.version>\n        <slf4j.version>2.0.16</slf4j.version>\n        <log4j.version>2.24.3</log4j.version>\n        <spring.version>5.3.39</spring.version>\n        <spring-boot.version>2.7.18</spring-boot.version>\n        <guice.version>4.2.3</guice.version>\n        <jaxrs.api.version>2.1.6</jaxrs.api.version>\n        <htmlunit.version>4.7.0</htmlunit.version>\n        <bouncycastle.version>1.79</bouncycastle.version>\n\n        <!-- Test 3rd-party dependencies: -->\n        <easymock.version>5.5.0</easymock.version>\n        <mockito.version>5.15.2</mockito.version>\n        <bytebuddy.version>1.15.11</bytebuddy.version>\n        <gmaven.version>4.1.1</gmaven.version>\n        <groovy.version>4.0.24</groovy.version>\n        <junit.version>5.11.4</junit.version>\n        <junit.server.jetty.version>3.3.1</junit.server.jetty.version>\n        <hibernate.version>5.6.15.Final</hibernate.version>\n        <taglibs.standard.version>1.2.5</taglibs.standard.version>\n        <jakarta.annotations.version>1.3.5</jakarta.annotations.version>\n        <lombok.version>1.18.36</lombok.version>\n\n        <maven.compiler.release>${jdk.version}</maven.compiler.release>\n\n        <!-- checkstyle -->\n        <checkstyle.configLocation>${root.dir}/src/checkstyle.xml</checkstyle.configLocation>\n        <checkstyle.supressionsLocation>${root.dir}/src/suppressions.xml</checkstyle.supressionsLocation>\n        <fluido-skin.version>2.0.1</fluido-skin.version>\n    </properties>\n\n    <modules>\n        <module>lang</module>\n        <module>crypto</module>\n        <module>event</module>\n        <module>cache</module>\n        <module>config</module>\n        <module>core</module>\n        <module>web</module>\n        <module>support</module>\n        <module>tools</module>\n        <module>bom</module>\n        <module>integration-tests</module>\n        <module>samples</module>\n        <module>test-coverage</module>\n    </modules>\n\n    <mailingLists>\n        <mailingList>\n            <name>Apache Shiro Users Mailing List</name>\n            <subscribe>user-subscribe@shiro.apache.org</subscribe>\n            <unsubscribe>user-unsubscribe@shiro.apache.org</unsubscribe>\n            <post>user@shiro.apache.org</post>\n            <!--archive/-->\n            <!--otherArchives-->\n        </mailingList>\n        <mailingList>\n            <name>Apache Shiro Developers Mailing List</name>\n            <subscribe>dev-subscribe@shiro.apache.org</subscribe>\n            <unsubscribe>dev-unsubscribe@shiro.apache.org</unsubscribe>\n            <post>dev@shiro.apache.org</post>\n            <!--archive/-->\n            <!--otherArchives-->\n        </mailingList>\n    </mailingLists>\n\n\n    <developers>\n        <developer>\n            <id>aditzel</id>\n            <name>Allan Ditzel</name>\n            <email>aditzel@apache.org</email>\n            <url>http://www.allanditzel.com</url>\n            <organization>Apache Software Foundation</organization>\n            <timezone>-5</timezone>\n        </developer>\n        <developer>\n            <id>jhaile</id>\n            <name>Jeremy Haile</name>\n            <email>jhaile@apache.org</email>\n            <url>http://www.jeremyhaile.com</url>\n            <organization>Mobilization Labs</organization>\n            <organizationUrl>http://www.mobilizationlabs.com</organizationUrl>\n            <timezone>-5</timezone>\n        </developer>\n        <developer>\n            <id>lhazlewood</id>\n            <name>Les Hazlewood</name>\n            <email>lhazlewood@apache.org</email>\n            <url>http://www.leshazlewood.com</url>\n            <organization>Stormpath</organization>\n            <organizationUrl>https://www.stormpath.com</organizationUrl>\n            <timezone>-8</timezone>\n        </developer>\n        <developer>\n            <id>kaosko</id>\n            <name>Kalle Korhonen</name>\n            <email>kaosko@apache.org</email>\n            <url>https://www.tynamo.org</url>\n            <organization>Apache Software Foundation</organization>\n            <timezone>-8</timezone>\n        </developer>\n        <developer>\n            <id>pledbrook</id>\n            <name>Peter Ledbrook</name>\n            <email>p.ledbrook@cacoethes.co.uk</email>\n            <url>https://www.cacoethes.co.uk/</url>\n            <organization>SpringSource</organization>\n            <organizationUrl>https://spring.io/</organizationUrl>\n            <timezone>0</timezone>\n        </developer>\n        <developer>\n            <id>tveil</id>\n            <name>Tim Veil</name>\n            <email>tveil@apache.org</email>\n        </developer>\n        <developer>\n            <id>bdemers</id>\n            <name>Brian Demers</name>\n            <email>bdemers@apache.org</email>\n            <url>https://stormpath.com/blog/author/bdemers</url>\n            <organization>Stormpath</organization>\n            <organizationUrl>https://stormpath.com/</organizationUrl>\n            <timezone>-5</timezone>\n            <roles>\n                <role>PMC Chair</role>\n            </roles>\n        </developer>\n        <developer>\n            <id>jbunting</id>\n            <name>Jared Bunting</name>\n            <email>jbunting@apache.org</email>\n            <organization>Apache Software Foundation</organization>\n            <timezone>-6</timezone>\n        </developer>\n        <developer>\n            <id>fpapon</id>\n            <name>Francois Papon</name>\n            <email>fpapon@apache.org</email>\n            <organization>Yupiik</organization>\n            <organizationUrl>https://www.yupiik.com/</organizationUrl>\n            <timezone>+4</timezone>\n        </developer>\n        <developer>\n            <id>bmarwell</id>\n            <name>Benjamin Marwell</name>\n            <email>bmarwell@apache.org</email>\n            <timezone>Europe/Berlin</timezone>\n        </developer>\n        <developer>\n            <id>lprimak</id>\n            <name>Lenny Primak</name>\n            <email>lprimak@apache.org</email>\n            <timezone>US/Central</timezone>\n            <url>https://hope.nyc.ny.us</url>\n            <organization>Flow Logix</organization>\n            <organizationUrl>https://www.flowlogix.com/</organizationUrl>\n        </developer>\n    </developers>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <configuration>\n                        <argLine>@{jacocoAgent} @{surefire.argLine}</argLine>\n                        <shutdown>kill</shutdown>\n                        <enableProcessChecker>native</enableProcessChecker>\n                        <trimStackTrace>false</trimStackTrace>\n                        <redirectTestOutputToFile>true</redirectTestOutputToFile>\n                        <properties>\n                            <configurationParameters>\n                                junit.jupiter.execution.parallel.enabled = ${junit5.parallel.tests.enabled}\n                                junit.jupiter.execution.parallel.mode.default = ${junit5.parallel.tests.mode}\n                            </configurationParameters>\n                        </properties>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-failsafe-plugin</artifactId>\n                    <configuration>\n                        <argLine>@{jacocoAgent} @{failsafe.argLine}</argLine>\n                        <trimStackTrace>false</trimStackTrace>\n                        <redirectTestOutputToFile>true</redirectTestOutputToFile>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-report-plugin</artifactId>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <configuration>\n                        <excludePackageNames>org.apache.shiro.samples.*</excludePackageNames>\n                        <linksource>true</linksource>\n                        <links>\n                            <link>https://docs.oracle.com/javase/${jdk.version}/docs/api/</link>\n                            <link>https://www.slf4j.org/api/</link>\n                            <link>https://docs.spring.io/spring/docs/${spring.version}/javadoc-api/</link>\n                            <link>https://docs.spring.io/spring-boot/docs/${spring-boot.version}/api/</link>\n                            <link>https://junit.org/junit5/docs/${junit.version}/api/</link>\n                            <link>https://www.quartz-scheduler.org/api/${quartz.docs.version}/</link>\n                        </links>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-war-plugin</artifactId>\n                    <version>3.4.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-help-plugin</artifactId>\n                    <version>3.5.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.felix</groupId>\n                    <artifactId>maven-bundle-plugin</artifactId>\n                    <version>5.1.9</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-site-plugin</artifactId>\n                    <version>4.0.0-M16</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-scm-publish-plugin</artifactId>\n                    <version>3.3.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.rat</groupId>\n                    <artifactId>apache-rat-plugin</artifactId>\n                    <configuration>\n                        <!-- note that this configuration needs to be maintain both in pluginManagement and reporting sections -->\n                        <excludes>\n                            <exclude>**/.externalToolBuilders/*</exclude>\n                            <exclude>**/infinitest.filters</exclude>\n                            <!-- Apparently some test in samples/spring-client generates velocity log - would better to reconfigure to output to target/ -->\n                            <exclude>velocity.log</exclude>\n                            <exclude>CONTRIBUTING.md</exclude>\n                            <exclude>**/README.md</exclude>\n                            <exclude>**/*.json</exclude>\n                            <exclude>**/spring.factories</exclude>\n                            <exclude>**/org.springframework.boot.autoconfigure.AutoConfiguration.imports</exclude>\n                            <exclude>**/spring.provides</exclude>\n                            <exclude>**/*.iml</exclude>\n                            <exclude>**/target/**</exclude>\n                            <exclude>**/nb-configuration.xml</exclude>\n                            <exclude>**/faces-config.NavData</exclude>\n                            <exclude>**/org.mockito.plugins.MockMaker</exclude>\n                            <exclude>.mvn/*</exclude>\n                            <exclude>.jenkins_maven_args</exclude>\n                        </excludes>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>versions-maven-plugin</artifactId>\n                    <version>2.18.0</version>\n                </plugin>\n                <!-- Allow writing tests in Groovy: -->\n                <plugin>\n                    <groupId>org.codehaus.gmavenplus</groupId>\n                    <artifactId>gmavenplus-plugin</artifactId>\n                    <version>${gmaven.version}</version>\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.apache.groovy</groupId>\n                            <artifactId>groovy-all</artifactId>\n                            <version>${groovy.version}</version>\n                            <scope>runtime</scope>\n                            <type>pom</type>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>build-helper-maven-plugin</artifactId>\n                    <version>3.6.0</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.jacoco</groupId>\n                    <artifactId>jacoco-maven-plugin</artifactId>\n                    <version>0.8.12</version>\n                </plugin>\n                <plugin>\n                    <groupId>com.mycila</groupId>\n                    <artifactId>license-maven-plugin</artifactId>\n                    <version>4.6</version>\n                    <configuration>\n                        <aggregate>true</aggregate>\n                        <header>${root.dir}/src/license/header.txt</header>\n                        <headerDefinitions>\n                            <headerDefinition>${root.dir}/src/license/header_format.xml</headerDefinition>\n                        </headerDefinitions>\n                        <excludes>\n                            <exclude>**/*.txt</exclude>\n                        </excludes>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.eclipse.jetty</groupId>\n                    <artifactId>jetty-maven-plugin</artifactId>\n                    <version>${jetty.version}</version>\n                    <configuration>\n                        <contextPath>/</contextPath>\n                        <httpConnector>\n                            <port>9080</port>\n                            <idleTimeout>60000</idleTimeout>\n                        </httpConnector>\n                        <requestLog implementation=\"org.eclipse.jetty.server.NCSARequestLog\">\n                            <filename>./target/yyyy_mm_dd.request.log</filename>\n                            <retainDays>90</retainDays>\n                            <append>true</append>\n                            <extended>false</extended>\n                            <logTimeZone>GMT</logTimeZone>\n                        </requestLog>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.owasp</groupId>\n                    <artifactId>dependency-check-maven</artifactId>\n                    <version>11.1.1</version>\n                </plugin>\n                <plugin>\n                    <groupId>com.github.siom79.japicmp</groupId>\n                    <artifactId>japicmp-maven-plugin</artifactId>\n                    <version>0.23.1</version>\n                    <configuration>\n                        <oldVersion>\n                            <dependency>\n                                <groupId>${project.groupId}</groupId>\n                                <artifactId>${project.artifactId}</artifactId>\n                                <version>${shiro.previousVersion}</version>\n                                <type>jar</type>\n                            </dependency>\n                        </oldVersion>\n                        <parameter>\n                            <onlyModified>true</onlyModified>\n                            <breakBuildOnSourceIncompatibleModifications>true</breakBuildOnSourceIncompatibleModifications>\n                            <breakBuildOnBinaryIncompatibleModifications>true</breakBuildOnBinaryIncompatibleModifications>\n                            <breakBuildBasedOnSemanticVersioning>false</breakBuildBasedOnSemanticVersioning>\n<!--                            <postAnalysisScript>${root.dir}/src/japicmp/postAnalysisScript.groovy</postAnalysisScript>-->\n                        </parameter>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>aspectj-maven-plugin</artifactId>\n                    <version>1.15.0</version>\n                    <configuration>\n                        <source>${maven.compiler.release}</source>\n                        <target>${maven.compiler.release}</target>\n                        <complianceLevel>${maven.compiler.release}</complianceLevel>\n                        <showWeaveInfo>true</showWeaveInfo>\n                        <!-- Fix for https://github.com/apache/shiro/issues/1100 -->\n                        <forceAjcCompile>true</forceAjcCompile>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <id>aspectj-compile</id>\n                            <goals>\n                                <goal>compile</goal>\n                                <goal>test-compile</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.aspectj</groupId>\n                            <artifactId>aspectjtools</artifactId>\n                            <version>${aspectj.version}</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-shade-plugin</artifactId>\n                    <executions>\n                        <execution>\n                            <id>jakarta</id>\n                            <phase>package</phase>\n                            <goals>\n                                <goal>shade</goal>\n                            </goals>\n                            <configuration>\n                                <minimizeJar>false</minimizeJar>\n                                <shadedArtifactAttached>true</shadedArtifactAttached>\n                                <shadedClassifierName>jakarta</shadedClassifierName>\n                                <createDependencyReducedPom>false</createDependencyReducedPom>\n                                <transformers>\n                                    <transformer\n                                            implementation=\"org.apache.maven.plugins.shade.resource.ServicesResourceTransformer\"/>\n                                    <transformer\n                                            implementation=\"org.apache.maven.plugins.shade.resource.ManifestResourceTransformer\"/>\n                                </transformers>\n                                <artifactSet>\n                                    <includes>\n                                        <include>${project.groupId}:${project.artifactId}</include>\n                                    </includes>\n                                </artifactSet>\n                                <relocations>\n                                    <relocation>\n                                        <pattern>javax.annotation</pattern>\n                                        <shadedPattern>jakarta.annotation</shadedPattern>\n                                        <excludes>\n                                            <exclude>javax.annotation.processing.**</exclude>\n                                        </excludes>\n                                    </relocation>\n                                    <relocation>\n                                        <pattern>javax.enterprise</pattern>\n                                        <shadedPattern>jakarta.enterprise</shadedPattern>\n                                        <excludes>\n                                            <exclude>javax.enterprise.deploy.**</exclude>\n                                        </excludes>\n                                    </relocation>\n                                    <relocation>\n                                        <pattern>javax.inject</pattern>\n                                        <shadedPattern>jakarta.inject</shadedPattern>\n                                    </relocation>\n                                    <relocation>\n                                        <pattern>javax.json</pattern>\n                                        <shadedPattern>jakarta.json</shadedPattern>\n                                    </relocation>\n                                    <relocation>\n                                        <pattern>javax.servlet.http.HttpSessionContext</pattern>\n                                        <shadedPattern>org.apache.shiro.web.servlet.HttpSessionContext</shadedPattern>\n                                    </relocation>\n                                    <relocation>\n                                        <pattern>javax.servlet</pattern>\n                                        <shadedPattern>jakarta.servlet</shadedPattern>\n                                    </relocation>\n                                    <relocation>\n                                        <pattern>javax.websocket</pattern>\n                                        <shadedPattern>jakarta.websocket</shadedPattern>\n                                    </relocation>\n                                    <relocation>\n                                        <pattern>javax.ws.rs</pattern>\n                                        <shadedPattern>jakarta.ws.rs</shadedPattern>\n                                    </relocation>\n                                </relocations>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-checkstyle-plugin</artifactId>\n                    <version>3.6.0</version>\n                    <configuration>\n                        <configLocation>${checkstyle.configLocation}</configLocation>\n                        <suppressionsLocation>${checkstyle.supressionsLocation}</suppressionsLocation>\n                        <linkXRef>true</linkXRef>\n                        <consoleOutput>true</consoleOutput>\n                        <failsOnError>true</failsOnError>\n                        <failOnViolation>true</failOnViolation>\n                        <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                        <enableRulesSummary>true</enableRulesSummary>\n                        <resourceExcludes>test-keystore.jks,test-keystore.pem</resourceExcludes>\n                        <propertyExpansion>root.dir=${root.dir}</propertyExpansion>\n                    </configuration>\n                    <executions>\n                        <execution>\n                            <phase>validate</phase>\n                            <goals>\n                                <goal>checkstyle</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <dependencies>\n                        <dependency>\n                            <groupId>com.puppycrawl.tools</groupId>\n                            <artifactId>checkstyle</artifactId>\n                            <version>10.21.1</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.rat</groupId>\n                <artifactId>apache-rat-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>rat-check</id>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.commonjava.maven.plugins</groupId>\n                <artifactId>directory-maven-plugin</artifactId>\n                <version>1.0</version>\n                <executions>\n                    <execution>\n                        <id>directories</id>\n                        <goals>\n                            <goal>directory-of</goal>\n                        </goals>\n                        <phase>validate</phase>\n                        <configuration>\n                            <property>root.dir</property>\n                            <project>\n                                <groupId>org.apache.shiro</groupId>\n                                <artifactId>shiro-root</artifactId>\n                            </project>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <configuration>\n                    <showWarnings>true</showWarnings>\n                    <compilerArgs>\n                        <arg>-Xlint:deprecation</arg>\n                        <arg>-Xlint:unchecked</arg>\n                    </compilerArgs>\n                    <annotationProcessorPaths>\n                        <annotationProcessorPath>\n                            <groupId>org.aspectj</groupId>\n                            <artifactId>aspectjweaver</artifactId>\n                            <version>${aspectj.version}</version>\n                        </annotationProcessorPath>\n                    </annotationProcessorPaths>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-failsafe-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>integration-test</goal>\n                            <goal>verify</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <configuration>\n                    <includes>\n                        <include>org/apache/shiro/**</include>\n                    </includes>\n                    <excludes>\n                        <exclude>**/*$$FastClassBy*$$*</exclude>\n                        <exclude>**/*$$EnhancerBy*CGLIB$$*</exclude>\n                        <exclude>**/*$MockitoMock$*</exclude>\n                        <exclude>**/*$HibernateProxy$*</exclude>\n                        <exclude>org/apache/shiro/samples/guice/SampleShiroGuiceBootstrap</exclude>\n                        <exclude>org/apache/shiro/samples/guice/SampleShiroServletModule</exclude>\n                        <exclude>org/apache/shiro/**/*Test</exclude>\n                        <exclude>org/apache/shiro/**/*Test$*</exclude>\n                        <exclude>org/apache/shiro/**/*IT</exclude>\n                        <exclude>org/apache/shiro/**/*IT$*</exclude>\n                        <exclude>org/apache/shiro/testing/jakarta/ee/PropertyPrincipal</exclude>\n                        <exclude>org/apache/shiro/testing/cdi/ComponentInjectionBean</exclude>\n                        <exclude>org/apache/shiro/**/__EJB31_Generated*</exclude>\n                        <!-- cause too many coverage misses -->\n                        <exclude>org/apache/shiro/**/Deployments</exclude>\n                    </excludes>\n                    <propertyName>jacocoAgent</propertyName>\n                    <classDumpDir>${root.dir}/target/classes</classDumpDir>\n                    <fileSets>\n                        <fileSet>\n                            <directory>${project.basedir}</directory>\n                            <includes>\n                                <include>**/*.exec</include>\n                            </includes>\n                        </fileSet>\n                    </fileSets>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>prepare-agent</id>\n                        <goals>\n                            <goal>prepare-agent</goal>\n                        </goals>\n                    </execution>\n                    <execution>\n                        <id>prepare-agent-integration</id>\n                        <phase>pre-integration-test</phase>\n                        <goals>\n                            <goal>prepare-agent-integration</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- Allow Groovy tests to run: -->\n            <plugin>\n                <groupId>org.codehaus.gmavenplus</groupId>\n                <artifactId>gmavenplus-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>addTestSources</goal>\n                            <goal>generateTestStubs</goal>\n                            <goal>compileTests</goal>\n                            <goal>removeTestStubs</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <!-- Add Git sha1 To A JAR Manifest\n                     - https://maven.apache.org/plugin-developers/cookbook/add-svn-revision-to-manifest.html\n                -->\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>buildnumber-maven-plugin</artifactId>\n                <version>3.2.1</version>\n                <executions>\n                    <execution>\n                        <phase>validate</phase>\n                        <goals>\n                            <goal>create</goal>\n                        </goals>\n                    </execution>\n                </executions>\n                <configuration>\n                    <doCheck>false</doCheck>\n                    <doUpdate>false</doUpdate>\n                    <revisionOnScmFailure>${project.version}</revisionOnScmFailure>\n                    <getRevisionOnlyOnce>true</getRevisionOnlyOnce>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <configuration>\n                    <archive>\n                        <manifest>\n                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                        </manifest>\n                        <manifestEntries>\n                            <Automatic-Module-Name>org.apache.shiro.${module.name}</Automatic-Module-Name>\n                        </manifestEntries>\n                    </archive>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-doap-plugin</artifactId>\n                <version>1.2</version>\n                <inherited>false</inherited>\n                <configuration>\n                    <artifact>\n\n                    </artifact>\n                    <doapOptions>\n                        <!-- See http://projects.apache.org/languages.html -->\n                        <programmingLanguage>Java</programmingLanguage>\n                        <!-- http://projects.apache.org/categories.html -->\n                        <category>library, web-framework</category>\n                        <!--<category>library, web-framework, security</category>-->\n                        <bugDatabase>${project.issueManagement.url}</bugDatabase>\n                        <created>${project.inceptionYear}-01-01</created>\n                        <description>${project.description}</description>\n                        <downloadPage>${project.distributionManagement.downloadUrl}</downloadPage>\n                        <homepage>${project.url}</homepage>\n                        <mailingList>${project.url}/mail-lists.html</mailingList>\n                        <name>${project.name}</name>\n                        <shortdesc>A simple to use Java Security Framework.</shortdesc>\n                        <vendor>${project.organization.name}</vendor>\n                    </doapOptions>\n\n                    <asfExtOptions>\n                        <charter>The mission of the Apache Shiro project is to create and maintain an easy to use authentication and authorization framework.</charter>\n\n                        <!-- Default values -->\n                        <pmc>${project.url}</pmc>\n                        <name>${project.name}</name>\n                    </asfExtOptions>\n\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>site</id>\n                        <phase>pre-site</phase>\n                        <goals>\n                            <goal>generate</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-release-plugin</artifactId>\n                <configuration>\n                    <!-- do not update upstream, with a pending release. -->\n                    <pushChanges>false</pushChanges>\n                    <localCheckout>true</localCheckout>\n                    <autoVersionSubmodules>true</autoVersionSubmodules>\n                    <preparationGoals>validate</preparationGoals>\n                    <preparationProfiles>skip-checkstyle</preparationProfiles>\n                    <goals>deploy</goals>\n                    <releaseProfiles>docs,apache-release,${nexus-staging-profile}</releaseProfiles>\n                    <mavenExecutorId>forked-path</mavenExecutorId>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-deploy-plugin</artifactId>\n                <configuration>\n                    <deployAtEnd>true</deployAtEnd>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>enforce-maven</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <requireMavenVersion>\n                                    <version>[3.5.0,4)</version>\n                                </requireMavenVersion>\n                                <requireJavaVersion>\n                                    <version>[11,)</version>\n                                </requireJavaVersion>\n                            </rules>\n                        </configuration>\n                    </execution>\n                    <execution>\n                        <id>enforce-forbidden-dependencies</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <fail>true</fail>\n                            <rules>\n                                <bannedDependencies>\n                                    <excludes>\n                                        <exclude>*:powermock-api-easymock</exclude>\n                                        <exclude>*:powermock-module-junit4</exclude>\n                                    </excludes>\n                                </bannedDependencies>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>com.github.siom79.japicmp</groupId>\n                <artifactId>japicmp-maven-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>japicmp</id>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>cmp</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <dependencies>\n        <!-- Automatically inherited dependencies.  The only ones that should be in here\n             are test dependencies.  Actual compile or runtime dependencies should be\n             explicitly declared in a child module, referencing the dependency defined\n             in this file's <dependencyManagement> section. -->\n        <!-- ... -->\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-api</artifactId>\n            <version>${junit.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-engine</artifactId>\n            <version>${junit.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.hamcrest</groupId>\n            <artifactId>hamcrest-core</artifactId>\n            <version>3.0</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.assertj</groupId>\n            <artifactId>assertj-core</artifactId>\n            <version>3.27.2</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.easymock</groupId>\n            <artifactId>easymock</artifactId>\n            <version>${easymock.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <version>${mockito.version}</version>\n            <scope>test</scope>\n        </dependency>\n        <!-- Writing tests in groovy is fast!: -->\n        <dependency>\n            <groupId>org.apache.groovy</groupId>\n            <artifactId>groovy</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <dependencyManagement>\n        <dependencies>\n            <!-- Shiro core artifacts -->\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-lang</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-cache</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-core</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-config-core</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-config-ogdl</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-crypto-core</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-crypto-hash</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro.crypto</groupId>\n                <artifactId>shiro-hashes-argon2</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro.crypto</groupId>\n                <artifactId>shiro-hashes-bcrypt</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-crypto-cipher</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-event</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-web</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-servlet-plugin</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <!-- Shiro 3rd party support (keep this alphabetically ordered based on the artifactId please): -->\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-aspectj</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-ehcache</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-quartz</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-spring</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-guice</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-hazelcast</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-jaxrs</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-all</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <!-- Intra project test dependencies: -->\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-core</artifactId>\n                <version>${project.version}</version>\n                <classifier>tests</classifier>\n                <type>test-jar</type>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro</groupId>\n                <artifactId>shiro-config-ogdl</artifactId>\n                <version>${project.version}</version>\n                <classifier>tests</classifier>\n                <type>test-jar</type>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro.integrationtests</groupId>\n                <artifactId>shiro-its-support</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro.integrationtests</groupId>\n                <artifactId>shiro-its-meecrowave-support</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro.integrationtests.jaxrs</groupId>\n                <artifactId>shiro-its-jaxrs</artifactId>\n                <version>${project.version}</version>\n                <type>pom</type>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro.integrationtests.jaxrs</groupId>\n                <artifactId>shiro-its-jaxrs-app</artifactId>\n                <version>${project.version}</version>\n                <type>war</type>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro.integrationtests.jaxrs</groupId>\n                <artifactId>shiro-its-jaxrs-app</artifactId>\n                <version>${project.version}</version>\n                <classifier>classes</classifier>\n                <type>jar</type>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.shiro.integrationtests.jaxrs</groupId>\n                <artifactId>shiro-its-jaxrs-tests</artifactId>\n                <version>${project.version}</version>\n                <type>jar</type>\n            </dependency>\n\n            <!-- 3rd party dependencies -->\n\n            <!-- ... -->\n            <dependency>\n                <groupId>org.junit-pioneer</groupId>\n                <artifactId>junit-pioneer</artifactId>\n                <version>2.3.0</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>net.bytebuddy</groupId>\n                <artifactId>byte-buddy</artifactId>\n                <version>${bytebuddy.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>net.bytebuddy</groupId>\n                <artifactId>byte-buddy-agent</artifactId>\n                <version>${bytebuddy.version}</version>\n            </dependency>\n            <dependency>\n                <!-- used for the 'hashpass' command line tool: -->\n                <groupId>commons-cli</groupId>\n                <artifactId>commons-cli</artifactId>\n                <version>${commons.cli.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>javax.annotation</groupId>\n                <artifactId>javax.annotation-api</artifactId>\n                <version>${javax.annotation.api.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.aspectj</groupId>\n                <artifactId>aspectjrt</artifactId>\n                <version>${aspectj.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.aspectj</groupId>\n                <artifactId>aspectjweaver</artifactId>\n                <version>${aspectj.version}</version>\n            </dependency>\n\n            <dependency>\n                <!-- optional dep for the reflection builder -->\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-configuration2</artifactId>\n                <version>${commons.configuration2.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.owasp.encoder</groupId>\n                <artifactId>encoder</artifactId>\n                <version>${owasp.java.encoder.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-simple</artifactId>\n                <version>${slf4j.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-slf4j2-impl</artifactId>\n                <version>${log4j.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-core-test</artifactId>\n                <version>${log4j.version}</version>\n                <scope>test</scope>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.junit.jupiter</groupId>\n                        <artifactId>*</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.junit.platform</groupId>\n                        <artifactId>*</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>junit</groupId>\n                        <artifactId>*</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-api</artifactId>\n                <version>${log4j.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-core</artifactId>\n                <version>${log4j.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-jul</artifactId>\n                <version>${log4j.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.logging.log4j</groupId>\n                <artifactId>log4j-to-slf4j</artifactId>\n                <version>${log4j.version}</version>\n                <scope>test</scope>\n            </dependency>\n\n            <dependency>\n                <!-- Required in the sample apps only for 3rd-party libraries that expect to call\n                     the commons logging APIs -->\n                <groupId>org.slf4j</groupId>\n                <artifactId>jcl-over-slf4j</artifactId>\n                <version>${slf4j.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>commons-beanutils</groupId>\n                <artifactId>commons-beanutils</artifactId>\n                <version>${commons.beanutils.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.hsqldb</groupId>\n                <artifactId>hsqldb</artifactId>\n                <version>${hsqldb.version}</version>\n                <scope>runtime</scope>\n                <optional>true</optional>\n            </dependency>\n            <dependency>\n                <groupId>javax.servlet.jsp</groupId>\n                <artifactId>jsp-api</artifactId>\n                <version>2.2</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.taglibs</groupId>\n                <artifactId>taglibs-standard-spec</artifactId>\n                <version>${taglibs.standard.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.taglibs</groupId>\n                <artifactId>taglibs-standard-impl</artifactId>\n                <version>${taglibs.standard.version}</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>javax.servlet</groupId>\n                <artifactId>javax.servlet-api</artifactId>\n                <version>4.0.1</version>\n                <scope>provided</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.groovy</groupId>\n                <artifactId>groovy</artifactId>\n                <version>${groovy.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>net.sf.ehcache</groupId>\n                <artifactId>ehcache-core</artifactId>\n                <version>${ehcache.version}</version>\n                <optional>true</optional>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>net.sf.ehcache</groupId>\n                        <artifactId>sizeof-agent</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>com.hazelcast</groupId>\n                <artifactId>hazelcast</artifactId>\n                <version>${hazelcast.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.htmlunit</groupId>\n                <artifactId>htmlunit</artifactId>\n                <version>${htmlunit.version}</version>\n            </dependency>\n            <dependency>\n                <!-- Used for sample applications only - not required for the framework: -->\n                <groupId>org.hibernate</groupId>\n                <artifactId>hibernate-core</artifactId>\n                <version>${hibernate.version}</version>\n                <optional>true</optional>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>ant</groupId>\n                        <artifactId>ant</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <!--suppress MavenModelInspection -->\n                        <groupId>ant-launcher</groupId>\n                        <!--suppress MavenModelInspection -->\n                        <artifactId>ant-launcher</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>c3p0</groupId>\n                        <artifactId>c3p0</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <!--suppress MavenModelInspection -->\n                        <groupId>javax.security</groupId>\n                        <!--suppress MavenModelInspection -->\n                        <artifactId>jacc</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>javax.servlet</groupId>\n                        <artifactId>javax.servlet-api</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>jboss</groupId>\n                        <!--suppress MavenModelInspection -->\n                        <artifactId>jboss-cache</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>net.sf.ehcache</groupId>\n                        <artifactId>ehcache</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>asm</groupId>\n                        <!--suppress MavenModelInspection -->\n                        <artifactId>asm-attrs</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>javax.transaction</groupId>\n                        <artifactId>jta</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <!-- Used to support Hibernate's JTA runtime dependency in the sample application(s) only.\n                 Not required for Shiro -->\n            <dependency>\n                <groupId>org.apache.geronimo.specs</groupId>\n                <artifactId>geronimo-jta_1.1_spec</artifactId>\n                <version>1.1.1</version>\n                <scope>runtime</scope>\n                <optional>true</optional>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-context</artifactId>\n                <version>${spring.version}</version>\n                <optional>true</optional>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-web</artifactId>\n                <version>${spring.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-jdbc</artifactId>\n                <version>${spring.version}</version>\n                <optional>true</optional>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-orm</artifactId>\n                <version>${spring.version}</version>\n                <optional>true</optional>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-webmvc</artifactId>\n                <version>${spring.version}</version>\n                <optional>true</optional>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-test</artifactId>\n                <version>${spring.version}</version>\n                <scope>test</scope>\n                <optional>true</optional>\n                <exclusions>\n                    <exclusion>\n                        <groupId>commons-logging</groupId>\n                        <artifactId>commons-logging</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <!-- Guice -->\n            <dependency>\n                <groupId>com.google.inject</groupId>\n                <artifactId>guice</artifactId>\n                <version>${guice.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.inject.extensions</groupId>\n                <artifactId>guice-multibindings</artifactId>\n                <version>${guice.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.inject.extensions</groupId>\n                <artifactId>guice-servlet</artifactId>\n                <version>${guice.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.quartz-scheduler</groupId>\n                <artifactId>quartz</artifactId>\n                <version>${quartz.version}</version>\n                <optional>true</optional>\n            </dependency>\n            <dependency>\n                <groupId>com.github.mjeanroy</groupId>\n                <artifactId>junit-servers-jetty-9</artifactId>\n                <version>${junit.server.jetty.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.bouncycastle</groupId>\n                <artifactId>bcprov-jdk18on</artifactId>\n                <version>${bouncycastle.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.maven.skins</groupId>\n                <artifactId>maven-fluido-skin</artifactId>\n                <version>${fluido-skin.version}</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <!-- Note that reporting may fail with lower settings than something like: MAVEN_OPTS=\"-X512m -XX:MaxPermSize=128m\" -->\n    <reporting>\n        <plugins>\n            <plugin>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <inherited>false</inherited>\n                <configuration>\n                    <top><![CDATA[\n<!-- Matomo -->\n<script>\n  var _paq = window._paq = window._paq || [];\n  /* tracker methods like \"setCustomDimension\" should be called before \"trackPageView\" */\n  /* We explicitly disable cookie tracking to avoid privacy issues */\n  _paq.push(['disableCookies']);\n  _paq.push(['trackPageView']);\n  _paq.push(['enableLinkTracking']);\n  (function() {\n    var u=\"//matomo.privacy.apache.org/\";\n    _paq.push(['setTrackerUrl', u+'matomo.php']);\n    _paq.push(['setSiteId', '2']);\n    var d=document, g=d.createElement('script'), s=d.getElementsByTagName('script')[0];\n    g.async=true; g.src=u+'matomo.js'; s.parentNode.insertBefore(g,s);\n  })();\n</script>\n<!-- End Matomo Code -->\n                    ]]></top>\n                </configuration>\n                <reportSets>\n                    <reportSet>\n                        <id>javadoc-aggregate</id>\n                        <reports>\n                            <report>aggregate-no-fork</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n            <plugin>\n                <artifactId>maven-jxr-plugin</artifactId>\n                <version>3.6.0</version>\n                <configuration>\n                    <aggregate>true</aggregate>\n                </configuration>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>jxr-no-fork</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n            <plugin>\n                <artifactId>maven-pmd-plugin</artifactId>\n                <version>3.26.0</version>\n            </plugin>\n            <plugin>\n                <artifactId>maven-project-info-reports-plugin</artifactId>\n                <!-- Disable, just to make it go faster -->\n                <configuration>\n                    <dependencyLocationsEnabled>false</dependencyLocationsEnabled>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.rat</groupId>\n                <artifactId>apache-rat-plugin</artifactId>\n                <version>0.16.1</version>\n                <!-- only run at the root -->\n                <inherited>false</inherited>\n                <configuration>\n                    <!-- note that this configuration needs to be maintain both in pluginManagement and reporting sections -->\n                    <excludes>\n                        <exclude>**/.externalToolBuilders/*</exclude>\n                        <exclude>**/infinitest.filters</exclude>\n                        <!-- Apparently some test in samples/spring-client generates velocity log - would better to reconfigure to output to target/ -->\n                        <exclude>velocity.log</exclude>\n                        <exclude>CONTRIBUTING.md</exclude>\n                        <exclude>**/README.md</exclude>\n                        <exclude>**/*.json</exclude>\n                        <exclude>**/spring.factories</exclude>\n                        <exclude>**/org.springframework.boot.autoconfigure.AutoConfiguration.imports</exclude>\n                        <exclude>**/spring.provides</exclude>\n                        <exclude>**/*.iml</exclude>\n                        <exclude>**/target/**</exclude>\n                        <exclude>**/nb-configuration.xml</exclude>\n                        <exclude>**/faces-config.NavData</exclude>\n                        <exclude>**/org.mockito.plugins.MockMaker</exclude>\n                        <exclude>.mvn/*</exclude>\n                        <exclude>.jenkins_maven_args</exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-surefire-report-plugin</artifactId>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>report-only</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>taglist-maven-plugin</artifactId>\n                <version>3.2.1</version>\n                <configuration>\n                    <tagListOptions>\n                        <tagClasses>\n                            <tagClass>\n                                <displayName>Todo Work</displayName>\n                                <tags>\n                                    <tag>\n                                        <matchString>todo</matchString>\n                                        <matchType>ignoreCase</matchType>\n                                    </tag>\n                                    <tag>\n                                        <matchString>FIXME</matchString>\n                                        <matchType>exact</matchType>\n                                    </tag>\n                                </tags>\n                            </tagClass>\n                            <tagClass>\n                                <displayName>Deprecated</displayName>\n                                <tags>\n                                    <tag>\n                                        <matchString>@Deprecated</matchString>\n                                        <matchType>exact</matchType>\n                                    </tag>\n                                </tags>\n                            </tagClass>\n                        </tagClasses>\n                    </tagListOptions>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>jdepend-maven-plugin</artifactId>\n                <version>2.1</version>\n                <reportSets>\n                    <reportSet>\n                        <reports>\n                            <report>generate-no-fork</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <reportSets>\n                    <reportSet>\n                        <id>jacoco-aggregate</id>\n                        <reports>\n                            <report>report-integration</report>\n                            <report>report</report>\n                        </reports>\n                    </reportSet>\n                </reportSets>\n            </plugin>\n        </plugins>\n    </reporting>\n\n    <profiles>\n        <profile>\n            <id>fast</id>\n            <properties>\n                <maven.test.skip.exec>true</maven.test.skip.exec>\n                <maven.test.skip>true</maven.test.skip>\n            </properties>\n            <build>\n                <defaultGoal>install</defaultGoal>\n            </build>\n        </profile>\n        <profile>\n            <id>jdk8</id>\n            <activation>\n                <jdk>[1.8,)</jdk>\n            </activation>\n            <build>\n                <pluginManagement>\n                    <plugins>\n                        <plugin>\n                            <groupId>org.apache.maven.plugins</groupId>\n                            <artifactId>maven-javadoc-plugin</artifactId>\n                            <configuration>\n                                <sourcepath>${project.build.sourceDirectory}</sourcepath>\n                                <doclint>none</doclint>\n                                <additionalJOptions>\n                                    <additionalJOption>--allow-script-in-comments</additionalJOption>\n                                </additionalJOptions>\n                            </configuration>\n                        </plugin>\n                    </plugins>\n                </pluginManagement>\n            </build>\n        </profile>\n        <profile>\n            <id>jdk11plus</id>\n            <activation>\n                <jdk>[11,)</jdk>\n            </activation>\n            <properties>\n                <!-- Prevent warnings from surefire plugin every time tests are executed -->\n                <surefire.argLine>-XX:+IgnoreUnrecognizedVMOptions -Xshare:off</surefire.argLine>\n            </properties>\n        </profile>\n        <profile>\n            <id>docs</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-api-docs</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <inherited>true</inherited>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <inherited>true</inherited>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>apache-release</id>\n            <distributionManagement>\n                <site>\n                    <id>shiro.website</id>\n                    <name>Apache Shiro Site</name>\n                    <url>scm:svn:https://svn.apache.org/repos/asf/shiro/site/publish/static/${project.version}</url>\n                </site>\n            </distributionManagement>\n            <build>\n                <plugins>\n                    <!-- calculate checksums of source release for Apache dist area -->\n                    <plugin>\n                        <groupId>net.nicoulaj.maven.plugins</groupId>\n                        <artifactId>checksum-maven-plugin</artifactId>\n                        <version>1.11</version>\n                        <executions>\n                            <execution>\n                                <id>source-release-checksum</id>\n                                <goals>\n                                    <goal>artifacts</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <algorithms>\n                                <algorithm>SHA-512</algorithm>\n                                <algorithm>SHA3-512</algorithm>\n                            </algorithms>\n                            <csvSummary>false</csvSummary>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>nexus-staging</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.sonatype.plugins</groupId>\n                        <artifactId>nexus-staging-maven-plugin</artifactId>\n                        <version>1.7.0</version>\n                        <extensions>true</extensions>\n                        <configuration>\n                            <nexusUrl>https://repository.apache.org</nexusUrl>\n                            <serverId>apache.releases.https</serverId>\n                            <skipNexusStagingDeployMojo>${nexus.deploy.skip}</skipNexusStagingDeployMojo>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <!--  NOTE: this plugin config will return false positives, usage will require\n                  human interpretation (and should NOT be used to fail builds)\n            -->\n            <id>owasp</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.owasp</groupId>\n                        <artifactId>dependency-check-maven</artifactId>\n                        <inherited>false</inherited>\n                        <configuration>\n                            <suppressionFile>${root.dir}/src/owasp-suppression.xml</suppressionFile>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>aggregate</goal>\n                                </goals>\n                                <inherited>false</inherited>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n            <reporting>\n                <plugins>\n                    <plugin>\n                        <groupId>org.owasp</groupId>\n                        <artifactId>dependency-check-maven</artifactId>\n                        <inherited>false</inherited>\n                        <configuration>\n                            <suppressionFile>${root.dir}/src/owasp-suppression.xml</suppressionFile>\n                            <name>OWASP Dependency Check</name>\n                        </configuration>\n                        <reportSets>\n                            <reportSet>\n                                <reports>\n                                    <report>aggregate</report>\n                                </reports>\n                            </reportSet>\n                        </reportSets>\n                    </plugin>\n                </plugins>\n            </reporting>\n        </profile>\n        <profile>\n            <id>ci</id>\n            <properties>\n                <jacoco.skip>false</jacoco.skip>\n            </properties>\n        </profile>\n        <profile>\n            <id>skip-checkstyle</id>\n            <activation>\n                <property>\n                    <name>checkstyle.skip</name>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-checkstyle-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <phase>none</phase>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n    <!--Disable snapshot repositories because they download snapshots\n        instead of using the current build in CI 'mvn verify' steps-->\n    <repositories>\n        <repository>\n            <id>apache.snapshots</id>\n            <url>https://repository.apache.org/snapshots</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n            <releases>\n                <enabled>false</enabled>\n            </releases>\n        </repository>\n    </repositories>\n    <pluginRepositories>\n        <pluginRepository>\n            <id>apache.snapshots</id>\n            <url>https://repository.apache.org/snapshots</url>\n            <snapshots>\n                <enabled>false</enabled>\n            </snapshots>\n            <releases>\n                <enabled>false</enabled>\n            </releases>\n        </pluginRepository>\n    </pluginRepositories>\n</project>\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "shiro.doap.rdf",
          "type": "blob",
          "size": 5.7802734375,
          "content": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\"?>\n<rdf:RDF xml:lang=\"en\"\n         xmlns=\"http://usefulinc.com/ns/doap#\"\n         xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"\n         xmlns:asfext=\"http://projects.apache.org/ns/asfext#\"\n         xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n    <!--\n        Licensed to the Apache Software Foundation (ASF) under one or more\n        contributor license agreements.  See the NOTICE file distributed with\n        this work for additional information regarding copyright ownership.\n        The ASF licenses this file to You under the Apache License, Version 2.0\n        (the \"License\"); you may not use this file except in compliance with\n        the License.  You may obtain a copy of the License at\n\n             http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software\n        distributed under the License is distributed on an \"AS IS\" BASIS,\n        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n        See the License for the specific language governing permissions and\n        limitations under the License.\n    -->\n    <Project rdf:about=\"http://shiro.apache.org\">\n        <created>2010-12-11</created>\n        <license rdf:resource=\"http://usefulinc.com/doap/licenses/asl20\"/>\n        <name>Apache Shiro</name>\n        <homepage rdf:resource=\"http://shiro.apache.org\"/>\n        <asfext:pmc rdf:resource=\"http://shiro.apache.org\"/>\n        <shortdesc>Apache Shiro is an easy-to-use Java security framework that performs authentication, authorization,\n            cryptography, and session management.\n        </shortdesc>\n        <description>Apache Shiro is a powerful and easy-to-use Java security framework that performs authentication,\n            authorization, cryptography, and session management. With Shiro’s easy-to-understand API, you can quickly\n            and easily secure any JVM-based application – from the smallest mobile applications to the largest web\n            and enterprise applications.\n        </description>\n        <bug-database rdf:resource=\"http://shiro.apache.org/issues.html\"/>\n        <mailing-list rdf:resource=\"http://shiro.apache.org/mailing-lists.html\"/>\n        <download-page rdf:resource=\"http://shiro.apache.org/download.html\"/>\n        <programming-language>Java</programming-language>\n        <category rdf:resource=\"http://projects.apache.org/category/library\"/>\n        <category rdf:resource=\"http://projects.apache.org/category/web-framework\"/>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.0.0-incubating</name>\n                <created>2010-06-01</created>\n                <revision>1.0.0-incubating</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.1.0</name>\n                <created>2010-11-01</created>\n                <revision>1.1.0</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.2.0</name>\n                <created>2012-01-24</created>\n                <revision>1.2.0</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.2.1</name>\n                <created>2012-07-28</created>\n                <revision>1.2.1</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.2.2</name>\n                <created>2013-05-15</created>\n                <revision>1.2.2</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.2.3</name>\n                <created>2014-02-27</created>\n                <revision>1.2.3</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.2.4</name>\n                <created>2015-07-28</created>\n                <revision>1.2.4</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.2.5</name>\n                <created>2016-05-24</created>\n                <revision>1.2.5</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.2.6</name>\n                <created>2016-06-28</created>\n                <revision>1.2.6</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.3.0</name>\n                <created>2016-07-25</created>\n                <revision>1.3.0</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.3.1</name>\n                <created>2016-08-29</created>\n                <revision>1.3.1</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.3.2</name>\n                <created>2016-09-12</created>\n                <revision>1.3.2</revision>\n            </Version>\n        </release>\n        <release>\n            <Version>\n                <name>Apache Shiro 1.4.0-RC2</name>\n                <created>2016-11-14</created>\n                <revision>1.4.0-RC2</revision>\n            </Version>\n        </release>\n\n        <repository>\n          <GitRepository>\n            <location rdf:resource=\"https://git.apache.org/shiro.git\"/>\n            <browse rdf:resource=\"https://git.apache.org/shiro.git\"/>\n          </GitRepository>\n        </repository>\n        <maintainer>\n            <foaf:Person>\n                <foaf:name>Les Hazlewood</foaf:name>\n                <foaf:mbox rdf:resource=\"mailto:lhazlewood@apache.org\"/>\n            </foaf:Person>\n        </maintainer>\n    </Project>\n</rdf:RDF>"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "support",
          "type": "tree",
          "content": null
        },
        {
          "name": "test-coverage",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "web",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}