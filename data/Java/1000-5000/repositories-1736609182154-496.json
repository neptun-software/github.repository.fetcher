{
  "metadata": {
    "timestamp": 1736609182154,
    "page": 496,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wildfly/wildfly",
      "stars": 3069,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.087890625,
          "content": "*.txt  text\n*.java text\n*.sh   text\n*.bat  text eol=crlf\n*.ps1  text eol=crlf\n*.xml  text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0302734375,
          "content": "# ignore .svn metadata files\n.svn\n# ignore Maven generated target folders\n~\ntarget\n# ignore downloaded maven\n/tools/maven\n/tools/maven.zip\n/tools/wrapper\n# ignore eclipse files\n.project\n.classpath\n.settings\n.metadata\n.checkstyle\n# ignore m2e annotation processing files\n.factorypath\n# ignore IDEA files\n*.iml\n*.ipr\n*.iws\n.idea/*\n!.idea/icon.png\n# ignore NetBeans files\nnbactions.xml\nnb-configuration.xml\ncatalog.xml\n#\nmaven-ant-tasks.jar\ntest-output\ntransaction.log\n# vim files\n*.swp\n/.gitk-tmp.*\natlassian-ide-plugin.xml\n# temp files\n*~\n# maven versions plugin\npom.xml.versionsBackup\n# hprof dumps\n/*.hprof\n# ignore 'randomly' strewn around logs\nserver.log\n# ignore java crashes\nhs_err_pid*.log\n# H2 databases produced by tests\n*.h2.db\n# JBoss transaction generated files\nPutObjectStoreDirHere\n# ignore mvn-rpmbuild repo\n/.m2\n# ignore eap repo\nlocal-repo-eap\n# ignore the build metadata created by the build metadata plugin\nbuild.metadata\n#These keep hanging around\narquillian/*/server.log*\nclient/shade/dependency-reduced-pom.xml\n\n#OS X stuff\n.DS_Store\n"
        },
        {
          "name": ".gitleaks.toml",
          "type": "blob",
          "size": 2.794921875,
          "content": "# Gitleaks is a tool that detects potential leaks of secrets. This file defines an allowlist to avoid false positives.\r\n# The tool checks the commit history, some files that are not present anymore but contained example secrets has to be put in the allowlist as well\r\n[allowlist]\r\n    description = \"Allowlist\"\r\n    # ignore secrets present in the below test folders\r\n    paths = [\r\n        '''tests\\/base\\/src\\/test\\/java\\/org\\/wildfly\\/security\\/util''',\r\n        '''testsuite\\/integration\\/basic\\/src\\/test\\/java\\/org\\/jboss\\/as\\/test\\/integration\\/security\\/loginmodules\\/common''',\r\n        '''testsuite\\/integration\\/basic\\/src\\/test\\/java\\/org\\/jboss\\/as\\/test\\/integration\\/management\\/api\\/web''',\r\n        '''testsuite\\/integration\\/basic\\/src\\/test\\/resources\\/org\\/wildfly\\/test\\/integration\\/microprofile\\/jwt''',\r\n        '''testsuite\\/integration\\/elytron\\/src\\/test\\/resources''',\r\n        '''testsuite\\/integration\\/elytron-oidc-client\\/src\\/test\\/java\\/org\\/wildfly\\/test\\/integration\\/elytron\\/oidc\\/client''',\r\n        '''testsuite\\/integration\\/manualmode\\/src\\/test\\/java\\/org\\/jboss\\/as\\/test\\/manualmode\\/ejb\\/ssl''',\r\n        '''testsuite\\/integration\\/manualmode\\/src\\/test\\/java\\/org\\/jboss\\/as\\/test\\/manualmode\\/ejb\\/client\\/outbound\\/connection\\/security''',\r\n        '''testsuite\\/integration\\/manualmode\\/src\\/test\\/java\\/org\\/wildfly\\/test\\/manual\\/elytron\\/oidc''',\r\n        '''testsuite\\/integration\\/microprofile\\/src\\/test\\/resources\\/jwt''',\r\n        '''testsuite\\/integration\\/multinode\\/src\\/test\\/resources''',\r\n        '''testsuite\\/integration\\/src\\/test\\/scripts''',\r\n        # ignore this file\r\n        '''^\\.?gitleaks.toml$''',\r\n    ]\r\n    # ignore secrets from the below commits\r\n    commits = [\r\n        # all below commits contained language translations and LocalDescriptions properties files which contained string with the following format:\r\n        # \"secret=Konfiguration\", \"secret=Configuration\", \"secret=Configuraci\\\\u00F3n\", etc. These files are not present in the codebase anymore\r\n        '4e6b31242c7c5b8c4040484b28bd075815d40deb',\r\n        '6267c40213a7bfc853737e3d4a6fed68a2afcef5',\r\n        'de57ad8c007deb54ca02852663c763434ba37e9b',\r\n        '27b56ae78a60f42139d615b289efa32c21aecc69',\r\n        '8d4712f2f54417f44c85ba8ceecf9d1ae78911dc',\r\n        '3dfbb2963b0bc4452e1d8cfd1fba0850136a8caf',\r\n        '8c9cb5d32b091590a0e3aa034db554510c672ae1',\r\n    ]\r\n    # ignore secrets that contain the below regexes\r\n    regexes = [\r\n        # below example secrets are not present anymore\r\n        'someRandomWrongPass',\r\n        'wrongPasswordForVault',\r\n        'somearbitrarycrazystringthatdoesnotmatter',\r\n        'password=JBossPassword',\r\n        'password=whoami',\r\n        'secret=Configuration',\r\n        # present in \"testsuite/mixed-domain/pom.xml\" file\r\n        'password=ILoveWildfly',\r\n    ]\r\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.4619140625,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at \nRadoslav Husar <rhusar@redhat.com>, Paul Ferraro <pferraro@redhat.com> and/or \nBrian Stansberry <brian.stansberry@redhat.com>. All complaints will be reviewed \nand investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.2421875,
          "content": "# Contributing guide\n\n**First off all, thank you for taking the time to contribute into WildFly!** The below contents will help you through the steps for getting started with WildFly. Please make sure to read the relevant section before making your contribution. It will make it a lot easier for us maintainers and smooth out the experience for all involved. The community looks forward to your contributions.\n\n* Git Setup: https://github.com/wildfly/wildfly/blob/main/docs/src/main/asciidoc/_hacking/github_setup.adoc\n* Contributing: https://github.com/wildfly/wildfly/blob/main/docs/src/main/asciidoc/_hacking/contributing.adoc\n* Pull request standard: https://github.com/wildfly/wildfly/blob/main/docs/src/main/asciidoc/_hacking/pullrequest_standards.adoc\n\nIf you like our project, but just don’t have time to contribute, that’s fine. There are other easy ways to support the project and show your appreciation.\n\n* Mention the project at local meetups and tell your friends/colleagues.\n* Tweet about it and also check out our [twitter page](https://twitter.com/WildFlyAS) and [mastodon page](https://fosstodon.org/@wildflyas).\n* Check out our [youtube](https://www.youtube.com/@WildFlyAS) contents.\n\n# Issues\n\n---\n\nWildFly uses JIRA to manage issues. All issues can be found [here](https://issues.redhat.com/projects/WFLY/issues/).\n\nTo create a new issue, comment on an existing issue, or assign an issue to yourself, you'll need to first [create a JIRA account](https://issues.redhat.com/).\n\n# Good First Issues\n\n---\n\nCheck out our issues with the `good-first-issue` label. These are a triaged set of issues that are great for getting started on our project. These can be found [here](https://issues.redhat.com/issues/?filter=12403174).\n\nOnce you have selected an issue you'd like to work on, make sure it's not already assigned to someone else. To assign an issue to yourself, simply click on \"Start Progress\". This will automatically assign the issue to you. If you're not able to assign it to yourself that way, post a message in the [wildfly-developers Zulip stream](https://wildfly.zulipchat.com/#narrow/stream/174184-wildfly-developers) and someone will help get it assigned to you.\n\nLastly, this project is an open source project. Please act responsibly, be nice, polite and enjoy!"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0927734375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n"
        },
        {
          "name": "MIT_CONTRIBUTORS.txt",
          "type": "blob",
          "size": 3.3251953125,
          "content": "MIT License Contributions\n\n\nThe following authors have made contributions under the terms\nof the MIT License, a copy of which is available below.\n\nAdrián Boimvaser\nAlexander Yerenkow\nAlexandro Sansan\nAlexey Makhmutov\nAndi Rustandi Djunaedi\nAndreit Retyakov\nAndrej Golovnin\nAntti Laisi\nArcadiy Ivanov\nAriel Küchler\nBarnabas Bodnar\nBenjamin J. Thompson\nBernado Roubach\nBernard Tison\nBernd Eckenfels\nBilal Soidik\nBoris Unckel\nBrandon Gaisford\nBrent Douglas\nBruno Litman\nBryan Brouckaert\nCarl Harris\nCarlos Alexandro Becker\nCarlos Guedes\nCarmelo Aprile\nCarter Kozak\nChristian Beikov\nChristoph Böhme\nClara Fang\nClaudio Miranda\nCraig Ringer\nDaniel Straub\nDanil Arefyev\nDarryl Miles\nDave Heath\nDavid Le Borgne\nDavid Salter\nDmitriy Sukharev\nDmitry Lisovsky\nDonovan Muller\nEduardo Sant'Ana da Silva\nEnrique Gonzalez Martinez\nEric van der Maarel\nFabio Nascimento Brandao\nFelipe Saab\nFilipe Ferraz\nFilippe Spolti\nFlemming Harms\nFragkiskos Chatziasimidis\nFrank Langelage\nGregory Ramsperger\nGuillaume Grossetie\nHana Kaspříková\nHarald Wellmann\nHarsha Ramesh\nHeinz Wilming\nIstvan Toth\nJaikiran Pai\nJan Stourac\nJason Tedor\nJens De Temmerman\nJeroen van der Vegt\nJim Cheesman\nJohan Björk\nJonathan Leitschuh\nJorge Solórzano\nJose Vicente N. da Costa Junior\nJuan Manuel Cabrera\nJurrie Overgoor\nKohei Nozaki\nKonstantin Bulanov\nKrzysztof Rzymkowski\nkudrevatykh (GitHub id)\nLionel Orellana\nMaas van den Berg\nMarcel Šebek\nMarcus (GitHub id marcus-nl)\nMarcus Klimstra\nMark Paluch\nMarkus Domdey\nMarkus Gaisbauer\nMarkus Lindström\nMatthew King\nMatthieu Brouillard\nMattias Nilsson Grip\nMaxim Karavaev\nMichael Pellegrini\nMichael Reynolds\nMichael Wermeester\nMin-Wook Park\nNick Williams\nNicky Moelholm\nNuno Godinho de Matos\nOleksandr Vengrovskyi\nOndřej Fibich\nOrDTesters\nPeter van Zettens\nPeter Weldon\nPhilippe Marschall\nPieter Bos\nPrzemek Krol\nRafał Osiecki\nRainer Schamm\nramsrib (GitHub id)\nrandomnaja (GitHub id)\nRicardo Arguello\nRich DiCroce\nRico Neubauer\nRobert Panzer\nRyan Ralph\nSantos Zatarain Vera\nsdirbach (GitHub id)\nSergei Egorov\nSeth Miller\nSimone Gotti\nSławomir Wojtasiak\nSlobodan Lazarevski\nStephen Coy\nSteve Moyer\nTeresa Miyar Gil\nThe-Alchemist (GitHub id)\nThomas Darimont\nTobias Stadler\nViacheslav Kabanovich\nVidishab18 (GitHub id)\nVille Skyttä\nVlad Arkhipov\nWinfried Wasser\nWisen Tanasa\nYaguo Zhou\nYeray Borges\n\n\nThe MIT License\n\nCopyright (c) The MIT License Authors as listed above\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is furnished\nto do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\nPARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.271484375,
          "content": "<p align=\"center\">\n  <a href=\"https://wildfly.org\">\n      <img src=\"logo/wildfly_logo.svg\" alt=\"wildfly logo\" title=\"wildlfy\" width=\"600\"/>\n  </a>\n</p>\n\nWildFly Application Server\n========================\nhttps://wildfly.org\n\n* Fast Startup\n* Small Footprint\n* Modular Design\n* Unified Configuration and Management\n\nAnd of course Jakarta EE and MicroProfile!\n\nBuilding\n-------------------\n\nPrerequisites:\n\n* JDK 17 or newer - check `java -version`\n* Maven 3.6.0 or newer - check `mvn -v`\n* On *nix systems, make sure that the maximum number of open files for the user running the build is at least 4096\n  (check `ulimit -n`) or more, depending on what other i/o intensive processes the user is running.\n\nTo build with your own Maven installation:\n\n    mvn install\n\nAlternatively, you can use the Maven Wrapper script that downloads and installs (if necessary) the required Maven version to\n`~/.m2/wrapper` and runs it from there. On Linux, run\n\n    ./mvnw install\n\nOn Windows\n\n    mvnw install\n\n\nStarting and Stopping WildFly\n------------------------------------------\nChange to the bin directory after a successful build\n\n$ cd build/target/wildfly-\\[version\\]/bin\n\nStart the server in domain mode\n\n    ./domain.sh\n\nStart the server in standalone mode\n\n    ./standalone.sh\n\nTo stop the server, press Ctrl + C, or use the admin console\n\n    ./jboss-cli.sh --connect command=:shutdown\n\nCheck 'Getting Started Guide' in the WildFly documentation for more information about how to start and stop WildFly.\n\nDocumentation\n------------------------------------------\n\n* https://docs.wildfly.org/\n\nContributing\n------------------\nPlease see the instructions available in the [contribution guide](CONTRIBUTING.md).\n\nBuild vs. Dist directories\n--------------------------\n\nAfter running `mvn install`, WildFly will be available in two distinct directories, `build` and `dist`.\n\n* The `build` directory contains a build of WildFly that is based on Maven artifact resolution for module configuration\n* The `dist` directory, on the other hand, contains a full distributable build of WildFly\n\nUsing the `build` directory makes iterating with subsystem or module development easier since there is no need to rebuild the whole of WildFly or copy JAR files around on every change.\n\nThe `dist` directory is better suited when a full build of WildFly is needed for development or test purposes.\n\nRunning the Testsuite\n--------------------\nThe testsuite module contains several submodules including the following:\n\n* \"smoke\" -- core tests that should be run as part of every build of the AS. Failures here will fail the build.\n* \"api\" -- tests of features that involve end user use of the public JBoss AS 8 API. Should be run with no failures before any major commits.\n* \"cluster\" -- tests of the WildFly HA clustering features. Should be run with no failures before any major commits.\n* \"domain\" -- tests of the domain management features. Should be run with no failures before any major commits.\n* \"integration\" -- tests of a WildFly standalone server's internals. Should be run with no failures before any major commits.\n* \"spec\" -- tests of features that only involve end user use of the Jakarta EE spec APIs. Should be run with no failures before any major commits.\n\nFor basic smoke tests, simply: `mvn test`\n\nTo run all the tests\n\n    mvn install -DallTests\n\nUsing Eclipse\n-------------\n1. Install the latest version of eclipse\n2. Make sure Xmx in eclipse.ini is at least 1280M, and it's using JDK 17\n3. Launch eclipse and install the m2e plugin, make sure it uses your repo configs\n   (get it from: http://www.eclipse.org/m2e/\n   or install \"Maven Integration for Eclipse\" from the Eclipse Marketplace)\n4. In eclipse preferences Java->Compiler->Errors/Warnings->Deprecated and restricted\n   set forbidden reference to WARNING\n5. In eclipse preferences Java->Code Style, import the cleanup, templates, and\n   formatter configs in [ide-configs/eclipse](https://github.com/wildfly/wildfly-core/tree/main/ide-configs) in the wildfly-core repository.\n6. In eclipse preferences Java->Editor->Save Actions enable \"Additional Actions\",\n   and deselect all actions except for \"Remove trailing whitespace\"\n7. Use import on the root pom, which will pull in all modules\n8. Wait (m2e takes a while on initial import)\n\nLicense\n-------\n* [Apache License 2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.7197265625,
          "content": "# Reporting of CVEs and Security Issues\n\n## The WildFly community and our sponsor, Red Hat, take security bugs very seriously\n\nWe aim to take immediate action to address serious security-related problems that involve our projects. \n\nNote that we will only fix such issues in the most recent minor release of WildFly.\n\n## Reporting of Security Issues\n\nWhen reporting a security vulnerability it is important to not accidentally broadcast to the world that the issue exists, as this makes it easier for people to exploit it. The software industry uses the term <a href=\"https://www.redhat.com/en/blog/security-embargoes-red-hat\">embargo</a> to describe the time a security issue is known internally until it is public knowledge.\n\nOur preferred way of reporting security issues in WildFly and its related projects is listed below.\n\n### Email the mailing list\n\nThe list at <a href=\"mailto:security@wildfly.org\">security@wildfly.org</a> is the preferred mechanism for outside users to report security issues. A member of the WildFly team will open the required issues.\n    \n### Other considerations\n\nIf you would like to work with us on a fix for the security vulnerability, please include your GitHub username in the above email, and we will provide you access to a temporary private fork where we can collaborate on a fix without it being disclosed publicly, **including in your own publicly visible git repository**.\n\nDo not open a public issue, send a pull request, or disclose any information about the suspected vulnerability publicly, **including in your own publicly visible git repository**. If you discover any publicly disclosed security vulnerabilities, please notify us immediately through <a href=\"mailto:security@wildfly.org\">security@wildfly.org</a>\n"
        },
        {
          "name": "appclient",
          "type": "tree",
          "content": null
        },
        {
          "name": "batch-jberet",
          "type": "tree",
          "content": null
        },
        {
          "name": "bean-validation",
          "type": "tree",
          "content": null
        },
        {
          "name": "boms",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.bat",
          "type": "blob",
          "size": 1.7001953125,
          "content": "@echo off\nREM  ======================================================================\nREM\nREM  A build script\nREM\nREM  At present this script does nothing else than pass the arguments by to\nREM  mvnw and you are encouraged to use mvnw (a.k.a. Maven Wrapper)\nREM  directly.\nREM\nREM  Note that in the past, this script took the following responsibilities\nREM  that are now handled by mvnw or Maven itself:\nREM\nREM  * Download and install a specific version of Maven\nREM  * Set Maven options via MAVEN_OPTS environment variable - these can\nREM    now be set in .mvn/jvm.config and .mvn/maven.config\nREM\nREM  ======================================================================\nREM\nREM Authors:\nREM     Jason Dillon <jason@planet57.com>\nREM     Sacha Labourey <sacha.labourey@cogito-info.ch>\nREM\n\nREM ******************************************************\nREM Ignore the MAVEN_HOME variable: we want to use *our*\nREM Maven version and associated JARs.\nREM ******************************************************\nREM Ignore the users classpath, cause it might mess\nREM things up\nREM ******************************************************\n\nSETLOCAL\n\nset CLASSPATH=\nset M2_HOME=\nset MAVEN_HOME=\n\nREM MAVEN_OPTS MAVEN_OPTS now live in .mvn/jvm.config and .mvn/maven.config\nREM set MAVEN_OPTS=%MAVEN_OPTS% -Xmx768M\n\nset DIRNAME=%~p0\nset MVN=%DIRNAME%\\mvnw.cmd\n\nset GOAL=%1\nif \"%GOAL%\"==\"\" set GOAL=install\n\nREM WFLY-8175 requires that we keep installing Maven under the tools directory\nREM the current project, at least when mvnw is invoked from build and integration-tests\nREM scripts\nset GOAL=-Dmaven.user.home=%DIRNAME%\\tools %GOAL%\n\necho Calling \"%MVN%\" %GOAL% %2 %3 %4 %5 %6 %7\ncall \"%MVN%\" %GOAL% %2 %3 %4 %5 %6 %7\n\nif \"%NOPAUSE%\" == \"\" pause\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 5.1318359375,
          "content": "#!/bin/bash -e\n#\n# Copyright The WildFly Authors\n# SPDX-License-Identifier: Apache-2.0\n#\n\n### ====================================================================== ###\n##                                                                          ##\n##  A build script                                                          ##\n##                                                                          ##\n##  Note that in the past, this script took the following responsibilities  ##\n##  that are now handled by ./mvnw (a.k.a. Maven Wrapper) or Maven itself:  ##\n##                                                                          ##\n##  * Download and install a specific version of Maven                      ##\n##  * Set Maven options via MAVEN_OPTS environment variable - these can     ##\n##    now be set in .mvn/jvm.config and .mvn/maven.config                   ##\n##                                                                          ##\n##  The only task left in this script is settting a sufficient limit for    ##\n##  the open files (a.k.a. ulimit -n). If this is not important to you,     ##\n##  feel free to use ./mvnw directly                                        ##\n##                                                                          ##\n### ====================================================================== ###\nBASH_INTERPRETER=${BASH_INTERPRETER:-${SHELL}}\n\nPROGNAME=`basename $0`\nDIRNAME=`dirname \"${BASH_SOURCE[0]}\"`\nDIRNAME=`cd \"$DIRNAME\" && pwd`\nGREP=\"grep\"\nROOT=\"/\"\n\n# Ignore user's MAVEN_HOME if it is set\nM2_HOME=\"\"\nMAVEN_HOME=\"\"\n\n# MAVEN_OPTS now live in .mvn/jvm.config and .mvn/maven.config\n# MAVEN_OPTS=\"$MAVEN_OPTS -Xmx1024M\"\n# export MAVEN_OPTS\n\n#  Use the maximum available, or set MAX_FD != -1 to use that\nMAX_FD=\"maximum\"\n\n#  OS specific support (must be 'true' or 'false').\ncygwin=false;\ndarwin=false;\ncase \"`uname`\" in\n    CYGWIN*)\n        cygwin=true\n        ;;\n\n    Darwin*)\n        darwin=true\n        ;;\nesac\n\n#\n#  Helper to complain.\n#\ndie() {\n    echo \"${PROGNAME}: $*\"\n    exit 1\n}\n\n#\n#  Helper to complain.\n#\nwarn() {\n    echo \"${PROGNAME}: $*\"\n}\n\n#\n#  Helper to source a file if it exists.\n#\nsource_if_exists() {\n    for file in $*; do\n        if [ -f \"$file\" ]; then\n            . $file\n        fi\n    done\n}\n\n#\n#  Main function.\n#\nmain() {\n    #  If there is a build config file, source it.\n    source_if_exists \"$DIRNAME/build.conf\" \"$HOME/.build.conf\"\n\n    #  Increase the maximum file descriptors if we can.\n    if [ $cygwin = \"false\" ]; then\n        if MAX_FD_LIMIT=`ulimit -H -n`; then\n            if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ]; then\n                #  Use system's max.\n                MAX_FD=\"$MAX_FD_LIMIT\"\n            fi\n\n            if ! ulimit -n $MAX_FD; then\n                warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n            fi\n        else\n            warn \"Could not query system maximum file descriptor limit: $MAX_FD_LIMIT\"\n        fi\n    fi\n\n    MVN=\"$DIRNAME/mvnw\"\n\n    #  Need to specify planet57/buildmagic protocol handler package.\n    MVN_OPTS=\"-Djava.protocol.handler.pkgs=org.jboss.net.protocol\"\n\n    #  Setup some build properties\n    MVN_OPTS=\"$MVN_OPTS -Dbuild.script=$0\"\n\n    #  Change to the directory where the script lives, so users are not forced\n    #  to be in the same directory as build.xml.\n    cd $DIRNAME\n\n    # Add default settings.xml file if it exists\n    MVN_SETTINGS_XML_DEFAULT=\"$DIRNAME/tools/maven/conf/settings.xml\"\n    if [ -f \"$MVN_SETTINGS_XML_DEFAULT\" ]; then\n        MVN_SETTINGS_XML_ARGS=\"-s $MVN_SETTINGS_XML_DEFAULT\"\n    else\n        MVN_SETTINGS_XML_ARGS=\"\"\n    fi\n    MVN_GOAL=\"\";\n    ADDIT_PARAMS=\"\";\n    #  For each parameter, check for testsuite directives.\n    for param in \"$@\" ; do\n        case $param in\n            ## -s .../settings.xml - don't use our own.\n            -s)      MVN_SETTINGS_XML_ARGS=\"\";   ADDIT_PARAMS=\"$ADDIT_PARAMS $param\";;\n            -*)      ADDIT_PARAMS=\"$ADDIT_PARAMS '$param'\";;\n            help*)   MVN_GOAL=\"$MVN_GOAL$param \";;\n            clean)   MVN_GOAL=\"$MVN_GOAL$param \";;\n            test)    MVN_GOAL=\"$MVN_GOAL$param \";;\n            install) MVN_GOAL=\"$MVN_GOAL$param \";;\n            deploy)  MVN_GOAL=\"$MVN_GOAL$param \";;\n            site)    MVN_GOAL=\"$MVN_GOAL$param \";;\n            *)       ADDIT_PARAMS=\"$ADDIT_PARAMS '$param'\";;\n        esac\n    done\n    #  Default goal if none specified.\n    if [ -z \"$MVN_GOAL\" ]; then MVN_GOAL=\"install\"; fi\n\n    #  Export some stuff for maven.\n    export MVN MAVEN_HOME MVN_OPTS MVN_GOAL\n\n    # The default arguments.  `mvn -s ...` will override this.\n    MVN_ARGS=${MVN_ARGS:-\"$MVN_SETTINGS_XML_ARGS\"};\n\n    # WFLY-8175 requires that we keep installing Maven under the tools directory\n    # the current project, at least when mvnw is invoked from build and integration-tests\n    # scripts\n    MVN_ARGS=\"-Dmaven.user.home=$DIRNAME/tools $MVN_ARGS\"\n\n    echo \"$MVN $MVN_ARGS $MVN_GOAL $ADDIT_PARAMS\"\n\n    #  Execute in debug mode, or simply execute.\n    if [ \"x$MVN_DEBUG\" != \"x\" ]; then\n        eval \"${BASH_INTERPRETER}\" -x $MVN $MVN_ARGS $MVN_GOAL $ADDIT_PARAMS\n    else\n        eval exec ${BASH_INTERPRETER} $MVN $MVN_ARGS $MVN_GOAL $ADDIT_PARAMS\n    fi\n}\n\n##\n##  Bootstrap\n##\nmain \"$@\"\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "check_logging.sh",
          "type": "blob",
          "size": 1.45703125,
          "content": "#!/bin/bash\n\nBASE_BRANCH=\"${GITHUB_BASE_REF:-main}\"\nDIFF=$(git diff origin/\"$BASE_BRANCH\"...HEAD || true)\n\nif [ -z \"$DIFF\" ]; then\n  echo \"No diff found to analyze.\"\n  exit 0\nfi\n\nPATTERNS=(\n  \".info(\\\"\"\n  \".infof(\\\"\"\n  \".warn(\\\"\"\n  \".warnf(\\\"\"\n  \".error(\\\"\"\n  \".errorf(\\\"\"\n  \".fatal(\\\"\"\n  \".fatalf(\\\"\"\n  \"System.out.print\"\n  \"System.err.print\"\n  \".printStackTrace\"\n)\n\nERRORS=\"\"\nCURRENT_FILE=\"\"\n\nwhile IFS= read -r line; do\n  # Update the current file if a new diff starts\n  if [[ \"$line\" =~ ^diff\\ --git\\ a\\/.*\\ b\\/.* ]]; then\n    CURRENT_FILE=$(echo \"$line\" | awk '{print $3}' | sed 's/^a\\///')\n  fi\n\n  if [[ \"$line\" =~ ^\\+[^+] ]]; then\n    # Ignore lines in the test directories\n    if [[ \"$CURRENT_FILE\" != *\"src/test/\"* && \"$CURRENT_FILE\" != *\"testsuite/\"* && \"$CURRENT_FILE\" != *\"check_logging.sh\"* ]]; then\n      # Check for any of the patterns, ensuring \"//\" doesn't precede them\n      for pattern in \"${PATTERNS[@]}\"; do\n        if [[ \"$line\" == *\"$pattern\"* ]]; then\n          # Ensure the pattern is not commented out with \"//\"\n          if [[ \"$line\" != *\"//\"*\"$pattern\"* ]]; then\n            # Capture the error line and its context\n            ERRORS+=\"$line\\nFile: $CURRENT_FILE\\n\\n\"\n          fi\n        fi\n      done\n    fi\n  fi\ndone <<< \"$DIFF\"\n\nif [ -n \"$ERRORS\" ]; then\n  echo -e \"Logging statements found that should be internationalized or converted to a lower log level:\\n\"\n  echo -e \"$ERRORS\"\n  exit 1\nelse\n  echo \"No problematic logging statements found.\"\n  exit 0\nfi\n"
        },
        {
          "name": "checkstyle-suppressions.xml",
          "type": "blob",
          "size": 0.416015625,
          "content": "<?xml version=\"1.0\"?>\n\n<!--\n  ~ Copyright The WildFly Authors\n  ~ SPDX-License-Identifier: Apache-2.0\n  -->\n\n<!DOCTYPE suppressions PUBLIC\n        \"-//Puppy Crawl//DTD Suppressions 1.1//EN\"\n        \"http://www.puppycrawl.com/dtds/suppressions_1_1.dtd\">\n\n<suppressions>\n    <!-- Ignore internationalized text files -->\n    <suppress files=\"LocalDescriptions_.+\\.properties|.*\\.i18n_.+\\.properties\" checks=\".*\"/>\n</suppressions>"
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "clustering",
          "type": "tree",
          "content": null
        },
        {
          "name": "concurrency",
          "type": "tree",
          "content": null
        },
        {
          "name": "connector",
          "type": "tree",
          "content": null
        },
        {
          "name": "datasources-agroal",
          "type": "tree",
          "content": null
        },
        {
          "name": "dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "ee-build",
          "type": "tree",
          "content": null
        },
        {
          "name": "ee-dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "ee-feature-pack",
          "type": "tree",
          "content": null
        },
        {
          "name": "ee-security",
          "type": "tree",
          "content": null
        },
        {
          "name": "ee",
          "type": "tree",
          "content": null
        },
        {
          "name": "ejb3",
          "type": "tree",
          "content": null
        },
        {
          "name": "elytron-oidc-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "galleon-pack",
          "type": "tree",
          "content": null
        },
        {
          "name": "health",
          "type": "tree",
          "content": null
        },
        {
          "name": "iiop-openjdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration-tests.bat",
          "type": "blob",
          "size": 2.9775390625,
          "content": "@echo off\nREM  ======================================================================\nREM\nREM  A script to run the integration tests on Windows\nREM\nREM  ======================================================================\nREM\nREM Authors:\nREM     Jason Dillon <jason@planet57.com>\nREM     Sacha Labourey <sacha.labourey@cogito-info.ch>\nREM\n\nREM ******************************************************\nREM Ignore the users classpath, cause it might mess\nREM things up\nREM ******************************************************\n\nSETLOCAL\n\nset PROGNAME=%0\nset DIRNAME=%~p0\n\nset CLASSPATH=\n\nREM MAVEN_OPTS MAVEN_OPTS now live in .mvn/jvm.config and .mvn/maven.config\nREM set MAVEN_OPTS=%MAVEN_OPTS% -Xmx768M\n\n\nREM  Support for testsuite profile processing\nset CMD_LINE_PARAMS=\nset TESTS_SPECIFIED=N\n\nREM  Each test module executes a different type of test\nset INTEGRATION_TESTS=-Dintegration.module -Dbasic.integration.tests -Dcompat.integration.tests -Dclustering.integration.tests -Dtimerservice.integration.tests\nset SMOKE_TESTS=-Dintegration.module -Dsmoke.integration.tests\nset DOMAIN_TESTS=-Ddomain.module\nset COMPAT_TESTS=-Dcompat.module\n\n\nset MVN=%DIRNAME%\\mvn.cmd\nset GOAL=%2\nif \"%GOAL%\"==\"\" set GOAL=install\n\nREM WFLY-8175 requires that we keep installing Maven under the tools directory\nREM the current project, at least when mvnw is invoked from build and integration-tests\nREM scripts\nset GOAL=-Dmaven.user.home=%DIRNAME%\\tools %GOAL%\n\nREM  Process test directives before calling maven\ncall :processTestDirectives %GOAL% %3 %4 %5 %6 %7 %8\n\nREM  Change to testsuite directory before executing mvn.\ncd %DIRNAME%\\testsuite\n\necho Calling \"%MVN%\" %CMD_LINE_PARAMS%\ncall \"%MVN%\" %CMD_LINE_PARAMS%\n\ncd %DIRNAME%\n\nREM  Pause the batch script when maven terminates.\nif \"%NOPAUSE%\" == \"\" pause\n\ngoto :EOF\n\nREM ******************************************************\nREM ***  Function to process testsuite directives.     ***\nREM ******************************************************\n:processTestDirectives\n\nREM echo \"Calling processTestDirectives %*\"\n:loop\n\nREM  Check if we have no more parameters to process.\nif \"%1\" == \"\" (\n  if \"%TESTS_SPECIFIED%\" == \"N\" set \"CMD_LINE_PARAMS=%CMD_LINE_PARAMS% %SMOKE_TESTS%\"\n  goto :eof\n)\nREM  Replace occurrences of directives with corresponding maven profiles\nREM  -DallTests\nif \"%1\" == \"-DallTests\" (\n  set \"CMD_LINE_PARAMS=%CMD_LINE_PARAMS% %INTEGRATION_TESTS% %DOMAIN_TESTS% %COMPAT_TESTS% %SMOKE_TESTS%\"\n  set \"TESTS_SPECIFIED=Y\"\n  goto processed\n)\nREM  -Ddomain-tests\nif \"%1\" == \"-Ddomain-tests\" (\n  set \"CMD_LINE_PARAMS=%CMD_LINE_PARAMS% %DOMAIN_TESTS%\"\n  set \"TESTS_SPECIFIED=Y\"\n  goto processed\n)\nREM  -Dcompat-tests\nif \"%1\" == \"-Dcompat-tests\" (\n  set \"CMD_LINE_PARAMS=%CMD_LINE_PARAMS% %COMPAT_TESTS%\"\n  set \"TESTS_SPECIFIED=Y\"\n  goto processed\n)\nREM  -Dsmoke-tests\nif \"%1\" == \"-Dsmoke-tests\" (\n  set \"CMD_LINE_PARAMS=%CMD_LINE_PARAMS% %SMOKE_TESTS%\"\n  set \"TESTS_SPECIFIED=Y\"\n  goto processed\n)\nREM  Pass through other params.\nset \"CMD_LINE_PARAMS=%CMD_LINE_PARAMS% %1\"\n\n:processed\nshift\ngoto loop\n"
        },
        {
          "name": "integration-tests.sh",
          "type": "blob",
          "size": 5.142578125,
          "content": "#!/bin/bash\n\n#\n# Copyright The WildFly Authors\n# SPDX-License-Identifier: Apache-2.0\n#\n\n# Shell script to run the integration tests\nBASH_INTERPRETER=${BASH_INTERPRETER:-${SHELL}}\n\nPROGNAME=`basename $0`\nDIRNAME=`dirname \"${BASH_SOURCE[0]}\"`\nDIRNAME=`cd \"$DIRNAME\" && pwd`\nGREP=\"grep\"\nROOT=\"/\"\n\n# Ignore user's MAVEN_HOME if it is set\nM2_HOME=\"\"\nMAVEN_HOME=\"\"\n\n# MAVEN_OPTS now live in .mvn/jvm.config and .mvn/maven.config\n# MAVEN_OPTS=\"$MAVEN_OPTS -Xmx512M\"\n# export MAVEN_OPTS\n\n# The default arguments.  `mvn -s ...` will override this.\n# Take the default settings.xml file if it exists\nMVN_SETTINGS_XML_DEFAULT=\"$DIRNAME/tools/maven/conf/settings.xml\"\nif [ -f \"$MVN_SETTINGS_XML_DEFAULT\" ]; then\n    MVN_ARGS=${MVN_ARGS:-\"-s $MVN_SETTINGS_XML_DEFAULT\"};\nfi\n\n# Use the maximum available, or set MAX_FD != -1 to use that.\nMAX_FD=\"maximum\"\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false;\ndarwin=false;\ncase \"`uname`\" in\n    CYGWIN*)  cygwin=true;;\n    Darwin*)  darwin=true;;\nesac\n\n\n\n\n#\n#  Integration testsuite support.\n#\n\n#\nCMD_LINE_PARAMS=\nTESTS_SPECIFIED=\"N\"\n. testsuite/groupDefs.sh\n\n#\n# Helper to process command line for test directives\n# - user-specified parameters (allTests etc) are translated into the appropriate\n# maven build profiles and removed from the command line\n# - smoke tests run with build\n#\nprocess_test_directives() {\n\n    MVN_GOALS=\"\";\n\n    # For each parameter, check for testsuite directives.\n    for param in $@ ; do\n    case $param in\n      ## -s .../settings.xml - don't use our own.\n      -s)                MVN_ARGS=\"\";          CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS -s\";;\n      ## -DallTests runs all tests.\n      -DallTests)        TESTS_SPECIFIED=\"Y\";  CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS -DallTests -fae\";;\n\n      -Dinteg-tests)     TESTS_SPECIFIED=\"Y\";  CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS $INTEGRATION_TESTS\";;\n      -Dcluster-tests)   TESTS_SPECIFIED=\"Y\";  CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS $CLUSTER_TESTS\";;\n      -Dsmoke-tests)     TESTS_SPECIFIED=\"Y\";  CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS $SMOKE_TESTS\";;\n      -Dbasic-tests)     TESTS_SPECIFIED=\"Y\";  CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS $BASIC_TESTS\";;\n      -Ddomain-tests)    TESTS_SPECIFIED=\"Y\";  CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS $DOMAIN_TESTS\";;\n      -Dcompat-tests)    TESTS_SPECIFIED=\"Y\";  CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS $COMPAT_TESTS\";;\n      ## Don't run smoke tests if a single test is specified.\n      -Dtest=*)          TESTS_SPECIFIED=\"Y\";  CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS $param\";; # -DfailIfNoTests=false\n\n      ## Collect Maven goals.\n      clean)   MVN_GOALS=\"$MVN_GOALS$param \";;\n      test)    MVN_GOALS=\"$MVN_GOALS$param \";;\n      install) MVN_GOALS=\"$MVN_GOALS$param \";;\n      deploy)  MVN_GOALS=\"$MVN_GOALS$param \";;\n      site)    MVN_GOALS=\"$MVN_GOALS$param \";;\n      ## Pass through all other params.\n      *)      CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS $param\";;\n    esac\n    done\n\n    #  Default goal if none specified.\n    if [ -z \"$MVN_GOALS\" ]; then MVN_GOALS=\"install\"; fi\n    CMD_LINE_PARAMS=\"$MVN_GOALS $CMD_LINE_PARAMS\";\n\n    # If no tests specified, run smoke tests.\n    if [[ $TESTS_SPECIFIED == \"N\" ]]; then\n        CMD_LINE_PARAMS=\"$CMD_LINE_PARAMS $SMOKE_TESTS\"\n    fi\n}\n\n#\n# Helper to complain.\n#\ndie() {\n    echo \"${PROGNAME}: $*\"\n    exit 1\n}\n\n#\n# Helper to complain.\n#\nwarn() {\n    echo \"${PROGNAME}: $*\"\n}\n\n#\n# Helper to source a file if it exists.\n#\nmaybe_source() {\n    for file in $*; do\n        if [ -f \"$file\" ]; then\n            . $file\n        fi\n    done\n}\n\n#\n# Main function.\n#\nmain() {\n    #  If there is a build config file. then source it.\n    maybe_source \"$DIRNAME/build.conf\" \"$HOME/.build.conf\"\n\n    #  Increase the maximum file descriptors if we can.\n    if [ $cygwin = \"false\" ]; then\n        MAX_FD_LIMIT=`ulimit -H -n`\n        if [ $? -eq 0 ]; then\n            if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ]; then\n                #  Use the system max.\n                MAX_FD=\"$MAX_FD_LIMIT\"\n            fi\n\n            ulimit -n $MAX_FD\n            if [ $? -ne 0 ]; then\n                warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n            fi\n        else\n            warn \"Could not query system maximum file descriptor limit: $MAX_FD_LIMIT\"\n        fi\n    fi\n\n    MVN=\"$DIRNAME/mvnw\"\n\n    #  Change to the directory where the script lives\n    #  so users are not forced to be in the same directory as build.xml.\n    cd $DIRNAME/testsuite\n\n    MVN_GOAL=$@\n    if [ -z \"$MVN_GOAL\" ]; then\n        MVN_GOAL=\"install\"\n    fi\n\n    #  Process test directives before calling maven.\n    process_test_directives $MVN_GOAL\n    MVN_GOAL=$CMD_LINE_PARAMS\n\n    # Export some stuff for maven.\n    export MVN MAVEN_HOME MVN_OPTS MVN_GOAL\n\n    # WFLY-8175 requires that we keep installing Maven under the tools directory\n    # the current project, at least when mvnw is invoked from build and integration-tests\n    # scripts\n    MVN_ARGS=\"-Dmaven.user.home=$DIRNAME/tools $MVN_ARGS\"\n\n    echo \"$MVN $MVN_ARGS $MVN_GOAL\"\n\n    #  Execute in debug mode, or simply execute.\n    if [ \"x$MVN_DEBUG\" != \"x\" ]; then\n        \"${BASH_INTERPRETER}\" -x $MVN $MVN_ARGS $MVN_GOAL\n    else\n        exec \"${BASH_INTERPRETER}\" $MVN $MVN_ARGS $MVN_GOAL\n    fi\n\n    cd $DIRNAME\n}\n\n##\n## Bootstrap\n##\n\nmain \"$@\"\n"
        },
        {
          "name": "jakarta-data",
          "type": "tree",
          "content": null
        },
        {
          "name": "jaxrs",
          "type": "tree",
          "content": null
        },
        {
          "name": "jdr",
          "type": "tree",
          "content": null
        },
        {
          "name": "jpa",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsf",
          "type": "tree",
          "content": null
        },
        {
          "name": "legacy",
          "type": "tree",
          "content": null
        },
        {
          "name": "logo",
          "type": "tree",
          "content": null
        },
        {
          "name": "mail",
          "type": "tree",
          "content": null
        },
        {
          "name": "messaging-activemq",
          "type": "tree",
          "content": null
        },
        {
          "name": "metrics",
          "type": "tree",
          "content": null
        },
        {
          "name": "microprofile",
          "type": "tree",
          "content": null
        },
        {
          "name": "mod_cluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 6.2685546875,
          "content": "#!/bin/sh\n#\n# Copyright The WildFly Authors\n# SPDX-License-Identifier: Apache-2.0\n#\n\n# ----------------------------------------------------------------------------\n# Maven2 Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n           #\n           # Look for the Apple JDKs first to preserve the existing behaviour, and then look\n           # for the new JDKs provided by Oracle.\n           #\n           if [ -z \"$JAVA_HOME\" ] && [ -L /System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK ] ; then\n             #\n             # Apple JDKs\n             #\n             export JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/CurrentJDK/Home\n           fi\n\n           if [ -z \"$JAVA_HOME\" ] && [ -L /System/Library/Java/JavaVirtualMachines/CurrentJDK ] ; then\n             #\n             # Apple JDKs\n             #\n             export JAVA_HOME=/System/Library/Java/JavaVirtualMachines/CurrentJDK/Contents/Home\n           fi\n\n           if [ -z \"$JAVA_HOME\" ] && [ -L \"/Library/Java/JavaVirtualMachines/CurrentJDK\" ] ; then\n             #\n             # Oracle JDKs\n             #\n             export JAVA_HOME=/Library/Java/JavaVirtualMachines/CurrentJDK/Contents/Home\n           fi\n\n           if [ -z \"$JAVA_HOME\" ] && [ -x \"/usr/libexec/java_home\" ]; then\n             #\n             # Apple JDKs\n             #\n             export JAVA_HOME=`/usr/libexec/java_home`\n           fi\n           ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Migwn, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\n  # TODO classpath?\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`which java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n  basedir=\"`pwd`\"\n  wdir=\"`pwd`\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    wdir=\"`(cd \"$wdir/..\"; pwd)`\"\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"`(tr -s '\\n' ' ' < \"$1\")`\"\n  fi\n}\n\nMAVEN_PROJECTBASEDIR=\"${MAVEN_BASEDIR:-`find_maven_basedir`}\"\nexport MAVEN_PROJECTBASEDIR\nMAVEN_OPTS=\"`(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\")` $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\n# avoid using MAVEN_CMD_LINE_ARGS below since that would loose parameter escaping in $@\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 5.150390625,
          "content": "@REM ----------------------------------------------------------------------------\r\n@REM Licensed to the Apache Software Foundation (ASF) under one\r\n@REM or more contributor license agreements.  See the NOTICE file\r\n@REM distributed with this work for additional information\r\n@REM regarding copyright ownership.  The ASF licenses this file\r\n@REM to you under the Apache License, Version 2.0 (the\r\n@REM \"License\"); you may not use this file except in compliance\r\n@REM with the License.  You may obtain a copy of the License at\r\n@REM\r\n@REM    http://www.apache.org/licenses/LICENSE-2.0\r\n@REM\r\n@REM Unless required by applicable law or agreed to in writing,\r\n@REM software distributed under the License is distributed on an\r\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n@REM KIND, either express or implied.  See the License for the\r\n@REM specific language governing permissions and limitations\r\n@REM under the License.\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@REM ----------------------------------------------------------------------------\r\n@REM Maven2 Start Up Batch script\r\n@REM\r\n@REM Required ENV vars:\r\n@REM JAVA_HOME - location of a JDK home dir\r\n@REM\r\n@REM Optional ENV vars\r\n@REM M2_HOME - location of maven2's installed home dir\r\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\r\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a key stroke before ending\r\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\r\n@REM     e.g. to debug Maven itself, use\r\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\r\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\r\n@echo off\r\n@REM enable echoing my setting MAVEN_BATCH_ECHO to 'on'\r\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\r\n\r\n@REM set %HOME% to equivalent of $HOME\r\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\r\n\r\n@REM Execute a user defined script before this one\r\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\r\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\r\nif exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\r\nif exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\r\n:skipRcPre\r\n\r\n@setlocal\r\n\r\nset ERROR_CODE=0\r\n\r\n@REM To isolate internal variables from possible post scripts, we use another setlocal\r\n@setlocal\r\n\r\n@REM ==== START VALIDATION ====\r\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\r\n\r\necho.\r\necho Error: JAVA_HOME not found in your environment. >&2\r\necho Please set the JAVA_HOME variable in your environment to match the >&2\r\necho location of your Java installation. >&2\r\necho.\r\ngoto error\r\n\r\n:OkJHome\r\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\r\n\r\necho.\r\necho Error: JAVA_HOME is set to an invalid directory. >&2\r\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\r\necho Please set the JAVA_HOME variable in your environment to match the >&2\r\necho location of your Java installation. >&2\r\necho.\r\ngoto error\r\n\r\n@REM ==== END VALIDATION ====\r\n\r\n:init\r\n\r\nset MAVEN_CMD_LINE_ARGS=%MAVEN_CONFIG% %*\r\n\r\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\r\n@REM Fallback to current working directory if not found.\r\n\r\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\r\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\r\n\r\nset EXEC_DIR=%CD%\r\nset WDIR=%EXEC_DIR%\r\n:findBaseDir\r\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\r\ncd ..\r\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\r\nset WDIR=%CD%\r\ngoto findBaseDir\r\n\r\n:baseDirFound\r\nset MAVEN_PROJECTBASEDIR=%WDIR%\r\ncd \"%EXEC_DIR%\"\r\ngoto endDetectBaseDir\r\n\r\n:baseDirNotFound\r\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\r\ncd \"%EXEC_DIR%\"\r\n\r\n:endDetectBaseDir\r\n\r\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\r\n\r\n@setlocal EnableExtensions EnableDelayedExpansion\r\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\r\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\r\n\r\n:endReadAdditionalConfig\r\n\r\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\r\n\nset WRAPPER_JAR=\"\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\r\n\r\n@REM avoid using MAVEN_CMD_LINE_ARGS below since that would loose parameter escaping in %*\r\n%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\r\nif ERRORLEVEL 1 goto error\r\ngoto end\r\n\r\n:error\r\nset ERROR_CODE=1\r\n\r\n:end\r\n@endlocal & set ERROR_CODE=%ERROR_CODE%\r\n\r\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\r\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\r\nif exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\r\nif exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\r\n:skipRcPost\r\n\r\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\r\nif \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\r\n\r\nif \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\r\n\r\nexit /B %ERROR_CODE%\r\n"
        },
        {
          "name": "naming",
          "type": "tree",
          "content": null
        },
        {
          "name": "observability",
          "type": "tree",
          "content": null
        },
        {
          "name": "picketlink",
          "type": "tree",
          "content": null
        },
        {
          "name": "pojo",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 109.5576171875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Copyright The WildFly Authors\n  ~ SPDX-License-Identifier: Apache-2.0\n  -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.jboss</groupId>\n        <artifactId>jboss-parent</artifactId>\n        <version>47</version>\n        <!-- The empty relativePath makes Maven lookup it in the repository. Missing tag default is ../pom.xml. -->\n        <relativePath/>\n    </parent>\n\n    <groupId>org.wildfly</groupId>\n    <artifactId>wildfly-parent</artifactId>\n    <!--\n        Maintain separation between the artifact id and the version to help prevent\n        merge conflicts between commits changing the GA and those changing the V.\n    -->\n    <version>36.0.0.Beta1-SNAPSHOT</version>\n\n    <packaging>pom</packaging>\n\n    <name>WildFly: Parent Aggregator</name>\n    <description>WildFly: Parent Aggregator</description>\n\n    <licenses>\n        <license>\n            <name>Apache License 2.0</name>\n            <url>http://repository.jboss.org/licenses/apache-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <scm>\n        <connection>scm:git:${jboss.as.scm.connection}</connection>\n        <developerConnection>scm:git:${jboss.as.scm.connection}</developerConnection>\n        <url>${jboss.as.scm.url}</url>\n    </scm>\n\n    <properties>\n        <!-- Release Info.\n             Drives properties that end up in MANIFEST.mf files produced by this build\n             and some are also used in the pom 'scm' element.\n             Do not use these properties for other purpose.\n        -->\n        <jboss.as.release.codename>N/A</jboss.as.release.codename>\n        <jboss.as.scm.connection>git@github.com:wildfly/wildfly.git</jboss.as.scm.connection>\n        <jboss.as.scm.url>https://github.com/wildfly/wildfly</jboss.as.scm.url>\n\n        <!-- Other release identification information that drives how the built server identifies itself -->\n        <full.dist.product.release.name>WildFly</full.dist.product.release.name>\n        <full.dist.product.slot>main</full.dist.product.slot>\n        <full.dist.product.release.version>${project.version}</full.dist.product.release.version>\n        <full.maven.groupId>${project.groupId}</full.maven.groupId>\n        <full.maven.version>${project.version}</full.maven.version>\n        <ee.dist.product.release.name>WildFly EE</ee.dist.product.release.name>\n        <ee.dist.product.slot>${full.dist.product.slot}</ee.dist.product.slot>\n        <ee.dist.product.release.version>${full.dist.product.release.version}</ee.dist.product.release.version>\n        <ee.maven.groupId>${project.groupId}</ee.maven.groupId>\n        <ee.maven.version>${project.version}</ee.maven.version>\n        <product.docs.server.version>36</product.docs.server.version>\n        <!-- A short variant of product.release.version used in 'startsWith' tests done by dist verification logic -->\n        <verifier.product.release.version>${product.docs.server.version}.0</verifier.product.release.version>\n        <!-- The Galleon channel for the minor version with which this branch is associated.  -->\n        <galleon.minor.channel>${product.docs.server.version}.0</galleon.minor.channel>\n\n        <!-- Galleon -->\n        <galleon.fork.embedded>true</galleon.fork.embedded>\n        <galleon.log.time>true</galleon.log.time>\n        <galleon.offline>true</galleon.offline>\n\n        <!-- Checkstyle configuration -->\n        <linkXRef>false</linkXRef>\n\n        <!--\n            Build configuration.  Override JBoss Parent settings as necessary.\n            For example: <version.surefire.plugin>2.11</version.surefire.plugin>\n          -->\n        <maven.min.version>3.6.0</maven.min.version>\n\n        <!--\n             To build, we require a Java 17 or higher compiler, but with a Java 17\n             source and binary level.\n             We allow builds with a compiler version higher than 17 to allow\n             testing on later SE releases.\n\n             But, if the 'deploy' phase is executed, we restrict to only SE 17.\n             WildFly releases are built with SE 17.\n\n             See this pom's maven-enforcer-plugin configuration for the rules\n             that restrict the SE version used when building and deploying.\n         -->\n        <required.java.build.version>[17,)</required.java.build.version>\n        <required.java.deploy.version>[17,18)</required.java.deploy.version>\n        <maven.compiler.release>17</maven.compiler.release>\n        <maven.compiler.target>${maven.compiler.release}</maven.compiler.target>\n        <maven.compiler.source>${maven.compiler.release}</maven.compiler.source>\n\n        <!-- TarArchiver behavior -->\n        <assembly.tarLongFileMode>posix</assembly.tarLongFileMode>\n\n        <!--\n            Modularized JDK support. These are our recommended client-side JPMS settings.\n            This list should only be modified if we are making a change to our general\n            recommendation of what settings an external *client* application should use\n            *in order to utilize our client-side libraries*. It is not meant to cover\n            settings a client app might need to support it's own code.\n\n            This list is not meant to control server-side JPMS settings.\n\n            DO NOT add entries here just to support JPMS needs for specialized tests.\n            The testsuite/pom.xml declares a 'modular.jdk.testsuite.args' property that\n            defaults to ${modular.jdk.args}, i.e. this list. If particular tests need\n            additional settings to support client-side behavior in their test code,\n            then that property should be overridden in as fine-grained a location as\n            practical, and no more coarse-grained than the global config of the pom\n            for the maven module that includes the test.\n         -->\n        <modular.jdk.args>\n            --add-exports=java.desktop/sun.awt=ALL-UNNAMED\n            --add-exports=java.naming/com.sun.jndi.ldap=ALL-UNNAMED\n            --add-exports=java.naming/com.sun.jndi.url.ldap=ALL-UNNAMED\n            --add-exports=java.naming/com.sun.jndi.url.ldaps=ALL-UNNAMED\n            --add-exports=jdk.naming.dns/com.sun.jndi.dns=ALL-UNNAMED\n            --add-opens=java.base/java.io=ALL-UNNAMED\n            --add-opens=java.base/java.lang=ALL-UNNAMED\n            --add-opens=java.base/java.lang.invoke=ALL-UNNAMED\n            --add-opens=java.base/java.lang.reflect=ALL-UNNAMED\n            --add-opens=java.base/java.net=ALL-UNNAMED\n            --add-opens=java.base/java.security=ALL-UNNAMED\n            --add-opens=java.base/java.util=ALL-UNNAMED\n            --add-opens=java.base/java.util.concurrent=ALL-UNNAMED\n            --add-opens=java.management/javax.management=ALL-UNNAMED\n            --add-opens=java.naming/javax.naming=ALL-UNNAMED\n        </modular.jdk.args>\n        <security.manager.props></security.manager.props>\n\n        <!--\n            See ChildFirstClassLoaderBuilder in model-test for the explanation of the org.jboss.model.test.cache.root and org.jboss.model.test.classpath.cache properties.\n            If used in conjunction with org.jboss.model.test.classpath.cache -Dorg.jboss.model.test.cache.strict on the command line, transformers tests must\n            propagate these to the test when run\n         -->\n        <!-- The name of the root checkout folder to create org.jboss.model.test.classpath.cache under for subsystem-test and core-model-test -->\n        <org.jboss.model.test.cache.root>[pom.xml,testsuite]</org.jboss.model.test.cache.root>\n        <!-- Location relative to root that will be used for the cached legacy classpaths used by subsystem-test and core-model-test-->\n        <org.jboss.model.test.classpath.cache>target/model-test-classpath-cache</org.jboss.model.test.classpath.cache>\n\n        <!-- Properties that drive the names of various directories produced by and used in the build -->\n        <server.output.dir.prefix>wildfly</server.output.dir.prefix>\n        <!-- Version suffix that is appended to directories. Default is the maven GAV version but this can be edited to use a short form version -->\n        <server.output.dir.version>${project.version}</server.output.dir.version>\n\n        <!-- Properties related to the directory from which testsuite modules that don't create their own dists\n             should obtain the dist to test -->\n        <!-- First, prefix to add to the standard maven child project whose output should be used.\n             An empty value means no prefix.\n             Custom test jobs can override this using -D, e.g. -Dtestsuite.default.build.project.prefix=ee- -->\n        <testsuite.default.build.project.prefix></testsuite.default.build.project.prefix>\n        <wildfly.build.output.dir>${testsuite.default.build.project.prefix}build/target/${server.output.dir.prefix}-${server.output.dir.version}</wildfly.build.output.dir>\n\n        <!-- Protocol to use for communication with remote maven repositories.\n             You can set to 'http' if you are using a maven proxy and 'https'\n             interferes with that. Use 'https' for builds that will be released\n             to non-snapshot public maven repos -->\n        <maven.repository.protocol>https</maven.repository.protocol>\n        <!-- The full remote maven repo URL; can be overridden via -D for special use cases -->\n        <maven.repository.url>${maven.repository.protocol}://repository.jboss.org/nexus/content/groups/public/</maven.repository.url>\n\n        <!-- Surefire args -->\n        <surefire.extra.args></surefire.extra.args>\n        <surefire.jpda.args></surefire.jpda.args>\n        <surefire.non-modular.system.args>-ea -Duser.region=US -Duser.language=en ${surefire.jpda.args} ${surefire.extra.args} ${surefire.jacoco.args}</surefire.non-modular.system.args>\n        <surefire.system.args>${modular.jdk.args} ${security.manager.props} ${surefire.non-modular.system.args}</surefire.system.args>\n        <arquillian.servlet.protocol>Servlet 5.0</arquillian.servlet.protocol>\n        <testLogToFile>true</testLogToFile>\n        <maven.test.redirectTestOutputToFile>${testLogToFile}</maven.test.redirectTestOutputToFile>\n\n        <!-- Galleon feature pack to use in testsuite provisioning executions that provide content\n             that *could* be obtained solely from the wildfly-ee-galleon-pack or its dependencies.\n             Test jobs can override this using -D to test using different feature pack.\n        -->\n        <testsuite.ee.galleon.pack.groupId>${full.maven.groupId}</testsuite.ee.galleon.pack.groupId>\n        <testsuite.ee.galleon.pack.artifactId>wildfly-galleon-pack</testsuite.ee.galleon.pack.artifactId>\n        <testsuite.ee.galleon.pack.version>${full.maven.version}</testsuite.ee.galleon.pack.version>\n        <!-- Galleon feature pack to use in testsuite provisioning executions that provide content\n             that *cannot* be obtained solely from the wildfly-ee-galleon-pack or its dependencies.\n             Test jobs can override this using -D to test using a different feature pack.\n        -->\n        <testsuite.full.galleon.pack.groupId>${full.maven.groupId}</testsuite.full.galleon.pack.groupId>\n        <testsuite.full.galleon.pack.artifactId>wildfly-galleon-pack</testsuite.full.galleon.pack.artifactId>\n        <testsuite.full.galleon.pack.version>${full.maven.version}</testsuite.full.galleon.pack.version>\n        <!-- Galleon feature pack to use in testsuite provisioning executions that install test-specific content.\n             Profiles can set this to wildfly-test-feature-pack-preview when testing wildfly-preview.\n        -->\n        <testsuite.test.feature.pack.artifactId>wildfly-test-feature-pack</testsuite.test.feature.pack.artifactId>\n\n        <!-- WildFly Channels based provisioning configuration.\n             By default, if channels drive the provisioning we use the 'wildfly' channel.\n             Profiles that focus on wildfly-preview or wildfly-ee can change that.\n         -->\n        <channels.maven.groupId>${project.groupId}.channels</channels.maven.groupId>\n        <channels.maven.artifactId>wildfly</channels.maven.artifactId>\n        <channels.maven.version>${full.maven.version}</channels.maven.version>\n\n\n        <!-- Properties that set the phase used for different plugin executions.\n             Profiles can override the values here to enable/disable executions.\n             A value of 'none' disables the execution; to enable set the value to the\n             normal phase for the goal.\n             This setup allows the bulk of the execution configuration to be in the\n             default build config (and thus shared in different profiles) while\n             still being easily disabled in profiles where it is not wanted. -->\n        <surefire.default-test.phase>test</surefire.default-test.phase>\n\n        <!-- Base wildfly version used by testsuite/galleon/update test to install a server that gets updated to the SNAPSHOT version -->\n        <wildfly.test.galleon.update.base.version>26.1.1.Final</wildfly.test.galleon.update.base.version>\n\n        <!--\n            Dependency version properties begin here. All other properties should be above.\n\n            Properties are grouped by whether they solely relate to plugins, solely relate to test code,\n            or impact production code.\n\n            Each version property should be of the form \"version.<groupId>\".\n            For example: <version.org.jboss.as>\n\n            In cases where multiple artifacts use the same groupId but have different\n            versions, add the artifactId or other qualifier to the property name.\n\n            In cases where multiple artifacts use the same groupId but have different\n            versions, add the artifactId or other qualifier to the property name.\n            For example: <version.org.jboss.hal.release-stream>\n\n            Version properties MUST be sorted alphabetically. Except...\n\n            For properties only used for building or testing legacy code not used in\n            standard WildFly or WildFly Preview, prefix the property name with 'legacy.'\n            For properties only used for building WildFly Preview modules, prefix the property name with 'preview'.\n            Place the prefixed property in the proper alphabetical location as if the prefix was not present.\n            In the typical case where there's also the same property without a prefix, put the prefixed\n            variants after the non-prefixed one.\n        -->\n\n        <!--\n            *Plugin* Dependency versions. Please keep alphabetical.\n\n            Properties for dependencies that are not *solely* related to plugins go in the sections below.\n\n            This is not limited to plugin versions. Other artifacts that those plugins depend upon can go here\n            if they are not otherwise used.\n         -->\n        <version.ant.junit>1.10.15</version.ant.junit>\n        <version.asciidoctor.plugin>2.2.6</version.asciidoctor.plugin>\n        <version.org.jacoco>0.8.12</version.org.jacoco>\n        <version.org.jboss.galleon>6.0.4.Final</version.org.jboss.galleon>\n        <version.org.jboss.wildscribe>3.1.0.Final</version.org.jboss.wildscribe>\n        <version.org.owasp.dependency-check>10.0.2</version.org.owasp.dependency-check>\n        <version.org.wildfly.bom-builder-plugin>2.0.8.Final</version.org.wildfly.bom-builder-plugin>\n        <version.org.wildfly.checkstyle-config>1.0.8.Final</version.org.wildfly.checkstyle-config>\n        <version.org.wildfly.common>1.6.0.Final</version.org.wildfly.common>\n        <version.org.wildfly.galleon-plugins>7.3.1.Final</version.org.wildfly.galleon-plugins>\n        <version.org.wildfly.glow>1.2.0.Final</version.org.wildfly.glow>\n        <version.org.wildfly.licenses.plugin>2.4.1.Final</version.org.wildfly.licenses.plugin>\n        <version.org.wildfly.plugin>5.1.0.Final</version.org.wildfly.plugin>\n        <version.org.wildfly.unstable.annotation.api>1.0.0.Final</version.org.wildfly.unstable.annotation.api>\n        <version.org.wildfly.wildfly-channel-plugin>1.0.20</version.org.wildfly.wildfly-channel-plugin>\n        <version.verifier.plugin>1.1</version.verifier.plugin>\n        <version.xml.plugin>1.0.2</version.xml.plugin>\n\n        <!--\n            *Non-plugin* TEST CODE dependency versions. Please keep alphabetical.\n\n            Properties for dependencies that solely relate to maven plugins go in the plugin section above.\n            Properties for dependencies that relate to production code go in the production code section below.\n         -->\n        <version.com.beust>1.78</version.com.beust>\n        <version.org.wiremock>3.9.2</version.org.wiremock>\n        <version.dom4j>2.1.4</version.dom4j>\n        <version.httpunit>1.7.3</version.httpunit>\n        <legacy.version.io.netty>4.0.19.Final</legacy.version.io.netty>\n        <version.io.rest-assured>5.5.0</version.io.rest-assured>\n        <legacy.version.jakarta.enterprise>2.0.2</legacy.version.jakarta.enterprise>\n        <legacy.version.jakarta.inject.jakarta.inject-api>1.0.5</legacy.version.jakarta.inject.jakarta.inject-api>\n        <version.jaxen>1.1.6</version.jaxen>\n        <version.jsoup>1.15.4</version.jsoup>\n        <version.junit>4.13.2</version.junit>\n        <version.org.apache.ds>2.0.0.AM26</version.org.apache.ds>\n        <version.org.apache.groovy>4.0.24</version.org.apache.groovy>\n        <version.org.assertj>3.26.3</version.org.assertj>\n        <version.org.awaitility.awaitility>4.0.3</version.org.awaitility.awaitility>\n        <version.org.codehaus.plexus.plexus-utils>3.5.1</version.org.codehaus.plexus.plexus-utils>\n        <version.org.eclipse.jetty>11.0.24</version.org.eclipse.jetty>\n        <version.org.hamcrest>2.2</version.org.hamcrest>\n        <version.org.hamcrest.legacy>1.3</version.org.hamcrest.legacy>\n        <version.org.javassist>3.29.2-GA</version.org.javassist>\n        <version.org.jboss.arquillian.core>1.9.2.Final</version.org.jboss.arquillian.core>\n        <version.org.jboss.arquillian.jakarta>10.0.0.Final</version.org.jboss.arquillian.jakarta>\n        <version.org.jboss.arquillian.testcontainers>1.0.0.Alpha3</version.org.jboss.arquillian.testcontainers>\n        <version.org.jboss.byteman>4.0.24</version.org.jboss.byteman>\n        <version.org.jboss.logmanager.commons-logging-jboss-logmanager>1.0.3.Final</version.org.jboss.logmanager.commons-logging-jboss-logmanager>\n        <!-- only needed here until wildfly-arquillian has this version properly synced with arquillian itself  -->\n        <version.org.jboss.shrinkwrap.descriptors>2.0.0</version.org.jboss.shrinkwrap.descriptors>\n        <!-- It's currently required to use 2.2.7. The wildfly-model-test and wildfly-subsystem-test dependencies bring\n             in older versions of the org.apache.maven.resolver:* dependencies which are not compatible with newer\n             versions of the Shrinkwrap Resolvers. -->\n        <version.org.jboss.shrinkwrap.resolvers>2.2.7</version.org.jboss.shrinkwrap.resolvers>\n        <version.org.jboss.shrinkwrap.shrinkwrap>1.2.6</version.org.jboss.shrinkwrap.shrinkwrap>\n        <legacy.version.org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec>2.0.0.Final</legacy.version.org.jboss.spec.javax.jms.jboss-jms-api_2.0_spec>\n        <version.org.jboss.spec.javax.servlet.jboss-servlet-api_4.0_spec>2.0.0.Final</version.org.jboss.spec.javax.servlet.jboss-servlet-api_4.0_spec>\n        <version.org.junit>5.10.5</version.org.junit>\n        <version.org.keycloak>25.0.6</version.org.keycloak>\n        <version.org.mockito>5.14.2</version.org.mockito>\n        <version.org.syslog4j>0.9.30</version.org.syslog4j>\n        <version.org.testcontainers>1.20.4</version.org.testcontainers>\n        <version.org.testng>7.8.0</version.org.testng>\n        <!-- The MicroProfile REST Client TCK requires a newer version of TestNG. The version is explicitly overridden\n             on the dependency on the MicroProfile REST Client TCK POM.\n         -->\n        <version.org.testng.mp.rest.client>7.10.2</version.org.testng.mp.rest.client>\n        <version.org.wildfly.arquillian>5.1.0.Beta9</version.org.wildfly.arquillian>\n        <version.org.wildfly.extras.creaper>2.0.3</version.org.wildfly.extras.creaper>\n        <legacy.version.org.wildfly.naming-client>1.0.17.Final</legacy.version.org.wildfly.naming-client>\n\n        <!--\n            *Non-plugin* PRODUCTION CODE dependency versions. Please keep alphabetical.\n\n            Properties for dependencies that solely relate to maven plugins go in the plugin section above.\n            Properties for dependencies that solely relate to tests go in the test code section above.\n         -->\n        <version.antlr>4.13.0</version.antlr>\n        <version.com.carrotsearch.hppc>0.10.0</version.com.carrotsearch.hppc>\n        <version.com.fasterxml.classmate>1.5.1</version.com.fasterxml.classmate>\n        <version.com.fasterxml.jackson>2.18.2</version.com.fasterxml.jackson>\n        <version.com.fasterxml.jackson.databind>${version.com.fasterxml.jackson}</version.com.fasterxml.jackson.databind>\n        <version.com.fasterxml.jackson.jr.jackson-jr-objects>${version.com.fasterxml.jackson}</version.com.fasterxml.jackson.jr.jackson-jr-objects>\n        <version.com.github.ben-manes.caffeine>3.1.8</version.com.github.ben-manes.caffeine>\n        <version.com.github.fge.btf>1.2</version.com.github.fge.btf>\n        <version.com.github.fge.jackson-coreutils>1.8</version.com.github.fge.jackson-coreutils>\n        <version.com.github.fge.json-patch>1.9</version.com.github.fge.json-patch>\n        <version.com.github.fge.msg-simple>1.1</version.com.github.fge.msg-simple>\n        <version.com.github.luben.zstd-jni>1.5.6-8</version.com.github.luben.zstd-jni>\n        <version.com.google.api.grpc>2.0.1</version.com.google.api.grpc>\n        <version.com.google.code.gson>2.8.9</version.com.google.code.gson>\n        <version.com.google.guava>33.0.0-jre</version.com.google.guava>\n        <version.com.google.guava.failureaccess>1.0.2</version.com.google.guava.failureaccess>\n        <version.com.google.protobuf>4.28.3</version.com.google.protobuf>\n        <version.com.h2database>2.2.224</version.com.h2database>\n        <version.com.ibm.async.asyncutil>0.1.0</version.com.ibm.async.asyncutil>\n        <version.com.microsoft.azure>8.6.6</version.com.microsoft.azure>\n        <version.com.nimbus.jose-jwt>9.37.3</version.com.nimbus.jose-jwt>\n        <legacy.version.com.squareup.okhttp>3.14.9</legacy.version.com.squareup.okhttp>\n        <legacy.version.com.squareup.okio>1.17.6</legacy.version.com.squareup.okio>\n        <version.com.squareup.protoparser>4.0.3</version.com.squareup.protoparser>\n        <version.com.sun.istack>4.1.2</version.com.sun.istack>\n        <version.com.sun.xml.fastinfoset>2.1.1</version.com.sun.xml.fastinfoset>\n        <version.com.sun.xml.messaging.saaj>3.0.0</version.com.sun.xml.messaging.saaj>\n        <version.commons-beanutils>1.9.4</version.commons-beanutils>\n        <version.commons-codec>1.17.1</version.commons-codec>\n        <version.commons-collections>3.2.2</version.commons-collections>\n        <version.commons-io>2.16.1</version.commons-io>\n        <version.de.dentrassi.crypto>2.4.0</version.de.dentrassi.crypto>\n        <version.gnu.getopt>1.0.13</version.gnu.getopt>\n        <version.io.agroal>2.0</version.io.agroal>\n        <version.io.github.resilience4j>2.2.0</version.io.github.resilience4j>\n        <version.io.grpc>1.68.0</version.io.grpc>\n        <version.io.micrometer>1.14.2</version.io.micrometer>\n        <version.io.netty>4.1.116.Final</version.io.netty>\n        <version.io.opentelemetry.instrumentation>2.8.0</version.io.opentelemetry.instrumentation>\n        <version.io.opentelemetry.opentelemetry-semconv>1.25.0-alpha</version.io.opentelemetry.opentelemetry-semconv>\n        <version.io.opentelemetry.opentelemetry>1.42.1</version.io.opentelemetry.opentelemetry>\n        <version.io.opentelemetry.proto>1.3.2-alpha</version.io.opentelemetry.proto>\n        <version.io.perfmark>0.23.0</version.io.perfmark>\n        <version.io.reactivex.rxjava2>2.2.21</version.io.reactivex.rxjava2>\n        <version.io.reactivex.rxjava3>3.1.10</version.io.reactivex.rxjava3>\n        <version.io.smallrye.open-api>4.0.5</version.io.smallrye.open-api>\n        <version.io.smallrye.reactive-utils>2.6.0</version.io.smallrye.reactive-utils>\n        <version.io.smallrye.smallrye-common>2.5.0</version.io.smallrye.smallrye-common>\n        <version.io.smallrye.smallrye-config>3.9.1</version.io.smallrye.smallrye-config>\n        <version.io.smallrye.smallrye-fault-tolerance>6.7.2</version.io.smallrye.smallrye-fault-tolerance>\n        <version.io.smallrye.smallrye-health>4.0.4</version.io.smallrye.smallrye-health>\n        <version.io.smallrye.smallrye-jwt>4.3.1</version.io.smallrye.smallrye-jwt>\n        <version.io.smallrye.smallrye-mutiny>2.6.2</version.io.smallrye.smallrye-mutiny>\n        <version.io.smallrye.smallrye-mutiny-vertx>3.13.2</version.io.smallrye.smallrye-mutiny-vertx>\n        <version.io.smallrye.smallrye-mutiny-zero>1.1.0</version.io.smallrye.smallrye-mutiny-zero>\n        <version.io.smallrye.smallrye-opentelemetry>2.9.2</version.io.smallrye.smallrye-opentelemetry>\n        <version.io.smallrye.smallrye-reactive-messaging>4.24.0</version.io.smallrye.smallrye-reactive-messaging>\n        <version.io.undertow.jastow>2.2.8.Final</version.io.undertow.jastow>\n        <version.io.vertx.vertx>4.5.10</version.io.vertx.vertx>\n        <version.io.vertx.vertx-kafka-client>4.4.9</version.io.vertx.vertx-kafka-client>\n        <version.jakarta.activation.jakarta.activation-api>2.1.3</version.jakarta.activation.jakarta.activation-api>\n        <version.jakarta.annotation.jakarta-annotation-api>2.1.1</version.jakarta.annotation.jakarta-annotation-api>\n        <version.jakarta.batch.jakarta.batch-api>2.1.1</version.jakarta.batch.jakarta.batch-api>\n        <version.jakarta.data.jakarta-data-api>1.0.1</version.jakarta.data.jakarta-data-api>\n        <version.jakarta.ejb.jakarta-ejb-api>4.0.1</version.jakarta.ejb.jakarta-ejb-api>\n        <version.jakarta.enterprise.concurrent.jakarta-enterprise.concurrent-api>3.0.3</version.jakarta.enterprise.concurrent.jakarta-enterprise.concurrent-api>\n        <version.jakarta.enterprise>4.0.1</version.jakarta.enterprise>\n        <version.jakarta.faces.jakarta-faces-api>4.0.1</version.jakarta.faces.jakarta-faces-api>\n        <version.jakarta.faces>4.0.8</version.jakarta.faces>\n        <version.jakarta.inject.jakarta.inject-api>2.0.1</version.jakarta.inject.jakarta.inject-api>\n        <version.jakarta.jms.jakarta-jms-api>3.1.0</version.jakarta.jms.jakarta-jms-api>\n        <version.jakarta.json.bind.api>3.0.1</version.jakarta.json.bind.api>\n        <version.jakarta.mail-api>2.1.3</version.jakarta.mail-api>\n        <version.jakarta.mvc.jakarta-mvc-api>2.1.0</version.jakarta.mvc.jakarta-mvc-api>\n        <version.jakarta.persistence>3.1.0</version.jakarta.persistence>\n        <version.jakarta.resource.jakarta-resource-api>2.1.0</version.jakarta.resource.jakarta-resource-api>\n        <version.jakarta.security.enterprise>3.0.0</version.jakarta.security.enterprise>\n        <version.jakarta.servlet.jakarta-servlet-api>6.0.0</version.jakarta.servlet.jakarta-servlet-api>\n        <version.jakarta.servlet.jsp.jakarta-servlet-jsp-api>3.1.1</version.jakarta.servlet.jsp.jakarta-servlet-jsp-api>\n        <version.jakarta.servlet.jsp.jstl.jakarta-servlet-jsp-jstl-api>3.0.2</version.jakarta.servlet.jsp.jstl.jakarta-servlet-jsp-jstl-api>\n        <version.jakarta.transaction.jakarta-transaction-api>2.0.1</version.jakarta.transaction.jakarta-transaction-api>\n        <version.jakarta.validation.jakarta-validation-api>3.0.2</version.jakarta.validation.jakarta-validation-api>\n        <version.jakarta.websocket.jakarta-websocket-api>2.1.1</version.jakarta.websocket.jakarta-websocket-api>\n        <version.jakarta.ws.rs.jakarta-ws-rs-api>3.1.0</version.jakarta.ws.rs.jakarta-ws-rs-api>\n        <version.jakarta.xml.bind.jakarta-xml-bind-api>4.0.2</version.jakarta.xml.bind.jakarta-xml-bind-api>\n        <version.jboss.jaxbintros>2.0.1</version.jboss.jaxbintros>\n        <version.joda-time>2.12.7</version.joda-time>\n        <version.net.jcip>1.0</version.net.jcip>\n        <version.net.shibboleth.utilities.java-support>8.0.0</version.net.shibboleth.utilities.java-support>\n        <version.org.apache.activemq.artemis>2.38.0</version.org.apache.activemq.artemis>\n        <version.org.apache.activemq.artemis.native>2.0.0</version.org.apache.activemq.artemis.native>\n        <version.org.apache.avro>1.12.0</version.org.apache.avro>\n        <version.org.apache.cxf>4.0.6</version.org.apache.cxf>\n        <version.org.apache.cxf.xjcplugins>4.0.1</version.org.apache.cxf.xjcplugins>\n        <version.org.apache.httpcomponents.httpasyncclient>4.1.5</version.org.apache.httpcomponents.httpasyncclient>\n        <version.org.apache.james.apache-mime4j>0.8.11</version.org.apache.james.apache-mime4j>\n        <version.org.apache.kafka>3.9.0</version.org.apache.kafka>\n        <version.org.apache.kafka.test-image>3.8.0</version.org.apache.kafka.test-image>\n        <version.org.apache.lucene>9.11.1</version.org.apache.lucene>\n        <version.org.apache.neethi>3.2.1</version.org.apache.neethi>\n        <version.org.apache.qpid.proton>0.34.1</version.org.apache.qpid.proton>\n        <version.org.apache.santuario>3.0.5</version.org.apache.santuario>\n        <version.org.apache.velocity>2.3</version.org.apache.velocity>\n        <version.org.apache.wss4j>3.0.4</version.org.apache.wss4j>\n        <version.org.apache.ws.xmlschema>2.3.0</version.org.apache.ws.xmlschema>\n        <version.org.bitbucket.jose4j>0.9.6</version.org.bitbucket.jose4j>\n        <version.org.bytebuddy>1.14.18</version.org.bytebuddy>\n        <version.org.codehaus.woodstox.stax2-api>4.2.2</version.org.codehaus.woodstox.stax2-api>\n        <version.org.codehaus.woodstox.woodstox-core>7.0.0</version.org.codehaus.woodstox.woodstox-core>\n        <version.org.cryptacular>1.2.5</version.org.cryptacular>\n        <version.org.eclipse.angus.angus-activation>2.0.2</version.org.eclipse.angus.angus-activation>\n        <version.org.eclipse.angus.angus-mail>2.0.3</version.org.eclipse.angus.angus-mail>\n        <version.org.eclipse.jdt>3.32.0</version.org.eclipse.jdt>\n        <version.org.eclipse.microprofile>7.0</version.org.eclipse.microprofile>\n        <version.org.eclipse.microprofile.config.api>3.1</version.org.eclipse.microprofile.config.api>\n        <version.org.eclipse.microprofile.fault-tolerance.api>4.1.1</version.org.eclipse.microprofile.fault-tolerance.api>\n        <version.org.eclipse.microprofile.health.api>4.0.1</version.org.eclipse.microprofile.health.api>\n        <version.org.eclipse.microprofile.jwt.api>2.1</version.org.eclipse.microprofile.jwt.api>\n        <version.org.eclipse.microprofile.lra.api>2.0</version.org.eclipse.microprofile.lra.api>\n        <version.org.eclipse.microprofile.openapi>4.0.2</version.org.eclipse.microprofile.openapi>\n        <version.org.eclipse.microprofile.reactive-messaging.api>3.0.1</version.org.eclipse.microprofile.reactive-messaging.api>\n        <version.org.eclipse.microprofile.reactive-streams-operators.api>3.0.1</version.org.eclipse.microprofile.reactive-streams-operators.api>\n        <version.org.eclipse.microprofile.rest.client.api>4.0</version.org.eclipse.microprofile.rest.client.api>\n        <version.org.eclipse.microprofile.telemetry>2.0.1</version.org.eclipse.microprofile.telemetry>\n        <version.org.eclipse.persistence.eclipselink>4.0.4</version.org.eclipse.persistence.eclipselink>\n        <version.org.eclipse.yasson>3.0.4</version.org.eclipse.yasson>\n        <version.org.elasticsearch.client.rest-client>8.15.4</version.org.elasticsearch.client.rest-client>\n        <version.org.glassfish.expressly>5.0.0</version.org.glassfish.expressly>\n        <version.org.glassfish.jakarta.enterprise.concurrent>3.0.0</version.org.glassfish.jakarta.enterprise.concurrent>\n        <version.org.glassfish.jaxb>4.0.5</version.org.glassfish.jaxb>\n        <version.org.glassfish.jaxb.jaxb-xjc>${version.org.glassfish.jaxb}</version.org.glassfish.jaxb.jaxb-xjc>\n        <version.org.glassfish.soteria>3.0.3</version.org.glassfish.soteria>\n        <version.org.glassfish.web.jakarta.servlet.jsp.jstl>3.0.1-jbossorg-1</version.org.glassfish.web.jakarta.servlet.jsp.jstl>\n        <version.org.hibernate.commons.annotations>7.0.3.Final</version.org.hibernate.commons.annotations>\n        <version.org.hibernate>6.6.3.Final</version.org.hibernate>\n        <version.org.hibernate.search>7.2.2.Final</version.org.hibernate.search>\n        <version.org.hibernate.validator>8.0.2.Final</version.org.hibernate.validator>\n        <version.org.hornetq>2.4.11.Final</version.org.hornetq>\n        <version.org.infinispan>15.0.11.Final</version.org.infinispan>\n        <version.org.jasypt>1.9.3</version.org.jasypt>\n        <version.org.jberet>3.1.0.Final</version.org.jberet>\n        <version.org.jboss.activemq.artemis.integration>2.0.3.Final</version.org.jboss.activemq.artemis.integration>\n        <version.org.jboss.common.jboss-common-beans>2.0.1.Final</version.org.jboss.common.jboss-common-beans>\n        <version.org.jboss.ejb-client>5.0.8.Final</version.org.jboss.ejb-client>\n        <version.org.jboss.ejb3.ext-api>2.4.0.Final</version.org.jboss.ejb3.ext-api>\n        <version.org.jboss.genericjms>3.0.0.Final</version.org.jboss.genericjms>\n        <version.org.jboss.hal.console>3.7.7.Final</version.org.jboss.hal.console>\n        <version.org.jboss.iiop-client>2.0.1.Final</version.org.jboss.iiop-client>\n        <version.org.jboss.ironjacamar>3.0.10.Final</version.org.jboss.ironjacamar>\n        <version.org.jboss.jboss-transaction-spi>8.0.0.Final</version.org.jboss.jboss-transaction-spi>\n        <version.org.jboss.metadata>16.0.0.Final</version.org.jboss.metadata>\n        <version.org.jboss.mod_cluster>2.1.0.Final</version.org.jboss.mod_cluster>\n        <version.org.jboss.narayana>7.1.0.Final</version.org.jboss.narayana>\n        <version.org.jboss.narayana.lra>0.0.9.Final</version.org.jboss.narayana.lra>\n        <version.org.jboss.openjdk-orb>10.1.0.Final</version.org.jboss.openjdk-orb>\n        <version.org.jboss.resteasy>6.2.11.Final</version.org.jboss.resteasy>\n        <version.org.jboss.resteasy.extensions>2.0.1.Final</version.org.jboss.resteasy.extensions>\n        <version.org.jboss.resteasy.microprofile>3.0.0.Final</version.org.jboss.resteasy.microprofile>\n        <version.org.jboss.resteasy.spring>3.2.0.Final</version.org.jboss.resteasy.spring>\n        <version.org.jboss.spec.jakarta.el.jboss-el-api_5.0_spec>4.0.1.Final</version.org.jboss.spec.jakarta.el.jboss-el-api_5.0_spec>\n        <version.org.jboss.spec.jakarta.xml.soap.saaj-api_3.0_spec>1.0.0.Final</version.org.jboss.spec.jakarta.xml.soap.saaj-api_3.0_spec>\n        <version.org.jboss.spec.jakarta.xml.ws.api_4.0_spec>1.0.0.Final</version.org.jboss.spec.jakarta.xml.ws.api_4.0_spec>\n        <version.org.jboss.universe.community>1.2.0.Final</version.org.jboss.universe.community>\n        <version.org.jboss.universe.producer.wildfly>1.3.11.Final</version.org.jboss.universe.producer.wildfly>\n        <version.org.jboss.weld.weld>5.1.4.Final</version.org.jboss.weld.weld>\n        <version.org.jboss.weld.weld-api>5.0.SP3</version.org.jboss.weld.weld-api>\n        <version.org.jboss.ws.api>3.0.0.Final</version.org.jboss.ws.api>\n        <version.org.jboss.ws.common>5.1.0.Final</version.org.jboss.ws.common>\n        <version.org.jboss.ws.common.tools>2.1.0.Final</version.org.jboss.ws.common.tools>\n        <version.org.jboss.ws.cxf>7.3.1.Final</version.org.jboss.ws.cxf>\n        <version.org.jboss.ws.jaxws-undertow-httpspi>2.0.0.Final</version.org.jboss.ws.jaxws-undertow-httpspi>\n        <version.org.jboss.ws.spi>5.0.0.Final</version.org.jboss.ws.spi>\n        <version.org.jboss.xnio.netty.netty-xnio-transport>0.1.10.Final</version.org.jboss.xnio.netty.netty-xnio-transport>\n        <version.org.jctools.jctools-core>4.0.5</version.org.jctools.jctools-core>\n        <version.org.jgroups>5.3.13.Final</version.org.jgroups>\n        <version.org.jgroups.aws>3.0.0.Final</version.org.jgroups.aws>\n        <version.org.jgroups.azure>2.0.2.Final</version.org.jgroups.azure>\n        <version.org.jgroups.kubernetes>2.0.2.Final</version.org.jgroups.kubernetes>\n        <version.org.jipijapa>1.0.1.Final</version.org.jipijapa>\n        <version.org.jvnet.staxex>2.1.0</version.org.jvnet.staxex>\n        <version.org.keycloak.keycloak-saml-wildfly-subsystem>18.0.2</version.org.keycloak.keycloak-saml-wildfly-subsystem>\n        <version.org.kohsuke.metainf-services>1.11</version.org.kohsuke.metainf-services>\n        <version.org.lz4.lz4-java>1.8.0</version.org.lz4.lz4-java>\n        <version.org.opensaml.opensaml>4.3.2</version.org.opensaml.opensaml>\n        <version.org.ow2.asm>9.7.1</version.org.ow2.asm>\n        <version.org.reactivestreams>1.0.4</version.org.reactivestreams>\n        <version.org.wildfly.clustering>5.0.4.Final</version.org.wildfly.clustering>\n        <version.org.wildfly.core>27.0.0.Final</version.org.wildfly.core>\n        <version.org.wildfly.http-client>2.0.7.Final</version.org.wildfly.http-client>\n        <version.org.wildfly.launcher>1.0.0.Final</version.org.wildfly.launcher>\n        <version.org.wildfly.mvc.krazo>1.0.0.Final</version.org.wildfly.mvc.krazo>\n        <version.org.wildfly.vertx>1.0.2.Final</version.org.wildfly.vertx>\n        <version.org.wildfly.naming-client>2.0.1.Final</version.org.wildfly.naming-client>\n        <version.org.wildfly.security.elytron-tests-common>2.4.2.Final</version.org.wildfly.security.elytron-tests-common>\n        <version.org.wildfly.security.elytron-mp>2.0.0.Final</version.org.wildfly.security.elytron-mp>\n        <version.org.wildfly.transaction.client>3.0.5.Final</version.org.wildfly.transaction.client>\n        <preview.version.org.wildfly.wildfly-ee-9-deployment-transformer>2.0.0.Final</preview.version.org.wildfly.wildfly-ee-9-deployment-transformer>\n        <version.software.amazon.awssdk>2.20.126</version.software.amazon.awssdk>\n        <version.software.amazon.eventstream>1.0.1</version.software.amazon.eventstream>\n        <version.org.xerial.snappy.snappy-java>1.1.10.5</version.org.xerial.snappy.snappy-java>\n        <version.sun.jaxb>${version.org.glassfish.jaxb}</version.sun.jaxb>\n        <version.wsdl4j>1.6.3</version.wsdl4j>\n        <version.xml-resolver>1.2</version.xml-resolver>\n\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n\n            <!-- Import the core parent to get all the managed dependencies from core -->\n            <dependency>\n                <groupId>org.wildfly.core</groupId>\n                <artifactId>wildfly-core-parent</artifactId>\n                <version>${version.org.wildfly.core}</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n            <!-- Keep sorted -->\n\n            <dependency>\n                <groupId>${channels.maven.groupId}</groupId>\n                <artifactId>wildfly</artifactId>\n                <version>${full.maven.version}</version>\n                <type>yaml</type>\n                <classifier>manifest</classifier>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-common-ee-dependency-management</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-common-expansion-dependency-management</artifactId>\n                <version>${full.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-ee-build</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${channels.maven.groupId}</groupId>\n                <artifactId>wildfly-ee</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>yaml</type>\n                <classifier>manifest</classifier>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-ee-dist</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-ee-feature-pack-galleon-local</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-ee-feature-pack-galleon-local</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>zip</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-ee-feature-pack-galleon-shared</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-ee-feature-pack-galleon-shared</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>zip</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-ee-galleon-pack</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-ee-galleon-pack</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>zip</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-legacy-ee-bom</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-preview-build</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${channels.maven.groupId}</groupId>\n                <artifactId>wildfly-preview</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>yaml</type>\n                <classifier>manifest</classifier>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-preview-dist</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-preview-ee-bom</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-preview-expansion-bom</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-preview-feature-pack</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-preview-feature-pack</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>zip</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-preview-feature-pack-galleon-local</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-preview-feature-pack-galleon-local</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>zip</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-preview-test-bom</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-preview-test-expansion-bom</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-standard-ee-bom</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-standard-expansion-bom</artifactId>\n                <version>${full.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${ee.maven.groupId}</groupId>\n                <artifactId>wildfly-standard-test-bom</artifactId>\n                <version>${ee.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-build</artifactId>\n                <version>${full.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-dist</artifactId>\n                <version>${full.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-feature-pack-galleon-local</artifactId>\n                <version>${full.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-feature-pack-galleon-shared</artifactId>\n                <version>${full.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-galleon-pack</artifactId>\n                <version>${full.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-galleon-pack</artifactId>\n                <version>${full.maven.version}</version>\n                <type>zip</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-legacy-expansion-bom</artifactId>\n                <version>${full.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-release</artifactId>\n                <version>${full.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>${full.maven.groupId}</groupId>\n                <artifactId>wildfly-standard-test-expansion-bom</artifactId>\n                <version>${full.maven.version}</version>\n                <type>pom</type>\n            </dependency>\n\n            <dependency>\n                <groupId>org.wildfly.checkstyle</groupId>\n                <artifactId>wildfly-checkstyle-config</artifactId>\n                <version>${version.org.wildfly.checkstyle-config}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.wildfly.galleon-plugins</groupId>\n                <artifactId>wildfly-config-gen</artifactId>\n                <version>${version.org.wildfly.galleon-plugins}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>*</groupId>\n                        <artifactId>*</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.wildfly.galleon-plugins</groupId>\n                <artifactId>wildfly-galleon-plugins</artifactId>\n                <version>${version.org.wildfly.galleon-plugins}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.jboss.galleon</groupId>\n                        <artifactId>*</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>org.keycloak</groupId>\n                <artifactId>keycloak-services</artifactId>\n                <version>${version.org.keycloak}</version>\n                <scope>test</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jboss.universe</groupId>\n                <artifactId>community-universe</artifactId>\n                <version>${version.org.jboss.universe.community}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.jboss.universe.producer</groupId>\n                <artifactId>wildfly-producers</artifactId>\n                <version>${version.org.jboss.universe.producer.wildfly}</version>\n            </dependency>\n        </dependencies>\n\n    </dependencyManagement>\n\n    <repositories>\n        <repository>\n            <releases>\n                <enabled>true</enabled>\n                <updatePolicy>never</updatePolicy>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n                <updatePolicy>never</updatePolicy>\n            </snapshots>\n            <id>jboss-public-repository-group</id>\n            <name>JBoss Public Repository Group</name>\n            <url>${maven.repository.url}</url>\n            <layout>default</layout>\n        </repository>\n    </repositories>\n\n    <pluginRepositories>\n        <pluginRepository>\n            <releases>\n                <enabled>true</enabled>\n            </releases>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n            <id>jboss-public-repository-group</id>\n            <name>JBoss Public Repository Group</name>\n            <url>${maven.repository.url}</url>\n        </pluginRepository>\n    </pluginRepositories>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-jar-plugin</artifactId>\n                    <version>${version.jar.plugin}</version>\n                    <configuration>\n                        <archive>\n                            <manifestEntries>\n                                <Scm-Url>${jboss.as.scm.url}</Scm-Url>\n                                <JBossAS-Release-Version>${project.version}</JBossAS-Release-Version>\n                                <JBossAS-Release-Codename>${jboss.as.release.codename}</JBossAS-Release-Codename>\n                            </manifestEntries>\n                        </archive>\n                        <!-- Do not package the generated logging properties as the generated binaries will be packaged -->\n                        <!-- These files are not required at runtime -->\n                        <excludes>\n                            <exclude>**/*.i18n.properties</exclude>\n                            <exclude>**/*.i18n_*.properties</exclude>\n                        </excludes>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-surefire-plugin</artifactId>\n                    <version>${version.surefire.plugin}</version>\n                    <configuration>\n                        <redirectTestOutputToFile>${maven.test.redirectTestOutputToFile}</redirectTestOutputToFile>\n                        <enableAssertions>true</enableAssertions>\n                        <systemPropertyVariables>\n                            <org.jboss.model.test.cache.root>${org.jboss.model.test.cache.root}</org.jboss.model.test.cache.root>\n                            <org.jboss.model.test.classpath.cache>${org.jboss.model.test.classpath.cache}</org.jboss.model.test.classpath.cache>\n                            <org.jboss.model.test.cache.strict>true</org.jboss.model.test.cache.strict>\n                            <!--<org.jboss.model.test.maven.repository.urls>${org.jboss.model.test.maven.repository.urls}</org.jboss.model.test.maven.repository.urls>-->\n                            <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n                            <jdk.xml.enableTemplatesImplDeserialization>true</jdk.xml.enableTemplatesImplDeserialization>\n                        </systemPropertyVariables>\n                        <argLine>${surefire.system.args}</argLine>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-javadoc-plugin</artifactId>\n                    <configuration>\n                        <doclint>none</doclint>\n                    </configuration>\n                </plugin>\n                <!-- Checkstyle -->\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-checkstyle-plugin</artifactId>\n                    <version>${version.checkstyle.plugin}</version>\n                    <executions>\n                        <execution>\n                            <id>check-style</id>\n                            <phase>compile</phase>\n                            <goals>\n                                <goal>checkstyle</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <dependencies>\n                        <dependency>\n                            <groupId>org.wildfly.checkstyle</groupId>\n                            <artifactId>wildfly-checkstyle-config</artifactId>\n                            <version>${version.org.wildfly.checkstyle-config}</version>\n                        </dependency>\n                    </dependencies>\n                    <configuration>\n                        <configLocation>wildfly-checkstyle/checkstyle.xml</configLocation>\n                        <consoleOutput>true</consoleOutput>\n                        <failsOnError>true</failsOnError>\n                        <includeTestSourceDirectory>true</includeTestSourceDirectory>\n                        <excludes>**/*$logger.java,**/*$bundle.java,**/*$___Marshaller_*.java,**/*SerializationContextInitializerImpl.java</excludes>\n                        <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>\n                        <useFile></useFile>\n                    </configuration>\n                </plugin>\n\n                <!-- Ban bad dependencies and require Java 11 for deploying -->\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-enforcer-plugin</artifactId>\n                    <version>${version.enforcer.plugin}</version>\n                    <executions>\n                        <execution>\n                            <id>ban-bad-dependencies</id>\n                            <goals>\n                                <goal>enforce</goal>\n                            </goals>\n                            <configuration>\n                                <rules>\n                                    <bannedDependencies>\n                                        <searchTransitive>true</searchTransitive>\n                                        <excludes>\n                                            <exclude>args4j:args4j</exclude>\n                                            <exclude>biz.aQute:bnd</exclude>\n                                            <exclude>ch.qos.reload4j:reload4j</exclude>\n                                            <exclude>com.google.gwt.inject:gin</exclude>\n                                            <exclude>com.google.inject:guice</exclude>\n                                            <exclude>com.gwtplatform:gwtp-all</exclude>\n                                            <exclude>com.sun.activation:javax.activation</exclude>\n                                            <exclude>com.sun.mail:javax.mail</exclude>\n                                            <exclude>com.sun.xml.bind:jaxb-core</exclude>\n                                            <exclude>com.sun.xml.bind:jaxb-impl</exclude>\n                                            <exclude>com.sun.xml.bind:jaxb-xjc</exclude>\n                                            <exclude>commons-httpclient:commons-httpclient</exclude>\n                                            <exclude>commons-logging:commons-logging</exclude>\n                                            <exclude>commons-logging:commons-logging-api</exclude>\n                                            <exclude>concurrent:concurrent</exclude>\n                                            <exclude>dom4j:dom4j</exclude>\n                                            <exclude>jacorb:jacorb</exclude>\n                                            <exclude>javassist:javassist</exclude>\n                                            <exclude>javax.activation:activation</exclude>\n                                            <exclude>javax.activation:javax.activation-api</exclude>\n                                            <exclude>javax.enterprise:cdi-api</exclude>\n                                            <exclude>javax.inject:javax.inject</exclude>\n                                            <exclude>javax.json:javax.json-api</exclude>\n                                            <exclude>javax.persistence:javax.persistence-api</exclude>\n                                            <exclude>javax.persistence:persistence-api</exclude>\n                                            <exclude>javax.security.enterprise:javax.security.enterprise-api</exclude>\n                                            <exclude>javax.servlet:servlet-api</exclude>\n                                            <exclude>javax.transaction:jta</exclude>\n                                            <exclude>javax.validation:validation-api</exclude>\n                                            <exclude>javax.xml:jaxrpc-api</exclude>\n                                            <exclude>javax.xml.bind:jaxb-api</exclude>\n                                            <exclude>javax.xml.soap:saaj-api</exclude>\n                                            <exclude>javax.xml.stream:stax-api</exclude>\n                                            <exclude>jboss:jboss-logging-spi</exclude>\n                                            <exclude>jboss:jboss-serialization</exclude>\n                                            <exclude>jboss.web:el-api</exclude>\n                                            <exclude>jboss.web:jsp-api</exclude>\n                                            <exclude>jboss.web:servlet-api</exclude>\n                                            <exclude>log4j:log4j</exclude>\n                                            <exclude>net.sf.kxml:kxml2</exclude>\n                                            <exclude>org.apache.geronimo.specs:geronimo-activation_1.1_spec</exclude>\n                                            <exclude>org.apache.geronimo.specs:geronimo-jaxb_2.1_spec</exclude>\n                                            <exclude>org.apache.geronimo.specs:geronimo-saaj_1.3_spec</exclude>\n                                            <exclude>org.apache.geronimo.specs:geronimo-stax-api_1.0_spec</exclude>\n                                            <exclude>org.apache.xalan:serializer</exclude>\n                                            <exclude>org.apache.xalan:xalan</exclude>\n                                            <!-- replaced by org.bouncycastle:*-jdk18on -->\n                                            <exclude>org.bouncycastle:bcpg-jdk15on</exclude>\n                                            <exclude>org.bouncycastle:bcprov-jdk15on</exclude>\n                                            <exclude>org.bouncycastle:bcpkix-jdk15on</exclude>\n                                            <exclude>org.bouncycastle:bcutil-jdk15on</exclude>\n                                            <exclude>org.codehaus.jackson:jackson-core-asl</exclude>\n                                            <exclude>org.codehaus.jackson:jackson-jaxrs</exclude>\n                                            <exclude>org.codehaus.jackson:jackson-mapper-asl</exclude>\n                                            <exclude>org.codehaus.jackson:jackson-xc</exclude>\n                                            <exclude>org.glassfish:javax.json</exclude>\n                                            <exclude>org.glassfish.soteria:javax.security.enterprise</exclude>\n                                            <exclude>org.hibernate:ejb3-persistence</exclude>\n                                            <exclude>org.hibernate.java-persistence:jpa-api</exclude>\n                                            <!-- replaced by wildfly-naming-client -->\n                                            <exclude>org.jboss:jboss-remote-naming</exclude>\n                                            <!--<exclude>org.jboss:jboss-common-core</exclude>-->\n                                            <exclude>org.jboss.integration:jboss-jca-spi</exclude>\n                                            <exclude>org.jboss.interceptor:jboss-interceptor-api</exclude>\n                                            <exclude>org.jboss.javaee:jboss-javaee</exclude>\n                                            <exclude>org.jboss.javaee:jboss-jacc-api</exclude>\n                                            <exclude>org.jboss.javaee:jboss-jad-api</exclude>\n                                            <exclude>org.jboss.javaee:jboss-jaspi-api</exclude>\n                                            <exclude>org.jboss.javaee:jboss-jca-api</exclude>\n                                            <exclude>org.jboss.javaee:jboss-jms-api</exclude>\n                                            <exclude>org.jboss.javaee:servlet-api</exclude>\n                                            <exclude>org.jboss.javaee:jsp-api</exclude>\n                                            <exclude>org.jboss.javaee:jboss-transaction-api</exclude>\n                                            <exclude>org.jboss.logging:jboss-logging-generator</exclude>\n                                            <exclude>org.jboss.logging:jboss-logging-log4j</exclude>\n                                            <exclude>org.jboss.logging:jboss-logging-jdk</exclude>\n                                            <exclude>org.jboss.logging:jboss-logging-logmanager</exclude>\n                                            <exclude>org.jboss.logging:jboss-logging-spi</exclude>\n                                            <exclude>org.jboss.logging:jboss-logging-tools</exclude>\n                                            <!-- replaced by io.netty:netty -->\n                                            <exclude>org.jboss.netty:netty</exclude>\n                                            <!-- replaced by io.netty:netty-all -->\n                                            <exclude>io.netty:netty</exclude>\n                                            <exclude>org.jboss.remoting3:jboss-remoting</exclude>\n                                            <exclude>org.jboss.security:jbosssx</exclude>\n                                            <!-- replaced by wildfly-elytron -->\n                                            <exclude>org.jboss.sasl:jboss-sasl</exclude>\n                                            <exclude>org.jboss.slf4j:slf4j-jboss-logging</exclude>\n                                            <exclude>org.jboss.spec.javax.resource:jboss-connector-api_1.5_spec</exclude>\n                                            <exclude>org.jboss.spec.javax.transaction:jboss-transaction-api_1.1_spec</exclude>\n                                            <exclude>org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec</exclude>\n                                            <exclude>org.jboss.spec.javax.xml.soap:jboss-saaj-api_1.3_spec</exclude>\n                                            <exclude>org.ops4j.base</exclude>\n                                            <exclude>org.ops4j.pax.swissbox</exclude>\n                                            <exclude>org.ops4j.pax.web</exclude>\n                                            <exclude>org.slf4j:slf4j-nop</exclude>\n                                            <exclude>org.slf4j:slf4j-jdk14</exclude>\n                                            <exclude>org.slf4j:slf4j-log4j12</exclude>\n                                            <exclude>org.slf4j:slf4j-log4j13</exclude>\n                                            <!-- replaced by wildfly-elytron -->\n                                            <exclude>org.wildfly.security:wildfly-security-manager</exclude>\n                                            <exclude>oro:oro</exclude>\n                                            <exclude>relaxngDatatype:relaxngDatatype</exclude>\n                                            <exclude>stax:stax-api</exclude>\n                                            <exclude>sun-jaxb:jaxb-api</exclude>\n                                            <exclude>trove:trove</exclude>\n                                            <exclude>woodstox:wstx-lgpl</exclude>\n                                            <exclude>xml-apis:xml-apis</exclude>\n                                            <!-- Jandex moved to SmallRye -->\n                                            <exclude>org.jboss:jandex</exclude>\n                                        </excludes>\n                                    </bannedDependencies>\n                                    <dependencyConvergence></dependencyConvergence>\n                                </rules>\n                            </configuration>\n                        </execution>\n                        <execution>\n                            <id>require-java17-build</id>\n                            <goals>\n                                <goal>enforce</goal>\n                            </goals>\n                            <phase>compile</phase>\n                            <configuration>\n                                <rules>\n                                    <requireJavaVersion>\n                                        <version>${required.java.build.version}</version>\n                                    </requireJavaVersion>\n                                </rules>\n                            </configuration>\n                        </execution>\n                        <execution>\n                            <id>require-java17-deploy</id>\n                            <goals>\n                                <goal>enforce</goal>\n                            </goals>\n                            <phase>deploy</phase>\n                            <configuration>\n                                <rules>\n                                    <requireJavaVersion>\n                                        <version>${required.java.deploy.version}</version>\n                                    </requireJavaVersion>\n                                </rules>\n                            </configuration>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <!--This plugin here is bogus, only here to make eclipse not break down and cry when it sees maven project.-->\n                    <groupId>org.eclipse.m2e</groupId>\n                    <artifactId>lifecycle-mapping</artifactId>\n                    <version>1.0.0</version>\n                    <configuration>\n                        <lifecycleMappingMetadata>\n                            <pluginExecutions>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>org.apache.maven.plugins</groupId>\n                                        <artifactId>maven-dependency-plugin</artifactId>\n                                        <versionRange>[2.1,)</versionRange>\n                                        <goals>\n                                            <goal>copy</goal>\n                                            <goal>properties</goal>\n                                            <goal>copy-dependencies</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore></ignore>\n                                    </action>\n                                </pluginExecution>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>org.apache.maven.plugins</groupId>\n                                        <artifactId>maven-checkstyle-plugin</artifactId>\n                                        <versionRange>[2.5,)</versionRange>\n                                        <goals>\n                                            <goal>checkstyle</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore></ignore>\n                                    </action>\n                                </pluginExecution>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>org.apache.maven.plugins</groupId>\n                                        <artifactId>maven-clean-plugin</artifactId>\n                                        <versionRange>[2.4.1,)</versionRange>\n                                        <goals>\n                                            <goal>clean</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore></ignore>\n                                    </action>\n                                </pluginExecution>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>org.apache.maven.plugins</groupId>\n                                        <artifactId>maven-antrun-plugin</artifactId>\n                                        <versionRange>[1.4,)</versionRange>\n                                        <goals>\n                                            <goal>run</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore></ignore>\n                                    </action>\n                                </pluginExecution>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>org.codehaus.mojo</groupId>\n                                        <artifactId>javacc-maven-plugin</artifactId>\n                                        <versionRange>[2.5,)</versionRange>\n                                        <goals>\n                                            <goal>jjtree</goal>\n                                            <goal>javacc</goal>\n                                            <goal>jjtree-javacc</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore></ignore>\n                                    </action>\n                                </pluginExecution>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>org.codehaus.mojo</groupId>\n                                        <artifactId>xml-maven-plugin</artifactId>\n                                        <versionRange>[1.0,)</versionRange>\n                                        <goals>\n                                            <goal>transform</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore></ignore>\n                                    </action>\n                                </pluginExecution>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>org.apache.maven.plugins</groupId>\n                                        <artifactId>maven-help-plugin</artifactId>\n                                        <versionRange>[2.1.1,)</versionRange>\n                                        <goals>\n                                            <goal>active-profiles</goal>\n                                            <goal>effective-pom</goal>\n                                            <goal>effective-settings</goal>\n                                            <goal>system</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore></ignore>\n                                    </action>\n                                </pluginExecution>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>org.codehaus.mojo</groupId>\n                                        <artifactId>keytool-maven-plugin</artifactId>\n                                        <versionRange>[1.2,)</versionRange>\n                                        <goals>\n                                            <goal>clean</goal>\n                                            <goal>genkey</goal>\n                                            <goal>generateKeyPair</goal>\n                                            <goal>generateSecretKey</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore></ignore>\n                                    </action>\n                                </pluginExecution>\n                                <pluginExecution>\n                                    <pluginExecutionFilter>\n                                        <groupId>org.wildfly.build</groupId>\n                                        <artifactId>wildfly-server-provisioning-maven-plugin</artifactId>\n                                        <versionRange>[1.0.0.Alpha2,)</versionRange>\n                                        <goals>\n                                            <goal>build</goal>\n                                        </goals>\n                                    </pluginExecutionFilter>\n                                    <action>\n                                        <ignore></ignore>\n                                    </action>\n                                </pluginExecution>\n                            </pluginExecutions>\n                        </lifecycleMappingMetadata>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>xml-maven-plugin</artifactId>\n                    <version>${version.xml.plugin}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-help-plugin</artifactId>\n                    <version>${version.help.plugin}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.jboss.galleon</groupId>\n                    <artifactId>galleon-maven-plugin</artifactId>\n                    <version>${version.org.jboss.galleon}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.wildfly.galleon-plugins</groupId>\n                    <artifactId>wildfly-galleon-maven-plugin</artifactId>\n                    <version>${version.org.wildfly.galleon-plugins}</version>\n                    <dependencies>\n                        <!-- feature-spec-gen uses wildfly-embedded to generate the feature specs, hence the designated wildfly-embedded version must match the pack one -->\n                        <dependency>\n                            <groupId>org.wildfly.core</groupId>\n                            <artifactId>wildfly-embedded</artifactId>\n                            <version>${version.org.wildfly.core}</version>\n                        </dependency>\n                        <!-- If you add a dependency on wildfly-embedded you need to bring your own transitives -->\n                        <dependency>\n                            <groupId>org.wildfly.common</groupId>\n                            <artifactId>wildfly-common</artifactId>\n                            <version>${version.org.wildfly.common}</version>\n                        </dependency>\n                    </dependencies>\n                </plugin>\n                <plugin>\n                    <groupId>org.wildfly.unstable.api.annotation</groupId>\n                    <artifactId>unstable-api-annotation-classpath-indexer-plugin</artifactId>\n                    <version>${version.org.wildfly.unstable.annotation.api}</version>\n                    <executions>\n                        <execution>\n                            <id>scan-experimental-annotations</id>\n                            <phase>compile</phase>\n                            <goals>\n                                <goal>index-unstable-api-annotations</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                </plugin>\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-verifier-plugin</artifactId>\n                    <version>${version.verifier.plugin}</version>\n                    <executions>\n                        <execution>\n                            <id>main</id>\n                            <phase>verify</phase>\n                            <goals>\n                                <goal>verify</goal>\n                            </goals>\n                        </execution>\n                    </executions>\n                    <configuration>\n                        <verificationFile>target/verifier/verifications.xml</verificationFile>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.wildfly.maven.plugins</groupId>\n                    <artifactId>licenses-plugin</artifactId>\n                    <version>${version.org.wildfly.licenses.plugin}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.asciidoctor</groupId>\n                    <artifactId>asciidoctor-maven-plugin</artifactId>\n                    <version>${version.asciidoctor.plugin}</version>\n                    <configuration>\n                        <attributes>\n                            <source-highlighter>coderay</source-highlighter>\n                            <icons>font</icons>\n                            <pagenums></pagenums>\n                            <version>${project.version}</version>\n                            <idprefix></idprefix>\n                            <idseparator>-</idseparator>\n                            <allow-uri-read>true</allow-uri-read>\n                            <wildflyVersion>${product.docs.server.version}</wildflyVersion>\n                            <revnumber>${project.version}</revnumber>\n                            <revdate>${maven.build.timestamp}</revdate>\n                            <organization>${project.organization.name}</organization>\n                        </attributes>\n                    </configuration>\n                </plugin>\n                <plugin>\n                    <groupId>org.wildfly.glow</groupId>\n                    <artifactId>wildfly-glow-arquillian-plugin</artifactId>\n                    <version>${version.org.wildfly.glow}</version>\n                </plugin>\n                <plugin>\n                    <groupId>org.wildfly</groupId>\n                    <artifactId>wildfly-channel-maven-plugin</artifactId>\n                    <version>${version.org.wildfly.wildfly-channel-plugin}</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <!-- Surefire runs a 'default-test' execution by default.\n                             Configure it here to use a property to set the phase for that execution.\n                             Default value of the property is the normal 'test' phase\n                             (see 'properties' declarations in this pom.)\n                             Profiles can set the property to 'none' to disable this execution -->\n                        <id>default-test</id>\n                        <phase>${surefire.default-test.phase}</phase>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <!-- Profiles -->\n    <profiles>\n\n        <profile>\n            <id>base.build</id>\n            <activation>\n                <property>\n                    <name>!no.base.build</name>\n                </property>\n            </activation>\n            <modules>\n                <module>appclient</module>\n                <module>batch-jberet</module>\n                <module>bean-validation</module>\n                <module>boms/common-ee</module>\n                <module>boms/legacy-ee</module>\n                <module>boms/legacy-test</module>\n                <module>boms/standard-ee</module>\n                <module>boms/standard-test</module>\n                <module>boms/user</module>\n                <module>client/properties</module>\n                <module>client/shade</module>\n                <module>clustering</module>\n                <module>concurrency/impl-30</module>\n                <module>concurrency/spi</module>\n                <module>connector</module>\n                <module>datasources-agroal</module>\n                <module>ee</module>\n                <module>ee-build</module>\n                <module>ee-dist</module>\n                <module>ee-feature-pack</module>\n                <module>ee-security</module>\n                <module>ejb3</module>\n                <module>elytron-oidc-client</module>\n                <module>health</module>\n                <module>iiop-openjdk</module>\n                <module>jakarta-data</module>\n                <module>jaxrs</module>\n                <module>jdr</module>\n                <module>jpa</module>\n                <module>jsf</module>\n                <module>mail</module>\n                <module>legacy/jsr77</module>\n                <module>legacy/keycloak</module>\n                <module>legacy/opentracing-extension</module>\n                <module>metrics</module>\n                <module>messaging-activemq</module>\n                <module>mod_cluster</module>\n                <module>naming</module>\n                <module>picketlink</module>\n                <module>pojo</module>\n                <module>rts</module>\n                <module>sar</module>\n                <module>security</module>\n                <module>system-jmx</module>\n                <module>spec-api</module>\n                <module>weld</module>\n                <module>transactions</module>\n                <module>undertow</module>\n                <module>webservices</module>\n                <module>web-common</module>\n                <module>xts</module>\n                <module>testsuite/shared</module>\n                <module>testsuite</module>\n            </modules>\n        </profile>\n\n        <profile>\n            <id>expansion-build</id>\n            <activation>\n                <property>\n                    <!-- Allow users to disable building expansion stuff if they just want base artifacts -->\n                    <name>!no.expansion.build</name>\n                </property>\n            </activation>\n            <modules>\n                <module>boms/common-expansion</module>\n                <module>boms/legacy-expansion</module>\n                <module>boms/standard-expansion</module>\n                <module>boms/standard-test-expansion</module>\n                <module>boms/user</module>\n                <module>build</module>\n                <module>dist</module>\n                <module>galleon-pack</module>\n                <module>microprofile</module>\n                <module>observability</module>\n                <module>release</module>\n                <module>testsuite</module>\n            </modules>\n        </profile>\n\n        <profile>\n            <id>quick-build</id>\n            <activation>\n                <property>\n                    <name>quickly</name>\n                </property>\n            </activation>\n            <properties>\n                <skipTests>true</skipTests>\n                <skipITs>true</skipITs>\n                <maven.javadoc.skip>true</maven.javadoc.skip>\n                <checkstyle.skip>true</checkstyle.skip>\n                <enforcer.skip>true</enforcer.skip>\n                <license.skip>true</license.skip>\n            </properties>\n            <build>\n                <defaultGoal>clean install</defaultGoal>\n            </build>\n        </profile>\n\n        <profile>\n            <id>preview-build</id>\n            <activation>\n                <property>\n                    <name>!no.preview.build</name>\n                </property>\n            </activation>\n            <modules>\n                <module>boms/preview-ee</module>\n                <module>boms/preview-test</module>\n                <module>boms/preview-expansion</module>\n                <module>boms/preview-test-expansion</module>\n                <module>preview</module>\n            </modules>\n        </profile>\n\n        <profile>\n            <id>jdk18</id>\n            <activation>\n                <jdk>[18,24)</jdk>\n            </activation>\n            <properties>\n                <security.manager.props>\n                    -Djava.security.manager=allow\n                </security.manager.props>\n            </properties>\n        </profile>\n        <profile>\n            <id>jdk23</id>\n            <activation>\n                <jdk>[23,)</jdk>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-compiler-plugin</artifactId>\n                        <configuration>\n                            <compilerArgs combine.children=\"append\">\n                                <!-- SE 23+ requires explicit config to turn on annotation processing -->\n                                <arg>-proc:full</arg>\n                            </compilerArgs>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>docs</id>\n            <activation>\n                <property>\n                    <name>docs</name>\n                </property>\n            </activation>\n            <modules>\n                <module>docs</module>\n            </modules>\n        </profile>\n\n        <profile>\n            <id>dependency-check</id>\n            <activation>\n                <property>\n                    <name>dependency-check</name>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                      <groupId>org.owasp</groupId>\n                      <artifactId>dependency-check-maven</artifactId>\n                      <version>${version.org.owasp.dependency-check}</version>\n                      <configuration>\n                          <nvdApiServerId>nvd</nvdApiServerId>\n                          <suppressionFile>./sca-overrides/owasp-suppressions.xml</suppressionFile>\n                      </configuration>\n                      <executions>\n                          <execution>\n                              <goals>\n                                  <goal>aggregate</goal>\n                              </goals>\n                          </execution>\n                      </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <!--\n          Name: jpda\n          Descr: Enable JPDA remote debuging\n        -->\n        <profile>\n            <id>jpda</id>\n            <activation>\n                <property>\n                    <name>jpda</name>\n                </property>\n            </activation>\n            <properties>\n                <surefire.jpda.args>-agentlib:jdwp=transport=dt_socket,address=*:8787,server=y,suspend=y</surefire.jpda.args>\n            </properties>\n        </profile>\n\n        <profile>\n            <!-- Use the latest version of the standard channels when provisioning. -->\n            <id>latest.standard.channels.profile</id>\n            <activation><property><name>latest.standard.channels</name></property></activation>\n            <properties>\n                <!-- Allow online provisioning so wildfly-maven-plugin can resolve the latest manifests -->\n                <galleon.offline>false</galleon.offline>\n                <!-- The wildfly-maven-plugin 'provision' mojo will provision using a channel\n                     if a wildfly.channels pom property is set.\n\n                     Here we don't specify the channel version, so wildfly-maven-plugin will use the latest.\n                     (See 'internal.channel.profile' where we specify the version.)\n                -->\n                <wildfly.channels>${channels.maven.groupId}:${channels.maven.artifactId}</wildfly.channels>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.wildfly.plugins</groupId>\n                        <artifactId>wildfly-maven-plugin</artifactId>\n                        <version>${version.org.wildfly.plugin}</version>\n                        <configuration>\n                            <channels>\n                                <channel>\n                                    <manifest>\n                                        <groupId>${channels.maven.groupId}</groupId>\n                                        <artifactId>wildfly-ee</artifactId>\n                                    </manifest>\n                                </channel>\n                                <channel>\n                                    <manifest>\n                                        <groupId>${channels.maven.groupId}</groupId>\n                                        <artifactId>wildfly</artifactId>\n                                    </manifest>\n                                </channel>\n                            </channels>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n\n        <profile>\n            <!-- Use the channels specified by the user-provided external.wildfly.channels property\n                 when provisioning. -->\n            <id>external.channel.profile</id>\n            <activation><property><name>external.wildfly.channels</name></property></activation>\n            <properties>\n                <!-- The wildfly-maven-plugin 'provision' mojo will provision using a channel\n                     if a wildfly.channels pom property is set.\n\n                     Note the user could just directly do -Dwildfly-channels=xxx and get\n                     the same effect, but we use this indirection to leave open the possibility\n                     to have other ways of setting the property, without having to deal with\n                     users having learned to directly use -Dwildfly.channels.\n                 -->\n                <wildfly.channels>${external.wildfly.channels}</wildfly.channels>\n            </properties>\n        </profile>\n\n        <profile>\n            <!-- Use the internally-created channel when provisioning -->\n            <id>internal.channel.profile</id>\n            <activation><property><name>internal.wildfly.channels</name></property></activation>\n            <properties>\n                <!-- The wildfly-maven-plugin 'provision' mojo will provision using a channel\n                     if a wildfly.channels pom property is set.\n\n                     Here we fully specify the channel GAV. The value of ${channels.maven.version}\n                     is expected to be the project.version of the relevant feature pack being\n                     built during this build.\n                -->\n                <wildfly.channels>${channels.maven.groupId}:${channels.maven.artifactId}:${channels.maven.version}</wildfly.channels>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>preview.server.test</id>\n            <activation>\n                <property>\n                    <name>preview-server-tests</name>\n                </property>\n            </activation>\n            <properties>\n                <wildfly.build.output.dir>preview/build/target/${server.output.dir.prefix}-preview-${server.output.dir.version}</wildfly.build.output.dir>\n                <testsuite.ee.galleon.pack.artifactId>wildfly-preview-feature-pack</testsuite.ee.galleon.pack.artifactId>\n                <testsuite.full.galleon.pack.artifactId>wildfly-preview-feature-pack</testsuite.full.galleon.pack.artifactId>\n                <testsuite.test.feature.pack.artifactId>wildfly-test-feature-pack-preview</testsuite.test.feature.pack.artifactId>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>preview.test.profile</id>\n            <activation>\n                <property>\n                    <name>ts.preview</name>\n                </property>\n            </activation>\n            <properties>\n                <!-- If we are using channel-driven provisioning, use the wildfly-preview channel -->\n                <channel.maven.artifactId>wildfly-preview</channel.maven.artifactId>\n                <!-- Disable the surefire tests (at least the default ones) for all modules except for\n                     those where this profile turns them back on. -->\n                <surefire.default-test.phase>none</surefire.default-test.phase>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>bootable.preview.test.profile</id>\n            <activation>\n                <property>\n                    <name>ts.bootable.preview</name>\n                </property>\n            </activation>\n            <properties>\n                <!-- Disable the default surefire test execution for all modules except for\n                     those where this profile turns them back on. -->\n                <surefire.default-test.phase>none</surefire.default-test.phase>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>layers.profile</id>\n            <activation>\n                <property>\n                    <name>ts.layers</name>\n                </property>\n            </activation>\n            <properties>\n                <!-- Disable the default surefire test execution for all modules except for\n                     those where this profile turns them back on. -->\n                <surefire.default-test.phase>none</surefire.default-test.phase>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>standalone.microprofile.profile</id>\n            <activation>\n                <property>\n                    <name>ts.standalone.microprofile</name>\n                </property>\n            </activation>\n            <properties>\n                <!-- Disable the default surefire test execution for all modules except for\n                     those where this profile turns them back on. -->\n                <surefire.default-test.phase>none</surefire.default-test.phase>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>security.manager.profile</id>\n            <activation>\n                <property>\n                    <name>security.manager</name>\n                </property>\n            </activation>\n            <properties>\n                <!-- Disable the default surefire tests  for all modules except for\n                     those where this profile turns them on. -->\n                <surefire.default-test.phase>none</surefire.default-test.phase>\n            </properties>\n        </profile>\n\n        <profile>\n            <id>bootablejar.profile</id>\n            <activation>\n                <property>\n                    <name>ts.bootable</name>\n                </property>\n            </activation>\n            <properties>\n                <!-- Disable the default surefire test execution for all modules except for\n                     those where this profile turns them back on. -->\n                <surefire.default-test.phase>none</surefire.default-test.phase>\n            </properties>\n        </profile>\n\n        <!-- JaCoCo test coverage. Will set ${surefire.jacoco.args} to be used in Arquillian config and as surefire jvm argument. -->\n        <profile>\n            <id>ts.jacoco.profile</id>\n            <activation>\n                <property>\n                    <name>coverage</name>\n                </property>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.jacoco</groupId>\n                        <artifactId>jacoco-maven-plugin</artifactId>\n                        <version>${version.org.jacoco}</version>\n                        <executions>\n                            <execution>\n                                <id>ts.jacoco-prepare</id>\n                                <phase>process-test-classes</phase>\n                                <goals>\n                                    <goal>prepare-agent</goal>\n                                </goals>\n                                <configuration>\n                                    <append>true</append>\n                                    <destFile>target/jacoco.exec</destFile>\n                                    <includes>\n                                        <include>*</include>\n                                    </includes>\n                                    <excludes>\n                                        <exclude>org.jboss.as.test.*</exclude>\n                                    </excludes>\n                                    <output>file</output>\n                                    <propertyName>surefire.jacoco.args</propertyName>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <!-- Ant plugin. -->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-antrun-plugin</artifactId>\n                        <executions>\n                            <!-- DEBUG -->\n                            <execution>\n                                <id>ts.jacoco.debug</id>\n                                <phase>post-integration-test</phase>\n                                <goals>\n                                    <goal>run</goal>\n                                </goals>\n                                <inherited>false</inherited>\n                                <configuration>\n                                    <target>\n                                        <echo>Jacoco jvm args: ${surefire.jacoco.args}</echo>\n                                    </target>\n                                </configuration>\n                            </execution>\n                            <!-- Must be run using Ant due to https://sourceforge.net/tracker/?func=detail&aid=3474708&group_id=177969&atid=883354 -->\n                            <!-- mvn antrun:run@ts.jacoco.report-ant -Dcoverage -Dtarget=report -Djboss.dist=$JBOSS_DIST -->\n                            <execution>\n                                <id>ts.jacoco.report-ant</id>\n                                <phase>none</phase>\n                                <goals>\n                                    <goal>run</goal>\n                                </goals>\n                                <inherited>false</inherited>\n                                <configuration>\n                                    <target>\n                                        <taskdef classname=\"org.jacoco.ant.ReportTask\" name=\"report\"></taskdef>\n                                        <echo>Creating JaCoCo test coverage reports...</echo>\n                                        <mkdir dir=\"${basedir}/target/coverage-report\"></mkdir>\n                                        <report>\n                                            <executiondata>\n                                                <fileset dir=\"${basedir}\">\n                                                    <include name=\"**/target/jacoco.exec\"></include>\n                                                </fileset>\n                                            </executiondata>\n                                            <structure name=\"WildFly project\">\n                                                <classfiles>\n                                                    <fileset dir=\"${jboss.dist}/modules\">\n                                                        <include name=\"**/*.jar\"></include>\n                                                        <!-- Excludes solve \"Can't add different class with same name: ...\" -->\n                                                        <exclude name=\"**/openjdk-orb*.jar\"></exclude>\n                                                        <exclude name=\"**/jboss-marshalling*.jar\"></exclude>\n                                                        <exclude name=\"**/hornetq-core-client*.jar\"></exclude>\n                                                        <exclude name=\"**/jipijapa-hibernate5*.jar\"></exclude>\n                                                        <exclude name=\"**/infinispan-commons*.jar\"></exclude>\n                                                        <exclude name=\"**/jboss-logmanager*.jar\"></exclude>\n                                                        <exclude name=\"**/wildfly-common*.jar\"></exclude>\n                                                        <exclude name=\"**/wildfly-elytron*.jar\"></exclude>\n                                                        <exclude name=\"**/jaxb*.jar\"></exclude>\n                                                        <exclude name=\"**/h2-*.jar\"></exclude>\n                                                        <exclude name=\"**/snakeyaml-*.jar\"></exclude>\n                                                        <exclude name=\"**/yasson-*.jar\"></exclude>\n                                                        <exclude name=\"**/bcprov-*.jar\"></exclude>\n                                                        <exclude name=\"**/lucene-*.jar\"></exclude>\n                                                        <exclude name=\"**/log4j-api-*.jar\"></exclude>\n                                                        <exclude name=\"**/vertx-core-*.jar\"></exclude>\n                                                        <exclude name=\"**/opentelemetry-sdk-common-*.jar\"></exclude>\n                                                    </fileset>\n                                                </classfiles>\n                                                <sourcefiles encoding=\"UTF-8\">\n                                                    <dirset dir=\"${basedir}\">\n                                                        <include name=\"**/src/main/java\"/>\n                                                    </dirset>\n                                                </sourcefiles>\n                                            </structure>\n                                            <html destdir=\"${basedir}/target/coverage-report/html\"></html>\n                                            <xml destfile=\"${basedir}/target/coverage-report/coverage-report.xml\"></xml>\n                                            <csv destfile=\"${basedir}/target/coverage-report/coverage-report.csv\"></csv>\n                                        </report>\n                                    </target>\n                                </configuration>\n                            </execution>\n                        </executions>\n                        <dependencies>\n                            <dependency>\n                                <groupId>org.jacoco</groupId>\n                                <artifactId>org.jacoco.ant</artifactId>\n                                <version>${version.org.jacoco}</version>\n                            </dependency>\n                        </dependencies>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <!-- surefire.jacoco.args property needs to be set correctly, if coverage profile is not enabled -->\n            <id>ts.jacoco.profile.not.enabled</id>\n            <activation>\n                <property>\n                    <name>!coverage</name>\n                </property>\n            </activation>\n            <properties>\n                <surefire.jacoco.args></surefire.jacoco.args>\n            </properties>\n        </profile>\n        <profile>\n            <!-- this profile can be used to test component releases available in Nexus staging repositories -->\n            <id>staged-releases</id>\n            <properties>\n                <jboss.staging.repository.group>true</jboss.staging.repository.group>\n            </properties>\n            <repositories>\n                <repository>\n                    <id>jboss-staging-repository-group</id>\n                    <name>JBoss Staging Repository Group</name>\n                    <url>https://repository.jboss.org/nexus/content/groups/staging/</url>\n                    <layout>default</layout>\n                </repository>\n            </repositories>\n            <pluginRepositories>\n                <pluginRepository>\n                    <id>jboss-staging-repository-group</id>\n                    <name>JBoss Staging Repository Group</name>\n                    <url>https://repository.jboss.org/nexus/content/groups/staging/</url>\n                    <layout>default</layout>\n                </pluginRepository>\n            </pluginRepositories>\n        </profile>\n\n        <!-- Configures testsuite to use the non-default Galleon pack to provision EE content.\n             This profile is meant to eliminate the need to use -D to see all three parts of the GAV\n             in order to test provisioning using a different feature pack. -->\n        <profile>\n            <id>test.ee.galleon.pack.profile</id>\n            <activation>\n                <property>\n                    <name>testsuite.ee.galleon.pack.artifactId</name>\n                    <value>wildfly-ee-galleon-pack</value>\n                </property>\n            </activation>\n            <properties>\n                <testsuite.ee.galleon.pack.groupId>${ee.maven.groupId}</testsuite.ee.galleon.pack.groupId>\n                <testsuite.ee.galleon.pack.version>${ee.maven.version}</testsuite.ee.galleon.pack.version>\n                <!-- If we are using channel-driven provisioning, use the wildfly-ee channel -->\n                <channel.maven.artifactId>wildfly-ee</channel.maven.artifactId>\n                <channel.maven.version>${ee.maven.version}</channel.maven.version>\n            </properties>\n        </profile>\n\n        <!-- Disable standard compilation execution.\n             Intended use is when a build has been performed with one JDK\n             and then test executions are wanted with another JDK, and that\n             'test' goal shouldn't be allowed to determine that things need\n             recompilation. Just using the 'surefire:test' goal would have\n             the same effect but seems to result in profile settings being\n             ignored. -->\n        <profile>\n            <id>noCompile</id>\n            <activation>\n                <property>\n                    <name>noCompile</name>\n                </property>\n            </activation>\n            <properties>\n                <!-- Allow SE 11 and later. We don't actually compile, so we just need\n                     to be able to execute tests using supported-at-runtime SE versions -->\n                <required.java.build.version>[11,)</required.java.build.version>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-compiler-plugin</artifactId>\n                        <configuration>\n                            <skipMain>true</skipMain>\n                            <skip>true</skip>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "preview",
          "type": "tree",
          "content": null
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "rts",
          "type": "tree",
          "content": null
        },
        {
          "name": "sar",
          "type": "tree",
          "content": null
        },
        {
          "name": "sca-overrides",
          "type": "tree",
          "content": null
        },
        {
          "name": "security",
          "type": "tree",
          "content": null
        },
        {
          "name": "spec-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "system-jmx",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite",
          "type": "tree",
          "content": null
        },
        {
          "name": "transactions",
          "type": "tree",
          "content": null
        },
        {
          "name": "undertow",
          "type": "tree",
          "content": null
        },
        {
          "name": "web-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "webservices",
          "type": "tree",
          "content": null
        },
        {
          "name": "weld",
          "type": "tree",
          "content": null
        },
        {
          "name": "xts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}