{
  "metadata": {
    "timestamp": 1736708512021,
    "page": 719,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "VerbalExpressions/JavaVerbalExpressions",
      "stars": 2623,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.060546875,
          "content": "target\n.idea\n*.iml\n.classpath\n.project\n.settings\n/target/\nbin\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.9130859375,
          "content": "language: java\nsudo: false\n\njdk:\n - openjdk8\n\ninstall:\n  - mvn --settings .travis/settings.xml install -DskipTests=true -Dgpg.skip -Dmaven.javadoc.skip=true -B -V\n\nbefore_install:\n  - if [ ! -z \"$GPG_SECRET_KEYS\" ]; then echo $GPG_SECRET_KEYS | base64 --decode | $GPG_EXECUTABLE --import; fi\n  - if [ ! -z \"$GPG_OWNERTRUST\" ]; then echo $GPG_OWNERTRUST | base64 --decode | $GPG_EXECUTABLE --import-ownertrust; fi\n\nafter_success:\n  - mvn clean cobertura:cobertura -Dcobertura.report.format=xml org.eluder.coveralls:coveralls-maven-plugin:4.3.0:report\n\nnotifications:\n email: false\n\ndeploy:\n  - provider: script\n    script: .travis/deploy.sh\n    skip_cleanup: true\n    on:\n      repo: VerbalExpressions/JavaVerbalExpressions\n      branch: master\n  - provider: script\n    script: .travis/deploy.sh\n    skip_cleanup: true\n    on:\n      repo: VerbalExpressions/JavaVerbalExpressions\n      tags: true\n\n\ncache:\n  directories:\n    - $HOME/.m2\n"
        },
        {
          "name": ".travis",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05859375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2013 VerbalExpressions\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.1748046875,
          "content": "JavaVerbalExpressions\n=====================\n[![release](http://github-release-version.herokuapp.com/github/VerbalExpressions/JavaVerbalExpressions/release.svg?style=flat)](https://github.com/VerbalExpressions/JavaVerbalExpressions/releases/latest) [![Maven Central](https://maven-badges.herokuapp.com/maven-central/ru.lanwen.verbalregex/java-verbal-expressions/badge.svg?style=flat)](https://maven-badges.herokuapp.com/maven-central/ru.lanwen.verbalregex/java-verbal-expressions)\n[<img src=\"http://img.shields.io/badge/ported%20from-%20JSVerbalExpressions-orange.svg?style=flat\">](https://github.com/VerbalExpressions/JSVerbalExpressions)\n[![Coverage Status](https://coveralls.io/repos/VerbalExpressions/JavaVerbalExpressions/badge.svg)](https://coveralls.io/r/VerbalExpressions/JavaVerbalExpressions)\n\nVerbalExpressions is a Java library that helps to construct difficult regular expressions.\n\n\n\n## Getting Started\n\nMaven Dependency:\n\n```xml\n<dependency>\n  <groupId>ru.lanwen.verbalregex</groupId>\n  <artifactId>java-verbal-expressions</artifactId>\n  <version>1.8</version>\n</dependency>\n```\n\nYou can use *SNAPSHOT* dependency with adding to `pom.xml`:\n```xml\n<repositories>\n  <repository>\n    <id>ossrh</id>\n    <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n  </repository>\n</repositories>\n```\n\n## Examples\n```java\nVerbalExpression testRegex = VerbalExpression.regex()\n                                                .startOfLine().then(\"http\").maybe(\"s\")\n\t           \t\t\t\t.then(\"://\")\n\t           \t\t\t\t.maybe(\"www.\").anythingBut(\" \")\n\t           \t\t\t\t.endOfLine()\n\t           \t\t\t\t.build();\n\n// Create an example URL\nString url = \"https://www.google.com\";\n\n// Use VerbalExpression's testExact() method to test if the entire string matches the regex\ntestRegex.testExact(url); //True\n\ntestRegex.toString(); // Outputs the regex used:\n                      // ^(?:http)(?:s)?(?:\\:\\/\\/)(?:www\\.)?(?:[^\\ ]*)$\n\n```\n\n```java\nVerbalExpression testRegex = VerbalExpression.regex()\n                                                .startOfLine().then(\"abc\").or(\"def\")\n                                                .build();\n\nString testString = \"defzzz\";\n\n//Use VerbalExpression's test() method to test if parts if the string match the regex\ntestRegex.test(testString);       // true\ntestRegex.testExact(testString);  // false\ntestRegex.getText(testString);    // returns: def\n```\n\nBuilder can be cloned:\n```java\nVerbalExpression regex = regex(regex().anything().addModifier('i')).endOfLine().build();\n``` \n\nOr can be used in another regex: \n```java\nVerbalExpression.Builder digits = regex().capt().digit().oneOrMore().endCapt().tab();\nVerbalExpression regex2 = regex().add(digits).add(digits).build();\n``` \n\nFeel free to use any predefined char groups: \n```java\nregex().wordChar().nonWordChar()\n   .space().nonSpace()\n   .digit().nonDigit()\n```\n\nDefine captures:\n```java \nString text = \"aaabcd\";\nVerbalExpression regex = regex()\n                .find(\"a\")\n                .capture().find(\"b\").anything().endCapture().then(\"cd\").build();\n\nregex.getText(text)     // returns \"abcd\"\nregex.getText(text, 1)  // returns \"b\"\n``` \n\n## More complex examples \n* [Parse long strings example](https://github.com/VerbalExpressions/JavaVerbalExpressions/wiki/Parse-long-strings-example)\n\n## Other implementations  \nYou can view all implementations on [VerbalExpressions.github.io](http://VerbalExpressions.github.io) \n\n[\n[Javascript](https://github.com/VerbalExpressions/JSVerbalExpressions) - \n[PHP](https://github.com/VerbalExpressions/PHPVerbalExpressions) - \n[Python](https://github.com/VerbalExpressions/PythonVerbalExpressions) - \n[C#](https://github.com/VerbalExpressions/CSharpVerbalExpressions) - \n[Objective-C](https://github.com/VerbalExpressions/ObjectiveCVerbalExpressions) - \n[Ruby](https://github.com/ryan-endacott/verbal_expressions) - \n[Groovy](https://github.com/VerbalExpressions/GroovyVerbalExpressions) - \n[Haskell](https://github.com/VerbalExpressions/HaskellVerbalExpressions) - \n[C++](https://github.com/VerbalExpressions/CppVerbalExpressions) - ... ([moarr](https://github.com/VerbalExpressions)) ] \n\n## Project released with travis\n\nWith help of this tutorial:\nhttps://dracoblue.net/dev/uploading-snapshots-and-releases-to-maven-central-with-travis/\n"
        },
        {
          "name": "bnd.bnd",
          "type": "blob",
          "size": 0.1767578125,
          "content": "Bundle-Name: ${project.name}\nBundle-Version: ${project.version}\nBundle-SymbolicName: ${project.groupId}.${project.artifactId}\nExport-Package: ru.lanwen.verbalregex\nImport-Package: *"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 7.873046875,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>ru.lanwen.verbalregex</groupId>\n    <artifactId>java-verbal-expressions</artifactId>\n    <version>1.5-SNAPSHOT</version>\n\n    <packaging>jar</packaging>\n\n    <name>JavaVerbalExpressions</name>\n    <description>VerbalExpressions is a Java library that helps to construct difficult regular expressions</description>\n    <url>https://github.com/VerbalExpressions/JavaVerbalExpressions</url>\n\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <additionalparam>-Xdoclint:none</additionalparam>\n    </properties>\n\n\n    <scm>\n        <url>git@github.com:VerbalExpressions/JavaVerbalExpressions.git</url>\n        <connection>scm:git:git@github.com:VerbalExpressions/JavaVerbalExpressions.git</connection>\n        <developerConnection>scm:git:git@github.com:VerbalExpressions/JavaVerbalExpressions.git</developerConnection>\n    </scm>\n\n\n    <licenses>\n        <license>\n            <name>The MIT License (MIT)</name>\n            <url>https://raw.githubusercontent.com/VerbalExpressions/JavaVerbalExpressions/master/LICENSE</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <developers>\n        <developer>\n            <id>lanwen</id>\n            <name>Kirill Merkushev</name>\n            <email>lanwen+github@yandex.ru</email>\n        </developer>\n    </developers>\n\n    <dependencies>\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n            <version>4.13.2</version>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>biz.aQute.bnd</groupId>\n                <artifactId>bnd-maven-plugin</artifactId>\n                <version>7.1.0</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>bnd-process</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>3.4.2</version>\n                <configuration>\n                    <archive>\n                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>\n                    </archive>\n                </configuration>\n            </plugin>\n            <plugin>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.13.0</version>\n                <inherited>true</inherited>\n                <configuration>\n                    <source>1.7</source>\n                    <target>1.7</target>\n                    <encoding>utf-8</encoding>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>cobertura-maven-plugin</artifactId>\n                <version>2.7</version>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>clean</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.moditect</groupId>\n                <artifactId>moditect-maven-plugin</artifactId>\n                <version>1.2.2.Final</version>\n                <executions>\n                    <execution>\n                        <id>add-module-infos</id>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>add-module-info</goal>\n                        </goals>\n                        <configuration>\n                            <jvmVersion>9</jvmVersion>\n                            <module>\n                                <moduleInfo>\n                                    <name>ru.lanwen.verbalregex</name>\n                                    <exports>\n                                        ru.lanwen.verbalregex;\n                                    </exports>\n                                </moduleInfo>\n                            </module>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n    <reporting>\n        <plugins>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>cobertura-maven-plugin</artifactId>\n                <version>2.7</version>\n            </plugin>\n        </plugins>\n    </reporting>\n\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n\n    <profiles>\n        <profile>\n            <id>deployment</id>\n            <activation>\n                <activeByDefault>true</activeByDefault>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>3.2.7</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.sonatype.plugins</groupId>\n                        <artifactId>nexus-staging-maven-plugin</artifactId>\n                        <version>1.7.0</version>\n                        <extensions>true</extensions>\n                        <configuration>\n                            <serverId>ossrh</serverId>\n                            <nexusUrl>https://oss.sonatype.org/</nexusUrl>\n                            <autoReleaseAfterClose>true</autoReleaseAfterClose>\n                        </configuration>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>3.3.1</version>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>3.11.2</version>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n</project>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}