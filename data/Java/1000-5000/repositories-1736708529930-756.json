{
  "metadata": {
    "timestamp": 1736708529930,
    "page": 756,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "iReaderAndroid/X2C",
      "stars": 2569,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1337890625,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea/libraries\n/.idea/modules.xml\n/.idea/workspace.xml\n.DS_Store\n/build\n/captures\n.externalNativeBuild\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.359375,
          "content": "# Background\n[中文](README_CN.md)\n\nGenerally, when writing a page, everyone writes the layout through xml, and loads the xml layout into memory through set contentView or LayoutInflater.from(context).inflate method.\n#### advantage\n   *  Good maintainability\n   *  Support instant preview\n   *  Clear code structure\n\n#### Disadvantage\n   *  Reading xml is time consuming\n   *  Recursive parsing xml is time consuming\n   *  The time it takes to generate an object is more than three times that of new.\n\nOur team has also explored many solutions on this issue. Once it reached the other extreme, completely abandoning xml, all controls are new through java, even directly in the canvas, so although the performance is indeed improved, but the code is gone. A little bit of readability and maintainability.\nWe later reflected on the code to see the machine, or to show it? ? Maybe X2C has given us an answer.\n\n# X2C\n\nIn order to preserve the advantages of xml and solve the performance problems it brings, we developed the X2C solution. That is, during the compilation and generation of the APK, the translation of the layout that needs to be translated generates the corresponding java file, so that the developer writes the layout or writes the original xml, but for the program, the runtime loads the corresponding java file.\nWe use APT (Annotation Processor Tool) + JavaPoet technology to complete the operation of the whole process during the compilation [Annotation] -> [Resolve] -> [Translate xml] -> [Generate java].\n\n# Performance comparison\nAfter the development integration, we did a simple test, the performance comparison is as follows\n\n| Loading method|frequency|Average load time|\n| ------ | ------ |  ------ |\n|XML|100|30|\n|X2C|100|11|\n\n# Integrated use\n#### 1.Add dependency\nAdd dependencies in the build.gradle file of the module\n```java\nannotationProcessor 'com.zhangyue.we:x2c-apt:1.1.2'\nimplementation 'com.zhangyue.we:x2c-lib:1.0.6'\n```\n\n#### 2.Add annotation\nAdd annotations to any java class or method that uses the layout.\n```java\n@Xml(layouts = \"activity_main\")\n```\n\n\n#### 3.Configure custom properties (no or no)\n\nCreate an X2C_CONFIG.xml file under the module, which defines the mapping between attributes and methods. If the receiver is a view, write the view. Otherwise fill in params.\n\n```mxl\n<x2c-config>\n    <attr name=\"app:mixColor\" toFunc=\"view.setMixColor(int)\" />\n    <attr name=\"android:layout_marginTop\" toFunc=\"params.topMargin=int\" />\n</x2c-config>\n```\n\n#### 4.Load layout through X2C\nReplace where you originally used set content view or inflate, as follows:\n```java\nthis.setContentView(R.layout.activity_main); --> X2C.setContentView(this, R.layout.activity_main);\n```\n```java\nLayoutInflater.from(this).inflate(R.layout.activity_main,null); --> X2C.inflate(this,R.layout.activity_main,null);\n```\n\n\n# Process file\n\n#### Original xml\n\n  ```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingLeft=\"10dp\">\n\n    <include\n        android:id=\"@+id/head\"\n        layout=\"@layout/head\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerHorizontal=\"true\" />\n\n    <ImageView\n        android:id=\"@+id/ccc\"\n        style=\"@style/bb\"\n        android:layout_below=\"@id/head\" />\n</RelativeLayout>\n```\n\n#### Generated java file\n```java\n\n/**\n * WARN!!! dont edit this file\n * translate from {@link  com.zhangyue.we.x2c.demo.R.layout.activity_main}\n * autho chengwei\n * email chengwei@zhangyue.com\n */\npublic class X2C_2131296281_Activity_Main implements IViewCreator {\n  @Override\n  public View createView(Context ctx, int layoutId) {\n    \tResources res = ctx.getResources();\n\n        RelativeLayout relativeLayout0 = new RelativeLayout(ctx);\n        relativeLayout0.setPadding((int)(TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,10,res.getDisplayMetrics())),0,0,0);\n\n        View view1 =(View) new X2C_2131296283_Head().createView(ctx,0);\n        RelativeLayout.LayoutParams layoutParam1 = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);\n        view1.setLayoutParams(layoutParam1);\n        relativeLayout0.addView(view1);\n        view1.setId(R.id.head);\n        layoutParam1.addRule(RelativeLayout.CENTER_HORIZONTAL,RelativeLayout.TRUE);\n\n        ImageView imageView2 = new ImageView(ctx);\n        RelativeLayout.LayoutParams layoutParam2 = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,(int)(TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,1,res.getDisplayMetrics())));\n        imageView2.setLayoutParams(layoutParam2);\n        relativeLayout0.addView(imageView2);\n        imageView2.setId(R.id.ccc);\n        layoutParam2.addRule(RelativeLayout.BELOW,R.id.head);\n\n        return relativeLayout0;\n  }\n}\n```\n#### Generated map file\n```java\n\n/**\n * WARN!!! don't edit this file\n *\n * author chengwei\n * email chengwei@zhangyue.com\n */\npublic class X2C127_activity implements IViewCreator {\n  @Override\n  public View createView(Context context) {\n        View view = null ;\n        int sdk = Build.VERSION.SDK_INT;\n        int orientation = context.getResources().getConfiguration().orientation;\n        boolean isLandscape = orientation == Configuration.ORIENTATION_LANDSCAPE;\n        if (isLandscape) {\n        \tview = new com.zhangyue.we.x2c.layouts.land.X2C127_Activity().createView(context);\n        } else if (sdk >= 27) {\n        \tview = new com.zhangyue.we.x2c.layouts.v27.X2C127_Activity().createView(context);\n        } else if (sdk >= 21) {\n        \tview = new com.zhangyue.we.x2c.layouts.v21.X2C127_Activity().createView(context);\n        } else {\n        \tview = new com.zhangyue.we.x2c.layouts.X2C127_Activity().createView(context);\n        }\n        return view;\n  }\n}\n\n```\n# not support\n*  The merge tag cannot determine the parent of the xml during compilation, so it cannot be supported.\n*  System style, only the style list of the application can be found during compilation, and the system style cannot be queried, so only the in-app style is supported.\n\n# support\n* ButterKnifer\n* DataBinding\n* android widget\n* customView\n* include tag\n* viewStub tag\n* fragment label\n* Application style\n* Custom attribute\n* System attribute\n\n| Attribute name|Attribute name|\n| ------ |------- |\n|android:textSize| app:layout_constraintRight_toLeftOf|\n|android:textColor| app:layout_constraintBottom_toTopOf|\n|android:text| app:layout_constraintTop_toTopOf|\n|android:background| app:layout_constrainedHeight|\n|[view all](supportAll.md)|\n\n\n\n## There are usage problems and other technical issues, welcome to exchange discussion\n\n> QQ群：`870956525`，Add please specify from`X2C`\n>\n> <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=4464e9ee4fc8b05ee3c4eeb4f4be97469c1cfe46cded6b00f4a887ebebb60916\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"掌阅X2C交流群\" title=\"掌阅X2C交流群\"></a>\n>\n> Welcome everyone to use, the project will continue to maintain\n>\n>\n> Another: welcome to join[IReader](http://www.zhangyue.com/jobs) family, study new Android technologies together. Please send your resume`huangjian@zhangyue.com`,Indicate the direction of employment。\n>\n# LICENSE\n\n```\nMIT LICENSE \nCopyright (c) 2018 zhangyue\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 8.126953125,
          "content": "# 背景\n[English](README.md)\n\n&ensp;一般大家在写页面时都是通过xml写布局，通过setContentView、或LayoutInflater.from(context).inflate方法将xml布局加载到内存中。\n\n#### 优点\n   *  可维护性好\n   *  支持即时预览\n   *  代码结构清晰\n\n#### 缺点\n   *  读取xml很耗时\n   *  递归解析xml较耗时\n   *  反射生成对象的耗时是new的3倍以上\n\n&ensp;&ensp;&ensp;&ensp;我们团队在这个问题上也探索过很多解决方案，一度走到了另一个极端，完全废弃xml，所有控件通过java来new，甚至直接在canvas里绘制，这样虽然性能确实提升了，但是代码已经没有了一丁点可读性，可维护性。\n&ensp;&ensp;&ensp;&ensp;我们后来反思代码到底是给机器看的，还是给人看的？？也许X2C已经给了我们一个答案\n\n# X2C\n\n&ensp;&ensp;&ensp;&ensp;为了即保留xml的优点，又解决它带来的性能问题，我们开发了X2C方案。即在编译生成APK期间，将需要翻译的layout翻译生成对应的java文件，这样对于开发人员来说写布局还是写原来的xml，但对于程序来说，运行时加载的是对应的java文件。\n&ensp;&ensp;&ensp;&ensp;我们采用APT（Annotation Processor Tool）+ JavaPoet技术来完成编译期间【注解】->【解注解】->【翻译xml】->【生成java】整个流程的操作。\n\n# 性能对比\n在开发集成完之后我们做了简单的测试，性能对比如下\n\n| 加载方式|次数|平均加载时间|\n| ------ | ------ |  ------ |\n|XML|100|30|\n|X2C|100|11|\n\n# 集成使用\n#### 1.导入依赖\n在module的build.gradle文件添加依赖\n```java\nannotationProcessor 'com.zhangyue.we:x2c-apt:1.1.2'\nimplementation 'com.zhangyue.we:x2c-lib:1.0.6'\n```\n\n#### 2.添加注解\n在使用布局的任意java类或方法添加注解即可\n```java\n@Xml(layouts = \"activity_main\")\n```\n\n\n#### 3.配置自定义属性(没有可不配)\n\n在module下建立X2C_CONFIG.xml文件，里面配置定义属性和方法的映射关系,如果接收者是view，则写view.否则填params.\n\n```mxl\n<x2c-config>\n    <attr name=\"app:mixColor\" toFunc=\"view.setMixColor(int)\" />\n    <attr name=\"android:layout_marginTop\" toFunc=\"params.topMargin=int\" />\n</x2c-config>\n```\n\n#### 4.通过X2C加载布局\n在原先使用setContentView或inflate的地方替换，如下：\n```java\nthis.setContentView(R.layout.activity_main); --> X2C.setContentView(this, R.layout.activity_main);\n```\n```java\nLayoutInflater.from(this).inflate(R.layout.activity_main,null); --> X2C.inflate(this,R.layout.activity_main,null);\n```\n\n\n# 过程文件\n\n#### 原始的xml\n\n  ```xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:paddingLeft=\"10dp\">\n\n    <include\n        android:id=\"@+id/head\"\n        layout=\"@layout/head\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerHorizontal=\"true\" />\n\n    <ImageView\n        android:id=\"@+id/ccc\"\n        style=\"@style/bb\"\n        android:layout_below=\"@id/head\" />\n</RelativeLayout>\n```\n\n#### 生成的java文件\n```java\n\n/**\n * WARN!!! dont edit this file\n * translate from {@link  com.zhangyue.we.x2c.demo.R.layout.activity_main}\n * autho chengwei\n * email chengwei@zhangyue.com\n */\npublic class X2C_2131296281_Activity_Main implements IViewCreator {\n  @Override\n  public View createView(Context ctx, int layoutId) {\n    \tResources res = ctx.getResources();\n\n        RelativeLayout relativeLayout0 = new RelativeLayout(ctx);\n        relativeLayout0.setPadding((int)(TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,10,res.getDisplayMetrics())),0,0,0);\n\n        View view1 =(View) new X2C_2131296283_Head().createView(ctx,0);\n        RelativeLayout.LayoutParams layoutParam1 = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,ViewGroup.LayoutParams.WRAP_CONTENT);\n        view1.setLayoutParams(layoutParam1);\n        relativeLayout0.addView(view1);\n        view1.setId(R.id.head);\n        layoutParam1.addRule(RelativeLayout.CENTER_HORIZONTAL,RelativeLayout.TRUE);\n\n        ImageView imageView2 = new ImageView(ctx);\n        RelativeLayout.LayoutParams layoutParam2 = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT,(int)(TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP,1,res.getDisplayMetrics())));\n        imageView2.setLayoutParams(layoutParam2);\n        relativeLayout0.addView(imageView2);\n        imageView2.setId(R.id.ccc);\n        layoutParam2.addRule(RelativeLayout.BELOW,R.id.head);\n\n        return relativeLayout0;\n  }\n}\n```\n#### 生成的映射文件\n```java\n\n/**\n * WARN!!! don't edit this file\n *\n * author chengwei\n * email chengwei@zhangyue.com\n */\npublic class X2C127_activity implements IViewCreator {\n  @Override\n  public View createView(Context context) {\n        View view = null ;\n        int sdk = Build.VERSION.SDK_INT;\n        int orientation = context.getResources().getConfiguration().orientation;\n        boolean isLandscape = orientation == Configuration.ORIENTATION_LANDSCAPE;\n        if (isLandscape) {\n        \tview = new com.zhangyue.we.x2c.layouts.land.X2C127_Activity().createView(context);\n        } else if (sdk >= 27) {\n        \tview = new com.zhangyue.we.x2c.layouts.v27.X2C127_Activity().createView(context);\n        } else if (sdk >= 21) {\n        \tview = new com.zhangyue.we.x2c.layouts.v21.X2C127_Activity().createView(context);\n        } else {\n        \tview = new com.zhangyue.we.x2c.layouts.X2C127_Activity().createView(context);\n        }\n        return view;\n  }\n}\n\n```\n# 不支持\n*  merge标签 ,在编译期间无法确定xml的parent，所以无法支持\n*  系统style,在编译期间只能查到应用的style列表，无法查询系统style，所以只支持应用内style\n\n# 支持\n* 兼容ButterKnifer\n* 兼容DataBinding\n* 各种系统控件、自定义控件\n* include标签\n* viewStub标签\n* fragment标签(感谢[Dreamskya](https://github.com/Dreamskya))提出宝贵意见\n* 应用style\n* 自定义属性(感谢[Anzhi-Meiying](https://github.com/Anzhi-Meiying)提出的宝贵意见)\n* 系统属性\n\n| 属性名称|属性名称|\n| ------ |------- |\n|android:textSize| app:layout_constraintRight_toLeftOf|\n|android:textColor| app:layout_constraintBottom_toTopOf|\n|android:text| app:layout_constraintTop_toTopOf|\n|android:background| app:layout_constrainedHeight|\n|[查看全部](supportAll.md)|\n\n\n\n## 有使用问题和其他技术问题，欢迎加群交流讨论\n\n> QQ群：`870956525`，添加请注明来自`X2C`\n>\n> <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=4464e9ee4fc8b05ee3c4eeb4f4be97469c1cfe46cded6b00f4a887ebebb60916\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"掌阅X2C交流群\" title=\"掌阅X2C交流群\"></a>\n>\n> 欢迎各位使用，该项目会持续维护。\n>\n>\n> 另：欢迎加入[掌阅](http://www.zhangyue.com/jobs)大家庭，一起研究Android新技术。简历请发送`huangjian@zhangyue.com`,注明应聘方向。\n>\n# LICENSE\n\n```\nMIT LICENSE \nCopyright (c) 2018 zhangyue\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n"
        },
        {
          "name": "app-databinding",
          "type": "tree",
          "content": null
        },
        {
          "name": "app-module",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.66015625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n\n    repositories {\n        jcenter()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.1.4'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        google()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\ntasks.withType(Javadoc) {\n    options.addStringOption('Xdoclint:none', '-quiet')\n    options.addStringOption('encoding', 'UTF-8')\n}"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.921875,
          "content": "# Project-wide Gradle settings.\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx1536m\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\nartifactory_contextUrl = http://192.168.6.84:8081/artifactory\nartifactory_user = qd.app\nartifactory_password = APHaUWn5pqkSTY1haJjtJ1t4nu4PAUYDBB7yQJdA1MCrTTGx311DrTjA6uKrjeQVCSVkk5mozTt3oq9jzmFV9rDvN8gb9RQya5JhJwh\n\n\n\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windows variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.1220703125,
          "content": "include ':app'\ninclude ':app-databinding'\ninclude ':app-module'\ninclude ':x2c-apt'\ninclude ':x2c-lib'\ninclude ':x2c-binding'\n"
        },
        {
          "name": "supportAll.md",
          "type": "blob",
          "size": 4.3251953125,
          "content": "# 支持的属性\n我们现在支持以下属性，我们会不断完善支持更多属性，也期待你的加入和我们一起完成这项工程\n\n| 属性名称|属性名称|\n| ------ |------- |\n|android:textSize| app:layout_constraintRight_toLeftOf|\n|android:textColor| app:layout_constraintBottom_toTopOf|\n|android:text| app:layout_constraintTop_toTopOf|\n|android:background| app:layout_constrainedHeight|\n|android:textStyle| app:layout_constrainedWidth|\n|android:layout_margin| app:layout_constraintVertical_bias|\n|android:layout_marginLeft| app:layout_constraintHorizontal_bias|\n|android:tag| app:layout_constraintHeight_default|\n|android:layout_marginTop| app:layout_constraintWidth_default|\n|android:layout_marginRight| app:layout_constraintVertical_weight|\n|android:layout_marginBottom| app:layout_constraintHorizontal_weight|\n|android:paddingLeft| app:layout_constraintVertical_chainStyle|\n|android:paddingTop| app:layout_constraintHorizontal_chainStyle|\n|android:paddingRight| app:layout_constraintCircle|\n|android:paddingBottom| app:layout_constraintCircleAngle|\n|android:padding| app:layout_constraintCircleRadius|\n|android:gravity| app:layout_goneMarginBottom|\n|android:orientation| app:layout_goneMarginLeft|\n|android:id| app:layout_goneMarginRight|\n|android:scaleType| app:layout_goneMarginTop|\n|android:src| app:layout_goneMarginEnd|\n|android:visibility| app:layout_goneMarginStart|\n|android:clipToPadding| app:layout_editor_absoluteY|\n|android:ellipsize| app:layout_editor_absoluteX|\n|android:lineSpacingExtra| app:layout_constraintBaseline_toBaselineOf|\n|android:maxLines| app:layout_constraintStart_toEndOf|\n|android:maxHeight| app:layout_constraintEnd_toEndOf|\n|android:maxWidth| app:layout_constraintEnd_toStartOf|\n|android:minWidth| app:layout_constraintStart_toStartOf|\n|android:minHeight| app:layout_constraintGuide_begin|\n|android:layout_centerInParent| app:layout_constraintGuide_end|\n|android:layout_centerVertical| app:layout_constraintGuide_percent|\n|android:layout_centerHorizontal| app:layout_constraintWidth_min|\n|android:layout_alignParentLeft| app:layout_constraintWidth_max|\n|android:layout_alignParentTop| app:layout_constraintHeight_min|\n|android:layout_alignParentRight| app:layout_constraintHeight_max|\n|android:layout_alignParentBottom| app:layout_constraintHeight_percent|\n|android:layout_above| app:layout_constraintWidth_percent|\n|android:layout_below|\n|android:layout_toLeftOf|\n|android:layout_toRightOf|\n|android:layout_alignLeft|\n|android:layout_alignTop|\n|android:layout_alignRight|\n|android:layout_alignBottom|\n|android:layout_marginEnd|\n|android:layout_marginStart|\n|android:paddingStart|\n|android:paddingEnd|\n|android:alpha|\n|android:layout_weight|\n|android:layout_gravity|\n|...|\n\n\n\n## 由使用问题和其他技术问题，欢迎加群交流讨论\n\n> QQ群：`558449447`，添加请注明来自`X2C`\n>\n> <a target=\"_blank\" href=\"http://shang.qq.com/wpa/qunwpa?idkey=4464e9ee4fc8b05ee3c4eeb4f4be97469c1cfe46cded6b00f4a887ebebb60916\"><img border=\"0\" src=\"http://pub.idqqimg.com/wpa/images/group.png\" alt=\"Android技术交流分享\" title=\"Android技术交流分享\"></a>\n>\n> 欢迎各位使用，该项目会持续维护。\n>\n>\n> 另：欢迎加入[掌阅](http://www.zhangyue.com/jobs)大家庭，一起研究Android新技术。简历请发送`huangjian@zhangyue.com`,注明应聘方向。\n>\n# LICENSE\n\n```\nMIT LICENSE \nCopyright (c) 2018 zhangyue\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n```\n"
        },
        {
          "name": "x2c-apt",
          "type": "tree",
          "content": null
        },
        {
          "name": "x2c-binding",
          "type": "tree",
          "content": null
        },
        {
          "name": "x2c-lib",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}