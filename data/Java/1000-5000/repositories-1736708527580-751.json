{
  "metadata": {
    "timestamp": 1736708527580,
    "page": 751,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cyrilmottier/GreenDroid",
      "stars": 2577,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1787109375,
          "content": "## Exclude file used by compilators, interpreters, etc.\n*/bin/*\n*/gen/*\n*.pyc\n\n## Exclude Mac OS X files\n*.DS_Store\n\n## The following files contain private values\n*/res/values/p_*.xml"
        },
        {
          "name": ".project",
          "type": "blob",
          "size": 0.7939453125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<projectDescription>\n\t<name>GreenDroid</name>\n\t<comment></comment>\n\t<projects>\n\t</projects>\n\t<buildSpec>\n\t\t<buildCommand>\n\t\t\t<name>com.android.ide.eclipse.adt.ResourceManagerBuilder</name>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t\t<buildCommand>\n\t\t\t<name>com.android.ide.eclipse.adt.PreCompilerBuilder</name>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t\t<buildCommand>\n\t\t\t<name>org.eclipse.jdt.core.javabuilder</name>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t\t<buildCommand>\n\t\t\t<name>com.android.ide.eclipse.adt.ApkBuilder</name>\n\t\t\t<arguments>\n\t\t\t</arguments>\n\t\t</buildCommand>\n\t</buildSpec>\n\t<natures>\n\t\t<nature>com.android.ide.eclipse.adt.AndroidNature</nature>\n\t\t<nature>org.eclipse.jdt.core.javanature</nature>\n\t</natures>\n</projectDescription>\n"
        },
        {
          "name": "CHANGES.mdown",
          "type": "blob",
          "size": 5.837890625,
          "content": "#GreenDroid Changes History\n\n##Changes from June 2, 2011 (version 0.2)\n\n- [NEW] Add a new `GDExpandableListActivity`. This is the GreenDroid equivalent to a regular `ExpandableListActivity`\n- [NEW] Add of a new theme attribute `gdTabIndicatorStyle` allowing basic `GDTabActivity` tabs styling\n- [NEW] Add of some basic `ImageProcessor`s.\n    * `ScaleImageProcessor` may be used to scale an image from the network prior displaying it\n    * `MaskImageProcessor` masks an image according to a given shape or `Bitmap`\n    * `ChainImageProcessor` sequentially applies `ImageProcessor`s to an image\n- [NEW] Add a new attribute in the style to change the color of all `ActionBarItem`\n    * `gdActionBarItemColorNormal` changes the color of all `ActionBarItem`s in normal mode\n    * `gdActionBarItemColorAlt` changes the color of all `ActionBarItem`s in alternative (pressed/focused) mode\n- [NEW] Add of a `MapPinDrawable` helping developers to easily create colored pins for `MapView`\n    * `MapPinDrawable` is based on the original creation of Roman Nurik for the [Cycle Hire Surgery][cycle_hire_surgery]\n- [NEW] Add of a new `PagedView` widget. A `PagedView` shows items in a 'paged' manner. Pages can be scrolled horizontally by swiping the `View`. The `PagedView` uses a reuse mechanism similar to the one used by the `ListView`. It is usually a good idea to show the user which page is currently on screen. This can be easily done with a `PageIndicator`.\n- [CHANGE] The `ThumbnailItemView` now uses an `AsyncImageView` instead of the regular `ImageView`\n    * This change allow developer to use URLs directly via the `greendroid:thumbnailURL` XML attribute or via the `thumbnailURL` property of the `ThumbnailItem`.\n- [CHANGE] Time related constants are now of type `long` (types previously used was `int`)\n- [CHANGE] Using one of the `setActionBarContentView` more than once was stacking views on top of each other. Starting from now `setActionBarContentView` acts like `setContentView` and remove all subviews prior setting the new one.\n- [FIXED] Using one of the `setActionBarContentView` in `GDListActivity` was buggy. The `setActionBarContentView` methods are helpers that should only be used in `GDActivity` to help developers adding an `ActionBar` to their already existing layouts. If you really want a custom layout in `GDListActivity` you should be using the `createLayout` method.\n- [FIXED] The `GDTabActivity` was not correctly handling clicks on the home button\n- [FIXED] Add missing leading zero for single digit hex values in the `MD5Utils` class\n\n##Changes from March 22, 2011 (version 0.11)\n\n- [CHANGE] Refactor on some GreenDroid style. Styles related to `ItemView`s are now named `@style/GreenDroid.Widget.ItemView.<The-Item-View>`\n    * This change may impact your code if you are extending GreenDroid's styles. There is no impact otherwise\n- [CHANGE] The `SegmentedBar` style has been refactored to be in accordance with other widget styles. It is now in `@style/GreenDroid.Widget`\n- [CHANGE] All XML files have been re-indented with tabs instead of spaces (used in Java files)\n- [FIXED] `ActionBar` title background has previously inherited from the `ActionBar`. As a result, using translucent backgrounds was quite hazardous.\n    * Starting for now, the `ActionBar` title has no background. The background is only given by the `ActionBar` itself.\n- [FIXED] The `ImageLoaderCallback.onImageLoadingFailed(ImageLoader loader, Throwable exception)` was sometimes called with a null `Throwable`.\n- [NEW] New `setBitmapFactoryOptions(BitmapFactory.Options)` and `setInDensity(int)` / `greendroid:inDensity` methods to `AsyncImageView`\n    * May be used to bypass the default image loading behavior. By default images loaded from the network are all considered\n    as mdpi images. Using a `BitmapFactory.Options` object with a inDensity to `DisplayMetrics.DENSITY_HIGH` will load images as hdpi images.\n- [NEW] Add of new Javadoc on some GreenDroid's classes (`AsyncImageView`, `Time`, `ImageProcessor`, etc.)\n- [NEW] Add of new `ActionBarItem.Type`. Almost 10 new icons are now available. Icons are extracted from the [Android Assets Studio][android_assets_studio] project by Roman Nurik\n- [NEW] GreenDroid now has a version number! This makes GreenDroid's versions and history tracking way easier. \n\n##Changes from March 1, 2011 (version 0.10)\n\n- [NEW] Add of a complete image loader system: `AsyncImageView` widget, `ImageLoader`, `ImageCache`, etc.\n- [FIXED] Class check issue in `GDTabActivity`\n- [NEW] `GDListActivity` does not force normal `ActionBar` mode anymore\n- [NEW] Add of a new `ActionBar.Type`: `ÀctionBar.Type.Empty`\n    * In this mode, the `ActionBar` has no \"Home\" button   \n- [NEW] `addActionBarItem()` methods now return the newly added `ActionBarItem`\n- [NEW] `ActionBarItem` can be \"tagged\". This makes `ActionBarItem` click handling way easier\n- [NEW] Add of a `removeItem(ActionBarItem)` in the `ActionBar` widget\n- [NEW] Add of a new `ActionBarDrawable` class that helps the developer easily creating `Drawable`s for `ActionBar`s\n    * The `ActionBarDrawable` takes a `Drawable` and automatically fill the shape with the white or black color\n    depending on its current state. It allows you to decrease the size of your project. (GreenDroid's size \n    has also decreased thanks to this optimization)\n- [NEW] Add of a `GDMapActivity`\n    * In order to use it you have to replace GreenDroid by the new GreenDroid-GoogleAPI library.\n    GreenDroid-GoogleAPIs already integrates the GreenDroid library.\n- [NEW] Add of a new `ActionBarActivity` extra parameter: `ÀctionBarActivity.GD_ACTION_BAR_VISIBILITY`\n    * Enable `ActionBar` visibility changes from parameters passed via an `Intent`. This may be useful when using\n    a reusable `GDActivity` inside a `GDTabActivity`.\n    \n[android_assets_studio]: http://j.mp/androidassetstudio\n[cycle_hire_surgery]: http://blog.radioactiveyak.com/2010/10/android-app-surgery-cycle-hire-widget.html"
        },
        {
          "name": "GDCatalog",
          "type": "tree",
          "content": null
        },
        {
          "name": "GreenDroid-GoogleAPIs",
          "type": "tree",
          "content": null
        },
        {
          "name": "GreenDroid",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.615234375,
          "content": "\n                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright (C) 2010 Cyril Mottier (http://www.cyrilmottier.com)\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License."
        },
        {
          "name": "README.mdown",
          "type": "blob",
          "size": 6.384765625,
          "content": "#GreenDroid\n\n_**Foreword** : This project, initially initiated by me, Cyril Mottier, is not maintained anymore and can be considered as deprecated. As a consequence, it will not receive any new features nor fixes. Please keep that in mind and use it at your own risks._\n\nGreenDroid is a development library for the Android platform. It is intended to make UI developments easier and consistent through your applications. A complete description is given on [my personal blog][personal_blog]. You can also take a tour to the GreenDroid website at <http://greendroid.cyrilmottier.com>!\n\n[![](http://lh4.ggpht.com/_OHO4y8YcQbs/TQFWEpSo-UI/AAAAAAAAMpc/DzAbSkhOx3I/s800/greendroid_logo.png)](http://lh4.ggpht.com/_OHO4y8YcQbs/TQFWEpSo-UI/AAAAAAAAMpc/DzAbSkhOx3I/s800/greendroid_logo.png)\n\nKeep in mind this is still a work in progress. There are thousands of things to do and I hope I'll have enough time to develop all of the features I have in mind :)\n\n[![](http://lh4.ggpht.com/_OHO4y8YcQbs/TQFQZTft6OI/AAAAAAAAMpY/hAloaii6kRA/s288/gd7.png)](http://lh4.ggpht.com/_OHO4y8YcQbs/TQFQZTft6OI/AAAAAAAAMpY/hAloaii6kRA/s800/gd7.png)\n[![](https://lh6.googleusercontent.com/-DuebAvhlkYo/Ted7VA4WzoI/AAAAAAAAMvc/fs9IRD4ZtgU/s288/gd8.png)](https://lh6.googleusercontent.com/-DuebAvhlkYo/Ted7VA4WzoI/AAAAAAAAMvc/fs9IRD4ZtgU/s800/gd8.png)\n[![](https://lh6.googleusercontent.com/-oQoXEMJcO0E/Ted7UeGFemI/AAAAAAAAMvY/HpfJVIVE6-4/s288/gd9.png)](https://lh6.googleusercontent.com/-oQoXEMJcO0E/Ted7UeGFemI/AAAAAAAAMvY/HpfJVIVE6-4/s800/gd9.png)\n[![](http://lh6.ggpht.com/_OHO4y8YcQbs/TQFQTfazM2I/AAAAAAAAMpQ/lgPpIKImdZw/s288/gd5.png)](http://lh6.ggpht.com/_OHO4y8YcQbs/TQFQTfazM2I/AAAAAAAAMpQ/lgPpIKImdZw/s800/gd5.png)\n[![](http://lh3.ggpht.com/_OHO4y8YcQbs/TQFQS5hyrKI/AAAAAAAAMpM/4hqL9y_tVgM/s288/gd4.png)](http://lh3.ggpht.com/_OHO4y8YcQbs/TQFQS5hyrKI/AAAAAAAAMpM/4hqL9y_tVgM/s800/gd4.png)\n\nA sample application can be downloaded on the [Android Market][gd_catalog_market]\n\n##Contacts\n\nFeel free to contact me for any question related to GreenDroid: bug report, questions about the library, etc. I don't have time to provide personal support but I'll try to look at bug reports and important talks about the GreenDroid philosophy.\n\n##Using GreenDroid in your projects\n\n***Note :*** The previous `greendroid.py` method has been removed from the library. Indeed, this Python script was perfectly functional but wasn't user-friendly (especially for Windows users). Creating libraries for Android is now handled by the ADT plugin.\n\nIn order to use GreenDroid you have to do the following steps:\n\n1. Download the GreenDroid library on your computer with a simple: `git clone http://github.com/cyrilmottier/GreenDroid.git`.\n   As usual, Git will clone the GreenDroid repository and create a folder GreenDroid that contains a 3 folders:\n   * GreenDroid: the core library. This is the code that will be mostly linked to your code\n   * GreenDroid-GoogleAPIs: GreenDroid's extension including Google APIs related features (GDMapActivity for instance)\n   * GDCatalog: the demonstration application. This project contains a lot of snippet of code showing you how to use GreenDroid.\n\n2. Since [May 2010][adt_history], the ADT plugin added an amazing new feature: the ability to work with library projects.\n   Using GreenDroid consists on applying the GreenDroid project as a library to your application. A complete description on how\n   to use library projects is given on the [Android documentation website][library_project_doc]. Make sure your\n   development environment uses the latest tools and platforms, since older releases of the tools and platforms do not support\n   building with library project.\n   * In case you want to use some Google APIs features, make sure you are using the GreenDroid-GoogleAPIs library. GreenDroid-GoogleAPIs is based on GreenDroid. As a result, you don't need to link GreenDroid as an Android library to your project.\n\n3. By default, the GreenDroid theme inherits from `@android:style/Theme`. If your project inherits from a different theme, \n   you'll have to modify the GreenDroid library on your own (and do that everytime you are updating GreenDroid as updating \n   deletes all of your changes - still working on a way to overcome that problem). Open the `res/values/gd_themes.xml` and\n   replace the parent theme `@android:style/Theme` with your own theme.\n\n4. A lot of GreenDroid's feature (`GDActivity`, `GDListActivity` or `GDTabActivity` for instance) requires your application \n   to be a `GDApplication` so make sure your application is a `GDApplication` class. In order to do that, simply \n   add `android:name=\"greendroid.app.GDApplication` (where `greendroid.app.GDApplication` may be replaced by  your own class \n   that inherits from `GDApplication`) in the application tag of your `AndroidManifest.xml`.\n\n5. You finally need to make your project use the GreenDroid base theme. In your `AndroidManifest.xml`, go to the application tag \n   and add `android:theme=\"@style/Theme.GreenDroid\"` as a new attribute.\n\n##Using the GDCatalog application\n\nThe GreenDroid project includes a demo projet called GDCatalog. This project shows some of the GreenDroid's features. I strongly encourage you to look at it as it's a great way to apprehend the library and understand how to use it in a correct manner.\n\nGDCatalog obviously uses the GreenDroid library. As a result, it won't build until GreenDroid has been applied to it. If your IDE is up-to-date you'll have nothing particular to do. Simply press the \"Play\" button!\n\n##Documentation\n\nGreenDroid documentation is available online at <http://greendroid.cyrilmottier.com>.\n\n##Software Requirements\n\nGreenDroid has been designed for Android 1.6 and greater. It may work on Android 1.5 but I don't want to provide support for this platform as it's way too old ... It has been developed using the following software:\n\n  * Eclipse IDE 3.6\n  * Android SDK 4 (android-4)\n  * Android Development Tools (ADT) 8.0.1\n\nGo the [Android Developers website][android_developers_website] for complete installation instructions.\n\n##Credits\n\nCopyright © Cyril Mottier <cyril@cyrilmottier.com>\n\n[android_developers_website]: http://d.android.com/sdk/installing.html\n[personal_blog]: http://android.cyrilmottier.com/?p=240\n[adt_history]: http://d.android.com/sdk/eclipse-adt.html#notes\n[library_project_doc]: http://developer.android.com/tools/projects/projects-eclipse.html#ReferencingLibraryProject\n[gd_catalog_market]: http://market.android.com/details?id=com.cyrilmottier.android.gdcatalog\n"
        },
        {
          "name": "TODO.mdown",
          "type": "blob",
          "size": 1.052734375,
          "content": "GreenDroid To Do List\n=====================\n***Note**: The following lines are only ideas I had/have for the GreenDroid library. Writting everything here is a easy way for me not to forgot any idea and also a great opportunity for courageous people to help me improving GreenDroid. As a result, the following features may or may not be implemented in the future. GreenDroid users should not rely on their possible implementation.*\n\n- Modify AsyncImageView and ImageLoader so that they both handle mdpi/hdpi/xhdpi images\n    * A great way to do it would be to look at the file extension. Let's say\n    we have downloaded a file named image1.hdpi.jpg : we can consider it's an image for hdpi screens\n    \n- Develop a powerful on-disk cache mecanism.\n    * This cache MUST be powerful, reliable and it has to work with as few memory as possible.\n    \n- Develop a QuickActionInflater that inflates QuickActions from an XML file\n    * This is very similar to the MenuInflater\n    \n- Make QuickActions \"id-enabled\" like ActionBarItems.\n    * Will help handling QuickActionItems click."
        }
      ]
    }
  ]
}