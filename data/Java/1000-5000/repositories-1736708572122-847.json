{
  "metadata": {
    "timestamp": 1736708572122,
    "page": 847,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mqzhangw/JIMU",
      "stars": 2425,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0751953125,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea\n.DS_Store\n/build\n/captures\n/local_repo"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0751953125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2017  Luojilab\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.8359375,
          "content": "## JIMU\n\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/luojilab/DDComponentForAndroid/pulls)\n[![License](https://img.shields.io/badge/License-Apache%202.0-orange.svg)](https://github.com/luojilab/DDComponentForAndroid/blob/master/LICENSE) \n\n### 项目介绍\nJIMU（积木）是一套Android组件化框架，支持组件的代码资源隔离、单独调试、集成调试、组件交互、UI跳转、生命周期等完整功能。\n\n取名为JIMU（积木），其含义是应用这套框架可以做到组件之间的完全隔离，每个组件可以单独运行，同时又可以通过“接口”任意拼接成一个完成APP，这种能力就是我们实施组件化的最终目的。\n\n### 最新版本\n\n> 2021-06-10补充：\n> 因为我的错误操作，导致发布到MavenCentral的版本：\n> \n> * build-gradle：1.3.5\n> * componentlib: 1.3.3\n> * router-anno-compiler: 1.0.1 \n> 均出现了Pom文件错误，遗失了dependency，再问题被修正前，可以按照hotfix-bad-pom分支的内容，做紧急修复。致歉 -- leobert\n\n> 2021-05-23补充：\n> 受JFrog运营策略影响，项目重新发布到MavenCentral，注意仓库变更\n\n[release-note&change-logs](https://github.com/mqzhangw/JIMU/releases) 关注版本变更以及注意事项是个好习惯。\n\n模块|build-gradle|componentlib|router-anno-compiler|router-annotation\n---|---|---|---|---\n最新版本|[![Download](https://img.shields.io/maven-central/v/io.github.leobert-lan/jimu-build-gradle.svg?label=Maven%20Central)](https://search.maven.org/artifact/io.github.leobert-lan/jimu-build-gradle)|[![Download](https://img.shields.io/maven-central/v/io.github.leobert-lan/jimu-componentlib.svg?label=Maven%20Central)](https://search.maven.org/artifact/io.github.leobert-lan/jimu-componentlib)|[![Download](https://img.shields.io/maven-central/v/io.github.leobert-lan/jimu-router-anno-compiler.svg?label=Maven%20Central)](https://search.maven.org/artifact/io.github.leobert-lan/jimu-router-anno-compiler)|[![Download](https://img.shields.io/maven-central/v/io.github.leobert-lan/jimu-router-annotation.svg?label=Maven%20Central)](https://search.maven.org/artifact/io.github.leobert-lan/jimu-router-annotation)\n\n\n### 实现功能：\n- 组件可以单独调试\n- 杜绝组件之前相互耦合，代码完全隔离，彻底解耦\n- 组件之间通过接口+实现的方式进行数据传输\n- 使用scheme和host路由的方式进行activity之间的跳转\n- 自动生成路由跳转路由表\n- 任意组件可以充当host，集成其他组件进行集成调试\n- 可以动态对已集成的组件进行加载和卸载\n- 支持kotlin组件\n- 组件独立运行的Manifest可以基于“壳”和组件原始的Manifest合并生成（from version 1.3.4）\n- 组件初始化支持按序（from version 1.3.4）这部分基于[Maat](https://github.com/leobert-lan/Maat), [参考博客](https://juejin.im/post/6884492604370026503/)\n\n\n### 原理解析\n组件化设计思路 [浅谈Android组件化](https://mp.weixin.qq.com/s/RAOjrpie214w0byRndczmg)\n\n原理解释请参考文章[Android彻底组件化方案实践](http://www.jianshu.com/p/1b1d77f58e84)\n\ndemo解读请参考文章[Android彻底组件化demo发布](http://www.jianshu.com/p/59822a7b2fad)\n\n按序初始化业务组件请参考文章[组件化：代码隔离也难不倒组件的按序初始化 ](https://juejin.im/post/6884492604370026503/)\n\n单项目，多module背景下，依赖方式的优雅实践探索：[三思系列：组件化场景下module依赖优雅实践方案 ](https://juejin.cn/post/6925629544946892813)\n\n### 使用指南\n#### 1、主项目引用编译脚本\n在根目录的gradle.properties文件中，增加属性：\n\n```ini\nmainmodulename=app\n```\n其中mainmodulename是项目中的host工程，一般为app\n\n添加mavenCentral仓库\n\n在根目录的build.gradle中增加配置\n\n```gradle\nbuildscript {\n    dependencies {\n        classpath 'io.github.leobert-lan:jimu-build-gradle:A.B.C'\n    }\n}\n```\n*A.B.C是版本号，最新的版本号可以参考上面的MavenCentral外链*\n\n为每个组件引入依赖库，如果项目中存在basiclib等基础库，可以统一交给basiclib引入\n\n```gradle\ncompile 'io.github.leobert-lan:jimu-componentlib:A.B.C'\n```\n*注意GroupId和ArtifactId在重新发布到MavenCentral后已经变更*\n\n```gradle\n'componentLib'        : 'io.github.leobert-lan:jimu-componentlib:{version}',\n'router_anno'         : 'io.github.leobert-lan:jimu-router-annotation:{version}',\n'router_anno_compiler': 'io.github.leobert-lan:jimu-router-anno-compiler:{version}',\n```\n\n#### 2、拆分组件为module工程\n在每个组件的工程目录下新建文件gradle.properties文件，增加以下配置：\n\n```ini\nisRunAlone=true\ndebugComponent=sharecomponent\ncompileComponent=sharecomponent\n```\n上面三个属性分别对应是否单独调试、debug模式下依赖的组件，release模式下依赖的组件。具体使用方式请解释请参见上文第二篇文章\n\n#### 3、应用组件化编译脚本\n在组件和host的build.gradle都增加配置：\n\n```gradle\napply plugin: 'com.dd.comgradle'\n```\n\n注意：不需要在引用com.android.application或者com.android.library\n\n同时增加以下extension配置：\n\n```gradle\ncombuild {\n    applicationName = 'com.luojilab.reader.runalone.application.ReaderApplication'\n    isRegisterCompoAuto = true\n}\n```\n组件注册还支持反射的方式，有关isRegisterCompoAuto的解释请参见上文第二篇文章\n\n##### 1.3.4新特性\n\n```\ndef projectRoot = project.getRootProject().rootDir.absolutePath\n\ncombuild {\n    applicationName = 'com.luojilab.reader.runalone.application.ReaderApplication'\n    isRegisterCompoAuto = false\n\n    originalManifest = projectRoot + \"/readercomponent/src/main/AndroidManifest.xml\"\n\n    runAloneManifest = projectRoot + \"/readercomponent/src/main/runalone/AndroidManifest.xml\"\n    targetManifest = projectRoot + \"/readercomponent/src/main/runalone/mergedManifest.xml\"\n    //如果不需要合并，改为false\n    enableManifestMerge = true\n}\n\n```\n\n增加了5个可配项目：\n\n* useMaat 默认为true，本处没有写，如果你不打算使用Maat，务必改为false，否则会织入代码并发生ClassNotFoundException\n* originalManifest 原始manifest文件路径\n* runAloneManifest 一个壳manifest，用于指定独立运行时额外需要的权限、Application配置，启动Activity、额外的四大组件，metadata\n* targetManifest 合并后输出的manifest，需要先创建文件，runalone使用的manifest；*如不先创建会影响gradle任务，被认为是一个缺失manifest的Component！*\n* enableManifestMerge 如果是true，则会在合适的时机执行manifest合并功能，并且插件中增加的如：runaloneMergeDebugManifest等任务会执行合并，否则该任务并不会合并manifest文件\n\n#### 4、混淆\n在混淆文件中增加如下配置\n\n```\n-keep interface * {\n  <methods>;\n}\n-keep class com.luojilab.component.componentlib.** {*;}\n-keep class com.luojilab.gen.router.** {*;}\n-keep class * implements com.luojilab.component.componentlib.router.ISyringe {*;}\n-keep class * implements com.luojilab.component.componentlib.applicationlike.IApplicationLike {*;}\n\n```\n\n*注意：com.luojilab.component.componentlib和com.luojilab.gen.router包可能在项目迁移的过程中发生过或即将发生变化，文档更新不一定及时，请手工确认一下生成类的包路径。*\n\n关于如何进行组件之间数据交互和UI跳转，请参看 [Wiki](https://github.com/mqzhangw/JIMU/wiki)\n关于消息中间件，请参考[v1.3.3releaseNote](https://github.com/mqzhangw/JIMU/releases/tag/v1.3.3)\n\n\n### 组件化讨论群\nJIMU的讨论群，群号693097923，欢迎大家加入：\n\n![进群请扫码](https://upload-images.jianshu.io/upload_images/6650461-6adc3ed96ebd8d70.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)\n\nPS:最近千人群满了，建议一些基础性问题仔细琢磨下文章，比较麻烦的问题提issue求助。\n"
        },
        {
          "name": "jimu-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "jimu-sample-project",
          "type": "tree",
          "content": null
        },
        {
          "name": "src_build",
          "type": "tree",
          "content": null
        },
        {
          "name": "stop_gradle.bat",
          "type": "blob",
          "size": 0.013671875,
          "content": "gradlew --stop"
        },
        {
          "name": "得到组件化改造大流程   by leobert.png",
          "type": "blob",
          "size": 303.1865234375,
          "content": null
        }
      ]
    }
  ]
}