{
  "metadata": {
    "timestamp": 1736708176289,
    "page": 640,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jjoe64/GraphView",
      "stars": 2762,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1162109375,
          "content": "_Store\n\n\n# Generated by http://gitignore.io\n\n### Eclipse ###\n*.pydevproject\n.project\n.metadata\nbin/**\ntmp/**\ntmp/**/*\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.classpath\n.settings/\n.loadpath\n\n# External tool builders\n.externalToolBuilders/\n\n# Locally stored \"Eclipse launch configurations\"\n*.launch\n\n# CDT-specific\n.cproject\n\n# PDT-specific\n.buildpath\n\n### IntelliJ ###\n*.iml\n*.ipr\n*.iws\n.idea/\n\n### Android ###\n# built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated files\nbin/\ngen/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Eclipse project files\n.classpath\n.project\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Proguard folder generated by Intellij\nproguard_logs/\n\n# Intellij project files\n*.iml\n*.ipr\n*.iws\n.idea/\n\nadt-bundle-windows-x86_64/\n\n### Windows ###\n# Windows image file caches\nThumbs.db\nehthumbs.db\n\n# Folder config file\nDesktop.ini\n\n# Recycle Bin used on file shares\n$RECYCLE.BIN/\n\n### Linux ###\n.*\n!.gitignore\n*~\n# Generated by http://gitignore.io\n\n### Gradle ###\n# Exclude Folder List #\n.gradle/\nbuild/\n.gradletasknamecache\ngradle.properties\n\n"
        },
        {
          "name": "README.markdown",
          "type": "blob",
          "size": 3.46484375,
          "content": "# Chart and Graph Library for Android\n\n## Project maintainer wanted! For time reasons I can not continue to maintain GraphView. Contact me if you are interested and serious about this project. g.jjoe64@gmail.com\n\n## What is GraphView\n\nGraphView is a library for Android to programmatically create\nflexible and nice-looking diagrams.\nIt is **easy** to understand, to integrate and to customize.\n\nSupported graph types:\n* Line Graphs\n* Bar Graphs\n* Point Graphs\n* or implement your own custom types.\n\n<img src=\"https://raw.githubusercontent.com/jjoe64/GraphView/master/anim.gif\" title=\"Animation\" />\n<img src=\"https://raw.githubusercontent.com/jjoe64/GraphView/master/zooming.gif\" title=\"Zooming, Scrolling\" />\n<img src=\"https://lh3.googleusercontent.com/v2Ga3ReduITLtP3QJCc8GhOhBHzpyoKiW8SoRh35ydPP45f05BoDN3vSDJxvWB9uY0RU=h900-rw\" height=\"200\" />\n<img src=\"https://lh5.ggpht.com/29xLPw1BGGyyvUYgTsRt3E2rlGIH8lTbzYfnxuZJgNOT3hXy3Ggu4o3fPQZWw9u_aso=h900-rw\" height=\"200\" />\n<img src=\"http://www.android-graphview.org/uploads/4/1/5/7/41578917/6509264_orig.png\" height=\"200\" />\n\n## Top Features\n\n* Line Chart, Bar Chart, Points\n* Combination of different graph types\n* Scrolling vertical and horizontal\n. You can scroll with a finger touch move gesture.\n* Scaling / Zooming vertical and horizontal\n. With two-fingers touch scale gesture (Multi-touch), the viewport can be changed.\n* Realtime Graph (Live change of data)\n* Second scale axis\n* Draw multiple series of data\n. Let the diagram show more that one series in a graph. You can set a color and a description for every series.\n* Show legend\n. A legend can be displayed inline the chart. You can set the width and the vertical align (top, middle, bottom).\n* Custom labels\n. The labels for the x- and y-axis are generated automatically. But you can set your own labels, Strings are possible.\n* Handle incomplete data\n. It's possible to give the data in different frequency.\n* Viewport\n. You can limit the viewport so that only a part of the data will be displayed.\n* Manual Y axis limits\n* And much more... Check out the project page and/or the demo app\n\n## How to use\n\n1) Add gradle dependency:\n```\nimplementation 'com.jjoe64:graphview:4.2.2'\n```\n\n2) Add view to layout:\n```xml\n<com.jjoe64.graphview.GraphView\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"200dip\"\n        android:id=\"@+id/graph\" />\n```\n\n3) Add some data:\n```java\nGraphView graph = (GraphView) findViewById(R.id.graph);\nLineGraphSeries<DataPoint> series = new LineGraphSeries<DataPoint>(new DataPoint[] {\n          new DataPoint(0, 1),\n          new DataPoint(1, 5),\n          new DataPoint(2, 3),\n          new DataPoint(3, 2),\n          new DataPoint(4, 6)\n});\ngraph.addSeries(series);\n```\n\n## Download Demo project at Google Play Store\n\n<img src=\"https://lh3.googleusercontent.com/yOrpE93m3N_Zr7kEUbnET6eFLGwmWA_a5kGa8XQcVrHeOse7K-zFN9s-gmwdRX3LN7A=w300-rw\" width=\"64\" /><br/>\n<a href=\"https://play.google.com/store/apps/details?id=com.jjoe64.graphview_demos\" title=\"GraphView Demos\">Showcase GraphView Demo App</a>\n\n## More examples and documentation\n\n<a href=\"https://github.com/jjoe64/GraphView/wiki\">Get started at project wiki homepage</a>\n\nTo show you how to integrate the library into an existing project see the GraphView-Demos project!\nSee GraphView-Demos for examples.\n<a href=\"https://github.com/jjoe64/GraphView-Demos\">https://github.com/jjoe64/GraphView-Demos<br/>\n<a href=\"https://github.com/jjoe64/GraphView/wiki\">View GraphView wiki page https://github.com/jjoe64/GraphView/wiki</a>\n"
        },
        {
          "name": "README.new-version.md",
          "type": "blob",
          "size": 1.1318359375,
          "content": "How to create a new version for maven repo\n--------------------------------------------\ncreate sources.jar\n- $ jar cvf sources.jar src\n\ncreate java doc jar\n- $ mkdir javadoc\n- $ javadoc -d javadoc -sourcepath src/main/java/ -subpackages com.jjoe64\n- $ jar cvf javadoc.jar javadoc\n\nchange version in gradle.properties\n\nuncomment part for publishing in build.gradle\n\n(once) create a gpg file\n- gpg --gen-key\n\n(once) publish key\n- gpg --send-keys D8C3B041\nand/or here as ascii\n- gpg --export -a D8C3B041\n- http://keyserver.ubuntu.com:11371/\n\n=> needs some time\n\nhardcode gpg key password in maven_push.gradle\n\nhardcode user/pwd of nexus account in maven_push.gradle\n\nsuccess gradle task uploadArchives\n-  ./gradlew --rerun-tasks uploadArchives\n- enter gpg info (id:D8C3B041 / path: /Users/jonas/.gnupg/secring.gpg / PWD)\n\nopen https://oss.sonatype.org\n\nlogin\n\nStaging Repositiories\n\nsearch: jjoe64\n\nClose entry\n\nRefresh/Wait\n\nRelease entry\n\nWait some days\n\n## update java doc\n\n$ javadoc -d javadoc -sourcepath src/main/java/ -subpackages com.jjoe64\n$ mv javadoc/ ..\n$ git checkout gh-pages \n$ rm -rf javadoc\n$ mv ../javadoc/ .\n$ git add javadoc\n$ git commit -a\n\n"
        },
        {
          "name": "anim.gif",
          "type": "blob",
          "size": 322.232421875,
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.18359375,
          "content": "buildscript {\n    repositories {\n        mavenCentral()\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.5.3'\n    }\n}\n\nwrapper {\n    gradleVersion = '5.6'\n}\n\napply plugin: 'com.android.library'\n\n\nandroid {\n    compileSdkVersion 27\n    buildToolsVersion '28.0.3'\n\n    defaultConfig {\n        minSdkVersion 9\n        targetSdkVersion 27\n        versionCode 1\n        versionName \"1.0\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n        }\n    }\n      lintOptions {\n          abortOnError false\n      }\n\n}\n\ndependencies {\n    implementation 'androidx.core:core:1.0.0-beta01'\n}\n\n\n//this is used to generate .jar files and push to maven repo\n// This is the actual solution, as in http://stackoverflow.com/a/19037807/1002054\ntask clearJar(type: Delete) {\n    delete 'build/outputs/myCompiledLibrary.jar'\n}\n\ntask makeJar(type: Copy) {\n    from('build/intermediates/bundles/release/')\n    into('build/outputs/')\n    include('classes.jar')\n    rename ('classes.jar', 'myCompiledLibrary.jar')\n}\n\nmakeJar.dependsOn(clearJar, build)\n\n\napply from: './maven_push.gradle'\n\nrepositories {\n    google()\n    mavenCentral()\n    jcenter()\n}"
        },
        {
          "name": "doc-assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "favicon.ico",
          "type": "blob",
          "size": 1.373046875,
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.59375,
          "content": "VERSION_NAME=4.2.2\nVERSION_CODE=17\nGROUP=com.jjoe64\n\nPOM_DESCRIPTION=Android Graph Library for creating zoomable and scrollable charts.\nPOM_URL=http://android-graphview.org/\nPOM_SCM_URL=https://github.com/jjoe64/GraphView\nPOM_SCM_CONNECTION=scm:git@github.com:jjoe64/GraphView.git\nPOM_SCM_DEV_CONNECTION=scm:git@github.com:jjoe64/GraphView.git\nPOM_LICENCE_NAME=Apache License, Version 2.0\nPOM_LICENCE_URL=https://github.com/jjoe64/GraphView/blob/master/license.txt\nPOM_LICENCE_DIST=repo\nPOM_DEVELOPER_ID=jjoe64\nPOM_DEVELOPER_NAME=Jonas Gehring\n\nPOM_NAME=GraphView\nPOM_ARTIFACT_ID=graphview\nPOM_PACKAGING=aar\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.20703125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 9.4677734375,
          "content": "Copyright 2016 Jonas Gehring\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\nApache License\n\nVersion 2.0, January 2004\n\nhttp://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n\"License\" shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document.\n\n\"Licensor\" shall mean the copyright owner or entity authorized by the copyright owner that is granting the License.\n\n\"Legal Entity\" shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, \"control\" means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity.\n\n\"You\" (or \"Your\") shall mean an individual or Legal Entity exercising permissions granted by this License.\n\n\"Source\" form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files.\n\n\"Object\" form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types.\n\n\"Work\" shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below).\n\n\"Derivative Works\" shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof.\n\n\"Contribution\" shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, \"submitted\" means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as \"Not a Contribution.\"\n\n\"Contributor\" shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions:\n\nYou must give any other recipients of the Work or Derivative Works a copy of this License; and\nYou must cause any modified files to carry prominent notices stating that You changed the files; and\nYou must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and\nIf the Work includes a \"NOTICE\" text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. \n\nYou may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License.\n5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "maven_push.gradle",
          "type": "blob",
          "size": 3.4775390625,
          "content": "apply plugin: 'maven'\napply plugin: 'signing'\n\nimport org.gradle.plugins.signing.Sign\n\ngradle.taskGraph.whenReady { taskGraph ->\n    if (taskGraph.allTasks.any { it instanceof Sign }) {\n        // Use Java 6's console to read from the console (no good for\n        // a CI environment)\n        Console console = System.console()\n        console.printf \"\\n\\nWe have to sign some things in this build.\" +\n                \"\\n\\nPlease enter your signing details.\\n\\n\"\n\n        def id = \"D8C3B041\"\n        def file = \"/Users/jonas/.gnupg/secring.gpg\"\n        def password = \"\"\n\n        allprojects { ext.\"signing.keyId\" = id }\n        allprojects { ext.\"signing.secretKeyRingFile\" = file }\n        allprojects { ext.\"signing.password\" = password }\n\n        console.printf \"\\nThanks.\\n\\n\" + file\n    }\n}\n\ndef sonatypeRepositoryUrl\nif (isReleaseBuild()) {\n    println 'RELEASE BUILD'\n    sonatypeRepositoryUrl = hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL\n            : \"https://oss.sonatype.org/service/local/staging/deploy/maven2/\"\n} else {\n    println 'DEBUG BUILD'\n    sonatypeRepositoryUrl = hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL\n            : \"https://oss.sonatype.org/content/repositories/snapshots/\"\n}\n\ndef getRepositoryUsername() {\n    return \"\"\n}\n\ndef getRepositoryPassword() {\n    return \"\"\n}\n\ndef isReleaseBuild() {\n    return version.contains(\"SNAPSHOT\") == false\n}\n\nafterEvaluate { project ->\n    uploadArchives {\n        repositories {\n            mavenDeployer {\n                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }\n\n                pom.groupId = GROUP\n                pom.artifactId = POM_ARTIFACT_ID\n                pom.version = VERSION_NAME\n\n                repository(url: sonatypeRepositoryUrl) {\n                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())\n                }\n\n                pom.project {\n                    name POM_NAME\n                    packaging POM_PACKAGING\n                    description POM_DESCRIPTION\n                    url POM_URL\n\n\n                    scm {\n                        url POM_SCM_URL\n                        connection POM_SCM_CONNECTION\n                        developerConnection POM_SCM_DEV_CONNECTION\n                    }\n\n                    licenses {\n                        license {\n                            name POM_LICENCE_NAME\n                            url POM_LICENCE_URL\n                            distribution POM_LICENCE_DIST\n                        }\n                    }\n\n                    developers {\n                        developer {\n                            id POM_DEVELOPER_ID\n                            name POM_DEVELOPER_NAME\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    signing {\n        required { isReleaseBuild() && gradle.taskGraph.hasTask(\"uploadArchives\") }\n        sign configurations.archives\n    }\n\n    task androidJavadocs(type: Javadoc) {\n        source = android.sourceSets.main.java.sourceFiles\n    }\n\n    task androidJavadocsJar(type: Jar) {\n        classifier = 'javadoc'\n        //basename = artifact_id\n        from androidJavadocs.destinationDir\n    }\n\n    task androidSourcesJar(type: Jar) {\n        classifier = 'sources'\n        //basename = artifact_id\n        from android.sourceSets.main.java.sourceFiles\n    }\n\n    artifacts {\n        //archives packageReleaseJar\n        archives androidSourcesJar\n        archives androidJavadocsJar\n    }\n}\n"
        },
        {
          "name": "proguard-rules.txt",
          "type": "blob",
          "size": 0.6669921875,
          "content": "# Add project specific ProGuard rules here.\n# By default, the flags in this file are appended to flags specified\n# in /home/jonas/android-studio/android-studio/sdk/tools/proguard/proguard-android.txt\n# You can edit the include path and order by changing the ProGuard\n# include property in project.properties.\n#\n# For more details, see\n#   http://developer.android.com/guide/developing/tools/proguard.html\n\n# Add any project specific keep options here:\n\n# If your project uses WebView with JS, uncomment the following\n# and specify the fully qualified class name to the JavaScript interface\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}"
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "zooming.gif",
          "type": "blob",
          "size": 196.0693359375,
          "content": null
        }
      ]
    }
  ]
}