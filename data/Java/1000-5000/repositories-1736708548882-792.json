{
  "metadata": {
    "timestamp": 1736708548882,
    "page": 792,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Swagger2Markup/swagger2markup",
      "stars": 2500,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0751953125,
          "content": ".idea\n*.iml\n.gradle\nbuild\n/bin/\n/.classpath\n/.project\n/.settings/\n*.ipr\n*.iws"
        },
        {
          "name": "ISSUE_TEMPLATE",
          "type": "blob",
          "size": 0.369140625,
          "content": "Thanks for raising a Swagger2Markup issue. Please provide a brief description of your problem along with the Swagger2Markup version you are using. If possible, please also consider putting together a complete Swagger specification that reproduces the issue. It's better if the Swagger specification is small and isolate the issue.\n\nSwagger2Markup version:\n\nProblem description:\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 6.357421875,
          "content": "= Swagger2Markup\n:author: Robert Winkler\n:hardbreaks:\n\nimage:https://coveralls.io/repos/Swagger2Markup/swagger2markup/badge.svg[\"Coverage Status\", link=\"https://coveralls.io/r/Swagger2Markup/swagger2markup\"] image:https://api.codacy.com/project/badge/grade/498a6a39d7d84ff687546359f58ee18d[\"Codacy code quality\", link=\"https://www.codacy.com/app/robwin/swagger2markup\"] image:https://api.bintray.com/packages/swagger2markup/Maven/swagger2markup/images/download.svg[link=\"https://bintray.com/swagger2markup/Maven/swagger2markup/_latestVersion\"] image:http://img.shields.io/badge/license-ASF2-blue.svg[\"Apache License 2\", link=\"http://www.apache.org/licenses/LICENSE-2.0.txt\"] image:https://img.shields.io/badge/Twitter-rbrtwnklr-blue.svg[\"Twitter\", link=\"https://twitter.com/rbrtwnklr\"] image:https://badges.gitter.im/Join%20Chat.svg[link=\"https://gitter.im/RobWin/swagger2markup?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"]\n\n\n== Overview\n\n\nNOTE: Dear community,\nunfortunately I can't maintain Swagger2Markup alone anymore. There are many interesting new topics:\n1) Swagger v3 support\n2) Fixing bugs\n2) Merge Swagger2Markup repositories and create a new multi-module repository.\nAny help is welcome.\nKind regards,\nRobert\n\n\nThe primary goal of this project is to *simplify the generation of an up-to-date RESTful API documentation by combining documentation that's been hand-written with auto-generated API documentation* produced by https://github.com/swagger-api[Swagger]. The result is intended to be an *up-to-date, easy-to-read, on- and offline user guide*, comparable to https://developer.github.com/v3/[GitHub's API documentation]. The output of Swagger2Markup can be used as an alternative to https://github.com/swagger-api/swagger-ui[swagger-ui] and can be served as static content.\nNOTE: The Swagger Specification has been donated to to the https://openapis.org/[Open API Initiative (OAI)] and has been renamed to the https://github.com/OAI/OpenAPI-Specification[OpenAPI Specification].\n\nSwagger2Markup converts a Swagger JSON or YAML file into several *AsciiDoc* or *GitHub Flavored Markdown* documents which can be combined with hand-written documentation. The Swagger source file can be located locally or remotely via HTTP. Swagger2Markup supports the Swagger 1.2 and 2.0 specification. Internally it uses the _official_ https://github.com/swagger-api/swagger-parser[swagger-parser] and my https://github.com/RobWin/markup-document-builder[markup-document-builder].\n\nYou can use Swagger2Markup to convert your contract-first Swagger YAML file into a human-readable format and combine it with hand-written documentation. As an alternative, you can choose the code-first approach and use Swagger2Markup together with https://github.com/swagger-api/swagger-core/wiki/Swagger-Core-JAX-RS-Project-Setup-1.5.X[Swagger JAX-RS], https://github.com/springfox/springfox[springfox] or https://github.com/spring-projects/spring-restdocs[spring-restdocs]. If you are Gradle or Maven user, you can also use the https://github.com/RobWin/swagger2markup-gradle-plugin[Swagger2Markup Gradle Plugin] or https://github.com/redowl/swagger2markup-maven-plugin[Swagger2markup Maven Plugin].\n\nhttp://asciidoctor.org/docs/asciidoc-writers-guide/[AsciiDoc] is preferable to Markdown as it has more features. AsciiDoc is a text document format for writing documentation, articles, books, ebooks, slideshows, web pages and blogs. AsciiDoc files can be converted to *HTML*, *PDF* and *EPUB*. AsciiDoc is much better suited for describing public APIs than *JavaDoc* or *Annotations*.\n\nYou can generate your HTML5, PDF and EPUB documentation via https://github.com/asciidoctor/asciidoctorj[asciidoctorj] or even better via the https://github.com/asciidoctor/asciidoctor-gradle-plugin[asciidoctor-gradle-plugin] or https://github.com/asciidoctor/asciidoctor-maven-plugin[asciidoctor-maven-plugin].\n\nThe project requires at least JDK 8.\n\n== Example\n\nimage::swagger2markup-documentation/src/docs/asciidoc/images/Swagger2Markup.PNG[]\n\nimage::swagger2markup-documentation/src/docs/asciidoc/images/Swagger2Markup_definitions.PNG[]\n\n== Reference documentation\n- http://swagger2markup.github.io/swagger2markup/1.3.3/[Reference Documentation]\n- https://github.com/Swagger2Markup/swagger2markup/blob/master/RELEASENOTES.adoc[Release notes]\n- https://github.com/Swagger2Markup/spring-swagger2markup-demo[Demo using Swagger2Markup, Spring Boot, Springfox and spring-restdocs]\n\n== Contributing\n\n=== Community contributions\n\nPull requests are welcome.\n\n=== Questions\nYou can ask questions about Swagger2Markup in https://gitter.im/Swagger2Markup/swagger2markup[Gitter].\n\n=== Bugs\nIf you believe you have found a bug, please take a moment to search the existing issues. If no one else has reported the problem, please open a new issue that describes the problem in detail and, ideally, includes a test that reproduces it.\n\n=== Enhancements\nIf you’d like an enhancement to be made to Swagger2Markup, pull requests are most welcome. The source code is on GitHub. You may want to search the existing issues and pull requests to see if the enhancement is already being worked on. You may also want to open a new issue to discuss a possible enhancement before work on it begins.\n\n== Companies who use Swagger2Markup\n\n* Deutsche Telekom AG\n* https://restlet.com/[Restlet] -- Restlet offers an API platform, covering the https://restlet.com/products/restlet-studio/[design], https://restlet.com/products/dhc/[test] and https://restlet.com/products/apispark/[operation] of Web APIs, and uses Swagger2Markup to generate appealing HTML documentation from API definitions.\n* http://www.qaware.de/[QAware GmbH]\n* http://www.appdirect.com/[AppDirect] -- The leading commerce platform for selling cloud services.\n* http://www.wescale.com[wescale]\n* http://taskassure.com[TaskAssure] \n* https://www.isaac.nl[ISAAC]\n* https://www.spreadshirt.de[Spreadshirt]\n\n== License\n\nCopyright 2015 Robert Winkler\n\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.\n"
        },
        {
          "name": "RELEASENOTES.adoc",
          "type": "blob",
          "size": 5.9736328125,
          "content": "= Release Notes\r\n\r\n== Version 0.1.0\r\n* Initial version with support for AsciiDoc and Markdown\r\n\r\n=== Version 0.1.1\r\n* Signed jar files\r\n\r\n=== Version 0.1.2\r\n* Removed logback from compile dependency\r\n\r\n=== Version 0.1.3\r\n* Removed commons.io from compile dependency\r\n\r\n=== Version 0.1.4\r\n* Fixed SECTION_TITLE_LEVEL3 in Markdown enum\r\n\r\n=== Version 0.1.5\r\n* Added SECTION_TITLE_LEVEL4\r\n\r\n== Version 0.2.0\r\n* This version is not downward compatible. This version supports includes of example files and JSON/XML Schema files. See documentation.\r\n\r\n=== Version 0.2.1\r\n* Signed jar files and published in Maven Central\r\n\r\n=== Version 0.2.2\r\n* Fixed wrong dependency version to io.github.robwin:markup-document-builder\r\n\r\n=== Version 0.2.3\r\n* Fixed issue #7: @ApiModelProperty metadata are ignored for definitions file\r\n\r\n=== Version 0.2.4\r\n* Fixed issue #8: logback.xml on the classpath\r\n* Fixed issue #13: unknown format not supported for properties\r\n\r\n== Version 0.3.0\r\n* Support of YAML or JSON String as input.\r\n\r\n== Version 0.4.0\r\n* Updated Swagger-Parser from 1.0.0 to 1.0.5\r\n* Updated commons-lang to commons-lang3\r\n* Swagger2MarkupConverter generates three documents now: overview, paths and definitions\r\n* Support for enums in HeaderParameter, QueryParameter, FormParameter and QueryParameter\r\n* Support for global consumes, produces and tags\r\n\r\n== Version 0.5.0\r\n* Support for including hand-written descriptions instead of using Swagger Annotations for descriptions\r\n\r\n=== Version 0.5.1\r\n* Bugfix: Definition name must be lowercase so that descriptions file can be found\r\n\r\n=== Version 0.5.2\r\n* Swagger License is not mandatory anymore\r\n* Updated markup-document-builder from v0.1.3 to v0.1.4\r\n\r\n=== Version 0.5.3\r\n* Fixed compiler warning: [options] bootstrap class path not set in conjunction with -source 1.7\r\n\r\n== Version 0.6.0\r\n* Updated swagger-parser from v1.0.5 to v1.0.6\r\n* Support for default values in Parameters and Model properties\r\n\r\n=== Version 0.6.1\r\n* Updated swagger-parser from v1.0.6 to v1.0.8\r\n\r\n=== Version 0.6.2\r\n* curl-request.adoc from spring-restdocs is also added to the example chapters\r\n\r\n=== Version 0.6.3\r\n* Added possibility to write object definitions to separate files. Issue #19\r\n\r\n== Version 0.7.0\r\n* Added support for both reference models and composed models\r\n\r\n=== Version 0.7.1\r\n* Workaround: If the type of a BodyParameter is String and not a Model, the schema is null and lost. Therefore the fallback type of a BodyParameter is String now.\r\n\r\n== Version 0.8.0\r\n* Enhancement #26 and #27: Added a pre-process hook to modify a Swagger Model before it is converted.\r\n* Bugfix #29: Tags are rendered twice\r\n\r\n== Version 0.9.0\r\n* Updated swagger-parser from v1.0.8 to v1.0.13\r\n* Support for global responses and parameters\r\n\r\n=== Version 0.9.1\r\n* Added support to group the paths by tags or as-is\r\n* Added support to order the definitions by natural ordering or as-is\r\n\r\n=== Version 0.9.2\r\n* Multi language support. Added russian.\r\n\r\n=== Version 0.9.3\r\n* Updated swagger-parser from v1.0.13 to v1.0.16\r\n* Enhancement #61: Refactor separated documents logic to support inter-document cross-references\r\n* Enhancement #53: Support for tags, paths and methods ordering\r\n* Enhancement #51: Support for separated operations files\r\n* Enhancement #52: Markdown generation for inline schemas\r\n\r\n== Version 1.0.0\r\n* New configuration API\r\n* New extension SPI\r\n* Added new languages: turkish, german, france\r\n* New security document\r\n* Inline schema support\r\n* New configuration options\r\n* Support of deprecated path operations\r\n\r\n=== Version 1.0.1\r\n* Enhancement: Support to render validation constraints of properties\r\n* Enhancement: Possibility to disable rendering of the security chapter below operations\r\n\r\n== Version 1.1.0\r\n* PR #177: Fixed rendering of recursive examples\r\n* PR #186: Add support for Chinese language\r\n* PR #190: Add support for Spanish language\r\n* PR #192: Updated min/max value to format correctly based on the data type\r\n* PR #193: Added support for exclusiveMin and exclusiveMax\r\n* Changed bold to ** and italic to __ so that special chars in the text are possible\r\n\r\n=== Version 1.1.1\r\n* Issue #194: Added a config parameter which allows to prepend the basePath to all paths.\r\n* Updated swagger-parser from v1.0.16 to v1.0.23\r\n* Added javslang v2.0.4 as a dependency\r\n* Added paleo-core v0.10.1 as a dependency\r\n* Updated markup-document-builder from 1.0.0 to 1.1.0\r\n* PR #201: Add support for Brazilian Portuguese language\r\n* PR #202: Add support for Japanese language\r\n* Issue #205: Fixed the option to influence resource ordering\r\n* Issue #198: Chinese chinese language encoding\r\n* Issue #207: Properties that start with an underscore are displayed correctly now\r\n* Refactored Swagger2Markup to use a Component-Based design. A document can be composed of components and components can be composed of other components.\r\n* Added a method to add page breaks.\r\n\r\n== Version 1.1.2\r\n* Improve code blocks in markdown\r\n\r\n== Version 1.2.0\r\n* Issue #214: Add page break locations\r\n* Issue #223: Improve example rendering\r\n* Issue #215: Add ability to group operations by RegEx\r\n* Added new configuration options: pageBreakLocations, headerRegex\r\n* Added new valid value for configuration headerRegex: REGEX\r\n* Updated markup-document-builder from 1.1.0 to 1.1.1\r\n\r\n== Version 1.3.0\r\n* Updated javslang from 2.0.4 to 2.0.5\r\n* Updated paleo-core from 0.10.1 to 0.10.2\r\n* Updated swagger-parser from v1.0.23 to v1.0.25\r\n* Decimal numbers are formatted into locale-specific strings\r\n\r\n=== Version 1.3.1\r\n* PR #247: Fix request path and query params example support.\r\n\r\n=== Version 1.3.2\r\n* PR #290: Fixed list parsing in properties file\r\n* PR #293: Fixed crash on empty tables\r\n* Updated markup-document-builder from 1.1.1 to 1.1.2\r\n\r\n=== Version 1.3.3\r\n* Updated swagger-parser from v1.0.25 to 1.0.35\r\n* PR #294: Examples always start with a newline if there is other content in the same cell\r\n* PR 307: Include required parameters in example request\r\n\r\n=== Version 2.0.0\r\n* Added openapi2markup to support OpenAPI v3\r\n* Issue #409: Fixed JSON response example\r\n\r\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 3.4482421875,
          "content": "plugins {\n    id \"org.sonarqube\" version \"2.7\"\n    id \"me.champeau.gradle.jmh\" version \"0.4.8\"\n    id 'org.asciidoctor.convert' version '1.6.0'\n    id \"org.ajoberstar.github-pages\" version \"1.7.2\"\n    id \"io.github.gradle-nexus.publish-plugin\"  version \"1.1.0\"\n}\napply plugin: 'idea'\napply from: \"${rootDir}/libraries.gradle\"\n\next {\n    releaseVersion = '1.3.3'\n}\n\nallprojects {\n    apply plugin: 'jacoco'\n    apply plugin: 'me.champeau.gradle.jmh'\n\n    version = '2.0.0-SNAPSHOT'\n    group 'io.github.swagger2markup'\n    description = 'swagger2markup Build'\n\n    repositories {\n        jcenter()\n        mavenCentral()\n    }\n}\n//artifactoryPublish.skip = true // apply to all projects except the root\n\next {\n    coreProjects = subprojects.findAll {\n        p -> !p.name.contains(\"documentation\") && !p.name.endsWith(\"-bom\")\n    }\n}\n\nconfigure(project.coreProjects) {\n    apply plugin: 'java'\n    apply plugin: 'java-library'\n    apply plugin: 'maven'\n    apply plugin: 'maven-publish'\n    apply from: \"${rootDir}/publishing.gradle\"\n    apply plugin: 'jacoco'\n\n    tasks.withType(JavaCompile) {\n        sourceCompatibility = \"11\"\n        targetCompatibility = \"11\"\n        options.deprecation = true\n        options.encoding = 'UTF-8'\n        options.compilerArgs += [\"-Xlint:unchecked\", \"-parameters\"]\n    }\n    tasks.withType(Javadoc){\n        options.encoding = 'UTF-8'\n    }\n    jmh {\n        duplicateClassesStrategy = 'warn'\n    }\n    configurations.all {\n        resolutionStrategy {\n            failOnVersionConflict()\n        }\n    }\n}\n\nnexusPublishing {\n    repositories {\n        sonatype()\n    }\n}\n\nsonarqube {\n    properties {\n        property \"sonar.host.url\", \"https://sonarcloud.io\"\n        property \"sonar.organization\", \"swagger2markup\"\n        property \"sonar.projectName\", \"swagger2markup\"\n        property \"sonar.projectKey\", \"Swagger2Markup_swagger2markup\"\n        property \"sonar.links.homepage\", \"https://github.com/Swagger2Markup/swagger2markup\"\n        property \"sonar.links.ci\", \"https://travis-ci.org/Swagger2Markup/swagger2markup\"\n        property \"sonar.links.scm\", \"https://github.com/Swagger2Markup/swagger2markup\"\n        property \"sonar.links.issue\", \"https://github.com/Swagger2Markup/swagger2markup/issues\"\n        property \"sonar.language\", \"java\"\n    }\n}\ndef allTestCoverageFile = \"$buildDir/jacoco/allTestCoverage.exec\"\n\ntask jacocoMergeTest(type: JacocoMerge) {\n    destinationFile = file(allTestCoverageFile)\n    executionData = project.fileTree(dir: '.', include: '**/build/jacoco/test.exec')\n}\n\ntask jacocoMerge(dependsOn: ['jacocoMergeTest']) {\n    // used to run the other merge tasks\n}\n\nsubprojects {\n    sonarqube {\n        properties {\n            property \"sonar.jacoco.reportPaths\", allTestCoverageFile\n        }\n    }\n    afterEvaluate {\n        // exclude subprojects that don't produce a jar file or by design.\n        if (!project.name.equals('swagger2markup-bom') && !project.name.equals('swagger2markup-documentation')) {\n            jar {\n                into(\"META-INF/maven/$project.group/$project.name\") {\n                    from {generatePomFileForMavenJavaPublication}\n                    rename \".*\", \"pom.xml\"\n                }\n                inputs.property('moduleName', moduleName)\n                manifest.attributes(\n                        'Automatic-Module-Name': moduleName\n                )\n            }\n        }\n    }\n}\n\ntasks.check.dependsOn tasks.jacocoTestReport\n\ntest {\n    dependsOn(subprojects.test) // required by cobertura to aggregate report\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.0625,
          "content": "systemProp.file.encoding=UTF-8\nsystemProp.sun.jnu.encoding=UTF-8"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.20703125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "libraries.gradle",
          "type": "blob",
          "size": 2.544921875,
          "content": "// Allows centralized definition of the version of artifacts to\n// use.  In that respect it serves a role similar to <dependencyManagement> in Maven\next {\n    implLibraries = [:]\n    testLibraries = [:]\n    dependencyOverrides = [:]\n}\nimplLibraries = [\n        asciiDocJApi  : \"org.asciidoctor:asciidoctorj-api:2.2.0\",\n        commonsBeanUtils   : \"commons-beanutils:commons-beanutils:1.9.4\",\n        commonsCodec       : \"commons-codec:commons-codec:1.13\",\n        commonsCollections4: \"org.apache.commons:commons-collections4:4.4\",\n        commonsConf2       : \"org.apache.commons:commons-configuration2:2.6\",\n        commonsLang3       : \"org.apache.commons:commons-lang3:3.9\",\n        commonsIO          : \"commons-io:commons-io:2.6\",\n        commonsText        : \"org.apache.commons:commons-text:1.8\",\n        guava              : 'com.google.guava:guava:27.0.1-android',\n        jacksonDatabind    : 'com.fasterxml.jackson.core:jackson-databind:2.9.10',\n        mark2Ascii         : \"nl.jworks.markdown_to_asciidoc:markdown_to_asciidoc:1.1\",\n        paleo              : \"ch.netzwerg:paleo-core:0.14.0\",\n        pegdown            : \"org.pegdown:pegdown:1.6.0\",\n        slf4j              : \"org.slf4j:slf4j-api:1.7.28\",\n        swaggerV2          : \"io.swagger:swagger-parser:1.0.47\",\n        swaggerV2Converter : \"io.swagger.parser.v3:swagger-parser-v2-converter:2.0.15\",\n        swaggerV3          : \"io.swagger.parser.v3:swagger-parser:2.0.15\",\n        vavr               : \"io.vavr:vavr:0.10.2\"\n]\n\ntestLibraries = [\n        asciiDocJ  : \"org.asciidoctor:asciidoctorj:2.2.0\",\n        assertj    : \"org.assertj:assertj-core:3.13.2\",\n        assertjDiff: \"io.github.robwin:assertj-diff:0.1.1\",\n        junit      : \"junit:junit:4.12\",\n        logback    : \"ch.qos.logback:logback-classic:1.2.3\",\n        mockito    : \"org.mockito:mockito-core:3.1.0\"\n]\n\ndependencyOverrides = [\n        assertj        : testLibraries.assertj,\n        commonsCodec   : implLibraries.commonsCodec,\n        commonsIO      : implLibraries.commonsIO,\n        commonsLang3   : implLibraries.commonsLang3,\n        findBugs       : 'com.google.code.findbugs:jsr305:3.0.2',\n        guava          : implLibraries.guava,\n        jaksonCore     : 'com.github.fge:jackson-coreutils:1.8',\n        jacksonDatabind: implLibraries.jacksonDatabind,\n        jnrConstants   : 'com.github.jnr:jnr-constants:0.9.12',\n        jnrEnxio       : 'com.github.jnr:jnr-enxio:0.19',\n        jnrPosix       : 'com.github.jnr:jnr-posix:3.0.49',\n        jodaTime       : 'joda-time:joda-time:2.9.9',\n        slf4j          : implLibraries.slf4j,\n]\n"
        },
        {
          "name": "openapi2markup",
          "type": "tree",
          "content": null
        },
        {
          "name": "publishing.gradle",
          "type": "blob",
          "size": 3.0283203125,
          "content": "import java.text.SimpleDateFormat\n\nDate buildTimeAndDate = new Date()\next {\n    buildDate = new SimpleDateFormat('yyyy-MM-dd').format(buildTimeAndDate)\n    buildTime = new SimpleDateFormat('HH:mm:ss.SSSZ').format(buildTimeAndDate)\n    licenseUrl = 'https://github.com/Swagger2Markup/swagger2markup/blob/master/LICENSE.txt'\n    scmUrl = 'https://github.com/Swagger2Markup/swagger2markup.git'\n}\n\ndef projectArtifactId = 'swagger2markup'\ndef projectUrl = 'https://github.com/Swagger2Markup/swagger2markup'\ndef licenseUrl = 'https://github.com/Swagger2Markup/swagger2markup/blob/master/LICENSE.txt'\ndef scmUrl = 'https://github.com/Swagger2Markup/swagger2markup.git'\ndef issuesUrl = 'https://github.com/Swagger2Markup/swagger2markup/issues'\n\njar {\n    manifest {\n        attributes(\n                'Built-By': 'Robert Winkler',\n                'Created-By': System.properties['java.version'] + \" (\" + System.properties['java.vendor'] + \" \" + System.properties['java.vm.version'] + \")\",\n                'Build-Date': project.buildDate,\n                'Build-Time': project.buildTime,\n                'Specification-Title': projectArtifactId,\n                'Specification-Version': project.version,\n                'Implementation-Title': projectArtifactId,\n                'Implementation-Version': project.version\n        )\n    }\n}\n\ntask sourcesJar(type: Jar) {\n    from sourceSets.main.allJava\n    archiveClassifier = 'sources'\n}\n\ntask javadocJar(type: Jar) {\n    from javadoc\n    archiveClassifier = 'javadoc'\n}\n\nartifacts {\n    archives sourcesJar\n    archives javadocJar\n}\n\npublishing {\n    publications {\n        mavenJava(MavenPublication) {\n            from components.java\n            pom.withXml {\n                def devs = ['RobWin': 'Robert Winkler',\n                            'austek': 'Ali Ustek']\n                def root = asNode()\n\n                root.dependencies.'*'.findAll() {\n                    it.scope.text() == 'runtime' && project.configurations.compile.allDependencies.find { dep ->\n                        dep.name == it.artifactId.text()\n                    }\n                }.each() {\n                    it.scope*.value = 'compile'\n                }\n\n                root.appendNode('name', projectArtifactId)\n                root.appendNode('packaging', 'jar')\n                root.appendNode('url', projectUrl)\n                root.appendNode('description', project.description)\n\n                def license = root.appendNode('licenses').appendNode('license')\n                license.appendNode('name', 'Apache-2.0')\n                license.appendNode('url', licenseUrl)\n                license.appendNode('distribution', 'repo')\n\n                root.appendNode('scm').appendNode('url', scmUrl)\n\n                def developers = root.appendNode('developers')\n                devs.each {\n                    def d = developers.appendNode('developer')\n                    d.appendNode('id', it.key)\n                    d.appendNode('name', it.value)\n                }\n            }\n            artifact sourcesJar\n            artifact javadocJar\n        }\n    }\n}\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.2470703125,
          "content": "rootProject.name = 'swagger2markup'\n\ninclude 'swagger2markup-asciidoc'\ninclude 'swagger2markup-bom'\ninclude 'swagger2markup-builder'\ninclude 'swagger2markup-documentation'\ninclude 'swagger2markup'\ninclude 'swagger2markup-core'\ninclude 'openapi2markup'\n\n"
        },
        {
          "name": "swagger2markup-asciidoc",
          "type": "tree",
          "content": null
        },
        {
          "name": "swagger2markup-bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "swagger2markup-builder",
          "type": "tree",
          "content": null
        },
        {
          "name": "swagger2markup-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "swagger2markup-documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "swagger2markup",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}