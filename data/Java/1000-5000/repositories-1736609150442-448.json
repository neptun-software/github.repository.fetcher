{
  "metadata": {
    "timestamp": 1736609150442,
    "page": 448,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bilibili/boxing",
      "stars": 3196,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.423828125,
          "content": "*.apk\n*.ap_\n*.dex\n*.class\n\nlocal.properties\nproguard/\n*.log\n.idea\n*.iml\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n/*/build/\n\n# IntelliJ IDEA\n*.ipr\n*.iws\n\n# Gradle\n.gradle\ngradlew.bat\nbuild\n\nreports\n/captures\njacoco.exec\n\n# Mac system files\n.DS_Store\n\n# Android Studio Navigation editor temp files\n.navigation/\nout\nlib\n\n# Eclipse project files\n.classpath\n.project\n.settings/\neclipsebin\n.metadata/\n\n#NDK\nobj/\njniLibs\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.2080078125,
          "content": "language: android\nbefore_install:\n  - chmod +x gradlew\n  - android list target\ngroup: deprecated-2017Q3\nandroid:\n  components:\n    - tools\n    - platform-tools\n    - tools\n    - build-tools-25.0.1\n    - build-tools-24.0.3\n    - build-tools-27.0.1\n    - android-22\n    - android-25\n    - android-27\n    - extra-android-support\n    - extra-google-m2repository\n    - extra-android-m2repository\n    - addon-google_apis-google-19\n    - sys-img-armeabi-v7a-android-22\n  licenses:\n    - 'android-sdk-preview-license-.+'\n    - 'android-sdk-license-.+'\n    - 'google-gdk-license-.+'\nenv:\n  global:\n   # install timeout in minutes (2 minutes by default)\n    - ADB_INSTALL_TIMEOUT=8\n    - GRADLE_OPTS=\"-Xms128m\"\n# Emulator Management: Create, Start and Wait\nbefore_script:\n  - mkdir -p $ANDROID_HOME/licenses\n  - echo \"8933bad161af4178b1185d1a37fbf41ea5269c55\" > $ANDROID_HOME/licenses/android-sdk-license\n  - echo \"d56f5187479451eabf01fb78af6dfcb131a6481e\" >> $ANDROID_HOME/licenses/android-sdk-license\n  \n  - echo no | android create avd --force -n test -t android-22 --abi armeabi-v7a\n  - emulator -avd test -no-skin -no-audio -no-window &\n  - android-wait-for-emulator\n  - adb shell input keyevent 82 &\n  \nscript: ./gradlew connectedAndroidTest"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.7763671875,
          "content": "## boxing\n---\nAndroid multi-media selector based on MVP mode.[中文文档](README_CN.md)  [![Build Status](https://travis-ci.org/Bilibili/boxing.svg?branch=master)](https://travis-ci.org/Bilibili/boxing)\n\n#### boxing Inside: \n[![bili](screenshot/bili.webp)](https://play.google.com/store/apps/details?id=tv.danmaku.bili)\n\n### Feature\n---\n- Custom UI\n- Multiple/single selection, preview and crop function\n- Gif support\n- Video selection\n- Image compression\n- Gif encode(checkout feature/gif-encode to have fun), see [Bilibili/BurstLinker](https://github.com/Bilibili/BurstLinker)\n\n### Download\n---\nCore version: only contain the core function.\n\nUI version: contain UI implements base on core version.\n\n- Maven\n\nCore version\n\n```xml\n<dependency>                       \n  \t<groupId>com.bilibili</groupId>  \n  \t<artifactId>boxing</artifactId>  \n  \t<version>1.0.4</version>\n  \t<type>pom</type>                \n</dependency>                      \t\t\n```\n\nUI version\n\n```xml\n<dependency>                          \n  \t<groupId>com.bilibili</groupId>     \n  \t<artifactId>boxing-impl</artifactId>\n  \t<version>1.0.4</version>\n  \t<type>pom</type>                    \n</dependency>                         \n```\n\n- Gradle\n\nCore version              \n```java\ncompile 'com.bilibili:boxing:1.0.4'\n```\n\nUI version\n```java\ncompile 'com.bilibili:boxing-impl:1.0.4'\n```\n\n### Preview\n\n![multi_image](screenshot/multi_image.webp)\n![single_image_crop](screenshot/single_image_crop.webp)\n![video](screenshot/video.webp)\n\n### Getting Started\n\n- Media loading initialization(required)\n```java\nBoxingMediaLoader.getInstance().init(new IBoxingMediaLoader()); // a class implements IBoxingMediaLoader \n```\n\n- Image cropping initialization(optional)\n```java\nBoxingCrop.getInstance().init(new IBoxingCrop());  // a class implements IBoxingCrop \n```\n- Build BoxingConfig\n  Specify the mode(Mode.SINGLE_IMG, Mode.MULTI_IMG, Mode.VIDEO) with camera and gif support. \n```java\nBoxingConfig config = new BoxingConfig(Mode); // Mode：Mode.SINGLE_IMG, Mode.MULTI_IMG, Mode.VIDEO\nconfig.needCamera(cameraRes).needGif().withMaxCount(9) // camera, gif support, set selected images count\n.withMediaPlaceHolderRes(resInt) // set the image placeholder, default 0\n.withAlbumPlaceHolderRes(resInt) // set the album placeholder, default 0\n.withVideoDurationRes(resInt) // set the video duration resource in video mode, default 0\n```\n- Get Boxing, set Intent and call start\n```java\n// start thumbnails Activity, need boxing-impl.\nBoxing.of(config).withIntent(context, BoxingActivity.class).start(callerActivity, REQUEST_CODE); \n  \t\n// start view raw image Activity, need boxing-impl.\nBoxing.of(config).withIntent(context, BoxingViewActivity.class).start(callerActivity, REQUEST_CODE); \n  \t\n// call of() use Mode.MULTI_IMG by default.\nBoxing.of().withIntent(context, class).start(callerActivity, REQUEST_CODE);\n```\n- Get Result\n```java\n@Override\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n  \tList<BaseMedia> medias = Boxing.getResult(data);\n  \t// avoid null\n}\n```\n### Advanced usage\nMedia loading and image cropping initialization are the same as Simple Usage.\n\n- Customize Activity and Fragment\n  Extends AbsBoxingViewActivity and AbsBoxingViewFragment.\n  call `Boxing.of(config).withIntent(context, AbsBoxingViewActivity.class).start(callerActivity, REQUEST_CODE);` to start.\n\n- Only customize Fragment\n  Extends AbsBoxingViewFragment,no AbsBoxingViewActivity.\n  call `Boxing.of(BoxingConfig).setupFragment(AbsBoxingViewFragment, OnFinishListener);` to start.\n\n\n### FileProvider                                                                                   \nUse camera in Android N, add this in AndroidManifest.xml                                                        \n```xml\n<provider                                                 \n\tandroid:name=\"android.support.v4.content.FileProvider\"\n\tandroid:authorities=\"${applicationId}.file.provider\" >               \n\t<meta-data                                            \n\t\tandroid:name=\"android.support.FILE_PROVIDER_PATHS\"\n\t\tandroid:resource=\"@xml/boxing_file_provider\"/>\n</provider>                 \n```\n\n### Kotlin Support\nStay hungry, stay foolish.\ncheckout `feature/kotlin` for fun.\n\n### TODO\nSupport different config at the same moment.\n\n### License\n----\nCopyright 2017 Bilibili\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 5.4755859375,
          "content": "## boxing\n---\n基于MVP模式的Android多媒体选择器。[![Build Status](https://travis-ci.org/Bilibili/boxing.svg?branch=master)](https://travis-ci.org/Bilibili/boxing)\n\n#### boxing Inside: \n[![bili](screenshot/bili.webp)](https://play.google.com/store/apps/details?id=tv.danmaku.bili)\n\n### 特性\n---\n- 支持自定义UI\n- 支持多/单图片选择和预览，单图裁剪功能\n- 支持gif\n- 支持视频选择功能\n- 提供图片压缩\n- 多图生成gif（checkout feature/gif-encode), 见 [Bilibili/BurstLinker](https://github.com/Bilibili/BurstLinker)\n\n### Download                                                                  \n---\n核心版本：只包含核心功能。\n实现版本：在核心功能之上添加了实现界面。                                                                                       \n- Maven \n  ​                                                  \n  核心版本                                                                                                                                            \n```xml\n<dependency>                                                      \n  \t<groupId>com.bilibili</groupId>                                    \n  \t<artifactId>boxing</artifactId>                                    \n  \t<version>1.0.4</version>\n  \t<type>pom</type>                                                \n</dependency> \n```\n实现版本                                                                   \n```xml\n<dependency>                                                          \n  \t<groupId>com.bilibili</groupId>                                    \n  \t<artifactId>boxing-impl</artifactId>                              \n  \t<version>1.0.4</version>\n  \t<type>pom</type>                                                  \n</dependency>                                                      \n```\n- Gradle   \n  ​                                                    \n  核心版本                                                                 \n```java                                                                         \ncompile 'com.bilibili:boxing:1.0.4'\n```\n实现版本                                                                   \n```java                                                                        \ncompile 'com.bilibili:boxing-impl:1.0.4'\n```\n\n### 预览图\n\n![multi_image](screenshot/multi_image.webp)\n![single_image_crop](screenshot/single_image_crop.webp)\n![video](screenshot/video.webp)\n\n\n#### 简单用法\n\n- 初始化图片加载（必选）\n```java\nBoxingMediaLoader.getInstance().init(new IBoxingMediaLoader()); // 需要实现IBoxingMediaLoader \n```\n- 初始化图片裁剪（可选）\n```java\nBoxingCrop.getInstance().init(new IBoxingCrop());  // 需要实现 IBoxingCrop \n```\n\n- 构造参数\n  指定模式：图片单选，多选，视频单选，是否支持gif和相机。\n```java\nBoxingConfig config = new BoxingConfig(Mode); // Mode：Mode.SINGLE_IMG, Mode.MULTI_IMG, Mode.VIDEO\nconfig.needCamera(cameraRes).needGif().withMaxCount(9); // 支持gif，相机，设置最大选图数\n.withMediaPlaceHolderRes(resInt) // 设置默认图片占位图，默认无\n.withAlbumPlaceHolderRes(resInt) // 设置默认相册占位图，默认无\n.withVideoDurationRes(resInt) // 视频模式下，时长的图标，默认无\n```\n- 初始化Boxing，构造Intent并启动\n```java\n// 启动缩略图界面, 依赖boxing-impl.\nBoxing.of(config).withIntent(context, BoxingActivity.class).start(callerActivity, REQUEST_CODE); \n\n// 启动预览原图界面，依赖boxing-impl.\nBoxing.of(config).withIntent(context, BoxingViewActivity.class).start(callerActivity, REQUEST_CODE); \n\n// 调用of方法默认使用Mode.MULTI_IMG\nBoxing.of().withIntent(context, class).start(callerActivity, REQUEST_CODE);\n```\n\n- 取结果\n```java\n@Override\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n  \tList<BaseMedia> medias = Boxing.getResult(data);\n  \t//注意判断null\n}\n```\n\n### 进阶用法\n初始化图片加载和裁剪同上。\n\n- 自定义Activity与Fragment\n  继承AbsBoxingViewActivity和AbsBoxingViewFragment。\n  调用`Boxing.of(config).withIntent(context, class).start(callerActivity, REQUEST_CODE);`启动。\n\n- 仅自定义Fragment\n  继承AbsBoxingViewFragment，不依赖AbsBoxingViewActivity。\n  调用`Boxing.of(BoxingConfig).setupFragment(AbsBoxingViewFragment, OnFinishListener);`完成配置。\n\n### FileProvider\nAndroid N 版本使用相机必须在AndroidManifest.xml中添加\n```xml\n<provider                                                 \n\tandroid:name=\"android.support.v4.content.FileProvider\"\n\tandroid:authorities=\"${applicationId}.file.provider\" >               \n\t<meta-data                                            \n\t\tandroid:name=\"android.support.FILE_PROVIDER_PATHS\"\n\t\tandroid:resource=\"@xml/boxing_file_provider\"/>\n</provider>                 \n```\n\n### Kotlin\ncheckout `feature/kotlin` 来玩一玩吧。\n\n### TODO\n支持同时存在多个不同的config。\n\n### License\n----\nCopyright 2016 Bilibili\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "boxing-impl",
          "type": "tree",
          "content": null
        },
        {
          "name": "boxing",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.4169921875,
          "content": "/*\n *  Copyright (C) 2017 Bilibili\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *          http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\n// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.0.1'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        google()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\next {\n    buildToolsVersion = '27.0.1'\n    targetSdkVersion = 27\n    compileSdkVersion = 27\n    minSdkVersion = 14\n    androidSupportLibraryVersion = '27.0.2'\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.416015625,
          "content": "#\n#  Copyright (C) 2017 Bilibili\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#          http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n#\n\n# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.638671875,
          "content": "/*\n *  Copyright (C) 2017 Bilibili\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *          http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\ninclude ':app', ':boxing', ':boxing-impl'\n"
        }
      ]
    }
  ]
}