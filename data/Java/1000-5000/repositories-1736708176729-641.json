{
  "metadata": {
    "timestamp": 1736708176729,
    "page": 641,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/commons-lang",
      "stars": 2761,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 1.3359375,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\ngithub:\n  description: \"Apache Commons Lang\"\n  homepage: https://commons.apache.org/lang/\n\nnotifications:\n    commits:      commits@commons.apache.org\n    issues:       issues@commons.apache.org\n    pullrequests: issues@commons.apache.org\n    jira_options: link label\n    jobs:         notifications@commons.apache.org\n    issues_bot_dependabot: notifications@commons.apache.org\n    pullrequests_bot_dependabot: notifications@commons.apache.org\n    issues_bot_codecov-commenter: notifications@commons.apache.org\n    pullrequests_bot_codecov-commenter: notifications@commons.apache.org\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.9267578125,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Auto detect text files and perform LF normalization\n*        text=auto\n\n*.java   text diff=java\n*.html   text diff=html\n*.css    text\n*.js     text\n*.sql    text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2421875,
          "content": "# Maven build files\ntarget\n*.log\nmaven-eclipse.xml\nbuild.properties\nsite-content\n*~\n\n# IntelliJ IDEA files\n.idea\n.iws\n*.iml\n*.ipr\n\n# Eclipse files\n.settings\n.classpath\n.project\n.externalToolBuilders\n.checkstyle\n\n# jenv's version file\n.java-version\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.9072265625,
          "content": "<!---\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\nThe Apache code of conduct page is [https://www.apache.org/foundation/policies/conduct.html](https://www.apache.org/foundation/policies/conduct.html).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.423828125,
          "content": "<!---\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n<!---\n +======================================================================+\n |****                                                              ****|\n |****      THIS FILE IS GENERATED BY THE COMMONS BUILD PLUGIN      ****|\n |****                    DO NOT EDIT DIRECTLY                      ****|\n |****                                                              ****|\n +======================================================================+\n | TEMPLATE FILE: contributing-md-template.md                           |\n | commons-build-plugin/trunk/src/main/resources/commons-xdoc-templates |\n +======================================================================+\n |                                                                      |\n | 1) Re-generate using: mvn commons-build:contributing-md              |\n |                                                                      |\n | 2) Set the following properties in the component's pom:              |\n |    - commons.jira.id  (required, alphabetic, upper case)             |\n |                                                                      |\n | 3) Example Properties                                                |\n |                                                                      |\n |  <properties>                                                        |\n |    <commons.jira.id>MATH</commons.jira.id>                           |\n |  </properties>                                                       |\n |                                                                      |\n +======================================================================+\n--->\nContributing to Apache Commons Lang\n======================\n\nHave you found a bug or have an idea for a cool new feature? Contributing code is a great way to give something back to the open-source community.\nBefore you dig right into the code, we need contributors to follow a few guidelines to have a chance of keeping on top of things.\n\nGetting Started\n---------------\n\n+ Make sure you have a [JIRA account](https://issues.apache.org/jira/).\n+ Make sure you have a [GitHub account](https://github.com/signup/free). This is not essential, but makes providing patches much easier.\n+ If you're planning to implement a new feature it makes sense to discuss your changes on the [dev list](https://commons.apache.org/mail-lists.html) first. This way you can make sure you're not wasting your time on something that isn't considered to be in Apache Commons Lang's scope.\n+ Submit a [Jira Ticket][jira] for your issue, assuming one does not already exist.\n  + Clearly describe the issue including steps to reproduce when it is a bug.\n  + Make sure you fill in the earliest version that you know has the issue.\n+ Find the corresponding [repository on GitHub](https://github.com/apache/?query=commons-),\n[fork](https://help.github.com/articles/fork-a-repo/) and check out your forked repository. If you don't have a GitHub account, you can still clone the Commons repository.\n\nMaking Changes\n--------------\n\n+ Create a _topic branch_ for your isolated work.\n  * Usually you should base your branch on the `master` branch.\n  * A good topic branch name can be the JIRA bug ID plus a keyword, e.g. `LANG-123-InputStream`.\n  * If you have submitted multiple JIRA issues, try to maintain separate branches and pull requests.\n+ Make commits of logical units.\n  * Make sure your commit messages are meaningful and in the proper format. Your commit message should contain the key of the JIRA issue.\n  * e.g. `LANG-123: Close input stream earlier`\n+ Respect the original code style:\n  + Only use spaces for indentation.\n  + Create minimal diffs - disable _On Save_ actions like _Reformat Source Code_ or _Organize Imports_. If you feel the source code should be reformatted create a separate PR for this change first.\n  + Check for unnecessary whitespace with `git diff` -- check before committing.\n+ Make sure you have added the necessary tests for your changes, typically in `src/test/java`.\n+ Run all the tests with `mvn clean verify` to ensure nothing else was accidentally broken.\n\nMaking Trivial Changes\n----------------------\n\nThe JIRA tickets are used to generate the changelog for the next release.\n\nFor changes of a trivial nature to comments and documentation, it is not always necessary to create a new ticket in JIRA.\nIn this case, it is appropriate to start the first line of a commit with '(doc)' instead of a ticket number.\n\n\nSubmitting Changes\n------------------\n\n+ Sign and submit the Apache [Contributor License Agreement][cla] if you haven't already.\n  * Note that small patches & typical bug fixes do not require a CLA as\n    clause 5 of the [Apache License](https://www.apache.org/licenses/LICENSE-2.0.html#contributions)\n    covers them.\n+ Push your changes to a topic branch in your fork of the repository.\n+ Submit a _Pull Request_ to the corresponding repository in the `apache` organization.\n  * Verify _Files Changed_ shows only your intended changes and does not\n  include additional files like `target/*.class`\n+ Update your JIRA ticket and include a link to the pull request in the ticket.\n\nIf you prefer to not use GitHub, then you can instead use\n`git format-patch` (or `svn diff`) and attach the patch file to the JIRA issue.\n\n\nAdditional Resources\n--------------------\n\n+ [Contributing patches](https://commons.apache.org/patches.html)\n+ [Apache Commons Lang JIRA project page][jira]\n+ [Contributor License Agreement][cla]\n+ [General GitHub documentation](https://help.github.com/)\n+ [GitHub pull request documentation](https://help.github.com/articles/creating-a-pull-request/)\n+ [Apache Commons Twitter Account](https://twitter.com/ApacheCommons)\n\n[cla]:https://www.apache.org/licenses/#clas\n[jira]:https://issues.apache.org/jira/browse/LANG\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 0.169921875,
          "content": "Apache Commons Lang\nCopyright 2001-2025 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (https://www.apache.org/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.783203125,
          "content": "<!---\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n<!---\n +======================================================================+\n |****                                                              ****|\n |****      THIS FILE IS GENERATED BY THE COMMONS BUILD PLUGIN      ****|\n |****                    DO NOT EDIT DIRECTLY                      ****|\n |****                                                              ****|\n +======================================================================+\n | TEMPLATE FILE: readme-md-template.md                                 |\n | commons-build-plugin/trunk/src/main/resources/commons-xdoc-templates |\n +======================================================================+\n |                                                                      |\n | 1) Re-generate using: mvn commons-build:readme-md                    |\n |                                                                      |\n | 2) Set the following properties in the component's pom:              |\n |    - commons.componentid (required, alphabetic, lower case)          |\n |    - commons.release.version (required)                              |\n |                                                                      |\n | 3) Example Properties                                                |\n |                                                                      |\n |  <properties>                                                        |\n |    <commons.componentid>math</commons.componentid>                   |\n |    <commons.release.version>1.2</commons.release.version>            |\n |  </properties>                                                       |\n |                                                                      |\n +======================================================================+\n--->\nApache Commons Lang\n===================\n\n[![Java CI](https://github.com/apache/commons-lang/actions/workflows/maven.yml/badge.svg)](https://github.com/apache/commons-lang/actions/workflows/maven.yml)\n[![Maven Central](https://img.shields.io/maven-central/v/org.apache.commons/commons-lang3?label=Maven%20Central)](https://search.maven.org/artifact/org.apache.commons/commons-lang3)\n[![Javadocs](https://javadoc.io/badge/org.apache.commons/commons-lang3/3.17.0.svg)](https://javadoc.io/doc/org.apache.commons/commons-lang3/3.17.0)\n[![CodeQL](https://github.com/apache/commons-lang/actions/workflows/codeql-analysis.yml/badge.svg)](https://github.com/apache/commons-lang/actions/workflows/codeql-analysis.yml)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/apache/commons-lang/badge)](https://api.securityscorecards.dev/projects/github.com/apache/commons-lang)\n\nApache Commons Lang, a package of Java utility classes for the\n  classes that are in java.lang's hierarchy, or are considered to be so\n  standard as to justify existence in java.lang.\n\n  The code is tested using the latest revision of the JDK for supported\n  LTS releases: 8, 11, 17 and 21 currently.\n  See https://github.com/apache/commons-lang/blob/master/.github/workflows/maven.yml\n  \n  Please ensure your build environment is up-to-date and kindly report any build issues.\n\nDocumentation\n-------------\n\nMore information can be found on the [Apache Commons Lang homepage](https://commons.apache.org/proper/commons-lang).\nThe [Javadoc](https://commons.apache.org/proper/commons-lang/apidocs) can be browsed.\nQuestions related to the usage of Apache Commons Lang should be posted to the [user mailing list](https://commons.apache.org/mail-lists.html).\n\nGetting the latest release\n--------------------------\nYou can download source and binaries from our [download page](https://commons.apache.org/proper/commons-lang/download_lang.cgi).\n\nAlternatively, you can pull it from the central Maven repositories:\n\n```xml\n<dependency>\n  <groupId>org.apache.commons</groupId>\n  <artifactId>commons-lang3</artifactId>\n  <version>3.17.0</version>\n</dependency>\n```\n\nBuilding\n--------\n\nBuilding requires a Java JDK and [Apache Maven](https://maven.apache.org/).\nThe required Java version is found in the `pom.xml` as the `maven.compiler.source` property.\n\nFrom a command shell, run `mvn` without arguments to invoke the default Maven goal to run all tests and checks.\n\nContributing\n------------\n\nWe accept Pull Requests via GitHub. The [developer mailing list](https://commons.apache.org/mail-lists.html) is the main channel of communication for contributors.\nThere are some guidelines which will make applying PRs easier for us:\n+ No tabs! Please use spaces for indentation.\n+ Respect the existing code style for each file.\n+ Create minimal diffs - disable on save actions like reformat source code or organize imports. If you feel the source code should be reformatted create a separate PR for this change.\n+ Provide JUnit tests for your changes and make sure your changes don't break any existing tests by running `mvn`.\n+ Before you pushing a PR, run `mvn` (by itself), this runs the default goal, which contains all build checks.\n+ To see the code coverage report, regardless of coverage failures, run `mvn clean site -Dcommons.jacoco.haltOnFailure=false`\n\nIf you plan to contribute on a regular basis, please consider filing a [contributor license agreement](https://www.apache.org/licenses/#clas).\nYou can learn more about contributing via GitHub in our [contribution guidelines](CONTRIBUTING.md).\n\nLicense\n-------\nThis code is licensed under the [Apache License v2](https://www.apache.org/licenses/LICENSE-2.0).\n\nSee the `NOTICE.txt` file for required notices and attributions.\n\nDonating\n--------\nYou like Apache Commons Lang? Then [donate back to the ASF](https://www.apache.org/foundation/contributing.html) to support development.\n\nAdditional Resources\n--------------------\n\n+ [Apache Commons Homepage](https://commons.apache.org/)\n+ [Apache Issue Tracker (JIRA)](https://issues.apache.org/jira/browse/LANG)\n+ [Apache Commons Slack Channel](https://the-asf.slack.com/archives/C60NVB8AD)\n+ [Apache Commons Twitter Account](https://twitter.com/ApacheCommons)\n\nApache Commons Components\n-------------------------\n\nPlease see the [list of components](https://commons.apache.org/components.html)\n"
        },
        {
          "name": "RELEASE-NOTES.txt",
          "type": "blob",
          "size": 125.5869140625,
          "content": "\nLicensed to the Apache Software Foundation (ASF) under one or more\ncontributor license agreements.  See the NOTICE file distributed with\nthis work for additional information regarding copyright ownership.\nThe ASF licenses this file to You under the Apache License, Version 2.0\n(the \"License\"); you may not use this file except in compliance with\nthe License.  You may obtain a copy of the License at\n\nhttp://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n                        Apache Commons Lang\n                        Version 3.17.0\n                        Release Notes\n\n\nThe Apache Commons team is pleased to announce Apache Commons Lang Version 3.17.0.\n\nCommons Lang is a set of utility functions and reusable components that should be useful in any Java environment.\n\nStarting with Commons Lang 3.9, we target Java 8, using those features.\n\nFor advice on upgrading from 2.x to 3.x, see:\n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nThe code is tested using the latest revision of the JDK for supported\nLTS releases: 8, 11, 17 and 21 currently.\nSee https://github.com/apache/commons-lang/blob/master/.github/workflows/maven.yml\n\nPlease ensure your build environment is up-to-date and kindly report any build issues.\n\nThis is a feature and maintenance release. Java 8 or later is required.\n\nChanges in this version include:\n\nNew features:\no            RandomUtils.secure() now uses SecureRandom() instead of SecureRandom.getInstanceStrong(). Thanks to Gary Gregory.\no            RandomStringUtils.secure() now uses SecureRandom() instead of SecureRandom.getInstanceStrong(). Thanks to Gary Gregory.\no            Remove unused exception from deprecated StringUtils.toString(byte[], String). Thanks to Gary Gregory.\no            Make RandomUtils.insecure() public. Thanks to Gary Gregory.\no            Add RandomUtils.secureStrong(). Thanks to Gary Gregory.\no            Add RandomStringUtils.secureStrong(). Thanks to Gary Gregory.\no            Add CalendarUtils.toLocalDateTime(Calendar). Thanks to Gary Gregory.\no            Add CalendarUtils.toLocalDateTime(). Thanks to Gary Gregory.\no            Add CalendarUtils.toZonedDateTime(Calendar). Thanks to Gary Gregory.\no            Add CalendarUtils.toZonedDateTime(). Thanks to Gary Gregory.\no            Add CalendarUtils.toOffsetDateTime(Calendar). Thanks to Gary Gregory.\no            Add CalendarUtils.toOffsetDateTime(). Thanks to Gary Gregory.\n\nFixed Bugs:\no LANG-1760: Using RandomStringUtils.insecure() still leads to using the secure() random. Thanks to Marco Hoek, Gary Gregory.\no            Deprecate static RandomUtils.next*() methods in favor or .secure() and .insecure() versions. Thanks to Gary Gregory.\no            Deprecate static RandomStringUtils.random*() methods in favor or .secure() and .insecure() versions. Thanks to Gary Gregory.\n\nChanges:\no            Bump org.hamcrest:hamcrest from 2.2 to 3.0 #1255. Thanks to Gary Gregory, Dependabot.\no            Bump org.easymock:easymock from 5.3.0 to 5.4.0 #1256. Thanks to Gary Gregory, Dependabot.\no            Bump org.codehaus.mojo:exec-maven-plugin from 3.3.0 to 3.4.1 #1262, #1264. Thanks to Gary Gregory, Dependabot.\no            Bump org.apache.commons:commons-parent from 72 to 73 #1265. Thanks to Gary Gregory, Dependabot.\n\n\nHistorical list of changes: https://commons.apache.org/proper/commons-lang/changes-report.html\n\nFor complete information on Apache Commons Lang, including instructions on how to submit bug reports,\npatches, or suggestions for improvement, see the Apache Commons Lang website:\n\nhttps://commons.apache.org/proper/commons-lang/\n\nDownload page: https://commons.apache.org/proper/commons-lang/download_lang.cgi\n\nHave fun!\nApache Commons Team\n\n-----------------------------------------------------------------------------\n\n                        Apache Commons Lang\n                        Version 3.16.0\n                        Release Notes\n\n\nThe Apache Commons team is pleased to announce Apache Commons Lang Version 3.16.0.\n\nCommons Lang is a set of utility functions and reusable components that should be useful in any Java environment.\n\nStarting with Commons Lang 3.9, we target Java 8, using those features.\n\nFor advice on upgrading from 2.x to 3.x, see:\n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nThe code is tested using the latest revision of the JDK for supported\nLTS releases: 8, 11, 17 and 21 currently.\nSee https://github.com/apache/commons-lang/blob/master/.github/workflows/maven.yml\n\nPlease ensure your build environment is up-to-date and kindly report any build issues.\n\nThis is a feature and maintenance release. Java 8 or later is required.\n\nChanges in this version include:\n\nNew features:\no            Add StopWatch.getSplitDuration() and deprecate getSplitTime(). Thanks to Gary Gregory.\no            Add StopWatch.getStartInstant() and deprecate getStartTime(). Thanks to Gary Gregory.\no            Add StopWatch.getStopInstant() and deprecate getStopTime(). Thanks to Gary Gregory.\no            Add StopWatch.getDuration() and deprecate getTime(). Thanks to Gary Gregory.\no            Add Javadoc links from StopWatch to DurationUtils #1249. Thanks to Oliver B. Fischer, Gary Gregory.\no            Add LangCollectors.collect(Collector, T...). Thanks to Gary Gregory.\no            Add RandomStringUtils.secure(). Thanks to Gary Gregory.\no            Add RandomStringUtils.insecure(). Thanks to Gary Gregory.\n\nFixed Bugs:\no            Reimplement StopWatch internals to use java.time. Thanks to Gary Gregory.\no LANG-1745: RandomStringUtils.random() with a negative character index should throw IllegalArgumentException. Thanks to Wang Hailong, Gary Gregory.\no LANG-1741: LocaleUtils.toLocale(String) cannot parse four segments. Thanks to Wang Hailong, Gary Gregory.\no            Use fewer intermediary strings in DefaultExceptionContext.getFormattedExceptionMessage(String). Thanks to Gary Gregory.\no            Fix Javadoc in StringUtils.splitPreserveAllTokens() #1251. Thanks to Václav Haisman.\no            Deprecate ArraySort constructor for removal. Thanks to Gary Gregory.\no            Deprecate CharEncoding constructor for removal. Thanks to Gary Gregory.\no            Deprecate Conversion constructor for removal. Thanks to Gary Gregory.\no            Deprecate Conversion constructor for removal. Thanks to Gary Gregory.\no            Deprecate EntityArrays constructor for removal. Thanks to Gary Gregory.\no            Deprecate ObjectToStringComparator constructor for removal. Thanks to Gary Gregory.\no            Deprecate RuntimeEnvironment constructor for removal. Thanks to Gary Gregory.\n\nChanges:\no            Bump org.apache.commons:commons-parent from 71 to 72 #1253. Thanks to Gary Gregory, Dependabot.\n\n\nHistorical list of changes: https://commons.apache.org/proper/commons-lang/changes-report.html\n\nFor complete information on Apache Commons Lang, including instructions on how to submit bug reports,\npatches, or suggestions for improvement, see the Apache Commons Lang website:\n\nhttps://commons.apache.org/proper/commons-lang/\n\nDownload page: https://commons.apache.org/proper/commons-lang/download_lang.cgi\n\nHave fun!\nApache Commons Team\n\n-----------------------------------------------------------------------------\n\nThe Apache Commons team is pleased to announce Apache Commons Lang Version 3.15.0.\n\nCommons Lang is a set of utility functions and reusable components that should be of use in any Java environment.\n\nStarting with Commons Lang 3.9, we target Java 8, making use of those features.\n\nFor advice on upgrading from 2.x to 3.x, see:\n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nThe code is tested using the latest revision of the JDK for supported\nLTS releases: 8, 11, 17 and 21 currently.\nSee https://github.com/apache/commons-lang/blob/master/.github/workflows/maven.yml\n\nPlease ensure your build environment is up-to-date and kindly report any build issues.\n\nNew features and bug fixes (Java 8 or above).\n\nChanges in this version include:\n\nNew features:\no LANG-1724: Customize text pattern in DiffResult#toString(). Thanks to Gary Gregory, Dennis Baerten.\no            Add DiffBuilder.Builder. Thanks to Gary Gregory.\no            Add DiffBuilder.builder(). Thanks to Gary Gregory.\no            Add ReflectionDiffBuilder.Builder. Thanks to Gary Gregory.\no            Add ReflectionDiffBuilder.builder(). Thanks to Gary Gregory.\no            Add test in TypeUtilsTest #1151. Thanks to Elliotte Rusty Harold.\no            Add Streams.failableStream(T), non-varargs variant. Thanks to Gary Gregory.\no            Add Streams.nonNull(T), non-varargs variant. Thanks to Gary Gregory.\no            Add ArrayUtils.nullTo(T[], T[]). Thanks to Gary Gregory.\no            Add T ArrayUtils.arraycopy(T, int, T, int, int) fluent style. Thanks to Gary Gregory.\no            Add T ArrayUtils.arraycopy(T, int, int, int, Function) fluent style. Thanks to Gary Gregory.\no            Add SystemUtils.IS_JAVA_22. Thanks to Gary Gregory.\no            Add JavaVersion.JAVA_22. Thanks to Gary Gregory.\no            Add SystemProperties.getUserName(Supplier<String>). Thanks to Gary Gregory.\no            Add SystemProperties.getLineSeparator(Supplier<String>). Thanks to Gary Gregory.\no            Add SystemProperties.getJavaSpecificationVersion(Supplier<String>). Thanks to Gary Gregory.\no            Add SystemProperties constants and methods for system properties as of Java 22. Thanks to Gary Gregory.\no            Add MethodUtils.getMethodObject(Class, String, Class...). Thanks to Gary Gregory.\no LANG-1733: Add null-safe Consumers.accept() and Functions.apply() #1215. Thanks to Jongjin Bae, Gary Gregory.\no            Add SystemUtils.IS_OS_ANDROID. Thanks to Gary Gregory.\no            Add SystemUtils.IS_OS_MAC_OSX_SONOMA. Thanks to Gary Gregory.\no            Add RuntimeEnvironment.inContainer() #1241. Thanks to Gary Gregory.\no            Add AppendableJoiner and refactor string joining #1244. Thanks to Gary Gregory.\n\nFixed Bugs:\no            Improve Javadoc in ExceptionUtils #1136. Thanks to Miklós Karakó, Gary Gregory.\no            Fixed two non-deterministic tests in EnumUtilsTest.java #1131. Thanks to Saiharshith Karuneegar Ramesh, Gary Gregory.\no LANG-1721: Fix wrong number check that cause StringIndexOutOfBoundsException #1140. Thanks to Arthur Chan, Gary Gregory.\no LANG-1722: Rethrow NegativeArraySizeException as SerializationException in SerializationUtils.deserialize(InputStream) #1141. Thanks to Arthur Chan.\no LANG-1723: Throw NumberFormatException instead of IndexOutOfBoundsException in NumberUtils.getMantissa(String, int) #1145. Thanks to Arthur Chan, Gary Gregory.\no            Minor grammar fixes #1143. Thanks to Paranoïd User.\no LANG-1713: ArrayUtils will return null when adding two null arrays, but undocumented. Thanks to John Hendrikx, Gary Gregory.\no            Let parent POM figure out commons.spdx.version. Thanks to Gary Gregory.\no LANG-1726: Undeprecate ExceptionUtils.rethrow(Throwable). Thanks to Václav Haisman, Gary Gregory.\no LANG-1702: Test the Conversion class #1155. Thanks to Elliotte Rusty Harold.\no            Address minor redundancies after code inspection #1148. Thanks to ParanoidUser, Elliotte Rusty Harold, Gary Gregory.\no            Allow EventListenerSupport to handle (and ignore) exception from listeners allowing invocation of all listeners #1167. Thanks to Gary Gregory.\no            Deprecate AnnotationUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate ArchUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate ArrayUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate BooleanUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate CharSequenceUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate CharSetUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate CharUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate ClassLoaderUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate ClassPathUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate ClassUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate ConstructorUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate DateFormatUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate DateUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate Diff.getType(). Thanks to Gary Gregory.\no            Deprecate DiffBuilder.DiffBuilder(T, T, ToStringStyle). Thanks to Gary Gregory.\no            Deprecate DiffBuilder.DiffBuilder(T, T, ToStringStyle, boolean). Thanks to Gary Gregory.\no            Deprecate DurationFormatUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate DurationUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate EnumUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate EventUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate FieldUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate IEEE754rUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate InheritanceUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate IntStreams 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate LocaleUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate LockingVisitors 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate MemberUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate MethodUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate NumberUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate ObjectUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate RandomStringUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate RandomUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate ReflectionDiffBuilder.ReflectionDiffBuilder(T, T, ToStringStyle). Thanks to Gary Gregory.\no            Deprecate RegExUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate SerializationUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate Streams 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate StringEscapeUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate StringUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate Suppliers 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate SystemProperties 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate ThreadUtils 0-argument constructor. Thanks to Gary Gregory.\no            Deprecate TypeUtils 0-argument constructor. Thanks to Gary Gregory.\no            Make ArrayFill null-safe. Thanks to Gary Gregory.\no            Make ArraySorter null-safe. Thanks to Gary Gregory.\no            Make ArrayUtils.removeAll() null-safe. Thanks to Gary Gregory.\no            Fix Java version in README.md #1170. Thanks to Philipp Trulson, Gary Gregory.\no            StringUtils.stripAccents() should handle ligatures, UTF32 math blocks, etc. #1201. Thanks to Stephan Peters, Gary Gregory, Bernd.\no LANG-1524: TypeUtils.toString(Type) StackOverflowError for an inner class in the inner class parameterized enclosing class #657. Thanks to kijong.youn, Aakash Gupta, Gary Gregory.\no            Deprecate SystemUtils.getUserName(String) in favor of SystemProperties.getUserName(Supplier). Thanks to Gary Gregory.\no            Make LockVisitor.acceptReadLocked(FailableConsumer) null-safe. Thanks to Gary Gregory.\no            Make LockVisitor.applyWriteLocked(FailableConsumer) null-safe. Thanks to Gary Gregory.\no            Make ObjectUtils.getFirstNonNull(Supplier...) null-safe. Thanks to Gary Gregory.\no            Make SystemProperties.getLineSeparator(Supplier). Thanks to Gary Gregory.\no            StringUtils.stripAccents(String) doesn't handle \"\\u0111\" and \"\\u0110\" (Vietnamese) #1216. Thanks to hunghhdev.\no            StringUtils.stripAccents(String) doesn't handle I with bar. Thanks to Gary Gregory.\no            StringUtils.stripAccents(String) doesn't handle U with bar. Thanks to Gary Gregory.\no            StringUtils.stripAccents(String) doesn't handle T with stroke. Thanks to Gary Gregory.\no LANG-1735: Fix Javadoc for FluentBitSet.setInclusive(int, int) #1222. Thanks to Tobias Kiecker.\no            Same Javadoc changes as [TEXT-234] #1223. Thanks to Tobias Kiecker.\no            Remove duplicate static data in SerializationUtils.ClassLoaderAwareObjectInputStream. Thanks to Gary Gregory.\no            Reimplement RandomUtils and RandomStringUtils on top of SecureRandom#getInstanceStrong() #1235. Thanks to Gary Gregory, Henri Yandell, Fabrice Benhamouda.\no LANG-1657: DiffBuilder: Type constraint for method append(..., DiffResult) too strict #786. Thanks to Matthias Welz, Andrew Thomas, Gary Gregory.\n\nChanges:\no            Bump commons-parent from 64 to 71 #1194, #1233. Thanks to Dependabot, Gary Gregory.\no            Bump org.codehaus.mojo:exec-maven-plugin from 3.1.1 to 3.3.0 #1175, #1224. Thanks to Dependabot.\no            Bump org.apache.commons:commons-text from 1.11.0 to 1.12.0 #1200. Thanks to Dependabot.\no            Bump org.easymock:easymock from 5.2.0 to 5.3.0 #1232. Thanks to Dependabot.\no            Bump org.codehaus.mojo:taglist-maven-plugin from 3.0.0 to 3.1.0 #1242. Thanks to Dependabot.\n\nRemoved:\no            Drop obsolete JDK 13 Maven profile #1142. Thanks to Paranoïd User.\n\nHistorical list of changes: https://commons.apache.org/proper/commons-lang/changes-report.html\n\nFor complete information on Apache Commons Lang, including instructions on how to submit bug reports,\npatches, or suggestions for improvement, see the Apache Commons Lang website:\n\nhttps://commons.apache.org/proper/commons-lang/\n\nDownload page: https://commons.apache.org/proper/commons-lang/download_lang.cgi\n\nHave fun!\n-Apache Commons Team\n\n-----------------------------------------------------------------------------\n\n                        Apache Commons Lang\n                        Version 3.14.0\n                        Release Notes\n\n\nThis document contains the release notes for the 3.14.0 version of Apache Commons Lang.\nCommons Lang is a set of utility functions and reusable components that should be of use in any \nJava environment.\n\nLang 3.9 and onwards now targets Java 8, making use of features that arrived with Java 8.\n\nFor the advice on upgrading from 2.x to 3.x, see the following page: \n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nNew features and bug fixes (Java 8 or above).\n\nChanges in this version include:\n\nNew features:\no            Add Functions#function(Function). Thanks to Rob Spoor, Gary Gregory.\no            Add FailableFunction#function(FailableFunction). Thanks to Rob Spoor, Gary Gregory.\no            Add CalendarUtils.getInstance(). Thanks to Gary Gregory.\no            Add syntax for optional tokens to DurationFormatUtils #1062. Thanks to Dan Watson.\no            Add ArrayFill. Thanks to Gary Gregory.\no            Add FastDateParser.TimeZoneStrategy.TzInfo.toString(). Thanks to Gary Gregory.\no            Add LocaleUtils.isLanguageUndetermined(Locale). Thanks to Gary Gregory.\no            Add ObjectUtils.toString(Supplier<Object>, Supplier<String>). Thanks to Gary Gregory.\no            Add LazyInitializer.isInitialized(). Thanks to Gary Gregory.\no            Add ConcurrentInitializer#isInitialized() #1120. Thanks to Benjamin Confino, Gary Gregory.\no            Add Streams.failableStream(T...). Thanks to Gary Gregory.\no            Add FailableSupplier.nul(). Thanks to Gary Gregory.\no            Add Suppliers.nul(). Thanks to Gary Gregory.\no            Add ExceptionUtils.throwUnchecked(T) where T extends Throwable, and deprecate Object version. Thanks to Gary Gregory.\no            Add ExceptionUtils.rethrowRuntimeException(T), and deprecate rethrow(T). Thanks to Gary Gregory.\no LANG-1716: ConcurrentInitializer implementations can now be instantiated and configured with allocation and release lambdas. Thanks to Benjamin Confino, Gary Gregory.\no LANG-1717: Add support for RISC-V in ArchUtils #1128. Thanks to Levi Zim, Gary Gregory.\n\nFixed Bugs:\no            Rename variable names from 'clss' to 'clazz' #1087. Thanks to remeio.\no            [Javadoc] ComparableUtils'c1' to 'comparable1', 'c2' to ' Thanks to remeio.\no            [Javadoc] Remove 2.1 specific comment #1091. Thanks to Elliotte Rusty Harold.\no LANG-1704: ImmutablePair and ImmutableTriple implementation don't match final in Javadoc. Thanks to Dan Ziemba, Gilles Sadowski, Alex Herbert, Gary Gregory.\no            [Javadoc] Fix Incorrect Description in Processor isAarch64() #1093. Thanks to Sung Ho Yoon.\no            [Javadoc] Point to right getShortClassName flavor in Javadoc for relevant notes #1097. Thanks to ljacqu.\no            Improve performance of StringUtils.isMixedCase() #1096. Thanks to hduelme.\no LANG-1706: ThreadUtils find methods should not return null items #1098. Thanks to Alberto Fernández.\no LANG-1710: ReflectionToStringBuilder changes in version 3.13.0 has broken the logic for overriding classes. Thanks to Shashank Sharma, Gary Gregory, Oksana.\no            Return \"null\" instead of NPE in ClassLoaderUtils.toString(ClassLoader). Thanks to Gary Gregory.\no            Return \"null\" instead of NPE in ClassLoaderUtils.toString(URLClassLoader). Thanks to Gary Gregory.\no            Return ToStringStyle.nullText instead of NPE for ReflectionToStringBuilder.toString(). Thanks to Gary Gregory.\no            Fix ThresholdCircuitBreaker#checkState() #1100. Thanks to yichinzhu, Gary Gregory.\no            Use ConcurrentInitializer implementations without subclassing. #1123. Thanks to Benjamin Confino, Gary Gregory.\no            Update critical value for chi-square test #1125. Thanks to Alex Herbert.\no            Fix Javadoc syntax errors #1129. Thanks to Sung Ho Yoon.\n\nChanges:\no            Bump commons-parent from 58 to 64. Thanks to Gary Gregory.\no            Bump org.easymock:easymock from 5.1.0 to 5.2.0 #1104. Thanks to Gary Gregory.\no            Bump commons-text from 1.10.0 to 1.11.0. Thanks to Gary Gregory.\no            Bump org.codehaus.mojo:exec-maven-plugin from 3.1.0 to 3.1.1 #1135. Thanks to Gary Gregory.\n\n\nHistorical list of changes: https://commons.apache.org/proper/commons-lang/changes-report.html\n\nFor complete information on Apache Commons Lang, including instructions on how to submit bug reports,\npatches, or suggestions for improvement, see the Apache Commons Lang website:\n\nhttps://commons.apache.org/proper/commons-lang/\n\nDownload page: https://commons.apache.org/proper/commons-lang/download_lang.cgi\n\nHave fun!\n-Apache Commons Team\n\n-----------------------------------------------------------------------------\n\n                        Apache Commons Lang\n                        Version 3.13.0\n                        Release Notes\n\n\nThis document contains the release notes for the 3.13.0 version of Apache Commons Lang.\nCommons Lang is a set of utility functions and reusable components that should be of use in any \nJava environment.\n\nLang 3.9 and onwards now targets Java 8, making use of features that arrived with Java 8.\n\nFor the advice on upgrading from 2.x to 3.x, see the following page: \n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nNew features and bug fixes (Java 8 or above).\n\nChanges in this version include:\n\nNew features:\no            Add GitHub coverage.yml. Thanks to Gary Gregory.\no            Add EnumUtils.getEnumSystemProperty(...). Thanks to Gary Gregory.\no            Add TriConsumer. Thanks to Gary Gregory.\no            Add and use EnumUtils.getFirstEnumIgnoreCase(Class, String, Function, E). Thanks to Gary Gregory.\no            Add and use Suppliers. Thanks to Gary Gregory.\no            Add and use ArrayUtils.getComponentType(T[]). Thanks to Gary Gregory.\no            Add and use ClassUtils.getComponentType(Class>T[]>). Thanks to Gary Gregory.\no            Add and use ObjectUtils.getClass(T). Thanks to Gary Gregory.\no            Add and use ArrayUtils.newInstance(Class>T>, int). Thanks to Gary Gregory.\no            Add and use null-safe Streams.of(T...). Thanks to Gary Gregory.\no            Add ClassUtils.comparator(). Thanks to Gary Gregory.\no            Add and use ThreadUtils.sleepQuietly(Duration). Thanks to Gary Gregory.\no            Add and use ArrayUtils.setAll(T[], IntFunction). Thanks to Gary Gregory.\no            Add and use ArrayUtils.setAll(T[], Supplier). Thanks to Gary Gregory.\no            Add BooleanConsumer. Thanks to Gary Gregory.\no            Add IntToCharFunction. Thanks to Gary Gregory.\no            Add IntStreams. Thanks to Gary Gregory.\no            Add UncheckedFuture. Thanks to Gary Gregory.\no            Add UncheckedException. Thanks to Gary Gregory.\no            Add UncheckedExecutionException. Thanks to Gary Gregory.\no            Add UncheckedTimeoutException. Thanks to Gary Gregory.\no            Add UncheckedInterruptedException. Thanks to Gary Gregory.\no            Add TimeZones.GMT. Thanks to Gary Gregory.\no            Add ObjectUtils.identityHashCodeHex(Object). Thanks to Gary Gregory.\no            Add ObjectUtils.hashCodeHex(Object). Thanks to Gary Gregory.\no            Add StringUtils.removeStart(String, char). Thanks to Gary Gregory.\no LANG-1659: Add null-safe ObjectUtils.isArray() #754. Thanks to Arturo Bernal, Gary Gregory.\no            Add ComparableUtils.max(A, A) and ComparableUtils.min(A, A). Thanks to Gary Gregory.\no            Add UncheckedReflectiveOperationException. Thanks to Gary Gregory.\no            Add and use ClassUtils.isPublic(Class). Thanks to Gary Gregory.\no            Add UncheckedIllegalAccessException. Thanks to Gary Gregory.\no            Add MethodInvokers. Thanks to Gary Gregory.\no            Add Streams.nullSafeStream(Collection). Thanks to Gary Gregory.\no            Add Streams.toStream(Collection). Thanks to Gary Gregory.\no            Add Streams.failableStream(Collection) and deprecate misnamed stream(Collection). Thanks to Gary Gregory.\no            Add Streams.failableStream(Stream) and deprecate misnamed stream(Stream). Thanks to Gary Gregory.\no            Add EnumUtils.getEnumMap(Class, Function). #730 Thanks to Maxwell Cody, Gary Gregory.\no            Add FluentBitSet. Thanks to Gary Gregory.\no            Add Streams.instancesOf(Class, Collection). Thanks to Gary Gregory.\no            Add ImmutablePair.ofNonNull(L, R). Thanks to Gary Gregory.\no            Add ImmutableTriple.ofNonNull(L, M, R). Thanks to Gary Gregory.\no            Add MutablePair.ofNonNull(L, R). Thanks to Gary Gregory.\no            Add MutableTriple.ofNonNull(L, M, R). Thanks to Gary Gregory.\no            Add Pair.ofNonNull(L, R). Thanks to Gary Gregory.\no            Add Triple.ofNonNull(L, M, R). Thanks to Gary Gregory.\no            Add ArrayUtils.containsAny(Object[], Object...). Thanks to Gary Gregory.\no            Add Processor.Type.AARCH_64. Thanks to Gary Gregory.\no            Add Processor.isAarch64(). Thanks to Gary Gregory.\no            Update ArchUtils.getProcessor(String) for \"aarch64\". Thanks to Gary Gregory.\no            Add JavaVersion.JAVA_18. Thanks to Gary Gregory.\no            Add JavaVersion.JAVA_19. Thanks to Emmanuel Bourg.\no            Add JavaVersion.JAVA_20. Thanks to Emmanuel Bourg.\no            Add JavaVersion.JAVA_21. Thanks to Emmanuel Bourg.\no            Add TimeZones.toTimeZone(TimeZone). Thanks to Gary Gregory.\no            Add FutureTasks. Thanks to Gary Gregory.\no            Add Memoizer(Function) and Memoizer(Function, boolean). Thanks to Gary Gregory.\no            Add Consumers. Thanks to Gary Gregory.\no            Add github/codeql-action. Thanks to Gary Gregory.\no            Add coverage.yml. Thanks to Gary Gregory.\no            Add DurationUtils.since(Temporal). Thanks to Gary Gregory.\no            Add DurationUtils.of(FailableConsumer|FailableRunnbale). Thanks to Gary Gregory.\no            Add ExceptionUtils.forEach(Throwable, Consumer<Throwable>). Thanks to Gary Gregory.\no            Add ExceptionUtils.stream(Throwable). Thanks to Gary Gregory.\no            Add ExceptionUtils.getRootCauseStackTraceList(Throwable). Thanks to Gary Gregory.\no            Add SystemUtils.IS_OS_WINDOWS_11. Thanks to Will Herrmann, Gary Gregory, Roland Kreuzer.\no            Add SystemUtils.IS_JAVA_16. Thanks to Gary Gregory.\no            Add SystemUtils.IS_JAVA_17. Thanks to Gary Gregory.\no            Add SystemUtils.IS_JAVA_18. Thanks to Gary Gregory.\no            Add SystemUtils.IS_JAVA_19. Thanks to Gary Gregory.\no            Add SystemUtils.IS_JAVA_20. Thanks to Gary Gregory.\no            Add SystemUtils.IS_JAVA_21. Thanks to Emmanuel Bourg.\no LANG-1627: Add ArrayUtils.oneHot(). Thanks to Alberto Scotto, Avijit Chakraborty, Steve Bosman, Bruno P. Kinoshita, Gary Gregory.\no LANG-1662: Let ReflectionToStringBuilder only reflect given field names #849. Thanks to Daniel Augusto Veronezi Salvador, Gary Gregory, Bruno P. Kinoshita.\no            Add Streams.of(Enumeration<E>). Thanks to Gary Gregory.\no            Add Streams.of(Iterable<E>). Thanks to Gary Gregory.\no            Add Streams.of(Iterator<E>). Thanks to Gary Gregory.\no LANG-1689: Simple support for Optional in ObjectUtils#isEmpty() #933. Thanks to Joseph Hendrix, Gary Gregory.\no            Add Processor.Type.getLabel(). Thanks to Gary Gregory.\no            Add Processor.toString(). Thanks to Gary Gregory.\no            Add HashCodeBuilder.equals(Object). Thanks to Gary Gregory.\no            Add BooleanUtils.values() and forEach(). Thanks to Gary Gregory.\no            Add ClassPathUtils.packageToPath(String) and pathToPackage(String) Thanks to Gary Gregory.\no            Add CalendarUtils#getDayOfYear() #968 Thanks to Arturo Bernal.\no            Add NumberRange, DoubleRange, IntegerRange, LongRange. Thanks to Gary Gregory.\no            Add missing exception javadoc/tests for some null arguments #869. Thanks to Diego Marcilio, Bruno P. Kinoshita, Gary Gregory.\no            Add ClassLoaderUtils.getSystemURLs() and getThreadURLs(). Thanks to Gary Gregory.\no            Add RegExUtils.dotAll() and dotAllMatcher(). Thanks to Gary Gregory.\no            Add Pair.accept(FailableBiConsumer). Thanks to Gary Gregory.\no            Add Pair.apply(FailableBiFunction). Thanks to Gary Gregory.\no LANG-1677: Add ReflectionDiffBuilder.setExcludeFieldNames(...) and DiffExclude a? #838. Thanks to Dennis Baerten, Gary Gregory.\no LANG-1647: Add and ExceptionUtils.isChecked() and isUnchecked() #1069 Thanks to Arturo Bernal, Dimitrios Efthymiou, Gary Gregory.\no            Add and use ExceptionUtils.throwUnchecked(throwable). Thanks to Gary Gregory.\no            Add LockingVisitors.create(O, ReadWriteLock). Thanks to Gary Gregory.\n\nFixed Bugs:\no LANG-1645: NumberUtils.createNumber() to recognize hex integers prefixed with +. Thanks to Alex Herbert.\no LANG-1646: NumberUtils.createNumber() to return requested floating point type for zero. Thanks to Alex Herbert.\no            DMI: Random object created and used only once (DMI_RANDOM_USED_ONLY_ONCE); Better multi-threaded behavior. Thanks to SpotBugs, Gary Gregory.\no LANG-1646: Redundant Collection operation. Use Collections.emptyIterator() #738. Thanks to Arturo Bernal.\no            Make Streams.stream(Collection) null-safe. Thanks to Gary Gregory.\no LANG-1667: Allow tests to access java.util classes such as ArrayList in Java 16 #788. Thanks to Andrew Thomas.\no LANG-1669: OpenJDK 16 Day Period Parsing #791. Thanks to Andrew Thomas.\no LANG-1663: Update documentation to list correct exception for null array parameters #785. Thanks to Andrew Thomas.\no            Fixing reversed Javadoc descriptions in StopWatch #781. Thanks to Thunderforge.\no LANG-1670: Fix typos in JavaDoc #795. Thanks to Igor Shuvalov.\no            Simplify assertions with equivalent but more simple. #792. Thanks to Arturo Bernal.\no            Avoid multiple equivalent occurrences of the same expression. #797. Thanks to Arturo Bernal.\no            Remove redundant initializers #800. Thanks to Arturo Bernal.\no            Fix ObjectUtils Javadocs #755. Thanks to Arturo Bernal.\no            Add test idea for RangeTest from PR #815 by Rushi98, but with a new comment. Thanks to Rushi98, Gary Gregory.\no LANG-1674: Make Range constructors more generic #810. Thanks to singhbaljit, Gary Gregory.\no            Use final and Remove redundant String. #813, #816. Thanks to Arturo Bernal.\no            Use Set instead of List for checking the contains() method #734. Thanks to CiprianBodnarescu.\no            Javadoc for StringUtils.substringBefore(String str, int separator) doesn't mention that the separator is an int. Thanks to Roland Kreuzer.\no            Fix NullPointerException in ThreadUtils.getSystemThreadGroup() when the current thread is stopped. Thanks to Gary Gregory.\no            ArrayUtils.toPrimitive(Boolean...) null array elements map to false, like Boolean.parseBoolean(null) and its callers return false. Thanks to Gary Gregory.\no            StrBuilder.StrBuilderReader.skip(long): Throw an exception when an implicit narrowing conversion in a compound assignment would result in information loss or a numeric error such as an overflows. Thanks to CodeQL, Gary Gregory.\no            Deprecate Validate#notNull(Object) in favor of using Objects#requireNonNull(Object, String). Thanks to Gary Gregory.\no LANG-1462: Use TimeZone from calendar in DateFormatUtils. Thanks to Lijun Liang, Arun Avanathan, Tai Dupree, Maria Buiakova, Gary Gregory.\no            Updating javadoc for NullPointerException when Validate.notNull() is called #870. Thanks to Diego Marcilio.\no            Fixing and adding DateUtils exception Javadocs #871. Thanks to Diego Marcilio.\no LANG-1679: Improve performance of StringUtils.unwrap(String, String) #844. Thanks to clover.\no LANG-1675: Improve performance of StringUtils.join for primitives #812. Thanks to clover.\no LANG-1675: Fixed NPE getting Stack Trace if Throwable is null #733. Thanks to Arturo Bernal.\no            Make Validate.isAssignableFrom() check null inputs. Thanks to Gary Gregory, Arturo Bernal.\no            Fix Javadoc for Validate.isAssignableFrom(). Thanks to Arturo Bernal.\no            Make final mappingFunction variable #876. Thanks to Arturo Bernal.\no            Remove unnecessary variable creations #882. Thanks to Arturo Bernal.\no            Minor changes #769. Thanks to Arturo Bernal.\no LANG-1680: FastDateFormat does not support the 'L'-Pattern from SimpleDateFormat. Thanks to Michael Krause, Steve Bosman, Gary Gregory.\no            Increase test coverage of ComparableUtils from 71% to 100% #898. Thanks to Steve Bosman, Gary Gregory.\no            Increase method test coverage of MultilineRecursiveToStringStyle #899. Thanks to Steve Bosman.\no            Fix unstable coverage of CharSequenceUtils tests noticed during merge of PRs 898 and 899 #901. Thanks to Steve Bosman.\no            Rewrite Conversion.binaryBeMsb0ToHexDigit to invert logic of binaryToHexDigit. Thanks to Arturo Bernal.\no            Allow extension of previously final classes ImmutablePair and ImmutableTriple. Thanks to Gary Gregory.\no            Update ClassUtils Javadoc with some missing throws NPE #912. Thanks to shalk, Bruno P. Kinoshita, Gary Gregory.\no            Javadoc: StringUtils.repeat(\"\", \"x\", 3) = \"xx\"; #918. Thanks to guicaiyue.\no            Fix typos #920, #923. Thanks to Marc Wrobel.\no            Simplify condition #925. Thanks to Bhimantoro Suryo Admodjo.\no            StringUtils.join(Iterable, String) should only return null when the Iterable is null. Thanks to Gary Gregory.\no            StringUtils.join(Iterator, String) should only return null when the Iterator is null. Thanks to Gary Gregory.\no            Add tests to increase coverage #904. Thanks to Arturo Bernal.\no            Extends Object clauses are redundant #937. Thanks to Arturo Bernal.\no            Simplify conditional expression. #941. Thanks to Arturo Bernal.\no            Fix some Javadoc comments #938. Thanks to Arturo Bernal.\no            Deprecate getNanosOfMiili() method with typo and create proper getNanosOfMilli() #940. Thanks to Arturo Bernal, Gary Gregory.\no            Deprecate ThreadUtils code that defines custom function interfaces in favor of stock java.util.function.Predicate usage. Thanks to Gary Gregory.\no            Fix links in Javadoc and documentation #926. Thanks to Marc Wrobel.\no LANG-1604: Deprecate RandomUtils in favor of Apache Commons RNG UniformRandomProvider #942. Thanks to Gilles Sadowski, Maksym Bohachov, Gary Gregory.\no LANG-1638: Added docs regarding week year support #924. Thanks to Shailendra Soni, Michael Osipov, Arun Avanathan, Andrew Thomas, Bruno P. Kinoshita, Gary Gregory.\no LANG-1691: ClassUtils.getShortCanonicalName doesn't use the canonicalName #949. Thanks to Thiyagarajan, Gary Gregory.\no            Validate: Get error messages without using String.format when varargs is empty. Thanks to Piotr Stawirej.\no            Simplify expression (length is never < 0) #962. Thanks to Arturo Bernal.\no            Fix simple broken javadoc. #981. Thanks to Arturo Bernal.\no            Fix typo #1001. Thanks to LeeJuHyun.\no            Use Objects.requireNonNull() directly #1022. Thanks to Arturo Bernal.\no LANG-1694: MethodUtils.getMatchingMethod() fails with \"Found multiple candidates\" #1033. Thanks to SeasonPan.\no LANG-1643: Construct ArrayList with better default size #1041. Thanks to laurentschoelens.\no            ThreadUtilsTest#testThreadGroups will test failed when using Junit5 parallel test #1051. Thanks to remeio.\no            Swap the order of assertion args (first excepted then actual) #1054. Thanks to remeio.\no            Fix the comment of Failable, redundant \"-\" #1056. Thanks to remeio.\no            Fix the comment of ComparableUtils, using \"smallest\", not \"largest\" #1058. Thanks to remeio.\no            AnnotationUtilsTest and FormattableUtilsTest Only use static imports to import assert methods in tests #1052. Thanks to remeio.\no            [LANG-1681] Fix some FieldUtils Javadocs #1047. Thanks to laurentschoelens, Bruno P. Kinoshita, Diego Marcilio.\no            Remove unnecessary statement in DurationFormatUtils #965. Thanks to Arturo Bernal.\no LANG-1699: Corrected value of SystemUtils.JAVA_VENDOR #1066. Thanks to Darren Coleman.\no            [StepSecurity] ci: Harden GitHub Actions #1067. Thanks to step-security-bot, Gary Gregory.\no            Update Javadoc for the insert methods in ArrayUtils #1078. Thanks to Dimitrios Efthymiou.\no            Deprecate ExceptionUtils.ExceptionUtils(). Thanks to Gary Gregory.\no LANG-1697: TypeUtils.getRawType() throws a NullPointerException on Wildcard GenericArrayType. Thanks to Jan Arne Sparka, Gary Gregory.\no            Throw IllegalArgumentException instead of InternalError in the builder package. Thanks to Gary Gregory.\no            Avoid NPE in MutableObject#equals() for null content. Thanks to Gary Gregory.\no            SystemUtils fix and updates related to macOS #1085. Thanks to Ali Khaleqi Yekta, Gary Gregory.\n\nChanges:\no            Bump actions/cache from 2.1.4 to 3.0.10 #742, #752, #764, #833, #867, #959, #964. Thanks to Dependabot, XenoAmess, Gary Gregory.\no            Bump actions/checkout from 2 to 3.1.0 #819, #825, #859, #963. Thanks to Dependabot, Gary Gregory.\no            Bump actions/setup-java from v1.4.3 to 3.5.1 #879. Thanks to Gary Gregory.\no            Bump spotbugs-maven-plugin from 4.2.0 to 4.7.3.0 #735, #808, #822, #834, #868, #895, #919, #927, #946, #989. Thanks to Dependabot, Gary Gregory.\no            Bump spotbugs from 4.2.2 to 4.7.3 #744, #917, #947, #973. Thanks to Dependabot, Gary Gregory.\no            Bump maven-checkstyle-plugin from 3.1.2 to 3.2.0 #943. Thanks to Dependabot, Gary Gregory.\no            Bump checkstyle from 8.41 to 9.3 #739, #768, #787, #811, #824, #843. Thanks to Dependabot, Gary Gregory.\no            Bump easymock from 4.2 to 5.1.0 #746, #972, #986, #1012. Thanks to Dependabot.\no            Bump commons.jacoco.version from 0.8.6 to 0.8.8. Thanks to Gary Gregory.\no            Bump commons.japicmp.version from 0.15.2 to 0.16.0. Thanks to Gary Gregory.\no            Bump junit-pioneer from 1.3.8 to 1.9.1 #749, #767, #832, #883, #988, #991, #995. Thanks to Dependabot, Gary Gregory.\no            Bump junit-bom from 5.7.1 to 5.9.1 #761, #805, #807, #836, #928, #955. Thanks to Dependabot.\no            Bump maven-javadoc-plugin from 3.2.0 to 3.4.1. Thanks to Dependabot, Gary Gregory.\no            Bump jmh.version from 1.27 to 1.36 #794, #842, #872, #990. Thanks to Dependabot.\no            Bump maven-pmd-plugin from 3.14.0 to 3.19.0 #802, #858, #909, #948. Thanks to Dependabot.\no            Bump pmd from 6.40.0 to 6.52.0 #837, #861, #873, #905, #915, #932, #944. Thanks to Dependabot.\no            Bump biz.aQute.bndlib from 5.3.0 to 6.3.1 #814, #835. Thanks to Dependabot, Gary Gregory.\no            Bump maven-bundle-plugin from 5.1.1 to 5.1.2. Thanks to Dependabot.\no            Bump animal-sniffer-maven-plugin from 1.19 to 1.21. Thanks to Dependabot.\no            Bump exec-maven-plugin from 1.6.0 to 3.1.0 #590, #922. Thanks to Dependabot.\no            Bump maven-surefire-plugin from 3.0.0-M5 to 3.0.0-M7 #880, #910. Thanks to Dependabot.\no            Bump apache-rat from 0.13 to 0.14. Thanks to Gary Gregory.\no            Bump commons-parent from 53 to 58 #954, #1000, #1011, #1061. Thanks to Dependabot, Gary Gregory.\no            Bump commons-text from 1.9 to 1.10.0 #957. Thanks to Dependabot.\no            Bump commons.pmd-impl.version from 6.49.0 to 6.51.0 #961. Thanks to Dependabot, Gary Gregory.\n\n\nHistorical list of changes: https://commons.apache.org/proper/commons-lang/changes-report.html\n\nFor complete information on Apache Commons Lang, including instructions on how to submit bug reports,\npatches, or suggestions for improvement, see the Apache Commons Lang website:\n\nhttps://commons.apache.org/proper/commons-lang/\n\nDownload page: https://commons.apache.org/proper/commons-lang/download_lang.cgi\n\nHave fun!\n-Apache Commons Team\n\n=============================================================================\n\n                        Apache Commons Lang\n                        Version 3.12.0\n                        Release Notes\n\nINTRODUCTION:\n\nThis document contains the release notes for the 3.12.0 version of Apache Commons Lang.\nCommons Lang is a set of utility functions and reusable components that should be of use in any \nJava environment.\n\nLang 3.9 and onwards now targets Java 8, making use of features that arrived with Java 8.\n\nFor the advice on upgrading from 2.x to 3.x, see the following page: \n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nNew features and bug fixes.\n\nChanges in this version include:\n\nNew features:\no            Add BooleanUtils.booleanValues(). Thanks to Gary Gregory.\no            Add BooleanUtils.primitiveValues(). Thanks to Gary Gregory.\no LANG-1535: Add StringUtils.containsAnyIgnoreCase(CharSequence, CharSequence...). Thanks to Gary Gregory, Isira Seneviratne.\no LANG-1359: Add StopWatch.getStopTime(). Thanks to Gary Gregory, Keegan Witt.\no            More test coverage for CharSequenceUtils. #631. Thanks to Edgar Asatryan.\no            Add fluent-style ArraySorter. Thanks to Gary Gregory.\no            Add and use LocaleUtils.toLocale(Locale) to avoid NPEs. Thanks to Gary Gregory.\no            Add FailableShortSupplier, handy for JDBC APIs. Thanks to Gary Gregory.\no            Add JavaVersion.JAVA_17. Thanks to Gary Gregory.\no LANG-1636: Add missing boolean[] join method #686. Thanks to .\no            Add StringUtils.substringBefore(String, int). Thanks to Gary Gregory.\no            Add Range.INTEGER. Thanks to Gary Gregory.\no            Add DurationUtils. Thanks to Gary Gregory.\no            Introduce the use of @Nonnull, and @Nullable, and the Objects class as a helper tool.\no            Add and use true and false String constants #714. Thanks to Arturo Bernal, Gary Gregory.\no            Add and use ObjectUtils.requireNonEmpty() #716. Thanks to Arturo Bernal, Gary Gregory.\n\nFixed Bugs:\no LANG-1592: Correct implementation of RandomUtils.nextLong(long, long) Thanks to Huang Pingcai, Alex Herbert.\no LANG-1600: Restore handling of collections for non-JSON ToStringStyle #610. Thanks to Michael F.\no            ContextedException Javadoc add missing semicolon #581. Thanks to iamchao1129.\no LANG-1608: Resolve JUnit pioneer transitive dependencies using JUnit BOM. Thanks to Edgar Asatryan.\no            NumberUtilsTest - incorrect types in min/max tests #634. Thanks to HubertWo, Gary Gregory.\no LANG-1579: Improve StringUtils.stripAccents conversion of remaining accents. Thanks to XenoAmess.\no LANG-1606: StringUtils.countMatches - clarify Javadoc. Thanks to Rustem Galiev.\no LANG-1591: Remove redundant argument from substring call. Thanks to bhawna94.\no LANG-1613: BigDecimal is created when you pass it the min and max values, #642. Thanks to Arturo Bernal, Gary Gregory.\no LANG-1541: ArrayUtils.contains() and indexOf() fail to handle Double.NaN #647. Thanks to Arturo Bernal, Gary Gregory.\no LANG-1615: ArrayUtils contains() and indexOf() fail to handle Float.NaN # #561. Thanks to Arturo Bernal, Gary Gregory.\no            Fix potential NPE in TypeUtils.isAssignable(Type, ParameterizedType, Map, Type>). Thanks to Gary Gregory.\no LANG-1420: TypeUtils.isAssignable returns wrong result for GenericArrayType and ParameterizedType, #643. Thanks to Gordon Fraser, Rostislav Krasny, Arturo Bernal, Gary Gregory.\no LANG-1612: testGetAllFields and testGetFieldsWithAnnotation sometimes fail. Thanks to XinT, Gary Gregory.\no            Fix Javadoc for SystemUtils.isJavaVersionAtMost() #638. Thanks to John R. D'Orazio.\no LANG-1610: Fix StringUtils.unwrap throws StringIndexOutOfBoundsException #636. Thanks to Tony Liang.\no            Fix formatting of isAnyBlank() and isAnyEmpty(). #513. Thanks to Isira Seneviratne.\no LANG-1618: TypeUtils. containsTypeVariables does not support GenericArrayType #661. Thanks to Arturo Bernal.\no LANG-1622: Javadoc of some methods incorrectly refers to another method, #667, #668. #670. Thanks to Kanak Sony, anomen-s.\no LANG-1620: Refine StringUtils.lastIndexOfIgnoreCase #664. Thanks to Arturo Bernal.\no LANG-1619: Refine StringUtils.abbreviate #663. Thanks to Arturo Bernal.\no LANG-1584: Refine StringUtils.isNumericSpace #573. Thanks to Arturo Bernal.\no LANG-1580: Refine StringUtils.deleteWhitespace #569. Thanks to Arturo Bernal.\no LANG-1626: Correction in Javadoc of some methods. #673 Thanks to Kanak Sony.\no LANG-1628: Javadoc for RandomStringUtils.random() letters, numbers parameters is wrong. Thanks to Jarkko Rantavuori.\no            Correct markup in Javadoc for unbalanced braces #679. Thanks to Felix Schumacher.\no LANG-1544: MethodUtils.invokeMethod NullPointerException in case of null in args list #680. Thanks to Peter Nagy, Michael Buck, Gary Gregory.\no LANG-1637: Fix 2 digit week year formatting #688. Thanks to Uri Gonen, Gary Gregory, Michael Osipov.\no            Fix broken Javadoc links to commons-text #712. Thanks to Chris Smowton.\no            Add and use ThreadUtils.sleep(Duration). Thanks to Gary Gregory.\no            Add and use ThreadUtils.join(Thread, Duration). Thanks to Gary Gregory.\no            Add ObjectUtils.wait(Duration). Thanks to Gary Gregory.\n\nChanges:\no LANG-1596: ArrayUtils.toPrimitive(Object) does not support boolean and other types #607. Thanks to Richard Eckart de Castilho.\no            Enable Dependabot #587. Thanks to Gary Gregory.\no            Bump junit-jupiter from 5.6.2 to 5.7.0.\no            Bump spotbugs from 4.1.2 to 4.2.1, #627, #671, #708. Thanks to chtompki, Dependabot.\no            Bump spotbugs-maven-plugin from 4.0.0 to 4.2.0, #593, #596, #609, #623, #632, #692. Thanks to Dependabot.\no            Bump biz.aQute.bndlib from 5.1.1 to 5.3.0 #592, #628, #715. Thanks to Dependabot.\no            Bump junit-pioneer from 0.6.0 to 1.1.0, #589, #597, #600, #624, #625, #662. Thanks to Dependabot.\no            Bump checkstyle from 8.34 to 8.40, #594, #614, #637, #665, #706. Thanks to Dependabot.\no            Bump actions/checkout from v2.3.1 to v2.3.4 #601, #639. Thanks to Dependabot.\no            Bump actions/setup-java from v1.4.0 to v1.4.2 #612. Thanks to Dependabot.\no            Update commons.jacoco.version 0.8.5 to 0.8.6 (Fixes Java 15 builds). Thanks to Gary Gregory.\no            Update maven-surefire-plugin 2.22.2 -> 3.0.0-M5. Thanks to Gary Gregory.\no            Bump maven-pmd-plugin from 3.13.0 to 3.14.0 #660. Thanks to Dependabot.\no            Bump jmh.version from 1.21 to 1.27 #674. Thanks to Dependabot.\no            Update commons.japicmp.version 0.14.3 -> 0.15.2. Thanks to Gary Gregory.\no            Processor.java: check enum equality with == instead of .equals() method #690. Thanks to Ali K. Nouri.\no            Bump junit-pioneer from 1.1.0 to 1.3.0 #702. Thanks to Dependabot.\no            Bump maven-checkstyle-plugin from 3.1.1 to 3.1.2 #705. Thanks to Dependabot.\no            Bump actions/cache from v2 to v2.1.4 #710. Thanks to Dependabot.\no            Bump junit-bom from 5.7.0 to 5.7.1 #707. Thanks to Dependabot.\no            Minor Improvements #701. Thanks to Arturo Bernal.\no            Minor Improvement: Add final variable.try to make the code read-only #700. Thanks to Arturo Bernal.\no            Minor Improvement: Remove redundant initializer #699. Thanks to Arturo Bernal.\no            Use own validator ObjectUtils.anyNull to check null String input #718. Thanks to Arturo Bernal.\n\n\nHistorical list of changes: https://commons.apache.org/proper/commons-lang/changes-report.html\n\nFor complete information on Apache Commons Lang, including instructions on how to submit bug reports,\npatches, or suggestions for improvement, see the Apache Commons Lang website:\n\nhttps://commons.apache.org/proper/commons-lang/\n\nDownload page: https://commons.apache.org/proper/commons-lang/download_lang.cgi\n\nHave fun!\n-Apache Commons Team\n\n=============================================================================\n\n                        Apache Commons Lang\n                        Version 3.11\n                        Release Notes\n\n\nINTRODUCTION:\n\nThis document contains the release notes for the 3.11 version of Apache Commons Lang.\nCommons Lang is a set of utility functions and reusable components that should be of use in any \nJava environment.\n\nLang 3.9 and onwards now targets Java 8, making use of features that arrived with Java 8.\n\nFor the advice on upgrading from 2.x to 3.x, see the following page: \n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nNew features and bug fixes.\n\nChanges in this version include:\n\nNew features:\no            Add ArrayUtils.isSameLength() to compare more array types #430. Thanks to XenoAmess, Gary Gregory.\no            Added the Locks class as a convenient possibility to deal with locked objects.\no LANG-1568: Add to Functions: FailableBooleanSupplier, FailableIntSupplier, FailableLongSupplier, FailableDoubleSupplier, and so on.\no LANG-1569: Add ArrayUtils.get(T[], index, T) to provide an out-of-bounds default value.\no LANG-1570: Add JavaVersion enum constants for Java 14 and 15. #553. Thanks to Edgar Asatryan.\no            Add JavaVersion enum constants for Java 16. Thanks to Gary Gregory.\no LANG-1556: Use Java 8 lambdas and Map operations. Thanks to XenoAmess.\no LANG-1565: Change removeLastFieldSeparator to use endsWith #550. Thanks to XenoAmess.\no LANG-1557: Change a Pattern to a static final field, for not letting it compile each time the function invoked. #542. Thanks to XenoAmess, Gary Gregory.\no            Add ImmutablePair factory methods left() and right().\no            Add ObjectUtils.toString(Object, Supplier<String>).\no            Add org.apache.commons.lang3.StringUtils.substringAfter(String, int).\no            Add org.apache.commons.lang3.StringUtils.substringAfterLast(String, int).\n\nFixed Bugs:\no            Fix Javadoc for StringUtils.appendIfMissingIgnoreCase() #507. Thanks to contextshuffling.\no LANG-1560: Refine Javadoc #545. Thanks to XenoAmess.\no LANG-1554: Fix typos #539. Thanks to XenoAmess.\no LANG-1555: Ignored exception `ignored`, should not be called so #540. Thanks to XenoAmess.\no LANG-1528: StringUtils.replaceEachRepeatedly gives IllegalStateException #505. Thanks to Edwin Delgado H.\no LANG-1543: [JSON string for maps] ToStringBuilder.reflectionToString doesnt render nested maps correctly. Thanks to Swaraj Pal, Wander Costa, Gary Gregory.\no            Correct Javadocs of methods that use Validate.notNull() and replace some uses of Validate.isTrue() with Validate.notNull(). #525. Thanks to Isira Seneviratne.\no LANG-1539: Add allNull() and anyNull() methods to ObjectUtils. #522. Thanks to Isira Seneviratne.\n\nChanges:\no            Refine test output for FastDateParserTest Thanks to Jin Xu.\no LANG-1549: CharSequenceUtils.lastIndexOf : remake it Thanks to Jin Xu.\no            remove encoding and docEncoding and use inherited values from commons-parent Thanks to XenoAmess.\no            Simplify null checks in Pair.hashCode() using Objects.hashCode(). #517. Thanks to Isira Seneviratne, Bruno P. Kinoshita.\no            Simplify null checks in Triple.hashCode() using Objects.hashCode(). #516. Thanks to Isira Seneviratne, Bruno P. Kinoshita.\no            Simplify some if statements in StringUtils. #521. Thanks to Isira Seneviratne, Bruno P. Kinoshita.\no LANG-1537: Simplify a null check in the private replaceEach() method of StringUtils. #514. Thanks to Isira Seneviratne, Bruno P. Kinoshita.\no LANG-1534: Replace some usages of the ternary operator with calls to Math.max() and Math.min() #512. Thanks to Isira Seneviratne, Bruno P. Kinoshita.\no            (Javadoc) Fix return tag for throwableOf*() methods #518. Thanks to Arend v. Reinersdorff, Bruno P. Kinoshita.\no LANG-1545: CharSequenceUtils.regionMatches is wrong dealing with Georgian. Thanks to XenoAmess, Gary Gregory.\no LANG-1550: Optimize ArrayUtils::isArrayIndexValid method. #551. Thanks to Edgar Asatryan.\no LANG-1561: Use List.sort instead of Collection.sort #546. Thanks to XenoAmess.\no LANG-1563: Use StandardCharsets.UTF_8 #548. Thanks to XenoAmess.\no LANG-1564: Use Collections.singletonList insteadof Arrays.asList when there be only one element. #549. Thanks to XenoAmess.\no LANG-1553: Change array style from `int a[]` to `int[] a` #537. Thanks to XenoAmess.\no LANG-1552: Change from addAll to constructors for some List #536. Thanks to XenoAmess.\no LANG-1558: Simplify if as some conditions are covered by others #543. Thanks to XenoAmess.\no LANG-1567: Fixed Javadocs for setTestRecursive() #556. Thanks to Miguel Muñoz, Bruno P. Kinoshita, Gary Gregory.\no LANG-1542: ToStringBuilder.reflectionToString - Wrong JSON format when object has a List of Enum. Thanks to Tr?n Ng?c Khoa, Gary Gregory.\no            Make org.apache.commons.lang3.CharSequenceUtils.toCharArray(CharSequence) public.\no            org.apache.commons:commons-parent 50 -> 51.\no            org.junit-pioneer:junit-pioneer 0.5.4 -> 0.6.0.\no            org.junit.jupiter:junit-jupiter 5.6.0 -> 5.6.2.\no            com.github.spotbugs:spotbugs 4.0.0 -> 4.0.6.\no            com.puppycrawl.tools:checkstyle 8.29 -> 8.34.\no            commons.surefire.version 3.0.0-M4 -> 3.0.0-M5..\n\n\nHistorical list of changes: https://commons.apache.org/proper/commons-lang/changes-report.html\n\nFor complete information on Apache Commons Lang, including instructions on how to submit bug reports,\npatches, or suggestions for improvement, see the Apache Commons Lang website:\n\nhttps://commons.apache.org/proper/commons-lang/\n\nDownload page: https://commons.apache.org/proper/commons-lang/download_csv.cgi\n\nHave fun!\n-Apache Commons Team\n\n=============================================================================\n\n                        Apache Commons Lang\n                        Version 3.10\n                        Release Notes\n\n\nINTRODUCTION:\n\nThis document contains the release notes for the 3.10 version of Apache Commons Lang.\nCommons Lang is a set of utility functions and reusable components that should be of use in any \nJava environment.\n\nLang 3.9 and onwards now targets Java 8, making use of features that arrived with Java 8.\n\nFor the advice on upgrading from 2.x to 3.x, see the following page: \n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nNew features and bug fixes. Requires Java 8, supports Java 9, 10, 11.\n\nChanges in this version include:\n\nNew features:\no LANG-1457: Add ExceptionUtils.throwableOfType(Throwable, Class) and friends.\no LANG-1458: Add EMPTY_ARRAY constants to classes in org.apache.commons.lang3.tuple.\no LANG-1461: Add null-safe StringUtils APIs to wrap String#getBytes([Charset|String]).\no LANG-1467: Add zero arg constructor for org.apache.commons.lang3.NotImplementedException.\no LANG-1470: Add ArrayUtils.addFirst() methods.\no LANG-1479: Add Range.fit(T) to fit a value into a range.\no LANG-1477: Added Functions.as*, and tests thereof, as suggested by Peter Verhas\no LANG-1485: Add getters for lhs and rhs objects in DiffResult #451. Thanks to nicolasbd.\no LANG-1486: Generify builder classes Diffable, DiffBuilder, and DiffResult #452. Thanks to Gary Gregory.\no LANG-1487: Add ClassLoaderUtils with toString() implementations #453. Thanks to Gary Gregory.\no LANG-1489: Add null-safe APIs as StringUtils.toRootLowerCase(String) and StringUtils.toRootUpperCase(String) #456. Thanks to Gary Gregory.\no LANG-1494: Add org.apache.commons.lang3.time.Calendars. Thanks to Gary Gregory.\no LANG-1495: Add EnumUtils getEnum() methods with default values #475. Thanks to Cheong Voon Leong.\no LANG-1177: Added indexesOf methods and simplified removeAllOccurences #471. Thanks to Liel Fridman.\no LANG-1498: Add support of lambda value evaluation for defaulting methods #416. Thanks to Lysergid, Gary Gregory.\no LANG-1503: Add factory methods to Pair classes with Map.Entry input. #454. Thanks to XenoAmess, Gary Gregory.\no LANG-1505: Add StopWatch convenience APIs to format times and create a simple instance. Thanks to Gary Gregory.\no LANG-1506: Allow a StopWatch to carry an optional message. Thanks to Gary Gregory.\no LANG-1507: Add ComparableUtils #398. Thanks to Sam Kruglov, Mark Dacek, Marc Magon, Pascal Schumacher, Rob Tompkins, Bruno P. Kinoshita, Amey Jadiye, Gary Gregory.\no LANG-1508: Add org.apache.commons.lang3.SystemUtils.getUserName(). Thanks to Gary Gregory.\no LANG-1509: Add ObjectToStringComparator. #483. Thanks to Gary Gregory.\no LANG-1510: Add org.apache.commons.lang3.arch.Processor.Arch.getLabel(). Thanks to Gary Gregory.\no LANG-1512: Add IS_JAVA_14 and IS_JAVA_15 to org.apache.commons.lang3.SystemUtils. Thanks to Gary Gregory.\no LANG-1513: ObjectUtils: Get first non-null supplier value. Thanks to Bernhard Bonigl, Gary Gregory.\no            Added the Streams class, and Functions.stream() as an accessor thereof.\n\nFixed Bugs:\no LANG-1514: Make test more stable by wrapping assertions in hashset. Thanks to contextshuffling.\no LANG-1450: Generate Javadoc jar on build.\no LANG-1460: Trivial: year of release for 3.9 says 2018, should be 2019 Thanks to Larry West.\no LANG-1476: Use synchronize on a set created with Collections.synchronizedSet before iterating Thanks to emopers.\no LANG-1475: StringUtils.unwrap incorrect throw StringIndexOutOfBoundsException. Thanks to stzx.\no LANG-1406: StringIndexOutOfBoundsException in StringUtils.replaceIgnoreCase #423. Thanks to geratorres.\no LANG-1453: StringUtils.removeIgnoreCase(\"?a\", \"a\") throws IndexOutOfBoundsException #423. Thanks to geratorres.\no LANG-1426: Corrected usage examples in Javadocs #458. Thanks to Brower, Mikko Maunu, Suraj Gautam.\no LANG-1463: StringUtils abbreviate returns String of length greater than maxWidth #477. Thanks to bbeckercscc, Gary Gregory.\no LANG-1500: Test may fail due to a different order of fields returned by reflection api #480. Thanks to contextshuffling.\no LANG-1501: Sort fields in ReflectionToStringBuilder for deterministic order #481. Thanks to contextshuffling.\no LANG-1433: MethodUtils will throw a NPE if invokeMethod() is called for a var-args method #407. Thanks to Christian Franzen.\no LANG-1518: MethodUtils.getAnnotation() with searchSupers = true does not work if super is generic #494. Thanks to Michele Preti, Bruno P. Kinoshita, Gary Gregory.\n\nChanges:\no LANG-1437: Remove redundant if statements in join methods #411. Thanks to Andrei Troie.\no            commons.japicmp.version 0.13.1 -> 0.14.1.\no            junit-jupiter 5.5.0 -> 5.5.1.\no            junit-jupiter 5.5.1 -> 5.5.2.\no            Improve Javadoc based on the discussion of the GitHub PR #459. Thanks to Jonathan Leitschuh, Bruno P. Kinoshita, Rob Tompkins, Gary Gregory.\no            maven-checkstyle-plugin 3.0.0 -> 3.1.0.\no LANG-696:  Update documentation related to the issue LANG-696 #449. Thanks to Peter Verhas.\no            AnnotationUtils little cleanup #467. Thanks to Peter Verhas.\no            Update test dependency: org.easymock:easymock 4.0.2 -> 4.1. Thanks to Gary Gregory.\no            Update test dependency: org.hamcrest:hamcrest 2.1 -> 2.2. Thanks to Gary Gregory.\no            Update test dependency: org.junit-pioneer:junit-pioneer 0.3.0 -> 0.4.2. Thanks to Gary Gregory.\no            Update build dependency: com.puppycrawl.tools:checkstyle 8.18 -> 8.27. Thanks to Gary Gregory.\no            Update POM parent: org.apache.commons:commons-parent 48 -> 50. Thanks to Gary Gregory.\no            BooleanUtils Javadoc #469. Thanks to Peter Verhas.\no            Functions Javadoc #466. Thanks to Peter Verhas.\no            org.easymock:easymock 4.1 -> 4.2. Thanks to Gary Gregory.\no            org.junit-pioneer:junit-pioneer 0.4.2 -> 0.5.4. Thanks to Gary Gregory.\no            org.junit.jupiter:junit-jupiter 5.5.2 -> 5.6.0. Thanks to Gary Gregory.\no            Use Javadoc {@code} instead of pre tags. #490. Thanks to Peter Verhas.\no            ExceptionUtilsTest to 100% #486. Thanks to Peter Verhas.\no            Reuse own code in Functions.java #493. Thanks to Peter Verhas.\no LANG-1523: Avoid unnecessary allocation in StringUtils.wrapIfMissing. #496. Thanks to Edgar Asatryan, Bruno P. Kinoshita, Gary Gregory.\no LANG-1525: Internally use Validate.notNull(foo, ...) instead of Validate.isTrue(foo != null, ...). Thanks to Edgar Asatryan, Bruno P. Kinoshita, Gary Gregory.\no LANG-1526: Add 1 and 0 in toBooleanObject(final String str) #502. Thanks to Dominik Schramm.\no LANG-1527: Remove an redundant argument check in NumberUtils #504. Thanks to Pengyu Nie.\no LANG-1529: Deprecate org.apache.commons.lang3.ArrayUtils.removeAllOccurences(*) for org.apache.commons.lang3.ArrayUtils.removeAllOccurrences(*). Thanks to Gary Gregory, BillCindy, Bruno P. Kinoshita.\n\n\nHistorical list of changes: https://commons.apache.org/proper/commons-lang/changes-report.html\n\nFor complete information on Apache Commons Lang, including instructions on how to submit bug reports,\npatches, or suggestions for improvement, see the Apache Commons Lang website:\n\nhttps://commons.apache.org/proper/commons-lang/\n\nDownload page: https://commons.apache.org/proper/commons-lang/download_lang.cgi\n\n=============================================================================\n\n                        Apache Commons Lang\n                            Version 3.9\n                           Release Notes\n\n\nINTRODUCTION:\n\nThis document contains the release notes for the 3.9 version of Apache Commons Lang.\nCommons Lang is a set of utility functions and reusable components that should be of use in any \nJava environment.\n\nLang 3.9 and onwards now targets Java 8, making use of features that arrived with Java 8.\n\nFor the advice on upgrading from 2.x to 3.x, see the following page: \n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nNew features and bug fixes. Requires Java 8, supports Java 9, 10, 11\n\nChanges in this version include:\n\nNew features:\no LANG-1442: Javadoc pointing to Commons RNG.\no            Adding the Functions class.\no LANG-1411: Add isEmpty method to ObjectUtils Thanks to Alexander Tsvetkov.\no LANG-1422: Add null-safe StringUtils.valueOf(char[]) to delegate to String.valueOf(char[])\no LANG-1427: Add API org.apache.commons.lang3.SystemUtils.isJavaVersionAtMost(JavaVersion)\n\n\nChanges:\no LANG-1416: Add more SystemUtils.IS_JAVA_XX variants.\no LANG-1416: Update to JUnit 5\no LANG-1417: Add @FunctionalInterface to ThreadPredicate and ThreadGroupPredicate\no LANG-1415: Update Java Language requirement to 1.8\no LANG-1436: Consolidate the StringUtils equals and equalsIgnoreCase Javadoc and implementation\no            (doc) Fix javadoc for 'startIndex' parameter of StringUtils.join() methods. GitHub PR #412. Thanks to Andrei Troie aft90.\n\n\nHistorical list of changes: https://commons.apache.org/proper/commons-lang/changes-report.html\n\nFor complete information on Apache Commons Lang, including instructions on how to submit bug reports,\npatches, or suggestions for improvement, see the Apache Commons Lang website:\n\nhttps://commons.apache.org/proper/commons-lang/\n\n=============================================================================\n\n                        Apache Commons Lang\n                            Version 3.8.1\n                           Release Notes\n\n\nINTRODUCTION:\n\nThis document contains the release notes for the 3.8.1 version of Apache Commons Lang.\nCommons Lang is a set of utility functions and reusable components that should be of use in any\nJava environment.\n\nLang 3.0 and onwards now targets Java 7.0, making use of features that arrived with Java 7.0.\n\nFor the advice on upgrading from 2.x to 3.x, see the following page:\n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nThis release is a bugfix for Restoring Bundle-SymbolicName in the MANIFEST.mf file.\n\nChanges in this version include:\n\n\nFixed Bugs:\no LANG-1419: Restore BundleSymbolicName for OSGi\n\n=============================================================================\n\n                        Apache Commons Lang\n                            Version 3.8\n                           Release Notes\n\n\nINTRODUCTION:\n\nThis document contains the release notes for the 3.8 version of Apache Commons Lang.\nCommons Lang is a set of utility functions and reusable components that should be of use in any\nJava environment.\n\nLang 3.0 and onwards now targets Java 7.0, making use of features that arrived with Java 7.0.\n\nFor the advice on upgrading from 2.x to 3.x, see the following page:\n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nNew features and bug fixes. Requires Java 7, supports Java 8, 9, 10.\n\nChanges in this version include:\n\nNew features:\no LANG-1352: EnumUtils.getEnumIgnoreCase and isValidEnumIgnoreCase methods added Thanks to Ruslan Sibgatullin.\no LANG-1372: Add ToStringSummary annotation Thanks to Sérgio Ozaki.\no LANG-1356: Add bypass option for classes to recursive and reflective EqualsBuilder Thanks to Yathos UG.\no LANG-1391: Improve Javadoc for StringUtils.isAnyEmpty(null) Thanks to Sauro Matulli, Oleg Chubaryov.\no LANG-1393: Add API SystemUtils.String getEnvironmentVariable(final String name, final String defaultValue) Thanks to Gary Gregory.\no LANG-1394: org.apache.commons.lang3.SystemUtils should not write to System.err. Thanks to Sebb, Gary Gregory.\no LANG-1238: Add RegexUtils class instead of overloading methods in StringUtils that take a regex to take precompiled Pattern. Thanks to Christopher Cordeiro, Gary Gregory, Bruno P. Kinoshita, Oleg Chubaryov.\no LANG-1390: StringUtils.join() with support for List<?> with configurable start/end indices. Thanks to Jochen Schalanda.\no LANG-1392: Methods for getting first non empty or non blank value Thanks to Jeff Nelson.\no LANG-1408: Rounding utilities for converting to BigDecimal\n\nFixed Bugs:\no LANG-1380: FastDateParser too strict on abbreviated short month symbols Thanks to Markus Jelsma.\no LANG-1396: JsonToStringStyle does not escape string names\no LANG-1395: JsonToStringStyle does not escape double quote in a string value Thanks to Jim Gan.\no LANG-1384: New Java version (\"11\") must be handled Thanks to Ian Young.\no LANG-1364: ExceptionUtils#getRootCause(Throwable t) should return t if no lower level cause exists Thanks to Zheng Xie.\no LANG-1060: NumberUtils.isNumber assumes number starting with Zero Thanks to Piotr Kosmala.\no LANG-1375: defaultString(final String str) in StringUtils to reuse defaultString(final String str, final String defaultStr) Thanks to Jerry Zhao.\no LANG-1374: Parsing Json Array failed Thanks to Jaswanth Bala.\no LANG-1371: Fix TypeUtils#parameterize to work correctly with narrower-typed array Thanks to Dmitry Ovchinnikov.\no LANG-1370: Fix EventCountCircuitBreaker increment batch Thanks to Andre Dieb.\no LANG-1385: NumberUtils.createNumber() throws StringIndexOutOfBoundsException instead of NumberFormatException Thanks to Rohan Padhye.\no LANG-1397: WordUtils.wrap throws StringIndexOutOfBoundsException when wrapLength is Integer.MAX_VALUE. Thanks to Takanobu Asanuma.\no LANG-1401: Typo in JavaDoc for lastIndexOf Thanks to Roman Golyshev, Alex Mamedov.\n\nChanges:\no LANG-1367: ObjectUtils.identityToString(Object) and friends should allocate builders and buffers with a size Thanks to Gary Gregory.\no LANG-1405: Remove checks for java versions below the minimum supported one Thanks to Lars Grefer.\no LANG-1402: Null/index safe get methods for ArrayUtils Thanks to Mark Dacek.\n\n=============================================================================\n\n                        Apache Commons Lang\n                            Version 3.7\n                           Release Notes\n\n\nINTRODUCTION:\n\nThis document contains the release notes for the 3.7 version of Apache Commons Lang.\nCommons Lang is a set of utility functions and reusable components that should be of use in any\nJava environment.\n\nLang 3.0 and onwards now targets Java 5.0, making use of features that arrived with Java 5.0 such as generics,\nvariable arguments, autoboxing, concurrency and formatted output.\n\nFor the advice on upgrading from 2.x to 3.x, see the following page:\n\n    https://commons.apache.org/lang/article3_0.html\n\nApache Commons Lang, a package of Java utility classes for the\nclasses that are in java.lang's hierarchy, or are considered to be so\nstandard as to justify existence in java.lang.\n\nNew features and bug fixes. Requires Java 7, supports Java 8, 9, 10.\n\nChanges in this version include:\n\nNew features:\no LANG-1355: TimeZone.getTimeZone() in FastDateParser causes resource contention (PR #296.) Thanks to Chas Honton.\no LANG-1360: Add methods to ObjectUtils to get various forms of class names in a null-safe manner Thanks to Gary Gregory.\n\nFixed Bugs:\no LANG-1362: Fix tests DateUtilsTest for Java 9 with en_GB locale Thanks to Stephen Colebourne.\no LANG-1365: Fix NullPointerException in isJavaVersionAtLeast on Java 10, add SystemUtils.IS_JAVA_10, add JavaVersion.JAVA_10 Thanks to Gary Gregory.\no LANG-1348: StackOverflowError on TypeUtils.toString(...) for a generic return type of Enum.valueOf Thanks to mbusso.\no LANG-1350: ConstructorUtils.invokeConstructor(Class, Object...) regression Thanks to Brett Kail.\no LANG-1349: EqualsBuilder#isRegistered: swappedPair construction bug Thanks to Naman Nigam.\no LANG-1357: org.apache.commons.lang3.time.FastDateParser should use toUpperCase(Locale) Thanks to BruceKuiLiu.\n\nChanges:\no LANG-1358: Improve StringUtils#replace throughput Thanks to Stephane Landelle.\no LANG-1346: Remove deprecation from RandomStringUtils\no LANG-1361: ExceptionUtils.getThrowableList() is using deprecated ExceptionUtils.getCause() Thanks to Ana.\n\n\n=============================================================================\n\n                           Apache Commons Lang\n                               Version 3.6\n                              Release Notes\n\n\nINTRODUCTION:\n\nThis document contains the release notes for the 3.6 version of\nApache Commons Lang as well as a history all changes in the Commons Lang 3.x\nrelease line. Commons Lang is a set of utility functions and reusable\ncomponents that should be of use in any Java environment. Commons Lang 3.6 at\nleast requires Java 7.0. Note that this has changed from Commons Lang 3.5, which\nonly required Java 1.6.\n\nFor the advice on upgrading from 2.x to 3.x, see the following page:\n\n    https://commons.apache.org/lang/article3_0.html\n\nHIGHLIGHTS\n==========\n\nSome of the highlights in this release include:\n\no The class org.apache.commons.lang3.concurrent.Memoizer is an implementation\n    of the Memoizer pattern as shown in\n    Goetz, Brian et al. (2006) - Java Concurrency in Practice, p. 108.\no The class org.apache.commons.lang3.ArchUtils has been added. ArchUtils is\n    a utility class for the \"os.arch\" system property.\n\nDEPRECATIONS\n============\n\nThe Apache Commons Community has recently set up the Commons Text component\nas a home for algorithms working on strings. For this reason most of the string\nfocused functionality in Commons Lang has been deprecated and moved to\nCommons Text. This includes:\n\no All classes in the org.apache.commons.lang3.text and the\n    org.apache.commons.lang3.text.translate packages\no org.apache.commons.lang3.StringEscapeUtils\no org.apache.commons.lang3.RandomStringUtils\no The methods org.apache.commons.lang3.StringUtils.getJaroWinklerDistance and\n    org.apache.commons.lang3.StringUtils.getLevenshteinDistance\n\nFor more information see the Commons Text website:\n\n    https://commons.apache.org/text\n\nThe class org.apache.commons.lang3.CharEncoding has been deprecated in favor of\njava.nio.charset.StandardCharsets.\n\nThe following methods have been deprecated in\norg.apache.commons.lang3.ArrayUtils in favor of the corresponding insert\nmethods. Note that the handling for null inputs differs between add and insert.\n\no add(boolean[], int, boolean) -> insert(int, boolean[], boolean...)\no add(byte[], int, boolean)    -> insert(int, byte[], byte...)\no add(char[], int, boolean)    -> insert(int, char[], char...)\no add(double[], int, boolean)  -> insert(int, double[], double...)\no add(float[], int, boolean)   -> insert(int, float[], float...)\no add(int[], int, boolean)     -> insert(int, int[], int...)\no add(long[], int, boolean)    -> insert(int, long[], long...)\no add(short[], int, boolean)   -> insert(int, short[], short...)\no add(T[], int, boolean)       -> insert(int, T[], T...)\n\n\nCOMPATIBILITY WITH JAVA 9\n==================\n\nThe MANIFEST.MF now contains an additional entry:\n\n  Automatic-Module-Name: org.apache.commons.lang3\n\nThis should make it possible to use Commons Lang 3.6 as a module in the Java 9\nmodule system. For more information see the corresponding issue and the\nreferenced mailing list discussions:\n\n    https://issues.apache.org/jira/browse/LANG-1338\n\nThe build problems present in the 3.5 release have been resolved. Building\nCommons Lang 3.6 should work out of the box with the latest Java 9 EA build.\nPlease report any Java 9 related issues at:\n\n    https://issues.apache.org/jira/browse/LANG\n\nNEW FEATURES\n============\n\no LANG-1336: Add NUL Byte To CharUtils. Thanks to Beluga Behr.\no LANG-1304: Add method in StringUtils to determine if string contains both\n             mixed cased characters. Thanks to Andy Klimczak.\no LANG-1325: Increase test coverage of ToStringBuilder class to 100%.\n             Thanks to Arshad Basha.\no LANG-1307: Add a method in StringUtils to extract only digits out of input\n             string. Thanks to Arshad Basha.\no LANG-1256: Add JMH maven dependencies. Thanks to C0rWin.\no LANG-1167: Add null filter to ReflectionToStringBuilder.\n             Thanks to Mark Dacek.\no LANG-1299: Add method for converting string to an array of code points.\no LANG-660:  Add methods to insert arrays into arrays at an index.\no LANG-1034: Add support for recursive comparison to\n             EqualsBuilder#reflectionEquals. Thanks to Yathos UG.\no LANG-1067: Add a reflection-based variant of DiffBuilder.\no LANG-740:  Implementation of a Memoizer. Thanks to James Sawle.\no LANG-1258: Add ArrayUtils#toStringArray method.\n             Thanks to IG, Grzegorz Ro?niecki.\no LANG-1160: StringUtils#abbreviate should support 'custom ellipses' parameter.\no LANG-1293: Add StringUtils#isAllEmpty and #isAllBlank methods.\n             Thanks to Pierre Templier, Martin Tarjanyi.\no LANG-1313: Add ArchUtils - An utility class for the \"os.arch\" system property.\n             Thanks to Tomschi.\no LANG-1272: Add shuffle methods to ArrayUtils.\no LANG-1317: Add MethodUtils#findAnnotation and extend\n             MethodUtils#getMethodsWithAnnotation for non-public, super-class\n             and interface methods. Thanks to Yasser Zamani.\no LANG-1331: Add ImmutablePair.nullPair().\no LANG-1332: Add ImmutableTriple.nullTriple().\n\nFIXED BUGS\n==========\n\no LANG-1337: Fix test failures in IBM JDK 8 for ToStringBuilderTest.\no LANG-1319: MultilineRecursiveToStringStyle StackOverflowError when object is\n             an array.\no LANG-1320: LocaleUtils#toLocale does not support language followed by UN M.49\n             numeric-3 area code followed by variant.\no LANG-1300: Clarify or improve behavior of int-based indexOf methods in\n             StringUtils. Thanks to Mark Dacek.\no LANG-1286: RandomStringUtils random method can overflow and return characters\n             outside of specified range.\no LANG-1292: WordUtils.wrap throws StringIndexOutOfBoundsException.\no LANG-1287: RandomStringUtils#random can enter infinite loop if end parameter\n             is to small. Thanks to Ivan Morozov.\no LANG-1285: NullPointerException in FastDateParser$TimeZoneStrategy.\n             Thanks to Francesco Chicchiriccò.\no LANG-1281: Javadoc of StringUtils.ordinalIndexOf is contradictory.\n             Thanks to Andreas Lundblad.\no LANG-1188: StringUtils#join(T...): warning: [unchecked] Possible heap\n             pollution from parameterized vararg type T.\no LANG-1144: Multiple calls of\n             org.apache.commons.lang3.concurrent.LazyInitializer.initialize()\n             are possible. Thanks to Waldemar Maier, Gary Gregory.\no LANG-1276: StrBuilder#replaceAll ArrayIndexOutOfBoundsException.\n             Thanks to Andy Klimczak.\no LANG-1278: BooleanUtils javadoc issues. Thanks to Duke Yin.\no LANG-1070: ArrayUtils#add confusing example in javadoc.\n             Thanks to Paul Pogonyshev.\no LANG-1271: StringUtils#isAnyEmpty and #isAnyBlank should return false for an\n             empty array. Thanks to Pierre Templier.\no LANG-1155: Add StringUtils#unwrap. Thanks to Saif Asif, Thiago Andrade.\no LANG-1311: TypeUtils.toString() doesn't handle primitive and Object arrays\n             correctly. Thanks to Aaron Digulla.\no LANG-1312: LocaleUtils#toLocale does not support language followed by UN M.49\n             numeric-3 area code.\no LANG-1265: Build failures when building with Java 9 EA.\no LANG-1314: javadoc creation broken with Java 8. Thanks to Allon Murienik.\no LANG-1310: MethodUtils.invokeMethod throws ArrayStoreException if using\n             varargs arguments and smaller types than the method defines.\n             Thanks to Don Jeba.\n\nCHANGES\n=======\n\no LANG-1338: Add Automatic-Module-Name MANIFEST entry for Java 9\n             compatibility.\no LANG-1334: Deprecate CharEncoding in favour of\n             java.nio.charset.StandardCharsets.\no LANG-1110: Implement HashSetvBitSetTest using JMH.\n             Thanks to Bruno P. Kinoshita.\no LANG-1290: Increase test coverage of org.apache.commons.lang3.ArrayUtils.\n             Thanks to Andrii Abramov.\no LANG-1274: StrSubstitutor should state its thread safety.\no LANG-1277: StringUtils#getLevenshteinDistance reduce memory consumption.\n             Thanks to yufcuy.\no LANG-1279: Update Java requirement from Java 6 to 7.\no LANG-1143: StringUtils should use toXxxxCase(int) rather than\n             toXxxxCase(char). Thanks to sebb.\no LANG-1297: Add SystemUtils.getHostName() API.\no LANG-1301: Moving apache-rat-plugin configuration into pluginManagement.\n             Thanks to Karl Heinz Marbaise.\no LANG-1316: Deprecate classes/methods moved to commons-text.\n\n=============================================================================\n\n                        Release Notes for version 3.5\n\n\nHIGHLIGHTS\n==========\n\nSome of the highlights in this release include:\n\no Added Java 9 detection to org.apache.commons.lang3.SystemUtils.\no Support for shifting and swapping elements in\n    org.apache.commons.lang3.ArrayUtils.\no New methods for generating random strings from different character classes\n    including alphabetic, alpha-numeric and ASCII added to\n    org.apache.commons.lang3.RandomStringUtils.\no Numerous extensions to org.apache.commons.lang3.StringUtils including\n    null safe compare variants, more remove and replace variants, rotation and\n    truncation.\no Added org.apache.commons.lang3.ThreadUtils - a utility class to work with\n    instances of java.lang.Thread and java.lang.ThreadGroup.\no Added annotations @EqualsExclude, @HashCodeExclude and @ToStringExclude to\n    mark fields which should be ignored by the reflective builders in the\n    org.apache.commons.lang3.builder package.\no Support for various modify and retrieve value use cases added to the classes\n    in org.apache.commons.lang3.mutable.\n\nCOMPATIBILITY\n=============\n\nApache Commons Lang 3.5 is binary compatible with the 3.4 release. Users\nshould not experience any problems when upgrading from 3.4 to 3.5.\n\nThere has been an addition to the org.apache.commons.lang3.time.DatePrinter\ninterface:\n\no Added method 'public boolean parse(java.lang.String, java.text.ParsePosition,\n    java.util.Calendar)'\no Added method 'public java.lang.Appendable format(long, java.lang.Appendable)'\no Added method 'public java.lang.Appendable format(java.util.Date,\n    java.lang.Appendable)'\no Added method 'public java.lang.Appendable format(java.util.Calendar,\n    java.lang.Appendable)'\n\nFor this reason 3.5 is not strictly source compatible to 3.4. Since the\nDatePrinter interface is not meant to be implemented by clients, this\nchange it not considered to cause any problems.\n\nJAVA 9 SUPPORT\n==============\n\nJava 9 introduces a new version-string scheme. Details of this new scheme are\ndocumented in JEP-223 (https://openjdk.org/jeps/223). In order to support\nJEP-223 two classes had to be changed:\n\no org.apache.commons.lang3.JavaVersion\n    deprecated enum constant JAVA_1_9\n    introduced enum constant JAVA_9\n\no org.apache.commons.lang3.SystemUtils\n    deprecated constant IS_JAVA_1_9\n    introduced constant IS_JAVA_9\n\nFor more information see LANG-1197\n(https://issues.apache.org/jira/browse/LANG-1197). All other APIs are expected\nto work with Java 9.\n\nBUILDING ON JAVA 9\n==================\n\nJava 8 introduced the Unicode Consortium's Common Locale Data Repository as\nalternative source for locale data. Java 9 will use the CLDR provider as\ndefault provider for locale data (see https://openjdk.org/jeps/252). This\ncauses an number of locale-sensitive test in Commons Lang to fail. In order\nto build Commons Lang 3.5 on Java 9, the locale provider has to be set to\n'JRE':\n\n    mvn -Djava.locale.providers=JRE clean install\n\nWe are currently investigating ways to support building on Java 9 without\nfurther configuration. For more information see:\nhttps://issues.apache.org/jira/browse/LANG-1265\n\n\nNEW FEATURES\n==============\n\no LANG-1275: Added a tryAcquire() method to TimedSemaphore.\no LANG-1255: Add DateUtils.toCalendar(Date, TimeZone). Thanks to Kaiyuan Wang.\no LANG-1023: Add WordUtils.wrap overload with customizable breakable character.\n             Thanks to Marko Bekhta.\no LANG-787:  Add method removeIgnoreCase(String, String) to StringUtils. Thanks\n             to Gokul Nanthakumar C.\no LANG-1224: Extend RandomStringUtils with methods that generate strings\n             between a min and max length. Thanks to Caleb Cushing.\no LANG-1257: Add APIs StringUtils.wrapIfMissing(String, char|String). Thanks to\n             Gary Gregory.\no LANG-1253: Add RandomUtils#nextBoolean() method. Thanks to adilek.\no LANG-1085: Add a circuit breaker implementation. Thanks to Oliver Heger and\n             Bruno P. Kinoshita.\no LANG-1013: Add StringUtils.truncate(). Thanks to Thiago Andrade.\no LANG-1195: Enhance MethodUtils to allow invocation of private methods. Thanks\n             to Derek C. Ashmore.\no LANG-1189: Add getAndIncrement/getAndDecrement/getAndAdd/incrementAndGet/\n             decrementAndGet/addAndGet in Mutable* classes. Thanks to\n             Haiyang Li and Matthew Bartenschlag.\no LANG-1225: Add RandomStringUtils#randomGraph and #randomPrint which match\n             corresponding regular expression class. Thanks to Caleb Cushing.\no LANG-1223: Add StopWatch#getTime(TimeUnit). Thanks to Nick Manley.\no LANG-781:  Add methods to ObjectUtils class to check for null elements in the\n             array. Thanks to Krzysztof Wolny.\no LANG-1228: Prefer Throwable.getCause() in ExceptionUtils.getCause().\n             Thanks to Brad Hess.\no LANG-1233: DiffBuilder add method to allow appending from a DiffResult.\n             Thanks to Nick Manley.\no LANG-1168: Add SystemUtils.IS_OS_WINDOWS_10 property.\n             Thanks to Pascal Schumacher.\no LANG-1115: Add support for varargs in ConstructorUtils, MemberUtils, and\n             MethodUtils. Thanks to Jim Lloyd and Joe Ferner.\no LANG-1134: Add methods to check numbers against NaN and infinite to\n             Validate. Thanks to Alan Smithee.\no LANG-1220: Add tests for missed branches in DateUtils.\n             Thanks to Casey Scarborough.\no LANG-1146: z/OS identification in SystemUtils.\n             Thanks to Gabor Liptak.\no LANG-1192: FastDateFormat support of the week-year component (uppercase 'Y').\n             Thanks to Dominik Stadler.\no LANG-1169: Add StringUtils methods to compare a string to multiple strings.\n             Thanks to Rafal Glowinski, Robert Parr and Arman Sharif.\no LANG-1185: Add remove by regular expression methods in StringUtils.\no LANG-1139: Add replace by regular expression methods in StringUtils.\no LANG-1171: Add compare methods in StringUtils.\no LANG-1174: Add sugar to RandomUtils. Thanks to Punkratz312.\no LANG-1154: FastDateFormat APIs that use a StringBuilder. Thanks to\n             Gary Gregory.\no LANG-1149: Ability to throw checked exceptions without declaring them. Thanks\n             to Gregory Zak.\no LANG-1153: Implement ParsePosition api for FastDateParser.\no LANG-1137: Add check for duplicate event listener in EventListenerSupport.\n             Thanks to Matthew Aguirre.\no LANG-1135: Add method containsAllWords to WordUtils. Thanks to\n             Eduardo Martins.\no LANG-1132: ReflectionToStringBuilder doesn't throw IllegalArgumentException\n             when the constructor's object param is null. Thanks to Jack Tan.\no LANG-701:  StringUtils join with var args. Thanks to James Sawle.\no LANG-1105: Add ThreadUtils - A utility class which provides helper methods\n             related to java.lang.Thread  Issue: LANG-1105. Thanks to\n             Hendrik Saly.\no LANG-1031: Add annotations to exclude fields from ReflectionEqualsBuilder,\n             ReflectionToStringBuilder and ReflectionHashCodeBuilder. Thanks\n             to Felipe Adorno.\no LANG-1127: Use JUnit rules to set and reset the default Locale and TimeZone.\no LANG-1119: Add rotate(string, int) method to StringUtils. Thanks to\n             Loic Guibert.\no LANG-1099: Add swap and shift operations for arrays to ArrayUtils. Thanks to\n             Adrian Ber.\no LANG-1050: Change nullToEmpty methods to generics. Thanks to James Sawle.\no LANG-1074: Add a method to ArrayUtils for removing all occurrences of a given\n             element  Issue: LANG-1074. Thanks to Haiyang Li.\n\nFIXED BUGS\n============\n\no LANG-1261: ArrayUtils.contains returns false for instances of subtypes.\no LANG-1252: Rename NumberUtils.isNumber, isCreatable to better reflect\n             createNumber. Also, accommodated for \"+\" symbol as prefix in\n             isCreatable and isNumber. Thanks to Rob Tompkins.\no LANG-1230: Remove unnecessary synchronization from registry lookup in\n             EqualsBuilder and HashCodeBuilder. Thanks to Philippe Marschall.\no LANG-1214: Handle \"void\" in ClassUtils.getClass(). Thanks to Henry Tung.\no LANG-1250: SerializationUtils#deserialize has unnecessary code and a comment\n             for that. Thanks to Glease Wang.\no LANG-1190: TypeUtils.isAssignable throws NullPointerException when fromType\n             has type variables and toType generic superclass specifies type\n             variable. Thanks to Pascal Schumacher.\no LANG-1226: StringUtils#normalizeSpace does not trim the string anymore.\n             Thanks to Pascal Schumacher.\no LANG-1251: SerializationUtils.ClassLoaderAwareObjectInputStream should use\n             static initializer to initialize primitiveTypes map. Thanks to\n             Takuya Ueshin.\no LANG-1248: FastDatePrinter Memory allocation regression. Thanks to\n             Benoit Wiart.\no LANG-1018: Fix precision loss on NumberUtils.createNumber(String). Thanks to\n             Nick Manley.\no LANG-1199: Fix implementation of StringUtils.getJaroWinklerDistance(). Thanks\n             to M. Steiger.\no LANG-1244: Fix dead links in StringUtils.getLevenshteinDistance() javadoc.\n             Thanks to jjbankert.\no LANG-1242: \"\\u2284\":\"?\" mapping missing from\n             EntityArrays#HTML40_EXTENDED_ESCAPE. Thanks to Neal Stewart.\no LANG-901:  StringUtils#startsWithAny/endsWithAny is case sensitive -\n             documented as case insensitive. Thanks to Matthew Bartenschlag.\no LANG-1232: DiffBuilder: Add null check on fieldName when appending Object or\n             Object[]. Thanks to Nick Manley.\no LANG-1178: ArrayUtils.removeAll(Object array, int... indices) should do the\n             clone, not its callers. Thanks to Henri Yandell.\no LANG-1120: StringUtils.stripAccents should remove accents from \"?\" and \"?\".\n             Thanks to kaching88.\no LANG-1205: NumberUtils.createNumber() behaves inconsistently with\n             NumberUtils.isNumber(). Thanks to pbrose.\no LANG-1222: Fix for incorrect comment on StringUtils.containsIgnoreCase\n             method. Thanks to Adam J.\no LANG-1221: Fix typo on appendIfMissing javadoc. Thanks to Pierre Templier.\no LANG-1202: parseDateStrictly doesn't pass specified locale. Thanks to\n             Markus Jelsma.\no LANG-1219: FastDateFormat doesn't respect summer daylight in some localized\n             strings. Thanks to Jarek.\no LANG-1175: Remove Ant-based build.\no LANG-1194: Limit max heap memory for consistent Travis CI build.\no LANG-1186: Fix NullPointerException in FastDateParser$TimeZoneStrategy.\n             Thanks to NickManley.\no LANG-1193: ordinalIndexOf(\"abc\", \"ab\", 1) gives incorrect answer of -1\n             (correct answer should be 0); revert fix for LANG-1077. Thanks to\n             Qin Li.\no LANG-1002: Several predefined ISO FastDateFormats in DateFormatUtils are\n             incorrect. Thanks to Michael Osipov.\no LANG-1152: StringIndexOutOfBoundsException or field over-write for large year\n             fields in FastDateParser. Thanks to Pas Filip.\no LANG-1141: StrLookup.systemPropertiesLookup() no longer reacts on changes on\n             system properties.\no LANG-1147: EnumUtils *BitVector issue with more than 32 values Enum. Thanks\n             to Loic Guibert.\no LANG-1059: Capitalize javadoc is incorrect. Thanks to Colin Casey.\no LANG-1122: Inconsistent behavior of swap for malformed inputs. Thanks to\n             Adrian Ber.\no LANG-1130: Fix critical issues reported by SonarQube.\no LANG-1131: StrBuilder.equals(StrBuilder) doesn't check for null inputs.\no LANG-1128: JsonToStringStyle doesn't handle chars and objects correctly.\n             Thanks to Jack Tan.\no LANG-1126: DateFormatUtilsTest.testSMTP depends on the default Locale.\no LANG-1123: Unit test FastDatePrinterTimeZonesTest needs a timezone set.\n             Thanks to Christian P. Momon.\no LANG-916:  DateFormatUtils.format does not correctly change Calendar\n             TimeZone in certain situations. Thanks to Christian P. Momon.\no LANG-1116: DateUtilsTest.testLang530 fails for some timezones. Thanks to\n             Aaron Sheldon.\no LANG-1114: TypeUtils.ParameterizedType#equals doesn't work with wildcard\n             types. Thanks to Andy Coates.\no LANG-1118: StringUtils.repeat('z', -1) throws NegativeArraySizeException.\n             Thanks to Loic Guibert.\no LANG-1111: Fix FindBugs warnings in DurationFormatUtils.\no LANG-1162: StringUtils#equals fails with Index OOBE on non-Strings with\n             identical leading prefix..\no LANG-1163: There are no tests for CharSequenceUtils.regionMatches.\no LANG-1200: Fix Javadoc of StringUtils.ordinalIndexOf. Thanks to BarkZhang.\no LANG-1191: Incorrect Javadoc\n             StringUtils.containsAny(CharSequence, CharSequence...). Thanks to\n             qed, Brent Worden and Gary Gregory.\n\nCHANGES\n=========\no LANG-1197: Prepare Java 9 detection.\no LANG-1262: CompareToBuilder.append(Object, Object, Comparator) method is too\n             big to be inlined. Thanks to Ruslan Cheremin.\no LANG-1259: Javadoc for ArrayUtils.isNotEmpty() is slightly misleading. Thanks\n             to Dominik Stadler.\no LANG-1247: FastDatePrinter generates extra Date objects. Thanks to\n             Benoit Wiart.\no LANG-1229: HashCodeBuilder.append(Object,Object) is too big to be inlined,\n             which prevents whole builder to be scalarized. Thanks to\n             Ruslan Cheremin.\no LANG-1243: Simplify ArrayUtils removeElements by using new decrementAndGet()\n             method.\no LANG-1240: Optimize BitField constructor implementation. Thanks to zhanhb.\no LANG-1206: Improve CharSetUtils.squeeze() performance. Thanks to\n             Mohammed Alfallaj.\no LANG-1176: Improve ArrayUtils removeElements time complexity to O(n). Thanks\n             to Jeffery Yuan.\no LANG-1234: getLevenshteinDistance with a threshold: optimize implementation\n             if the strings lengths differ more than the threshold. Thanks to\n             Jonatan Jönsson.\no LANG-1151: Performance improvements for NumberUtils.isParsable. Thanks to\n             Juan Pablo Santos Rodríguez.\no LANG-1218: EqualsBuilder.append(Object,Object) is too big to be inlined,\n             which prevents whole builder to be scalarized. Thanks to\n             Ruslan Cheremin.\no LANG-1210: StringUtils#startsWithAny has error in Javadoc. Thanks to\n             Matthias Niehoff.\no LANG-1208: StrSubstitutor can preserve escapes. Thanks to Samuel Karp.\no LANG-1182: Clarify Javadoc of StringUtils.containsAny(). Thanks to\n             Larry West and Pascal Schumacher.\no LANG-1183: Making replacePattern/removePattern methods null safe in\n             StringUtils.\no LANG-1057: Replace StringBuilder with String concatenation for better\n             optimization. Thanks to Otávio Santana.\no LANG-1075: Deprecate SystemUtils.FILE_SEPARATOR and\n             SystemUtils.PATH_SEPARATOR.\no LANG-979:  TypeUtils.parameterizeWithOwner - wrong format descriptor for\n             \"invalid number of type parameters\". Thanks to Bruno P. Kinoshita.\no LANG-1112: MultilineRecursiveToStringStyle largely unusable due to being\n             package-private.\no LANG-1058: StringUtils.uncapitalize performance improvement. Thanks to\n             Leo Wang.\no LANG-1069: CharSet.getInstance documentation does not clearly explain how\n             to include negation character in set. Thanks to Arno Noordover.\no LANG-1107: Fix parsing edge cases in FastDateParser.\no LANG-1273: Added new property IS_OS_MAC_OSX_EL_CAPITAN in SystemUtils. Thanks\n             to Jake Wang.\n\n=============================================================================\n\n                        Release Notes for version 3.4\n\n\nCOMPATIBILITY\n=============\n\nCommons Lang 3.4 is fully binary compatible to the last release and can\ntherefore be used as a drop in replacement for 3.3.2. Note that the value of\norg.apache.commons.lang3.time.DurationFormatUtils.ISO_EXTENDED_FORMAT_PATTERN\nhas changed, which may affect clients using the constant. Furthermore the\nconstant is used internally in\no DurationFormatUtils.formatDurationISO(long)\no DurationFormatUtils.formatPeriodISO(long, long)\n\nFor more information see https://issues.apache.org/jira/browse/LANG-1000.\n\nNEW FEATURES\n==============\n\no LANG-821:  Support OS X versions in SystemUtils. Thanks to Timo Kockert.\no LANG-1103: Add SystemUtils.IS_JAVA_1_9\no LANG-1093: Add ClassUtils.getAbbreviatedName(). Thanks to Fabian Lange.\no LANG-1082: Add option to disable the \"objectsTriviallyEqual\" test in\n             DiffBuilder. Thanks to Jonathan Baker.\no LANG-1015: Add JsonToStringStyle implementation to ToStringStyle. Thanks to\n             Thiago Andrade.\no LANG-1080: Add NoClassNameToStringStyle implementation of ToStringStyle.\n             Thanks to Innokenty Shuvalov.\no LANG-883:  Add StringUtils.containsAny(CharSequence, CharSequence...) method.\n             Thanks to Daniel Stewart.\no LANG-1052: Multiline recursive to string style. Thanks to Jan Matèrne.\no LANG-536:  Add isSorted() to ArrayUtils. Thanks to James Sawle.\no LANG-1033: Add StringUtils.countMatches(CharSequence, char)\no LANG-1021: Provide methods to retrieve all fields/methods annotated with a\n             specific type. Thanks to Alexander Müller.\no LANG-1016: NumberUtils#isParsable method(s). Thanks to\n             Juan Pablo Santos Rodríguez.\no LANG-999:  Add fuzzy String matching logic to StringUtils. Thanks to\n             Ben Ripkens.\no LANG-994:  Add zero copy read method to StrBuilder. Thanks to\n             Mikhail Mazursky.\no LANG-993:  Add zero copy write method to StrBuilder. Thanks to\n             Mikhail Mazursky.\no LANG-1044: Add method MethodUtils.invokeExactMethod(Object, String)\no LANG-1045: Add method MethodUtils.invokeMethod(Object, String)\n\nFIXED BUGS\n============\n\no LANG-794:  SystemUtils.IS_OS_WINDOWS_2008, VISTA are incorrect. Thanks to\n             Timo Kockert.\no LANG-1104: Parse test fails for TimeZone America/Sao_Paulo\no LANG-948:  Exception while using ExtendedMessageFormat and escaping braces.\n             Thanks to Andrey Khobnya.\no LANG-1092: Wrong formatting of time zones with daylight saving time in\n             FastDatePrinter\no LANG-1090: FastDateParser does not set error indication in ParsePosition\no LANG-1089: FastDateParser does not handle excess hours as per\n             SimpleDateFormat\no LANG-1061: FastDateParser error - timezones not handled correctly. Thanks to\n             dmeneses.\no LANG-1087: NumberUtils#createNumber() returns positive BigDecimal when\n             negative Float is expected. Thanks to Renat Zhilkibaev.\no LANG-1081: DiffBuilder.append(String, Object left, Object right) does not do\n             a left.equals(right) check. Thanks to Jonathan Baker.\no LANG-1055: StrSubstitutor.replaceSystemProperties does not work consistently.\n             Thanks to Jonathan Baker.\no LANG-1083: Add (T) casts to get unit tests to pass in old JDK. Thanks to\n             Jonathan Baker.\no LANG-1073: Read wrong component type of array in add in ArrayUtils.\n             Thanks to haiyang li.\no LANG-1077: StringUtils.ordinalIndexOf(\"aaaaaa\", \"aa\", 2) != 3 in StringUtils.\n             Thanks to haiyang li.\no LANG-1072: Duplicated \"0x\" check in createBigInteger in NumberUtils. Thanks\n             to haiyang li.\no LANG-1064: StringUtils.abbreviate description doesn't agree with the\n             examples. Thanks to B.J. Herbison.\no LANG-1041: Fix MethodUtilsTest so it does not depend on JDK method ordering.\n             Thanks to Alexandre Bartel.\no LANG-1000: ParseException when trying to parse UTC dates with Z as zone\n             designator using DateFormatUtils.ISO_DATETIME_TIME_ZONE_FORMAT\no LANG-1035: Javadoc for EqualsBuilder.reflectionEquals() is unclear\no LANG-1001: ISO 8601 misspelled throughout the Javadocs. Thanks to\n             Michael Osipov.\no LANG-1088: FastDateParser should be case insensitive\no LANG-995:  Fix bug with stripping spaces on last line in WordUtils.wrap().\n             Thanks to Andrey Khobnya.\n\nCHANGES\n=========\n\no LANG-1102: Make logic for comparing OS versions in SystemUtils smarter\no LANG-1091: Shutdown thread pools in test cases. Thanks to Fabian Lange.\no LANG-1101: FastDateParser and FastDatePrinter support 'X' format\no LANG-1100: Avoid memory allocation when using date formatting to StringBuffer.\n             Thanks to mbracher.\no LANG-935:  Possible performance improvement on string escape functions.\n             Thanks to Fabian Lange, Thomas Neidhart.\no LANG-1098: Avoid String allocation in StrBuilder.append(CharSequence). Thanks\n             to Mikhail Mazurskiy, Fabian Lange.\no LANG-1098: Update maven-checkstyle-plugin to 2.14. Thanks to Micha? Kordas.\no LANG-1097: Update org.easymock:easymock to 3.3.1. Thanks to Micha? Kordas.\no LANG-1096: Update maven-pmd-plugin to 3.4. Thanks to Micha? Kordas.\no LANG-1095: Update maven-antrun-plugin to 1.8. Thanks to Micha? Kordas.\no LANG-877:  Performance improvements for StringEscapeUtils. Thanks to\n             Fabian Lange.\no LANG-1071: Fix wrong examples in Javadoc of\n             StringUtils.replaceEachRepeatedly(...),\n             StringUtils.replaceEach(...) Thanks to Arno Noordover.\no LANG-827:  CompareToBuilder's doc doesn't specify precedence of fields it\n             uses in performing comparisons\no LANG-1020: Improve performance of normalize space. Thanks to Libor Ondrusek.\no LANG-1027: org.apache.commons.lang3.SystemUtils#isJavaVersionAtLeast should\n             return true by default\no LANG-1026: Bring static method references in StringUtils to consistent style.\n             Thanks to Alex Yursha.\no LANG-1017: Use non-ASCII digits in Javadoc examples for\n             StringUtils.isNumeric. Thanks to Christoph Schneegans.\no LANG-1008: Change min/max methods in NumberUtils/IEEE754rUtils from array\n             input parameters to varargs. Thanks to Thiago Andrade.\no LANG-1006: Add wrap (with String or char) to StringUtils. Thanks to\n             Thiago Andrade.\no LANG-1005: Extend DurationFormatUtils#formatDurationISO default pattern to\n             match #formatDurationHMS. Thanks to Michael Osipov.\no LANG-1007: Fixing NumberUtils JAVADoc comments for max methods. Thanks to\n             Thiago Andrade.\no LANG-731:  Better Javadoc for BitField class\no LANG-1004: DurationFormatUtils#formatDurationHMS implementation does not\n             correspond to Javadoc and vice versa. Thanks to Michael Osipov.\no LANG-1003: DurationFormatUtils are not able to handle negative\n             durations/periods\no LANG-998:  Javadoc is not clear on preferred pattern to instantiate\n             FastDateParser / FastDatePrinter\n\n=============================================================================\n\n                        Release Notes for version 3.3.2\n\nNEW FEATURES\n==============\n\no LANG-989:  Add org.apache.commons.lang3.SystemUtils.IS_JAVA_1_8\n\nFIXED BUGS\n============\n\no LANG-992:  NumberUtils#isNumber() returns false for \"0.0\", \"0.4790\", et al\n\n=============================================================================\n\n                        Release Notes for version 3.3.1\n\nFIXED BUGS\n============\n\no LANG-987:  DateUtils.getFragmentInDays(Date, Calendar.MONTH) returns wrong\n             days\no LANG-983:  DurationFormatUtils does not describe format string fully\no LANG-981:  DurationFormatUtils#lexx does not detect unmatched quote char\no LANG-984:  DurationFormatUtils does not handle large durations correctly\no LANG-982:  DurationFormatUtils.formatDuration(61999, \"s.SSSS\") - ms field\n             size should be 4 digits\no LANG-978:  Failing tests with Java 8 b128\n\n=============================================================================\n\n                        Release Notes for version 3.3\n\nNEW FEATURES\n==============\n\no LANG-955:  Add methods for removing all invalid characters according to\n             XML 1.0 and XML 1.1 in an input string to StringEscapeUtils.\n             Thanks to Adam Hooper.\no LANG-970:  Add APIs MutableBoolean setTrue() and setFalse()\no LANG-962:  Add SerializationUtils.roundtrip(T extends Serializable) to\n             serialize then deserialize\no LANG-637:  There should be a DifferenceBuilder with a\n             ReflectionDifferenceBuilder implementation\no LANG-944:  Add the Jaro-Winkler string distance algorithm to StringUtils.\n             Thanks to Rekha Joshi.\no LANG-417:  New class ClassPathUtils with methods for turning FQN into\n             resource path\no LANG-834:  Validate: add inclusiveBetween and exclusiveBetween overloads\n             for primitive types\no LANG-900:  New RandomUtils class. Thanks to Duncan Jones.\no LANG-966:  Add IBM OS/400 detection\n\nFIXED BUGS\n============\n\no LANG-621:  ReflectionToStringBuilder.toString does not debug 3rd party object\n             fields within 3rd party object. Thanks to Philip Hodges,\n             Thomas Neidhart.\no LANG-977:  NumericEntityEscaper incorrectly encodes supplementary characters.\n             Thanks to Chris Karcher.\no LANG-973:  Make some private fields final\no LANG-971:  NumberUtils#isNumber(String) fails to reject invalid Octal numbers\no LANG-972:  NumberUtils#isNumber does not allow for hex 0XABCD\no LANG-969:  StringUtils.toEncodedString(byte[], Charset) needlessly throws\n             UnsupportedEncodingException. Thanks to Matt Bishop.\no LANG-946:  ConstantInitializerTest fails when building with IBM JDK 7\no LANG-954:  uncaught PatternSyntaxException in FastDateFormat on Android.\n             Thanks to Michael Keppler.\no LANG-936:  StringUtils.getLevenshteinDistance with too big of a threshold\n             returns wrong result. Thanks to Yaniv Kunda, Eli Lindsey.\no LANG-943:  Test DurationFormatUtilsTest.testEdgeDuration fails in\n             JDK 1.6, 1.7 and 1.8, BRST time zone\no LANG-613:  ConstructorUtils.getAccessibleConstructor() Does Not Check the\n             Accessibility of Enclosing Classes\no LANG-951:  Fragments are wrong by 1 day when using fragment YEAR or MONTH.\n             Thanks to Sebastian Götz.\no LANG-950:  FastDateParser does not handle two digit year parsing like\n             SimpleDateFormat\no LANG-949:  FastDateParserTest.testParses does not test FastDateParser\no LANG-915:  Wrong locale handling in LocaleUtils.toLocale().\n             Thanks to Sergio Fernández.\n\nCHANGES\n=========\n\no LANG-961:  org.apache.commons.lang3.reflect.FieldUtils.removeFinalModifier(Field)\n             does not clean up after itself\no LANG-958:  FastDateParser javadoc incorrectly states that SimpleDateFormat\n             is used internally\no LANG-956:  Improve Javadoc of WordUtils.wrap methods\no LANG-939:  Move Documentation from user guide to package-info files\no LANG-953:  Convert package.html files to package-info.java files\no LANG-940:  Fix deprecation warnings\no LANG-819:  EnumUtils.generateBitVector needs a \"? extends\"\n\n=============================================================================\n\n                        Release Notes for version 3.2.1\n\nBUG FIXES\n===========\n\no LANG-937:  Fix missing Hamcrest dependency in Ant Build\no LANG-941:  Test failure in LocaleUtilsTest when building with JDK 8\no LANG-942:  Test failure in FastDateParserTest and FastDateFormat_ParserTest\n             when building with JDK8. Thanks to Bruno P. Kinoshita,\n             Henri Yandell.\no LANG-938:  Build fails with test failures when building with JDK 8\n\n=============================================================================\n\n                        Release Notes for version 3.2\n\nCOMPATIBILITY WITH 3.1\n========================\n\nThis release introduces backwards incompatible changes in\norg.apache.commons.lang3.time.FastDateFormat:\no Method 'protected java.util.List parsePattern()' has been removed\no Method 'protected java.lang.String parseToken(java.lang.String, int[])' has\n  been removed\no Method 'protected org.apache.commons.lang3.time.FastDateFormat$NumberRule\n  selectNumberRule(int, int)' has been removed\n\nThese changes were the result of [LANG-462]. It is assumed that this change\nwill not break clients as Charles Honton pointed out on 25/Jan/12:\n\"\n 1. Methods \"FastDateFormat$NumberRule selectNumberRule(int, int)\" and\n    \"List<Rule> parsePattern()\" couldn't have been overridden because\n    NumberRule and Rule were private to FastDateFormat.\n 2. Due to the factory pattern used, it's unlikely other two methods would have\n    been overridden.\n 3. The four methods are highly implementation specific. I consider it a\n    mistake that the methods were exposed.\n\"\nFor more information see https://issues.apache.org/jira/browse/LANG-462.\n\nNEW FEATURES\n==============\n\no LANG-934:  Add removeFinalModifier to FieldUtils\no LANG-863:  Method returns number of inheritance hops between parent and\n             subclass. Thanks to Daneel S. Yaitskov.\no LANG-774:  Added isStarted, isSuspended and isStopped to StopWatch.\n             Thanks to Erhan Bagdemir.\no LANG-848:  Added StringUtils.isBlank/isEmpty CharSequence... methods.\n             Thanks to Alexander Muthmann.\no LANG-926:  Added ArrayUtils.reverse(array, from, to) methods.\no LANG-795:  StringUtils.toString(byte[], String) deprecated in favour of a new\n             StringUtils.toString(byte[], CharSet). Thanks to Aaron Digulla.\no LANG-893:  StrSubstitutor now supports default values for variables.\n             Thanks to Woonsan Ko.\no LANG-913:  Adding .gitignore to commons-lang. Thanks to Allon Mureinik.\no LANG-837:  Add ObjectUtils.toIdentityString methods that support\n             StringBuilder, StrBuilder, and Appendable.\no LANG-886:  Added CharSetUtils.containsAny(String, String).\no LANG-797:  Added escape/unescapeJson to StringEscapeUtils.\no LANG-875:  Added appendIfMissing and prependIfMissing methods to StringUtils.\no LANG-870:  Add StringUtils.LF and StringUtils.CR values.\no LANG-873:  Add FieldUtils getAllFields() to return all the fields defined in\n             the given class and super classes.\no LANG-835:  StrBuilder should support StringBuilder as an input parameter.\no LANG-857:  StringIndexOutOfBoundsException in CharSequenceTranslator.\no LANG-856:  Code refactoring in NumberUtils.\no LANG-855:  NumberUtils#createBigInteger does not allow for hex and octal\n             numbers.\no LANG-854:  NumberUtils#createNumber - does not allow for hex numbers to be\n             larger than Long.\no LANG-853:  StringUtils join APIs for primitives.\no LANG-841:  Add StringUtils API to call String.replaceAll in DOTALL a.k.a.\n             single-line mode.\no LANG-825:  Create StrBuilder APIs similar to\n             String.format(String, Object...).\no LANG-675:  Add Triple class (ternary version of Pair).\no LANG-462:  FastDateFormat supports parse methods.\n\nBUG FIXES\n===========\n\no LANG-932:  Spelling fixes. Thanks to Ville Skyttä.\no LANG-929:  OctalUnescaper tried to parse all of \\279.\no LANG-928:  OctalUnescaper had bugs when parsing octals starting with a zero.\no LANG-905:  EqualsBuilder returned true when comparing arrays, even when the\n             elements are different.\no LANG-917:  Fixed exception when combining custom and choice format in\n             ExtendedMessageFormat. Thanks to Arne Burmeister.\no LANG-902:  RandomStringUtils.random javadoc was incorrectly promising letters\n             and numbers would, as opposed to may, appear  Issue:. Thanks to\n             Andrzej Winnicki.\no LANG-921:  BooleanUtils.xor(boolean...) produces wrong results.\no LANG-896:  BooleanUtils.toBoolean(String str) javadoc is not updated. Thanks\n             to Mark Bryan Yu.\no LANG-879:  LocaleUtils test fails with new Locale \"ja_JP_JP_#u-ca-japanese\"\n             of JDK7.\no LANG-836:  StrSubstitutor does not support StringBuilder or CharSequence.\n             Thanks to Arnaud Brunet.\no LANG-693:  Method createNumber from NumberUtils doesn't work for floating\n             point numbers other than Float  Issue: LANG-693. Thanks to\n             Calvin Echols.\no LANG-887:  FastDateFormat does not use the locale specific cache correctly.\no LANG-754:  ClassUtils.getShortName(String) will now only do a reverse lookup\n             for array types.\no LANG-881:  NumberUtils.createNumber() Javadoc says it does not work for octal\n             numbers.\no LANG-865:  LocaleUtils.toLocale does not parse strings starting with an\n             underscore.\no LANG-858:  StringEscapeUtils.escapeJava() and escapeEcmaScript() do not\n             output the escaped surrogate pairs that are Java parsable.\no LANG-849:  FastDateFormat and FastDatePrinter generates Date objects\n             wastefully.\no LANG-845:  Spelling fixes.\no LANG-844:  Fix examples contained in javadoc of StringUtils.center methods.\no LANG-832:  FastDateParser does not handle unterminated quotes correctly.\no LANG-831:  FastDateParser does not handle white-space properly.\no LANG-830:  FastDateParser could use \\Q \\E to quote regexes.\no LANG-828:  FastDateParser does not handle non-Gregorian calendars properly.\no LANG-826:  FastDateParser does not handle non-ASCII digits correctly.\no LANG-822:  NumberUtils#createNumber - bad behavior for leading \"--\".\no LANG-818:  FastDateFormat's \"z\" pattern does not respect timezone of Calendar\n             instances passed to format().\no LANG-817:  Add org.apache.commons.lang3.SystemUtils.IS_OS_WINDOWS_8.\no LANG-813:  StringUtils.equalsIgnoreCase doesn't check string reference\n             equality.\no LANG-810:  StringUtils.join() endIndex, bugged for loop.\no LANG-807:  RandomStringUtils throws confusing IAE when end <= start.\no LANG-805:  RandomStringUtils.random(count, 0, 0, false, false, universe,\n             random) always throws java.lang.ArrayIndexOutOfBoundsException.\no LANG-802:  LocaleUtils - unnecessary recursive call in SyncAvoid class.\no LANG-800:  Javadoc bug in DateUtils#ceiling for Calendar and Object versions.\no LANG-788:  SerializationUtils throws ClassNotFoundException when cloning\n             primitive classes.\no LANG-786:  StringUtils equals() relies on undefined behavior.\no LANG-783:  Documentation bug: StringUtils.split.\no LANG-777:  jar contains velocity template of release notes.\no LANG-776:  TypeUtilsTest contains incorrect type assignability assertion.\no LANG-775:  TypeUtils.getTypeArguments() misses type arguments for\n             partially-assigned classes.\no LANG-773:  ImmutablePair doc contains nonsense text.\no LANG-772:  ClassUtils.PACKAGE_SEPARATOR Javadoc contains garbage text.\no LANG-765:  EventListenerSupport.ProxyInvocationHandler no longer defines\n             serialVersionUID.\no LANG-764:  StrBuilder is now serializable.\no LANG-761:  Fix Javadoc Ant warnings.\no LANG-747:  NumberUtils does not handle Long Hex numbers.\no LANG-743:  Javadoc bug in static inner class DateIterator.\n\nCHANGES\n=========\n\no LANG-931:  Misleading Javadoc comment in StrBuilderReader class. Thanks\n             to Christoph Schneegans.\no LANG-910:  StringUtils.normalizeSpace now handles non-breaking spaces\n             (Unicode 00A0). Thanks to Timur Yarosh.\no LANG-804:  Redundant check for zero in HashCodeBuilder ctor. Thanks to\n             Allon Mureinik.\no LANG-884:  Simplify FastDateFormat; eliminate boxing.\no LANG-882:  LookupTranslator now works with implementations of CharSequence\n             other than String.\no LANG-846:  Provide CharSequenceUtils.regionMatches with a proper green\n             implementation instead of inefficiently converting to Strings.\no LANG-839:  ArrayUtils removeElements methods use unnecessary HashSet.\no LANG-838:  ArrayUtils removeElements methods clone temporary index arrays\n             unnecessarily.\no LANG-799:  DateUtils#parseDate uses default locale; add Locale support.\no LANG-798:  Use generics in SerializationUtils.\n\nCHANGES WITHOUT TICKET\n========================\n\no Fixed URLs in javadoc to point to new oracle.com pages\n\n=============================================================================\n\n                        Release Notes for version 3.1\n\nNEW FEATURES\n==============\n\no LANG-801:  Add Conversion utility to convert between data types on byte level\no LANG-760:  Add API StringUtils.toString(byte[] input, String charsetName)\no LANG-756:  Add APIs ClassUtils.isPrimitiveWrapper(Class<?>) and\n             isPrimitiveOrWrapper(Class<?>)\no LANG-695:  SystemUtils.IS_OS_UNIX doesn't recognize FreeBSD as a Unix system\n\nBUG FIXES\n===========\n\no LANG-749:  Incorrect Bundle-SymbolicName in Manifest\no LANG-746:  NumberUtils does not handle upper-case hex: 0X and -0X\no LANG-744:  StringUtils throws java.security.AccessControlException on Google\n             App Engine\no LANG-741:  Ant build has wrong component.name\no LANG-698:  Document that the Mutable numbers don't work as expected with\n             String.format\n\nCHANGES\n=========\n\no LANG-758:  Add an example with whitespace in StringUtils.defaultIfEmpty\no LANG-752:  Fix createLong() so it behaves like createInteger()\no LANG-751:  Include the actual type in the Validate.isInstance and\n             isAssignableFrom exception messages\no LANG-748:  Deprecating chomp(String, String)\no LANG-736:  CharUtils static final array CHAR_STRING is not needed to compute\n             CHAR_STRING_ARRAY\n\n=============================================================================\n\n                        Release Notes for version 3.0\n\nADDITIONS\n===========\n\no LANG-276:  MutableBigDecimal and MutableBigInteger.\no LANG-285:  Wish : method unaccent.\no LANG-358:  ObjectUtils.coalesce.\no LANG-386:  LeftOf/RightOfNumber in Range convenience methods necessary.\no LANG-435:  Add ClassUtils.isAssignable() variants with autoboxing.\no LANG-444:  StringUtils.emptyToNull.\no LANG-482:  Enhance StrSubstitutor to support nested ${var-${subvr}} expansion\no LANG-482:  StrSubstitutor now supports substitution in variable names.\no LANG-496:  A generic implementation of the Lazy initialization pattern.\no LANG-497:  Addition of ContextedException and ContextedRuntimeException.\no LANG-498:  Add StringEscapeUtils.escapeText() methods.\no LANG-499:  Add support for the handling of ExecutionExceptions.\no LANG-501:  Add support for background initialization.\no LANG-529:  Add a concurrent package.\no LANG-533:  Validate: support for validating blank strings.\no LANG-537:  Add ArrayUtils.toArray to create generic arrays.\no LANG-545:  Add ability to create a Future for a constant.\no LANG-546:  Add methods to Validate to check whether the index is valid for\n             the array/list/string.\no LANG-553:  Add TypeUtils class to provide utility code for working with generic\n             types.\no LANG-559:  Added isAssignableFrom and isInstanceOf validation methods.\no LANG-559:  Added validState validation method.\no LANG-560:  New TimedSemaphore class.\no LANG-582:  Provide an implementation of the ThreadFactory interface.\no LANG-588:  Create a basic Pair<L, R> class.\no LANG-594:  DateUtils equal & compare functions up to most significant field.\no LANG-601:  Add Builder Interface / Update Builders to Implement It.\no LANG-609:  Support lazy initialization using atomic variables\no LANG-610:  Extend exception handling in ConcurrentUtils to runtime exceptions.\no LANG-614:  StringUtils.endsWithAny method\no LANG-640:  Add normalizeSpace to StringUtils\no LANG-644:  Provide documentation about the new concurrent package\no LANG-649:  BooleanUtils.toBooleanObject to support single character input\no LANG-651:  Add AnnotationUtils\no LANG-653:  Provide a very basic ConcurrentInitializer implementation\no LANG-655:  Add StringUtils.defaultIfBlank()\no LANG-667:  Add a Null-safe compare() method to ObjectUtils\no LANG-676:  Documented potential NPE if auto-boxing occurs for some BooleanUtils\n             methods\no LANG-678:  Add support for ConcurrentMap.putIfAbsent()\no LANG-692:  Add hashCodeMulti varargs method\no LANG-697:  Add FormattableUtils class\no LANG-684:  Levenshtein Distance Within a Given Threshold\n\nREMOVALS\n==========\n\no LANG-438:  Remove @deprecateds.\no LANG-492:  Remove code handled now by the JDK.\no LANG-493:  Remove code that does not hold enough value to remain.\no LANG-590:  Remove JDK 1.2/1.3 bug handling in\n             StringUtils.indexOf(String, String, int).\no LANG-673:  WordUtils.abbreviate() removed\no LANG-691:  Removed DateUtils.UTC_TIME_ZONE\n\nIMPROVEMENTS\n==============\n\no LANG-290:  EnumUtils for JDK 5.0.\no LANG-336:  Finally start using generics.\no LANG-355:  StrBuilder should implement CharSequence and Appendable.\no LANG-396:  Investigate for vararg usages.\no LANG-424:  Improve Javadoc for StringUtils class.\no LANG-458:  Refactor Validate.java to eliminate code redundancy.\no LANG-479:  Document where in SVN trunk is.\no LANG-504:  bring ArrayUtils.isEmpty to the generics world.\no LANG-505:  Rewrite StringEscapeUtils.\no LANG-507:  StringEscapeUtils.unescapeJava should support \\u+ notation.\no LANG-510:  Convert StringUtils API to take CharSequence.\no LANG-513:  Better EnumUtils.\no LANG-528:  Mutable classes should implement an appropriately typed Mutable\n             interface.\no LANG-539:  Compile commons.lang for CDC 1.1/Foundation 1.1.\no LANG-540:  Make NumericEntityEscaper immutable.\no LANG-541:  Replace StringBuffer with StringBuilder.\no LANG-548:  Use Iterable on API instead of Collection.\no LANG-551:  Replace Range classes with generic version.\no LANG-562:  Change Maven groupId.\no LANG-563:  Change Java package name.\no LANG-570:  Do the test cases really still require main() and suite() methods?\no LANG-579:  Add new Validate methods.\no LANG-599:  ClassUtils.getClass(): Allow Dots as Inner Class Separators.\no LANG-605:  DefaultExceptionContext overwrites values in recursive situations.\no LANG-668:  Change ObjectUtils min() & max() functions to use varargs rather\n             than just two parameters\no LANG-681:  Push down WordUtils to \"text\" sub-package.\no LANG-711:  Add includeantruntime=false to javac targets to quell warnings in\n             ant 1.8.1 and better (and modest performance gain).\no LANG-713:  Increase test coverage of FieldUtils read methods and tweak\n             javadoc.\no LANG-718:  build.xml Java 1.5+ updates.\n\nBUG FIXES\n===========\n\no LANG-11:   Depend on JDK 1.5+.\no LANG-302:  StrBuilder does not implement clone().\no LANG-339:  StringEscapeUtils.escapeHtml() escapes multibyte characters like\n             Chinese, Japanese, etc.\no LANG-369:  ExceptionUtils not thread-safe.\no LANG-418:  Javadoc incorrect for StringUtils.endsWithIgnoreCase.\no LANG-428:  StringUtils.isAlpha, isAlphanumeric and isNumeric now return false\n             for \"\"\no LANG-439:  StringEscapeUtils.escapeHTML() does not escape chars (0x00-0x20).\no LANG-448:  Lower Ascii Characters don't get encoded by Entities.java.\no LANG-468:  JDK 1.5 build/runtime failure on LANG-393 (EqualsBuilder).\no LANG-474:  Fixes for thread safety.\no LANG-478:  StopWatch does not resist to system time changes.\no LANG-480:  StringEscapeUtils.escapeHtml incorrectly converts unicode\n             characters above U+00FFFF into 2 characters.\no LANG-481:  Possible race-conditions in hashCode of the range classes.\no LANG-564:  Improve StrLookup API documentation.\no LANG-568:  @SuppressWarnings(\"unchecked\") is used too generally.\no LANG-571:  ArrayUtils.add(T[:  array, T element) can create unexpected\n             ClassCastException.\no LANG-585:  exception.DefaultExceptionContext.getFormattedExceptionMessage\n             catches Throwable.\no LANG-596:  StrSubstitutor should also handle the default properties of a\n             java.util.Properties class\no LANG-600:  Javadoc is incorrect for public static int\n             lastIndexOf(String str, String searchStr).\no LANG-602:  ContextedRuntimeException no longer an 'unchecked' exception.\no LANG-606:  EqualsBuilder causes StackOverflowException.\no LANG-608:  Some StringUtils methods should take an int character instead of\n             char to use String API features.\no LANG-617:  StringEscapeUtils.escapeXML() can't process UTF-16 supplementary\n             characters\no LANG-624:  SystemUtils.getJavaVersionAsFloat throws\n             StringIndexOutOfBoundsException on Android runtime/Dalvik VM\no LANG-629:  Charset may not be threadsafe, because the HashSet is not synch.\no LANG-638:  NumberUtils createNumber throws a StringIndexOutOfBoundsException\n             when argument containing \"e\" and \"E\" is passed in\no LANG-643:  Javadoc StringUtils.left() claims to throw on negative len, but\n             doesn't\no LANG-645:  FastDateFormat.format() outputs incorrect week of year because\n             locale isn't respected\no LANG-646:  StringEscapeUtils.unescapeJava doesn't handle octal escapes and\n             Unicode with extra u\no LANG-656:  Example StringUtils.indexOfAnyBut(\"zzabyycdxx\", '') = 0 incorrect\no LANG-658:  Some entities like &Ouml; are not matched properly against its\n             ISO8859-1 representation\no LANG-659:  EntityArrays typo: {\"\\u2122\", \"&minus;\"}, // minus sign, U+2212\n             ISOtech\no LANG-66:   StringEscaper.escapeXml() escapes characters > 0x7f.\no LANG-662:  org.apache.commons.lang3.math.Fraction does not reduce\n             (Integer.MIN_VALUE, 2^k)\no LANG-663:  org.apache.commons.lang3.math.Fraction does not always succeed in\n             multiplyBy and divideBy\no LANG-664:  NumberUtils.isNumber(String) is not right when the String is\n             \"1.1L\"\no LANG-672:  Doc bug in DateUtils#ceiling\no LANG-677:  DateUtils.isSameLocalTime compares using 12 hour clock and not\n             24 hour\no LANG-685:  EqualsBuilder synchronizes on HashCodeBuilder.\no LANG-703:  StringUtils.join throws NPE when toString returns null for one of\n             objects in collection\no LANG-710:  StringIndexOutOfBoundsException when calling unescapeHtml4(\"&#03\")\no LANG-714:  StringUtils doc/comment spelling fixes.\no LANG-715:  CharSetUtils.squeeze() speedup.\no LANG-716:  swapCase and *capitalize speedups.\n\n\nHistorical list of changes: https://commons.apache.org/lang/changes-report.html\n\nFor complete information on Commons Lang, including instructions on how to\nsubmit bug reports, patches, or suggestions for improvement, see the\nApache Commons Lang website:\n\nhttps://commons.apache.org/lang/\n\nHave fun!\n-Apache Commons Lang team\n\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.87890625,
          "content": "<!---\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\nThe Apache Commons security page is [https://commons.apache.org/security.html](https://commons.apache.org/security.html).\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 31.2626953125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n Licensed to the Apache Software Foundation (ASF) under one or more\n contributor license agreements.  See the NOTICE file distributed with\n this work for additional information regarding copyright ownership.\n The ASF licenses this file to You under the Apache License, Version 2.0\n (the \"License\"); you may not use this file except in compliance with\n the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n-->\n<project\n  xmlns=\"http://maven.apache.org/POM/4.0.0\"\n  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n  <parent>\n    <groupId>org.apache.commons</groupId>\n    <artifactId>commons-parent</artifactId>\n    <version>79</version>\n  </parent>\n  <modelVersion>4.0.0</modelVersion>\n  <artifactId>commons-lang3</artifactId>\n  <version>3.18.0-SNAPSHOT</version>\n  <name>Apache Commons Lang</name>\n\n  <inceptionYear>2001</inceptionYear>\n  <description>\n  Apache Commons Lang, a package of Java utility classes for the\n  classes that are in java.lang's hierarchy, or are considered to be so\n  standard as to justify existence in java.lang.\n\n  The code is tested using the latest revision of the JDK for supported\n  LTS releases: 8, 11, 17 and 21 currently.\n  See https://github.com/apache/commons-lang/blob/master/.github/workflows/maven.yml\n  \n  Please ensure your build environment is up-to-date and kindly report any build issues.\n  </description>\n\n  <url>https://commons.apache.org/proper/commons-lang/</url>\n\n  <issueManagement>\n    <system>jira</system>\n    <url>https://issues.apache.org/jira/browse/LANG</url>\n  </issueManagement>\n  <scm>\n    <connection>scm:git:http://gitbox.apache.org/repos/asf/commons-lang.git</connection>\n    <developerConnection>scm:git:https://gitbox.apache.org/repos/asf/commons-lang.git</developerConnection>\n    <url>https://gitbox.apache.org/repos/asf?p=commons-lang.git</url>\n    <tag>rel/commons-lang-3.18.0</tag>\n  </scm>\n\n  <!-- Lang should depend on very little -->\n  <dependencies>\n    <!-- testing -->\n    <dependency>\n      <groupId>org.junit.jupiter</groupId>\n      <artifactId>junit-jupiter</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit-pioneer</groupId>\n      <artifactId>junit-pioneer</artifactId>\n      <version>1.9.1</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.hamcrest</groupId>\n      <artifactId>hamcrest</artifactId>\n      <version>3.0</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.easymock</groupId>\n      <artifactId>easymock</artifactId>\n      <version>5.5.0</version>\n      <scope>test</scope>\n    </dependency>\n    <!-- For Javadoc links -->\n    <dependency>\n      <groupId>org.apache.commons</groupId>\n      <artifactId>commons-text</artifactId>\n      <version>${commons.text.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.openjdk.jmh</groupId>\n      <artifactId>jmh-core</artifactId>\n      <version>${jmh.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.openjdk.jmh</groupId>\n      <artifactId>jmh-generator-annprocess</artifactId>\n      <version>${jmh.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.google.code.findbugs</groupId>\n      <artifactId>jsr305</artifactId>\n      <version>3.0.2</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <distributionManagement>\n    <site>\n      <id>apache.website</id>\n      <name>Apache Commons Site</name>\n      <url>scm:svn:https://svn.apache.org/repos/infra/websites/production/commons/content/proper/commons-lang/</url>\n    </site>\n  </distributionManagement>\n\n  <properties>\n    <argLine>-Xmx512m</argLine>\n    <project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <!-- project.build.outputTimestamp is managed by Maven plugins, see https://maven.apache.org/guides/mini/guide-reproducible-builds.html -->\n    <project.build.outputTimestamp>2024-08-29T19:40:12Z</project.build.outputTimestamp>\n    <maven.compiler.source>1.8</maven.compiler.source>\n    <maven.compiler.target>1.8</maven.compiler.target>\n    <!--\n       This is also  used to generate download_xxx file name.\n       To override this when generating the download page:\n\n       mvn commons:download-page -Dcommons.componentid=lang\n\n       The above seems to change the download page name but not any other\n       properties that depend on the componentid.\n\n       N.B. The componentid is also used by the parent pom as part of the OSGI symbolic name.\n    -->\n    <commons.componentid>lang</commons.componentid>\n    <commons.packageId>lang3</commons.packageId>\n    <commons.module.name>org.apache.commons.lang3</commons.module.name>\n    <!-- Current 3.x release series -->\n    <commons.release.version>3.18.0</commons.release.version>\n    <commons.release.next>3.18.1</commons.release.next>\n    <commons.release.desc>(Java 8+)</commons.release.desc>\n    <!-- Previous 2.x release series -->\n    <commons.release.2.version>2.6</commons.release.2.version>\n    <commons.release.2.desc>(Requires Java 1.2 or later)</commons.release.2.desc>\n    <!-- Override generated name -->\n    <commons.release.2.name>commons-lang-${commons.release.2.version}</commons.release.2.name>\n    <commons.jira.id>LANG</commons.jira.id>\n    <commons.jira.pid>12310481</commons.jira.pid>\n\n    <commons.site.path>lang</commons.site.path>\n    <commons.scmPubUrl>https://svn.apache.org/repos/infra/websites/production/commons/content/proper/commons-lang</commons.scmPubUrl>\n    <commons.scmPubCheckoutDirectory>site-content</commons.scmPubCheckoutDirectory>\n    <commons.encoding>utf-8</commons.encoding>\n\n    <checkstyle.configdir>src/site/resources/checkstyle</checkstyle.configdir>\n\n    <japicmp.skip>false</japicmp.skip>\n    <!-- JMH Benchmark related properties, version, target compiler and name of the benchmarking uber jar. -->\n    <jmh.version>1.37</jmh.version>\n    <uberjar.name>benchmarks</uberjar.name>\n\n    <!-- Commons Release Plugin -->\n    <commons.bc.version>3.17.0</commons.bc.version>\n    <commons.rc.version>RC1</commons.rc.version>\n    <commons.release.isDistModule>true</commons.release.isDistModule>\n    <commons.distSvnStagingUrl>scm:svn:https://dist.apache.org/repos/dist/dev/commons/lang</commons.distSvnStagingUrl>\n    <!-- JaCoCo: Don't make code coverage worse than: -->\n    <commons.jacoco.haltOnFailure>true</commons.jacoco.haltOnFailure>\n    <commons.jacoco.classRatio>0.98</commons.jacoco.classRatio>\n    <commons.jacoco.instructionRatio>0.95</commons.jacoco.instructionRatio>\n    <commons.jacoco.methodRatio>0.95</commons.jacoco.methodRatio>\n    <commons.jacoco.branchRatio>0.92</commons.jacoco.branchRatio>\n    <commons.jacoco.lineRatio>0.95</commons.jacoco.lineRatio>\n    <commons.jacoco.complexityRatio>0.90</commons.jacoco.complexityRatio>\n    <commons.text.version>1.13.0</commons.text.version>\n  </properties>\n\n  <build>\n   <defaultGoal>clean verify apache-rat:check checkstyle:check japicmp:cmp spotbugs:check pmd:check javadoc:javadoc</defaultGoal>\n   <pluginManagement>\n      <plugins>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-pmd-plugin</artifactId>\n          <version>${commons.pmd.version}</version>\n          <configuration>\n            <targetJdk>${maven.compiler.target}</targetJdk>\n            <excludeFromFailureFile>src/conf/pmd-exclude.properties</excludeFromFailureFile>\n            <rulesets>\n              <ruleset>src/conf/pmd-ruleset.xml</ruleset>\n            </rulesets>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.rat</groupId>\n          <artifactId>apache-rat-plugin</artifactId>\n          <configuration>\n            <excludes>\n              <exclude>site-content/**</exclude>\n              <exclude>src/site/resources/.htaccess</exclude>\n              <exclude>src/site/resources/download_lang.cgi</exclude>\n              <exclude>src/site/resources/release-notes/RELEASE-NOTES-*.txt</exclude>\n              <exclude>src/test/resources/lang-708-input.txt</exclude>\n            </excludes>\n          </configuration>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n    <plugins>\n      <plugin>\n        <artifactId>maven-javadoc-plugin</artifactId>\n          <configuration>\n            <source>${maven.compiler.source}</source>\n            <quiet>true</quiet>\n            <notimestamp>true</notimestamp>\n            <links>\n              <link>https://commons.apache.org/proper/commons-text/apidocs</link>\n              <link>${commons.javadoc.javaee.link}</link>\n            </links>\n            <validateLinks>true</validateLinks>\n            <archive>\n              <manifest>\n                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n              </manifest>\n            </archive>\n            <doclint>all</doclint>\n            <!-- Java 8 on GH says: \"[WARNING] javadoc: warning - Error fetching URL: https://commons.apache.org/proper/commons-text/apidocs/\" -->\n            <!-- <failOnWarnings>true</failOnWarnings> -->\n            <additionalDependencies>\n              <additionalDependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-text</artifactId>\n                <version>${commons.text.version}</version>\n              </additionalDependency>\n            </additionalDependencies>\n          </configuration>\n          <executions>\n            <execution>\n              <id>create-javadoc-jar</id>\n              <goals>\n                <goal>javadoc</goal>\n                <goal>jar</goal>\n              </goals>\n              <phase>package</phase>\n            </execution>\n          </executions>\n        </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>plain</id>\n            <configuration>\n              <includes>\n                <include>**/*Test.java</include>\n              </includes>\n              <trimStackTrace>false</trimStackTrace>\n            </configuration>\n          </execution>\n          <!-- <execution> <id>security-manager-test</id> <phase>integration-test</phase> <goals> <goal>test</goal> </goals> <configuration>\n            <includes> <include>**/*Test.java</include> </includes> <argLine>-Djava.security.manager -Djava.security.policy=${basedir}/src/test/resources/java.policy</argLine>\n            </configuration> </execution> -->\n        </executions>\n      </plugin>\n      <plugin>\n        <artifactId>maven-assembly-plugin</artifactId>\n        <configuration>\n          <descriptors>\n            <descriptor>src/assembly/bin.xml</descriptor>\n            <descriptor>src/assembly/src.xml</descriptor>\n          </descriptors>\n          <tarLongFileMode>gnu</tarLongFileMode>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-jar-plugin</artifactId>\n        <executions>\n          <execution>\n            <goals>\n              <goal>test-jar</goal>\n            </goals>\n          </execution>\n        </executions>\n        <configuration>\n          <archive combine.children=\"append\">\n            <manifestEntries>\n              <Automatic-Module-Name>${commons.module.name}</Automatic-Module-Name>\n            </manifestEntries>\n          </archive>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-scm-publish-plugin</artifactId>\n        <configuration>\n          <ignorePathsToDelete>\n            <ignorePathToDelete>javadocs</ignorePathToDelete>\n          </ignorePathsToDelete>\n        </configuration>\n      </plugin>\n      <plugin>\n        <artifactId>maven-checkstyle-plugin</artifactId>\n        <configuration>\n          <configLocation>${checkstyle.configdir}/checkstyle.xml</configLocation>\n          <includeTestSourceDirectory>true</includeTestSourceDirectory>\n          <enableRulesSummary>false</enableRulesSummary>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>com.github.spotbugs</groupId>\n        <artifactId>spotbugs-maven-plugin</artifactId>\n        <configuration>\n          <excludeFilterFile>${basedir}/src/conf/spotbugs-exclude-filter.xml</excludeFilterFile>\n        </configuration>\n      </plugin>\n    </plugins>\n  </build>\n\n  <reporting>\n    <plugins>\n      <plugin>\n        <artifactId>maven-javadoc-plugin</artifactId>\n        <configuration>\n          <source>${maven.compiler.source}</source>\n          <quiet>true</quiet>\n          <notimestamp>true</notimestamp>\n          <links>\n            <link>https://commons.apache.org/proper/commons-text/apidocs</link>\n            <link>${commons.javadoc.javaee.link}</link>\n          </links>\n          <validateLinks>true</validateLinks>\n          <archive>\n            <manifest>\n              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n            </manifest>\n          </archive>\n          <doclint>all</doclint>\n        </configuration>\n      </plugin>\n      <plugin>\n        <artifactId>maven-checkstyle-plugin</artifactId>\n        <configuration>\n          <configLocation>${checkstyle.configdir}/checkstyle.xml</configLocation>\n          <includeTestSourceDirectory>true</includeTestSourceDirectory>\n          <enableRulesSummary>false</enableRulesSummary>\n        </configuration>\n        <reportSets>\n          <reportSet>\n            <reports>\n              <report>checkstyle</report>\n            </reports>\n          </reportSet>\n        </reportSets>\n      </plugin>\n      <!-- Requires setting 'export MAVEN_OPTS=\"-Xmx512m -XX:MaxPermSize=128m\" ' -->\n      <plugin>\n        <groupId>com.github.spotbugs</groupId>\n        <artifactId>spotbugs-maven-plugin</artifactId>\n        <configuration>\n          <excludeFilterFile>${basedir}/src/conf/spotbugs-exclude-filter.xml</excludeFilterFile>\n        </configuration>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-pmd-plugin</artifactId>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>taglist-maven-plugin</artifactId>\n        <configuration>\n          <tagListOptions>\n            <tagClasses>\n              <tagClass>\n                <displayName>Needs Work</displayName>\n                <tags>\n                  <tag>\n                    <matchString>TODO</matchString>\n                    <matchType>exact</matchType>\n                  </tag>\n                  <tag>\n                    <matchString>FIXME</matchString>\n                    <matchType>exact</matchType>\n                  </tag>\n                  <tag>\n                    <matchString>XXX</matchString>\n                    <matchType>exact</matchType>\n                  </tag>\n                </tags>\n              </tagClass>\n              <tagClass>\n                <displayName>Noteable Markers</displayName>\n                <tags>\n                  <tag>\n                    <matchString>NOTE</matchString>\n                    <matchType>exact</matchType>\n                  </tag>\n                  <tag>\n                    <matchString>NOPMD</matchString>\n                    <matchType>exact</matchType>\n                  </tag>\n                  <tag>\n                    <matchString>NOSONAR</matchString>\n                    <matchType>exact</matchType>\n                  </tag>\n                </tags>\n              </tagClass>\n            </tagClasses>\n          </tagListOptions>\n        </configuration>\n      </plugin>\n    </plugins>\n  </reporting>\n\n  <profiles>\n    <profile>\n      <id>setup-checkout</id>\n      <activation>\n        <file>\n          <missing>site-content</missing>\n        </file>\n      </activation>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-antrun-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>prepare-checkout</id>\n                <phase>pre-site</phase>\n                <goals>\n                  <goal>run</goal>\n                </goals>\n                <configuration>\n                  <target>\n                    <exec executable=\"svn\">\n                      <arg line=\"checkout --depth immediates ${commons.scmPubUrl} ${commons.scmPubCheckoutDirectory}\" />\n                    </exec>\n\n                    <exec executable=\"svn\">\n                      <arg line=\"update --set-depth exclude ${commons.scmPubCheckoutDirectory}/javadocs\" />\n                    </exec>\n\n                    <pathconvert pathsep=\" \" property=\"dirs\">\n                      <dirset dir=\"${commons.scmPubCheckoutDirectory}\" includes=\"*\" />\n                    </pathconvert>\n                    <exec executable=\"svn\">\n                      <arg line=\"update --set-depth infinity ${dirs}\" />\n                    </exec>\n                  </target>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n\n    <profile>\n      <id>java9+</id>\n      <activation>\n        <jdk>[9,)</jdk>\n      </activation>\n      <properties>\n        <!-- LANG-1265: allow tests to access private fields/methods of java.base classes via reflection -->\n        <!-- LANG-1667: allow tests to access private fields/methods of java.base/java.util such as ArrayList via reflection -->\n        <argLine>-Xmx512m --add-opens java.base/java.lang.reflect=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.util=ALL-UNNAMED --add-opens java.base/java.time=ALL-UNNAMED --add-opens java.base/java.time.chrono=ALL-UNNAMED</argLine>\n      </properties>\n    </profile>\n    <profile>\n      <id>java15</id>\n      <activation>\n        <!-- This is ONLY activated for Java 15 -->\n        <jdk>15</jdk>\n      </activation>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <excludes>\n                <exclude>org/apache/commons/lang3/time/Java15BugFastDateParserTest.java</exclude>               \n              </excludes>\n            </configuration>\n          </plugin>        \n        </plugins>\n      </build>\n    </profile>\n\n    <profile>\n      <id>benchmark</id>\n      <properties>\n        <skipTests>true</skipTests>\n        <benchmark>org.apache</benchmark>\n      </properties>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.codehaus.mojo</groupId>\n            <artifactId>exec-maven-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>benchmark</id>\n                <phase>test</phase>\n                <goals>\n                  <goal>exec</goal>\n                </goals>\n                <configuration>\n                  <classpathScope>test</classpathScope>\n                  <executable>java</executable>\n                  <arguments>\n                    <argument>-classpath</argument>\n                    <classpath/>\n                    <argument>org.openjdk.jmh.Main</argument>\n                    <argument>-rf</argument>\n                    <argument>json</argument>\n                    <argument>-rff</argument>\n                    <argument>target/jmh-result.${benchmark}.json</argument>\n                    <argument>${benchmark}</argument>\n                  </arguments>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n  </profiles>\n  <developers>\n    <developer>\n      <name>Daniel Rall</name>\n      <id>dlr</id>\n      <email>dlr@finemaltcoding.com</email>\n      <organization>CollabNet, Inc.</organization>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Stephen Colebourne</name>\n      <id>scolebourne</id>\n      <email>scolebourne@joda.org</email>\n      <organization>SITA ATS Ltd</organization>\n      <timezone>0</timezone>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Henri Yandell</name>\n      <id>bayard</id>\n      <email>bayard@apache.org</email>\n      <organization />\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Steven Caswell</name>\n      <id>scaswell</id>\n      <email>stevencaswell@apache.org</email>\n      <organization />\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n      <timezone>-5</timezone>\n    </developer>\n    <developer>\n      <name>Robert Burrell Donkin</name>\n      <id>rdonkin</id>\n      <email>rdonkin@apache.org</email>\n      <organization />\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <id>ggregory</id>\n      <name>Gary Gregory</name>\n      <email>ggregory at apache.org</email>\n      <url>https://www.garygregory.com</url>\n      <organization>The Apache Software Foundation</organization>\n      <organizationUrl>https://www.apache.org/</organizationUrl>      \n      <roles>\n        <role>PMC Member</role>\n      </roles>\n      <timezone>America/New_York</timezone>\n      <properties>\n        <picUrl>https://people.apache.org/~ggregory/img/garydgregory80.png</picUrl>\n      </properties>\n    </developer>\n    <developer>\n      <name>Fredrik Westermarck</name>\n      <id>fredrik</id>\n      <email />\n      <organization />\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>James Carman</name>\n      <id>jcarman</id>\n      <email>jcarman@apache.org</email>\n      <organization>Carman Consulting, Inc.</organization>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Niall Pemberton</name>\n      <id>niallp</id>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Matt Benson</name>\n      <id>mbenson</id>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Joerg Schaible</name>\n      <id>joehni</id>\n      <email>joerg.schaible@gmx.de</email>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n      <timezone>+1</timezone>\n    </developer>\n    <developer>\n      <name>Oliver Heger</name>\n      <id>oheger</id>\n      <email>oheger@apache.org</email>\n      <timezone>+1</timezone>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Paul Benedict</name>\n      <id>pbenedict</id>\n      <email>pbenedict@apache.org</email>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Benedikt Ritter</name>\n      <id>britter</id>\n      <email>britter@apache.org</email>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Duncan Jones</name>\n      <id>djones</id>\n      <email>djones@apache.org</email>\n      <timezone>0</timezone>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Loic Guibert</name>\n      <id>lguibert</id>\n      <email>lguibert@apache.org</email>\n      <timezone>+4</timezone>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n    <developer>\n      <name>Rob Tompkins</name>\n      <id>chtompki</id>\n      <email>chtompki@apache.org</email>\n      <timezone>-5</timezone>\n      <roles>\n        <role>Java Developer</role>\n      </roles>\n    </developer>\n  </developers>\n  <contributors>\n    <contributor>\n      <name>C. Scott Ananian</name>\n    </contributor>\n    <contributor>\n      <name>Chris Audley</name>\n    </contributor>\n    <contributor>\n      <name>Stephane Bailliez</name>\n    </contributor>\n    <contributor>\n      <name>Michael Becke</name>\n    </contributor>\n    <contributor>\n      <name>Benjamin Bentmann</name>\n    </contributor>\n    <contributor>\n      <name>Ola Berg</name>\n    </contributor>\n    <contributor>\n      <name>Nathan Beyer</name>\n    </contributor>\n    <contributor>\n      <name>Stefan Bodewig</name>\n    </contributor>\n    <contributor>\n      <name>Janek Bogucki</name>\n    </contributor>\n    <contributor>\n      <name>Mike Bowler</name>\n    </contributor>\n    <contributor>\n      <name>Sean Brown</name>\n    </contributor>\n    <contributor>\n      <name>Alexander Day Chaffee</name>\n    </contributor>\n    <contributor>\n      <name>Al Chou</name>\n    </contributor>\n    <contributor>\n      <name>Greg Coladonato</name>\n    </contributor>\n    <contributor>\n      <name>Maarten Coene</name>\n    </contributor>\n    <contributor>\n      <name>Justin Couch</name>\n    </contributor>\n    <contributor>\n      <name>Michael Davey</name>\n    </contributor>\n    <contributor>\n      <name>Norm Deane</name>\n    </contributor>\n    <contributor>\n      <name>Morgan Delagrange</name>\n    </contributor>\n    <contributor>\n      <name>Ringo De Smet</name>\n    </contributor>\n    <contributor>\n      <name>Russel Dittmar</name>\n    </contributor>\n    <contributor>\n      <name>Steve Downey</name>\n    </contributor>\n    <contributor>\n      <name>Matthias Eichel</name>\n    </contributor>\n    <contributor>\n      <name>Christopher Elkins</name>\n    </contributor>\n    <contributor>\n      <name>Chris Feldhacker</name>\n    </contributor>\n    <contributor>\n      <name>Roland Foerther</name>\n    </contributor>\n    <contributor>\n      <name>Pete Gieser</name>\n    </contributor>\n    <contributor>\n      <name>Jason Gritman</name>\n    </contributor>\n    <contributor>\n      <name>Matthew Hawthorne</name>\n    </contributor>\n    <contributor>\n      <name>Michael Heuer</name>\n    </contributor>\n    <contributor>\n      <name>Chas Honton</name>\n    </contributor>\n    <contributor>\n      <name>Chris Hyzer</name>\n    </contributor>\n    <contributor>\n      <name>Paul Jack</name>\n    </contributor>\n    <contributor>\n      <name>Marc Johnson</name>\n    </contributor>\n    <contributor>\n      <name>Shaun Kalley</name>\n    </contributor>\n    <contributor>\n      <name>Tetsuya Kaneuchi</name>\n    </contributor>\n    <contributor>\n      <name>Nissim Karpenstein</name>\n    </contributor>\n    <contributor>\n      <name>Ed Korthof</name>\n    </contributor>\n    <contributor>\n      <name>Holger Krauth</name>\n    </contributor>\n    <contributor>\n      <name>Rafal Krupinski</name>\n    </contributor>\n    <contributor>\n      <name>Rafal Krzewski</name>\n    </contributor>\n    <contributor>\n      <name>David Leppik</name>\n    </contributor>\n    <contributor>\n      <name>Eli Lindsey</name>\n    </contributor>\n    <contributor>\n      <name>Sven Ludwig</name>\n    </contributor>\n    <contributor>\n      <name>Craig R. McClanahan</name>\n    </contributor>\n    <contributor>\n      <name>Rand McNeely</name>\n    </contributor>\n    <contributor>\n      <name>Hendrik Maryns</name>\n    </contributor>\n    <contributor>\n      <name>Dave Meikle</name>\n    </contributor>\n    <contributor>\n      <name>Nikolay Metchev</name>\n    </contributor>\n    <contributor>\n      <name>Kasper Nielsen</name>\n    </contributor>\n    <contributor>\n      <name>Tim O'Brien</name>\n    </contributor>\n    <contributor>\n      <name>Brian S O'Neill</name>\n    </contributor>\n    <contributor>\n      <name>Andrew C. Oliver</name>\n    </contributor>\n    <contributor>\n      <name>Alban Peignier</name>\n    </contributor>\n    <contributor>\n      <name>Moritz Petersen</name>\n    </contributor>\n    <contributor>\n      <name>Dmitri Plotnikov</name>\n    </contributor>\n    <contributor>\n      <name>Neeme Praks</name>\n    </contributor>\n    <contributor>\n      <name>Eric Pugh</name>\n    </contributor>\n    <contributor>\n      <name>Stephen Putman</name>\n    </contributor>\n    <contributor>\n      <name>Travis Reeder</name>\n    </contributor>\n    <contributor>\n      <name>Antony Riley</name>\n    </contributor>\n    <contributor>\n      <name>Valentin Rocher</name>\n    </contributor>\n    <contributor>\n      <name>Scott Sanders</name>\n    </contributor>\n    <contributor>\n      <name>James Sawle</name>\n    </contributor>\n    <contributor>\n      <name>Ralph Schaer</name>\n    </contributor>\n    <contributor>\n      <name>Henning P. Schmiedehausen</name>\n    </contributor>\n    <contributor>\n      <name>Sean Schofield</name>\n    </contributor>\n    <contributor>\n      <name>Robert Scholte</name>\n    </contributor>\n    <contributor>\n      <name>Reuben Sivan</name>\n    </contributor>\n    <contributor>\n      <name>Ville Skytta</name>\n    </contributor>\n    <contributor>\n      <name>David M. Sledge</name>\n    </contributor>\n    <contributor>\n      <name>Michael A. Smith</name>\n    </contributor>\n    <contributor>\n      <name>Jan Sorensen</name>\n    </contributor>\n    <contributor>\n      <name>Glen Stampoultzis</name>\n    </contributor>\n    <contributor>\n      <name>Scott Stanchfield</name>\n    </contributor>\n    <contributor>\n      <name>Jon S. Stevens</name>\n    </contributor>\n    <contributor>\n      <name>Sean C. Sullivan</name>\n    </contributor>\n    <contributor>\n      <name>Ashwin Suresh</name>\n    </contributor>\n    <contributor>\n      <name>Helge Tesgaard</name>\n    </contributor>\n    <contributor>\n      <name>Arun Mammen Thomas</name>\n    </contributor>\n    <contributor>\n      <name>Masato Tezuka</name>\n    </contributor>\n    <contributor>\n      <name>Daniel Trebbien</name>\n    </contributor>\n    <contributor>\n      <name>Jeff Varszegi</name>\n    </contributor>\n    <contributor>\n      <name>Chris Webb</name>\n    </contributor>\n    <contributor>\n      <name>Mario Winterer</name>\n    </contributor>\n    <contributor>\n      <name>Stepan Koltsov</name>\n    </contributor>\n    <contributor>\n      <name>Holger Hoffstatte</name>\n    </contributor>\n    <contributor>\n      <name>Derek C. Ashmore</name>\n    </contributor>\n    <contributor>\n      <name>Sebastien Riou</name>\n    </contributor>\n    <contributor>\n      <name>Allon Mureinik</name>\n    </contributor>\n    <contributor>\n      <name>Adam Hooper</name>\n    </contributor>\n    <contributor>\n      <name>Chris Karcher</name>\n    </contributor>\n    <contributor>\n      <name>Michael Osipov</name>\n    </contributor>\n    <contributor>\n      <name>Thiago Andrade</name>\n    </contributor>\n    <contributor>\n      <name>Jonathan Baker</name>\n    </contributor>\n    <contributor>\n      <name>Mikhail Mazursky</name>\n    </contributor>\n    <contributor>\n      <name>Fabian Lange</name>\n    </contributor>\n    <contributor>\n      <name>Michał Kordas</name>\n    </contributor>\n    <contributor>\n      <name>Felipe Adorno</name>\n    </contributor>\n    <contributor>\n      <name>Adrian Ber</name>\n    </contributor>\n    <contributor>\n      <name>Mark Dacek</name>\n    </contributor>\n    <contributor>\n      <name>Peter Verhas</name>\n    </contributor>\n    <contributor>\n      <name>Jin Xu</name>\n    </contributor>\n    <contributor>\n      <name>Arturo Bernal</name>\n    </contributor>\n  </contributors>\n</project>\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}