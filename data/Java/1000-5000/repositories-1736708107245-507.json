{
  "metadata": {
    "timestamp": 1736708107245,
    "page": 507,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "HuanTanSheng/EasyPhotos",
      "stars": 3018,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0400390625,
          "content": ".DS_Store\n\n# Built application files\n*.ap_\n\n# Files for the ART/Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\nout/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n\n# Android Studio Navigation editor temp files\n.navigation/\n\n# Android Studio captures folder\ncaptures/\n\n# IntelliJ\n*.iml\n.idea\n.idea/workspace.xml\n.idea/modules.xml\n.idea/tasks.xml\n.idea/gradle.xml\n.idea/assetWizardSettings.xml\n.idea/dictionaries\n.idea/libraries\n.idea/caches\n\n# Keystore files\n# Uncomment the following line if you do not want to check your keystore files in.\n#*.jks\n\n# External native build folder generated in Android Studio 2.2 and later\n.externalNativeBuild\n\n# Google Services (e.g. APIs or Firebase)\ngoogle-services.json\n\n# Freeline\nfreeline.py\nfreeline/\nfreeline_project_description.json\n\n# fastlane\nfastlane/report.xml\nfastlane/Preview.html\nfastlane/screenshots\nfastlane/test_output\nfastlane/readme.md\n\n# test\n/src/test\n/src/androidTest"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 25.0107421875,
          "content": "# EasyPhotos    \n[![](https://jitpack.io/v/HuanTanSheng/EasyPhotos.svg)](https://jitpack.io/#HuanTanSheng/EasyPhotos)    \n\nQQ交流群：[EasyPhotos开发交流群：288600953](https://jq.qq.com/?_wv=1027&k=5QGgCDe)    (已满)     \n\nQQ交流群：[EasyPhotos开发交流群二群：212324053](https://jq.qq.com/?_wv=1027&k=t5JZYhwa)       \n\n[demo下载](https://raw.githubusercontent.com/HuanTanSheng/EasyPhotos/master/demo/release/demo-release.apk)     \n\n若无法下载demo，可以在QQ交流群的群文件下载，文件名为demo-release，下载最新的即可。\n\n\n| 无选中状态（默认UI色调）   | 选中状态（ [自定义UI色调](https://github.com/HuanTanSheng/EasyPhotos/wiki/10-%E8%87%AA%E5%AE%9A%E4%B9%89UI%E6%A0%B7%E5%BC%8F)）  | 其他功能（各功能可自选） |\n|:-----------:|:--------:|:---------:|\n|![](https://i.loli.net/2021/03/03/5WH96lA4L8nKxo2.png) | ![](https://i.loli.net/2021/03/03/svxeoD6ycPu1OqN.png) | ![](https://i.loli.net/2021/03/03/Pw1ZJ5l7YgmzctD.png)|\n\n| 专辑列表（默认UI色调） | 相册带广告（ [自定义UI色调](https://github.com/HuanTanSheng/EasyPhotos/wiki/10-%E8%87%AA%E5%AE%9A%E4%B9%89UI%E6%A0%B7%E5%BC%8F)） | 专辑列表带广告 |\n|:-------:|:---------:|:---------:|\n|![](https://i.loli.net/2021/03/03/wIQWPyV7XBs9hRo.png) | ![](https://i.loli.net/2021/03/03/bUY2CoMAG6ljZ8v.png) | ![](https://i.loli.net/2021/03/03/NvrCz3EJTOFLtwn.png)|  \n\n| 预览页   |  预览页单击图片转全屏模式 | 预览页缩放图片 | \n|:-------:|:---------:|:---------:|\n|![](https://i.loli.net/2021/03/03/dFoPMGl9KUne5Oa.png) | ![](https://i.loli.net/2021/03/03/VftUlwEO61PuGeY.png) | ![](https://i.loli.net/2021/03/03/E9zBil6WFAq4Xwc.png)|\n\n|预览页单击缩放图片显示操作栏 | 拼图选择页| 拼图选择页 |\n|:-------:|:---------:|:---------:|\n|![](https://i.loli.net/2021/03/03/as87EV531gCevLP.png) | ![](https://i.loli.net/2021/03/03/jo8T3CcPZbGkDUi.png) | ![](https://i.loli.net/2021/03/03/4YnsqWKDZEIFoBa.png)|    \n\n|拼图页 | 拼图页拼图功能| 拼图页文字贴纸功能 |\n|:-------:|:---------:|:---------:|\n|![](https://i.loli.net/2021/03/03/U65yWR4FBkbDPC9.png) | ![](https://i.loli.net/2021/03/03/OrZEWdwFh4K1Pyk.png) | ![](https://i.loli.net/2021/03/03/cnZyOAbF176vlzD.png)|\n\n|文字贴纸编辑页 | 示例功能列表 | 示例功能列表 |\n|:-------:|:---------:|:---------:|\n|![](https://i.loli.net/2021/03/03/4zBbLmpnxiHd5Jy.png) | ![](https://i.loli.net/2021/03/03/PUk2rTl5CRsxNJb.png) | ![](https://i.loli.net/2021/03/03/123Jtx7AlmDc9Lw.png)|    \n    \n    \n## 产品特色    \n- 兼容android 11\n- 兼容android 10\n- 支持复杂选择情况，如当用户可选视频和图片多类型时，可以设定选择视频后不可以选择图片，反之亦然。也可以设定视频和图片各自类型的选择数。\n- 支持绑定Glide、Picasso、Imageloader等所有图片加载库（fresco暂不支持），EasyPhotos并没有对他们进行依赖，不必担心冲突和体积问题。     \n- 状态栏字体颜色智能适配，当状态栏颜色趋近于白色时，字体颜色智能处理为深色     \n- 内部处理运行时权限，使用者无需考虑权限问题    \n- 清晰预览超大图和长图  \n- 拼一张功能（可配置开关，可独立作为拼图使用）    \n- 原图功能（可配置开关）    \n- 广告填充（可配置开关）     \n- 过滤图片（图片宽度、图片高度、文件大小三个维度任意选择和搭配）\n- 默认勾选图片（可配置）    \n- 图片预览（可全屏，可缩放）    \n- 支持动图gif显示，并支持只显示动图gif\n- 支持视频video显示，并支持只显示视频video\n- UI色值高度浓缩，仅为7种，自定义超简单     \n- 对Gif动图的处理（可配置开关是否显示，列表中以静态图+动图标识显示，预览大图时自动播放）    \n- 自带Bitmap相关方法（如添加水印、把View画成Bitmap、保存Bitmap等）    \n- 自带媒体库相关方法（如媒体文件更新到媒体库）    \n\n## 关于EasyPhotos的SDK及相关版本公示（androidx版本） \ncompileSdkVersion 30  \nminSdkVersion 15  \ntargetSdkVersion 30  \n\n## 关于EasyPhotos的SDK及相关版本公示（support版本） \ncompileSdkVersion 28  \nminSdkVersion 15  \ntargetSdkVersion 28      \nbuildToolsVersion '28.0.3'\n\n## 获取EasyPhotos（通过Gradle方式）\n首先，在项目的 `build.gradle（project）` 文件里面添加:\n\n```gradle\nallprojects {\n\trepositories {  \n\n        maven { url \"https://jitpack.io\" }\n\t\t\n    }\n}\n```\n\n最后，在你需要用到EasyPhotos的module中的 `build.gradle（module）` 文件里面添加：\n```gradle\ndependencies {  \n\n        implementation 'com.github.HuanTanSheng:EasyPhotos:3.1.5'  //androidx版本，支持android 10、11，永久维护\n      \n        //implementation 'com.github.HuanTanSheng:EasyPhotos:2.4.5' //还没有升级到androidx的同学可以用这个版本，但不支持android 10，暂停维护\n   \n}\n```    \n    \n    \n\n\n    \n       \n**如果你的 `android studio` 版本低于3.4.2版，有可能会打不开我的Demo，只需要修改Demo里面 `build.gradle（project）` 文件中的：**     \n\n```gradle  \n\ndependencies {\n        classpath 'com.android.tools.build:gradle:3.4.2'\n\t//把3.4.2改成你对应的版本即可，如果不清楚对应版本可以看看你其他正常项目的这里是怎么写的  \n\t}\n\n```    \n    \n## 关于混淆    \n  \n**EasyPhotos的混淆：**  \n```pro  \n\n-keep class com.huantansheng.easyphotos.models.** { *; }\n\n```\n\n    \n    \n  \n## EasyPhotos文档总录    \n\n## [EasyPhotos文档总录](https://github.com/HuanTanSheng/EasyPhotos/wiki)\n* [01-关于权限](https://github.com/HuanTanSheng/EasyPhotos/wiki/01-%E5%85%B3%E4%BA%8E%E6%9D%83%E9%99%90)\n* [02-相机与相册](https://github.com/HuanTanSheng/EasyPhotos/wiki/02-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E7%9B%B8%E5%86%8C)    \n* [03-拼图（单独使用）](https://github.com/HuanTanSheng/EasyPhotos/wiki/03-%E6%8B%BC%E5%9B%BE%EF%BC%88%E5%8D%95%E7%8B%AC%E4%BD%BF%E7%94%A8%EF%BC%89)      \n* [04-图片添加水印](https://github.com/HuanTanSheng/EasyPhotos/wiki/04-%E5%9B%BE%E7%89%87%E6%B7%BB%E5%8A%A0%E6%B0%B4%E5%8D%B0)     \n* [05-把View画成Bitmap](https://github.com/HuanTanSheng/EasyPhotos/wiki/05-%E6%8A%8AView%E7%94%BB%E6%88%90Bitmap)    \n* [06-保存Bitmap到指定文件夹](https://github.com/HuanTanSheng/EasyPhotos/wiki/06-%E4%BF%9D%E5%AD%98Bitmap%E5%88%B0%E6%8C%87%E5%AE%9A%E6%96%87%E4%BB%B6%E5%A4%B9)    \n* [07-Bitmap回收](https://github.com/HuanTanSheng/EasyPhotos/wiki/07-Bitmap%E5%9B%9E%E6%94%B6)\n* [08-更新媒体文件到媒体库](https://github.com/HuanTanSheng/EasyPhotos/wiki/08-%E6%9B%B4%E6%96%B0%E5%AA%92%E4%BD%93%E6%96%87%E4%BB%B6%E5%88%B0%E5%AA%92%E4%BD%93%E5%BA%93)\n* [09-屏幕方向设置](https://github.com/HuanTanSheng/EasyPhotos/wiki/09-%E5%B1%8F%E5%B9%95%E6%96%B9%E5%90%91%E8%AE%BE%E7%BD%AE)\n* [10-自定义UI样式](https://github.com/HuanTanSheng/EasyPhotos/wiki/10-%E8%87%AA%E5%AE%9A%E4%B9%89UI%E6%A0%B7%E5%BC%8F)\n* [11-多语言及修改文字信息](https://github.com/HuanTanSheng/EasyPhotos/wiki/11-%E5%A4%9A%E8%AF%AD%E8%A8%80)\n* [12-配置ImageEngine，支持所有图片加载库](https://github.com/HuanTanSheng/EasyPhotos/wiki/12-%E9%85%8D%E7%BD%AEImageEngine%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%BA%93)\n\n    \nQQ交流群：[288600953](https://jq.qq.com/?_wv=1027&k=5QGgCDe)    (已满)\nQQ交流群：[EasyPhotos开发交流群二群：212324053](https://jq.qq.com/?_wv=1027&k=t5JZYhwa)\n    \n       \n           \n\t   \n## 感谢    \n     \n[PhotoView](https://github.com/chrisbanes/PhotoView)：一个强大的图片缩放库，由[chrisbanes](https://github.com/chrisbanes) 大神编写    \n    \n[PuzzleView](https://github.com/wuapnjie/PuzzleView)：一个强大的拼图库，我的拼图功能是在此基础上实现，这个库由[wuapnjie](https://github.com/wuapnjie) 编写。    \n    \n## 编者语    \n\nEasyPhotos目前还在更新，欢迎各种Issues以及加群讨论，只是目前本人精力以及本职工作原因，更新不会频繁，只能保证不定期查看反馈统一修改，希望各位理解，感谢！  \nQQ交流群：[288600953](https://jq.qq.com/?_wv=1027&k=5QGgCDe) （已满）\nQQ交流群：[EasyPhotos开发交流群二群：212324053](https://jq.qq.com/?_wv=1027&k=t5JZYhwa)\n\n\n## 更新日志    \n\n**3.1.5：**\n- 新增：public AlbumBuilder setSelectedPhotos(ArrayList<Photo> selectedPhotos,boolean isSequentialSelectedPhotos)    \n       可自定义当传入已选中图片时，是否按照之前选中的顺序排序\n  \n**3.1.4：**    \n- 优化：多类型互斥选择时，最大选择数按照已选类型动态匹配 \n\n**3.1.3：**\n- 优化：线程安全\n- 优化：防止用户在外部多次点击重复打开相册页\n\n**3.1.1：**\n- 修复：在Q平台直接调用相机时的空指针问题\n\n**3.1.0：**\n- 适配：android 11\n- 重要：createAlbum方法新增useWidth参数\n       意义：是否需要使用图片的宽高数据\n       true：会保证宽高数据的正确性，耗时，扫描图片慢\n       false:不需要，宽高数据返回为0\n       特别声明：如果使用到宽高限制，则useWidth会强制为true\n- 重要：新增API：preLoad(Context cxt)，预加载，不调用该方法也不影响程序使用。单类型选择建议不调用该方法，某些机型第一次扫描多类型文件可能会慢，可以在app主页面或调用EasyPhotos的上一页做一次预加载,若未授权读取权限该功能失效但不影响程序使用。\n- 重要：start的链式回调模式，增加onCancel状态回调\n- 重要：EasyPhotos.addWatermark方法，新增返回Bitmap（既加水印后的Bitmap),新增orientation参数，int类型，Bitmap的旋转角度。当useWidth为true时，Photo实体类中会有orientation，若bitmap不是用户手机内图片，填0即可。\n- 重要：新增.complexSelector(boolean singleType,int videoCount,int pictureCount)，支持复杂选择情况，singleType为是否只能选择一种文件类型，如用户选择视频后不可以选择图片，若false则可以同时选择。后面两个参数为视频和图片各自类型的最大选择数。\n- 新增：内部新增加载框，可覆盖dialog_loading_easy_photos.xml文件进行自定义样式修改\n- 优化：优化图片读取速度\n- 优化：防止选择图片时多次点击完成按钮\n- 修复：三星机型添加水印后的图片旋转问题\n- 修复：部分机型取回uri为null的情况\n- 修复：只选择视频时，若视频为空时的提示语\n- 修复：android8的Only fullscreen opaque activities can request orientation 问题\n- 修复：无法调用一加8t相机问题，由群友[蜗牛](https://github.com/15010487565)贡献\n- 修复：偶现的ANR情况\n- 更新：subsampling-scale-image-view-androidx:3.10.0\n- 更新：androidx.appcompat:appcompat:1.2.0\n- 更新：androidx.constraintlayout:constraintlayout:2.0.4\n\n**3.0.6：**\n- 优化：优化超出选择最大数的提示信息\n\n**3.0.5：**\n- 修复：fix #112\n- 感谢：该版本由[XuQK](https://github.com/XuQK)贡献 \n\n**3.0.4：**\n- 优化：saveBitmapToDir方法兼容android10\n\n**3.0.3：**\n- 修复：修复华为nova 5i pro 在相机页面点击返回时产生的崩溃问题 #87\n\n**3.0.2：**\n- 重要：拼图和加水印功能适配android 10\n- 感谢：该版本由[zhangshaobo87](https://github.com/zhangshaobo87)贡献 \n\n**3.0.1：**\n- 重要：兼容android 10\n- 重要：因为android 10 不支持用path路径显示图片，所以回调取消了单独获取path集合的回调，只保留获取Photo集合的回调，如需使用path，可以在Photo对象中获取\n- 重要：ImageEngine接口（因为android 10 不支持用path路径显示图片，所以全部改为Uri的形式），望升级用户周知\n\n**2.5.2：** \n- 优化：修复ArrayList在多线程中addItem出现的角标越界问题\n\n**2.4.9：** \n- 重要：升级到gradle:3.4.2，低版本studio可能因为该项升级而产生错误，建议升级studio或手动修改classpath 'com.android.tools.build:gradle:3.4.2'到你的可用版本\n- 优化：修复预览视频封面为黑色图片问题 \n\n**2.4.8：** \n- 优化：修复预览页预览大图片和长图片时清晰度模糊问题   \n\n**2.4.7：** \n- 优化：修复相册页在部分机型会闪现权限提醒UI问题   \n\n**2.4.6：** \n- 优化：支持androidx\n\n**2.4.5：** \n- 修复：当相机按钮位置在图片第一张时，点击相册页底部中间的编辑按钮会导致右下角相机按钮也显示出来\n- 修复：仅显示视频时，全部视频文件夹视频重复添加问题\n- 修复：点击视频无法播放问题\n- 感谢：该版本由[SMask](https://github.com/SMask)贡献 \n   \n**2.4.4：**     \n- 修复：修复2.4.3版本引发的图片数据加载缓慢问题\n- 感谢：该版本由[joker-fu](https://github.com/joker-fu)贡献\n   \n**2.4.3：**     \n- 新增：start(SelectCallback callback)启动方式，通过接口回调数据\n- 新增：filter(String... types)方式控制只显示的文件类型，支持Type.GIF和Type.VIDEO，前提是已经选择显示了gif和video\n- 新增：对显示视频的时长过滤api\n- 新增：单独对图片和视频的最大选择数控制\n- 新增：支持相机按钮位置设置，setCameraLocation(@Setting.Location int cLocation)//默认左下角，通过设置可设置为相册第一张图片的位置    \n- 优化：预览页\n- 感谢：该版本由[joker-fu](https://github.com/joker-fu)、[SMask](https://github.com/SMask)贡献 \n- 提示：新的api详见[wiki](https://github.com/HuanTanSheng/EasyPhotos/wiki/02-%E7%9B%B8%E6%9C%BA%E4%B8%8E%E7%9B%B8%E5%86%8C) \n   \n**2.4.1：**     \n- 优化：2.4.0中的代码\n- 感谢：该版本由[joker-fu](https://github.com/joker-fu)、[SMask](https://github.com/SMask)贡献\n        \n**2.4.0：**     \n- 感谢：该版本由[joker-fu](https://github.com/joker-fu)贡献\n- 新增：视频选择功能    \n- 新增API：是否启动视频选择，setVideo（boolean shouldShow）    \n- 优化：默认不显示gif图，可通过setGif（boolean shouldShow）控制是否显示    \n\n**2.3.6：**     \n- 修复：2.3.5出现的拼图错误    \n- 优化：解决部分机型在全屏预览图片返回到相册选择界面时状态栏闪烁的问题（感谢@wqxcloud）    \n- 优化：相册UI（将原底部操作栏中间的设置按钮样式改为编辑样式）        \n- 新增：相册页底部操作栏中间的编辑按钮，会根据开发者配置的清空按钮、原图按钮、拼图按钮使用情况进行显示或隐藏。（当清空按钮、原图按钮、拼图按钮都不显示时，编辑按钮隐藏。其余条件均显示。）    \n- 新增：可配置相册页清空按钮是否显示（详见wiki）       \n    \n**2.3.5：**     \n- 修复：修复文字贴纸自动生成日期错误    \n- 优化：AlbumModel类，更加节省内存 （感谢@ofexe）   \n- 升级：compileSdkVersion 升级为28，buildToolsVersion 升级为 '28.0.3'    \n    \n**2.3.4：**    \n- 修复：坚果pro和荣耀8在特殊情况下无法获取媒体文件路径的问题        \n    \n**2.3.3：**    \n- 优化：过滤媒体库中存在但实际不存在的图片    \n    \n**2.3.2：**    \n- 优化：状态栏颜色独立为easy_photos_status_bar    \n    \n\n**2.3.1：**    \n- 新增：调用相册支持Fragment直接调用，走Fragment的result回调    \n- 修复：三星S3拍照错误     \n- 修复：魅族用户在极端操作下的权限错误     \n- 修复：app在后台时，因设备内存不足而回收资源后，在任务列表中启动app后的异常    \n    \n**2.3.0：**    \n- 修复4.4.3YouTaPhone拍照时相机停止运行错误    \n- 修复相册中没有图片情况下，EasyPhotos自动前往相机拍照时，发生的错误    \n\n**2.2.9：**        \n- 重要修改：Photo类中的time字段的单位改为毫秒    \n- 优化：图片排序算法调整为与系统相册排序算法类似    \n- 优化：内存泄露情况    \n- 修复：部分机型出现少许图片丢失情况    \n- 修复：部分机型不读扩展SD卡中照片的情况    \n- 修复：三星的部分机型clearFilterColor（）方法无效的情况    \n- 修复：三星的部分机型因在xml中绑定点击事件导致的点击无效的情况    \n- 修改：单选选中图标改为数字1    \n- 其他：demo中新增了内存泄露检测工具，如使用中发现内存泄露，麻烦告知，我将第一时间处理，感谢！\n\n\n**2.2.8：**    \n- bug修复：在预览页点击最后一张的选择无效，以及因此产生的数组越界bug    \n- bug修复：极少情况下的预览页直接返回产生的空指针问题    \n- 感谢@zijinzhiyun 反馈以上bug\n    \n    \n**2.2.6：**    \n- api修改：为统一api标准，将所有返回Key统一为EasyPhotos.RESULT_PHOTOS和EasyPhotos.RESULT_PATHS。带来的改变就是单独使用拼图功能时的图片返回Key改为EasyPhotos.RESULT_PHOTOS和EasyPhotos.RESULT_PATHS，去除原来的EasyPhotos.RESULT_PUZZLE_PHOTO和-\nEasyPhotos.RESULT_PUZZLE_PATH这两个Key。      \n- UI修改：预览页状态栏颜色与colorPrimaryDark色值对应。若其色值趋近于白色，在无虚拟按键的手机中状态栏字体颜色智能适配为深色，有虚拟按键的手机中状态栏智能优化为透明色。（除预览页外，其他页面若状态栏颜色趋近于白色，无论任何机型均为智能优化字体颜色为深色，[查看详情。](https://github.com/HuanTanSheng/EasyPhotos/wiki/10-%E8%87%AA%E5%AE%9A%E4%B9%89UI%E6%A0%B7%E5%BC%8F)）     \n- 错误修复：修复努比亚机型的预览页占用导航栏问题      \n\n**2.2.4：**    \n- 优化：单独启动相机时无需配置图片加载引擎       \n- 优化：示例中配置Glide4.x为图片加载引擎的示例文件改为单例模式    \n\n**2.2.3：**    \n- 修复拼一张更换图片时发生的错误    \n- 修复单独启动相机时的权限错误    \n- 优化混淆规则    \n\n**2.2.2：**    \n- 重大更新：EasyPhotos去除了Glide的依赖，并对外提供ImageEngine接口，通过对ImageEngine接口的实现，使用者可以快速绑定如Glide、picasso、fresco、Imageloader等你正在使用的任意图片加载库。[点击查看详情](https://github.com/HuanTanSheng/EasyPhotos/wiki/12-%E9%85%8D%E7%BD%AEImageEngine%EF%BC%8C%E6%94%AF%E6%8C%81%E6%89%80%E6%9C%89%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%BA%93)    \n- 界面优化：优化单选图标    \n- 修改文字贴纸的文字编辑页面中，底部操作栏的背景色为固定色值（其实也可以改，看看EasyPhotos的color文件你就知道怎么改）\n\n    \n**2.1.0：**    \n- 新增功能：EasyPhotos智能识别状态栏的背景颜色，当其趋近于白色时，智能适配深色状态栏字体。（该功能仅对6.0以上系统生效，并没有适配6.0以下的小米和魅族，如有需要可以加群交流）    \n- 新增功能：可配置是否显示Gif动图    \n- 功能优化：Gif动图的处理方式。\n- 界面优化：Gif动图、相机按钮等。\n- 新增字段：    \n````java    \n<string name=\"gif_easy_photos\">动图</string>    \n````    \n具体查看[11-多语言](https://github.com/HuanTanSheng/EasyPhotos/wiki/11-%E5%A4%9A%E8%AF%AD%E8%A8%80)    \n\n- 内部升级：最新版编译工具和最新版sdk\n\n**2.0.2：**    \n- 升级：Glide到4.5.0（不影响低版本使用）    \n- 修复：拼一张功能因图片过多过大导致的oom问题    \n- 感谢@[Beiler](https://github.com/beiler) 提出的反馈      \n    \n    \n**2.0.1：**    \n- 修复bug：单独使用拼图功能时，以图片路径为参数时产生的数组越界bug。   \n\n**2.0.0：**   \n- 新增功能：相册内部自带拼一张功能（可通过配置不使用该功能，该模式拼图保存的图片存储在 sd卡根目录/你的app_name 文件夹下）   \n- 新增功能：拼图页面增加文字贴纸功能    \n- 界面优化：无权限时的相册界面优化，使之更加友好    \n- 界面优化：相机按钮优化，视觉和体验上都更加友好    \n- 界面优化：专辑列表细节优化，更加自然、大气     \n- 功能优化：相册界面打开相机，拍照后不直接返回，而是默认选中拍完的图片，停留在相册界面\n- 字段增加：具体查看[11-多语言](https://github.com/HuanTanSheng/EasyPhotos/wiki/11-%E5%A4%9A%E8%AF%AD%E8%A8%80)      \n- 重要修改：Photo对象去除isCamera成员变量。构造函数也因此相应改变，少了一个参数。\n- 重要修改：setFileProviderAuthoritiesText（）方法更改为setFileProviderAuthority（）方法    \n- 重要修改：UI色值重新定义，由原来的三十几种色值统一修改为7个色值，自定义起来更加方便。具体查看[10-自定义UI样式](https://github.com/HuanTanSheng/EasyPhotos/wiki/10-%E8%87%AA%E5%AE%9A%E4%B9%89UI%E6%A0%B7%E5%BC%8F)\n\n\n\n**1.3.2：**   \n- 新增功能：    \n    - 拼图（最多对9张图片进行拼图，无需关心运行时权限，内部处理好了）    \n    - 把View画成Bitmap    \n    - 保存bitmap到本地（可设置是否更新到媒体库，如果调用此方法前没有进入过EasyPhotos的相册或相机，则需要你自己处理读写权限）      \n- 更换相册单选的选中图标样式    \n- 修复回调选中地址的key：RRESULT_PATHS 修复为 RESULT_PATHS。（ps：对如此智障的疏忽表示歉意。）    \n- 修复永久不给权限情况下，退出相册时发生的错误    \n- 修复调用系统权限设置页返回时，相册页面或拼图页面自销毁情况\n- 新增字符串：    \n```java    \n    <string name=\"done_easy_photos\">完成</string>\n    <string name=\"cancel_easy_photos\">取消</string>\n    <string name=\"template_easy_photos\">模板</string>    \n```   \n- 新增色值：    \n```java   \n    <!--图片预览页-->\n    <color name=\"preview_status_easy_photos\">#d73c3d41</color>//api21以上预览页状态栏颜色为该色值；api19和api20状态栏为透明色；其余api状态栏或透明或黑或灰，取决于各家rom和有无实体按键等因素。注：其余页面状态栏根据你的主题走\n\n    <!--拼图页-->\n    <color name=\"puzzle_background_easy_photos\">#000000</color>//拼图页面背景色\n    <color name=\"puzzle_selected_frame_easy_photos\">#57a457</color>//拼图页面当前处理item的边框颜色\n    <color name=\"puzzle_selected_controller_easy_photos\">#00AA00</color>//拼图页面当前处理item的操作bar颜色，就是item边框中凸起矩形的色值\n    <color name=\"puzzle_menu_easy_photos\">#969696</color>//拼图页面的文字按钮和示例图片颜色\n    <color name=\"puzzle_menu_done_easy_photos\">#009700</color>//拼图页面的完成按钮文字颜色\n    <color name=\"puzzle_bottom_bar_line_easy_photos\">#ee3a3a3e</color>//拼图的底部栏间隔颜色\n    <color name=\"puzzle_photo_background\">#ffffff</color>//图片的背景颜色    \n```\n    \n**1.2.8：**    \n- 修复'选中图片列表'点击状态下与'大图列表和选择器'的联动错误    \n\n**1.2.7：**    \n- 大图预览页新增：大图列表与选中图片列表联动    \n- 升级 classpath 'com.android.tools.build:gradle:3.0.1'    \n- 新增色值：    \n```java    \n<color name=\"preview_bottom_bar_easy_photos\">#eb212123</color>//预览页的底部栏和选中图片列表背景颜色    \n<color name=\"preview_bottom_bar_line_easy_photos\">#ee3a3a3e</color>//预览页的底部栏与选中图片列表的分割线颜色    \n```   \n\n**1.2.6：**    \n- 正式开放，投入使用   \n- 广告view可以传空，适用于VIP不显示广告场景\n\n**1.2.3：**    \n- 优化图片限制方式：最小宽度、最小高度、最小文件大小    \n- 如果单一设置，满足条件即过滤    \n- 如果多项设置，满足一项即过滤    \n\n**1.2.2：**     \n- 新增返回结果：图片地址集合   \n- 新增返回结果：用户是否选中原图选项    \n- 新增返回结果：图片信息集合    \n- 新增设置默认勾选图片集合方式：图片地址集合   \n- 新增设置默认勾选图片集合方式：图片信息集合   \n\n**1.2.1：**   \n- 优化预览界面全屏动效\n- 优化Photo实体对象  \n\n**1.2.0：**   \n- 升级图片选取返回信息（图片地址/宽高/文件大小/文件修改时间/文件类型/用户是否点击原图选项/文件名）\n- 图片选择新增原图选项\n- 预览界面支持选择完成\n- 预览界面支持当前图片位置显示   \n\n**1.1.1：**   \n- 优化相机和相册的调用API，使之更加友好    \n\n**1.1.0：**   \n- 增加图片添加水印功能  \n- 增加媒体文件更新到媒体库功能\n\n**1.0.9：**   \n- 优化三星部分机型因图片更新到媒体库时没有更新宽高信息时EasyPhotos相册不显示该图片问题\n\n**1.0.8：**   \n- 优化自定义UI和多语言\n\n**1.0.7：**   \n- 性能优化\n\n**1.0.6：**   \n- 修复华为VNS-L31机型拍照无返回问题\n\n**1.0.5：**   \n- 修复拍照切换横竖屏发生内存泄漏\n- 修复切换语言时产生错误\n- 升级glide为最新版4.3.0   \n\n**1.0.4：**    \n- 直接启动相机  \n- 相册单选  \n- 相册多选  \n- 相册中支持添加自定义广告  \n- 图片预览（缩放/全屏）\n- UI可定制  \n- 根据图片宽高进行过滤 \n- 修复无图片显示时的异常    \n- 内部处理权限问题，无需配置，无需处理运行时权限\n    \n    \n    \n\n  \n\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.5947265625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\nbuildscript {\n    repositories {\n        jcenter()\n        mavenCentral()\n        maven { url 'https://maven.google.com' }\n        google()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.4.2'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.0'\n\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        mavenCentral()\n        maven { url \"https://jitpack.io\" }\n        google()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "easyPhotos",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.7646484375,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\nandroid.enableJetifier=true\nandroid.useAndroidX=true\norg.gradle.jvmargs=-Xmx1536m\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0302734375,
          "content": "include ':demo', ':easyPhotos'\n"
        }
      ]
    }
  ]
}