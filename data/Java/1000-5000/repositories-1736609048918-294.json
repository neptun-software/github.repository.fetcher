{
  "metadata": {
    "timestamp": 1736609048918,
    "page": 294,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "linkedin/databus",
      "stars": 3651,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 4.2666015625,
          "content": "*.ipr\n*.iml\n*.classpath\n*.project\n*.settings\n*.pyc\n*.dbus\n*.gz\n.gradle/\nbuild/\ndatabase/databus2-bootstrap/bin/\ndatabase/oracle/bin/README\ndatabase/oracle/bin/fwk/\ndatabase/templates/bin/\ndatabus-bootstrap-client/databus-bootstrap-client-impl/bin/\ndatabus-bootstrap-client/databus-bootstrap-client-run/bin/\ndatabus-bootstrap-common/databus-bootstrap-common-api/bin/\ndatabus-bootstrap-common/databus-bootstrap-common-impl/bin/\ndatabus-bootstrap-producer/databus-bootstrap-producer-cmdline-pkg/bin/\ndatabus-bootstrap-producer/databus-bootstrap-producer-impl/bin/\ndatabus-bootstrap-producer/databus-bootstrap-producer-perf-test/bin/\ndatabus-bootstrap-producer/databus-bootstrap-producer-run/bin/\ndatabus-bootstrap-server/databus-bootstrap-server-impl/bin/\ndatabus-bootstrap-server/databus-bootstrap-server-run/bin/\ndatabus-bootstrap-utils/databus-bootstrap-utils-impl/bin/\ndatabus-bootstrap-utils/databus-bootstrap-utils-run/bin/\ndatabus-bootstrap-utils/databus-bootstrap-utils-seeder-pkg/bin/\ndatabus-client/databus-client-api/bin/\ndatabus-client/databus-client-common/bin/\ndatabus-client/databus-client-http/bin/\ndatabus-client/databus-client-run/bin/\ndatabus-client/databus2-client-util-pkg/bin/\ndatabus-client/databus2-client-util/bin/\ndatabus-core/databus-core-container/bin/\ndatabus-core/databus-core-fwk-test/bin/\ndatabus-core/databus-core-impl/bin/\ndatabus-core/databus-core-schema-tools-pkg/bin/build.gradle\ndatabus-core/databus-core-schema-tools/bin/\ndatabus-core/databus-core-schemas-test/bin/\ndatabus-core/databus-core-schemas/bin/\ndatabus-events/databus-events-anet/bin/\ndatabus-events/databus-events-bizfollow/bin/\ndatabus-events/databus-events-cappr/bin/\ndatabus-events/databus-events-company/bin/\ndatabus-events/databus-events-conns/bin/\ndatabus-events/databus-events-entitlements/bin/\ndatabus-events/databus-events-eos/bin/\ndatabus-events/databus-events-espresso-ucp/bin/\ndatabus-events/databus-events-feeds/bin/\ndatabus-events/databus-events-following/bin/\ndatabus-events/databus-events-forum/bin/\ndatabus-events/databus-events-fuse/bin/\ndatabus-events/databus-events-jobs/bin/\ndatabus-events/databus-events-leo/bin/\ndatabus-events/databus-events-liar/bin/\ndatabus-events/databus-events-mbrrec/bin/\ndatabus-events/databus-events-member2/bin/\ndatabus-events/databus-events-news/bin/\ndatabus-events/databus-events-sas/bin/\ndatabus-events/databus-events-sdr/bin/\ndatabus-events/databus-events-targeting/bin/\ndatabus-events/databus-events/bin/\ndatabus-group-leader/databus-group-leader-api/bin/\ndatabus-group-leader/databus-group-leader-example/bin/\ndatabus-group-leader/databus-group-leader-impl/bin/\ndatabus-profile-client/databus-profile-client-impl/bin/\ndatabus-profile-client/databus-profile-client-run/bin/\ndatabus-relay/databus-relay-run/bin/\ndatabus-util-cmdline/databus-util-cmdline-impl/bin/\ndatabus2-example/database/bin/\ndatabus2-example/databus2-example-client-pkg/bin/\ndatabus2-example/databus2-example-client/bin/\ndatabus2-example/databus2-example-person/bin/\ndatabus2-example/databus2-example-relay-pkg/bin/\ndatabus2-example/databus2-example-relay/bin/\ndatabus2-linkedin-relay/databus2-linkedin-relay-impl/bin/\ndatabus2-linkedin-relay/databus2-linkedin-relay-run/bin/\ndatabus2-maxscn/\ndatabus2-relay/databus2-relay-cmdline-pkg/bin/\ndatabus2-relay/databus2-relay-impl/bin/\ndatabus3-linkedin-relay/databus3-linkedin-relay-impl/bin/\ndatabus3-relay/databus-cluster-manager-utils/bin/\ndatabus3-relay/databus-rpldbus-manager/bin/\ndatabus3-relay/databus3-relay-cmdline-pkg/bin/\ndatabus3-relay/databus3-relay-espresso-impl/bin/\ndatabus3-scripts/databus3-op-scripts-pkg/bin/\nintegration-test/config/bin/\nintegration-test/data/bin/\nintegration-test/integ-zookeeper/bin/\nintegration-test/integration-test-espresso/bin/\nintegration-test/integration-test-integ-ng/bin/\nintegration-test/integration-test-integ/bin/\nintegration-test/integration-test-performance/bin/\nintegration-test/integration-test-relaylocal/bin/\nintegration-test/lib/bin/\nintegration-test/lib/espresso/dist-espresso-router/\nintegration-test/lib/espresso/dist-espresso-tools/\nintegration-test/lib/espresso/dist/\nintegration-test/lib/espresso/espresso.log\nintegration-test/lib/espresso/espresso2.log\nintegration-test/lib/espresso/gc.log\nintegration-test/script/bin/\nintegration-test/testcases/bin/\nintegration-test/var/\nliarclient-checkpoints1/\nliarclient-checkpoints2/\nlogs/\nrmiservers/\n"
        },
        {
          "name": ".rat-excludes",
          "type": "blob",
          "size": 0.1787109375,
          "content": "build\nbuild.gradle\nbuild_script\nCHANGELOG\ncodecoverage\nconfig\ndatabase\ndefaultEnvironment.gradle\ndoc\nintegration-test\njavadoc\nLICENSE.txt\nREADME\nsandbox-repo\nsettings.gradle\nsvninfo\n\n"
        },
        {
          "name": ".reviewboardrc",
          "type": "blob",
          "size": 0.021484375,
          "content": "REPOSITORY='databus2'\n"
        },
        {
          "name": "CHANGELOG_OPENSOURCE",
          "type": "blob",
          "size": 1.365234375,
          "content": "\n12/2/2013: Open source release from internal version 2.1.191\n\nFeatures :\n - Resolved https://github.com/linkedin/databus/issues/8\n - Fix a double-counting statistics bug for client metrics (numDataEvents)\n\n11/05/2013 : Open source release from internal version 2.1.190\n\nFeatures:\n- A new GoldenGate adapter using XML trail files\n- Client networking simplification\n- Refactored buffer management code to support multiple binary event format.\n  - Added a new binary format to support source-specific metadata\n- Connection tracking of requests coming in/out from relays/bootstrap services \n  ( making it easier to debug when connected over hardware VIPs )\n\nBug fixes:\n- Bug fixes across all components.\n\nOperability Improvements:\n- Command-line packages to read events from bootstrap database\n\n11/05/2013 : Open release from internal version 2.1.190\n\nFeatures:\n- A new GoldenGate adapter using XML trail files\n- Client networking simplification\n- Refactored buffer management code to support multiple binary event format.\n  - Added a new binary format to support source-specific metadata\n- Connection tracking of requests coming in/out from relays/bootstrap services \n  ( making it easier to debug when connected over hardware VIPs )\n\nBug fixes:\n- Bug fixes across all components.\n\nOperability Improvements:\n- Command-line packages to read events from bootstrap database\n\n02/26/2013 : Initial commit\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0986328125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2013 LinkedIn Corp. All rights reserved\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.3232421875,
          "content": "# Introduction\n==============\n\n[![Join the chat at https://gitter.im/linkedin/databus](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/linkedin/databus?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\nIn Internet architectures, data systems are typically categorized into source-of-truth systems that serve as primary stores for the user-generated writes, and derived data stores or indexes which serve reads and other complex queries. The data in these secondary stores is often derived from the primary data through custom transformations, sometimes involving complex processing driven by business logic. Similarly, data in caching tiers is derived from reads against the primary data store, but needs to get invalidated or refreshed when the primary data gets mutated. A fundamental requirement emerging from these kinds of data architectures is the need to reliably capture, flow and process primary data changes.\n\nWe have built Databus, a source-agnostic distributed change data capture system, which is an integral part of LinkedIn's data processing pipeline. The Databus transport layer provides latencies in the low milliseconds and handles throughput of thousands of events per second per server while supporting infinite look back capabilities and rich subscription functionality. \n\n# Use-cases\n*****\nTypically, Primary OLTP data-stores take user facing writes and some reads, while other specialized systems serve complex queries or accelerate query results through caching. The most common data systems found in these architectures include relational databases, NoSQL data stores, caching engines, search indexes and graph query engines. This specialization has in turn made it critical to have a reliable and scalable data pipeline that can capture these changes happening for primary source-of-truth systems and route them through the rest of the \ncomplex data eco-system. There are two families of solutions that are typically used for building such a pipeline.\n\n### Application-driven Dual Writes:\nIn this model, the application layer writes to the database and in parallel, writes to another messaging system. This looks simple to implement since the application code writing to the database is under our control. However it introduces a consistency problem because without a complex co-ordination protocol (e.g. Paxos or 2-Phase Commit ) it is hard to ensure that both the database and the messaging system are in complete lock step with each other in the face of failures. Both systems need to process exactly the same writes and need to serialize them in exactly the same order. Things get even more complex if the writes are conditional or have partial update semantics.\n\n### Database Log Mining: \nIn this model, we make the database the single source-of-truth and extract changes from its transaction or commit log. This solves our consistency issue, but is practically hard to implement\nbecause databases like Oracle and MySQL (the primary data stores in use at LinkedIn) have transaction log formats and replication solutions that are proprietary and not guaranteed to have \nstable on-disk or on-the-wire representations across version upgrades.  Since we want to process the data changes with application code and then write to secondary data stores,\nwe need the replication system to be user-space and source-agnostic. This independence from the data source is especially important in fast-moving technology companies, because it avoids \ntechnology lock-in and tie-in to binary formats throughout the application stack.\n\nAfter evaluating the pros and cons of the two approaches, we decided to pursue the log mining option, prioritizing consistency and \"single source of truth\" over ease of implementation. In this paper, we introduce Databus, Change Data Capture pipeline at LinkedIn, which supports Oracle sources and a wide range of downstream applications. The Social Graph Index which serves all graph queries at LinkedIn, the People Search Index that powers all searches for members at LinkedIn and the various read replicas for our Member Profile data are all fed and kept consistent via Databus.\n\nMore details about the architecture, usecases and performance evaluation can be obtained from a paper that got accepted for publication at the ACM Symposium on Cloud Computing - 2012. The slides for the presentation are available [here](http://www.slideshare.net/ShirshankaDas/databus-socc-2012)\n\n# How to build ?\n*****\nDatabus requires a library distributed by Oracle Inc under Oracle Technology Network License. Please accept that license [here](http://www.oracle.com/technetwork/licenses/distribution-license-152002.html), and download ojdbc6.jar with version at 11.2.0.2.0 [here](http://www.oracle.com/technetwork/database/enterprise-edition/jdbc-112010-090769.html). Once you download the driver jar, please copy it under sandbox-repo/com/oracle/ojdbc6/11.2.0.2.0/ and name it ojdbc6-11.2.0.2.0.jar as shown below. We have provided a sample .ivy file to facilitate the build.\n\nDatabus will **NOT** build without this step. After downloading the jars, they may be copied under the directory sandbox-repo as :\n* sandbox-repo/com/oracle/ojdbc6/11.2.0.2.0/ojdbc6-11.2.0.2.0.jar\n* sandbox-repo/com/oracle/ojdbc6/11.2.0.2.0/ojdbc6-11.2.0.2.0.ivy\n\n# Build System\n*****\nDatabus currently needs gradle version 1.0 or above to build. The commands to build are :\n* `gradle -Dopen_source=true assemble` -- builds the jars and command line package\n* `gradle -Dopen_source=true clean`    -- cleans the build directory\n* `gradle -Dopen_source=true test`     -- runs all the unit-tests that come packaged with the source\n\n# Licensing\n*****\nDatabus will be licensed under Apache 2.0 license.\n\n# Full Documentation\n*****\nSee our [wiki](https://github.com/linkedin/databus/wiki) for full documentation and examples.\n\n# Example Relay\n*****\nAn example of writing a DatabusRelay is available at PersonRelayServer.java. To be able to start a relay process, the code is packaged into a startable command-line package. The tarball may be obtained from build/databus2-example-relay-pkg/distributions/databus2-example-relay-pkg.tgz. This relay is configured to get changestreams for a view \"Person\".\n\nAfter extracting to a directory, please cd to that directory and start the relay using the following command :\n* `./bin/start-example-relay.sh person`\n\nIf the relay is started successfully, the output of the following curl command would look like :\n* $ `curl http://localhost:11115/sources`\n* `[{“name”:“com.linkedin.events.example.person.Person”,“id”:40}]`\n\n# Example Client\n*****\nAn example of writing a DatabusClient is available at PersonClientMain.java. To easily be able to start the client process, the code is packaged into a startable command-line package. The tarball may be obtained from build/databus2-example-client-pkg/distributions/databus2-example-client-pkg.tgz. This client is configured to get data from the relay started previously, and configured to susbscribe for table Person.\n\nAfter extracting to a directory, please cd to that directory and start the client using the following command :\n* `./bin/start-example-client.sh person`\n\nIf the client successfully connects to the relay we created earlier, the output of the following curl command would look like below ( indicating a client from localhost has connected to the relay ):\n* $`curl http://localhost:11115/relayStats/outbound/http/clients`\n* `[\"localhost\"]`\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.5595703125,
          "content": "subprojects {\n   apply from: rootProject.file(\"subprojects.gradle\")\n\n   dependencies {\n        //runtime externalDependency.log4j\n        // Force easymock to version 3.1. One of the espresso dependencies changes it to 2.4\n        // and v2.4 does not support mocking of classes, causing our espresso unit tests\n        // to break.\n        //runtime(externalDependency.easymock) {\n        //    force = true\n        //}\n        //compile(externalDependency.easymock) {\n        //    force = true\n       //}\n    }\n}\n\ntask wrapper(type: Wrapper) {\n  gradleVersion = '1.8'\n}\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.626953125,
          "content": "#!/bin/bash\n#\n# Copyright 2013 LinkedIn Corp. All rights reserved\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n#\n\ngradle -Dopen_source $*\n"
        },
        {
          "name": "build_script",
          "type": "tree",
          "content": null
        },
        {
          "name": "database",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-bootstrap-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-bootstrap-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-bootstrap-producer",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-bootstrap-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-bootstrap-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-cluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-group-leader",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-relay",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus-util-cmdline",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus2-example",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus2-gg",
          "type": "tree",
          "content": null
        },
        {
          "name": "databus2-relay",
          "type": "tree",
          "content": null
        },
        {
          "name": "db",
          "type": "tree",
          "content": null
        },
        {
          "name": "defaultEnvironment.gradle",
          "type": "blob",
          "size": 0.921875,
          "content": "repositories {\n  // for open source we cannot user internal repo\n  // so we add few open source ones\n  mavenCentral()\n  maven {\n\turl \"https://repo.fusesource.com/maven2\"\n  }\n  maven {\n\turl \"https://maven.restlet.org\"\n  }\n\n  // local repo for libs we have to ship with     \n  def sandBoxRepo = \"${project.rootDir}/sandbox-repo\"\n  def sandBoxExists = new File(sandBoxRepo).isDirectory()\n  if (sandBoxExists) {\n    logger.debug \"Adding repository $sandBoxRepo\"\n\tproject.repositories.ivy {\n\t  name \"sanboxRepo\"\n      url sandBoxRepo\n      layout \"pattern\", {\n        artifact \"[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier]).[ext]\"\n        ivy \"[organisation]/[module]/[revision]/[module]-[revision].ivy\"\n        m2compatible = true\n      }\n    }\n  } else {\n    logger.debug \"Not adding repository $sandBoxRepo as the directory does not exist.\"\n  }\n}\n\nproject.buildDir = new File(project.rootProject.buildDir, project.name)\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.7294921875,
          "content": "#-------------------------------------------------------------\n#For details on recommended settings, see go/gradle.properties\n#-------------------------------------------------------------\n\n#long-running Gradle process speeds up local builds\n#to stop the daemon run 'ligradle --stop'\norg.gradle.daemon=true\n\n#configures only relevant projects to speed up the configuration of large projects\n#useful when specific project/task is invoked e.g: ligradle :cloud:cloud-api:build\norg.gradle.configureondemand=true\n\n#Gradle will run tasks from subprojects in parallel\n#Higher CPU usage, faster builds\norg.gradle.parallel=false\n\n#Allows generation of idea/eclipse metadata for a specific subproject and its upstream project dependencies\nide.recursive=true"
        },
        {
          "name": "javadoc",
          "type": "tree",
          "content": null
        },
        {
          "name": "merge-source-trees.sh",
          "type": "blob",
          "size": 3.3779296875,
          "content": "#!/bin/bash\n# merge-source-trees.sh:  Merge all databus* subprojects into unified source\n#   tree for code-coverage tests.  (No need for integration-test or perf trees\n#   at this point.)\n#\n# Typical directory structure looks like this:\n#\n#   databus2-relay\n#   └── databus2-relay-impl\n#       └── src\n#           ├── main\n#           │   └── java\n#           │       └── com\n#           │           └── linkedin\n#           │               ├── databus\n#           │               │   ├── container\n#           │               │   │   ├── netty\n#           │               │   │   └── request\n#           │               │   ├── core\n#           │               │   │   └── util\n#           │               │   └── monitoring\n#           │               │       ├── events\n#           │               │       └── mbean\n#           │               └── databus2\n#           │                   ├── producers\n#           │                   │   └── db\n#           │                   └── relay\n#           │                       └── config\n#           └── test\n#               └── java\n#                   └── com\n#                .      └── linkedin\n#               /|\\         ├── databus\n#                |          │   ├── container\n#                |          │   │   └── netty\n#                |          │   └── core\n#                |          │       └── test\n#                |          │           └── netty\n#                |          └── databus2\n#                |              └── relay\n#                |\n# We want to merge all src/main and src/test subtrees into a single pair of\n# uber-combo src/main and src/test trees, e.g.:\n#\n#   code-coverage-all\n#   └── src\n#       ├── main\n#       │   └── java\n#       │       └── com\n#       │           └── linkedin\n#       │               ├── ...\n#       └── test\n#           └── java\n#               └── com\n#                   └── linkedin\n#                       ├── ...\n#\n\ntop=\"./\"\n# this is relative to $top :\nmergedir=\"code-coverage-all\"\n\ncd $top\n\n#if [ -e \"$mergedir\" ]; then\n#  echo \"error:  $mergedir subdirectory already exists; bailing\"\n#  exit 1\n#fi\n\necho \"Creating $mergedir/src for unified tree.\"\nmkdir -p \"$mergedir\"/src || exit 2\n\n# databus-events/databus-events-* dirs are older duplicates of content under\n# databus-events/databus-events/ (179 duplicate files), so we exclude them for\n# performance/redundancy reasons:\nallfiles=`find . -type f -print | sed 's#^./##' | grep '^databus' | fgrep -v '/bin/' | grep '/.*/' | egrep '/src/main/|/src/test/' | fgrep -v 'databus-events/databus-events-'`\n\necho \"Copying files.\"\nfor file in $allfiles; do\n  # get rid of the databus*/databus*/src/ prefix:\n  relative_path=`echo \"$file\" | sed 's/^[^/]*\\/[^/]*\\/src\\///'`\n  # lop off the filename:\n  target_dir=`echo \"$relative_path\" | sed 's/[^/]*$//'`\n  # create the target directory:\n  mkdir -p \"$mergedir\"/src/\"$target_dir\" || exit 2\n  # copy (or hard-link) the file into the target directory:\n  cp -p \"$file\" \"$mergedir\"/src/\"$target_dir\"/. || exit 3\ndone\n\necho \"Done.\"\nexit 0\n"
        },
        {
          "name": "metrics-histograms",
          "type": "tree",
          "content": null
        },
        {
          "name": "sandbox-repo",
          "type": "tree",
          "content": null
        },
        {
          "name": "script",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 1.1513671875,
          "content": "// If a new directory is added, that contains a test inside, please add the directory here\ndef base_modules = [\n'databus-bootstrap-client',\n'databus-bootstrap-common',\n'databus-bootstrap-producer',\n'databus-bootstrap-server',\n'databus-bootstrap-utils',\n'databus-client',\n'databus-core',\n'databus-cluster',\n'databus-group-leader',\n'databus-relay',\n'databus-tools',\n'databus-util-cmdline',\n'databus2-example',\n'databus2-relay',\n'db',\n'script',\n'metrics-histograms'\n]\n\n// add above to get hadoop artifacts uploaded 'hadoop',\n\n//TODO modules removed due to problems with their build dependencies:\n//\n// these are being worked on\n\ndef nonReleaseModules = [\n]\n\n//consuming of root.dir property allows us to 'wrap' the open source project with a master gradle project if necessary\nString rootDir = hasProperty(\"root.dir\") ? getProperty(\"root.dir\") : settingsDir\n\nbase_modules.each { module ->\n  file(\"$rootDir/$module\").eachDir { submodule ->\n    if (!submodule.name.startsWith('.') && !nonReleaseModules.contains(submodule.name)) {\n      def path = \":${module}:${submodule.name}\"\n      include path\n      project(path).projectDir = file(\"$rootDir/$module/$submodule.name\")\n    }\n  }\n}\n"
        },
        {
          "name": "subprojects.gradle",
          "type": "blob",
          "size": 6.068359375,
          "content": "ext.isDefaultEnvironment = !project.hasProperty('overrideBuildEnvironment')\n\nFile getEnvironmentScript()\n{\n  final File env = rootProject.file(isDefaultEnvironment ? 'defaultEnvironment.gradle' : project.overrideBuildEnvironment)\n  assert env.isFile() : \"The environment script [$env] does not exists or is not a file.\"\n  return env\n}\n\napply from: environmentScript\n\nproject.version = \"2.0.0\"\n\n\n\next.externalDependency = [\n    'avro': 'org.apache.avro:avro:1.4.0',\n    'commonsBeanutils': 'commons-beanutils:commons-beanutils:1.7.0',\n    'commonsCli': 'commons-cli:commons-cli:1.2',\n    'commonsCodec': 'commons-codec:commons-codec:1.6',\n    'commonsCollections': 'commons-collections:commons-collections:3.2.2',\n    'commonsIo': 'commons-io:commons-io:1.4',\n    'commonsLang': 'commons-lang:commons-lang:2.5',\n    'commonsLogging': 'commons-logging:commons-logging:1.1',\n    'commonsParent': 'org.apache.commons:commons-parent:5',\n    'commonsStats': 'org.apache.commons:commons-math3:3.2',\n    'easymock': 'org.easymock:easymock:3.1',\n    'easymockext': 'org.easymock:easymockclassextension:3.1',\n    'guava': 'com.google.guava:guava:22.0',\n    'hadoopCore': 'org.apache.hadoop:hadoop-core:0.20.2',\n    'jacksonCoreAsl': 'org.codehaus.jackson:jackson-core-asl:1.8.5',\n    'jacksonMapperAsl': 'org.codehaus.jackson:jackson-mapper-asl:1.8.5',\n    'jline': 'jline:jline:1.0',\n    'json': 'org.json:json:20070829',\n    'junit': 'junit:junit:4.8.1',\n    'log4j': 'log4j:log4j:1.2.15',\n    'luceneAnalyzers': 'org.apache.lucene:lucene-analyzers:2.9.1',\n    'luceneCore': 'org.apache.lucene:lucene-core:2.9.1',\n    'luceneQueries': 'org.apache.lucene:lucene-queries:2.9.1',\n    'metricsCore': 'com.codahale.metrics:metrics-core:3.0.1',\n    'mysqlConnectorJava': 'org.mysql:mysql-connector-java:5.1.14',\n    'netty': 'org.jboss.netty:netty:3.2.4.Final',\n    'snakeyaml': 'org.yaml:snakeyaml:1.8',\n    'testng': 'org.testng:testng:6.4',\n    'zkclient': 'zkclient:zkclient:0.2.0',\n    'zkclientHelix': 'com.github.sgroschupf:zkclient:0.1',\n    'zookeeper': 'org.apache.zookeeper:zookeeper:3.3.3',\n    'ojdbc6': 'com.oracle:ojdbc6:11.2.0.2.0',\n    'helixCore': 'org.apache.helix:helix-core:0.6.2.0',\n    'or': 'com.linkedin.dds-mysql:open-replicator-impl:1.0.63',\n    'c3p0': 'com.mchange:c3p0:0.9.5'\n];\n\nif (isDefaultEnvironment) {\n  externalDependency['mysqlConnectorJava'] = 'mysql:mysql-connector-java:5.1.14'\n  externalDependency['helixCore'] = 'org.apache.helix:helix-core:0.6.2-incubating'\n  externalDependency['or'] = 'com.google:open-replicator:1.0.7'\n  externalDependency['log4j'] = 'org.slf4j:slf4j-log4j12:1.6.1'\n}\n\ntasks.withType(JavaCompile).all { JavaCompile compile ->\n  compile.options.compilerArgs = ['-Xlint', '-Xlint:-path']\n}\n/* workaround for GRADLE-2243 (http://issues.gradle.org/browse/GRADLE-2243) */\ntasks.withType(FindBugs) {\n  ignoreFailures=true\n  effort=\"max\"\n  reportLevel=\"medium\"\n  def f = new File(\"${project.projectDir}\", \"FindBugs-excludes.xml\")\n  if ( f.exists()) {\n\t  logger.info(\"{} uses FindBugs excludes: {}\", project, f.getAbsolutePath())\n\t  excludeFilter= file(\"${project.projectDir}/FindBugs-excludes.xml\")\n  }\n}\n\nplugins.withType(JavaPlugin) {\n\n   // Please see TOOLS-17168, regarding how runtime dependencies can\n   // get interpreted as compile time dependency\n   // configurations.compile.exclude module: 'ojdbc6'\n\n    plugins.apply('eclipse')\n    plugins.apply('idea')\n    plugins.apply('maven')\n\n\n\n\tif (isDefaultEnvironment) {\n\t    plugins.apply('findbugs')\n\t}\n\n    sourceCompatibility = JavaVersion.VERSION_1_6\n    configurations {\n\n      all*.exclude group: 'com.sun.jdmk', module: 'jmxtools'\n      all*.exclude group: 'com.sun.jmx', module: 'jmxri'\n      all*.exclude group: 'javax.jms', module: 'jms'\n\n      /* Uncomment for Cobertura integration */\n      // testRuntime.exclude group: 'net.sourceforge.cobertura', module: 'cobertura'\n\n      testArtifacts\n    }\n\n    // Default dependencies for all subprojects\n    dependencies {\n        runtime externalDependency.log4j\n        // Force easymock to version 3.1. One of the espresso dependencies changes it to 2.4\n        // and v2.4 does not support mocking of classes, causing our espresso unit tests\n        // to break.\n        runtime(externalDependency.easymock) {\n            force = true\n        }\n        compile(externalDependency.easymock) {\n            force = true\n        }\n    }\n\n    if (isDefaultEnvironment) {\n      task sourcesJar(type: Jar, dependsOn: classes) {\n        from sourceSets.main.allSource\n        classifier = 'sources'\n      }\n\n      task javadocJar(type: Jar, dependsOn: javadoc) {\n        from javadoc.destinationDir\n        classifier = 'javadoc'\n      }\n\n      artifacts {\n        archives sourcesJar\n        archives javadocJar\n      }\n    }\n\n    task testJar(type: Jar){\n      from sourceSets.test.output\n      classifier = 'tests'\n    }\n\n    artifacts {\n      testArtifacts testJar\n    }\n\n    test {\n      \tmaxHeapSize = '6200m'\n        jvmArgs '-XX:MaxDirectMemorySize=8192m', '-XX:PermSize=512M', '-XX:MaxPermSize=1024M',  '-ea', '-verbose:gc', '-Xloggc:/tmp/test-gc.log', '-XX:+PrintGCDetails', '-XX:+PrintGCDateStamps', '-XX:+UseConcMarkSweepGC', '-XX:+UseParNewGC', '-XX:CMSInitiatingOccupancyFraction=75', '-XX:+UseCMSInitiatingOccupancyOnly', '-XX:NewSize=256m', '-XX:MaxNewSize=256m'\n        useTestNG()\n\n        doFirst { desc->\n          logger.lifecycle(\"Running task: \" + desc);\n        }\n        beforeTest { desc->\n          logger.lifecycle(\"Running test: \" + desc);\n        }\n    }\n}\n\ntask cleanBuildDir(type: Exec){\n  commandLine = ['rm', '-rf', rootDir.toString() + '/build']\n  workingDir = rootDir\n}\n\ntask makedir(type:Exec) {\n  // gradle mkdir does not create dir with \"-p\" flag on so this is a generic task that takes -Ddirpath=..... parameter\n  // Usage examples:\n  // gradle makedir -Ddirpath=abc/xyz\n  def dir = System.getProperties()['dirpath'] ?: null\n  if (dir != null){\n\tcommandLine = ['mkdir','-p', dir]\n\tworkingDir = file(rootDir.toString())\n  }\n}\n\n//Turn off javadoc lint for Java 8+\nif (JavaVersion.current().isJava8Compatible()) {\n  allprojects {\n    tasks.withType(Javadoc) {\n      options.addStringOption('Xdoclint:none', '-quiet')\n    }\n  }\n}\n"
        }
      ]
    }
  ]
}