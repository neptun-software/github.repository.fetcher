{
  "metadata": {
    "timestamp": 1736708513073,
    "page": 721,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mongodb/mongo-java-driver",
      "stars": 2621,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 30.5498046875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\nindent_size = 4\nindent_style = space\ninsert_final_newline = true\nmax_line_length = 140\ntab_width = 4\nij_continuation_indent_size = 8\nij_formatter_off_tag = @formatter:off\nij_formatter_on_tag = @formatter:on\nij_formatter_tags_enabled = false\nij_smart_tabs = false\nij_visual_guides = none\nij_wrap_on_typing = true\n\n[*.java]\nij_java_align_consecutive_assignments = false\nij_java_align_consecutive_variable_declarations = false\nij_java_align_group_field_declarations = false\nij_java_align_multiline_annotation_parameters = false\nij_java_align_multiline_array_initializer_expression = false\nij_java_align_multiline_assignment = false\nij_java_align_multiline_binary_operation = false\nij_java_align_multiline_chained_methods = false\nij_java_align_multiline_extends_list = false\nij_java_align_multiline_for = true\nij_java_align_multiline_method_parentheses = false\nij_java_align_multiline_parameters = false\nij_java_align_multiline_parameters_in_calls = false\nij_java_align_multiline_parenthesized_expression = false\nij_java_align_multiline_records = true\nij_java_align_multiline_resources = true\nij_java_align_multiline_ternary_operation = false\nij_java_align_multiline_text_blocks = false\nij_java_align_multiline_throws_list = false\nij_java_align_subsequent_simple_methods = false\nij_java_align_throws_keyword = false\nij_java_annotation_parameter_wrap = off\nij_java_array_initializer_new_line_after_left_brace = false\nij_java_array_initializer_right_brace_on_new_line = false\nij_java_array_initializer_wrap = off\nij_java_assert_statement_colon_on_next_line = false\nij_java_assert_statement_wrap = off\nij_java_assignment_wrap = off\nij_java_binary_operation_sign_on_next_line = false\nij_java_binary_operation_wrap = off\nij_java_blank_lines_after_anonymous_class_header = 0\nij_java_blank_lines_after_class_header = 0\nij_java_blank_lines_after_imports = 1\nij_java_blank_lines_after_package = 1\nij_java_blank_lines_around_class = 1\nij_java_blank_lines_around_field = 0\nij_java_blank_lines_around_field_in_interface = 0\nij_java_blank_lines_around_initializer = 1\nij_java_blank_lines_around_method = 1\nij_java_blank_lines_around_method_in_interface = 1\nij_java_blank_lines_before_class_end = 0\nij_java_blank_lines_before_imports = 1\nij_java_blank_lines_before_method_body = 0\nij_java_blank_lines_before_package = 0\nij_java_block_brace_style = end_of_line\nij_java_block_comment_at_first_column = true\nij_java_call_parameters_new_line_after_left_paren = false\nij_java_call_parameters_right_paren_on_new_line = false\nij_java_call_parameters_wrap = off\nij_java_case_statement_on_separate_line = true\nij_java_catch_on_new_line = false\nij_java_class_annotation_wrap = split_into_lines\nij_java_class_brace_style = end_of_line\nij_java_class_count_to_use_import_on_demand = 100\nij_java_class_names_in_javadoc = 1\nij_java_do_not_indent_top_level_class_members = false\nij_java_do_not_wrap_after_single_annotation = false\nij_java_do_while_brace_force = never\nij_java_doc_add_blank_line_after_description = true\nij_java_doc_add_blank_line_after_param_comments = false\nij_java_doc_add_blank_line_after_return = false\nij_java_doc_add_p_tag_on_empty_lines = true\nij_java_doc_align_exception_comments = true\nij_java_doc_align_param_comments = true\nij_java_doc_do_not_wrap_if_one_line = false\nij_java_doc_enable_formatting = true\nij_java_doc_enable_leading_asterisks = true\nij_java_doc_indent_on_continuation = false\nij_java_doc_keep_empty_lines = true\nij_java_doc_keep_empty_parameter_tag = true\nij_java_doc_keep_empty_return_tag = true\nij_java_doc_keep_empty_throws_tag = true\nij_java_doc_keep_invalid_tags = true\nij_java_doc_param_description_on_new_line = false\nij_java_doc_preserve_line_breaks = false\nij_java_doc_use_throws_not_exception_tag = true\nij_java_else_on_new_line = false\nij_java_entity_dd_suffix = EJB\nij_java_entity_eb_suffix = Bean\nij_java_entity_hi_suffix = Home\nij_java_entity_lhi_prefix = Local\nij_java_entity_lhi_suffix = Home\nij_java_entity_li_prefix = Local\nij_java_entity_pk_class = java.lang.String\nij_java_entity_vo_suffix = VO\nij_java_enum_constants_wrap = off\nij_java_extends_keyword_wrap = off\nij_java_extends_list_wrap = off\nij_java_field_annotation_wrap = split_into_lines\nij_java_finally_on_new_line = false\nij_java_for_brace_force = never\nij_java_for_statement_new_line_after_left_paren = false\nij_java_for_statement_right_paren_on_new_line = false\nij_java_for_statement_wrap = off\nij_java_generate_final_locals = false\nij_java_generate_final_parameters = true\nij_java_if_brace_force = never\nij_java_imports_layout = *,|,javax.**,java.**,|,$*\nij_java_indent_case_from_switch = true\nij_java_insert_inner_class_imports = false\nij_java_insert_override_annotation = true\nij_java_keep_blank_lines_before_right_brace = 2\nij_java_keep_blank_lines_between_package_declaration_and_header = 2\nij_java_keep_blank_lines_in_code = 2\nij_java_keep_blank_lines_in_declarations = 2\nij_java_keep_control_statement_in_one_line = true\nij_java_keep_first_column_comment = true\nij_java_keep_indents_on_empty_lines = false\nij_java_keep_line_breaks = true\nij_java_keep_multiple_expressions_in_one_line = false\nij_java_keep_simple_blocks_in_one_line = false\nij_java_keep_simple_classes_in_one_line = false\nij_java_keep_simple_lambdas_in_one_line = false\nij_java_keep_simple_methods_in_one_line = false\nij_java_label_indent_absolute = false\nij_java_label_indent_size = 0\nij_java_lambda_brace_style = end_of_line\nij_java_layout_static_imports_separately = true\nij_java_line_comment_add_space = false\nij_java_line_comment_at_first_column = true\nij_java_message_dd_suffix = EJB\nij_java_message_eb_suffix = Bean\nij_java_method_annotation_wrap = split_into_lines\nij_java_method_brace_style = end_of_line\nij_java_method_call_chain_wrap = off\nij_java_method_parameters_new_line_after_left_paren = false\nij_java_method_parameters_right_paren_on_new_line = false\nij_java_method_parameters_wrap = off\nij_java_modifier_list_wrap = false\nij_java_names_count_to_use_import_on_demand = 100\nij_java_new_line_after_lparen_in_record_header = false\nij_java_packages_to_use_import_on_demand = java.awt.*,javax.swing.*\nij_java_parameter_annotation_wrap = off\nij_java_parentheses_expression_new_line_after_left_paren = false\nij_java_parentheses_expression_right_paren_on_new_line = false\nij_java_place_assignment_sign_on_next_line = false\nij_java_prefer_longer_names = true\nij_java_prefer_parameters_wrap = false\nij_java_record_components_wrap = normal\nij_java_repeat_synchronized = true\nij_java_replace_instanceof_and_cast = false\nij_java_replace_null_check = true\nij_java_replace_sum_lambda_with_method_ref = true\nij_java_resource_list_new_line_after_left_paren = false\nij_java_resource_list_right_paren_on_new_line = false\nij_java_resource_list_wrap = off\nij_java_rparen_on_new_line_in_record_header = false\nij_java_session_dd_suffix = EJB\nij_java_session_eb_suffix = Bean\nij_java_session_hi_suffix = Home\nij_java_session_lhi_prefix = Local\nij_java_session_lhi_suffix = Home\nij_java_session_li_prefix = Local\nij_java_session_si_suffix = Service\nij_java_space_after_closing_angle_bracket_in_type_argument = false\nij_java_space_after_colon = true\nij_java_space_after_comma = true\nij_java_space_after_comma_in_type_arguments = true\nij_java_space_after_for_semicolon = true\nij_java_space_after_quest = true\nij_java_space_after_type_cast = true\nij_java_space_before_annotation_array_initializer_left_brace = false\nij_java_space_before_annotation_parameter_list = false\nij_java_space_before_array_initializer_left_brace = false\nij_java_space_before_catch_keyword = true\nij_java_space_before_catch_left_brace = true\nij_java_space_before_catch_parentheses = true\nij_java_space_before_class_left_brace = true\nij_java_space_before_colon = true\nij_java_space_before_colon_in_foreach = true\nij_java_space_before_comma = false\nij_java_space_before_do_left_brace = true\nij_java_space_before_else_keyword = true\nij_java_space_before_else_left_brace = true\nij_java_space_before_finally_keyword = true\nij_java_space_before_finally_left_brace = true\nij_java_space_before_for_left_brace = true\nij_java_space_before_for_parentheses = true\nij_java_space_before_for_semicolon = false\nij_java_space_before_if_left_brace = true\nij_java_space_before_if_parentheses = true\nij_java_space_before_method_call_parentheses = false\nij_java_space_before_method_left_brace = true\nij_java_space_before_method_parentheses = false\nij_java_space_before_opening_angle_bracket_in_type_parameter = false\nij_java_space_before_quest = true\nij_java_space_before_switch_left_brace = true\nij_java_space_before_switch_parentheses = true\nij_java_space_before_synchronized_left_brace = true\nij_java_space_before_synchronized_parentheses = true\nij_java_space_before_try_left_brace = true\nij_java_space_before_try_parentheses = true\nij_java_space_before_type_parameter_list = false\nij_java_space_before_while_keyword = true\nij_java_space_before_while_left_brace = true\nij_java_space_before_while_parentheses = true\nij_java_space_inside_one_line_enum_braces = false\nij_java_space_within_empty_array_initializer_braces = false\nij_java_space_within_empty_method_call_parentheses = false\nij_java_space_within_empty_method_parentheses = false\nij_java_spaces_around_additive_operators = true\nij_java_spaces_around_assignment_operators = true\nij_java_spaces_around_bitwise_operators = true\nij_java_spaces_around_equality_operators = true\nij_java_spaces_around_lambda_arrow = true\nij_java_spaces_around_logical_operators = true\nij_java_spaces_around_method_ref_dbl_colon = false\nij_java_spaces_around_multiplicative_operators = true\nij_java_spaces_around_relational_operators = true\nij_java_spaces_around_shift_operators = true\nij_java_spaces_around_type_bounds_in_type_parameters = true\nij_java_spaces_around_unary_operator = false\nij_java_spaces_within_angle_brackets = false\nij_java_spaces_within_annotation_parentheses = false\nij_java_spaces_within_array_initializer_braces = false\nij_java_spaces_within_braces = false\nij_java_spaces_within_brackets = false\nij_java_spaces_within_cast_parentheses = false\nij_java_spaces_within_catch_parentheses = false\nij_java_spaces_within_for_parentheses = false\nij_java_spaces_within_if_parentheses = false\nij_java_spaces_within_method_call_parentheses = false\nij_java_spaces_within_method_parentheses = false\nij_java_spaces_within_parentheses = false\nij_java_spaces_within_record_header = false\nij_java_spaces_within_switch_parentheses = false\nij_java_spaces_within_synchronized_parentheses = false\nij_java_spaces_within_try_parentheses = false\nij_java_spaces_within_while_parentheses = false\nij_java_special_else_if_treatment = true\nij_java_subclass_name_suffix = Impl\nij_java_ternary_operation_signs_on_next_line = false\nij_java_ternary_operation_wrap = off\nij_java_test_name_suffix = Test\nij_java_throws_keyword_wrap = off\nij_java_throws_list_wrap = off\nij_java_use_external_annotations = false\nij_java_use_fq_class_names = false\nij_java_use_relative_indents = false\nij_java_use_single_class_imports = true\nij_java_variable_annotation_wrap = off\nij_java_visibility = public\nij_java_while_brace_force = never\nij_java_while_on_new_line = false\nij_java_wrap_comments = false\nij_java_wrap_first_method_in_call_chain = false\nij_java_wrap_long_lines = false\n\n[*.scala]\nindent_size = 2\ntab_width = 2\nij_continuation_indent_size = 2\nij_scala_align_composite_pattern = true\nij_scala_align_extends_with = 0\nij_scala_align_group_field_declarations = false\nij_scala_align_if_else = false\nij_scala_align_in_columns_case_branch = false\nij_scala_align_multiline_binary_operation = false\nij_scala_align_multiline_chained_methods = false\nij_scala_align_multiline_for = true\nij_scala_align_multiline_parameters = false\nij_scala_align_multiline_parameters_in_calls = false\nij_scala_align_multiline_parenthesized_expression = false\nij_scala_align_tuple_elements = false\nij_scala_align_types_in_multiline_declarations = false\nij_scala_alternate_continuation_indent_for_params = 4\nij_scala_binary_operation_wrap = off\nij_scala_blank_lines_after_anonymous_class_header = 0\nij_scala_blank_lines_after_class_header = 0\nij_scala_blank_lines_after_imports = 1\nij_scala_blank_lines_after_package = 1\nij_scala_blank_lines_around_class = 1\nij_scala_blank_lines_around_field = 0\nij_scala_blank_lines_around_field_in_inner_scopes = 0\nij_scala_blank_lines_around_field_in_interface = 0\nij_scala_blank_lines_around_method = 1\nij_scala_blank_lines_around_method_in_inner_scopes = 1\nij_scala_blank_lines_around_method_in_interface = 1\nij_scala_blank_lines_before_imports = 1\nij_scala_blank_lines_before_method_body = 0\nij_scala_blank_lines_before_package = 0\nij_scala_block_brace_style = end_of_line\nij_scala_block_comment_at_first_column = true\nij_scala_call_parameters_new_line_after_lparen = 0\nij_scala_call_parameters_right_paren_on_new_line = false\nij_scala_call_parameters_wrap = off\nij_scala_case_clause_brace_force = never\nij_scala_catch_on_new_line = false\nij_scala_class_annotation_wrap = split_into_lines\nij_scala_class_brace_style = end_of_line\nij_scala_closure_brace_force = never\nij_scala_do_not_align_block_expr_params = true\nij_scala_do_not_indent_case_clause_body = false\nij_scala_do_not_indent_tuples_close_brace = true\nij_scala_do_while_brace_force = never\nij_scala_else_on_new_line = false\nij_scala_enable_scaladoc_formatting = true\nij_scala_enforce_functional_syntax_for_unit = true\nij_scala_extends_keyword_wrap = off\nij_scala_extends_list_wrap = off\nij_scala_field_annotation_wrap = split_into_lines\nij_scala_finally_brace_force = never\nij_scala_finally_on_new_line = false\nij_scala_for_brace_force = never\nij_scala_for_statement_wrap = off\nij_scala_formatter = 0\nij_scala_if_brace_force = never\nij_scala_implicit_value_class_suffix = Ops\nij_scala_indent_braced_function_args = true\nij_scala_indent_case_from_switch = true\nij_scala_indent_first_parameter = true\nij_scala_indent_first_parameter_clause = false\nij_scala_indent_type_arguments = true\nij_scala_indent_type_parameters = true\nij_scala_insert_whitespaces_in_simple_one_line_method = true\nij_scala_keep_blank_lines_before_right_brace = 2\nij_scala_keep_blank_lines_in_code = 2\nij_scala_keep_blank_lines_in_declarations = 2\nij_scala_keep_comments_on_same_line = true\nij_scala_keep_first_column_comment = false\nij_scala_keep_indents_on_empty_lines = false\nij_scala_keep_line_breaks = true\nij_scala_keep_one_line_lambdas_in_arg_list = false\nij_scala_keep_simple_blocks_in_one_line = false\nij_scala_keep_simple_methods_in_one_line = false\nij_scala_keep_xml_formatting = false\nij_scala_line_comment_at_first_column = true\nij_scala_method_annotation_wrap = split_into_lines\nij_scala_method_brace_force = never\nij_scala_method_brace_style = end_of_line\nij_scala_method_call_chain_wrap = off\nij_scala_method_parameters_new_line_after_left_paren = false\nij_scala_method_parameters_right_paren_on_new_line = false\nij_scala_method_parameters_wrap = off\nij_scala_modifier_list_wrap = false\nij_scala_multiline_string_align_dangling_closing_quotes = false\nij_scala_multiline_string_closing_quotes_on_new_line = false\nij_scala_multiline_string_insert_margin_on_enter = true\nij_scala_multiline_string_margin_char = |\nij_scala_multiline_string_margin_indent = 2\nij_scala_multiline_string_opening_quotes_on_new_line = true\nij_scala_multiline_string_process_margin_on_copy_paste = true\nij_scala_newline_after_annotations = false\nij_scala_not_continuation_indent_for_params = false\nij_scala_parameter_annotation_wrap = off\nij_scala_parentheses_expression_new_line_after_left_paren = false\nij_scala_parentheses_expression_right_paren_on_new_line = false\nij_scala_place_closure_parameters_on_new_line = false\nij_scala_place_self_type_on_new_line = true\nij_scala_prefer_parameters_wrap = false\nij_scala_preserve_space_after_method_declaration_name = false\nij_scala_reformat_on_compile = false\nij_scala_replace_case_arrow_with_unicode_char = false\nij_scala_replace_for_generator_arrow_with_unicode_char = false\nij_scala_replace_lambda_with_greek_letter = false\nij_scala_replace_map_arrow_with_unicode_char = false\nij_scala_scalafmt_fallback_to_default_settings = false\nij_scala_scalafmt_reformat_on_files_save = false\nij_scala_scalafmt_show_invalid_code_warnings = true\nij_scala_scalafmt_use_intellij_formatter_for_range_format = true\nij_scala_sd_align_exception_comments = true\nij_scala_sd_align_list_item_content = true\nij_scala_sd_align_other_tags_comments = true\nij_scala_sd_align_parameters_comments = true\nij_scala_sd_align_return_comments = true\nij_scala_sd_blank_line_after_parameters_comments = false\nij_scala_sd_blank_line_after_return_comments = false\nij_scala_sd_blank_line_before_parameters = false\nij_scala_sd_blank_line_before_tags = true\nij_scala_sd_blank_line_between_parameters = false\nij_scala_sd_keep_blank_lines_between_tags = false\nij_scala_sd_preserve_spaces_in_tags = false\nij_scala_space_after_comma = true\nij_scala_space_after_for_semicolon = true\nij_scala_space_after_modifiers_constructor = false\nij_scala_space_after_type_colon = true\nij_scala_space_before_brace_method_call = true\nij_scala_space_before_class_left_brace = true\nij_scala_space_before_for_parentheses = true\nij_scala_space_before_if_parentheses = true\nij_scala_space_before_infix_like_method_parentheses = false\nij_scala_space_before_infix_method_call_parentheses = false\nij_scala_space_before_infix_operator_like_method_call_parentheses = true\nij_scala_space_before_method_call_parentheses = false\nij_scala_space_before_method_left_brace = true\nij_scala_space_before_method_parentheses = false\nij_scala_space_before_type_colon = false\nij_scala_space_before_type_parameter_in_def_list = false\nij_scala_space_before_type_parameter_leading_context_bound_colon = false\nij_scala_space_before_type_parameter_leading_context_bound_colon_hk = true\nij_scala_space_before_type_parameter_list = false\nij_scala_space_before_type_parameter_rest_context_bound_colons = true\nij_scala_space_before_while_parentheses = true\nij_scala_space_inside_closure_braces = true\nij_scala_space_inside_self_type_braces = true\nij_scala_space_within_empty_method_call_parentheses = false\nij_scala_spaces_around_at_in_patterns = false\nij_scala_spaces_in_imports = false\nij_scala_spaces_in_one_line_blocks = false\nij_scala_spaces_within_brackets = false\nij_scala_spaces_within_for_parentheses = false\nij_scala_spaces_within_if_parentheses = false\nij_scala_spaces_within_method_call_parentheses = false\nij_scala_spaces_within_method_parentheses = false\nij_scala_spaces_within_parentheses = false\nij_scala_spaces_within_while_parentheses = false\nij_scala_special_else_if_treatment = true\nij_scala_trailing_comma_arg_list_enabled = true\nij_scala_trailing_comma_import_selector_enabled = false\nij_scala_trailing_comma_mode = trailing_comma_keep\nij_scala_trailing_comma_params_enabled = true\nij_scala_trailing_comma_pattern_arg_list_enabled = false\nij_scala_trailing_comma_tuple_enabled = false\nij_scala_trailing_comma_tuple_type_enabled = false\nij_scala_trailing_comma_type_params_enabled = false\nij_scala_try_brace_force = never\nij_scala_type_annotation_exclude_constant = true\nij_scala_type_annotation_exclude_in_dialect_sources = true\nij_scala_type_annotation_exclude_in_test_sources = false\nij_scala_type_annotation_exclude_member_of_anonymous_class = false\nij_scala_type_annotation_exclude_member_of_private_class = false\nij_scala_type_annotation_exclude_when_type_is_stable = true\nij_scala_type_annotation_function_parameter = false\nij_scala_type_annotation_implicit_modifier = true\nij_scala_type_annotation_local_definition = false\nij_scala_type_annotation_private_member = false\nij_scala_type_annotation_protected_member = true\nij_scala_type_annotation_public_member = true\nij_scala_type_annotation_structural_type = true\nij_scala_type_annotation_underscore_parameter = false\nij_scala_type_annotation_unit_type = true\nij_scala_use_alternate_continuation_indent_for_params = false\nij_scala_use_scaladoc2_formatting = false\nij_scala_variable_annotation_wrap = off\nij_scala_while_brace_force = never\nij_scala_while_on_new_line = false\nij_scala_wrap_before_with_keyword = false\nij_scala_wrap_first_method_in_call_chain = false\nij_scala_wrap_long_lines = false\n\n[.editorconfig]\nij_editorconfig_align_group_field_declarations = false\nij_editorconfig_space_after_colon = false\nij_editorconfig_space_after_comma = true\nij_editorconfig_space_before_colon = false\nij_editorconfig_space_before_comma = false\nij_editorconfig_spaces_around_assignment_operators = true\n\n[{*.ant,*.fxml,*.jhm,*.jnlp,*.jrxml,*.pom,*.rng,*.tld,*.wadl,*.wsdd,*.wsdl,*.xjb,*.xml,*.xsd,*.xsl,*.xslt,*.xul}]\nij_xml_align_attributes = true\nij_xml_align_text = false\nij_xml_attribute_wrap = normal\nij_xml_block_comment_at_first_column = true\nij_xml_keep_blank_lines = 2\nij_xml_keep_indents_on_empty_lines = false\nij_xml_keep_line_breaks = true\nij_xml_keep_line_breaks_in_text = true\nij_xml_keep_whitespaces = false\nij_xml_keep_whitespaces_around_cdata = preserve\nij_xml_keep_whitespaces_inside_cdata = false\nij_xml_line_comment_at_first_column = true\nij_xml_space_after_tag_name = false\nij_xml_space_around_equals_in_attribute = false\nij_xml_space_inside_empty_tag = false\nij_xml_text_wrap = normal\nij_xml_use_custom_settings = false\n\n[{*.bash,*.sh,*.zsh}]\nindent_size = 2\ntab_width = 2\nij_shell_binary_ops_start_line = false\nij_shell_keep_column_alignment_padding = false\nij_shell_minify_program = false\nij_shell_redirect_followed_by_space = false\nij_shell_switch_cases_indented = false\n\n[{*.gant,*.gradle,*.groovy,*.gson,*.gy}]\nij_groovy_align_group_field_declarations = false\nij_groovy_align_multiline_array_initializer_expression = false\nij_groovy_align_multiline_assignment = false\nij_groovy_align_multiline_binary_operation = false\nij_groovy_align_multiline_chained_methods = false\nij_groovy_align_multiline_extends_list = false\nij_groovy_align_multiline_for = true\nij_groovy_align_multiline_list_or_map = true\nij_groovy_align_multiline_method_parentheses = false\nij_groovy_align_multiline_parameters = false\nij_groovy_align_multiline_parameters_in_calls = false\nij_groovy_align_multiline_resources = true\nij_groovy_align_multiline_ternary_operation = false\nij_groovy_align_multiline_throws_list = false\nij_groovy_align_named_args_in_map = true\nij_groovy_align_throws_keyword = false\nij_groovy_array_initializer_new_line_after_left_brace = false\nij_groovy_array_initializer_right_brace_on_new_line = false\nij_groovy_array_initializer_wrap = off\nij_groovy_assert_statement_wrap = off\nij_groovy_assignment_wrap = off\nij_groovy_binary_operation_wrap = off\nij_groovy_blank_lines_after_class_header = 0\nij_groovy_blank_lines_after_imports = 1\nij_groovy_blank_lines_after_package = 1\nij_groovy_blank_lines_around_class = 1\nij_groovy_blank_lines_around_field = 0\nij_groovy_blank_lines_around_field_in_interface = 0\nij_groovy_blank_lines_around_method = 1\nij_groovy_blank_lines_around_method_in_interface = 1\nij_groovy_blank_lines_before_imports = 1\nij_groovy_blank_lines_before_method_body = 0\nij_groovy_blank_lines_before_package = 0\nij_groovy_block_brace_style = end_of_line\nij_groovy_block_comment_at_first_column = true\nij_groovy_call_parameters_new_line_after_left_paren = false\nij_groovy_call_parameters_right_paren_on_new_line = false\nij_groovy_call_parameters_wrap = off\nij_groovy_catch_on_new_line = false\nij_groovy_class_annotation_wrap = split_into_lines\nij_groovy_class_brace_style = end_of_line\nij_groovy_class_count_to_use_import_on_demand = 100\nij_groovy_do_while_brace_force = never\nij_groovy_else_on_new_line = false\nij_groovy_enum_constants_wrap = off\nij_groovy_extends_keyword_wrap = off\nij_groovy_extends_list_wrap = off\nij_groovy_field_annotation_wrap = split_into_lines\nij_groovy_finally_on_new_line = false\nij_groovy_for_brace_force = never\nij_groovy_for_statement_new_line_after_left_paren = false\nij_groovy_for_statement_right_paren_on_new_line = false\nij_groovy_for_statement_wrap = off\nij_groovy_if_brace_force = never\nij_groovy_import_annotation_wrap = 2\nij_groovy_imports_layout = *,|,javax.**,java.**,|,$*\nij_groovy_indent_case_from_switch = true\nij_groovy_indent_label_blocks = true\nij_groovy_insert_inner_class_imports = false\nij_groovy_keep_blank_lines_before_right_brace = 2\nij_groovy_keep_blank_lines_in_code = 2\nij_groovy_keep_blank_lines_in_declarations = 2\nij_groovy_keep_control_statement_in_one_line = true\nij_groovy_keep_first_column_comment = true\nij_groovy_keep_indents_on_empty_lines = false\nij_groovy_keep_line_breaks = true\nij_groovy_keep_multiple_expressions_in_one_line = false\nij_groovy_keep_simple_blocks_in_one_line = false\nij_groovy_keep_simple_classes_in_one_line = true\nij_groovy_keep_simple_lambdas_in_one_line = true\nij_groovy_keep_simple_methods_in_one_line = true\nij_groovy_label_indent_absolute = false\nij_groovy_label_indent_size = 0\nij_groovy_lambda_brace_style = end_of_line\nij_groovy_layout_static_imports_separately = true\nij_groovy_line_comment_add_space = false\nij_groovy_line_comment_at_first_column = true\nij_groovy_method_annotation_wrap = split_into_lines\nij_groovy_method_brace_style = end_of_line\nij_groovy_method_call_chain_wrap = off\nij_groovy_method_parameters_new_line_after_left_paren = false\nij_groovy_method_parameters_right_paren_on_new_line = false\nij_groovy_method_parameters_wrap = off\nij_groovy_modifier_list_wrap = false\nij_groovy_names_count_to_use_import_on_demand = 100\nij_groovy_parameter_annotation_wrap = off\nij_groovy_parentheses_expression_new_line_after_left_paren = false\nij_groovy_parentheses_expression_right_paren_on_new_line = false\nij_groovy_prefer_parameters_wrap = false\nij_groovy_resource_list_new_line_after_left_paren = false\nij_groovy_resource_list_right_paren_on_new_line = false\nij_groovy_resource_list_wrap = off\nij_groovy_space_after_assert_separator = true\nij_groovy_space_after_colon = true\nij_groovy_space_after_comma = true\nij_groovy_space_after_comma_in_type_arguments = true\nij_groovy_space_after_for_semicolon = true\nij_groovy_space_after_quest = true\nij_groovy_space_after_type_cast = true\nij_groovy_space_before_annotation_parameter_list = false\nij_groovy_space_before_array_initializer_left_brace = false\nij_groovy_space_before_assert_separator = false\nij_groovy_space_before_catch_keyword = true\nij_groovy_space_before_catch_left_brace = true\nij_groovy_space_before_catch_parentheses = true\nij_groovy_space_before_class_left_brace = true\nij_groovy_space_before_closure_left_brace = true\nij_groovy_space_before_colon = true\nij_groovy_space_before_comma = false\nij_groovy_space_before_do_left_brace = true\nij_groovy_space_before_else_keyword = true\nij_groovy_space_before_else_left_brace = true\nij_groovy_space_before_finally_keyword = true\nij_groovy_space_before_finally_left_brace = true\nij_groovy_space_before_for_left_brace = true\nij_groovy_space_before_for_parentheses = true\nij_groovy_space_before_for_semicolon = false\nij_groovy_space_before_if_left_brace = true\nij_groovy_space_before_if_parentheses = true\nij_groovy_space_before_method_call_parentheses = false\nij_groovy_space_before_method_left_brace = true\nij_groovy_space_before_method_parentheses = false\nij_groovy_space_before_quest = true\nij_groovy_space_before_switch_left_brace = true\nij_groovy_space_before_switch_parentheses = true\nij_groovy_space_before_synchronized_left_brace = true\nij_groovy_space_before_synchronized_parentheses = true\nij_groovy_space_before_try_left_brace = true\nij_groovy_space_before_try_parentheses = true\nij_groovy_space_before_while_keyword = true\nij_groovy_space_before_while_left_brace = true\nij_groovy_space_before_while_parentheses = true\nij_groovy_space_in_named_argument = true\nij_groovy_space_in_named_argument_before_colon = false\nij_groovy_space_within_empty_array_initializer_braces = false\nij_groovy_space_within_empty_method_call_parentheses = false\nij_groovy_spaces_around_additive_operators = true\nij_groovy_spaces_around_assignment_operators = true\nij_groovy_spaces_around_bitwise_operators = true\nij_groovy_spaces_around_equality_operators = true\nij_groovy_spaces_around_lambda_arrow = true\nij_groovy_spaces_around_logical_operators = true\nij_groovy_spaces_around_multiplicative_operators = true\nij_groovy_spaces_around_regex_operators = true\nij_groovy_spaces_around_relational_operators = true\nij_groovy_spaces_around_shift_operators = true\nij_groovy_spaces_within_annotation_parentheses = false\nij_groovy_spaces_within_array_initializer_braces = false\nij_groovy_spaces_within_braces = true\nij_groovy_spaces_within_brackets = false\nij_groovy_spaces_within_cast_parentheses = false\nij_groovy_spaces_within_catch_parentheses = false\nij_groovy_spaces_within_for_parentheses = false\nij_groovy_spaces_within_gstring_injection_braces = false\nij_groovy_spaces_within_if_parentheses = false\nij_groovy_spaces_within_list_or_map = false\nij_groovy_spaces_within_method_call_parentheses = false\nij_groovy_spaces_within_method_parentheses = false\nij_groovy_spaces_within_parentheses = false\nij_groovy_spaces_within_switch_parentheses = false\nij_groovy_spaces_within_synchronized_parentheses = false\nij_groovy_spaces_within_try_parentheses = false\nij_groovy_spaces_within_tuple_expression = false\nij_groovy_spaces_within_while_parentheses = false\nij_groovy_special_else_if_treatment = true\nij_groovy_ternary_operation_wrap = off\nij_groovy_throws_keyword_wrap = off\nij_groovy_throws_list_wrap = off\nij_groovy_use_flying_geese_braces = false\nij_groovy_use_fq_class_names = false\nij_groovy_use_fq_class_names_in_javadoc = true\nij_groovy_use_relative_indents = false\nij_groovy_use_single_class_imports = true\nij_groovy_variable_annotation_wrap = off\nij_groovy_while_brace_force = never\nij_groovy_while_on_new_line = false\nij_groovy_wrap_long_lines = false\n\n[{*.har,*.jsb2,*.jsb3,*.json,.babelrc,.eslintrc,.stylelintrc,bowerrc,jest.config}]\nindent_size = 2\nij_json_keep_blank_lines_in_code = 0\nij_json_keep_indents_on_empty_lines = false\nij_json_keep_line_breaks = true\nij_json_space_after_colon = true\nij_json_space_after_comma = true\nij_json_space_before_colon = true\nij_json_space_before_comma = false\nij_json_spaces_within_braces = false\nij_json_spaces_within_brackets = false\nij_json_wrap_long_lines = false\n\n[{*.markdown,*.md}]\nij_markdown_force_one_space_after_blockquote_symbol = true\nij_markdown_force_one_space_after_header_symbol = true\nij_markdown_force_one_space_after_list_bullet = true\nij_markdown_force_one_space_between_words = true\nij_markdown_keep_indents_on_empty_lines = false\nij_markdown_max_lines_around_block_elements = 1\nij_markdown_max_lines_around_header = 1\nij_markdown_max_lines_between_paragraphs = 1\nij_markdown_min_lines_around_block_elements = 1\nij_markdown_min_lines_around_header = 1\nij_markdown_min_lines_between_paragraphs = 1\n\n[{*.properties,spring.handlers,spring.schemas}]\nij_properties_align_group_field_declarations = false\nij_properties_keep_blank_lines = false\nij_properties_key_value_delimiter = equals\nij_properties_spaces_around_key_value_delimiter = false\n\n[{*.yaml,*.yml}]\nindent_size = 2\nij_yaml_align_values_properties = do_not_align\nij_yaml_autoinsert_sequence_marker = true\nij_yaml_block_mapping_on_new_line = false\nij_yaml_indent_sequence_value = true\nij_yaml_keep_indents_on_empty_lines = false\nij_yaml_keep_line_breaks = true\nij_yaml_sequence_on_new_line = false\nij_yaml_space_before_colon = false\nij_yaml_spaces_within_braces = true\nij_yaml_spaces_within_brackets = true\n"
        },
        {
          "name": ".evergreen",
          "type": "tree",
          "content": null
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.3515625,
          "content": "# .git-blame-ignore-revs\n# Checkstyle fixes\n94780bc8b72c62d9bc09beaa9ac62b942debab5f\n# Copyright fixes\n0aa2ec20d5215c0ac727602dd2cd891c22c69ba8\n# Scala spotless changes\nfd21430c967571ed172259cc4100f291257a9a01\n# IntelliJ automated code cleanup\nd9aa6044e1a6b440bcb013c330497f2813484050\n# Remove `final` in catch clauses\n4b3b48546fb0457e5c515ccfe8780e373ad7de5f\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.078125,
          "content": "# Set default behaviour, in case users don't have core.autocrlf set.\n* text=auto"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5322265625,
          "content": "*~\n.#*\n.git\n*#\n\n# os x stuff\n*Thumbs.db*\n*.DS_Store\n\n# Build artifacts\nbuild\ntarget\nout\nmongo*.jar\n\n# Eclipse files\n.classpath\n.project\n.settings\n\n# Intellij IDEA files\n*.ipr\n*.iws\n*.iml\n*.idea\nworkspace.xml\natlassian-ide-plugin.xml\n\n# gradle\n.gradle\n\n# code review\ncodereview.rc\n\n# evergreen\nexpansion.yml\n\n# local settings\n**/gradle.properties\nlocal.properties\n\n# jenv\n.java-version\n\n#sdkman\n.sdkmanrc\n\n# mongocryptd\n**/mongocryptd*.pid\n\n# shell scripts\n*.sh\n!.evergreen/*.sh\n\n# security-sensitive files\n*.gpg\n\n# bin build directories\n**/bin\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.001953125,
          "content": "## Contributing to the MongoDB Java Driver\n\nThank you for your interest in contributing to the MongoDB Java driver.\n\nWe are building this software together and strongly encourage contributions from the community that are within the guidelines set forth \nbelow. \n\nBug Fixes and New Features\n--------------------------\n\nBefore starting to write code, look for existing [tickets](https://jira.mongodb.org/browse/JAVA) or \n[create one](https://jira.mongodb.org/secure/CreateIssue!default.jspa) for your bug, issue, or feature request. This helps the community \navoid working on something that might not be of interest or which has already been addressed.\n\nPull Requests\n-------------\n\nPull requests should generally be made against the master (default) branch and include relevant tests, if applicable. \n\nCode should compile with the Java 9 compiler and tests should pass under all Java versions which the driver currently\nsupports. Currently the Java driver supports a minimum version of Java 8.  Please run './gradlew test' to confirm.   By default, running the\ntests requires that you start a mongod server on localhost, listening on the default port and configured to run with\n[`enableTestCommands`](https://www.mongodb.com/docs/manual/reference/parameters/#param.enableTestCommands), which may be set with the \n`--setParameter enableTestCommands=1` command-line parameter.   At minimum, please test against the latest release version of the MongoDB \nserver.\n\nThe results of pull request testing will be appended to the request. If any tests do not pass, or relevant tests are not included, the \npull request will not be considered. \n\nTalk To Us\n----------\n\nIf you have questions about using the driver, please reach out on the \n[MongoDB Community Forums](https://www.mongodb.com/community/forums/tags/c/data/drivers/7/java).\n\nThanks to all the people who have already contributed!\n\n<a href=\"https://github.com/mongodb/mongo-java-driver/graphs/contributors\">\n  <img src=\"https://contributors-img.web.app/image?repo=mongodb/mongo-java-driver\" />\n</a>\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.4873046875,
          "content": "## Release Notes\n\nRelease notes are available [here](https://github.com/mongodb/mongo-java-driver/releases).\n\n## Documentation\n\nReference and API documentation for the Java driver is available [here](https://www.mongodb.com/docs/drivers/java/sync/current/). \n\nReference and API documentation for the Kotlin driver is available [here](https://www.mongodb.com/docs/drivers/kotlin/coroutine/current/).\n\nReference and API documentation for the Scala driver is available [here](https://www.mongodb.com/docs/languages/scala/scala-driver/current/). \n\n## Tutorials / Training\n\nFor tutorials on how to use the MongoDB JVM Drivers, please reference [MongoDB University](https://learn.mongodb.com/). Additional tutorials, videos, and code examples using both the Java Driver and the Kotlin Driver can also be found in the [MongoDB Developer Center](https://www.mongodb.com/developer/).\n\n## Support / Feedback\n\nFor issues with, questions about, or feedback for the MongoDB Java, Kotlin, and Scala drivers, please look into\nour [support channels](https://www.mongodb.com/docs/manual/support/). Please\ndo not email any of the driver developers directly with issues or\nquestions - you're more likely to get an answer on the [MongoDB Community Forums](https://community.mongodb.com/tags/c/drivers-odms-connectors/7/java-driver) or [StackOverflow](https://stackoverflow.com/questions/tagged/mongodb+java).\n\nAt a minimum, please include in your description the exact version of the driver that you are using.  If you are having\nconnectivity issues, it's often also useful to paste in the line of code where you construct the MongoClient instance,\nalong with the values of all parameters that you pass to the constructor. You should also check your application logs for\nany connectivity-related exceptions and post those as well.\n\n## Bugs / Feature Requests\n\nThink you’ve found a bug in the Java, Kotlin, or Scala drivers? Want to see a new feature in the drivers? Please open a\ncase in our issue management tool, JIRA:\n\n- [Create an account and login](https://jira.mongodb.org).\n- Navigate to [the JAVA project](https://jira.mongodb.org/browse/JAVA).\n- Click **Create Issue** - Please provide as much information as possible about the issue type, which driver you are using, and how to reproduce your issue.\n\nBug reports in JIRA for the driver and the Core Server (i.e. SERVER) project are **public**.\n\nIf you’ve identified a security vulnerability in a driver or any other\nMongoDB project, please report it according to the [instructions here](https://www.mongodb.com/docs/manual/tutorial/create-a-vulnerability-report).\n\n## Versioning\n\nMajor increments (such as 4.x -> 5.x) will occur when breaking changes are being made to the public API.  All methods and\nclasses removed in a major release will have been deprecated in a prior release of the previous major release branch, and/or otherwise\ncalled out in the release notes.\n\nMinor 5.x increments (such as 5.1, 5.2, etc) will occur when non-trivial new functionality is added or significant enhancements or bug\nfixes occur that may have behavioral changes that may affect some edge cases (such as dependence on behavior resulting from a bug). An\nexample of an enhancement is a method or class added to support new functionality added to the MongoDB server.   Minor releases will\nalmost always be binary compatible with prior minor releases from the same major release branch, except as noted below.\n\nPatch 5.x.y increments (such as 5.0.0 -> 5.0.1, 5.1.1 -> 5.1.2, etc) will occur for bug fixes only and will always be binary compatible\nwith prior patch releases of the same minor release branch.\n\n#### @Alpha\n\nAPIs marked with the `@Alpha` annotation are in the early stages of development, subject to incompatible changes, \nor even removal, in a future release and may lack some intended features. An APIs bearing `@Alpha` annotation may \ncontain known issues affecting functionality, performance, and stability. They are also exempt from any compatibility \nguarantees made by its containing library.\n\nIt is inadvisable for <i>applications</i> to use Alpha APIs in production environments or for <i>libraries</i>\n(which get included on users' CLASSPATHs, outside the library developers' control) to depend on these APIs. Alpha APIs\nare intended for <b>experimental purposes</b> only.\n\n#### @Beta\n\nAPIs marked with the `@Beta` annotation at the class or method level are subject to change. They can be modified in any way, or even\nremoved, at any time. If your code is a library itself (i.e. it is used on the CLASSPATH of users outside your own control), you should not\nuse beta APIs, unless you repackage them (e.g. by using shading, etc).\n\n#### @Deprecated\n\nAPIs marked with the `@Deprecated` annotation at the class or method level will remain supported until the next major release but it is\nrecommended to stop using them.\n\n#### com.mongodb.internal.*\n\nAll code inside the `com.mongodb.internal.*` packages is considered private API and should not be relied upon at all. It can change at any\ntime.\n\n## Binaries\n\nBinaries and dependency information for Maven, Gradle, Ivy and others can be found at\n[http://search.maven.org](http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.mongodb%22%20AND%20a%3A%22mongodb-driver-sync%22).\n\nExample for Maven:\n\n```xml\n<dependency>\n    <groupId>org.mongodb</groupId>\n    <artifactId>mongodb-driver-sync</artifactId>\n    <version>x.y.z</version>\n</dependency>\n```\nSnapshot builds are also published regulary via Sonatype.\n\nExample for Maven:\n\n```xml\n    <repositories>\n        <repository>\n            <id>sonatype-snapshot</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n        </repository>\n    </repositories>\n```\n\n## Build\n\nJava 17+ and git is required to build and compile the source. To build and test the driver:\n\n```\n$ git clone https://github.com/mongodb/mongo-java-driver.git\n$ cd mongo-java-driver\n$ ./gradlew check\n```\n\nThe test suite requires mongod to be running with [`enableTestCommands`](https://www.mongodb.com/docs/manual/reference/parameters/#param.enableTestCommands), which may be set with the `--setParameter enableTestCommands=1`\ncommand-line parameter:\n```\n$ mkdir -p data/db\n$ mongod --dbpath ./data/db --logpath ./data/mongod.log --port 27017 --logappend --fork --setParameter enableTestCommands=1\n```\n\nIf you encounter `\"Too many open files\"` errors when running the tests then you will need to increase \nthe number of available file descriptors prior to starting mongod as described in [https://www.mongodb.com/docs/manual/reference/ulimit/](https://www.mongodb.com/docs/manual/reference/ulimit/)\n\n## IntelliJ IDEA\n\nA couple of manual configuration steps are required to run the code in IntelliJ:\n\n- Java 17+ is required to build and compile the source.\n\n- **Error:** `java: cannot find symbol: class SNIHostName location: package javax.net.ssl`<br>\n **Fix:** Settings/Preferences > Build, Execution, Deployment > Compiler > Java Compiler - untick \"Use '--release' option for \n  cross-compilation (Java 9 and later)\"\n\n- **Error:** `java: package com.mongodb.internal.build does not exist`<br>\n **Fixes:** Any of the following: <br>\n  - Run the `generateBuildConfig` task: eg: `./gradlew generateBuildConfig` or via Gradle > driver-core > Tasks > buildconfig >\n generateBuildConfig\n  - Set `generateBuildConfig` to execute Before Build. via Gradle > Tasks > buildconfig > right click generateBuildConfig - click on \n   \"Execute Before Build\" \n  - Delegate all build actions to Gradle: Settings/Preferences > Build, Execution, Deployment > Build Tools > Gradle > Build and run \n  using/Run tests using - select \"Gradle\"\n"
        },
        {
          "name": "THIRD-PARTY-NOTICES",
          "type": "blob",
          "size": 7.2734375,
          "content": "The MongoDB Java Driver uses third-party libraries or other resources that may\nbe distributed under licenses different than the MongoDB Java Driver software.\n\nIn the event that we accidentally failed to list a required notice,\nplease bring it to our attention through any of the ways detailed here:\n\n           https://jira.mongodb.org/browse/JAVA\n\nThe attached notices are provided for information only.\n\nFor any licenses that require disclosure of source, sources are available at\nhttps://github.com/mongodb/mongo-java-driver.\n\n\n1) The following files: Immutable.java, NotThreadSafe.java, ThreadSafe.java\n\n   Copyright (c) 2005 Brian Goetz and Tim Peierls\n   Released under the Creative Commons Attribution License (http://creativecommons.org/licenses/by/2.5)\n   Official home: http://www.jcip.net\n\n   Any republication or derived work distributed in source code form\n   must include this copyright and license notice.\n\n2) The following files: Assertions.java\n\n    Copyright (c) 2008-2014 Atlassian Pty Ltd\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n3) The following files:\n\n    Alpha.java (formerly Beta.java)\n    Beta.java\n\n    Copyright 2010 The Guava Authors\n    Copyright 2011 The Guava Authors\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n4) The following files: InstantCodec.java, Jsr310CodecProvider.java, LocalDateCodec.java, LocalDateTimeCodec.java, LocalTimeCodec.java\n\n    Copyright 2008-present MongoDB, Inc.\n    Copyright 2018 Cezary Bartosiak\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n5) The following files: SaslPrep.java\n\n     Copyright 2008-present MongoDB, Inc.\n     Copyright 2017 Tom Bentley\n\n     Licensed under the Apache License, Version 2.0 (the \"License\");\n     you may not use this file except in compliance with the License.\n     You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n     Unless required by applicable law or agreed to in writing, software\n     distributed under the License is distributed on an \"AS IS\" BASIS,\n     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     See the License for the specific language governing permissions and\n     limitations under the License.\n\n6) The following files (originally from https://github.com/marianobarrios/tls-channel):\n\n        AsynchronousTlsChannel.java\n        AsynchronousTlsChannelGroup.java\n        BufferAllocator.java\n        BufferHolder.java\n        ByteBufferSet.java\n        ByteBufferUtil.java\n        ClientTlsChannel.java\n        DirectBufferAllocator.java\n        DirectBufferDeallocator.java\n        ExtendedAsynchronousByteChannel.java\n        HeapBufferAllocator.java\n        NeedsReadException.java\n        NeedsTaskException.java\n        NeedsWriteException.java\n        ServerTlsChannel.java\n        SniSslContextFactory.java\n        TlsChannel.java\n        TlsChannelBuilder.java\n        TlsChannelCallbackException.java\n        TlsChannelFlowControlException.java\n        TlsChannelImpl.java\n        TlsExplorer.java\n        TrackingAllocator.java\n        Util.java\n        WouldBlockException.java\n\n     Copyright (c) [2015-2020] all contributors\n\n     MIT License\n\n     Permission is hereby granted, free of charge, to any person obtaining a copy\n     of this software and associated documentation files (the \"Software\"), to deal\n     in the Software without restriction, including without limitation the rights\n     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     copies of the Software, and to permit persons to whom the Software is\n     furnished to do so, subject to the following conditions:\n\n     The above copyright notice and this permission notice shall be included in all\n     copies or substantial portions of the Software.\n\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     SOFTWARE.\n\n7) The following files (originally from https://github.com/google/guava):\n\n    InetAddressUtils.java (formerly InetAddresses.java)\n    InetAddressUtilsTest.java (formerly InetAddressesTest.java)\n\n    Copyright 2008-present MongoDB, Inc.\n    Copyright (C) 2008 The Guava Authors\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n8) The following files (originally from https://github.com/Litote/kmongo):\n\n    Filters.kt\n    Properties.kt\n    KPropertyPath.kt\n    FiltersTest.kt\n    KPropertiesTest.kt\n\n    Copyright 2008-present MongoDB, Inc.\n    Copyright (C) 2016/2022 Litote\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n"
        },
        {
          "name": "bson-kotlin",
          "type": "tree",
          "content": null
        },
        {
          "name": "bson-kotlinx",
          "type": "tree",
          "content": null
        },
        {
          "name": "bson-record-codec",
          "type": "tree",
          "content": null
        },
        {
          "name": "bson-scala",
          "type": "tree",
          "content": null
        },
        {
          "name": "bson",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 12.376953125,
          "content": "/*\n * Copyright 2008-present MongoDB, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\napply plugin: 'eclipse'\napply plugin: 'idea'\n\nbuildscript {\n    repositories {\n        mavenLocal()\n        mavenCentral()\n        maven { url \"https://plugins.gradle.org/m2/\" }\n    }\n    dependencies {\n        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:7.0.0'\n        classpath \"com.github.spotbugs.snom:spotbugs-gradle-plugin:6.0.15\"\n        classpath 'biz.aQute.bnd:biz.aQute.bnd.gradle:5.1.2'\n\n        // Scala plugins\n        classpath \"com.adtran:scala-multiversion-plugin:2.0.4\"\n        classpath \"com.diffplug.spotless:spotless-plugin-gradle:6.14.0\"\n\n        // kotlin plugins\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:1.8.10\"\n        classpath \"org.jetbrains.kotlin:kotlin-serialization:1.8.10\"\n        classpath \"org.jetbrains.dokka:dokka-gradle-plugin:1.8.10\"\n        classpath \"io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.21.0\"\n\n        // Test logging plugin\n        classpath 'com.adarshr:gradle-test-logger-plugin:2.1.0'\n    }\n}\n\n//////////////////////////////////////////\n// Common behavior                      //\n//////////////////////////////////////////\n\next {\n    configDir = new File(rootDir, 'config')\n    jnrUnixsocketVersion = '0.38.17'\n    nettyVersion = '4.1.87.Final'\n    snappyVersion = '1.1.10.3'\n    zstdVersion = '1.5.5-3'\n    awsSdkV2Version = '2.18.9'\n    awsSdkV1Version = '1.12.337'\n    projectReactorVersion = '2022.0.0'\n    junitBomVersion = '5.10.2'\n    logbackVersion = '1.3.14'\n    graalSdkVersion = '24.0.0'\n    reflectionsVersion = '0.9.10'\n    gitVersion = getGitVersion()\n}\n\ndef configDir = ext.configDir\ndef utilProjects = project(\":util\").allprojects\ndef coreProjects = subprojects - utilProjects\ndef scalaProjects = subprojects.findAll { it.name.contains('scala') }\ndef javaProjects = subprojects - scalaProjects\ndef javaMainProjects = javaProjects - utilProjects\ndef javaCodeCheckedProjects = javaMainProjects.findAll { !['driver-benchmarks', 'driver-workload-executor', 'driver-lambda'].contains(it.name) }\ndef javaAndScalaTestedProjects = javaCodeCheckedProjects + scalaProjects\n\nconfigure(coreProjects) {\n    apply plugin: 'idea'\n\n    group = 'org.mongodb'\n    version = '5.4.0-SNAPSHOT'\n\n    repositories {\n        mavenLocal()\n        google()\n        mavenCentral()\n\n        // Uncomment this to test with a snapshot build of mongodb-crypt\n        maven {\n            url 'https://oss.sonatype.org/content/repositories/snapshots'\n            content {\n                includeGroup \"org.mongodb\"\n            }\n        }\n    }\n}\n\nconfigure(javaProjects) {\n    apply plugin: 'java-library'\n\n    sourceSets {\n        main {\n            java.srcDirs = ['src/main']\n        }\n    }\n\n    tasks.withType(GenerateModuleMetadata) {\n        enabled = false\n    }\n\n}\n\nconfigure(scalaProjects) {\n    apply plugin: 'scala'\n    apply plugin: 'java-library'\n    apply plugin: 'idea'\n    apply plugin: \"com.adtran.scala-multiversion-plugin\"\n    apply plugin: \"com.diffplug.spotless\"\n\n    group = 'org.mongodb.scala'\n\n    dependencies {\n        api ('org.scala-lang:scala-library:%scala-version%')\n        api ('org.scala-lang:scala-reflect:%scala-version%')\n\n        testImplementation(platform(\"org.junit:junit-bom:$junitBomVersion\"))\n        testImplementation(\"org.junit.vintage:junit-vintage-engine\")\n\n        testImplementation('org.scalatest:scalatest-flatspec_%%:3.2.9')\n        testImplementation('org.scalatest:scalatest-shouldmatchers_%%:3.2.9')\n        testImplementation('org.scalatestplus:junit-4-13_%%:3.2.9.0')\n        testImplementation('org.scalatestplus:mockito-3-12_%%:3.2.10.0')\n        testImplementation(\"ch.qos.logback:logback-classic:$logbackVersion\")\n        testImplementation(\"org.reflections:reflections:$reflectionsVersion\")\n    }\n\n    test{\n        useJUnitPlatform {\n            includeEngines('junit-jupiter', 'junit-vintage')\n        }\n    }\n\n    spotless {\n        scala {\n            scalafmt().configFile(\"$configDir/scala/scalafmt.conf\")\n        }\n    }\n    compileScala.dependsOn('spotlessApply')\n    compileTestScala.dependsOn('spotlessApply')\n\n    tasks.withType(ScalaCompile) {\n        scalaCompileOptions.deprecation = false\n        if(scalaVersion.startsWith(\"2.11\")) {\n            scalaCompileOptions.additionalParameters = [\n                    // support static methods in interfaces\n                    \"-target:jvm-1.8\"\n            ]\n        }\n        if(scalaVersion.startsWith(\"2.13\")) {\n            scalaCompileOptions.additionalParameters = [\n                    \"-feature\",\n                    \"-unchecked\",\n                    \"-language:reflectiveCalls\",\n                    \"-Wconf:cat=deprecation:ws\",\n                    \"-Wconf:msg=While parsing annotations in:silent\",\n                    \"-Xlint:strict-unsealed-patmat\"\n            ]\n        }\n\n    }\n\n    tasks.withType(GenerateModuleMetadata) {\n        enabled = false\n    }\n}\n\nconfigure(javaMainProjects) {\n    apply plugin: 'nebula.optional-base'\n    apply plugin: 'java-library'\n\n    dependencies {\n        compileOnly 'com.google.code.findbugs:jsr305:1.3.9'\n        api 'org.slf4j:slf4j-api:1.7.6', optional\n        testImplementation 'com.google.code.findbugs:jsr305:1.3.9'\n\n        // https://issues.apache.org/jira/browse/GROOVY-10194\n        testImplementation 'org.codehaus.groovy:groovy-all:3.0.9'\n    }\n\n    /* Compiling */\n    tasks.withType(AbstractCompile) {\n        options.encoding = 'ISO-8859-1'\n        options.fork = true\n        options.debug = true\n        options.compilerArgs = ['-Xlint:all']\n    }\n}\n\nconfigure(javaAndScalaTestedProjects) {\n    /* Testing */\n    tasks.withType(Test) {\n        systemProperties(System.getProperties().findAll { it.key.toString().startsWith(\"org.mongodb.\") })\n        systemProperty('jna.library.path', System.getProperty('jna.library.path'))\n\n        project.ext.buildingWith = { propertyName ->\n            project.hasProperty(propertyName) && project.property(propertyName).toBoolean()\n        }\n\n        if (project.buildingWith('ssl.enabled')) {\n            if (project.hasProperty('ssl.keyStoreType')) {\n                systemProperties(\n                        'javax.net.ssl.keyStoreType': project.property('ssl.keyStoreType'),\n                        'javax.net.ssl.keyStore': project.property('ssl.keyStore'),\n                        'javax.net.ssl.keyStorePassword': project.property('ssl.keyStorePassword')\n                )\n            }\n            if (project.hasProperty('ssl.trustStoreType')) {\n                systemProperties(\n                        'javax.net.ssl.trustStoreType': project.property('ssl.trustStoreType'),\n                        'javax.net.ssl.trustStore': project.property('ssl.trustStore'),\n                        'javax.net.ssl.trustStorePassword': project.property('ssl.trustStorePassword')\n                )\n            }\n            if (project.hasProperty('ocsp.property')) {\n                systemProperties(\n                        'org.mongodb.test.ocsp.tls.should.succeed': project.property('ocsp.tls.should.succeed'),\n                        'java.security.properties': file(project.property('ocsp.property')),\n                        'com.sun.net.ssl.checkRevocation': project.property('ssl.checkRevocation'),\n                        'jdk.tls.client.enableStatusRequestExtension': project.property('client.enableStatusRequestExtension'),\n                        'jdk.tls.client.protocols': project.property('client.protocols')\n                )\n            }\n        }\n\n        if (project.buildingWith('gssapi.enabled')) {\n            systemProperties(\n                    'sun.security.krb5.debug': project.getProperty('sun.security.krb5.debug'),\n                    'javax.security.auth.useSubjectCredsOnly': \"false\",\n                    'java.security.krb5.kdc': project.getProperty('krb5.kdc'),\n                    'java.security.krb5.realm': project.getProperty('krb5.realm'),\n                    'java.security.auth.login.config': project.getProperty('auth.login.config'),\n            )\n        }\n    }\n}\n\nconfigure(javaCodeCheckedProjects) {\n    apply plugin: 'checkstyle'\n    apply plugin: \"com.github.spotbugs\"\n    apply plugin: 'jacoco'\n    apply plugin: 'groovy'\n    apply plugin: 'codenarc'\n    apply plugin: 'com.adarshr.test-logger'\n\n    dependencies {\n        testImplementation(platform(\"org.junit:junit-bom:$junitBomVersion\"))\n        testImplementation('org.junit.jupiter:junit-jupiter')\n        testImplementation('org.junit.jupiter:junit-jupiter-params')\n        testImplementation('org.junit.jupiter:junit-jupiter-engine')\n        testImplementation('org.junit.vintage:junit-vintage-engine')\n\n        testImplementation platform('org.spockframework:spock-bom:2.1-groovy-3.0')\n        testImplementation 'org.spockframework:spock-core'\n        testImplementation 'org.spockframework:spock-junit4'\n        if ('8'.equals(findProperty(\"javaVersion\"))) {\n            testImplementation(\"org.mockito:mockito-core:4.6.1\")\n            testImplementation(\"org.mockito:mockito-inline:4.6.1\")\n        } else {\n            testImplementation(\"org.mockito:mockito-core:5.11.0\")\n        }\n        testImplementation 'cglib:cglib-nodep:2.2.2'\n        testImplementation 'org.objenesis:objenesis:1.3'\n        testImplementation 'org.hamcrest:hamcrest-all:1.3'\n        testImplementation \"ch.qos.logback:logback-classic:$logbackVersion\"\n        testImplementation project(':util:spock') //Adding categories to classpath\n    }\n\n    sourceSets {\n        test {\n            groovy.srcDirs = ['src/test/functional', 'src/test/unit']\n        }\n    }\n\n    /* Testing */\n    tasks.withType(Test) {\n        maxHeapSize = \"4g\"\n        maxParallelForks = 1\n\n        useJUnitPlatform {\n            includeEngines('junit-jupiter', 'junit-vintage', 'spock')\n            excludeTags('Slow')\n        }\n        systemProperty('spock.configuration', \"${configDir}/spock/ExcludeSlow.groovy\")\n\n        jacoco { enabled = false }\n\n        testLogging {\n            exceptionFormat = 'full'\n            events(\"passed\", \"skipped\", \"failed\")\n        }\n\n        testlogger {\n            theme 'standard'\n            showExceptions false\n            showStackTraces false\n            showFullStackTraces false\n        }\n    }\n\n    task testSlowOnly(type: Test) {\n        dependsOn('testSlowGroovy')\n        useJUnitPlatform {\n            includeEngines('junit-jupiter', 'junit-vintage')\n            includeTags('Slow')\n        }\n    }\n\n    task testSlowGroovy(type: Test) {\n        useJUnitPlatform {\n            includeEngines( 'spock')\n        }\n        systemProperty('spock.configuration', \"${configDir}/spock/OnlySlow.groovy\")\n    }\n\n    gradle.taskGraph.whenReady { taskGraph ->\n        if (taskGraph.hasTask(testCoverage)) {\n            tasks.withType(Test) { jacoco { enabled = true } }\n        }\n    }\n\n    task testCoverage(dependsOn: test)\n\n    /* Code quality */\n    tasks.withType(Checkstyle) {\n        reports {\n            xml.required = true\n            html.required = true\n        }\n    }\n\n    checkstyle {\n        toolVersion = \"9.1\"\n    }\n\n    spotbugs {\n        if (!project.buildingWith('ssdlcReport.enabled')) {\n            excludeFilter = new File(configDir, 'spotbugs/exclude.xml')\n        }\n    }\n\n    codenarc {\n        toolVersion = '1.6.1'\n        reportFormat = project.buildingWith('xmlReports.enabled') ? 'xml' : 'html'\n    }\n\n    spotbugsMain {\n        reports {\n            xml.enabled = project.buildingWith('xmlReports.enabled')\n            html.enabled = !project.buildingWith('xmlReports.enabled')\n            sarif.enabled = project.buildingWith('ssdlcReport.enabled')\n        }\n    }\n\n    spotbugsTest {\n        enabled = false\n    }\n}\n\ndef getGitVersion() {\n    def describeStdOut = new ByteArrayOutputStream()\n    exec {\n        commandLine 'git', 'describe', '--tags', '--always', '--dirty'\n        standardOutput = describeStdOut\n    }\n    describeStdOut.toString().substring(1).trim()\n}\n\napply from: 'gradle/javaToolchain.gradle'\napply from: 'gradle/publish.gradle'\napply from: 'gradle/deploy.gradle'\napply from: 'gradle/javadoc.gradle'\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-kotlin-coroutine",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-kotlin-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-kotlin-sync",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-lambda",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-legacy",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-reactive-streams",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-scala",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-sync",
          "type": "tree",
          "content": null
        },
        {
          "name": "driver-workload-executor",
          "type": "tree",
          "content": null
        },
        {
          "name": "graalvm-native-image-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.865234375,
          "content": "#\n# Copyright 2008-present MongoDB, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\norg.gradle.daemon=true\norg.gradle.jvmargs=-Duser.country=US -Duser.language=en\nscalaVersions=2.11.12,2.12.20,2.13.15\ndefaultScalaVersions=2.13.15\nrunOnceTasks=clean,release\norg.gradle.java.installations.auto-download=false\norg.gradle.java.installations.fromEnv=JDK8,JDK11,JDK17,JDK21,JDK21_GRAALVM\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.630859375,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.611328125,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "java-security-ocsp-property",
          "type": "blob",
          "size": 0.0166015625,
          "content": "ocsp.enable=true\n"
        },
        {
          "name": "mongodb-crypt",
          "type": "tree",
          "content": null
        },
        {
          "name": "sbom.json",
          "type": "blob",
          "size": 0.197265625,
          "content": "{\n  \"serialNumber\": \"urn:uuid:a291eaa6-9c96-4c46-9fb1-474f745cf6f5\",\n  \"version\": 1,\n  \"$schema\": \"http://cyclonedx.org/schema/bom-1.5.schema.json\",\n  \"bomFormat\": \"CycloneDX\",\n  \"specVersion\": \"1.5\"\n}\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 1.1591796875,
          "content": "/*\n * Copyright 2008-present MongoDB, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ninclude ':bson'\ninclude ':bson-record-codec'\ninclude ':driver-benchmarks'\ninclude ':driver-workload-executor'\ninclude ':driver-lambda'\ninclude ':driver-core'\ninclude ':driver-legacy'\ninclude ':driver-sync'\ninclude ':driver-reactive-streams'\ninclude ':bson-kotlin'\ninclude ':bson-kotlinx'\ninclude ':driver-kotlin-extensions'\ninclude ':driver-kotlin-sync'\ninclude ':driver-kotlin-coroutine'\ninclude ':bson-scala'\ninclude ':driver-scala'\ninclude ':mongodb-crypt'\ninclude 'util:spock'\ninclude 'util:taglets'\n\nif(hasProperty(\"includeGraalvm\")) {\n    include ':graalvm-native-image-app'\n}\n"
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}