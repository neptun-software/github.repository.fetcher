{
  "metadata": {
    "timestamp": 1736708108467,
    "page": 510,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jd-alexander/LikeButton",
      "stars": 3015,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.408203125,
          "content": "#built application files\n*.apk\n*.ap_\n\n# files for the dex VM\n*.dex\n\n# Java class files\n*.class\n\n# generated files\nbin/\ngen/\nmirror/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Windows thumbnail db\nThumbs.db\n\n# OSX files\n.DS_Store\n\n# Eclipse project files\n.classpath\n.project\n\n# Android Studio\n*.iml\n.idea\n#.idea/workspace.xml - remove # and delete .idea if it better suit your needs.\n.gradle\nbuild/"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.88671875,
          "content": "before_install:\n - chmod +x gradlew\n  - yes | sdkmanager \"platforms;android-27\"\n  \nlanguage: android\njdk: oraclejdk8\n\nandroid:\n  components:\n    - tools\n    - build-tools-27.0.1\n    - android-27\n    - extra-android-support\n    - extra-android-m2repository\n    - extra-google-m2repository\n\n    # Uncomment the lines below if you want to\n    # use the latest revision of Android SDK Tools\n    # - platform-tools\n    # - tools\n\n    # The BuildTools version used by your project\n    #- build-tools-23.0.2\n\n    # The SDK version used to compile your project\n    #- android-23\n\n    # Additional components\n    #- extra-google-google_play_services\n    #- extra-google-m2repository\n    #- extra-android-m2repository\n    #- addon-google_apis-google-19\n\n    # Specify at least one system image,\n    # if you need to run emulator(s) during your tests\n    #- sys-img-armeabi-v7a-android-19\n    #- sys-img-x86-android-17\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.087890625,
          "content": "# Like Button \n\n[ ![JitPack](https://img.shields.io/github/release/jd-alexander/likebutton.svg?label=jitpack) ](https://jitpack.io/#jd-alexander/likebutton)\n[![Build Status](https://travis-ci.org/jd-alexander/LikeButton.svg)](https://travis-ci.org/jd-alexander/LikeButton)\n[![License](https://img.shields.io/badge/license-Apache%202-4EB1BA.svg?style=flat-square)](https://www.apache.org/licenses/LICENSE-2.0.html)\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-LikeButton-green.svg?style=true)](https://android-arsenal.com/details/1/3038)\n\n\nLike Button is a library that allows you to create a button with animation effects similar to [Twitter's heart](https://dribbble.com/shots/2416983-Twitter-Heart-Animation) when you like something.\n\n![Icon animations](http://i.giphy.com/3o8dp4uq3K4vvR1MJO.gif \"Icon animations\")\n\n---\n\n# Table of Contents\n\n1. [Gradle Dependency](https://github.com/jd-alexander/LikeButton#gradle-dependency)\n   1. [Repository](https://github.com/jd-alexander/LikeButton#repository)\n   2. [Dependency](https://github.com/jd-alexander/LikeButton#dependency)\n2. [Basic Usage](https://github.com/jd-alexander/LikeButton#basic-usage)\n   1. [Like Button XML](https://github.com/jd-alexander/LikeButton#like-button-xml)\n   2. [Attributes](https://github.com/jd-alexander/LikeButton#attributes)\n3. [Button State](https://github.com/jd-alexander/LikeButton#button-state)\n4. [Like Event Listener](https://github.com/jd-alexander/LikeButton#like-event-listener)\n5. [Icon Types](https://github.com/jd-alexander/LikeButton#icon-types)\n6. [Icon Size](https://github.com/jd-alexander/LikeButton#icon-size)\n7. [Custom Icons](https://github.com/jd-alexander/LikeButton#custom-icons)\n8. [Circle Color Config](https://github.com/jd-alexander/LikeButton#circle-color-config)\n9. [Dots Color Config](https://github.com/jd-alexander/LikeButton#dots-color-config)\n10. [Animation Size](https://github.com/jd-alexander/LikeButton#animation-size)\n11. [Inspiration](https://github.com/jd-alexander/LikeButton#inspiration)\n12. [Contribution](https://github.com/jd-alexander/LikeButton#contribution)\n13. [License](https://github.com/jd-alexander/LikeButton#license)\n\n   \n---\n\n# Gradle Dependency\n\n\n#### Repository\n\nAdd this in your root `build.gradle` file (**not** your module `build.gradle` file):\n\n```gradle\nallprojects {\n\trepositories {\n\t\t...\n\t\tmaven { url \"https://jitpack.io\" }\n\t}\n}\n```\n\n#### Dependency\n\nAdd this to your module's `build.gradle` file:\n\n```gradle\ndependencies {\n\t...\n\tcompile 'com.github.jd-alexander:LikeButton:0.2.3'\n\t}\n}\n```\n\n---\n\n# Basic Usage\n\n#### Like Button XML\n\nTo use this like button in your layout simply copy and paste the xml below. This provides the default heart button. \n\n```xml\n<com.like.LikeButton\n            app:icon_type=\"heart\"\n            app:icon_size=\"25dp\"\n            android:id=\"@+id/star_button\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"/>\n```\n\n#### Attributes\n\nThere are several other attributes that can be used to configure the button's behaviour and appearance. They are shown below and will be explained in the sections that follow long with their java counterparts.\n\n```xml\n<com.like.LikeButton\napp:icon_type=\"Star\"\napp:circle_start_color=\"@color/colorPrimary\"\napp:like_drawable=\"@drawable/thumb_on\"\napp:unlike_drawable=\"@drawable/thumb_off\"\napp:dots_primary_color=\"@color/colorAccent\"\napp:dots_secondary_color=\"@color/colorPrimary\"\napp:circle_end_color=\"@color/colorAccent\"\napp:icon_size=\"25dp\"\napp:liked=\"true\"\napp:anim_scale_factor=\"2\"\napp:is_enabled=\"false\"\n/>\n\n```\n---\n\n# Button State\n\nTo set the inital liked state of the button you simply use the setLiked functionality via XML or Java. This will show the button in the liked state with the drawable that you selected.\n\n#### XML\n\n```\napp:liked=\"true\"\n```\n\n#### Java\n\n\n```java\n\nlikeButton.setLiked(true);\n```\n\nYou can also set if the button is to be enabled or disabled. Once disabled, the animation, listener or any other functionality of the button won't be triggered.\n\n#### XML\n\n```\napp:is_enabled=\"false\"\n```\n\n#### Java\n\n\n```java\n\nlikeButton.setEnabled(false);\n```\n\n\n\n---\n\n# Like Event Listener\n\nTo listen to events from your like button, simply implement the listener that's triggered once the button is tapped.\n\n```java\n\nlikeButton.setOnLikeListener(new OnLikeListener() {\n            @Override\n            public void liked(LikeButton likeButton) {\n\n            }\n\n            @Override\n            public void unLiked(LikeButton likeButton) {\n\n            }\n        });\n\n```\n\n---\n\n# Icon Types\n\nThe libary is bundled with three icons that you can use. A heart,thumb and a star. \n\n#### XML\n\nTo set the respective icon via xml simply use the word in the icon type attribute.\n\n```\napp:icon_type=\"heart\"\n```\n\n#### Java\n\nIf you would like to set the icon via Java then simply call the set icon method on the button. \n\n```java\n\nlikeButton.setIcon(IconType.Star);\n```\n---\n\n# Icon Size\n\n#### XML\n\nTo set the icon size via xml simply use this attribute\n\n```xml\napp:icon_size=\"20dp\"\n```\n\n#### Java\n\nIf you are doing it programmatically you can set it with either the method for pixels or dp. \n\n```java\nlikeButton.setIconSizePx(40);\nlikeButton.setIconSizeDp(20);\n```\nNote, it's very important that the size of the button is set even if you are planning to use custom drawables as described below as the library uses this value to determine the width and height of the effects that occur when the button is tapped.\n\n---\n\n# Custom Icons\n\n#### XML\n\nIn order to use custom icons instead of the ones bundled with the library you simply set the drawables that represent the liked and unliked state of the button.\n\n```\napp:like_drawable=\"@drawable/thumb_on\"\napp:unlike_drawable=\"@drawable/thumb_off\"\n```\n\n#### Java\n\n```java\nlikeButton.setLikeDrawable(heart_on);\nlikeButton.setUnlikeDrawable(heart_off);\n\nlikeButton.setUnlikeDrawableRes(R.drawable.heart_off);\nlikeButton.setLikeDrawableRes(R.drawable.heart_on);\n```\n---\n\n# Circle Color Config\n\nIf you watch the animation closely you will notice that there's a circle that begins from the center of the icon and and then it animates away from the center before the exploding dots animate. These colours can be changed to suit the theme of your icon.\n\n#### XML\n\n```\napp:circle_start_color=\"@color/colorPrimary\"\napp:circle_end_color=\"@color/colorAccent\"\n```\n\n#### Java\n\n```java\nlikeButton.setCircleEndColorRes(R.color.colorAccent);\nlikeButton.setCircleEndColorRes(R.color.colorPrimary);\n```\n---\n\n# Dots Color Config\n\nThe dots that represent the outer animation can be coloured also.\n\n#### XML\n\n```\napp:dots_primary_color=\"@color/colorAccent\"\napp:dots_secondary_color=\"@color/colorPrimary\"\n```\n\n#### Java\n\n```\nlikeButton.setExplodingDotColorsRes(R.color.colorPrimary,R.color.colorAccent);\n```\n---\n\n\n# Animation Size\n\nTo change the size of the dots that also contributes to the size of the overall like button view you can use the animation scale factor attribute via XML or it's Java equivalent\n\n#### XML\n\n```\napp:anim_scale_factor=\"2.5\"\n\n```\n\n#### Java\n\n```\nlikeButton.setAnimationScaleFactor(2);\n```\n---\n\n\n# Inspiration\n\nThis library was made by possible based on code and design inspiration from these sources:\n\nhttps://github.com/frogermcs/LikeAnimation\n\nhttps://github.com/lightsmeki/android_twitter_heart_animation_button\n\nhttps://dribbble.com/shots/2416983-Twitter-Heart-Animation\n\n\n\n# Contribution\n\n\nPlease fork repository and contribute using pull requests.\n\nAny contributions, large or small, major features, bug fixes, additional language translations, unit/integration tests are welcomed and appreciated but will be thoroughly reviewed and discussed.\n\n\n# License\n\n    Copyright 2016 Joel Dean\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.7880859375,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n\n        maven {\n            url 'https://maven.google.com/'\n            name 'Google'\n        }\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.0.1'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n        maven { url \"https://jitpack.io\" }\n        maven {\n            url 'https://maven.google.com/'\n            name 'Google'\n        }\n    }\n}\n\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8349609375,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "likebutton",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.029296875,
          "content": "include ':app', ':likebutton'\n"
        }
      ]
    }
  ]
}