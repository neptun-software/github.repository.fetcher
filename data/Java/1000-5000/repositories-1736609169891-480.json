{
  "metadata": {
    "timestamp": 1736609169891,
    "page": 480,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "yipianfengye/android-adDialog",
      "stars": 3115,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.78515625,
          "content": "# android-adDialog\n\n**更新日志**\n\n- compile 1.0 2016/08/08 完成广告活动弹窗1.0版本\n\n- compile 1.0 2016/08/08 删除demo中约束引用（否则AS2.2以下编译有问题）\n\n\n\n在介绍具体的使用说明之前，我们先看一下简单的实现效果：\n<br><br>![image](https://github.com/yipianfengye/android-adDialog/blob/master/images/ezgif.com-video-to-gif1.gif)\n\n**使用说明**\n\n- 显示一个默认广告弹窗，支持单广告活动、多广告活动，当弹窗显示多广告是默认显示底部小圆圈，当显示单活动时默认不显示底部小圆圈；\n\n- 默认支持弹窗从上，下，左，右，左上，右上，左下，右下等八个方向弹出，更可以设置从任意指定的角度（0-360）弹出；\n\n- 默认继承了弹性动画效果，可以设定弹性动画弹性参数，动画速度等；\n\n- 支持对弹窗背景透明色的更改，支持对弹窗透明，支持设置弹窗背景全屏显示或者是只在内容区域显示；\n\n- 支持设定弹窗宽高比，支持设置弹窗距离屏幕两侧距离，支持设置关闭按钮是否显示；\n\n- 支持对关闭按钮点击事件的回调，对每一项广告活动点击事件的回调等；\n\n- 支持对ViewPager滑动动画效果的设定，支持自定义ViewPager滑动动画效果；\n\n**API说明：**\n\n所有的设置参数均返回AdManager对象，所以可以直接链式调用。\n```\nAdManager adManager = new AdManager(MainActivity.this, advList);\naDMamager.\n/**\n * 设置弹窗背景全屏显示还是在内容区域显示\n */\n.setOverScreen(true)\n/**\n * 设置ViewPager的滑动动画\n */\n.setPageTransformer(new DepthPageTransformer())\n/**\n * 设置弹窗距离屏幕两侧的距离（单位dp）\n */\n.setPadding(100)\n/**\n * 设置弹窗的宽高比\n */\n.setWidthPerHeight(0.75f)\n/**\n * 设置弹窗的背景色（当弹窗背景设置透明时，此设置失效）\n */\n.setBackViewColor(Color.parseColor(\"#AA333333\"))\n/**\n * 设置弹窗背景是否透明\n */\n.setAnimBackViewTransparent(true)\n/**\n * 设置弹窗关闭图标是否可见\n */\n.setDialogCloseable(false)\n/**\n * 设置弹窗弹性滑动弹性值\n */\n.setBounciness(15)\n/**\n * 设置弹窗弹性滑动速度值\n */\n.setSpeed(5)\n/**\n * 设定弹窗点击事件回调\n */\n.setOnImageClickListener(new AdManager.OnImageClickListener() {})\n/**\n * 设定关闭按钮点击事件回调\n */\n.setOnCliseClickListener(new OnClickListener() {})\n/**\n * 开始执行弹窗的显示操作，可传值为0-360，0表示从右开始弹出，逆时针方向，也可以传入自定义的方向值\n */\n.showAdDialog(AdConstant.ANIM_UP_TO_DOWN)\n```\n\n**使用方式：**\n\n- 在module的build.gradle中执行compile操作\n\n```\ncompile 'cn.yipianfengye.android:ad-library:1.0'\n```\n\n- 在代码中初始化数据\n\n```\n/**\n     * 初始化数据\n     */\n    private void initData() {\n        advList = new ArrayList<>();\n        AdInfo adInfo = new AdInfo();\n        adInfo.setActivityImg(\"https://raw.githubusercontent.com/yipianfengye/android-adDialog/master/images/testImage1.png\");\n        advList.add(adInfo);\n\n        adInfo = new AdInfo();\n        adInfo.setActivityImg(\"https://raw.githubusercontent.com/yipianfengye/android-adDialog/master/images/testImage2.png\");\n        advList.add(adInfo);\n    }\n```\n这里只要是初始化图片的UI地址信息，方便我们的后续下载操作。\n\n- 执行弹窗的初始化与现实操作\n\n```\n/**\n * 创建广告活动管理对象\n */\nAdManager adManager = new AdManager(MainActivity.this, advList);\nadManager.setOverScreen(true)\n         .setPageTransformer(new DepthPageTransformer());\n/**\n * 执行弹窗的显示操作\n */\nadManager.showAdDialog(AdConstant.ANIM_DOWN_TO_UP);\n```\n\n怎么样是不是很简单？下面我们可以来看一下具体API。\n\n**具体的API说明：**\n\n- （1）自定义的弹窗弹出方向API\n\n在执行AdManager的showAdDialog方法时，需要传递一个int型的animType参数，我们默认定义了八个该类型的参数，默认如下：\n\n```\n// ####################### 弹出动画效果 ###########################\n    /**\n     * 广告活动弹窗动画-从上至下\n     */\n    public static final int ANIM_UP_TO_DOWN = -11;\n    /**\n     * 广告活动弹窗动画-从下至上\n     */\n    public static final int ANIM_DOWN_TO_UP = -12;\n    /**\n     * 广告活动弹窗动画-从左至右\n     */\n    public static final int ANIM_LEFT_TO_RIGHT = -13;\n    /**\n     * 广告活动弹窗动画-从右至左\n     */\n    public static final int ANIM_RIGHT_TO_LEFT = -14;\n    /**\n     * 广告活动弹窗动画-从左上弹出\n     */\n    public static final int ANIM_UPLEFT_TO_CENTER = -15;\n    /**\n     * 广告活动弹窗动画-从右上弹出\n     */\n    public static final int ANIM_UPRIGHT_TO_CENTER = -16;\n    /**\n     * 广告活动弹窗动画-从左下弹出\n     */\n    public static final int ANIM_DOWNLEFT_TO_CENTER = -17;\n    /**\n     * 广告活动弹窗动画-从右下弹出\n     */\n    public static final int ANIM_DOWNRIGHT_TO_CENTER = -18;\n```\n\n好吧，如果你觉得还不够好，我想让弹窗从右上侧30度角的弹出可以么？这也是支持的，只需要你传递的int型的animType的时候传递30就好了，如下：\n\n```\n/**\n * 执行弹窗的显示操作（参数的范围：0-360，0表示从右侧弹出，逆时针旋转）\n */\nadManager.showAdDialog(30);\n```\n\n那么我们看一下执行效果呢：\n\n![image](https://github.com/yipianfengye/android-adDialog/blob/master/images/ezgif.com-video-to-gif2.gif)\n\n- （2）自定义弹窗距离屏幕两侧的距离以及弹窗的宽高比：\n\n```\n/**\n         * 自定义设置广告活动弹窗距离屏幕两侧距离以及宽高比\n         */\n        button2.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                AdManager adManager = new AdManager(MainActivity.this, advList);\n\n                adManager.setOnImageClickListener(new AdManager.OnImageClickListener() {\n                    @Override\n                    public void onImageClick(View view, AdInfo advInfo) {\n                        Toast.makeText(MainActivity.this, \"您点击了ViewPagerItem...\", Toast.LENGTH_SHORT).show();\n                    }\n                })\n                .setPadding(100)\n                .setWidthPerHeight(0.5f)\n                .showAdDialog(AdConstant.ANIM_UP_TO_DOWN);\n            }\n        });\n```\n\n然后我们看一下执行效果：\n\n![image](https://github.com/yipianfengye/android-adDialog/blob/master/images/ezgif.com-video-to-gif3.gif)\n\n怎么样？是不是发现弹窗的宽高比和距离屏幕两侧的距离发生了变化？\n\n- （3）自定义背景颜色，自定义弹窗是否覆盖全屏，关闭按钮是否显示\n\n```\n/**\n         * 自定义弹窗背景颜色,弹窗是否覆盖全屏,关闭按钮是否显示等\n         */\n        button3.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                AdManager adManager = new AdManager(MainActivity.this, advList);\n\n                adManager.setOnImageClickListener(new AdManager.OnImageClickListener() {\n                    @Override\n                    public void onImageClick(View view, AdInfo advInfo) {\n                        Toast.makeText(MainActivity.this, \"您点击了ViewPagerItem...\", Toast.LENGTH_SHORT).show();\n                    }\n                })\n                .setBackViewColor(Color.parseColor(\"#AA333333\"))\n                .setDialogCloseable(false)\n                .showAdDialog(AdConstant.ANIM_UP_TO_DOWN);\n            }\n        });\n```\n\n然后我们来看一下具体的实现效果：\n\n![image](https://github.com/yipianfengye/android-adDialog/blob/master/images/ezgif.com-video-to-gif4.gif)\n\n可以看到我们更改了弹窗的背景颜色以及未显示关闭按钮\n\n- （4）自定义设置弹性动画弹性参数和速度参数\n\n```\n/**\n         * 自定义设定弹窗弹性参数和速度参数\n         */\n        button4.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                AdManager adManager = new AdManager(MainActivity.this, advList);\n\n                adManager.setOnImageClickListener(new AdManager.OnImageClickListener() {\n                    @Override\n                    public void onImageClick(View view, AdInfo advInfo) {\n                        Toast.makeText(MainActivity.this, \"您点击了ViewPagerItem...\", Toast.LENGTH_SHORT).show();\n                    }\n                })\n                .setBounciness(20)\n                .setSpeed(4)\n                .showAdDialog(AdConstant.ANIM_UP_TO_DOWN);\n            }\n        });\n```\n\n然后我们看一下动画效果：\n<br>![image](https://github.com/yipianfengye/android-adDialog/blob/master/images/ezgif.com-video-to-gif5.gif)\n\n为了明显的展示出动画效果，我们设置的弹性参数和速度参数比较大，是不是比较出来了这两个参数的作用？\n\n- （5）自定义设置弹窗ViewPager滑动动画：\n\n```\n/**\n         * 自定义设置弹窗ViewPager滑动动画\n         */\n        button5.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                AdManager adManager = new AdManager(MainActivity.this, advList);\n\n                adManager.setOnImageClickListener(new AdManager.OnImageClickListener() {\n                    @Override\n                    public void onImageClick(View view, AdInfo advInfo) {\n                        Toast.makeText(MainActivity.this, \"您点击了ViewPagerItem...\", Toast.LENGTH_SHORT).show();\n                    }\n                })\n                .setPageTransformer(new RotateDownPageTransformer())\n                .showAdDialog(AdConstant.ANIM_UP_TO_DOWN);\n            }\n        });\n```\n\n然后我们看一下弹窗的滑动动画：\n\n![image](https://github.com/yipianfengye/android-adDialog/blob/master/images/ezgif.com-video-to-gif6.gif)\n\n这里我内置了三种ViewPager的滑动动画效果：\n\n```\nDepthPageTransformer；\nRotateDownPageTransformer；\nZoomOutPageTransformer；\n```\n我们还可以自定义实现：PageTransformer自定义出自己的滑动动画效果，更多关于PageTransformer的知识，可参考鸿洋大神的：<a href=\"http://blog.csdn.net/lmj623565791/article/details/40411921\"> Android 实现个性的ViewPager切换动画 实战PageTransformer（兼容Android3.0以下）</a>\n\n- （6）自定义关闭按钮点击事件回调，ViewPagerItem点击事件回调\n\n```\n/**\n         * 自定义设置弹窗ViewPagerItem点击事件，关闭按钮点击事件回调\n         */\n        button6.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                AdManager adManager = new AdManager(MainActivity.this, advList);\n\n                adManager.setOnImageClickListener(new AdManager.OnImageClickListener() {\n                    @Override\n                    public void onImageClick(View view, AdInfo advInfo) {\n                        Toast.makeText(MainActivity.this, \"您点击了ViewPagerItem...\", Toast.LENGTH_SHORT).show();\n                    }\n                })\n                .setOnCloseClickListener(new View.OnClickListener() {\n                            @Override\n                            public void onClick(View v) {\n                                Toast.makeText(MainActivity.this, \"您点击了关闭按钮...\", Toast.LENGTH_SHORT).show();\n                            }\n                        })\n                .showAdDialog(AdConstant.ANIM_UP_TO_DOWN);\n            }\n        });\n```\n\n好吧，以上就是广告活动弹窗的API，除了以上还可以添加其他的一些API，欢迎提出。\n\n以上就是这个控件的相关内容，欢迎star和follow，也可参考我的blog：<a href=\"http://blog.csdn.net/qq_23547831/article/details/52121633\">Github项目解析（十一）-->一个简单强大的自定义广告活动弹窗</a>\n"
        },
        {
          "name": "adlibrary",
          "type": "tree",
          "content": null
        },
        {
          "name": "android-adDialog.iml",
          "type": "blob",
          "size": 0.849609375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module external.linked.project.id=\"android-adDialog\" external.linked.project.path=\"$MODULE_DIR$\" external.root.project.path=\"$MODULE_DIR$\" external.system.id=\"GRADLE\" type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"FacetManager\">\n    <facet type=\"java-gradle\" name=\"Java-Gradle\">\n      <configuration>\n        <option name=\"BUILD_FOLDER_PATH\" value=\"$MODULE_DIR$/build\" />\n        <option name=\"BUILDABLE\" value=\"false\" />\n      </configuration>\n    </facet>\n  </component>\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_7\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <excludeFolder url=\"file://$MODULE_DIR$/.gradle\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.486328125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.0.0'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.712890625,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx1536m\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "local.properties",
          "type": "blob",
          "size": 0.4892578125,
          "content": "## This file is automatically generated by Android Studio.\n# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n#\n# This file must *NOT* be checked into Version Control Systems,\n# as it contains information specific to your local configuration.\n#\n# Location of the SDK. This is only used by Gradle.\n# For customization when using a Version Control System, please read the\n# header note.\n#Tue Aug 02 15:47:21 CST 2016\nndk.dir=/Users/aaron/document/sdk/ndk-bundle\nsdk.dir=/Users/aaron/document/sdk\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0283203125,
          "content": "include ':app', ':adlibrary'\n"
        }
      ]
    }
  ]
}