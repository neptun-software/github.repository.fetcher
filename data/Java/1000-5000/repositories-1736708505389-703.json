{
  "metadata": {
    "timestamp": 1736708505389,
    "page": 703,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Todd-Davies/ProgressWheel",
      "stars": 2644,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4189453125,
          "content": "# built application files\r\n*.apk\r\n*.ap_\r\n\r\n# files for the dex VM\r\n*.dex\r\n\r\n# Java class files\r\n*.class\r\n\r\n# generated files\r\nbin/\r\ngen/\r\n\r\n# Local configuration file (sdk path, etc)\r\nlocal.properties\r\n\r\n# Eclipse project files\r\n.classpath\r\n.project\r\n\r\n# Proguard folder generated by Eclipse\r\nproguard/\r\n\r\n# Intellij project files\r\n*.iml\r\n*.ipr\r\n*.iws\r\n.idea/\r\n\r\n# Mac system files\r\n.DS_Store\r\n\r\n#Gradle\r\n.gradle\r\ngradle\r\nbuild\r\n"
        },
        {
          "name": "AndroidManifest.xml",
          "type": "blob",
          "size": 0.6630859375,
          "content": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.todddavies.components.progressbar\"\r\n    android:versionCode=\"1\"\r\n    android:versionName=\"1.0\" >\r\n\r\n    <uses-sdk android:minSdkVersion=\"7\" />\r\n\r\n    <application\r\n        android:theme=\"@android:style/Theme.NoTitleBar\"\r\n        android:label=\"@string/app_name\" >\r\n        <activity\r\n            android:label=\"@string/app_name\"\r\n            android:name=\".Main\" >\r\n            <intent-filter >\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>\r\n"
        },
        {
          "name": "MIT-LICENSE.txt",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Todd Davies\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.5849609375,
          "content": "![Project frozen](https://img.shields.io/badge/status-frozen-blue.png) ![Project unmaintained](https://img.shields.io/badge/project-unmaintained-red.svg)\n\n\nDeprecation warning\n===================\n\nThis project is no-longer maintained, and has not been maintained for a few years now. If you're looking for an alternative library, consider the below options:\n\n- https://github.com/pnikosis/materialish-progress\n- https://github.com/ybq/Android-SpinKit\n- https://github.com/zekapp/Android-ProgressViews\n\nIf, on the other hand, you'd like to take over maintinance of the project or modernise it, feel free to do so; just send me pull requests or an email (at todd434@gmail.com).\n\nProgress Wheel\n=============\n\nThis is a custom component for Android intended for use instead of a progress bar.\n\n![Sample Image](https://github.com/Todd-Davies/ProgressWheel/raw/master/sample_image.png \"An example implementation\")\n![Sample Image 3](https://github.com/Todd-Davies/ProgressWheel/raw/master/sample_image_3.png \"Another example implementation\")\n![Sample Image 4](https://github.com/Todd-Davies/ProgressWheel/raw/master/sample_image_4.png \"Another example implementation\")\n\nCompare it side by side with the Android 2x progress wheel:\n\n![Sample Image 5](https://github.com/Todd-Davies/ProgressWheel/raw/master/sample_image5.png \"Side by side comparison\")\n\nA complete walkthrough of how to use this component in your app\n-------------\n\n**XML:**   \nTo implement the view in your xml layout do the following:\n\n1. Add the following to your attrs.xml file (in res/values):\n``` xml\n<declare-styleable name=\"ProgressWheel\">\n        <attr name=\"pwText\" format=\"string\" />\n        <attr name=\"pwTextColor\" format=\"color\" />\n        <attr name=\"pwTextSize\" format=\"dimension\" />\n        <attr name=\"pwBarColor\" format=\"color\" />\n        <attr name=\"pwRimColor\" format=\"color\" />\n        <attr name=\"pwRimWidth\" format=\"dimension\" />\n        <attr name=\"pwSpinSpeed\" format=\"dimension\" />\n        <attr name=\"pwDelayMillis\" format=\"integer\" />\n        <attr name=\"pwCircleColor\" format=\"color\" />\n        <attr name=\"pwRadius\" format=\"dimension\" />\n        <attr name=\"pwBarWidth\" format=\"dimension\" />\n        <attr name=\"pwBarLength\" format=\"dimension\" />\n        <attr name=\"pwContourColor\" format=\"color\"/>\n        <attr name=\"pwContourSize\" format=\"dimension\"/>\n</declare-styleable>\n```\n\n2. Add the following code to the root view of your layout:\n`xmlns:ProgressWheel=\"http://schemas.android.com/apk/res/com.visualdenim.schooltraq\"`\n\n3. Add the widget code in the appropriate place in your xml file. Here's a sample implementation:\n``` xml\n<com.todddavies.components.progressbar.ProgressWheel   \n    android:id=\"@+id/pw_spinner\"     \n    android:layout_width=\"200dp\"    \n    android:layout_height=\"200dp\"   \n    android:layout_centerInParent=\"true\"   \n    ProgressWheel:pwText=\"Authenticating...\"    \n    ProgressWheel:pwTextColor=\"#222\"   \n    ProgressWheel:pwTextSize=\"14sp\"   \n    ProgressWheel:pwRimColor=\"#330097D6\"   \n    ProgressWheel:pwBarLength=\"60dp\"    \n    ProgressWheel:pwBarColor=\"#0097D6\"   \n    ProgressWheel:pwBarWidth=\"5dp\"   \n    ProgressWheel:pwRimWidth=\"2dp\" /> \n```\n\t\n**Java:**   \nFirst you need to either get a ProgressWheel from a layout file, or initalise one. Do this by:\n\n-  `ProgressWheel pw = new ProgressWheel(myContext, myAttributes);`\n-  `ProgressWheel pw = (ProgressWheel) findViewById(R.id.pw_spinner);`\n\nTo spin the progress wheel, you just call .`startSpinning()` and to stop it spinning, you call `.stopSpinning()`\n\nIncrementing the progress wheel is slightly more tricky, you call `.incrementProgress()`. However, this is out of 360,  \n(because a circle has 360 degrees), and will automatically reset once you get past 360. A percentage display is   \nautomatically displayed.\n\nUsing as a dependency\n--------------------------\n\nAdd this to your build.gradle:\n\n```gradle\n\trepositories {\n\t    maven { url \"https://jitpack.io\" }\n\t}\n\t\n\tdependencies {\n\t    compile 'com.github.Todd-Davies:ProgressWheel:1.2'\n\t}\n```\n\nUsing as a library project\n--------------------------\n\nTo use it as a library in Android Studio, please edit build.gradle.\n\nModify:\n\n    apply plugin: 'android'\n\nInto:\n\n    apply plugin: 'android-library'\n\nSince Android SDK Tools revision 17 (released March 2012), this component can\nbe used as a library project. In this case, you do *not* need to copy anything\ninto your project's attrs.xml, and you must use the following namespace URI,\ninstead of the above:\n\n`xmlns:ProgressWheel=\"http://schemas.android.com/apk/res-auto\"`\n\nOtherwise, usage should be the same.\n\n\n[Todd Davies](http://todddavies.co.uk) - [@Todd__Davies](http://twitter.com/todd__davies) - 2012\n"
        },
        {
          "name": "README.md~",
          "type": "blob",
          "size": 3.923828125,
          "content": "Progress Wheel\n=============\n\nThis is a custom component for Android intended for use instead of a progress bar.\n\n![Sample Image](https://github.com/Todd-Davies/ProgressWheel/raw/master/sample_image.png \"An example implementation\")\n![Sample Image 3](https://github.com/Todd-Davies/ProgressWheel/raw/master/sample_image_3.png \"Another example implementation\")\n![Sample Image 4](https://github.com/Todd-Davies/ProgressWheel/raw/master/sample_image_4.png \"Another example implementation\")\n\nCompare it side by side with the Android 2x progress wheel:\n\n![Sample Image 5](https://github.com/Todd-Davies/ProgressWheel/raw/master/sample_image5.png \"Side by side comparison\")\n\nA complete walkthrough of how to use this component in your app\n-------------\n\n**XML:**   \nTo implement the view in your xml layout do the following:\n\n1. Add the following to your attrs.xml file (in res/values):\n``` xml\n<declare-styleable name=\"ProgressWheel\">\n        <attr name=\"pwText\" format=\"string\" />\n        <attr name=\"pwTextColor\" format=\"color\" />\n        <attr name=\"pwTextSize\" format=\"dimension\" />\n        <attr name=\"pwBarColor\" format=\"color\" />\n        <attr name=\"pwRimColor\" format=\"color\" />\n        <attr name=\"pwRimWidth\" format=\"dimension\" />\n        <attr name=\"pwSpinSpeed\" format=\"dimension\" />\n        <attr name=\"pwDelayMillis\" format=\"integer\" />\n        <attr name=\"pwCircleColor\" format=\"color\" />\n        <attr name=\"pwRadius\" format=\"dimension\" />\n        <attr name=\"pwBarWidth\" format=\"dimension\" />\n        <attr name=\"pwBarLength\" format=\"dimension\" />\n        <attr name=\"pwContourColor\" format=\"color\"/>\n        <attr name=\"pwContourSize\" format=\"dimension\"/>\n</declare-styleable>\n```\n\n2. Add the following code to the root view of your layout:\n`xmlns:ProgressWheel=\"http://schemas.android.com/apk/res/com.visualdenim.schooltraq\"`\n\n3. Add the widget code in the appropriate place in your xml file. Here's a sample implementation:\n``` xml\n<com.todddavies.components.progressbar.ProgressWheel   \n    android:id=\"@+id/pw_spinner\"     \n    android:layout_width=\"200dp\"    \n    android:layout_height=\"200dp\"   \n    android:layout_centerInParent=\"true\"   \n    ProgressWheel:pwText=\"Authenticating...\"    \n    ProgressWheel:pwTextColor=\"#222\"   \n    ProgressWheel:pwTextSize=\"14sp\"   \n    ProgressWheel:pwRimColor=\"#330097D6\"   \n    ProgressWheel:pwBarLength=\"60dp\"    \n    ProgressWheel:pwBarColor=\"#0097D6\"   \n    ProgressWheel:pwBarWidth=\"5dp\"   \n    ProgressWheel:pwRimWidth=\"2dp\" /> \n```\n\t\n**Java:**   \nFirst you need to either get a ProgressWheel from a layout file, or initalise one. Do this by:\n\n-  `ProgressWheel pw = new ProgressWheel(myContext, myAttributes);`\n-  `ProgressWheel pw = (ProgressWheel) findViewById(R.id.pw_spinner);`\n\nTo spin the progress wheel, you just call .`startSpinning()` and to stop it spinning, you call `.stopSpinning()`\n\nIncrementing the progress wheel is slightly more tricky, you call `.incrementProgress()`. However, this is out of 360,  \n(because a circle has 360 degrees), and will automatically reset once you get past 360. A percentage display is   \nautomatically displayed.\n\nUsing as a dependency\n--------------------------\n\nAdd this to your build.gradle:\n\n```gradle\n\trepositories {\n\t    maven { url \"https://jitpack.io\" }\n\t}\n\t\n\tdependencies {\n\t    compile 'com.github.Todd-Davies:ProgressWheel:1.2'\n\t}\n```\n\nUsing as a library project\n--------------------------\n\nTo use it as a library in Android Studio, please edit build.gradle.\n\nModify:\n\n    apply plugin: 'android'\n\nInto:\n\n    apply plugin: 'android-library'\n\nSince Android SDK Tools revision 17 (released March 2012), this component can\nbe used as a library project. In this case, you do *not* need to copy anything\ninto your project's attrs.xml, and you must use the following namespace URI,\ninstead of the above:\n\n`xmlns:ProgressWheel=\"http://schemas.android.com/apk/res-auto\"`\n\nOtherwise, usage should be the same.\n\n\n[Todd Davies](http://todddavies.co.uk) - [@Todd__Davies](http://twitter.com/todd__davies) - 2012\n"
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.5673828125,
          "content": "buildscript {\n    repositories {\n        mavenCentral()\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.0.1'\n    }\n}\n\napply plugin: 'android-library'\n\nandroid {\n\n    compileSdkVersion 17\n    buildToolsVersion \"21.1.2\"\n\n    defaultConfig {\n        minSdkVersion 8\n        targetSdkVersion 17\n    }\n\n    sourceSets {\n        main {\n            manifest.srcFile 'AndroidManifest.xml'\n            java.srcDirs = ['src']\n            resources.srcDirs = ['src']\n            renderscript.srcDirs = ['src']\n            res.srcDirs = ['res']\n        }\n    }\n}\n"
        },
        {
          "name": "build.xml",
          "type": "blob",
          "size": 3.82421875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project name=\"main\" default=\"help\">\n\n    <!-- The local.properties file is created and updated by the 'android' tool.\n         It contains the path to the SDK. It should *NOT* be checked into\n         Version Control Systems. -->\n    <property file=\"local.properties\" />\n\n    <!-- The ant.properties file can be created by you. It is only edited by the\n         'android' tool to add properties to it.\n         This is the place to change some Ant specific build properties.\n         Here are some properties you may want to change/update:\n\n         source.dir\n             The name of the source directory. Default is 'src'.\n         out.dir\n             The name of the output directory. Default is 'bin'.\n\n         For other overridable properties, look at the beginning of the rules\n         files in the SDK, at tools/ant/build.xml\n\n         Properties related to the SDK location or the project target should\n         be updated using the 'android' tool with the 'update' action.\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems.\n\n         -->\n    <property file=\"ant.properties\" />\n\n    <!-- if sdk.dir was not set from one of the property file, then\n         get it from the ANDROID_HOME env var.\n         This must be done before we load project.properties since\n         the proguard config can use sdk.dir -->\n    <property environment=\"env\" />\n    <condition property=\"sdk.dir\" value=\"${env.ANDROID_HOME}\">\n        <isset property=\"env.ANDROID_HOME\" />\n    </condition>\n\n    <!-- The project.properties file is created and updated by the 'android'\n         tool, as well as ADT.\n\n         This contains project specific properties such as project target, and library\n         dependencies. Lower level build properties are stored in ant.properties\n         (or in .classpath for Eclipse projects).\n\n         This file is an integral part of the build system for your\n         application and should be checked into Version Control Systems. -->\n    <loadproperties srcFile=\"project.properties\" />\n\n    <!-- quick check on sdk.dir -->\n    <fail\n            message=\"sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable.\"\n            unless=\"sdk.dir\"\n    />\n\n    <!--\n        Import per project custom build rules if present at the root of the project.\n        This is the place to put custom intermediary targets such as:\n            -pre-build\n            -pre-compile\n            -post-compile (This is typically used for code obfuscation.\n                           Compiled code location: ${out.classes.absolute.dir}\n                           If this is not done in place, override ${out.dex.input.absolute.dir})\n            -post-package\n            -post-build\n            -pre-clean\n    -->\n    <import file=\"custom_rules.xml\" optional=\"true\" />\n\n    <!-- Import the actual build file.\n\n         To customize existing targets, there are two options:\n         - Customize only one target:\n             - copy/paste the target into this file, *before* the\n               <import> task.\n             - customize it to your needs.\n         - Customize the whole content of build.xml\n             - copy/paste the content of the rules files (minus the top node)\n               into this file, replacing the <import> task.\n             - customize to your needs.\n\n         ***********************\n         ****** IMPORTANT ******\n         ***********************\n         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,\n         in order to avoid having your file be overridden by tools such as \"android update project\"\n    -->\n    <!-- version-tag: 1 -->\n    <import file=\"${sdk.dir}/tools/ant/build.xml\" />\n\n</project>\n"
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.962890625,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before isRunning java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.34765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windowz variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\ngoto execute\r\n\r\n:4NT_args\r\n@rem Get arguments from the 4NT Shell from JP Software\r\nset CMD_LINE_ARGS=%$\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "proguard-project.txt",
          "type": "blob",
          "size": 0.7626953125,
          "content": "# To enable ProGuard in your project, edit project.properties\n# to define the proguard.config property as described in that file.\n#\n# Add project specific ProGuard rules here.\n# By default, the flags in this file are appended to flags specified\n# in ${sdk.dir}/tools/proguard/proguard-android.txt\n# You can edit the include path and order by changing the ProGuard\n# include property in project.properties.\n#\n# For more details, see\n#   http://developer.android.com/guide/developing/tools/proguard.html\n\n# Add any project specific keep options here:\n\n# If your project uses WebView with JS, uncomment the following\n# and specify the fully qualified class name to the JavaScript interface\n# class:\n#-keepclassmembers class fqcn.of.javascript.interface.for.webview {\n#   public *;\n#}\n"
        },
        {
          "name": "proguard.cfg",
          "type": "blob",
          "size": 1.21875,
          "content": "-optimizationpasses 5\n-dontusemixedcaseclassnames\n-dontskipnonpubliclibraryclasses\n-dontpreverify\n-verbose\n-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*\n\n-keep public class * extends android.app.Activity\n-keep public class * extends android.app.Application\n-keep public class * extends android.app.Service\n-keep public class * extends android.content.BroadcastReceiver\n-keep public class * extends android.content.ContentProvider\n-keep public class * extends android.app.backup.BackupAgentHelper\n-keep public class * extends android.preference.Preference\n-keep public class com.android.vending.licensing.ILicensingService\n\n-keepclasseswithmembernames class * {\n    native <methods>;\n}\n\n-keepclasseswithmembers class * {\n    public <init>(android.content.Context, android.util.AttributeSet);\n}\n\n-keepclasseswithmembers class * {\n    public <init>(android.content.Context, android.util.AttributeSet, int);\n}\n\n-keepclassmembers class * extends android.app.Activity {\n   public void *(android.view.View);\n}\n\n-keepclassmembers enum * {\n    public static **[] values();\n    public static ** valueOf(java.lang.String);\n}\n\n-keep class * implements android.os.Parcelable {\n  public static final android.os.Parcelable$Creator *;\n}\n"
        },
        {
          "name": "project.properties",
          "type": "blob",
          "size": 0.373046875,
          "content": "# This file is automatically generated by Android Tools.\n# Do not modify this file -- YOUR CHANGES WILL BE ERASED!\n#\n# This file must be checked in Version Control Systems.\n#\n# To customize properties used by the Ant build system use,\n# \"ant.properties\", and override values to adapt the script to your\n# project structure.\n\nandroid.library=true\n# Project target.\ntarget=android-19\n"
        },
        {
          "name": "res",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample_image.png",
          "type": "blob",
          "size": 6.52734375,
          "content": null
        },
        {
          "name": "sample_image5.png",
          "type": "blob",
          "size": 41.3955078125,
          "content": null
        },
        {
          "name": "sample_image_2.png",
          "type": "blob",
          "size": 4.720703125,
          "content": null
        },
        {
          "name": "sample_image_3.png",
          "type": "blob",
          "size": 1.07421875,
          "content": null
        },
        {
          "name": "sample_image_4.png",
          "type": "blob",
          "size": 4.6083984375,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}