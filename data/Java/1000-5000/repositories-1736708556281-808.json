{
  "metadata": {
    "timestamp": 1736708556281,
    "page": 808,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "litao0621/NiftyDialogEffects",
      "stars": 2473,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4716796875,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Custom for Visual Studio\n*.cs     diff=csharp\n*.sln    merge=union\n*.csproj merge=union\n*.vbproj merge=union\n*.fsproj merge=union\n*.dbproj merge=union\n\n# Standard to msysgit\n*.doc\t diff=astextplain\n*.DOC\t diff=astextplain\n*.docx diff=astextplain\n*.DOCX diff=astextplain\n*.dot  diff=astextplain\n*.DOT  diff=astextplain\n*.pdf  diff=astextplain\n*.PDF\t diff=astextplain\n*.rtf\t diff=astextplain\n*.RTF\t diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.837890625,
          "content": "### Android ###\n# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n\n### Intellij ###\n# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm\n\n## Directory-based project format\n.idea/\n# if you remove the above rule, at least ignore user-specific stuff:\n# .idea/workspace.xml\n# .idea/tasks.xml\n# and these sensitive or high-churn files:\n# .idea/dataSources.ids\n# .idea/dataSources.xml\n# .idea/sqlDataSources.xml\n# .idea/dynamic.xml\n\n## File-based project format\n*.ipr\n*.iws\n*.iml\n\n## Additional for IntelliJ\nout/\n\n# generated by mpeltonen/sbt-idea plugin\n.idea_modules/\n\n# generated by JIRA plugin\natlassian-ide-plugin.xml\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.4794921875,
          "content": "language: java\njdk: oraclejdk7\nenv:\n  matrix:\n    - ANDROID_TARGET=android-20  ANDROID_ABI=armeabi-v7a\n\nbefore_install:\n  # Install base Android SDK\n  - chmod +x gradlew\n  - sudo apt-get update -qq\n  - if [ `uname -m` = x86_64 ]; then sudo apt-get install -qq --force-yes libgd2-xpm ia32-libs ia32-libs-multiarch > /dev/null; fi\n  - wget http://dl.google.com/android/android-sdk_r23-linux.tgz\n  - tar xzf android-sdk_r23-linux.tgz\n  - export ANDROID_HOME=$PWD/android-sdk-linux\n  - export PATH=${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools\n\n # Gradle\n  - wget http://services.gradle.org/distributions/gradle-1.12-bin.zip\n  - unzip gradle-1.12-bin.zip\n  - export GRADLE_HOME=$PWD/gradle-1.12\n  - export PATH=$GRADLE_HOME/bin:$PATH\n\n  # Install required components\n  # For a full list, run `android list sdk -a --extended`\n  # Note that sysimg-19 downloads only ARM, because only the first license query is accepted.\n  - echo yes | android update sdk --filter platform-tools --no-ui --force > /dev/null\n  - echo yes | android update sdk --all --filter build-tools-20.0.0 --no-ui --force > /dev/null\n  - echo yes | android update sdk --filter android-20 --no-ui --force > /dev/null\n  - echo yes | android update sdk --filter sys-img-x86-android-19 --no-ui --force > /dev/null\n  - echo yes | android update sdk --filter extra-android-support --no-ui --force > /dev/null\n  - echo yes | android update sdk --filter extra-android-m2repository --no-ui --force > /dev/null\n\n\n\ninstall:\n - ./gradlew assemble\n\n\n"
        },
        {
          "name": "3dViewer.stl",
          "type": "blob",
          "size": 14.14453125,
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.7939453125,
          "content": "NiftyDialogEffects\n==================\nNiftyDialogEffects is deprecated\n\nNifty Modal Dialog Effects look like this([Nifty Modal Window Effects][1])\n\n[![Android Arsenal](http://img.shields.io/badge/%20%20%20Android%20Arsenal%20%20%20-%20%20%20NiftyDialogEffects%20%20%20-blue.svg)](http://android-arsenal.com/details/1/772)\n[![Build Status](https://travis-ci.org/sd6352051/NiftyDialogEffects.svg?branch=master)](https://travis-ci.org/sd6352051/NiftyDialogEffects)\n[![JitPack Maven](https://img.shields.io/github/tag/sd6352051/NiftyDialogEffects.svg?label=JitPack%20Maven)](https://jitpack.io/#sd6352051/NiftyDialogEffects)\n\n# ScreenShot\n\n![Image][2]\n.\n![Image][3]\n.\n![Image][4]\n.\n![Image][5]\n\n# Gradle\n\n\nusing [JitPack](https://jitpack.io/#sd6352051/NiftyDialogEffects):\n\n```gradle\nrepositories { \n    maven { url \"https://jitpack.io\" }\n}\ndependencies {\n    compile 'com.github.sd6352051:NiftyDialogEffects:v1.0.3'\n}\n```\n\n# Usage\n``` java\nNiftyDialogBuilder dialogBuilder=NiftyDialogBuilder.getInstance(this);\n\ndialogBuilder\n    .withTitle(\"Modal Dialog\")\n    .withMessage(\"This is a modal Dialog.\")\n    .show();\n```\n\n\n# Configuration\n``` java\ndialogBuilder\n    .withTitle(\"Modal Dialog\")                                  //.withTitle(null)  no title\n    .withTitleColor(\"#FFFFFF\")                                  //def\n    .withDividerColor(\"#11000000\")                              //def\n    .withMessage(\"This is a modal Dialog.\")                     //.withMessage(null)  no Msg\n    .withMessageColor(\"#FFFFFFFF\")                              //def  | withMessageColor(int resid)\n    .withDialogColor(\"#FFE74C3C\")                               //def  | withDialogColor(int resid)\n    .withIcon(getResources().getDrawable(R.drawable.icon))\n    .withDuration(700)                                          //def\n    .withEffect(effect)                                         //def Effectstype.Slidetop\n    .withButton1Text(\"OK\")                                      //def gone\n    .withButton2Text(\"Cancel\")                                  //def gone\n    .isCancelableOnTouchOutside(true)                           //def    | isCancelable(true)\n    .setCustomView(R.layout.custom_view,v.getContext())         //.setCustomView(View or ResId,context)\n    .setButton1Click(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            Toast.makeText(v.getContext(), \"i'm btn1\", Toast.LENGTH_SHORT).show();\n                    }\n    })\n    .setButton2Click(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            Toast.makeText(v.getContext(),\"i'm btn2\",Toast.LENGTH_SHORT).show();\n        }\n    })\n    .show();\n```\n# Effects\n`Fadein`, `Slideleft`, `Slidetop`, `SlideBottom`, `Slideright`, `Fall`, `Newspager`, `Fliph`, `Flipv`, `RotateBottom`, `RotateLeft`, `Slit`, `Shake`, `Sidefill`\n\n([See The Effect][1])\n\n# Developed By\n\n* 李涛-Li Tao - <onresume@live.com> \n\n# License\nCopyright 2014 litao.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n\n\n\n\n\n\n\n\n[1]: http://tympanus.net/Development/ModalWindowEffects/\n[2]: http://img2.ph.126.net/MQFh_6FkTAD1qqzZ7EVdow==/2561703763061757743.png\n[3]: http://img2.ph.126.net/uHM9MmUmlJk8moJlVyNTmw==/2568459162502797428.png\n[4]: http://img1.ph.126.net/g2fw5Z1OtPBgE0cbn-HBqw==/6608233108214335942.png\n[5]: http://img0.ph.126.net/iC46e1bXkU1f1rIfUZo99w==/6597620621984019408.gif\n\nby cncounter \n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.5068359375,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:1.5.0'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        mavenCentral()\n    }\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.5576171875,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Settings specified in this file will override any Gradle settings\n# configured through the IDE.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\nVERSION_NAME=1.0.0\nVERSION_CODE=1\nGROUP=com.github.sd6352051.niftydialogeffects\n\nPOM_DESCRIPTION=Some inspiration for different modal dialog appearances\nPOM_URL=https://github.com/sd6352051/NiftyDialogEffects\nPOM_SCM_URL=https://github.com/sd6352051/NiftyDialogEffects\nPOM_SCM_CONNECTION=scm:git@github.com:sd6352051/NiftyDialogEffects.git\nPOM_SCM_DEV_CONNECTION=scm:git@github.com:sd6352051/NiftyDialogEffects.git\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\nPOM_DEVELOPER_ID=litao\nPOM_DEVELOPER_NAME=Li Tao\n\nANDROID_BUILD_MIN_SDK_VERSION=10\nANDROID_BUILD_TARGET_SDK_VERSION=19\nANDROID_BUILD_TOOLS_VERSION=20.0.0\nANDROID_BUILD_SDK_VERSION=20"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.927734375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windows variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "m_point.geojson",
          "type": "blob",
          "size": 0.3720703125,
          "content": "{\n\"type\": \"FeatureCollection\",\n\n\"features\": [\n{ \"type\": \"Feature\", \"properties\": { \"FACILITY_I\": 123976.0, \"SERVICE_DA\": \"2014\\/08\\/7\", \"CALL_SIGN\": \"NULL\", \"CHANNEL\": 234.0, \"APP_ID\": 500243.0, \"COUNTRY\": \"US\", \"CLASS\": \"L1\", \"SERVICE_TY\": \"FL\", \"STATE\": \"GA\", \"TRANSLATOR\": 0.0, \"CITY\": \"BEIJING\" }, \"geometry\": { \"type\": \"Point\", \"coordinates\": [ 116.403694,39.917149 ] } }\n\n]\n}"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0263671875,
          "content": "include ':app', ':library'\n"
        }
      ]
    }
  ]
}