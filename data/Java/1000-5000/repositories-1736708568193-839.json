{
  "metadata": {
    "timestamp": 1736708568193,
    "page": 839,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "power721/alist-tvbox",
      "stars": 2432,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.005859375,
          "content": "web-ui"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4423828125,
          "content": "HELP.md\ntarget/\n!.mvn/wrapper/maven-wrapper.jar\n!**/src/main/**/target/\n!**/src/test/**/target/\nsrc/main/resources/static/\n\n*.log\n*.info\n*.txt\n*.zip\n*.gz\n\n### STS ###\n.apt_generated\n.classpath\n.factorypath\n.project\n.settings\n.springBeans\n.sts4-cache\n\n### IntelliJ IDEA ###\n.idea\n*.iws\n*.iml\n*.ipr\n\n### NetBeans ###\n/nbproject/private/\n/nbbuild/\n/dist/\n/nbdist/\n/.nb-gradle/\nbuild/\n!**/src/main/**/build/\n!**/src/test/**/build/\n\n### VS Code ###\n.vscode/\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.6953125,
          "content": "FROM golang:1.20 as builder\n\nWORKDIR /app/\n\nCOPY atv-cli ./\n\nRUN go build\n\nFROM haroldli/alist-base:latest\n\nLABEL MAINTAINER=\"Har01d\"\n\nENV MEM_OPT=\"-Xmx512M\" ALIST_PORT=5344 INSTALL=new\n\nCOPY config/config.json /opt/alist/data/config.json\n\nCOPY --from=builder /app/atv-cli /\n\nCOPY scripts/init.sh /\nCOPY scripts/alist.sql /\nCOPY scripts/downloadPg.sh /\nCOPY scripts/downloadZx.sh /\nCOPY scripts/movie.sh /\nCOPY scripts/entrypoint.sh /\n\nCOPY data/tvbox.zip /\nCOPY data/base_version /\nCOPY data/cat.zip /\nCOPY data/pg.zip /\nCOPY data/zx.zip /\nCOPY target/application/ ./\n\nCOPY data/version data/app_version\n\nEXPOSE 4567 5244\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"81\", \"--spring.profiles.active=production,docker\"]\n"
        },
        {
          "name": "Dockerfile-base",
          "type": "blob",
          "size": 0.41796875,
          "content": "ARG TAG=latest\n\nFROM haroldli/java:17 as corretto-jdk\n\nFROM haroldli/alist:${TAG}\n\nLABEL MAINTAINER=\"Har01d\"\n\nENV JAVA_HOME=/jre\nENV PATH=\"${JAVA_HOME}/bin:${PATH}\"\n\nCOPY data/update.sql /\nCOPY data/countries.json /\n\nCOPY --from=corretto-jdk /jre $JAVA_HOME\n\nVOLUME /opt/atv/data/\n\nWORKDIR /opt/atv/\n\nCOPY scripts/index.sh /\n\nCOPY target/dependencies/ ./\nCOPY target/snapshot-dependencies/ ./\nCOPY target/spring-boot-loader/ ./\n"
        },
        {
          "name": "Dockerfile-base-new",
          "type": "blob",
          "size": 0.5322265625,
          "content": "ARG TAG=latest\n\nFROM haroldli/java:17 as corretto-jdk\n\nFROM haroldli/alist:${TAG}\n\nLABEL MAINTAINER=\"Har01d\"\n\nENV JAVA_HOME=/jre\nENV PATH=\"${JAVA_HOME}/bin:${PATH}\"\n\nCOPY data/update.sql /\n\nRUN sqlite3 /opt/alist/data/data.db \"drop table x_storages\";\\\n    sqlite3 /opt/alist/data/data.db \".read /update.sql\"; \\\n    rm -f /update.sql\n\nCOPY --from=corretto-jdk /jre $JAVA_HOME\n\nVOLUME /opt/atv/data/\n\nWORKDIR /opt/atv/\n\nCOPY scripts/index.sh /\n\nCOPY target/dependencies/ ./\nCOPY target/snapshot-dependencies/ ./\nCOPY target/spring-boot-loader/ ./\n"
        },
        {
          "name": "Dockerfile-host",
          "type": "blob",
          "size": 0.72265625,
          "content": "FROM golang:1.20 as builder\n\nWORKDIR /app/\n\nCOPY atv-cli ./\n\nRUN go build\n\nFROM haroldli/alist-base:hostmode\n\nLABEL MAINTAINER=\"Har01d\"\n\nENV MEM_OPT=\"-Xmx512M\" ALIST_PORT=5678 INSTALL=hostmode\n\nCOPY config/config-host.json /opt/alist/data/config.json\n\nCOPY --from=builder /app/atv-cli /\n\nCOPY init.sh /\nCOPY scripts/movie.sh /\nCOPY scripts/downloadPg.sh /\nCOPY scripts/downloadZx.sh /\nCOPY entrypoint.sh /\n\nCOPY target/application/ ./\n\nCOPY data/tvbox.zip /\nCOPY data/base_version /\nCOPY data/index.share.zip /\nCOPY data/cat.zip /\nCOPY data/pg.zip /\nCOPY data/zx.zip /\nCOPY data/data.zip /\n\nCOPY data/version data/app_version\n\nEXPOSE 4567 5678\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"5233\", \"--spring.profiles.active=production,xiaoya,host\"]\n"
        },
        {
          "name": "Dockerfile-host-dev",
          "type": "blob",
          "size": 0.6943359375,
          "content": "FROM golang:1.20 as builder\n\nWORKDIR /app/\n\nCOPY atv-cli ./\n\nRUN go build\n\nFROM haroldli/alist-base-new:hostmode\n\nLABEL MAINTAINER=\"Har01d\"\n\nENV MEM_OPT=\"-Xmx512M\"\n\nCOPY config/config-host.json /opt/alist/data/config.json\n\nCOPY --from=builder /app/atv-cli /\n\nCOPY init.sh /\nCOPY scripts/movie.sh /\nCOPY scripts/downloadPg.sh /\nCOPY scripts/downloadZx.sh /\nCOPY entrypoint.sh /\n\nCOPY target/application/ ./\n\nCOPY data/tvbox.zip /\nCOPY data/index.share.zip /\nCOPY data/cat.zip /\nCOPY data/data.zip /\nCOPY data/pg.zip /\nCOPY data/zx.zip /\nCOPY data/base_version /\n\nCOPY data/version data/app_version\n\nEXPOSE 4567 5678\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"5233\", \"--spring.profiles.active=production,xiaoya,host\"]\n"
        },
        {
          "name": "Dockerfile-jre",
          "type": "blob",
          "size": 0.8203125,
          "content": "FROM amazoncorretto:17-alpine as corretto-deps\n\nCOPY target/alist-tvbox-1.0.jar /app/app.jar\n\nRUN unzip /app/app.jar -d temp &&  \\\n    jdeps  \\\n      --print-module-deps \\\n      --ignore-missing-deps \\\n      --recursive \\\n      --multi-release 17 \\\n      --class-path=\"./temp/BOOT-INF/lib/*\" \\\n      --module-path=\"./temp/BOOT-INF/lib/*\" \\\n      /app/app.jar > /modules.txt\n\nFROM amazoncorretto:17-alpine as corretto-jdk\n\nCOPY --from=corretto-deps /modules.txt /modules.txt\n\n# hadolint ignore=DL3018,SC2046\nRUN apk add --no-cache binutils && \\\n    jlink \\\n     --verbose \\\n     --add-modules \"$(cat /modules.txt),jdk.crypto.ec,jdk.crypto.cryptoki\" \\\n     --strip-debug \\\n     --no-man-pages \\\n     --no-header-files \\\n     --compress=2 \\\n     --output /jre\n\nFROM alpine:latest\n\nLABEL MAINTAINER=\"Har01d\"\n\nCOPY --from=corretto-jdk /jre /jre\n"
        },
        {
          "name": "Dockerfile-native",
          "type": "blob",
          "size": 0.7978515625,
          "content": "FROM golang:1.20 as builder\n\nWORKDIR /app/\n\nCOPY atv-cli ./\n\nRUN go build\n\nFROM haroldli/alist:latest\n\nLABEL MAINTAINER=\"Har01d\"\n\nENV INSTALL=native\n\nVOLUME /opt/atv/data/\n\nWORKDIR /opt/atv/\n\nCOPY config/config.json /opt/alist/data/config.json\n\nCOPY --from=builder /app/atv-cli /\n\nCOPY scripts/index.sh /\n\nCOPY init.sh /\nCOPY scripts/movie.sh /\nCOPY scripts/downloadPg.sh /\nCOPY scripts/downloadZx.sh /\nCOPY entrypoint-native.sh /entrypoint.sh\n\nCOPY target/atv ./\n\nCOPY data/update.sql /\nCOPY data/countries.json /\nCOPY data/tvbox.zip /\nCOPY data/index.share.zip /\nCOPY data/cat.zip /\nCOPY data/pg.zip /\nCOPY data/zx.zip /\nCOPY data/data.zip /\nCOPY data/base_version /\n\nCOPY data/version data/app_version\n\nEXPOSE 4567 80\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"81\", \"--spring.profiles.active=production,xiaoya,native\"]\n"
        },
        {
          "name": "Dockerfile-native-base",
          "type": "blob",
          "size": 0.4755859375,
          "content": "FROM golang:1.20 as builder\n\nWORKDIR /app/\n\nCOPY atv-cli ./\n\nRUN go build\n\nFROM ubuntu:22.04\n\nWORKDIR /app/\n\nCOPY --from=builder /app/atv-cli /opt/atv/\n\nCOPY scripts/install.sh ./\n\nRUN bash install.sh\n\nENV LC_ALL=en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US.UTF-8\nENV TOOLCHAIN_DIR=/opt/musl\nENV CC=\"$TOOLCHAIN_DIR/bin/gcc\"\nENV MAVEN_HOME=/opt/maven\nENV JAVA_HOME=/opt/graalvm\nENV GRAALVM_HOME=/opt/graalvm\nENV PATH=\"${JAVA_HOME}/bin:${MAVEN_HOME}/bin:$TOOLCHAIN_DIR/bin:${PATH}\"\n"
        },
        {
          "name": "Dockerfile-native-host",
          "type": "blob",
          "size": 0.818359375,
          "content": "FROM golang:1.20 as builder\n\nWORKDIR /app/\n\nCOPY atv-cli ./\n\nRUN go build\n\nFROM haroldli/alist:hostmode\n\nLABEL MAINTAINER=\"Har01d\"\n\nENV INSTALL=native-host\n\nVOLUME /opt/atv/data/\n\nWORKDIR /opt/atv/\n\nCOPY config/config-host.json /opt/alist/data/config.json\n\nCOPY --from=builder /app/atv-cli /\n\nCOPY scripts/index.sh /\n\nCOPY init.sh /\nCOPY scripts/movie.sh /\nCOPY scripts/downloadPg.sh /\nCOPY scripts/downloadZx.sh /\nCOPY entrypoint-native.sh /entrypoint.sh\n\nCOPY target/atv ./\n\nCOPY data/update.sql /\nCOPY data/countries.json /\nCOPY data/tvbox.zip /\nCOPY data/index.share.zip /\nCOPY data/cat.zip /\nCOPY data/pg.zip /\nCOPY data/zx.zip /\nCOPY data/data.zip /\nCOPY data/base_version /\n\nCOPY data/version data/app_version\n\nEXPOSE 4567 5678\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"5233\", \"--spring.profiles.active=production,xiaoya,native,host\"]\n"
        },
        {
          "name": "Dockerfile-v7",
          "type": "blob",
          "size": 0.62890625,
          "content": "ARG TAG=latest\n\nFROM eclipse-temurin:17-jre-jammy as adoptopenjdk\n\nFROM xiaoyaliu/alist:${TAG}\n\nLABEL MAINTAINER=\"Har01d\"\n\nENV JAVA_HOME=/jre\nENV PATH=\"${JAVA_HOME}/bin:${PATH}\"\n\nCOPY --from=adoptopenjdk /opt/java/openjdk $JAVA_HOME\n\nVOLUME /opt/atv/data/\n\nWORKDIR /opt/atv/\n\nRUN apk add --update-cache gcompat\n\nCOPY scripts/index.sh /\nCOPY init.sh /\nCOPY entrypoint.sh /\n\nCOPY target/dependencies/ ./\nCOPY target/snapshot-dependencies/ ./\nCOPY target/spring-boot-loader/ ./\nCOPY target/application/ ./\n\nCOPY data/version data/app_version\n\nEXPOSE 4567 80\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"81\", \"--spring.profiles.active=production,xiaoya\"]\n"
        },
        {
          "name": "Dockerfile-xiaoya",
          "type": "blob",
          "size": 0.705078125,
          "content": "FROM golang:1.20 as builder\n\nWORKDIR /app/\n\nCOPY atv-cli ./\n\nRUN go build\n\nFROM haroldli/alist-base:latest\n\nLABEL MAINTAINER=\"Har01d\"\n\nENV MEM_OPT=\"-Xmx512M\" ALIST_PORT=5344 INSTALL=xiaoya\n\nCOPY config/config.json /opt/alist/data/config.json\n\nCOPY --from=builder /app/atv-cli /\n\nCOPY init.sh /\nCOPY scripts/movie.sh /\nCOPY scripts/downloadPg.sh /\nCOPY scripts/downloadZx.sh /\nCOPY entrypoint.sh /\n\nCOPY target/application/ ./\n\nCOPY data/tvbox.zip /\nCOPY data/index.share.zip /\nCOPY data/cat.zip /\nCOPY data/pg.zip /\nCOPY data/zx.zip /\nCOPY data/data.zip /\nCOPY data/base_version /\n\nCOPY data/version data/app_version\n\nEXPOSE 4567 80\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"81\", \"--spring.profiles.active=production,xiaoya\"]\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.3857421875,
          "content": "# alist-tvbox\nAList proxy server for TvBox, support playlist and search.\n\n[中文文档](doc/README_zh.md)\n\n# Build\n```bash\nmvn clean package\n```\n\n# Run\n```bash\nsudo bash -c \"$(curl -fsSL https://d.har01d.cn/update_xiaoya.sh)\"\n```\n```bash\njava -jar target/alist-tvbox-1.0.jar\n```\n\n# Docker\n```bash\n./build.sh\ndocker run -d -p 4567:4567 --restart=always --name=alist-tvbox alist-tvbox\n```\nOr run container from Docker hub.\n```bash\ndocker run -d -p 4567:4567 --restart=always --name=alist-tvbox haroldli/alist-tvbox\n```\n```bash\ndocker run -d -p 4567:4567 -p 5344:80 -e ALIST_PORT=5344 -v /etc/xiaoya:/data --restart=always --name=xiaoya-tvbox haroldli/xiaoya-tvbox:latest\n```\nusername: admin\n\npassword: admin\n\n# TvBox Config\nUse this config url `http://ip:4567/sub/0`.\n\n### Customize\nBacked URL support multiple values, use comma as separator.\ne.g.: disable 2 sites by key, change 1 site name by key, add new site.\n```json\n{\n  \"sites\": [\n    {\n      \"key\": \"js豆瓣\",\n      \"name\": \"js豆瓣\"\n    },\n    {\n      \"key\": \"测试\",\n      \"name\": \"测试\",\n      \"type\": 3,\n      \"api\": \"ATV_ADDRESS/tvbox/libs/drpy.min.js\",\n      \"searchable\": 2,\n      \"quickSearch\": 0,\n      \"filterable\": 1\n    }\n  ],\n  \"parses\": [\n    {\n      \"name\": \"测试1\",\n      \"type\": 3,\n      \"url\": \"测试\"\n    }\n  ],\n  \"blacklist\": {\n    \"sites\": [\n      \"csp_Bili\",\n      \"csp_Biliych\"\n    ],\n    \"parses\": [\n      \"聚合\"\n    ]\n  }\n}\n```\n"
        },
        {
          "name": "atv-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "build-docker.sh",
          "type": "blob",
          "size": 1.58203125,
          "content": "MOUNT=/opt/alist\nPORT1=4567\nPORT2=5344\n\nwhile getopts \":d:p:P:\" arg; do\n    case \"${arg}\" in\n        d)\n            MOUNT=${OPTARG}\n            ;;\n        p)\n            PORT1=${OPTARG}\n            ;;\n        P)\n            PORT2=${OPTARG}\n            ;;\n        *)\n            ;;\n    esac\ndone\n\nrm -rf src/main/resources/static/assets && \\\ncd web-ui && \\\nnpm run build || exit 1\ncd ..\n\n#cp src/main/resources/application.yaml application-backup.yaml\n#sed -i '/- name: 本地/,+2d' src/main/resources/application.yaml\n#sed -i '/sites:/r add.txt' src/main/resources/application.yaml\n\nmvn clean package || exit 1\ncd target && java -Djarmode=layertools -jar alist-tvbox-1.0.jar extract && cd ..\n\n#mv application-backup.yaml src/main/resources/application.yaml\n\nexport TZ=Asia/Shanghai\necho $((($(date +%Y) - 2023) * 366 + $(date +%j | sed 's/^0*//'))).$(date +%H%M) > data/version\ndocker build --tag=haroldli/alist-tvbox:latest .\n\necho -e \"\\e[36m使用配置目录：\\e[0m $MOUNT\"\necho -e \"\\e[36m端口映射：\\e[0m $PORT1:4567  $PORT2:5244\"\n\ndocker rm -f xiaoya-tvbox alist-tvbox 2>/dev/null\ndocker run -d -p $PORT1:4567 -p $PORT2:5244 -e ALIST_PORT=$PORT2 -e INSTALL=new -v \"$MOUNT\":/data --name=alist-tvbox haroldli/alist-tvbox:latest\n\nsleep 1\n\nIP=$(ip a | grep -F '192.168.' | awk '{print $2}' | awk -F/ '{print $1}' | head -1)\nif [ -n \"$IP\" ]; then\n  echo -e \"\\e[32m请用以下地址访问：\\e[0m\"\n  echo -e \"    \\e[32m管理界面\\e[0m： http://$IP:$PORT1/\"\n  echo -e \"    \\e[32mAList\\e[0m： http://$IP:$PORT2/\"\nelse\n  echo -e \"\\e[32m云服务器请用公网IP访问\\e[0m\"\nfi\necho \"\"\n\ndocker logs -f alist-tvbox\n"
        },
        {
          "name": "build-hostmode.sh",
          "type": "blob",
          "size": 0.7470703125,
          "content": "set -e\n\nMOUNT=/etc/xiaoya\n\nif [ $# -eq 1 ]; then\n  MOUNT=$1\n  echo \"will mount the data path: $MOUNT\"\nfi\n\nrm -rf src/main/resources/static/assets && \\\ncd web-ui && \\\nnpm run build || exit 1\ncd .. && \\\nmvn clean package || exit 1\n\ncd target && java -Djarmode=layertools -jar alist-tvbox-1.0.jar extract && cd ..\n\ndocker image prune -f\ndocker pull haroldli/alist-base:hostmode\necho $((($(date +%Y) - 2023) * 366 + $(date +%j | sed 's/^0*//'))).$(date +%H%M) > data/version\ndocker build -f Dockerfile-host --tag=haroldli/xiaoya-tvbox:hostmode . || exit 1\ndocker rm -f xiaoya-tvbox xiaoya alist-tvbox 2>/dev/null\ndocker run -d --network host -e INSTALL=hostmode -v \"$MOUNT\":/data --name=xiaoya-tvbox haroldli/xiaoya-tvbox:hostmode\n\nsleep 1\n\ndocker logs -f xiaoya-tvbox\n"
        },
        {
          "name": "build-native.sh",
          "type": "blob",
          "size": 2.107421875,
          "content": "set -e\n\nMOUNT=/etc/xiaoya\nPORT1=4567\nPORT2=5344\nPORT3=5345\nBUILD=true\n\nwhile getopts \":d:p:P:e:t:yr\" arg; do\n    case \"${arg}\" in\n        d)\n            MOUNT=${OPTARG}\n            ;;\n        p)\n            PORT1=${OPTARG}\n            ;;\n        P)\n            PORT2=${OPTARG}\n            ;;\n        e)\n            PORT3=${OPTARG}\n            ;;\n        r)\n            BUILD=false\n            ;;\n        *)\n            ;;\n    esac\ndone\n\nshift $((OPTIND-1))\n\nif [ $# -gt 0 ]; then\n  MOUNT=$1\nfi\n\nif [ $# -gt 1 ]; then\n\tPORT1=$2\nfi\n\nif [ $# -gt 2 ]; then\n\tPORT2=$3\nfi\n\nif [ \"$BUILD\" = \"true\" ]; then\n  rm -rf src/main/resources/static/assets && \\\n  cd web-ui && \\\n  npm run build || exit 1\n  cd .. && \\\n  mvn clean package -DskipTests -Pnative\nfi\n\n[ -d data ] || mkdir data\nexport TZ=Asia/Shanghai\necho $((($(date +%Y) - 2023) * 366 + $(date +%j | sed 's/^0*//'))).$(date +%H%M) > data/version\n\necho -e \"\\e[36m使用配置目录：\\e[0m $MOUNT\"\necho -e \"\\e[36m端口映射：\\e[0m $PORT1:4567  $PORT2:80\"\n\ndocker pull xiaoyaliu/alist:latest\n\ndocker image prune -f\necho $((($(date +%Y) - 2023) * 366 + $(date +%j | sed 's/^0*//'))).$(date +%H%M) > data/version\ndocker build -f Dockerfile-native --tag=haroldli/xiaoya-tvbox:native . || exit 1\ndocker rm -f xiaoya-tvbox alist-tvbox 2>/dev/null\ndocker run -d -p $PORT1:4567 -p $PORT2:80 -e ALIST_PORT=$PORT2 -e INSTALL=native -v \"$MOUNT\":/data --name=xiaoya-tvbox haroldli/xiaoya-tvbox:native\n\nsleep 1\n\nIP=$(ip a | grep -F '192.168.' | awk '{print $2}' | awk -F/ '{print $1}' | head -1)\nif [ -n \"$IP\" ]; then\n  echo \"\"\n  echo -e \"\\e[32m请用以下地址访问：\\e[0m\"\n  echo -e \"    \\e[32m管理界面\\e[0m： http://$IP:$PORT1/\"\n  echo -e \"    \\e[32m小雅AList\\e[0m： http://$IP:$PORT2/\"\nelse\n  IP=$(ip a | grep -F '10.' | awk '{print $2}' | awk -F/ '{print $1}' | grep -E '\\b10.' | head -1)\n  if [ -n \"$IP\" ]; then\n    echo \"\"\n    echo -e \"\\e[32m请用以下地址访问：\\e[0m\"\n    echo -e \"    \\e[32m管理界面\\e[0m： http://$IP:$PORT1/\"\n    echo -e \"    \\e[32m小雅AList\\e[0m： http://$IP:$PORT2/\"\n  fi\n  echo -e \"\\e[32m云服务器请用公网IP访问\\e[0m\"\nfi\necho \"\"\n\ndocker logs -f xiaoya-tvbox\n"
        },
        {
          "name": "build-xiaoya.sh",
          "type": "blob",
          "size": 2.3720703125,
          "content": "set -e\n\nBASE_DIR=/etc/xiaoya\nPORT1=4567\nPORT2=5344\nPORT3=5345\nMEM_OPT=\"-Xmx512M\"\nPULL=true\nMOUNT=\"\"\n\nwhile getopts \":d:p:m:P:e:t:v:n\" arg; do\n    case \"${arg}\" in\n        d)\n            BASE_DIR=${OPTARG}\n            ;;\n        p)\n            PORT1=${OPTARG}\n            ;;\n        P)\n            PORT2=${OPTARG}\n            ;;\n        e)\n            PORT3=${OPTARG}\n            ;;\n        m)\n            MEM_OPT=\"-Xmx${OPTARG}M\"\n            ;;\n        v)\n            MOUNT=\"${MOUNT} -v ${OPTARG}\"\n            ;;\n        n)\n            PULL=false\n            ;;\n        *)\n            ;;\n    esac\ndone\n\nshift $((OPTIND-1))\n\nif [ $# -gt 0 ]; then\n  BASE_DIR=$1\nfi\n\nif [ $# -gt 1 ]; then\n\tPORT1=$2\nfi\n\nif [ $# -gt 2 ]; then\n\tPORT2=$3\nfi\n\nif [ $# -gt 3 ]; then\n\tMEM_OPT=\"-Xmx${4}M\"\n\techo \"Java Memory: ${MEM_OPT}\"\nfi\n\nrm -rf src/main/resources/static/assets && \\\ncd web-ui && \\\nnpm run build || exit 1\ncd .. && \\\nmvn clean package || exit 1\n\ncd target && java -Djarmode=layertools -jar alist-tvbox-1.0.jar extract && cd ..\npwd\n\n[ -d data ] || mkdir data\nexport TZ=Asia/Shanghai\n\necho -e \"\\e[36m使用配置目录：\\e[0m $BASE_DIR\"\necho -e \"\\e[36m端口映射：\\e[0m $PORT1:4567  $PORT2:80\"\n\n[ \"$PULL\" = \"true\" ] && docker pull haroldli/alist-base\n\ndocker image prune -f\necho $((($(date +%Y) - 2023) * 366 + $(date +%j | sed 's/^0*//'))).$(date +%H%M) > data/version\ndocker build -f Dockerfile-xiaoya --tag=haroldli/xiaoya-tvbox:latest . || exit 1\ndocker rm -f xiaoya-tvbox alist-tvbox 2>/dev/null\ndocker run -d -p $PORT1:4567 -p $PORT2:80 -p 5566:5244 -e ALIST_PORT=$PORT2 -e INSTALL=xiaoya -e MEM_OPT=\"$MEM_OPT\" -v \"$BASE_DIR\":/data ${MOUNT} --restart=always --name=xiaoya-tvbox haroldli/xiaoya-tvbox:latest\n\nsleep 1\n\nIP=$(ip a | grep -F '192.168.' | awk '{print $2}' | awk -F/ '{print $1}' | head -1)\nif [ -n \"$IP\" ]; then\n  echo \"\"\n  echo -e \"\\e[32m请用以下地址访问：\\e[0m\"\n  echo -e \"    \\e[32m管理界面\\e[0m： http://$IP:$PORT1/\"\n  echo -e \"    \\e[32m小雅AList\\e[0m： http://$IP:$PORT2/\"\nelse\n  IP=$(ip a | grep -F '10.' | awk '{print $2}' | awk -F/ '{print $1}' | grep -E '\\b10.' | head -1)\n  if [ -n \"$IP\" ]; then\n    echo \"\"\n    echo -e \"\\e[32m请用以下地址访问：\\e[0m\"\n    echo -e \"    \\e[32m管理界面\\e[0m： http://$IP:$PORT1/\"\n    echo -e \"    \\e[32m小雅AList\\e[0m： http://$IP:$PORT2/\"\n  fi\n  echo -e \"\\e[32m云服务器请用公网IP访问\\e[0m\"\nfi\necho \"\"\n\ndocker logs -f xiaoya-tvbox\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "entrypoint-native.sh",
          "type": "blob",
          "size": 0.5009765625,
          "content": "#!/bin/sh\n\nif [ -f /data/proxy.txt ]; then\n  proxy_url=$(head -n1 /data/proxy.txt)\n  export HTTP_PROXY=$proxy_url\n  export HTTPS_PROXY=$proxy_url\n  export no_proxy=\"*.aliyundrive.com\"\nfi\n\nchmod a+x /init.sh /index.sh /downloadPg.sh /downloadZx.sh\n\nif [ ! -d /data/log ]; then\n  mkdir -p /data/log\nfi\nln -sf /data/log /opt/atv/log\n\n/init.sh 2>&1 | tee /opt/atv/log/init.log 2>&1\n\n#/downloadPg.sh 2>&1 | tee -a /opt/atv/log/init.log 2>&1\n\n/bin/busybox-extras httpd -p \"$1\" -h /www\n/usr/sbin/nginx\nshift\n\n./atv \"$@\"\n"
        },
        {
          "name": "entrypoint.sh",
          "type": "blob",
          "size": 0.583984375,
          "content": "#!/bin/sh\n\nif [ -f /data/proxy.txt ]; then\n  proxy_url=$(head -n1 /data/proxy.txt)\n  export HTTP_PROXY=$proxy_url\n  export HTTPS_PROXY=$proxy_url\n  export no_proxy=\"*.aliyundrive.com\"\nfi\n\nchmod a+x /init.sh /index.sh /downloadPg.sh /downloadZx.sh\n\nif [ ! -d /data/log ]; then\n  mkdir -p /data/log\nfi\nln -sf /data/log /opt/atv/log\n\n/init.sh 2>&1 | tee /opt/atv/log/init.log 2>&1\n\n#/downloadPg.sh 2>&1 | tee -a /opt/atv/log/init.log 2>&1\n\n/bin/busybox-extras httpd -p \"$1\" -h /www\n/usr/sbin/nginx\nshift\n\njava \"$MEM_OPT\" -cp BOOT-INF/classes:BOOT-INF/lib/* cn.har01d.alist_tvbox.AListApplication \"$@\"\n"
        },
        {
          "name": "init.sh",
          "type": "blob",
          "size": 6.31640625,
          "content": "#!/bin/sh\n\nupdate_movie() {\n  LOCAL=\"0.0\"\n  if [ -f /data/atv/base_version ]; then\n    LOCAL=$(head -n 1 </data/atv/base_version)\n  fi\n  REMOTE=$(head -n 1 </base_version)\n  echo \"movie base version: $LOCAL $REMOTE\"\n  if [ \"$LOCAL\" != \"$REMOTE\" ]; then\n    echo \"upgrade movie data\"\n    unzip -q -o /data.zip -d /data/atv/\n    cp /base_version /tmp/\n    rm -f /data/atv/sql/*.sql\n  fi\n}\n\nrestore_database() {\n  if [ -f \"/data/database.zip\" ]; then\n    echo \"=== restore database ===\"\n    rm -f /data/atv.mv.db /data/atv.trace.db\n    java -cp /opt/atv/BOOT-INF/lib/h2-*.jar org.h2.tools.RunScript -url jdbc:h2:/data/atv -user sa -password password -script /data/database.zip -options compression zip\n    rm -f /data/database.zip /data/atv/base_version /data/atv/movie_version\n  fi\n}\n\ninit() {\n  mkdir -p /var/lib/pxg /www/cgi-bin /index /data/atv /data/index /data/backup\n  if [ -d /index ]; then\n    rm -rf /index\n  fi\n  [ -h /data/log/log ] && unlink /data/log/log\n  ln -sf /data/index /\n  ln -sf /data/config .\n  cd /var/lib/pxg\n  unzip -q /var/lib/data.zip\n  mv data.db /opt/alist/data/data.db\n  sed -i 's!/\"$after\"!\"$after\"!' search\n  mv search /www/cgi-bin/search\n  mv sou /www/cgi-bin/sou\n  mv whatsnew /www/cgi-bin/whatsnew\n  mv header.html /www/cgi-bin/header.html\n\n  sed -i \"s/127.0.0.1/0.0.0.0/\" /opt/alist/data/config.json\n  sed '/location \\/dav/i\\    location ~* alist {\\n        deny all;\\n    }\\n' nginx.conf >/etc/nginx/http.d/default.conf\n\n  mv mobi.tgz /www/mobi.tgz\n  cd /www/\n  tar zxf mobi.tgz\n  rm mobi.tgz\n\n  sqlite3 /opt/alist/data/data.db \".read /update.sql\"\n\n  wget -T 30 -t 2 https://raw.githubusercontent.com/xiaoyaliu00/data/main/tvbox.zip -O tvbox.zip || \\\n  wget -T 30 -t 2 http://har01d.org/tvbox.zip -O tvbox.zip || \\\n  cp /tvbox.zip ./\n\n  unzip -q -o tvbox.zip\n  if [ -f /data/my.json ]; then\n    rm /www/tvbox/my.json\n    ln -s /data/my.json /www/tvbox/my.json\n  fi\n\n  if [ -f /data/iptv.m3u ]; then\n    ln -s /data/iptv.m3u /www/tvbox/iptv.m3u\n  fi\n\n  rm -f tvbox.zip index.zip index.txt version.txt update.zip\n\n  update_movie\n}\n\necho \"Install mode: $INSTALL\"\ncat data/app_version\nversion=$(head -n1 /docker.version)\necho \"xiaoya version: $version\"\nuname -mor\ndate\n\nrestore_database\nif [ -f /opt/alist/data/data.db ]; then\n  update_movie\n  echo \"已经初始化成功\"\nelse\n  init\nfi\n\nif [ ! -d /www/cat ]; then\n  echo \"unzip cat.zip\"\n  mkdir /www/cat\n  unzip -q -o /cat.zip -d /www/cat\nfi\n[ -d /data/cat ] && cp -r /data/cat/* /www/cat/\n\n[ ! -f /data/pg.zip ] && cp /pg.zip /data/pg.zip\nif [ ! -d /www/pg ]; then\n  echo \"unzip pg.zip\"\n  mkdir /www/pg\n  unzip -q -o /data/pg.zip -d /www/pg\nfi\n[ -d /data/pg ] && cp -r /data/pg/* /www/pg/\n\n[ ! -f /data/zx.zip ] && cp /zx.zip /data/zx.zip\nif [ ! -d /www/zx ]; then\n  echo \"unzip zx.zip\"\n  mkdir /www/zx\n  unzip -q -o /data/zx.zip -d /www/zx\nfi\n\ncd /tmp/\n\nwget -T 30 -t 2 https://raw.githubusercontent.com/xiaoyaliu00/data/main/version.txt -O version.txt || \\\nwget -T 10 -t 2 http://har01d.org/version.txt -O version.txt\n\nwget -T 30 -t 2 https://raw.githubusercontent.com/xiaoyaliu00/data/main/update.zip -O update.zip || \\\nwget -T 30 -t 2 http://har01d.org/update.zip -O update.zip\n\nif [ ! -f update.zip ]; then\n  echo \"Failed to download update database file, the database upgrade process has aborted\"\nelse\n  unzip -o -q -P abcd update.zip\n  entries=$(grep -c 'INSERT INTO x_storages' update.sql)\n  echo \"$(date) total $entries records\"\n  if [ -f /opt/alist/data/data.db-shm ]; then\n    rm /opt/alist/data/data.db-shm\n  fi\n\n  if [ -f /opt/alist/data/data.db-wal ]; then\n    rm /opt/alist/data/data.db-wal\n  fi\n\n  sed -i 's/v3.9.2/v3.25.1/' update.sql\n  sed -i 's/pass_code/share_pwd/' update.sql\n\n  sqlite3 /opt/alist/data/data.db <<EOF\ndrop table x_storages;\ndrop table x_meta;\ndrop table x_setting_items;\n.read update.sql\nEOF\n\n  echo \"$(date) update database successfully\"\n  opentoken_url=$(cat opentoken_url.txt)\n  sed -i \"s#https://api.nn.ci/alist/ali_open/token#$opentoken_url#\" /opt/alist/data/config.json\n  rm -f update.zip update.sql opentoken_url.txt\nfi\n\nif [ ! -f version.txt ]; then\n  echo \"Failed to download version.txt file, the index file upgrade process has aborted\"\nelse\n  remote=$(head -n1 version.txt)\n  if [ ! -f /data/index/version.txt ]; then\n    echo 0.0.0 >/data/index/version.txt\n  fi\n  local=$(head -n1 /data/index/version.txt)\n  echo \"index version: $local $remote\"\n  latest=$(printf \"$remote\\n$local\\n\" | sort -r | head -n1)\n  if [ \"$remote\" = \"$local\" ]; then\n    echo \"$(date) current index file version is updated, no need to upgrade\"\n  elif [ \"$remote\" = \"$latest\" ]; then\n    wget -T 30 -t 2 https://raw.githubusercontent.com/xiaoyaliu00/data/main/index.zip -O index.zip || \\\n    wget -T 40 -t 2 http://har01d.org/index.zip -O index.zip\n\n    if [ ! -f index.zip ]; then\n      echo \"Failed to download index compressed file, the index file upgrade process has aborted\"\n    else\n      unzip -o -q -P abcd index.zip\n      cat index.video.txt index.book.txt index.music.txt index.non.video.txt >/data/index/index.txt\n      mv index*.txt /data/index/\n      echo \"$(date) update index successfully, your new version is $remote\"\n      echo \"$remote\" >/data/index/version.txt\n    fi\n  else\n    echo \"$(date) your current version is updated, no need to downgrade\"\n    echo \"$remote\" >/data/index/version.txt\n  fi\n  rm -f index.* update.* version.txt\nfi\n\nLOCAL=\"0.0\"\nif [ -f /data/index/share_version ]; then\n  LOCAL=$(head -n 1 </data/index/share_version)\nfi\nunzip -q -o /index.share.zip -d /tmp\nREMOTE=$(head -n 1 </tmp/share_version)\necho \"share index version: $LOCAL $REMOTE\"\nif [ \"$LOCAL\" != \"$REMOTE\" ]; then\n  echo \"upgrade share index\"\n  mv /tmp/index.share.txt /data/index/index.share.txt\n  mv /tmp/share_version /data/index/share_version\n  grep -v \"/🈴我的阿里分享/\" /data/index/index.video.txt >/data/index/index.video.txt.1\n  grep -v \"/🈴我的阿里分享/\" /data/index/index.txt >/data/index/index.txt.1\n  mv /data/index/index.video.txt.1 /data/index/index.video.txt\n  mv /data/index/index.txt.1 /data/index/index.txt\n  cat /data/index/index.share.txt >> /data/index/index.video.txt\n  cat /data/index/index.share.txt >> /data/index/index.txt\nfi\nrm -f /tmp/index.share.txt\n\napp_ver=$(head -n1 /opt/atv/data/app_version)\nsqlite3 /opt/alist/data/data.db <<EOF\nINSERT INTO x_storages VALUES(20000,'/©️ $version-$app_ver',0,'Alias',30,'work','{\"paths\":\"/每日更新\"}','','2022-11-12 13:05:12+00:00',0,'','','',0,'302_redirect','');\nEOF\n"
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.04296875,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n      else\n        export JAVA_HOME=\"/Library/Java/Home\"\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`\\\\unset -f command; \\\\command -v java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=`find_maven_basedir \"$(pwd)\"`\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nif [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n    fi\nelse\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n    fi\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      jarUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    else\n      jarUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    fi\n    while IFS=\"=\" read key value; do\n      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n      esac\n    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Downloading from: $jarUrl\"\n    fi\n    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n    if $cygwin; then\n      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n    fi\n\n    if command -v wget > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found wget ... using wget\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        else\n            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found curl ... using curl\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        else\n            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        fi\n\n    else\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Falling back to using Java to download\"\n        fi\n        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaClass=`cygpath --path --windows \"$javaClass\"`\n        fi\n        if [ -e \"$javaClass\" ]; then\n            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n                fi\n                # Compiling the Java class\n                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n            fi\n            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                # Running the downloader\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Running MavenWrapperDownloader.java ...\"\n                fi\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\nexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nif [ \"$MVNW_VERBOSE\" = true ]; then\n  echo $MAVEN_PROJECTBASEDIR\nfi\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.576171875,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    https://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Maven Start Up Batch script\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM M2_HOME - location of maven2's installed home dir\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.1.0/maven-wrapper-3.1.0.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %DOWNLOAD_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% ^\n  %JVM_CONFIG_MAVEN_PROPS% ^\n  %MAVEN_OPTS% ^\n  %MAVEN_DEBUG_OPTS% ^\n  -classpath %WRAPPER_JAR% ^\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n\ncmd /C exit /B %ERROR_CODE%\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 8.3310546875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>3.1.2</version>\n        <relativePath/> <!-- lookup parent from repository -->\n    </parent>\n    <groupId>cn.har01d</groupId>\n    <artifactId>alist-tvbox</artifactId>\n    <version>1.0</version>\n    <name>alist-tvbox</name>\n    <description>AList proxy server for TvBox, support playlist and search.</description>\n    <url>https://har01d.cn/</url>\n\n    <scm>\n        <url>https://github.com/power721/alist-tvbox</url>\n        <connection>scm:git:https://github.com/power721/alist-tvbox.git</connection>\n        <developerConnection>scm:git:https://github.com/power721/alist-tvbox</developerConnection>\n    </scm>\n\n    <developers>\n        <developer>\n            <name>Harold</name>\n            <email>power0721@gmail.com</email>\n            <url>https://github.com/power721</url>\n        </developer>\n    </developers>\n\n    <properties>\n        <java.version>17</java.version>\n        <jjwt.version>0.11.5</jjwt.version>\n        <libc>--libc=musl</libc>\n        <lib.static>--static</lib.static>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-security</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-data-jpa</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>jakarta.servlet</groupId>\n            <artifactId>jakarta.servlet-api</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>jakarta.xml.bind</groupId>\n            <artifactId>jakarta.xml.bind-api</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>com.h2database</groupId>\n            <artifactId>h2</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>commons-io</groupId>\n            <artifactId>commons-io</artifactId>\n            <version>2.11.0</version>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-text</artifactId>\n            <version>1.10.0</version>\n        </dependency>\n        <dependency>\n            <groupId>org.jsoup</groupId>\n            <artifactId>jsoup</artifactId>\n            <version>1.15.4</version>\n        </dependency>\n        <dependency>\n            <groupId>com.github.ben-manes.caffeine</groupId>\n            <artifactId>caffeine</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>io.jsonwebtoken</groupId>\n            <artifactId>jjwt-api</artifactId>\n            <version>${jjwt.version}</version>\n        </dependency>\n        <dependency>\n            <groupId>io.jsonwebtoken</groupId>\n            <artifactId>jjwt-impl</artifactId>\n            <version>${jjwt.version}</version>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.jsonwebtoken</groupId>\n            <artifactId>jjwt-jackson</artifactId>\n            <version>${jjwt.version}</version>\n            <scope>runtime</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>com.squareup.okhttp3</groupId>\n            <artifactId>okhttp</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n        <dependency>\n            <groupId>com.github.sealedtx</groupId>\n            <artifactId>java-youtube-downloader</artifactId>\n            <version>3.2.6</version>\n        </dependency>\n        <dependency>\n            <groupId>com.telegram4j</groupId>\n            <artifactId>telegram4j-core</artifactId>\n            <version>0.1.0-SNAPSHOT</version>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n                <configuration>\n                    <excludes>\n                        <exclude>\n                            <groupId>org.projectlombok</groupId>\n                            <artifactId>lombok</artifactId>\n                        </exclude>\n                    </excludes>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <repositories>\n        <repository>\n            <id>jitpack</id>\n            <url>https://jitpack.io</url>\n        </repository>\n        <repository>\n            <id>s01.oss.sonatype.org-snapshot</id>\n            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>\n            <snapshots>\n                <enabled>true</enabled>\n            </snapshots>\n        </repository>\n    </repositories>\n\n    <profiles>\n        <profile>\n            <properties>\n                <libc></libc>\n                <lib.static></lib.static>\n            </properties>\n            <id>platform-arm</id>\n            <activation>\n                <os>\n                    <arch>aarch64</arch>\n                </os>\n            </activation>\n        </profile>\n        <profile>\n            <id>native</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.hibernate.orm.tooling</groupId>\n                        <artifactId>hibernate-enhance-maven-plugin</artifactId>\n                        <version>${hibernate.version}</version>\n                        <executions>\n                            <execution>\n                                <id>enhance</id>\n                                <goals>\n                                    <goal>enhance</goal>\n                                </goals>\n                                <configuration>\n                                    <failOnError>true</failOnError>\n                                    <enableLazyInitialization>true</enableLazyInitialization>\n                                    <enableDirtyTracking>true</enableDirtyTracking>\n                                    <enableAssociationManagement>true</enableAssociationManagement>\n                                    <enableExtendedEnhancement>false</enableExtendedEnhancement>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.graalvm.buildtools</groupId>\n                        <artifactId>native-maven-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <id>build-native</id>\n                                <goals>\n                                    <goal>compile-no-fork</goal>\n                                </goals>\n                                <phase>package</phase>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <imageName>atv</imageName>\n                            <mainClass>cn.har01d.alist_tvbox.AListApplication</mainClass>\n                            <buildArgs>\n                                <buildArg>\n                                    ${lib.static}\n                                    ${libc}\n                                    --enable-http\n                                    --enable-https\n                                    -march=compatibility\n                                </buildArg>\n                            </buildArgs>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n</project>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "web-ui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}