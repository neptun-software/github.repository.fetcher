{
  "metadata": {
    "timestamp": 1736608979551,
    "page": 187,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/open-location-code",
      "stars": 4133,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".bazeliskrc",
          "type": "blob",
          "size": 0.1884765625,
          "content": "# Set options for Bazelisk, a wrapper for Bazel.\n\n# Set the version of Bazel to use.\n# TODO: #642 -- Update once the JS bazelbuild/rules_closure supports bazel modules.\nUSE_BAZEL_VERSION=7.4.1\n"
        },
        {
          "name": ".bazelrc",
          "type": "blob",
          "size": 0.353515625,
          "content": "# Reduce OOM errors on TravisCI\nstartup --host_jvm_args=-Xms500m\nstartup --host_jvm_args=-Xmx500m\nstartup --host_jvm_args=-XX:-UseParallelGC\n# build --local_resources=400,2,1.0\nbuild --worker_max_instances=auto\n\n# Configure tests - increase timeout, print everything and timeout warnings\ntest --verbose_failures --test_output=all --test_verbose_timeout_warnings\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.517578125,
          "content": "# Ignore backup and swap files.\n*~\n.*.swp\n# Bazel module lock file.\nMODULE.bazel.lock\n# Ignore all bazel-* links.\n/bazel-*\n# Ignore outputs generated during Bazel bootstrapping.\n/output/\n# Ignore compiled files\n**/target/\n# Ignore intelliJ auto generated dir\n**/.idea/\n# Ignore iml extensions files\n**/*.iml\n# Ignore visual studio auto generated dir\n**/.vscode/\n# Ignore JS NPM modules\n/js/node_modules/\n/js/package-lock.json\n# Ignore dynamically generated test JSON files.\n/js/test/*json\n# Ignore Rust lockfile.\n/rust/Cargo.lock\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.234375,
          "content": "\n# 2015-01-30 Formatting Change\n\nCode formatting was modified to make the common cases easier to recognise and use.\nA typical house level code of 10 digits is now represented as XXXXXXXX+XX, making\nthe common short cases XXXX+XX and XX+XX.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.0185546875,
          "content": "# Contributing to Open Location Code\n\nThe Open Location Code project strongly encourages technical contributions.\n\nWe hope you'll become an ongoing participant in our open source community, but we also welcome one-off contributions for the issues you're particularly passionate about.\n\n- [Contributing to Open Location Code](#contributing-to-open-location-code)\n  - [Filing issues](#filing-issues)\n    - [Bugs](#bugs)\n    - [Suggestions](#suggestions)\n  - [Contributing code](#contributing-code)\n  - [Contributing a new implementation](#contributing-a-new-implementation)\n  - [Contributor License Agreement](#contributor-license-agreement)\n  - [Ongoing participation](#ongoing-participation)\n    - [Discussion channels](#discussion-channels)\n\n## Filing issues\n\n### Bugs\n\nIf you find a bug in an Open Location Code library, please [file an issue](https://github.com/google/open-location-code/issues/new).\nMembers of the community are regularly monitoring issues and will try to fix open bugs quickly.\n\nThe best bug reports provide a detailed description of the issue, step-by-step instructions for predictably reproducing the issue, and possibly even a working example that demonstrates the issue.\n\nPlease note that questions about how to use Open Location Code or other general questions should be asked on the [Open Location Code Google Group](https://groups.google.com/forum/#!forum/open-location-code)<!-- Uncomment if this becomes sensible --><!-- or [Stack Overflow under the Open Location Code tag](http://stackoverflow.com/questions/tagged/open-location-code) -->\ninstead of filing an issue here.\n\n### Suggestions\n\nThe Open Location Code project is meant to evolve with feedback.\nThe project and its users appreciate your thoughts on ways to improve the design or features or creative ways to use the codes.\n\nTo make a suggestion [file an issue](https://github.com/google/open-location-code/issues/new).\n\nIf you are intending to implement, please see the [Contributing code](#contributing-code) section below for next steps.\n\nIf you are adding the Open Location Code library to your project, please contact the [Open Location Code Google Group](https://groups.google.com/forum/#!forum/open-location-code) so we can suggest how you can make the most of the codes.\n\n## Contributing code\n\nThe Open Location Code project accepts and greatly appreciates code contributions!\n\nA few things to note:\n\n* The Open Location Code project follows the [fork & pull](https://help.github.com/articles/using-pull-requests/#fork--pull) model for accepting contributions.\n* We follow [Google's JavaScript Style Guide](https://google.github.io/styleguide/jsguide.html).\n  More generally make sure to follow the same comment and coding style as the rest of the project.\n* Do not try to address multiple issues in a single pull request.\n  In some cases, you might even resolve a single issue with multiple PRs (e.g. if you are changing multiple implementations).\n* Include [tests](TESTING.md) when contributing code.\n  There are tests that you can use as examples.\n\n## Contributing a new implementation\n\nIf you have an implementation in your own repository, that's great!\nUnfortunately we can't accept implementations in languages we're not familiar with as we won't be able to maintain or test them.\nYou can add a link to it in our [list of external implementations](Documentation/External_Implementations.md).\n\n* Look at the existing implementations, to get an idea of the usage and how much work is involved.\n* If you copy the code structure and algorithms from an existing implementation, you'll have a much shorter review cycle.\n* [Create a new GitHub issue](https://github.com/google/open-location-code/issues/new) to start discussion of the new feature.\n* Follow the guidelines for [Contributing code](#contributing-code) described above.\n* Don't forget to add tests!\n\n## Contributor License Agreement\n\nThe Open Location Code project hosted at GitHub requires all contributors to sign a Contributor License Agreement ([individual](https://developers.google.com/open-source/cla/individual) or [corporation](https://developers.google.com/open-source/cla/corporate)) in order to protect contributors, users and Google in issues of intellectual property.\n\nWhen you create a Pull Request, a check will be run to ensure that you have signed the CLA.\nMake sure that you sign the CLA with the same email address you associate with your commits (likely via the `user.email` Git config as described on GitHub's [Set up Git](https://help.github.com/articles/set-up-git/) page).\n\n## Ongoing participation\n\nWe actively encourage ongoing participation by community members.\n\n### Discussion channels\n\nTechnical issues, designs, etc. are discussed on [GitHub issues](https://github.com/google/open-location-code/issues) and [pull requests](https://github.com/google/open-location-code/pulls),\nor the [Open Location Code Google Group](https://groups.google.com/forum/#!forum/open-location-code)<!-- Uncomment if this becomes sensible --><!-- and [Stack Overflow under the Open Location Code tag](http://stackoverflow.com/questions/tagged/open-location-code) -->.\n\n"
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "FAQ.txt",
          "type": "blob",
          "size": 9.279296875,
          "content": "OPEN LOCATION CODE FREQUENTLY ASKED QUESTIONS\n\nQ: What is Open Location Code for?\nA: Open Location Code provides short codes that people can use to refer to\nlocations, when street addresses don't exist, aren't known or aren't suitable.\n\nQ: What are the specific aims?\nA: The aims are to have codes that are shorter and easier to use than\nlatitude and longitude coordinates. The codes should be short enough that\npeople can remember them and communicate them in speech or in writing. The\ncodes should work offline, should not include words and should not require\nsetting up. It should be possible to tell if two codes are close to each\nother by looking at them.\n\nQ: Where do we expect Open Location Code to be useful?\nA: More than half the world's urban dwellers live on streets that don't have\nformal names. We expect these codes will be mostly used by people in areas\nlacking street addresses, but could also be used in areas that are mapped\nbut where street name data is not widely available or where both formal and\ninformal names exist.\n\nQ: Should cities stop naming streets?\nA: No! Street naming provides numerous benefits, including cementing a sense\nof identity for residents and connecting them to their community. Based on\nthe World Banks experience, though, street naming projects typically take in\nthe order of one to two years (depending on the size of the city), and cost\napproximately $5USD per addressed building. The advantage of Open Location\nCodes is that they are available now to anyone with access to a computer or\nsmartphone.\n\nQ: Are there uses for Open Location Code in well-mapped countries?\nA: Yes, for example Switzerland has villages where multiple streets have the\nsame name. The UK has some homes that are identified by names, rather than\nby street numbers. Venice and Japan both have block-based addresses, rather\nthan street name based. In addition, there are locations where people wish\nto meet but the best street address is not useful - for example, a picnic\nspot within a park, a mountain hut or a ski lift.\n\nQ: How does Open Location Code differ from latitude and longitude?\nA: Latitude and longitude are two signed numbers. They have different\nranges, and the order matters. For five decimal places, roughly 10 meter\naccuracy, latitude and longitude require between 15 and 20 text characters\n(\"0.39122, 9.45225\" to \"-43.95134,-176.55053\"). Latitude and longitude\nexpress a point location, and there is no universally accepted way to\nprovide a location of something that is not a point, such as a football\nfield, park or lake.\n\nThe problem of poor or no addresses has existed for ever, and cheap GPS\ndevices for at least 15 years, and yet latitude and longitude coordinates\nare still not widely used by people to specify destinations. We think that\nthis shows latitude and longitude are just too complicated for normal use.\n\nQ: How do short codes differ from full codes?\nA: A full code encodes a globally unique location and can be decoded offline\nand without any additional data. Short codes are generated from full codes\nby dropping characters from the start, which means that they can only be\ndecoded relative to a reference location. This reference location must be\ncommunicated with the short code, if it isn't shared knowledge of all parties\ninvolved.\n\nQ: How can a reference location be communicated with a short code?\nA: Often, a reference location can be assumed to be shared knowledge and\ndoes not need to be explicitly given. For example, when talking to someone\nin the same city and agreeing to meet them at \"G98H+F2\", there will typically\nbe just one location with that short code in any given city.\n\nIf a reference location needs to be communicated, it is often sensible to\njust append the name of the city. For example, if postal or rescue services\nin an area make use of Open Location Code, using \"G98H+F2 Berlin\" should allow\nmail to be delivered or an ambulance to navigate to its intended destination.\nIf short codes need to be encoded and decoded algorithmically, for example by\nusing a lookup table or by making use of a (reverse) geocoding API, the same\ndata or API should be used for both encoding and decoding.\n\nQ: Can a global lookup table for short codes be added to this repository?\nProviding this data is not within the scope of this repository, and issues\nopened to request such data will be closed. If online geocoding APIs can not\nbe used, it is often useful to first think about the actual requirements of\nthe Open Location Code application, as regional instead of global data will\noften suffice. This data might already exist for a specific application, or\ncan potentially be extracted from open GIS or map data available online.\nThe community mailing list can be used to ask for help with such data.\n\nQ: Why doesn't Open Location Code include altitude?\nA: We didn't want to append it as a suffix or bury it in the code because we\nwant to be able to truncate the codes reliably. We also didn't want to\nunnecessarily extend the length of codes for what we expect to be a minority\nof cases. Altitude is more useful to people as a floor number, but there are\ndifferent ways of numbering building floors depending on local custom.\n\nIn summary, we couldn't think of a way that was better than specifying the\ncode and allowing people to just say \"3rd floor\".\n\nQ: Why does Open Location Code use two algorithms?\nA: The first algorithm provides codes that can be visually compared and\nsorted. This is used until the code is 10 characters long, with a resolution\nof 1/8000th of a degree, approximately 14 meters. This will often be\nsufficient, but in some cases of high density buildings this will be too\nlarge. Continuing with this algorithm adds two more characters for a\nresolution of 70 centimeters.\n\nWe want to keep the length of the codes low to make them easier to remember\nand use. We didn't feel that the resolution was necessary, and so the second\nalgorithm is used to refine the code with just a single character, with a\nresolution of 1/40000 x 1/32000 of a degree (approximately 3.5 x 2.8 meters).\n\nIf we had based the entire code on the second algorithm, we would have codes\nthat would not be reliably visually comparable or sortable by proximity.\n\nQ: Why is Open Location Code based on latin characters?\nA: We are aware that many of the countries where Plus Codes will be\nmost useful use non-Latin character sets, such as Arabic, Chinese, Cyrillic,\nThai, Vietnamese, etc. We selected Latin characters as the most common\nsecond-choice character set in these locations.\n\nWe considered defining alternative Open Location Code alphabets in each\ncharacter set, but this would result in codes that would be unusable to\nvisitors to that region.\n\nQ: Why doesn't Open Location Code include a checksum?\nA: One of the aims is to make the codes short to enable their everyday use,\nin writing and speech. We felt that adding checksums when codes are being\ncommunicated between computers is unnecessary, and adding checksums when\ncodes are being communicated between people reduces the usability and will\nmostly be worked around (\"We're meeting in Miami in an hour? But we're in\nHyderabad!\") because users will realise that a code cannot possibly be\ncorrect. It's analogous to someone using the wrong suburb name today - it\nhappens, people are able to deal with it.\n\nQ: Why do Plus Codes look like something fell on my keyboard?\nA: We wanted something that wasn't linked to a single culture, so word-based\ncodes were out. That meant that the codes would be essentially a number, but\nwe used letters as well as digits to raise the number base and shorten the\ncodes, to make them easier to remember. After we eliminated some letters and\ndigits to avoid spelling words and to remove easily confused pairs, we got\nthe current set of symbols. One disadvantage of the symbol set is that it is\nnoncontiguous, although it is difficult to see how we could change that\nwithout violating any of the aims.\n\nQ: What coordinate system does Open Location Code use?\nA: Open Location Code should be based on WGS84, since this is the datum\nused by GPS and is how coordinates on smartphone devices are made available.\nThere is nothing to prevent coordinates using other datums being used, but\nwhen decoded by someone who expects them to be WGS84, it may result in a\ndifferent location.\n\nQ: Why do Open Location Code areas distort at high latitudes?\nA: Plus Codes are a function of latitude and longitude. As\nlongitude lines converge on the north and south poles the areas become\nnarrower and narrower. At the equator codes are square, but at about 60\ndegrees latitude, the codes are only half as wide.\n\nQ: Are there any discontinuities in the codes?\nA: Yes, codes on either side of the 180 longitude line will be very\ndifferent, even though they may be very close together. Apart from some\nislands in the Fiji group, there are almost no affected inhabited areas, and\nwe feel this is acceptable. The other discontinuities are at the poles, but\nas these do not have large permanent populations we don't expect significant\nuse of Open Location Code here.\n\nQ: What about continental drift?\nA: Most tectonic plates are moving at rates of 1-5cm per year. With the 10\ncharacter Plus Code representing 14x14 meter boxes, codes should be valid for\nmany years. Even the more accurate 11 character codes should not require\nupdating for 30-50 years. But even if they do, the worst result is that\nsomeone using a code will find themselves at the home or building\nnext door.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MODULE.bazel",
          "type": "blob",
          "size": 0.3310546875,
          "content": "module(\n    name = \"openlocationcode\",\n    version = \"1.0\",\n)\n\n# bazel-skylib required by #@io_bazel_rules_closure.\n# https://github.com/bazelbuild/bazel-skylib\nbazel_dep(name = \"bazel_skylib\", version = \"1.7.1\")\n\n# googletest required by c/BUILD.\n# https://github.com/google/googletest\nbazel_dep(name = \"googletest\", version = \"1.15.2\")\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.205078125,
          "content": "Open Location Code\n==================\n\n[![Build Status](https://github.com/google/open-location-code/actions/workflows/main.yml/badge.svg?branch=main)](https://github.com/google/open-location-code/actions/workflows/main.yml?query=branch%3Amain)\n[![CDNJS](https://img.shields.io/cdnjs/v/openlocationcode.svg)](https://cdnjs.com/libraries/openlocationcode)\n\nOpen Location Code is a technology that gives a way of encoding location into a form that is\neasier to use than latitude and longitude. The codes generated are called Plus Codes, as their\ndistinguishing attribute is that they include a \"+\" character.\n\nThe technology is designed to produce codes that can be used as a replacement for street addresses, especially\nin places where buildings aren't numbered or streets aren't named.\n\nPlus Codes represent an area, not a point. As digits are added\nto a code, the area shrinks, so a long code is more precise than a short\ncode.\n\nCodes that are similar are located closer together than codes that are\ndifferent.\n\nA location can be converted into a code, and this (full) code can be converted back to a location completely offline, without any data tables to lookup or online services required.\n\nCodes can be shortened for easier communication, in which case they can be used regionally or in combination with a reference location that all users of this short code need to be aware of. If the reference location is given in form of a location name, use of a geocoding service might be necessary to recover the original location.\n\nAlgorithms to\n* encode and decode full codes,\n* shorten them relative to a reference location, and\n* recover a location from a short code and a reference location given as latitude/longitude pair\n\nare publicly available and can be used without restriction. Geocoding services are not a part of the Open Location Code technology.\n\nLinks\n-----\n * [Demonstration site](http://plus.codes/)\n * [Mailing list](https://groups.google.com/forum/#!forum/open-location-code)\n * [Comparison of existing location encoding systems](Documentation/Reference/comparison.adoc)\n * [Open Location Code definition](Documentation/Specification/olc_definition.adoc)\n\nDescription\n-----------\n\nCodes are made up of a sequence of digits chosen from a set of 20. The\ndigits in the code alternate between latitude and longitude. The first\nfour digits describe a one degree latitude by one degree longitude\narea, aligned on degrees. Adding two further digits to the code,\nreduces the area to 1/20th of a degree by 1/20th of a degree within the\nprevious area. And so on - each pair of digits reduces the area to\n1/400th of the previous area.\n\nAs an example, the Parliament Buildings in Nairobi, Kenya are located at\n6GCRPR6C+24. 6GCR is the area from 2°S 36°E to 1°S 37°E. PR6C+24 is a 14\nby 14 meter wide area within 6GCR.\n\nA \"+\" character is used after eight digits, to break the code up into two parts\nand to distinguish codes from postal codes.\n\nThere will be locations where a 10-digit code is not sufficiently precise, but\nrefining it by a factor of 20 is i) unnecessarily precise and ii) requires extending\nthe code by two digits. Instead, after 10 digits, the area is divided\ninto a 4x5 grid and a single digit used to identify the grid square. A single\ngrid refinement step reduces the area to approximately 3.5x2.8 meters.\n\nCodes can be shortened relative to a location. This reduces the number of digits\nthat must be remembered, by using a location to identify an approximate area,\nand then generating the nearest matching code. Shortening a code, if possible,\nwill drop four or more digits from the start of the code. The degree to which a\ncode can be shortened depends on the proximity of the reference location.\n\nIf the reference location is derived from a town or city name, it is dependent\non the accuracy of the geocoding service. Although one service may place\n\"Zurich\" close to the Google office, another may move it by a hundred meters or\nmore, and this could be enough to prevent the original code being recovered.\nRather than a large city size feature to generate the reference location, it is\nbetter to use smaller, neighbourhood features, that will not have as much\nvariation in their geocode results.\n\nGuidelines for shortening codes are in the [wiki](Documentation/Specification/Short_Code_Guidance.md).\n\nRecovering shortened codes works by providing the short code and a reference\nlocation. This does not need to be the same as the location used to shorten the\ncode, but it does need to be nearby. Shortened codes always include the \"+\"\ncharacter so it is simple to compute the missing component.\n\n * 8F+GG is missing six leading characters\n * 6C8F+GG is missing four leading characters\n\nExample Code\n------------\n\nThe subdirectories contain sample implementations and tests for different\nlanguages. Each implementation provides the following functions:\n\n * Test a code to see if it is a valid sequence\n * Test a code to see if it is a valid full code\n   (not all valid sequences are valid full codes)\n * Encode a latitude and longitude to a standard accuracy\n   (14 meter by 14 meter) code\n * Encode a latitude and longitude to a code of any length\n * Decode a code to its coordinates: low, high and center\n * Shorten a full code relative to a location\n * Extend a short code relative to a location\n"
        },
        {
          "name": "TESTING.md",
          "type": "blob",
          "size": 3.1650390625,
          "content": "# Testing\nThe preferred mechanism for testing is using the [Bazel](https://bazel.build/) build system.\nThis uses files called `BUILD` ([example](https://github.com/google/open-location-code/blob/main/python/BUILD) to provide rules to build code and run tests).\nRather than installing Bazel directly, install [Bazelisk](https://github.com/bazelbuild/bazelisk), a launcher for Bazel that allows configuration of the specific version to use.\n\nCreate a `BUILD` file in your code directory with a [test rule](https://bazel.build/versions/master/docs/test-encyclopedia.html).\nYou can then test your code by running:\n\n```sh\nbazelisk test <dir>:<rule>\n```\n\nAll tests can be run with:\n\n```sh\nbazelisk test ...:all\n```\n\n## Automated Integration Testing\nOn pushes and pull requests changes are tested via GitHub Actions.\nYou can see the current test status in the [Actions tab](https://github.com/google/open-location-code/actions/workflows/main.yml?query=branch%3Amain).\n\nThe testing configuration is controlled by the [`.github/workflows/main.yml`](.github/workflows/main.yml) file.\n\n### [.github/workflows/main.yml](.github/workflows/main.yml)\nThis file defines each language configuration to be tested.\n\nSome languages can be tested natively, others are built and tested using Bazel BUILD files.\n\nAn example of a language being tested natively is go:\n\n```\n   # Go implementation. Lives in go/\n   test-go:\n    runs-on: ubuntu-latest\n    env:\n      OLC_PATH: go\n    steps:\n    - uses: actions/checkout@v2\n    - uses: actions/setup-go@v2\n      with:\n        go-version: 1.17\n    - name: test\n      run: go test ./${OLC_PATH}\n```\n\nThis defines the language, uses the `1.17` version, sets an environment variable with the path and then runs the testing command `go test ./go`.\n\nAn example of a language using Bazel is Python:\n\n```\n  # Python implementation. Lives in python/, tested with Bazel.\n  test-python:\n    runs-on: ubuntu-latest\n    env:\n      OLC_PATH: python\n    strategy:\n      matrix:\n        python: [ '2.7', '3.6', '3.7', '3.8' ]\n    name: test-python-${{ matrix.python }}\n    steps:\n      - uses: actions/checkout@v2\n      - name: Set up Python\n        uses: actions/setup-python@v2\n        with:\n          python-version: ${{ matrix.python }}\n      - name: test\n        run: bazelisk test --test_output=all ${OLC_PATH}:all\n```\n\nBazel is pre-installed on GitHub-hosted runners which are used to run CI, so there's no need to install it.\nThis example also shows how to test with multiple versions of a language.\n\n### Adding Your Tests\n\nSimply add a new section to the `.github/workflows/main.yml` file with the appropriate language, and either the native test command or call `bazelisk test` like the other examples.\nMore information about GitHub actions can be found in the [documentation](https://docs.github.com/en/actions/quickstart).\n\n## Bazel version\n\nCurrently (2004), Bazel version 8 or later cannot be used for testing. (See issue google/open-location-code#662.)\nThe `js/closure` tests require using https://github.com/bazelbuild/rules_closure, which is not yet available as a Bazel module.\nThat dependency must be specified using a Bazel `WORKSPACE` file, and the version of Bazel to use is specified in the `.bazeliskrc` file.\n\n"
        },
        {
          "name": "WORKSPACE",
          "type": "blob",
          "size": 0.759765625,
          "content": "# Workspace configuration for Bazel build tools.\n\n# TODO: #642 -- Remove once io_bazel_rules_closure supports Bazel module configuration.\nworkspace(name = \"openlocationcode\")\n\nload(\"@bazel_tools//tools/build_defs/repo:http.bzl\", \"http_archive\")\n\nhttp_archive(\n    name = \"io_bazel_rules_closure\",\n    integrity = \"sha256-EvEWnr54L4Yx/LjagaoSuhkviVKHW0oejyDEn8bhAiM=\",\n    strip_prefix = \"rules_closure-0.14.0\",\n    urls = [\n        \"https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.14.0.tar.gz\",\n        \"https://github.com/bazelbuild/rules_closure/archive/0.14.0.tar.gz\",\n    ],\n)\nload(\"@io_bazel_rules_closure//closure:repositories.bzl\", \"rules_closure_dependencies\", \"rules_closure_toolchains\")\nrules_closure_dependencies()\nrules_closure_toolchains()\n"
        },
        {
          "name": "android_demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "c",
          "type": "tree",
          "content": null
        },
        {
          "name": "cpp",
          "type": "tree",
          "content": null
        },
        {
          "name": "dart",
          "type": "tree",
          "content": null
        },
        {
          "name": "garmin",
          "type": "tree",
          "content": null
        },
        {
          "name": "go",
          "type": "tree",
          "content": null
        },
        {
          "name": "java",
          "type": "tree",
          "content": null
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.50390625,
          "content": "{\n  \"name\": \"open-location-code\",\n  \"description\": \"Library to convert between lat/lng and OLC codes\",\n  \"version\": \"1.0.0\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/google/open-location-code.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/google/open-location-code/issues\"\n  },\n  \"author\": \"The Open Location Code Library Authors\",\n  \"license\": \"Apache-2.0\",\n  \"homepage\": \"http://openlocationcode.com/\",\n  \"keywords\": [\n    \"javascript\",\n    \"library\",\n    \"openlocationcode\"\n  ]\n}\n"
        },
        {
          "name": "plpgsql",
          "type": "tree",
          "content": null
        },
        {
          "name": "python",
          "type": "tree",
          "content": null
        },
        {
          "name": "ruby",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_data",
          "type": "tree",
          "content": null
        },
        {
          "name": "tile_server",
          "type": "tree",
          "content": null
        },
        {
          "name": "visualbasic",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}