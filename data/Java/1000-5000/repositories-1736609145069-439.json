{
  "metadata": {
    "timestamp": 1736609145069,
    "page": 439,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "uncle-novel/uncle-novel",
      "stars": 3219,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.158203125,
          "content": "root = true\n\n[{*.java, *.fxml}]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2080078125,
          "content": "*       text eof=lf\n*.bat   -text\n*.gif   binary\n*.jar   binary\n*.jpeg  binary\n*.jpg   binary\n*.png   binary\n*.vsd   binary\n*.ttf   binary\n*.exe   binary\nkindle*   binary\nexe.vsd   binary\n*.icns binary\n*.db binary"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1513671875,
          "content": "target\n/*.iml\nlogs\n*.tmp\n*.DS_Store\nlib/\ndownloads/\n*.txt\nbuild/\n.gradle/\nout/\ntmp/\n.idea\n/conf/\n/bin/\n/caches/\n/backup/\n/fonts/\n/.run/\nchangelog-latest.md"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.0849609375,
          "content": "[submodule \"packager\"]\n\tpath = packager\n\turl = https://github.com/uncle-novel/packager\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 4.626953125,
          "content": "## 5.0.45 - 2024-01-18\n\n- 修复win系统下 runApp task 编译失败问题\n- 修复win系统下 uncle app 不能启动异常问题\n\n## 5.0.44 - 2023-07-18\n\n- 修复 TTS 播放问题\n\n## 5.0.43 - 2023-07-17\n\n- 更新 tts 源\n- 修复 tts 源切换 BUG\n\n## 5.0.42 - 2023-07-09\n\n- 添加url参数（查询字符串）支持\n- 添加目录页匹配详情页链接支持\n\n## 5.0.41 - 2022-09-09\n\n- 修复书架跳转解析失败问题\n\n## 5.0.40 - 2022-09-07\n\n- 修复二次下载时文件序号没有连续的问题\n- 添加书籍信息在 txt 开头\n- 添加 js 工具方法 utils.bytes\n\n## 5.0.39 - 2021-07-16\n\n- 适配 Mac M1\n\n## ## 5.0.38 - 2021-07-16\n\n- 修复阅读器字体与主页字体不一致\n\n## 5.0.37 - 2021-07-14\n\n- 修复Mac闪退问题\n- 修复解析下载在多页时点击下载卡死问题\n\n## 5.0.36 - 2021-07-13\n\n- 修复下载一直在等待中问题\n- 修复导出规则时正则转义错误\n\n## 5.0.35 - 2021-07-11\n- \n- 新增设置可直接使用系统代理\n- 修复预处理脚本错误提示未生效问题\n\n## 5.0.34 - 2021-07-11\n\n- 解析下载右键增加全选与全不选\n- 小说书架书籍右键增加解析下载\n\n## 5.0.33 - 2021-07-09\n\n- 修复JsonPath匹配异常\n\n## 5.0.32 - 2021-07-08\n\n- 新增章节排序支持自定义脚本\n\n## 5.0.31 - 2021-07-07\n\n- 修复TTS朗读上一页问题\n- 增强书源调试器\n- 书源规则在列表时支持规则类型混用\n\n## 5.0.30 - 2021-07-04\n\n- 新增右键清空下载历史\n- 正文规则新增下载延迟\n- 搜索规则详情页采用GET请求\n\n## 5.0.29 - 2021-07-01\n\n- 修复搜索规则必须同时指定详情页与搜索页问题\n\n## 5.0.28 - 2021-06-30\n\n- 修复规则序列化异常问题\n- 有声小说播放器优化\n\n## 5.0.27 - 2021-06-30\n\n- 阅读器新增繁体简体互转化\n- 阅读器增加是否启用动画开关\n\n## 5.0.26 - 2021-06-30\n\n- 导出时简化书源\n- 全网搜书增加返回上页按钮\n\n## 5.0.25 - 2021-06-29\n\n- 优化动态网页获取\n\n## 5.0.24 - 2021-06-29\n\n- 修复解析正文失败问题\n\n## 5.0.23 - 2021-06-29\n\n- 完善规则编辑器\n- 增加执行定义请求预处理脚本\n\n## 5.0.22 - 2021-06-29\n\n- 修复退出后自动删除下载目录\n\n## 5.0.21 - 2021-06-29\n\n- 优化解析正文翻页\n- 修复无法自动获取小说标题问题\n- 修复段落模式异常\n\n## 5.0.20 - 2021-06-28\n\n- 修复有声书架目录右键菜单无效\n\n## 5.0.19 - 2021-06-28\n\n- 优化规则解析器中正文请求次数\n- 修复JsonPath规则解析后会带双引号\n- 修复搜索与解析时使用书源不一致问题\n\n## 5.0.18 - 2021-06-28\n\n- 修复书架书籍更新后章节顺序与解析时不一致\n- 书源管理增加网络导入与剪贴板导入\n\n## 5.0.17 - 2021-06-27\n\n- 修复任务下载失败后无法被删除\n- 修复书架中书籍更新后目录乱序\n\n## 5.0.16 - 2021-06-26\n\n- 修复替换净化规则正则无效\n\n## 5.0.15 - 2021-06-26\n\n- 修复详情规则无法匹配问题\n\n## 5.0.14 - 2021-06-26\n\n- 修复Mobi格式生成失败问题\n- 修复书源编辑器的一些问题\n\n## 5.0.13 - 2021-06-26\n\n- 调整默认为不进行分卷下载\n- 调整替换规则默认不为正则，启用正则需要加regex:前缀\n- 脚本工具支持匹配列表\n\n## 5.0.12 - 2021-06-25\n\n- 升级 kindlegen 版本\n- 修复书源管理书源过多显示异常问题\n- 修复书架书籍丢失问题\n\n## 5.0.11 - 2021-06-25\n\n- 修复书架书籍封面只能更换一次问题\n- 新增书架书籍封面右键手动获取\n- 新增正文繁体转简体功能\n- 修复最小化后再按老板键窗口无法显示\n\n## 5.0.10 - 2021-06-25\n\n- 修复书源编辑器中权重无法编辑问题\n- 修复预处理脚本部分异常问题\n\n## 5.0.9 - 2021-06-24\n\n- 增加ESC退出阅读器\n- 修复Epub章节名称重复\n- 增加预处理脚本的初始params变量\n\n## 5.0.8 - 2021-06-24\n\n- 修复无法生成Mobi格式文件\n- 增加预处理脚本调试工具\n- 修复阅读器窗口大小无法保存问题\n\n## 5.0.7 - 2021-06-24\n\n- 修复搜索规则参数编译问题\n- 修复章节规则调试器的信息不准确问题\n\n## 5.0.6 - 2021-06-24\n\n- 修复字体无法显示问题\n- 增加自定义软件字体\n- 增加书架书籍标题总是显示设置项\n\n## 5.0.5 - 2021-06-23\n\n- 修复默认翻页规则未生效\n- 修复搜索规则参数编译失败问题\n\n## 5.0.4 - 2021-06-23\n\n- 修复规则编辑器参数编译异常\n- 乱码问题可以通过更改系统默认字体解决\n\n## 5.0.3 - 2021-06-23\n\n- 修复阅读器快捷键不能使用问题\n- 添加托盘菜单\n- 增加阅读器滚轮翻页\n\n## 5.0.2 - 2021-06-22\n\n- 修复规则预处理脚本异常问题\n- 尝试修复部分设备乱码问题\n- 修复字体加载失败导致程序崩溃问题\n\n## 5.0.1 - 2021-06-16\n\n- 5.0 测试版本发布\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.02734375,
          "content": "Copyright <2021> <unclezs>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.640625,
          "content": "<p align=\"center\">\n    <a href=\"https://github.com/unclezs/uncle-novel/actions/workflows/build.yml\">\n        <img src=\"https://img.shields.io/github/actions/workflow/status/uncle-novel/uncle-novel/build.yml\" alt=\"gradle build\"/>\n    </a>\n    <a href=\"https://app.netlify.com/sites/uncle-novel-upgrade/deploys\">\n        <img src=\"https://api.netlify.com/api/v1/badges/79920580-ee2f-4334-aac0-d0e9424321c0/deploy-status\" alt=\"Netlify\"/>\n    </a>\n    <a href=\"https://github.com/unclezs/jfx-launcher/blob/main/LICENSE\">\n        <img src=\"https://img.shields.io/github/license/unclezs/uncle-novel?color=%2340C0D0&label=License\" alt=\"GitHub license\"/>\n    </a>\n\t<img src=\"https://img.shields.io/badge/openjdk-17-green\" alt=\"\"/>\n\t<img src=\"https://img.shields.io/badge/platform-win mac-green\" alt=\"\"/>\n</p>\n\n# Uncle 小说\n\n一个桌面端应用，支持 MacOS/Windows，提供了全网小说的转码阅读功能。其核心为目录解析功能，辅以书源模式进行（全网小说）小说的内容获取。\n\n注意：本项目仅供学习交流，请勿用于商业用途，软件内产生的数据请关闭软件后立即删除！！\n\n## 主要功能\n\n- 搜书文本小说\n- 搜书有声小说\n- 全网搜书\n- 文本小说书架\n- 文本小说阅读器\n- 有声小说书架\n- 解析下载\n- 下载管理\n- 书源管理\n- 软件设置\n- 全局热键\n- 主题定制\n- 国际化支持\n- 备份与恢复（WebDav）\n\n## 预览\n\n### 书架\n\n书架提供了书籍的分组管理功能，同时支持按照分组批量更新书籍，也可以导入本地 TXT 小说到书架。\n\n<img width=\"600\" src=\"https://github.com/unclezs/uncle-novel/raw/main/app/packager/screenshot/home.png\"/>\n\n### 阅读器\n\n<img width=\"600\" src=\"https://github.com/unclezs/uncle-novel/raw/main/app/packager/screenshot/read.png\"/>\n<img width=\"600\" src=\"https://github.com/unclezs/uncle-novel/raw/main/app/packager/screenshot/read1.png\"/>\n\n### 软件设置\n\n<img width=\"600\" src=\"https://github.com/unclezs/uncle-novel/raw/main/app/packager/screenshot/setting.png\"/> \n\n## 贡献代码\n\n### 本地启动\n\n准备环境:\n\n- `jdk` 至少需要 JDK11 版本。\n- `npm install -g sass` 安装 sass，本项目使用 sass 将 scss 编译为 css。\n- `sqlite3`，非必须，如果想重建 sqlite 数据库则需要安装。\n\n然后直接运行 :app:runApp 任务即可。\n\n```shell\n./graldew :app:runApp\n```\n\n### 打包\n\n```shell\n# window 64 位包\n./gradlew :app:packageWin64\n\n# window 32 位包\n./gradlew :app:packageWin32\n\n# macos 包，如果要打 arm64 的包需要配置 arm64 的 jdk\n./gradlew :app:packageMac\n```\n\n## Star History\n\n![Star History Chart](https://api.star-history.com/svg?repos=uncle-novel/uncle-novel&type=Date)\n\n"
        },
        {
          "name": "app-framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "app-localized",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 3.4755859375,
          "content": "plugins {\n    id \"io.spring.dependency-management\" version \"1.0.9.RELEASE\" apply false\n    id \"com.unclezs.gradle.sass\" version \"1.0.10\" apply false\n}\n\next {\n    jfxProject = ['app', 'app-framework']\n    jfxProject = subprojects.findAll { jfxProject.contains(it.name) }\n}\n\nallprojects {\n    group = \"com.unclezs.novel.app\"\n    version = property(\"app.version\")\n    description = \"Uncle Novel Project\"\n\n    repositories {\n        maven { url(\"https://oss.sonatype.org/content/groups/public/\") }\n        mavenCentral()\n        google()\n    }\n}\n\nsubprojects { project ->\n\n    apply plugin: \"java\"\n    apply from: \"${rootDir}/gradle/publications.gradle\"\n    apply from: \"${rootDir}/gradle/dependency-management.gradle\"\n\n    sourceSets {\n        main {\n            output.resourcesDir = java.classesDirectory\n            resources {\n                exclude '**/*.scss'\n            }\n        }\n    }\n\n    ext.compilerArgs = []\n    ext.runtimeArgs = []\n    // 模块化编译参数\n    File vmArgs = file(\"$projectDir/${project.name}.modularity\")\n    if (vmArgs.exists()) {\n        vmArgs.readLines().each {\n            if (!it.isBlank() && !it.startsWith(\"//\")) {\n                if (!it.startsWith(\"--add-opens\")) {\n                    ext.compilerArgs.add(it)\n                }\n                ext.runtimeArgs.add(it)\n            }\n        }\n    }\n\n    tasks.withType(JavaCompile) {\n        options.fork = true\n        options.encoding = \"UTF-8\"\n        sourceCompatibility = JavaVersion.VERSION_11\n        targetCompatibility = JavaVersion.VERSION_11\n\n        // 模块化编译参数\n        options.compilerArgs.addAll(compilerArgs)\n    }\n\n    dependencies {\n        compileOnly \"org.projectlombok:lombok\"\n        annotationProcessor \"org.projectlombok:lombok\"\n        testImplementation \"org.junit.jupiter:junit-jupiter-api\"\n        testRuntimeOnly \"org.junit.jupiter:junit-jupiter-engine\"\n    }\n\n    test {\n        useJUnitPlatform()\n        include([\"**/*Tests.class\", \"**/*Test.class\"])\n    }\n}\n\nconfigure(jfxProject) { project ->\n    apply plugin: \"org.openjfx.javafxplugin\"\n    // 因为 jsass 不适配 mac m1，停用此插件，采用原生 saas 编译\n    // apply plugin: \"com.unclezs.gradle.sass\"\n\n    javafx {\n        version = \"17.0.2\"\n        modules = [\"javafx.base\", \"javafx.controls\", \"javafx.fxml\", \"javafx.graphics\", \"javafx.media\", \"javafx.swing\", \"javafx.web\"]\n    }\n\n    jar {\n        exclude \"*.scss\"\n    }\n\n    def compileScss = {\n        def scssDir = file(\"${sourceSets.main.resources.srcDirs[0]}/css\")\n        for (final def file in fileTree(scssDir)) {\n            if (file.isDirectory()) {\n                continue\n            }\n            if (file.name.endsWith(\"scss\") && !file.name.startsWith(\"_\")) {\n                try {\n                    exec(new Action<ExecSpec>() {\n                        @Override\n                        void execute(ExecSpec es) {\n                            es.executable(\"sass\")\n                            es.args(\"--no-source-map\", \"--no-charset\", file.absolutePath, file.absolutePath.replace(\"scss\", \"css\"))\n                        }\n                    })\n                } catch (ignored) {\n                    println \"编译 scss 失败，请确认是否已经安装了 sass\"\n                    return\n                }\n                println \"compile scss to css: $file.name\"\n            } else if (file.name.endsWith(\".map\")) {\n                file.delete()\n            }\n        }\n    }\n\n    tasks.withType(JavaCompile) {\n        doFirst {\n            compileScss()\n        }\n    }\n}\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.3837890625,
          "content": "app.version=5.0.44\napp.launcher.version=1.1.11-SNAPSHOT\norg.gradle.jvmargs=-Dfile.encoding=UTF8\norg.gradle.parallel=true\norg.gradle.caching=false\norg.gradle.logging.level=info\nsystemProp.file.encoding=UTF8\n# all,fail,none,summary\norg.gradle.warning.mode=none\n# https://github.com/gradle/gradle/issues/11308#issuecomment-554330650\nsystemProp.org.gradle.internal.publish.checksums.insecure=true\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 2.1181640625,
          "content": "#!/usr/bin/env sh\nAPP_HOME=\"$(pwd -P)\"\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=$(basename \"$0\")\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn() {\n  echo \"$*\"\n}\n\ndie() {\n  echo\n  echo \"$*\"\n  echo\n  exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$(uname)\" in\nCYGWIN*)\n  cygwin=true\n  ;;\nDarwin*)\n  darwin=true\n  ;;\nMINGW*)\n  msys=true\n  ;;\nNONSTOP*)\n  nonstop=true\n  ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nJDK11_HOME=$(/usr/libexec/java_home -v17)\nif [ -n \"$JDK11_HOME\" ]; then\n  JAVACMD=\"$JDK11_HOME/bin/java\"\nelif [ -n \"$JAVA_HOME\" ]; then\n  if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n    # IBM's JDK on AIX uses strange locations for the executables\n    JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n  else\n    JAVACMD=\"$JAVA_HOME/bin/java\"\n  fi\n  if [ ! -x \"$JAVACMD\" ]; then\n    die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n  fi\nelse\n  JAVACMD=\"java\"\n  which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n  GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# Escape application args\nsave() {\n  for i; do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\"; done\n  echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.673828125,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n\n\n@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\" \"-Dfile.encoding=UTF-8\"\nset JAVA_TOOL_OPTIONS=\"-Dfile.encoding=UTF8\"\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "packager",
          "type": "commit",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.2197265625,
          "content": "rootProject.name = 'uncle-novel'\ninclude 'app'\ninclude 'app-framework'\ninclude 'app-localized'\n\n// 编译脚本为项目名.gradle\nrootProject.children.each { project ->\n    project.buildFileName = \"${project.name}.gradle\"\n}\n"
        }
      ]
    }
  ]
}