{
  "metadata": {
    "timestamp": 1736609125251,
    "page": 403,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/linkis",
      "stars": 3327,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 2,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\ngithub:\n  features:\n    # Enable issue management\n    issues: true\n    # Enable wiki for documentation\n    wiki: false\n    # Enable projects for project management boards\n    projects: true\n  description: Apache Linkis builds a computation middleware layer to facilitate connection, governance and orchestration between the upper applications and the underlying data engines.\n  homepage: https://linkis.apache.org/\n  labels:\n    - sql\n    - spark\n    - presto\n    - hive\n    - storage\n    - jdbc\n    - rest-api\n    - engine\n    - impala\n    - pyspark\n    - udf\n    - thrift-server\n    - resource-manager\n    - jobserver\n    - application-manager\n    - livy\n    - hive-table\n    - linkis\n    - context-service\n    - scriptis\n  collaborators:\n    - casionxia\n    - brucedchen1991\n    - ws00428637\n    - yyuser5201314\n    - KangTomwk\n    - guoshupei\n    - rarexixi\n  enabled_merge_buttons:\n    merge:  true\n    squash: true\n    rebase: true\n  protected_branches:\n    master:\n      required_status_checks:\n        strict: true\n      required_pull_request_reviews:\n        dismiss_stale_reviews: true\n        required_approving_review_count: 1\nnotifications:\n  commits: commits@linkis.apache.org\n  issues: dev@linkis.apache.org\n  pullrequests: dev@linkis.apache.org\n\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 1.544921875,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# Test using:\n#   curl --data-binary @.github/codecov.yml https://codecov.io/validate\n#\n# https://docs.codecov.io/docs/codecovyml-reference\ncodecov:\n  require_ci_to_pass: no\n\ncoverage:\n  precision: 2\n  round: down\n  range: \"20...100\"\n#   Add status message to PRs.\n  status:\n    project:\n      default:\n        #todo  adjust later\n        target: 15%  #overall project/ repo coverage\n\nparsers:\n  gcov:\n    branch_detection:\n      conditional: yes\n      loop: yes\n      method: no\n      macro: no\n\ngithub_checks:\n  annotations: false\n\nignore:\n  - \"**/entity/*\"\n  - \"**/exception/*\"\n\n# See https://docs.codecov.com/docs/flags for options.\nflag_management:\n  default_rules: # the rules that will be followed for any flag added, generally\n    carryforward: true # recommended for multi-lang mono-repos."
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3603515625,
          "content": ".DS_Store\n.cache\n\n# for ide\n*.iml\n*.ipr\n*.iws\n*.pyc\n*.pyo\n*.swp\n.idea/\n.idea_modules/\n.project\n.pydevproject\n.scala_dependencies\n.settings\n.classpath\n.flattened-pom.xml\n\n# For SBT\n.jvmopts\n\n# For Node.js\nnode_modules/\n\n# generated file\n.mvn/wrapper/maven-wrapper.jar\ndist/\nout/\ntarget/\n.flattened-pom.xml\n**/dependency-reduced-pom.xml\n# log folder\n*.log\nlogs/\nnohup.out"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.2626953125,
          "content": "[submodule \".github/actions/chart-testing-action\"]\n\tpath = .github/actions/chart-testing-action\n\turl = git@github.com:helm/chart-testing-action.git\n[submodule \".github/actions/kind-action\"]\n\tpath = .github/actions/kind-action\n\turl = git@github.com:helm/kind-action.git\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".scalafmt.conf",
          "type": "blob",
          "size": 1.2587890625,
          "content": "#\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nversion = 3.5.8\nrunner.dialect = scala211\nalign.preset = none\nalign.tokens = []\noptIn.configStyleArguments = false\nmaxColumn = 100\n\nindent.ctrlSite = 4\n\ndocstrings.style = Asterisk\n\nnewlines.topLevelStatementBlankLines = [\n  { blanks = 1 }\n]\n\nrewrite.rules = [Imports]\nrewrite.imports.sort = scalastyle\nrewrite.imports.groups = [\n    [\"org\\\\.apache\\\\.linkis.*\"],\n    [\"org\\\\.apache.*\"],\n    [\"org\\\\.springframework.*\"]\n    [\"javax.*\"]\n    [\"java.*\"]\n    [\"scala.*\"]\n    [\"(?!org\\\\.apache\\\\.linkis).*\"]\n]\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 11.5693359375,
          "content": "# How To Contribute\n\n> For more information, see the official website [How to contribute to the project](https://linkis.apache.org/community/how-to-contribute)\n\nThank you very much for contributing to the Linkis project! Before participating in the contribution, please read the following guidelines carefully.\n\n## 1. Contribution category\n\n### 1.1 Bug feedback and fixes\n\nWe recommend that whether it is a bug feedback or a fix, an issue is first created to describe the bug in detail, so that the community can find and review the problem and code through the issue record. Bug feedback Issues usually need to include **complete description of the bug information** and **reproducible scenarios** so that the community can quickly locate the cause of the bug and fix it. All open issues that contain the `#bug` tag need to be fixed.\n\n### 1.2 Functional communication, implementation, refactoring\n\nIn the communication process, a detailed description, mechanisms and usage scenarios of the new function (or refactoring) can promote it to be implemented better and faster (including test cases and codes, and CI/CD related work). **If you plan to implement a major feature (or refactoring), be sure to communicate with the core development team through Issue or other means** so that everyone can promote it in the most efficient way. Issues opened with the label of `#feature` are all new features that need to be implemented, and issues opened with the label of `#enhancement` are all features that need to be improved and refactored.\n\n### 1.3 Issue Q&A\n\nHelping answering the questions in the Linkis community is a very valuable way to contribute; there will always be new users in the community that will keep coming in. While helping new users, you can also show your expertise.\n\n### 1.4 Documentation Refinements\n\nYou can find linkis documentations at [linkis-Website](https://linkis.apache.org/docs/latest/introduction), and the supplement of the document is also crucial to the development of Linkis.\n\n### 1.5 Other\n\nIncluding participating in and helping to organize community exchanges, community operation activities, etc., and other activities that can help the Linkis project and the community.\n\n## 2. How to Contribution\n\n### 2.1 Branch structure\n\nThe Linkis source code may have some temporary branches, but only the following three branches are really meaningful:\n\n- master: The source code of the latest stable release, and occasionally several hotfix submissions;\n- release-*: stable release version;\n- dev-*: main development branch;\n\n#### 2.1.1 Concept\n\n- Upstream repository: <https://github.com/apache/linkis> The apache repository of linkis is called Upstream repository in the text\n- Fork repository: From <https://github.com/apache/linkis> fork to your own personal repository called Fork repository\n\n#### 2.1.2   Synchronize Upstream Repository\n\n> Synchronize the latest code of the Upstream repository branch to your own Fork repository\n\n- Step1 Enter the user project page and select the branch to be updated\n- Step2 Click Fetch upstream under the code download button, select Fetch and merge (if the branch of your own Fork repository is accidentally polluted, you can delete the branch and synchronize the new branch of the Upstream repository to your own Fork repository, see the guide [Synchronize Upstream] The latest code of the warehouse branch to its own Fork warehouse] (#213-synchronize the new branch of the Upstream warehouse to its own Fork warehouse))\n![update-code](https://user-images.githubusercontent.com/7869972/176622158-52da5a80-6d6a-4f06-a099-ff65887d002c.png)\n\n#### 2.1.3  Synchronize New Branch\n\n>Synchronize the new branch of the Upstream repository to your own Fork repository\n\nScenario: There is a new branch in the Upstream warehouse, but the forked library does not have this branch (you can choose to delete and re-fork, but the changes that have not been merged to the original warehouse will be lost)\n\nOperate in your own clone's local project\n\n- Step1 Add the apacheUpstream repository image to the local\n\n```shell script\ngit remote add apache git@github.com:apache/linkis.git\n```\n\n- Step2 Pull the apache image information to the local\n\n```shell script\ngit fetch apache\n```\n\n- Step3 Create a local branch based on the new branch that needs to be synced\n\n```shell script\ngit checkout -b dev-1.1.4 apache/dev-1.1.4\n```\n\n- Step4 Push the local branch to your own warehouse. If your own warehouse does not have the dev-1.1.4 branch, the dev-1.1.4 branch will be created\n\n```shell script\ngit push origin dev-1.1.4:dev-1.1.4\n```\n\n- Step5 Delete the upstream branch\n\n```shell script\ngit remote remove apache\n```\n\n- Step6 Update the branch\n\n```shell script\ngit pull\n```\n\n#### 2.1.4 The process of a pr\n\n- Step1 Confirm the base branch of the current development (usually the current version in progress, such as the version 1.1.0 currently under development by the community, then the branch is dev-1.1.0, if you are not sure, you can ask in the community group or at @relevant classmates in the issue)\n\n- Step2 Synchronize the latest code of the Upstream warehouse branch to your own Fork warehouse branch, see the guide [2.1.2 Synchronize Upstream Repository]\n\n- Step3 Based on the development branch, pull the new fix/feature branch (do not modify it directly on the original branch, if the subsequent PR is merged in the squash method, the submitted commit records will be merged into one)\n\n```shell script\ngit checkout -b dev-1.1.4-fix dev-1.1.4\ngit push origin dev-1.1.4-fix:dev-1.1.4-fix\n```\n\n- Step4 Develop\n- Step5 Submit pr (if it is in progress and the development has not been completely completed, please add the WIP logo to the pr title, such as `[WIP] Dev 1.1.1 Add junit test code for [linkis-common]`; associate the corresponding issue, etc.)\n- Step6 Waiting to be merged\n- Step7 Delete the fix/future branch (you can do this on the github page)\n\n```shell script\ngit branch -d dev-1.1.4-fix\ngit push\n```\n\nPlease note: For the dev branch of major features, in addition to the version number, the corresponding naming description will be added, such as: dev-0.10.0-flink, which refers to the flink feature development branch of 0.10.0.\n\n### 2.2 Development Guidelines\n\nLinkis front-end and back-end code share the same code base, but are separated in development. Before starting development, please fork a copy of the Linkis project to your Github Repositories, and develop based on the Linkis code base in your Github Repositories.\n\nWe recommend to clone the dev branch and name it dev-fix for development. At the same time, create a new dev-fix branch in your own warehouse and modify it directly on the original branch. If the subsequent PR is merged in the squash method, the submitted commit records will be merged into one\n\n```shell script\n#pull the branch\ngit clone https://github.com/{githubid}/linkis.git --branch dev\n\n#Generate local dev-fix branch according to dev\ngit checkout -b dev-fix dev\n\n#Push the local dev-fix branch to your own repository\ngit push origin dev-fix dev-fix\n```\n\n### 2.3 Issue submission guidelines\n\n- If you still don’t know how to initiate a PR to an open source project, please refer to [About issues](https://docs.github.com/en/github/managing-your-work-on-github/about-issues)\n- Issue name, which should briefly describe your problem or suggestion in one sentence; for the international promotion of the project, please write the issue in English or both Chinese and English\n- For each Issue, please bring at least two labels, component and type, such as component=Computation Governance/EngineConn, type=Improvement. Reference: [issue #590](https://github.com/apache/linkis/issues/590)\n\n### 2.4 Pull Request(PR) Submission Guidelines\n\n- If you still don’t know how to initiate a PR to an open source project, please refer to [About pull requests](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests)\n  Whether it is a bug fix or a new feature development, please submit a PR to the dev-* branch\n\n- PR and submission name follow the principle of `<type>(<scope>): <subject>`, for details, please refer to [Commit message and Change log writing guide](https://linkis.apache.org/docs/latest/development/development-specification/commit-message)\n- If the PR contains new features, the document update should be included in this PR\n- If this PR is not ready to merge, please add [WIP] prefix to the head of the name (WIP = work-in-progress)\n- All submissions to dev-* branches need to go through at least one review before they can be merged\n\n### 2.5 Review Standard\n\nBefore contributing code, you can find out what kind of submissions are popular in Review. Simply put, if a submission can bring as many gains as possible and as few side effects or risks as possible, the higher the probability of it being merged, the faster the review will be. Submissions with high risk and low value are almost impossible to merge, and may be rejected Review.\n\n#### 2.5.1 Gain\n\n- Fix the main cause of the bug\n- Add or fix a function or problem that a large number of users urgently need\n- Simple and effective\n- Easy to test, with test cases\n- Reduce complexity and amount of code\n- Issues that have been discussed by the community and identified for improvement\n\n#### 2.5.2 Side effects and risks\n\n- Only fix the surface phenomenon of the bug\n- Introduce new features with high complexity\n- Add complexity to meet niche needs\n- Change stable existing API or semantics\n- Cause other functions to not operate normally\n- Add a lot of dependencies\n- Change the dependency version at will\n- Submit a large number of codes or changes at once\n\n#### 2.5.3 Reviewer notes\n\n- Please use a constructive tone to write comments\n- If you need to make changes by the submitter, please clearly state all the content that needs to be modified to complete the Pull Request\n- If a PR is found to have brought new problems after the merger, the Reviewer needs to contact the PR author and communicate to solve the problem; if the PR author cannot be contacted, the Reviewer needs to restore the PR\n\n---\n\n## 3. Outstanding Contributor\n\n### 3.1 About Committers (Collaborators)\n\n#### 3.1.1 How to become Committer\n\nIf you have submitted a valuable PR to Linkis and have been merged, or contributed continuously for more than half a year, and have led the release of at least one version, you can find a PMC of the Linkis project through the official WeChat group, if he is willing to nominate you as a committer , And are willing to state your contribution to all PMC and Committer, then a vote will be initiated; PMC and other Committers will vote together to decide whether to allow you to join, if you get enough votes, you will become Committer of the Linkis project .\n\n#### 3.1.2 Committer's\n\n- You can join the official developer WeChat group to participate in discussions and formulate Linkis development plans\n- Can manage Issues, including closing and adding tags\n- Can create and manage project branches, except for master and dev-* branches\n- You can review the PR submitted to the dev-* branch\n- Can apply to become a Committee member\n\n### 3.2 About Committee\n\n#### 3.2.1 How to become a Committee member\n\nIf you are the Committer of the Linkis project, and all your contributions have been recognized by other Committee members, you can apply to become a member of the Linkis Committee, and other Committee members will vote together to decide whether to allow you to join. If you pass unanimously, you will become a member of the Linkis Committee.\n\n#### 3.2.2 Rights of Committee members\n\n- You can merge PRs submitted by other Committers and contributors to the dev-** branch\n- Participate in determining the roadmap and development direction of the Linkis project\n- Can participate in the new version release\n"
        },
        {
          "name": "CONTRIBUTING_CN.md",
          "type": "blob",
          "size": 9.8837890625,
          "content": "# 如何参与项目贡献\n\n> 更多信息可以见官网[如何参与项目贡献](https://linkis.apache.org/community/how-to-contribute)\n\n非常感谢贡献 Linkis 项目！在参与贡献之前，请仔细阅读以下指引。\n\n## 一、贡献范畴\n\n### 1.1 Bug 反馈与修复\n\n我们建议无论是 Bug 反馈还是修复，都先创建一个 Issue 来仔细描述 Bug 的状况，以助于社区可以通过 Issue 记录来找到和回顾问题以及代码。Bug 反馈 Issue 通常需要包含**完整描述 Bug 的信息**以及**可复现的场景**，这样社区才能快速定位导致 Bug 的原因并修复它。包含 `#bug` 标签的打开的 Issue 都是需要被修复的。\n\n### 1.2 功能交流、实现、重构\n\n在交流过程中，详细描述新功能（或重构）的细节、机制和使用场景，能够促使它更好更快地被实现（包括测试用例和代码，及 CI/CD 相关工作）。**如果计划实现一个重大的功能（或重构），请务必通过 Issue 或其他方式与核心开发团队进行沟通**，这样大家能以最效率的方式来推进它。包含 `#feature` 标签的打开的 Issue 都是需要被实现的新功能，包含 `#enhancement` 标签打开的 Issue 都是需要改进重构的功能。\n\n### 1.3 Issue 答疑\n\n帮助回答 Issue 中的使用问题是为 Linkis 社区做贡献的一个非常有价值的方式；社区中总会有新用户不断进来，在帮助新用户的同时，也可以展现您的专业知识。\n\n### 1.4 文档改进\n\nLinkis 文档位于[Linkis 官网](https://linkis.apache.org/zh-CN/docs/latest/introduction/) ，文档的补充完善对于 Linkis 的发展也至关重要。\n\n### 1.5 其他\n\n包括参与和帮助组织社区交流、社区运营活动等，其他能够帮助 Linkis 项目和社区的活动。\n\n## 二、贡献流程\n\n### 2.1 分支结构\n\nLinkis 源码可能会产生一些临时分支，但真正有明确意义的只有以下三个分支：  \n\n- master: 最近一次稳定 release 的源码，偶尔会多几次 hotfix 提交；\n- release-*: 稳定的 release 版本；\n- dev-*: 主要开发分支；\n\n#### 2.1.1 概念\n\n- Upstream 仓库:<https://github.com/apache/linkis> linkis 的 apache 仓库文中称为 Upstream 仓库\n- Fork 仓库: 从 <https://github.com/apache/linkis> fork 到自己个人仓库 称为 Fork 仓库  \n\n#### 2.1.2 同步 Upstream 仓库分支最新代码到自己的 Fork 仓库\n\n- step1 进入用户项目页面,选中要更新的分支  \n- step2 点击 code 下载按钮下方的 Fetch upstream,选择 Fetch and merge (如自己的 Fork 仓库  该分支不小心污染了，可以删除该分支后，同步 Upstream 仓库新分支到自己的 Fork 仓库  ，参见指引[同步 Upstream 仓库分支最新代码到自己的 Fork 仓库  ](#213-同步 Upstream 仓库新分支到自己的 Fork 仓库  ))\n![update-code](https://user-images.githubusercontent.com/7869972/176622158-52da5a80-6d6a-4f06-a099-ff65887d002c.png)\n\n#### 2.1.3 同步 Upstream 仓库新分支到自己的 Fork 仓库  \n\n场景：Upstream 仓库有新增分支，但是 fork 的库没有该分支 (可以选择删除后，重新 fork，但是会丢失未 merge 到原始仓库的变更)\n\n在自己 clone 的本地项目中操作\n\n- step1 添加 apacheUpstream 仓库镜像到本地  \n\n```shell script\ngit remote add apache git@github.com:apache/linkis.git\n```\n\n- step2 拉去 apache 镜像信息到本地  \n\n```shell script\ngit fetch apache\n```\n\n- step3 根据需要同步的新分支来创建本地分支\n\n```shell script\ngit checkout -b dev-1.1.4 apache/dev-1.1.4\n```\n\n- step4 把本地分支 push 到自己的仓库,如果自己的仓库没有 dev-1.1.4 分支，则会创建 dev-1.1.4 分支  \n\n```shell script\ngit push origin dev-1.1.4:dev-1.1.4\n```\n\n- step5 删除 upstream 的分支\n\n```shell script\ngit remote remove apache\n```\n\n- step6 更新分支\n\n```shell script\ngit pull\n```\n\n#### 2.1.4 一个 pr 的流程\n\n- step1 确认当前开发的基础分支（一般是当前进行的中版本，如当前社区开发中的版本 1.1.0，那么分支就是 dev-1.1.0，不确定的话可以在社区群里问下或则在 issue 中@相关同学）\n\n- step2 同步 Upstream 仓库分支最新代码到自己的 Fork 仓库 分支,参见指引 [2.1.2 同步 Upstream 仓库分支最新代码到自己的 Fork 仓库 ]\n\n- step3 基于开发分支，拉取新 fix/feature 分支 (不要直接在原分支上修改，如果后续 pr 以 squash 方式 merge 后，提交的 commit 记录会被合并成一个)\n\n```shell script\ngit checkout -b dev-1.1.4-fix  dev-1.1.4\ngit push origin dev-1.1.4-fix:dev-1.1.4-fix\n```\n\n- step4  进行开发\n- step5  提交 pr(如果是正在进行中,开发还未完全结束，请在 pr 标题上加上 WIP 标识 如 `[WIP] Dev 1.1.1 Add junit test code for [linkis-common]` ;关联对应的 issue 等)\n- step6  等待被合并\n- step7  删除 fix/future 分支 (可以在 github 页面上进行操作)\n\n```shell script\ngit branch -d dev-1.1.4-fix\ngit push\n```\n\n请注意：大特性的 dev 分支，在命名时除了版本号，还会加上相应的命名说明，如：dev-0.10.0-flink，指 0.10.0 的 flink 特性开发分支。\n\n### 2.2 开发指引\n\nLinkis 前后端代码共用同一个代码库，但在开发上是分离的。在着手开发之前，请先将 Linkis 项目 fork 一份到自己的 Github Repositories 中， 开发时请基于自己 Github Repositories 中的 Linkis 代码库进行开发。\n\n我们建议克隆 dev 分支命名为 dev-fix 来开发,同时在自己仓库新建 dev-fix 分支，直接在原分支上修改，如果后续 pr 以 squash 方式 merge 后，提交的 commit 记录会被合并成一个\n\n```shell script\n#拉取分支\ngit clone https://github.com/{githubid}/linkis.git --branch dev\n#根据 dev 生成本地 dev-fix 分支\ngit checkout -b dev-fix dev\n#把本地 dev-fix 分支推到自己的仓库\ngit push origin dev-fix dev-fix\n```\n\n### 2.3 Issue 提交指引\n\n- 如果您还不知道怎样向开源项目发起 PR，请参考[About issues](https://docs.github.com/en/github/managing-your-work-on-github/about-issues)\n- Issue 名称，应一句话简单描述您的问题或建议；为了项目的国际化推广，请用英文，或中英文双语书写 issue\n- 每个 Issue，请至少带上 component 和 type 两个 label，如 component=Computation Governance/EngineConn，type=Improvement.参考:[issue #590](https://github.com/apache/linkis/issues/590)\n\n### 2.4 Pull Request(PR) 提交指引\n\n- 如果您还不知道怎样向开源项目发起 PR，请参考[About pull requests](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests)\n- 无论是 Bug 修复，还是新功能开发，请将 PR 提交到 dev-* 分支\n\n- PR 和提交名称遵循 `<type>(<scope>): <subject>` 原则，详情可以参考[Commit message 和 Change log 编写指南](https://linkis.apache.org/zh-CN/docs/latest/development/development-specification/commit-message)\n- 如果 PR 中包含新功能，理应将文档更新包含在本次 PR 中\n- 如果本次 PR 尚未准备好合并，请在名称头部加上 [WIP] 前缀（WIP = work-in-progress）\n- 所有提交到 dev-* 分支的提交至少需要经过一次 Review 才可以被合并\n\n### 2.5 Review 标准\n\n在贡献代码之前，可以了解一下什么样的提交在 Review 中是受欢迎的。简单来说，如果一项提交能带来尽可能多增益和尽可能少的副作用或风险，那它被合并的几率就越高，Review 的速度也会越快。风险大、价值低地提交是几乎不可能被合并的，并且有可能会被拒绝 Review。\n\n#### 2.5.1 增益\n\n- 修复导致 Bug 的主要原因\n- 添加或修复一个大量用户亟需的功能或问题\n- 简单有效\n- 容易测试，有测试用例\n- 减少复杂度以及代码量\n- 经社区讨论过的、确定需要改进的问题\n\n#### 2.5.2 副作用和风险\n\n- 仅仅修复 Bug 的表面现象\n- 引入复杂度高的新功能\n- 为满足小众需求添加复杂度\n- 改动稳定的现有 API 或语义\n- 导致其他功能不能正常运行\n- 添加大量依赖\n- 随意改变依赖版本\n- 一次性提交大量代码或改动\n\n#### 2.5.3 Reviewer 注意事项\n\n- 请使用建设性语气撰写评论\n- 如果需要提交者进行修改，请明确说明完成此次 Pull Request 所需要修改的所有内容\n- 如果某次 PR 在合并后发现带来了新问题，Reviewer 需要向 PR 作者联系并沟通解决问题；如果无法联系到 PR 作者，Reviewer 需要将此次 PR 进行还原\n\n---\n\n## 三、贡献进阶\n\n### 3.1 关于 Committers（Collaborators）\n\n#### 3.1.1 如何成为 Committer\n\n如果您对 Linkis 提过颇具价值的 PR 并且被合并，或是连续贡献超过半年，且至少主导过一次版本的发布，您可以通过官方微信群找到 Linkis 项目的一个 PMC ，如果他愿意提名您为 committer，并愿意为您陈述您的贡献给所有 PMC 和 Committer，那么接下来会发起一次投票；PMC 和其他 Committers 将会一起投票决定是否允许您的加入，如果得到足够票数，您将成为 Linkis 项目的 Committer。\n\n#### 3.1.2 Committer 的权利\n\n- 可以加入官方开发者微信群，参与讨论和制定 Linkis 开发计划\n- 可以对 Issue 进行管理，包括关闭、添加标签\n- 可以创建和管理项目分支，master、dev-* 分支除外\n- 可以对提交到 dev-* 分支的 PR 进行 Review\n- 可以申请成为 Committee 成员\n\n### 3.2 关于 Committee\n\n#### 3.2.1 如何成为 Committee 成员\n\n如果您是 Linkis 项目的 Committer，并且您贡献的所有内容得到了其他 Committee 成员的认可，您可以申请成为 Linkis Committee 成员，其他 Committee 成员将会一起投票决定是否允许您的加入，如果全票通过，您将成为 Linkis Committee 成员。\n\n#### 3.2.2 Committee 成员的权利\n\n- 可以合并其他 Committers 和贡献者提交到 dev-** 分支的 PR\n- 可以参与决定 Linkis 项目的 roadmap 和发展方向\n- 可以参与新版本发布\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 13.1982421875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n============================================================================\n   APACHE LINKIS SUBCOMPONENTS:\n\n   The Apache Linkis project contains subcomponents with separate copyright\n   notices and license terms. Your use of the source code for the these\n   subcomponents is subject to the terms and conditions of the following\n   licenses.\n\n\n========================================================================\nBSD licenses\n========================================================================\n\nThe following components are provided under the BSD License.\n    linkis-engineconn-plugins/python/src/main/py4j/py4j-*-src.zip\n    (See licenses/LICENSE-py4j-*-src.txt for text of this license)\n\n========================================================================\nApache 2.0 licenses\n========================================================================\n\nThe following file are provided under the Apache 2.0 License.\n    linkis-web/.editorconfig\n    linkis-web/.env\n    linkis-web/.eslintignore\n    linkis-web/.jshintrc\n    linkis-web/.prettierrc.json\n    linkis-web/package.json\n    linkis-web/src/apps/linkis/i18n/common/en.json\n    linkis-web/src/common/i18n/en.json\n    linkis-web/src/common/i18n/zh.json\n    linkis-web/src/config.json\n    linkis-web/public/favicon.ico\n    linkis-engineconn-plugins/seatunnel/src/main/java/org/apache/seatunnel/*\n    linkis-commons/linkis-storage/src/test/resources/scritpis-test.sql\n    linkis-engineconn-plugins/hbase/hbase-shims-1.2.0/src/main/resources/hbase-ruby/*\n    linkis-engineconn-plugins/hbase/hbase-shims-1.4.3/src/main/resources/hbase-ruby/*\n    linkis-engineconn-plugins/hbase/hbase-shims-2.2.6/src/main/resources/hbase-ruby/*\n    linkis-engineconn-plugins/hbase/hbase-shims-2.5.3/src/main/resources/hbase-ruby/*\n    linkis-engineconn-plugins/spark/src/main/java/org/apache/linkis/engineplugin/spark/executor/SecureRandomStringUtils.java\n\nThe files:\n    .mvn/wrapper/MavenWrapperDownloader.java\n    .mvn/wrapper/maven-wrapper.properties\n    mvnw\n    mvnw.cmd\nAre provided from the Github Project: https://github.com/takari/maven-wrapper\nwhich is distributed under the Apache 2.0 license.\n\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.2373046875,
          "content": "Apache Linkis\nCopyright 2021-2023 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n\nThe initial codebase was donated to the ASF by WeBank, copyright 2015-2020."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 11.8388671875,
          "content": "<h2 align=\"center\">\n  Apache Linkis\n</h2>\n\n<p align=\"center\">\n  <strong> Linkis builds a computation middleware layer to facilitate connection, \n    governance and orchestration between the upper applications and the underlying data engines. </strong>\n</p>\n<p align=\"center\">\n  <a href=\"https://linkis.apache.org/\">https://linkis.apache.org/</a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://linkis.apache.org/docs/latest/introduction/\" >\n    <img src=\"https://img.shields.io/badge/document-English-blue.svg\" alt=\"EN docs\" />\n  </a>\n  <a href=\"https://linkis.apache.org/zh-CN/docs/latest/introduction/\">\n    <img src=\"https://img.shields.io/badge/文档-简体中文-blue.svg\" alt=\"简体中文文档\" />\n  </a>\n</p>\n\n<p align=\"center\">\n    <a target=\"_blank\" href=\"https://search.maven.org/search?q=g:org.apache.linkis%20AND%20a:linkis\">\n        <img src=\"https://img.shields.io/maven-central/v/org.apache.linkis/linkis.svg?label=maven%20central\" />\n    </a>\n    <a target=\"_blank\" href=\"https://github.com/apache/linkis/blob/master/LICENSE\">\n        <img src=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg?label=license\" />\n    </a>\n    <a target=\"_blank\" href=\"https://www.oracle.com/technetwork/java/javase/downloads/index.html\">\n        <img src=\"https://img.shields.io/badge/JDK-8-green.svg\" />\n    </a>\n    <a target=\"_blank\" href=\"https://github.com/apache/linkis/actions\">\n        <img src=\"https://github.com/apache/linkis/actions/workflows//build-backend.yml/badge.svg\" />\n    </a>\n\n   <a target=\"_blank\" href='https://github.com/apache/linkis'>\n        <img src=\"https://img.shields.io/github/forks/apache/linkis.svg\" alt=\"github forks\"/>\n   </a>\n   <a target=\"_blank\" href='https://github.com/apache/linkis'>\n        <img src=\"https://img.shields.io/github/stars/apache/linkis.svg\" alt=\"github stars\"/>\n   </a>\n   <a target=\"_blank\" href='https://github.com/apache/linkis'>\n        <img src=\"https://img.shields.io/github/contributors/apache/linkis.svg\" alt=\"github contributors\"/>\n   </a>\n  <a target=\"_blank\" href=\"https://badges.toozhao.com/stats/01G7TRNN1PH9PMSCYWDF3EK4QT\">\n       <img src=\"https://badges.toozhao.com/badges/01G7TRNN1PH9PMSCYWDF3EK4QT/green.svg\" />\n  </a>\n  \n</p>\n<br/>\n\n---\n[English](README.md) | [中文](README_CN.md)\n\n# Introduction\n\n Linkis builds a layer of computation middleware between upper applications and underlying engines. By using standard interfaces such as REST/WS/JDBC provided by Linkis, the upper applications can easily access the underlying engines such as MySQL/Spark/Hive/Presto/Flink, etc., and achieve the intercommunication of user resources like unified variables, scripts, UDFs, functions and resource files at the same time.\n\nAs a computation middleware, Linkis provides powerful connectivity, reuse, orchestration, expansion, and governance capabilities. By decoupling the application layer and the engine layer, it simplifies the complex network call relationship, and thus reduces the overall complexity and saves the development and maintenance costs as well.\n\nSince the first release of Linkis in 2019, it has accumulated more than **700** trial companies and **1000+** sandbox trial users, which involving diverse industries, from finance, banking, tele-communication, to manufactory, internet companies and so on. Lots of companies have already used Linkis as a unified entrance for the underlying computation and storage engines of the big data platform.\n\n![linkis-intro-01](https://user-images.githubusercontent.com/7869972/148767375-aeb11b93-16ca-46d7-a30e-92fbefe2bd5e.png)\n\n![linkis-intro-03](https://user-images.githubusercontent.com/7869972/148767380-c34f44b2-9320-4633-9ec8-662701f41d15.png)\n\n# Features\n\n- **Support for diverse underlying computation storage engines** : Spark, Hive, Python, Shell, Flink, JDBC, Pipeline, Sqoop, OpenLooKeng, Presto, ElasticSearch, Trino, SeaTunnel, etc.;\n\n- **Support for diverse language** : SparkSQL, HiveSQL, Python, Shell, Pyspark, Scala, JSON and Java;\n\n- **Powerful computing governance capability** : It can provide task routing, load balancing, multi-tenant, traffic control, resource control and other capabilities based on multi-level labels;\n\n- **Support full stack computation/storage engine** : The ability to receive, execute and manage tasks and requests for various compute and storage engines, including offline batch tasks, interactive query tasks, real-time streaming tasks and data lake tasks;\n\n- **Unified context service** : supports cross-user, system and computing engine to associate and manage user and system resource files (JAR, ZIP, Properties, etc.), result sets, parameter variables, functions, UDFs, etc., one setting, automatic reference everywhere;\n\n- **Unified materials** : provides system and user level material management, can share and flow, share materials across users, across systems;\n\n- **Unified data source management** : provides the ability to add, delete, check and change information of Hive, ElasticSearch, Mysql, Kafka, MongoDB and other data sources, version control, connection test, and query metadata information of corresponding data sources;\n\n- **Error code capability** : provides error codes and solutions for common errors of tasks, which is convenient for users to locate problems by themselves;\n\n# Engine Type\n\n| **Engine name** | **Support underlying component version<br/>(default dependency version)** | **Linkis Version Requirements** | **Included in Release Package By Default** | **Description** |\n|:---- |:---- |:---- |:---- |:---- |\n|Spark|Apache >= 2.0.0, <br/>CDH >= 5.4.0, <br/>(default Apache Spark 3.2.1)|\\>=1.0.3|Yes|Spark EngineConn, supports SQL , Scala, Pyspark and R code|\n|Hive|Apache >= 1.0.0, <br/>CDH >= 5.4.0, <br/>(default Apache Hive 3.1.3)|\\>=1.0.3|Yes |Hive EngineConn, supports HiveQL code|\n|Python|Python >= 2.6, <br/>(default Python2*)|\\>=1.0.3|Yes |Python EngineConn, supports python code|\n|Shell|Bash >= 2.0|\\>=1.0.3|Yes|Shell EngineConn, supports Bash shell code|\n|JDBC|MySQL >= 5.0, Hive >=1.2.1, <br/>(default Hive-jdbc 2.3.4)|\\>=1.0.3|No |JDBC EngineConn, already supports ClickHouse, DB2, DM, Greenplum, kingbase, MySQL, Oracle, PostgreSQL and SQLServer, can be extended quickly Support other DB, such as SQLite|\n|Flink |Flink >= 1.12.2, <br/>(default Apache Flink 1.12.2)|\\>=1.0.2|No |Flink EngineConn, supports FlinkSQL code, also supports starting a new Yarn in the form of Flink Jar Application|\n|Pipeline|-|\\>=1.0.2|No|Pipeline EngineConn, supports file import and export|\n|openLooKeng|openLooKeng >= 1.5.0, <br/>(default openLookEng 1.5.0)|\\>=1.1.1|No|openLooKeng EngineConn, supports querying data virtualization engine with Sql openLooKeng|\n|Sqoop| Sqoop >= 1.4.6, <br/>(default Apache Sqoop 1.4.6)|\\>=1.1.2|No|Sqoop EngineConn, support data migration tool Sqoop engine|\n|Presto|Presto >= 0.180|\\>=1.2.0|No|Presto EngineConn, supports Presto SQL code|\n|ElasticSearch|ElasticSearch >=6.0|\\>=1.2.0|No|ElasticSearch EngineConn, supports SQL and DSL code|\n|Trino | Trino >=371 | >=1.3.1 | No |   Trino EngineConn， supports Trino SQL code |\n|Seatunnel | Seatunnel >=2.1.2 | >=1.3.1 | No | Seatunnel EngineConn， supportt Seatunnel SQL code |\n\n# Download\n\nPlease go to the [Linkis Releases Page](https://linkis.apache.org/download/main) to download a compiled distribution or a source code package of Linkis.\n\n# Compile and Deploy\n\n> For more detailed guidance see:\n>- [[Backend Compile]](https://linkis.apache.org/docs/latest/development/build)\n>- [[Management Console Build]](https://linkis.apache.org/docs/latest/development/build-console)\n\n```shell\n\nNote: If you want use `-Dlinkis.build.web=true` to build  linkis-web image, you need to compile linkis-web first.\n\n## compile backend\n### Mac OS/Linux\n\n# 1. When compiling for the first time, execute the following command first\n./mvnw -N install\n\n# 2. make the linkis distribution package\n# - Option 1: make the linkis distribution package only\n./mvnw clean install -Dmaven.javadoc.skip=true -Dmaven.test.skip=true\n\n# - Option 2: make the linkis distribution package and docker image\n#   - Option 2.1: image without mysql jdbc jars\n./mvnw clean install -Pdocker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true\n#   - Option 2.2: image with mysql jdbc jars\n./mvnw clean install -Pdocker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -Dlinkis.build.with.jdbc=true\n\n# - Option 3: linkis distribution package and docker image (included web)\n./mvnw clean install -Pdocker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -Dlinkis.build.web=true\n\n# - Option 4: linkis distribution package and docker image (included web and ldh (hadoop all in one for test))\n./mvnw clean install -Pdocker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -Dlinkis.build.web=true -Dlinkis.build.ldh=true -Dlinkis.build.with.jdbc=true\n\n### Windows\nmvnw.cmd -N install\nmvnw.cmd clean install -Dmaven.javadoc.skip=true -Dmaven.test.skip=true\n\n## compile web\ncd linkis/linkis-web\nnpm install\nnpm run build\n```\n\n### Bundled with MySQL JDBC Driver\nDue to the MySQL licensing restrictions, the MySQL Java Database Connectivity (JDBC) driver is not bundled with the \nofficial released linkis image by default. However, at current stage, linkis still relies on this library to work properly.\nTo solve this problem, we provide a script which can help to creating a custom image with mysql jdbc from the official \nlinkis image by yourself, the image created by this tool will be tagged as `linkis:with-jdbc` by default.\n\n```shell\n$> LINKIS_IMAGE=linkis:1.3.1 \n$> ./linkis-dist/docker/scripts/make-linkis-image-with-mysql-jdbc.sh\n```\n\n\nPlease refer to [Quick Deployment](https://linkis.apache.org/docs/latest/deployment/deploy-quick/) to do the deployment.\n\n# Examples and Guidance\n- [User Manual](https://linkis.apache.org/docs/latest/user-guide/how-to-use)\n- [Engine Usage Documents](https://linkis.apache.org/docs/latest/engine-usage/overview) \n- [API Documents](https://linkis.apache.org/docs/latest/api/overview)\n\n# Documentation & Vedio\n\n- The documentation of linkis is in [Linkis-Website Git Repository](https://github.com/apache/linkis-website)\n- Meetup videos on [Bilibili](https://space.bilibili.com/598542776?from=search&seid=14344213924133040656)\n\n# Architecture\nLinkis services could be divided into three categories: computation governance services, public enhancement services and microservice governance services\n- The computation governance services, support the 3 major stages of processing a task/request: submission -> preparation -> execution\n- The public enhancement services, including the material library service, context service, and data source service\n- The microservice governance services, including Spring Cloud Gateway, Eureka and Open Feign\n\nBelow is the Linkis architecture diagram. You can find more detailed architecture docs in [Linkis-Doc/Architecture](https://linkis.apache.org/docs/latest/architecture/overview).\n![architecture](https://user-images.githubusercontent.com/7869972/148767383-f87e84ba-5baa-4125-8b6e-d0aa4f7d3a66.png)\n\n# Contributing\n\nContributions are always welcomed, we need more contributors to build Linkis together. either code, or doc, or other supports that could help the community.  \nFor code and documentation contributions, please follow the [contribution guide](https://linkis.apache.org/community/how-to-contribute).\n\n# Contact Us\n\n\n- Any questions or suggestions please kindly submit an [issue](https://github.com/apache/linkis/issues).  \n- By mail [dev@linkis.apache.org](mailto:dev@linkis.apache.org)\n- You can scan the QR code below to join our WeChat group to get more immediate response\n\n<img src=\"https://linkis.apache.org/Images/wedatasphere_contact_01.png\" width=\"256\"/>\n\n# Who is Using Linkis\n\nWe opened an issue [[Who is Using Linkis]](https://github.com/apache/linkis/issues/23) for users to feedback and record who is using Linkis.  \nSince the first release of Linkis in 2019, it has accumulated more than **700** trial companies and **1000+** sandbox trial users, which involving diverse industries, from finance, banking, tele-communication, to manufactory, internet companies and so on.\n"
        },
        {
          "name": "README_CN.md",
          "type": "blob",
          "size": 11.1328125,
          "content": "<h2 align=\"center\">\n  Apache Linkis\n</h2>\n\n<p align=\"center\">\n  <strong>Linkis 构建了一层计算中间件，方便上层应用与底层数据引擎之间的连接、治理和编排 </strong>\n</p>\n<p align=\"center\">\n  <a href=\"https://linkis.apache.org/\">https://linkis.apache.org/</a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://linkis.apache.org/docs/latest/introduction/\" >\n    <img src=\"https://img.shields.io/badge/document-English-blue.svg\" alt=\"EN docs\" />\n  </a>\n  <a href=\"https://linkis.apache.org/zh-CN/docs/latest/introduction/\">\n    <img src=\"https://img.shields.io/badge/文档-简体中文-blue.svg\" alt=\"简体中文文档\" />\n  </a>\n</p>\n\n<p align=\"center\">\n    <a target=\"_blank\" href=\"https://search.maven.org/search?q=g:org.apache.linkis%20AND%20a:linkis\">\n        <img src=\"https://img.shields.io/maven-central/v/org.apache.linkis/linkis.svg?label=maven%20central\" />\n    </a>\n    <a target=\"_blank\" href=\"https://github.com/apache/linkis/blob/master/LICENSE\">\n        <img src=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg?label=license\" />\n    </a>\n    <a target=\"_blank\" href=\"https://www.oracle.com/technetwork/java/javase/downloads/index.html\">\n        <img src=\"https://img.shields.io/badge/JDK-8-green.svg\" />\n    </a>\n    <a target=\"_blank\" href=\"https://github.com/apache/linkis/actions\">\n        <img src=\"https://github.com/apache/linkis/actions/workflows//build-backend.yml/badge.svg\" />\n    </a>\n\n   <a target=\"_blank\" href='https://github.com/apache/linkis'>\n        <img src=\"https://img.shields.io/github/forks/apache/linkis.svg\" alt=\"github forks\"/>\n   </a>\n   <a target=\"_blank\" href='https://github.com/apache/linkis'>\n        <img src=\"https://img.shields.io/github/stars/apache/linkis.svg\" alt=\"github stars\"/>\n   </a>\n   <a target=\"_blank\" href='https://github.com/apache/linkis'>\n        <img src=\"https://img.shields.io/github/contributors/apache/linkis.svg\" alt=\"github contributors\"/>\n   </a>\n  <a target=\"_blank\" href=\"https://badges.toozhao.com/stats/01G7TRNN1PH9PMSCYWDF3EK4QT\">\n       <img src=\"https://badges.toozhao.com/badges/01G7TRNN1PH9PMSCYWDF3EK4QT/green.svg\" />\n  </a>\n  \n</p>\n<br/>\n\n---\n[English](README.md) | [中文](README_CN.md)\n\n# 介绍\n\nLinkis 在上层应用程序和底层引擎之间构建了一层计算中间件。通过使用 Linkis 提供的 REST/WebSocket/JDBC 等标准接口，\n上层应用可以方便地连接访问 MySQL/Spark/Hive/Presto/Flink 等底层引擎，同时实现变量、脚本、函数和资源文件等用户资源的跨上层应用互通。  \n作为计算中间件，Linkis 提供了强大的连通、复用、编排、扩展和治理管控能力。通过计算中间件将应用层和引擎层解耦，简化了复杂的网络调用关系，\n降低了整体复杂度，同时节约了整体开发和维护成本。  \nLinkis 自 2019 年开源发布以来，已累计积累了 700 多家试验企业和 1000+沙盒试验用户，涉及金融、电信、制造、互联网等多个行业。\n许多公司已经将 Linkis 作为大数据平台底层计算存储引擎的统一入口，和计算请求/任务的治理管控利器。\n\n![没有 Linkis 之前 ](https://user-images.githubusercontent.com/7869972/148767370-06025750-090e-4fd6-bd32-aab2fbb01352.png)\n\n![有了 Linkis 之后 ](https://user-images.githubusercontent.com/7869972/148767358-b02ae982-4080-4efa-aa0f-768ca27902b7.png)\n\n## 核心特点\n\n- **丰富的底层计算存储引擎支持**：Spark、Hive、Python、Shell、Flink、JDBC、Pipeline、Sqoop、OpenLooKeng、Presto、ElasticSearch、Trino、SeaTunnel 等；\n- **丰富的语言支持**：SparkSQL、HiveSQL、Python、Shell、Pyspark、Scala、JSON 和 Java 等；\n- **强大的计算治理能力**： 能够提供基于多级标签的任务路由、负载均衡、多租户、流量控制、资源控制等能力；\n- **全栈计算存储引擎架构支持**：  能够接收、执行和管理针对各种计算存储引擎的任务和请求，包括离线批量任务、交互式查询任务、实时流式任务和数据湖任务；\n- **统一上下文服务**：支持跨用户、系统、计算引擎去关联管理用户和系统的资源文件（JAR、ZIP、Properties 等），结果集、参数变量、函数、UDF等，一处设置，处处自动引用；\n- **统一物料**： 提供了系统和用户级物料管理，可分享和流转，跨用户、跨系统共享物料；\n- **统一数据源管理**：  提供了Hive、ElasticSearch、Mysql、Kafka、MongoDB 等类型数据源信息的增删查改、版本控制、连接测试和对应数据源的元数据信息查询能力；\n- **错误码能力**：提供了任务常见错误的错误码和解决方案，方便用户自助定位问题；\n\n# 引擎类型\n\n| **引擎名** | **支持底层组件版本<br/>(默认依赖版本)** | **Linkis 1.X 版本要求** | **是否默认包含在发布包中** | **说明** |\n|:---- |:---- |:---- |:---- |:---- |\n|Spark|Apache >= 2.0.0, <br/>CDH >= 5.4.0, <br/>（默认 Apache Spark 3.2.1）|\\>=1.0.3|是|Spark EngineConn， 支持 SQL, Scala, Pyspark 和 R 代码|\n|Hive|Apache >= 1.0.0, <br/>CDH >= 5.4.0, <br/>（默认 Apache Hive 3.1.3）|\\>=1.0.3|是|Hive EngineConn， 支持 HiveQL 代码|\n|Python|Python >= 2.6, <br/>（默认 Python2*）|\\>=1.0.3|是|Python EngineConn， 支持 python 代码|\n|Shell|Bash >= 2.0|\\>=1.0.3|是|Shell EngineConn， 支持 Bash shell 代码|\n|JDBC|MySQL >= 5.0, Hive >=1.2.1, <br/>(默认 Hive-jdbc 2.3.4)|\\>=1.0.3|否|JDBC EngineConn， 已支持ClickHouse, DB2, DM, Greenplum, kingbase, MySQL, Oracle, PostgreSQL 和 SQLServer，可快速扩展支持其他数据库组件, 如SQLite|\n|Flink |Flink >= 1.12.2, <br/>(默认 Apache Flink 1.12.2)|\\>=1.0.3|否|Flink EngineConn， 支持 FlinkSQL 代码，也支持以 Flink Jar 形式启动一个新的 Yarn 应用程序|\n|Pipeline|-|\\>=1.0.3|否|Pipeline EngineConn， 支持文件的导入和导出|\n|openLooKeng|openLooKeng >= 1.5.0, <br/>(默认 openLookEng 1.5.0)|\\>=1.1.1|否|openLooKeng EngineConn， 支持用 Sql 查询数据虚拟化引擎 openLooKeng|\n|Sqoop| Sqoop >= 1.4.6, <br/>(默认 Apache Sqoop 1.4.6)|\\>=1.1.2|否|Sqoop EngineConn， 支持 数据迁移工具 Sqoop 引擎|\n|Presto|Presto >= 0.180, <br/>(默认 Presto 0.234)|\\>=1.2.0|否|Presto EngineConn， 支持 Presto SQL 代码|\n|ElasticSearch|ElasticSearch >=6.0, <br/>((默认 ElasticSearch 7.6.2)|\\>=1.2.0|否|ElasticSearch EngineConn， 支持 SQL 和 DSL 代码|\n|Trino | Trino >=371 | >=1.3.1 | 否 |   Trino EngineConn， 支持Trino SQL 代码 |\n|Seatunnel | Seatunnel >=2.1.2 | >=1.3.1 | 否 | Seatunnel EngineConn， 支持Seatunnel SQL 代码 |\n\n# 下载\n\n请前往[Linkis Releases 页面 ](https://linkis.apache.org/download/main) 下载 Linkis 的已编译版本或源码包。\n\n# 编译和安装部署\n\n> 更详细的步骤参见:\n>- [后端编译打包 ](https://linkis.apache.org/zh-CN/docs/latest/development/build)\n>- [管理台编译 ](https://linkis.apache.org/zh-CN/docs/latest/development/build-console)\n\n\n\n```shell script\n## 后端编译\n注意:如果使用 -Dlinkis.build.web=true 来构建web镜像，需要首先执行 管理台 linkis-web 的编译\n\n### Mac OS/Linux 系统\n# 1. 首次编译，请执行如下命令\n./mvnw -N install\n# 2. 构建 Linkis 部署包\n# - 选项 1: 仅构建 Linkis 服务部署包\n./mvnw clean install -Dmaven.javadoc.skip=true -Dmaven.test.skip=true\n# - 选项 2: 构建 Linkis 服务部署包和 Docker 镜像\n#   - 选项 2.1: 构建的镜像中不包含 mysql jdbc 包\n./mvnw clean install -Pdocker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true\n#   - 选项 2.2: 构建的镜像中包含 mysql jdbc 包\n./mvnw clean install -Pdocker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -Dlinkis.build.with.jdbc=true\n# - 选项 3: 构建 Linkis 服务部署包和 Docker 镜像（包括 Web 控制台）\n./mvnw clean install -Pdocker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -Dlinkis.build.web=true\n# - 选项 4: 仅构建 Linkis 服务部署包和 Docker 镜像（包括 Web 控制台和 LDH 镜像，LDH 镜像包换了多个预先配置和部署好的 Hadoop 组件，主要面向测试用途）\n./mvnw clean install -Pdocker -Dmaven.javadoc.skip=true -Dmaven.test.skip=true -Dlinkis.build.web=true -Dlinkis.build.ldh=true -Dlinkis.build.with.jdbc=true\n\n### Windows 系统\nmvnw.cmd -N install\nmvnw.cmd clean install -Dmaven.javadoc.skip=true -Dmaven.test.skip=true\n\n\n## 管理台编译\ncd linkis/linkis-web\nnpm install\nnpm run build\n```\n\n### 集成 MySQL JDBC 驱动\n\n由于MySQL的许可协议限制，官方发布的 Linkis 镜像没有集成 MySQL JDBC 驱动。 然而，在现阶段，Linkis 仍然依赖这个库才能正常运行。 为了解决这个问题，\n我们提供了一个脚本，它可以帮助你快速的基于官方的 Linkis 镜像创建一个集成了MySQL JDBC 的自定义镜像。 这个工具创建的镜像默认的名称是 `linkis:with-jdbc`。\n\n```shell\n$> LINKIS_IMAGE=linkis:1.3.1 \n$> ./linkis-dist/docker/scripts/make-linkis-image-with-mysql-jdbc.sh\n```\n\n请参考[快速安装部署 ](https://linkis.apache.org/zh-CN/docs/latest/deployment/deploy-quick/) 来部署 Linkis\n\n# 示例和使用指引\n\n- [用户手册 ](https://linkis.apache.org/zh-CN/docs/latest/user-guide/how-to-use),\n- [各引擎使用指引 ](https://linkis.apache.org/zh-CN/docs/latest/engine-usage/overview) \n- [API 文档 ](https://linkis.apache.org/zh-CN/docs/latest/api/overview)\n\n# 文档&视频\n\n- 完整的 Linkis 文档代码存放在[linkis-website 仓库中 ](https://github.com/apache/linkis-website)  \n\n- Meetup 视频 [Bilibili](https://space.bilibili.com/598542776?from=search&seid=14344213924133040656)\n\n# 架构概要\nLinkis 基于微服务架构开发，其服务可以分为 3 类:计算治理服务、公共增强服务和微服务治理服务。  \n\n- 计算治理服务，支持计算任务/请求处理流程的 3 个主要阶段:提交-> 准备-> 执行\n- 公共增强服务，包括上下文服务、物料管理服务及数据源服务等\n- 微服务治理服务，包括定制化的 Spring Cloud Gateway、Eureka、Open Feign\n\n下面是 Linkis 的架构概要图. 更多详细架构文档请见 [Linkis-Doc/Architecture](https://linkis.apache.org/zh-CN/docs/latest/architecture/overview).\n![architecture](https://user-images.githubusercontent.com/7869972/148767383-f87e84ba-5baa-4125-8b6e-d0aa4f7d3a66.png)\n\n\n# 贡献\n\n我们非常欢迎和期待更多的贡献者参与共建 Linkis, 不论是代码、文档，或是其他能够帮助到社区的贡献形式。  \n代码和文档相关的贡献请参照[贡献指引](https://linkis.apache.org/zh-CN/community/how-to-contribute).\n\n# 联系我们\n\n- 对 Linkis 的任何问题和建议，可以提交 issue，以便跟踪处理和经验沉淀共享\n- 通过邮件方式 [dev@linkis.apache.org](mailto:dev@linkis.apache.org)\n- 可以扫描下面的二维码，加入我们的微信群，以获得更快速的响应\n\n<img src=\"https://linkis.apache.org/Images/wedatasphere_contact_01.png\" width=\"256\"/>\n\n\n# 谁在使用 Linkis\n\n我们创建了一个 issue [[Who is Using Linkis]](https://github.com/apache/linkis/issues/23) 以便用户反馈和记录谁在使用 Linkis.  \nLinkis 自 2019 年开源发布以来，累计已有 700 多家试验企业和 1000+沙盒试验用户，涉及金融、电信、制造、互联网等多个行业。\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "licenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-commons",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-computation-governance",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-dist",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-engineconn-plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-hadoop-hdfs-client-shade",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-orchestrator",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-public-enhancements",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-spring-cloud-services",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-web-next",
          "type": "tree",
          "content": null
        },
        {
          "name": "linkis-web",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 11.0244140625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.2.0\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"$(uname)\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        JAVA_HOME=\"$(/usr/libexec/java_home)\"; export JAVA_HOME\n      else\n        JAVA_HOME=\"/Library/Java/Home\"; export JAVA_HOME\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=$(java-config --jre-home)\n  fi\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=$(cygpath --unix \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=$(cygpath --path --unix \"$CLASSPATH\")\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$JAVA_HOME\" ] && [ -d \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"$(cd \"$JAVA_HOME\" || (echo \"cannot cd into $JAVA_HOME.\"; exit 1); pwd)\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"$(which javac)\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"$(expr \"\\\"$javaExecutable\\\"\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=$(which readlink)\n    if [ ! \"$(expr \"$readLink\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"$(dirname \"\\\"$javaExecutable\\\"\")\"\n        javaExecutable=\"$(cd \"\\\"$javaHome\\\"\" && pwd -P)/javac\"\n      else\n        javaExecutable=\"$(readlink -f \"\\\"$javaExecutable\\\"\")\"\n      fi\n      javaHome=\"$(dirname \"\\\"$javaExecutable\\\"\")\"\n      javaHome=$(expr \"$javaHome\" : '\\(.*\\)/bin')\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"$(\\unset -f command 2>/dev/null; \\command -v java)\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=$(cd \"$wdir/..\" || exit 1; pwd)\n    fi\n    # end of workaround\n  done\n  printf '%s' \"$(cd \"$basedir\" || exit 1; pwd)\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    # Remove \\r in case we run on Windows within Git Bash\n    # and check out the repository with auto CRLF management\n    # enabled. Otherwise, we may read lines that are delimited with\n    # \\r\\n and produce $'-Xarg\\r' rather than -Xarg due to word\n    # splitting rules.\n    tr -s '\\r\\n' ' ' < \"$1\"\n  fi\n}\n\nlog() {\n  if [ \"$MVNW_VERBOSE\" = true ]; then\n    printf '%s\\n' \"$1\"\n  fi\n}\n\nBASE_DIR=$(find_maven_basedir \"$(dirname \"$0\")\")\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\nMAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}; export MAVEN_PROJECTBASEDIR\nlog \"$MAVEN_PROJECTBASEDIR\"\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nwrapperJarPath=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\"\nif [ -r \"$wrapperJarPath\" ]; then\n    log \"Found $wrapperJarPath\"\nelse\n    log \"Couldn't find $wrapperJarPath, downloading it ...\"\n\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      wrapperUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    else\n      wrapperUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    fi\n    while IFS=\"=\" read -r key value; do\n      # Remove '\\r' from value to allow usage on windows as IFS does not consider '\\r' as a separator ( considers space, tab, new line ('\\n'), and custom '=' )\n      safeValue=$(echo \"$value\" | tr -d '\\r')\n      case \"$key\" in (wrapperUrl) wrapperUrl=\"$safeValue\"; break ;;\n      esac\n    done < \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\n    log \"Downloading from: $wrapperUrl\"\n\n    if $cygwin; then\n      wrapperJarPath=$(cygpath --path --windows \"$wrapperJarPath\")\n    fi\n\n    if command -v wget > /dev/null; then\n        log \"Found wget ... using wget\"\n        [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--quiet\"\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget $QUIET \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        else\n            wget $QUIET --http-user=\"$MVNW_USERNAME\" --http-password=\"$MVNW_PASSWORD\" \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        log \"Found curl ... using curl\"\n        [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--silent\"\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl $QUIET -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n        else\n            curl $QUIET --user \"$MVNW_USERNAME:$MVNW_PASSWORD\" -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n        fi\n    else\n        log \"Falling back to using Java to download\"\n        javaSource=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        javaClass=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.class\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaSource=$(cygpath --path --windows \"$javaSource\")\n          javaClass=$(cygpath --path --windows \"$javaClass\")\n        fi\n        if [ -e \"$javaSource\" ]; then\n            if [ ! -e \"$javaClass\" ]; then\n                log \" - Compiling MavenWrapperDownloader.java ...\"\n                (\"$JAVA_HOME/bin/javac\" \"$javaSource\")\n            fi\n            if [ -e \"$javaClass\" ]; then\n                log \" - Running MavenWrapperDownloader.java ...\"\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$wrapperUrl\" \"$wrapperJarPath\") || rm -f \"$wrapperJarPath\"\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\n# If specified, validate the SHA-256 sum of the Maven wrapper jar file\nwrapperSha256Sum=\"\"\nwhile IFS=\"=\" read -r key value; do\n  case \"$key\" in (wrapperSha256Sum) wrapperSha256Sum=$value; break ;;\n  esac\ndone < \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\nif [ -n \"$wrapperSha256Sum\" ]; then\n  wrapperSha256Result=false\n  if command -v sha256sum > /dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | sha256sum -c > /dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  elif command -v shasum > /dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | shasum -a 256 -c > /dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\"\n    echo \"Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties.\"\n    exit 1\n  fi\n  if [ $wrapperSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.\" >&2\n    echo \"Investigate or delete $wrapperJarPath to attempt a clean download.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified wrapperSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=$(cygpath --path --windows \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=$(cygpath --path --windows \"$CLASSPATH\")\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\")\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $*\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\n# shellcheck disable=SC2086 # safe args\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 7.4130859375,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Apache Maven Wrapper startup batch script, version 3.2.0\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset WRAPPER_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET WRAPPER_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET WRAPPER_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %WRAPPER_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM If specified, validate the SHA-256 sum of the Maven wrapper jar file\nSET WRAPPER_SHA_256_SUM=\"\"\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperSha256Sum\" SET WRAPPER_SHA_256_SUM=%%B\n)\nIF NOT %WRAPPER_SHA_256_SUM%==\"\" (\n    powershell -Command \"&{\"^\n       \"$hash = (Get-FileHash \\\"%WRAPPER_JAR%\\\" -Algorithm SHA256).Hash.ToLower();\"^\n       \"If('%WRAPPER_SHA_256_SUM%' -ne $hash){\"^\n       \"  Write-Output 'Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.';\"^\n       \"  Write-Output 'Investigate or delete %WRAPPER_JAR% to attempt a clean download.';\"^\n       \"  Write-Output 'If you updated your Maven version, you need to update the specified wrapperSha256Sum property.';\"^\n       \"  exit 1;\"^\n       \"}\"^\n       \"}\"\n    if ERRORLEVEL 1 goto error\n)\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% ^\n  %JVM_CONFIG_MAVEN_PROPS% ^\n  %MAVEN_OPTS% ^\n  %MAVEN_DEBUG_OPTS% ^\n  -classpath %WRAPPER_JAR% ^\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n\ncmd /C exit /B %ERROR_CODE%\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 67.9560546875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n  ~ contributor license agreements.  See the NOTICE file distributed with\n  ~ this work for additional information regarding copyright ownership.\n  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n  ~ (the \"License\"); you may not use this file except in compliance with\n  ~ the License.  You may obtain a copy of the License at\n  ~\n  ~   http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>org.apache</groupId>\n    <artifactId>apache</artifactId>\n    <version>23</version>\n  </parent>\n\n  <groupId>org.apache.linkis</groupId>\n  <artifactId>linkis</artifactId>\n  <version>${revision}</version>\n  <packaging>pom</packaging>\n  <name>Linkis Project Parent POM</name>\n  <description>Linkis helps easily connect to various back-end computation/storage engines</description>\n  <url>https://github.com/apache/linkis</url>\n\n  <organization>\n    <name>The Apache Software Foundation</name>\n    <url>http://www.apache.org/</url>\n  </organization>\n\n  <licenses>\n    <license>\n      <name>Apache 2.0 License</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>\n    </license>\n  </licenses>\n  <developers>\n    <developer>\n      <id>Apache Linkis</id>\n      <name>The Linkis Project Contributors</name>\n      <email>dev-subscribe@linkis.apache.org</email>\n      <url>http://linkis.apache.org/</url>\n    </developer>\n  </developers>\n\n  <mailingLists>\n    <mailingList>\n      <name>Development List</name>\n      <subscribe>dev-subscribe@linkis.apache.org</subscribe>\n      <unsubscribe>dev-unsubscribe@linkis.apache.org</unsubscribe>\n      <post>dev@linkis.apache.org</post>\n    </mailingList>\n    <mailingList>\n      <name>Commits List</name>\n      <subscribe>commits-subscribe@linkis.apache.org</subscribe>\n      <unsubscribe>commits-unsubscribe@linkis.apache.org</unsubscribe>\n      <post>commits@linkis.apache.org</post>\n    </mailingList>\n  </mailingLists>\n  <modules>\n    <module>linkis-commons</module>\n    <module>linkis-hadoop-hdfs-client-shade</module>\n    <module>linkis-spring-cloud-services</module>\n    <module>linkis-orchestrator</module>\n    <module>linkis-public-enhancements</module>\n    <module>linkis-computation-governance</module>\n    <module>linkis-engineconn-plugins</module>\n    <module>linkis-extensions</module>\n    <module>linkis-dist</module>\n  </modules>\n  <scm>\n    <connection>scm:git:https://github.com/apache/linkis.git</connection>\n    <developerConnection>scm:git:https://github.com/apache/linkis.git</developerConnection>\n    <tag>HEAD</tag>\n    <url>https://github.com/apache/linkis</url>\n  </scm>\n\n  <issueManagement>\n    <system>Github Issues</system>\n    <url>https://github.com/apache/linkis/issues</url>\n  </issueManagement>\n\n  <distributionManagement>\n    <repository>\n      <id>apache.releases.https</id>\n      <name>Apache Release Distribution Repository</name>\n      <url>https://repository.apache.org/service/local/staging/deploy/maven2</url>\n    </repository>\n    <snapshotRepository>\n      <id>apache.snapshots.https</id>\n      <name>Apache Development Snapshot Repository</name>\n      <url>https://repository.apache.org/content/repositories/snapshots</url>\n    </snapshotRepository>\n  </distributionManagement>\n  <properties>\n    <revision>1.7.0</revision>\n\n    <zookeeper.version>3.9.2</zookeeper.version>\n    <curator.version>4.2.0</curator.version>\n    <hadoop.version>3.3.4</hadoop.version>\n    <hadoop-hdfs-client.artifact>hadoop-hdfs-client</hadoop-hdfs-client.artifact>\n    <hbase.version>2.5.3</hbase.version>\n    <jruby.verison>9.3.4.0</jruby.verison>\n    <jcodings.version>1.0.56</jcodings.version>\n    <joni.version>2.1.42</joni.version>\n    <hive.version>3.1.3</hive.version>\n    <spark.version>3.2.1</spark.version>\n    <arrow.version>2.0.0</arrow.version>\n    <hadoop-hdfs-client-shade.version>2.7.2</hadoop-hdfs-client-shade.version>\n    <spark.hadoop.groupid>org.apache.hadoop</spark.hadoop.groupid>\n    <spark.hadoop-common.artifactId>hadoop-common</spark.hadoop-common.artifactId>\n    <spark.hadoop-hdfs.artifactId>hadoop-hdfs</spark.hadoop-hdfs.artifactId>\n    <spark.hadoop.version>${hadoop.version}</spark.hadoop.version>\n    <spark.hadoop.scope>provided</spark.hadoop.scope>\n\n    <storage.parquet.scope>provided</storage.parquet.scope>\n    <storage.orc.scope>provided</storage.orc.scope>\n\n    <flink.version>1.16.2</flink.version>\n    <libfb303.version>0.9.3</libfb303.version>\n    <minlog.version>1.3.0</minlog.version>\n    <io_file.version>1.0</io_file.version>\n    <jdbc.version>4</jdbc.version>\n    <trino.version>371</trino.version>\n    <impala.version>3.4.0.7.2.15.0-147</impala.version>\n    <openlookeng.version>1.5.0</openlookeng.version>\n    <pipeline.version>1</pipeline.version>\n    <presto.version>0.234</presto.version>\n    <nebula.version>3.0.0</nebula.version>\n    <doris.version>1.2.6</doris.version>\n    <repl.version>1</repl.version>\n    <python.version>python2</python.version>\n    <seatunnel.version>2.1.2</seatunnel.version>\n    <shell.version>1</shell.version>\n    <sqoop.version>1.4.6</sqoop.version>\n    <elasticsearch.version>7.6.2</elasticsearch.version>\n\n    <!-- This is the same as the kubernetes-client version referenced in spark3.2.1 -->\n    <kubernetes-client.version>5.4.1</kubernetes-client.version>\n\n    <!-- marshalling -->\n    <gson.version>2.8.9</gson.version>\n    <jackson-bom.version>2.13.4.20221013</jackson-bom.version>\n    <jsonpath.version>2.9.0</jsonpath.version>\n    <jettison.version>1.5.4</jettison.version>\n    <xstream.core.version>1.4.20</xstream.core.version>\n    <woodstox.version>6.4.0</woodstox.version>\n    <snakeyaml.version>1.33</snakeyaml.version>\n\n    <protobuf.version>3.25.5</protobuf.version>\n\n    <parquet-avro.version>1.10.0</parquet-avro.version>\n    <orc-core.version>1.5.8</orc-core.version>\n\n    <jersey.version>1.19.4</jersey.version>\n    <jersey.servlet.version>2.23.1</jersey.servlet.version>\n    <netty.version>4.1.86.Final</netty.version>\n    <jetty.version>9.4.56.v20240826</jetty.version>\n    <httpclient.version>4.5.13</httpclient.version>\n    <httpmime.version>${httpclient.version}</httpmime.version>\n\n    <knife4j.version>3.0.3</knife4j.version>\n    <springfox.version>3.0.0</springfox.version>\n    <poi.version>5.3.0</poi.version>\n    <reflections.version>0.9.12</reflections.version>\n\n    <!-- dbs -->\n    <jedis.version>3.9.0</jedis.version>\n    <mybatis-plus.version>3.4.3.4</mybatis-plus.version>\n    <mysql.connector.version>8.0.28</mysql.connector.version>\n    <mysql.connector.scope>test</mysql.connector.scope>\n    <postgresql.connector.version>42.3.9</postgresql.connector.version>\n    <druid.version>1.2.23</druid.version>\n    <mongodb.driver.version>3.12.8</mongodb.driver.version>\n\n    <!-- utils -->\n    <guava.version>32.0.0-jre</guava.version>\n    <commons-collections.version>3.2.2</commons-collections.version>\n    <commons-lang3.version>3.12.0</commons-lang3.version>\n    <commons-logging.version>1.2</commons-logging.version>\n    <commons-text.version>1.10.0</commons-text.version>\n    <commons-math3.version>3.6.1</commons-math3.version>\n    <commons-io.version>2.17.0</commons-io.version>\n    <commons-beanutils.version>1.9.4</commons-beanutils.version>\n    <commons-compress.version>1.26.1</commons-compress.version>\n    <commons-configuration.version>1.10</commons-configuration.version>\n    <commons-exec.version>1.3</commons-exec.version>\n    <commons-fileupload.version>1.5</commons-fileupload.version>\n    <commons-net.version>3.9.0</commons-net.version>\n    <commons-cli.version>1.3.1</commons-cli.version>\n    <jline.version>3.9.0</jline.version>\n\n    <bouncycastle.version>1.78.1</bouncycastle.version>\n\n    <!-- java byte code modification -->\n    <javassist.version>3.27.0-GA</javassist.version>\n    <asm-bom.version>9.3</asm-bom.version>\n    <cglib.version>3.3.0</cglib.version>\n\n    <!-- log -->\n    <slf4j.version>1.7.30</slf4j.version>\n    <log4j2.version>2.17.2</log4j2.version>\n\n    <!-- jakarta -->\n    <annotation-api.version>1.3.5</annotation-api.version>\n\n    <!-- test -->\n    <junit5.version>5.7.2</junit5.version>\n    <mockito-bom.version>4.3.1</mockito-bom.version>\n    <assertj.version>3.17.2</assertj.version>\n    <h2.version>2.2.220</h2.version>\n\n    <!-- spring -->\n    <spring-framework.version>5.3.27</spring-framework.version>\n    <spring-security.version>5.7.8</spring-security.version>\n    <spring.boot.version>2.7.11</spring.boot.version>\n    <spring-netflix.version>3.1.7</spring-netflix.version>\n    <spring-cloud.version>2021.0.8</spring-cloud.version>\n    <spring-cloud-alibaba.version>2021.0.6.0</spring-cloud-alibaba.version>\n    <spring-cloud-common.version>3.1.7</spring-cloud-common.version>\n\n    <!-- platform encoding override -->\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\n    <!-- dev env -->\n    <java.version>1.8</java.version>\n    <maven.version>3.5.0</maven.version>\n    <scala.version>2.12.17</scala.version>\n    <scala.binary.version>2.12</scala.binary.version>\n    <ant.version>1.10.12</ant.version>\n\n    <!-- maven plugin versions -->\n    <maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>\n    <maven-site-plugin.version>3.12.1</maven-site-plugin.version>\n    <maven-assembly-plugin.version>3.2.0</maven-assembly-plugin.version>\n    <assembly.package.rootpath>${basedir}</assembly.package.rootpath>\n    <maven-enforcer-plugin.version>3.0.0</maven-enforcer-plugin.version>\n    <maven-javadoc-plugin.version>3.0.1</maven-javadoc-plugin.version>\n    <maven-gpg-plugin.version>1.5</maven-gpg-plugin.version>\n    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>\n    <maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>\n    <apache-rat-plugin.version>0.13</apache-rat-plugin.version>\n    <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>\n    <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>\n    <flatten-maven-plugin.version>1.3.0</flatten-maven-plugin.version>\n    <maven.compiler.source>${java.version}</maven.compiler.source>\n    <maven.compiler.target>${java.version}</maven.compiler.target>\n    <maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>\n    <maven-shade-plugin.version>3.3.0</maven-shade-plugin.version>\n    <maven-helper-plugin.version>3.2.0</maven-helper-plugin.version>\n    <scala-maven-plugin.version>4.7.1</scala-maven-plugin.version>\n    <spotless-maven-plugin.version>2.24.1</spotless-maven-plugin.version>\n    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>\n    <jacoco.skip>false</jacoco.skip>\n\n    <!-- for JDK-17 test-->\n    <extraJavaTestArgs>-XX:+IgnoreUnrecognizedVMOptions\n      --add-opens=java.base/java.lang=ALL-UNNAMED\n      --add-opens=java.base/java.lang.invoke=ALL-UNNAMED\n      --add-opens=java.base/java.lang.reflect=ALL-UNNAMED\n      --add-opens=java.base/java.io=ALL-UNNAMED\n      --add-opens=java.base/java.net=ALL-UNNAMED\n      --add-opens=java.base/java.nio=ALL-UNNAMED\n      --add-opens=java.base/java.util=ALL-UNNAMED\n      --add-opens=java.base/java.util.concurrent=ALL-UNNAMED\n      --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED\n      --add-opens=java.base/sun.nio.ch=ALL-UNNAMED\n      --add-opens=java.base/sun.nio.cs=ALL-UNNAMED\n      --add-opens=java.base/sun.security.action=ALL-UNNAMED\n      --add-opens=java.base/sun.util.calendar=ALL-UNNAMED\n      -Djdk.reflect.useDirectMethodHandle=false</extraJavaTestArgs>\n\n  </properties>\n\n  <dependencyManagement>\n    <dependencies>\n      <!-- linkis -->\n      <dependency>\n        <groupId>org.apache.linkis</groupId>\n        <artifactId>linkis-module</artifactId>\n        <version>${project.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.hibernate.validator</groupId>\n            <artifactId>hibernate-validator</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.linkis</groupId>\n        <artifactId>linkis-common</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.linkis</groupId>\n        <artifactId>linkis-mybatis</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n\n      <!-- scala version -->\n      <dependency>\n        <groupId>org.scala-lang</groupId>\n        <artifactId>scala-library</artifactId>\n        <version>${scala.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.scala-lang</groupId>\n        <artifactId>scala-compiler</artifactId>\n        <version>${scala.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.scala-lang</groupId>\n        <artifactId>scala-reflect</artifactId>\n        <version>${scala.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.scala-lang</groupId>\n        <artifactId>scalap</artifactId>\n        <version>${scala.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.logging.log4j</groupId>\n        <artifactId>log4j-bom</artifactId>\n        <version>${log4j2.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-api</artifactId>\n        <version>${slf4j.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.ant</groupId>\n        <artifactId>ant</artifactId>\n        <version>${ant.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.ant</groupId>\n        <artifactId>ant-launcher</artifactId>\n        <version>${ant.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.reflections</groupId>\n        <artifactId>reflections</artifactId>\n        <version>${reflections.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>redis.clients</groupId>\n        <artifactId>jedis</artifactId>\n        <version>${jedis.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>mysql</groupId>\n        <artifactId>mysql-connector-java</artifactId>\n        <version>${mysql.connector.version}</version>\n        <scope>${mysql.connector.scope}</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.guava</groupId>\n        <artifactId>guava</artifactId>\n        <version>${guava.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-collections</groupId>\n        <artifactId>commons-collections</artifactId>\n        <version>${commons-collections.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-lang</groupId>\n        <artifactId>commons-lang</artifactId>\n        <version>2.6</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-lang3</artifactId>\n        <version>${commons-lang3.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-text</artifactId>\n        <version>${commons-text.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-math3</artifactId>\n        <version>${commons-math3.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-io</groupId>\n        <artifactId>commons-io</artifactId>\n        <version>${commons-io.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-beanutils</groupId>\n        <artifactId>commons-beanutils</artifactId>\n        <version>${commons-beanutils.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-compress</artifactId>\n        <version>${commons-compress.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-configuration</groupId>\n        <artifactId>commons-configuration</artifactId>\n        <version>${commons-configuration.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-exec</artifactId>\n        <version>${commons-exec.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-fileupload</groupId>\n        <artifactId>commons-fileupload</artifactId>\n        <version>${commons-fileupload.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-net</groupId>\n        <artifactId>commons-net</artifactId>\n        <version>${commons-net.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-logging</groupId>\n        <artifactId>commons-logging</artifactId>\n        <version>${commons-logging.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-cli</groupId>\n        <artifactId>commons-cli</artifactId>\n        <version>${commons-cli.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.jline</groupId>\n        <artifactId>jline</artifactId>\n        <version>${jline.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>jline</groupId>\n        <artifactId>jline</artifactId>\n        <version>2.14.6</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.junit</groupId>\n        <artifactId>junit-bom</artifactId>\n        <version>${junit5.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>io.netty</groupId>\n        <artifactId>netty-bom</artifactId>\n        <version>${netty.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <!-- json -->\n      <dependency>\n        <groupId>com.jayway.jsonpath</groupId>\n        <artifactId>json-path</artifactId>\n        <version>${jsonpath.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.code.gson</groupId>\n        <artifactId>gson</artifactId>\n        <version>${gson.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.fasterxml.jackson</groupId>\n        <artifactId>jackson-bom</artifactId>\n        <version>${jackson-bom.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.codehaus.jackson</groupId>\n        <artifactId>jackson-core-asl</artifactId>\n        <version>1.9.13</version>\n      </dependency>\n      <dependency>\n        <groupId>org.codehaus.jackson</groupId>\n        <artifactId>jackson-mapper-asl</artifactId>\n        <version>1.9.13</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.thoughtworks.xstream</groupId>\n        <artifactId>xstream</artifactId>\n        <version>${xstream.core.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>xml-apis</groupId>\n        <artifactId>xml-apis</artifactId>\n        <version>1.4.01</version>\n      </dependency>\n      <dependency>\n        <groupId>com.fasterxml.woodstox</groupId>\n        <artifactId>woodstox-core</artifactId>\n        <version>${woodstox.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.codehaus.jettison</groupId>\n        <artifactId>jettison</artifactId>\n        <version>${jettison.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.yaml</groupId>\n        <artifactId>snakeyaml</artifactId>\n        <version>${snakeyaml.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.google.protobuf</groupId>\n        <artifactId>protobuf-java</artifactId>\n        <version>${protobuf.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.sun.jersey</groupId>\n        <artifactId>jersey-client</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.sun.jersey</groupId>\n        <artifactId>jersey-server</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.sun.jersey</groupId>\n        <artifactId>jersey-servlet</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.sun.jersey</groupId>\n        <artifactId>jersey-core</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.sun.jersey</groupId>\n        <artifactId>jersey-json</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.sun.jersey.contribs</groupId>\n        <artifactId>jersey-guice</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.sun.jersey.contribs</groupId>\n        <artifactId>jersey-apache-client4</artifactId>\n        <version>${jersey.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.glassfish.jersey</groupId>\n        <artifactId>jersey-bom</artifactId>\n        <version>${jersey.servlet.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>org.eclipse.jetty</groupId>\n        <artifactId>jetty-bom</artifactId>\n        <version>${jetty.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.curator</groupId>\n        <artifactId>curator-recipes</artifactId>\n        <version>${curator.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.curator</groupId>\n        <artifactId>curator-client</artifactId>\n        <version>${curator.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.curator</groupId>\n        <artifactId>curator-framework</artifactId>\n        <version>${curator.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.hbase</groupId>\n        <artifactId>hbase-common</artifactId>\n        <version>${hbase.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hbase</groupId>\n        <artifactId>hbase-hadoop2-compat</artifactId>\n        <version>${hbase.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hbase</groupId>\n        <artifactId>hbase-hadoop-compat</artifactId>\n        <version>${hbase.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hbase</groupId>\n        <artifactId>hbase-server</artifactId>\n        <version>${hbase.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.apache.hadoop</groupId>\n            <artifactId>hadoop-hdfs</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hbase</groupId>\n        <artifactId>hbase-mapreduce</artifactId>\n        <version>${hbase.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.apache.hadoop</groupId>\n            <artifactId>hadoop-hdfs</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hbase</groupId>\n        <artifactId>hbase-protocol</artifactId>\n        <version>${hbase.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hbase</groupId>\n        <artifactId>hbase-client</artifactId>\n        <version>${hbase.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.hive</groupId>\n        <artifactId>hive-common</artifactId>\n        <version>${hive.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>jline</groupId>\n            <artifactId>jline</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hive</groupId>\n        <artifactId>hive-service</artifactId>\n        <version>${hive.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.apache.curator</groupId>\n            <artifactId>apache-curator</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.apache.hbase</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hive</groupId>\n        <artifactId>hive-jdbc</artifactId>\n        <version>${hive.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.apache.hive</groupId>\n            <artifactId>hive-shims</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.apache.hadoop</groupId>\n            <artifactId>hadoop-hdfs</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.apache.hbase</groupId>\n            <artifactId>hbase-client</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.eclipse.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.eclipse.jetty.aggregate</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.eclipse.jetty.orbit</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.mortbay.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>tomcat</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>log4j</groupId>\n            <artifactId>apache-log4j-extras</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>javax.servlet</groupId>\n            <artifactId>servlet-api</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>jdk.tools</groupId>\n            <artifactId>jdk.tools</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-distcp</artifactId>\n        <version>${hadoop.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-common</artifactId>\n        <version>${hadoop.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n          </exclusion>\n          <!-- for hadoop 3.3.3 -->\n          <exclusion>\n            <groupId>ch.qos.reload4j</groupId>\n            <artifactId>reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>javax.ws.rs</groupId>\n            <artifactId>jsr311-api</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>net.java.dev.jets3t</groupId>\n            <artifactId>jets3t</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.jcraft</groupId>\n            <artifactId>jsch</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.google.code.findbugs</groupId>\n            <artifactId>jsr305</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>xmlenc</groupId>\n            <artifactId>xmlenc</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.apache.avro</groupId>\n            <artifactId>avro</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.apache.hadoop</groupId>\n            <artifactId>hadoop-auth</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>javax.servlet</groupId>\n            <artifactId>servlet-api</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.mortbay.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.eclipse.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.codehaus.jackson</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-compress</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>commons-beanutils</groupId>\n            <artifactId>commons-beanutils</artifactId>\n          </exclusion>\n          <exclusion>\n            <!-- BeanUtils >= 1.9.0 no longer splits out -core; exclude it -->\n            <groupId>commons-beanutils</groupId>\n            <artifactId>commons-beanutils-core</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-client</artifactId>\n        <version>${hadoop.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n          </exclusion>\n          <!-- for hadoop 3.3.3 -->\n          <exclusion>\n            <groupId>ch.qos.reload4j</groupId>\n            <artifactId>reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.fusesource.leveldbjni</groupId>\n            <artifactId>leveldbjni-all</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>asm</groupId>\n            <artifactId>asm</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.codehaus.jackson</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.ow2.asm</groupId>\n            <artifactId>asm</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.jboss.netty</groupId>\n            <artifactId>netty</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty</artifactId>\n          </exclusion>\n          <exclusion>\n            <!-- BeanUtils >= 1.9.0 no longer splits out -core; exclude it -->\n            <groupId>commons-beanutils</groupId>\n            <artifactId>commons-beanutils-core</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>commons-logging</groupId>\n            <artifactId>commons-logging</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-all</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.mortbay.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.eclipse.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>javax.servlet</groupId>\n            <artifactId>servlet-api</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey.jersey-test-framework</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey.contribs</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>net.java.dev.jets3t</groupId>\n            <artifactId>jets3t</artifactId>\n          </exclusion>\n          <!-- Hadoop-3.2 -->\n          <exclusion>\n            <groupId>javax.ws.rs</groupId>\n            <artifactId>jsr311-api</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>${hadoop-hdfs-client.artifact}</artifactId>\n        <version>${hadoop.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n          </exclusion>\n          <!-- for hadoop 3.3.3 -->\n          <exclusion>\n            <groupId>ch.qos.reload4j</groupId>\n            <artifactId>reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>netty</groupId>\n            <artifactId>io.netty</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>javax.servlet</groupId>\n            <artifactId>servlet-api</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.google.guava</groupId>\n            <artifactId>guava</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.codehaus.jackson</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.eclipse.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.mortbay.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-auth</artifactId>\n        <version>${hadoop.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n          </exclusion>\n          <!-- for hadoop 3.3.3 -->\n          <exclusion>\n            <groupId>ch.qos.reload4j</groupId>\n            <artifactId>reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.apache.httpcomponents</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.eclipse.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-mapreduce-client-core</artifactId>\n        <version>${hadoop.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n          </exclusion>\n          <!-- for hadoop 3.3.3 -->\n          <exclusion>\n            <groupId>ch.qos.reload4j</groupId>\n            <artifactId>reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-reload4j</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-yarn-api</artifactId>\n        <version>${hadoop.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>javax.servlet</groupId>\n            <artifactId>servlet-api</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>asm</groupId>\n            <artifactId>asm</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.ow2.asm</groupId>\n            <artifactId>asm</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.jboss.netty</groupId>\n            <artifactId>netty</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>commons-logging</groupId>\n            <artifactId>commons-logging</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey.jersey-test-framework</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey.contribs</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>jdk.tools</groupId>\n            <artifactId>jdk.tools</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-yarn-registry</artifactId>\n        <version>${hadoop.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-yarn-common</artifactId>\n        <version>${hadoop.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>ch.qos.reload4j</groupId>\n            <artifactId>reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>asm</groupId>\n            <artifactId>asm</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.ow2.asm</groupId>\n            <artifactId>asm</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.jboss.netty</groupId>\n            <artifactId>netty</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>javax.servlet</groupId>\n            <artifactId>servlet-api</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>commons-logging</groupId>\n            <artifactId>commons-logging</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey.jersey-test-framework</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey.contribs</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.mortbay.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.hadoop</groupId>\n        <artifactId>hadoop-yarn-client</artifactId>\n        <version>${hadoop.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n          </exclusion>\n          <!-- for hadoop 3.3.3 -->\n          <exclusion>\n            <groupId>ch.qos.reload4j</groupId>\n            <artifactId>reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>javax.servlet</groupId>\n            <artifactId>servlet-api</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey.contribs</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.mortbay.jetty</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <dependency>\n        <groupId>org.apache.zookeeper</groupId>\n        <artifactId>zookeeper</artifactId>\n        <version>${zookeeper.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>log4j</groupId>\n            <artifactId>log4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-core</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>ch.qos.logback</groupId>\n            <artifactId>logback-classic</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-log4j12</artifactId>\n          </exclusion>\n          <!-- for hadoop 3.3.3 -->\n          <exclusion>\n            <groupId>ch.qos.reload4j</groupId>\n            <artifactId>reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-reload4j</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>jline</groupId>\n            <artifactId>jline</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty-handler</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.netty</groupId>\n            <artifactId>netty-transport-native-epoll</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.github.spotbugs</groupId>\n            <artifactId>spotbugs-annotations</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n\n      <!-- crypto -->\n      <dependency>\n        <groupId>org.bouncycastle</groupId>\n        <artifactId>bcprov-jdk18on</artifactId>\n        <version>${bouncycastle.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.bouncycastle</groupId>\n        <artifactId>bcpkix-jdk18on</artifactId>\n        <version>${bouncycastle.version}</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.javassist</groupId>\n        <artifactId>javassist</artifactId>\n        <version>${javassist.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.ow2.asm</groupId>\n        <artifactId>asm-bom</artifactId>\n        <version>${asm-bom.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>cglib</groupId>\n        <artifactId>cglib</artifactId>\n        <version>${cglib.version}</version>\n      </dependency>\n\n      <!-- jakarta -->\n      <dependency>\n        <groupId>jakarta.annotation</groupId>\n        <artifactId>jakarta.annotation-api</artifactId>\n        <version>${annotation-api.version}</version>\n      </dependency>\n\n      <!-- test -->\n      <dependency>\n        <groupId>org.mockito</groupId>\n        <artifactId>mockito-bom</artifactId>\n        <version>${mockito-bom.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n\n      <!--    batch to create test data-->\n      <dependency>\n        <groupId>org.instancio</groupId>\n        <artifactId>instancio-junit</artifactId>\n        <version>2.16.1</version>\n        <scope>test</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-core</artifactId>\n        <version>${assertj.version}</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- spring -->\n      <dependency>\n        <groupId>org.springframework</groupId>\n        <artifactId>spring-framework-bom</artifactId>\n        <version>${spring-framework.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework.security</groupId>\n        <artifactId>spring-security-bom</artifactId>\n        <version>${spring-security.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter</artifactId>\n        <version>${spring.boot.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-logging</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-web</artifactId>\n        <version>${spring.boot.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-tomcat</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-dependencies</artifactId>\n        <version>${spring.boot.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>\n        <version>${spring-netflix.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>com.sun.jersey</groupId>\n            <artifactId>*</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>com.sun.jersey.contribs</groupId>\n            <artifactId>jersey-apache-client4</artifactId>\n          </exclusion>\n          <exclusion>\n            <groupId>io.github.x-stream</groupId>\n            <artifactId>mxparser</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>org.springframework.cloud</groupId>\n        <artifactId>spring-cloud-dependencies</artifactId>\n        <version>${spring-cloud.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>com.baomidou</groupId>\n        <artifactId>mybatis-plus-boot-starter</artifactId>\n        <version>${mybatis-plus.version}</version>\n        <exclusions>\n          <exclusion>\n            <groupId>com.zaxxer</groupId>\n            <artifactId>HikariCP</artifactId>\n          </exclusion>\n        </exclusions>\n      </dependency>\n      <dependency>\n        <groupId>com.alibaba.cloud</groupId>\n        <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>\n        <version>${spring-cloud-alibaba.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <!-- Test -->\n    <dependency>\n      <groupId>org.junit.jupiter</groupId>\n      <artifactId>junit-jupiter</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.platform</groupId>\n      <artifactId>junit-platform-launcher</artifactId>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>org.mockito</groupId>\n      <artifactId>mockito-inline</artifactId>\n      <scope>test</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>org.springframework.boot</groupId>\n      <artifactId>spring-boot-starter-test</artifactId>\n      <scope>test</scope>\n      <exclusions>\n        <exclusion>\n          <!-- The module is compatible with junit4 and junit 5, this example uses junit5 directly-->\n          <groupId>org.junit.vintage</groupId>\n          <artifactId>junit-vintage-engine</artifactId>\n        </exclusion>\n        <exclusion>\n          <groupId>org.springframework.boot</groupId>\n          <artifactId>spring-boot-starter-logging</artifactId>\n        </exclusion>\n      </exclusions>\n    </dependency>\n    <dependency>\n      <groupId>com.h2database</groupId>\n      <artifactId>h2</artifactId>\n      <version>${h2.version}</version>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.zaxxer</groupId>\n      <artifactId>HikariCP</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.springframework</groupId>\n      <artifactId>spring-test</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.postgresql</groupId>\n      <artifactId>postgresql</artifactId>\n      <version>${postgresql.connector.version}</version>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-deploy-plugin</artifactId>\n          <version>${maven-deploy-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-enforcer-plugin</artifactId>\n          <version>${maven-enforcer-plugin.version}</version>\n          <executions>\n            <execution>\n              <id>enforce-versions</id>\n              <goals>\n                <goal>enforce</goal>\n              </goals>\n              <configuration>\n                <rules>\n                  <requireMavenVersion>\n                    <version>${maven.version}</version>\n                  </requireMavenVersion>\n                  <requireJavaVersion>\n                    <version>${java.version}</version>\n                  </requireJavaVersion>\n                  <bannedDependencies>\n                    <excludes>\n                      <exclude>org.jboss.netty</exclude>\n                    </excludes>\n                    <searchTransitive>true</searchTransitive>\n                  </bannedDependencies>\n                </rules>\n              </configuration>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>${maven-compiler-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>flatten-maven-plugin</artifactId>\n          <version>${flatten-maven-plugin.version}</version>\n          <configuration>\n            <updatePomFile>true</updatePomFile>\n            <flattenMode>resolveCiFriendliesOnly</flattenMode>\n          </configuration>\n          <executions>\n            <execution>\n              <id>flatten</id>\n              <goals>\n                <goal>flatten</goal>\n              </goals>\n              <phase>process-resources</phase>\n            </execution>\n            <execution>\n              <id>flatten.clean</id>\n              <goals>\n                <goal>clean</goal>\n              </goals>\n              <phase>clean</phase>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-site-plugin</artifactId>\n          <version>${maven-site-plugin.version}</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-source-plugin</artifactId>\n          <version>${maven-source-plugin.version}</version>\n          <configuration>\n            <attach>true</attach>\n          </configuration>\n          <executions>\n            <execution>\n              <id>create-source-jar</id>\n              <goals>\n                <goal>jar-no-fork</goal>\n                <goal>test-jar-no-fork</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <groupId>net.alchim31.maven</groupId>\n          <artifactId>scala-maven-plugin</artifactId>\n          <version>${scala-maven-plugin.version}</version>\n          <configuration>\n            <recompileMode>incremental</recompileMode>\n            <args>\n              <arg>-unchecked</arg>\n              <arg>-deprecation</arg>\n              <arg>-feature</arg>\n              <arg>-explaintypes</arg>\n              <arg>-target:jvm-${java.version}</arg>\n            </args>\n          </configuration>\n          <executions>\n            <execution>\n              <id>eclipse-add-source</id>\n              <goals>\n                <goal>add-source</goal>\n              </goals>\n            </execution>\n            <execution>\n              <id>scala-compile-first</id>\n              <goals>\n                <goal>compile</goal>\n              </goals>\n              <phase>process-resources</phase>\n            </execution>\n            <execution>\n              <id>scala-test-compile-first</id>\n              <goals>\n                <goal>testCompile</goal>\n              </goals>\n              <phase>process-test-resources</phase>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-jar-plugin</artifactId>\n          <version>${maven-jar-plugin.version}</version>\n        </plugin>\n\n        <!--mvn apache-rat:check-->\n        <plugin>\n          <groupId>org.apache.rat</groupId>\n          <artifactId>apache-rat-plugin</artifactId>\n          <version>${apache-rat-plugin.version}</version>\n          <configuration>\n            <excludes>\n              <exclude>**/*.versionsBackup</exclude>\n              <exclude>**/.idea/</exclude>\n              <exclude>**/*.iml</exclude>\n              <exclude>**/*.txt</exclude>\n              <exclude>**/*.json</exclude>\n              <exclude>linkis-web/.editorconfig</exclude>\n              <exclude>linkis-web/.env</exclude>\n              <exclude>linkis-web/.eslintignore</exclude>\n              <exclude>linkis-web/.jshintrc</exclude>\n\n              <exclude>linkis-web/public/favicon.ico</exclude>\n              <exclude>linkis-web/dist/**</exclude>\n              <exclude>linkis-web/node_modules/**</exclude>\n              <exclude>linkis-web/apache-linkis-*-web-bin.tar.gz</exclude>\n\n              <exclude>**/*.md</exclude>\n              <exclude>.git/</exclude>\n              <exclude>.gitignore</exclude>\n              <exclude>**/.settings/*</exclude>\n              <exclude>**/.classpath</exclude>\n              <exclude>**/.project</exclude>\n              <exclude>**/target/**</exclude>\n              <exclude>**/out/**</exclude>\n              <exclude>**/*.log</exclude>\n              <exclude>**/logs/**</exclude>\n              <exclude>CONTRIBUTING.md</exclude>\n              <exclude>CONTRIBUTING_CN.md</exclude>\n              <exclude>README.md</exclude>\n              <exclude>.gitmodules</exclude>\n              <exclude>**/META-INF/**</exclude>\n              <exclude>.github/**</exclude>\n              <exclude>compiler/**</exclude>\n              <exclude>**/generated/**</exclude>\n              <exclude>**/scritpis-test.sql</exclude>\n              <exclude>**/**.dolphin</exclude>\n\n            </excludes>\n          </configuration>\n          <executions>\n            <execution>\n              <id>rat-validate</id>\n              <goals>\n                <goal>check</goal>\n              </goals>\n              <phase>validate</phase>\n            </execution>\n          </executions>\n        </plugin>\n\n        <!--mvn license:add-third-party-->\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>license-maven-plugin</artifactId>\n          <version>2.0.0</version>\n          <executions>\n            <execution>\n              <id>license-check</id>\n              <configuration>\n                <!--<includedScopes>compile</includedScopes>-->\n                <licenseMerges>\n                  <licenseMerge>Apache License, Version 2.0|ASF 2.0|Apache 2.0 License|Apache 2.0|Apache 2|Apache License 2.0|Apache License Version 2.0|Apache License Version 2|Apache License v2.0|Apache License|Apache Public License 2.0|Apache Software License - Version 2.0|Apache v2|Apache-2.0|Apache_2_0_license\n                                        Apache|The Apache License, Version 2.0|The Apache Software License, Version 2.0|</licenseMerge>\n                  <licenseMerge>MIT License|The MIT License</licenseMerge>\n                  <licenseMerge>The 3-Clause BSD License|BSD-3-Clause|BSD 3-Clause|New BSD License|BSD 3-Clause License|BSD|3-Clause BSD License|New BSD license|The New BSD License|The BSD 3-Clause License</licenseMerge>\n                  <licenseMerge>The 2-Clause BSD License|BSD-2-Clause|The BSD License|BSD License</licenseMerge>\n                  <licenseMerge>Mozilla Public License Version 1.1|MPL 1.1</licenseMerge>\n                  <licenseMerge>CDDL_1.0|CDDL 1.0</licenseMerge>\n                  <licenseMerge>CDDL_1.0|COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) Version 1.0</licenseMerge>\n                  <licenseMerge>CDDL_1.0|Common_Development_and_Distribution_License_(CDDL)_v1_0</licenseMerge>\n                  <licenseMerge>CDDL_1.0|Common Development and Distribution License (CDDL) v1.0</licenseMerge>\n                  <licenseMerge>CDDL_1.0|CDDL 1.0 license</licenseMerge>\n                  <licenseMerge>CDDL_1.0|CDDL 2</licenseMerge>\n                  <licenseMerge>Eclipse Public License-1|Common_Public_License_Version_1_0</licenseMerge>\n                  <licenseMerge>Eclipse Public License-1|Eclipse_Public_License_-_Version_1_0</licenseMerge>\n                  <licenseMerge>Eclipse Public License-1|EPL 1.0 license</licenseMerge>\n\n                  <licenseMerge>GPL|GNU General Public Library</licenseMerge>\n                </licenseMerges>\n              </configuration>\n            </execution>\n          </executions>\n        </plugin>\n\n        <plugin>\n          <groupId>org.scalastyle</groupId>\n          <artifactId>scalastyle-maven-plugin</artifactId>\n          <version>1.0.0</version>\n          <configuration>\n            <verbose>false</verbose>\n            <failOnViolation>true</failOnViolation>\n            <includeTestSourceDirectory>false</includeTestSourceDirectory>\n            <failOnWarning>false</failOnWarning>\n            <sourceDirectory>${basedir}/src/main/scala</sourceDirectory>\n            <testSourceDirectory>${basedir}/src/test/scala</testSourceDirectory>\n            <configLocation>scalastyle-config.xml</configLocation>\n            <outputFile>${basedir}/target/scalastyle-output.xml</outputFile>\n            <inputEncoding>${project.build.sourceEncoding}</inputEncoding>\n            <outputEncoding>${project.reporting.outputEncoding}</outputEncoding>\n          </configuration>\n          <executions>\n            <execution>\n              <goals>\n                <goal>check</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <groupId>com.diffplug.spotless</groupId>\n          <artifactId>spotless-maven-plugin</artifactId>\n          <version>${spotless-maven-plugin.version}</version>\n          <configuration>\n            <pom>\n              <sortPom>\n                <expandEmptyElements>false</expandEmptyElements>\n              </sortPom>\n            </pom>\n            <java>\n              <googleJavaFormat>\n                <version>1.7</version>\n                <style>GOOGLE</style>\n              </googleJavaFormat>\n\n              <!-- \\# refers to the static imports -->\n              <importOrder>\n                <order>org.apache.linkis,org.apache,org.springframework,javax,java,scala,,\\#</order>\n              </importOrder>\n\n              <removeUnusedImports/>\n\n              <licenseHeader>\n                <file>${maven.multiModuleProjectDirectory}/tool/license-header</file>\n                <delimiter>package</delimiter>\n              </licenseHeader>\n            </java>\n            <scala>\n              <scalafmt>\n                <file>${maven.multiModuleProjectDirectory}/.scalafmt.conf</file>\n              </scalafmt>\n              <licenseHeader>\n                <file>${maven.multiModuleProjectDirectory}/tool/license-header</file>\n                <delimiter>package</delimiter>\n              </licenseHeader>\n            </scala>\n          </configuration>\n          <executions>\n            <execution>\n              <id>spotless-apply</id>\n              <goals>\n                <goal>apply</goal>\n              </goals>\n              <phase>validate</phase>\n            </execution>\n          </executions>\n        </plugin>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-surefire-plugin</artifactId>\n          <version>${maven-surefire-plugin.version}</version>\n          <configuration>\n            <forkCount>3</forkCount>\n          </configuration>\n        </plugin>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-assembly-plugin</artifactId>\n          <version>${maven-assembly-plugin.version}</version>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n    <plugins>\n      <plugin>\n        <groupId>org.jacoco</groupId>\n        <artifactId>jacoco-maven-plugin</artifactId>\n        <version>${jacoco-maven-plugin.version}</version>\n        <executions>\n          <execution>\n            <goals>\n              <goal>prepare-agent</goal>\n            </goals>\n          </execution>\n          <execution>\n            <id>report</id>\n            <goals>\n              <goal>report</goal>\n            </goals>\n            <phase>test</phase>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>com.diffplug.spotless</groupId>\n        <artifactId>spotless-maven-plugin</artifactId>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>flatten-maven-plugin</artifactId>\n      </plugin>\n    </plugins>\n  </build>\n\n  <profiles>\n    <!-- hadoop version: mvn validate -Phadoop-2.7  -->\n    <profile>\n      <id>hadoop-2.7</id>\n      <properties>\n        <hadoop.version>2.7.2</hadoop.version>\n        <curator.version>2.7.1</curator.version>\n        <hadoop-hdfs-client.artifact>hadoop-hdfs</hadoop-hdfs-client.artifact>\n      </properties>\n    </profile>\n    <!-- spark2.4 use hadoop2.7.2 by default mvn validate -Pspark-2.4  -->\n    <profile>\n      <id>spark-2.4</id>\n      <properties>\n        <spark.hadoop.groupid>org.apache.linkis</spark.hadoop.groupid>\n        <spark.hadoop-common.artifactId>linkis-hadoop-hdfs-client-shade</spark.hadoop-common.artifactId>\n        <spark.hadoop-hdfs.artifactId>linkis-hadoop-hdfs-client-shade</spark.hadoop-hdfs.artifactId>\n        <spark.hadoop.version>${project.version}</spark.hadoop.version>\n        <spark.hadoop.scope>compile</spark.hadoop.scope>\n        <spark.version>2.4.3</spark.version>\n        <scala.version>2.11.12</scala.version>\n        <scala.binary.version>2.11</scala.binary.version>\n      </properties>\n    </profile>\n    <!-- hbase -->\n    <profile>\n      <id>hbase-2.5</id>\n      <activation>\n        <property>\n          <name>!hbase.profile</name>\n        </property>\n      </activation>\n      <properties>\n        <profiles.active>hbase-2.5</profiles.active>\n        <hbase.version>2.5.3</hbase.version>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>hbase-1.2</id>\n      <activation>\n        <property>\n          <name>hbase.profile</name>\n          <value>1.2</value>\n        </property>\n      </activation>\n      <properties>\n        <profiles.active>hbase-1.2</profiles.active>\n        <hbase.version>1.2.0</hbase.version>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>hbase-1.4</id>\n      <activation>\n        <property>\n          <name>hbase.profile</name>\n          <value>1.4</value>\n        </property>\n      </activation>\n      <properties>\n        <profiles.active>hbase-1.4</profiles.active>\n        <hbase.version>1.4.3</hbase.version>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>hbase-2.2</id>\n      <activation>\n        <property>\n          <name>hbase.profile</name>\n          <value>2.2</value>\n        </property>\n      </activation>\n      <properties>\n        <profiles.active>hbase-2.2</profiles.active>\n        <hbase.version>2.2.6</hbase.version>\n      </properties>\n    </profile>\n    <!-- jacoco: mvn validate -Pjacoco  -->\n    <profile>\n      <id>jacoco</id>\n      <properties>\n        <jacoco.skip>false</jacoco.skip>\n      </properties>\n    </profile>\n    <!-- check apache license: mvn validate -Prat  -->\n    <profile>\n      <id>rat</id>\n      <properties>\n        <rat.skip>false</rat.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>jdk11-on</id>\n      <activation>\n        <jdk>[11,)</jdk>\n      </activation>\n      <properties>\n        <maven.compiler.release>8</maven.compiler.release>\n      </properties>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-surefire-plugin</artifactId>\n            <configuration>\n              <forkCount>3</forkCount>\n              <reuseForks>true</reuseForks>\n              <argLine>-XX:MaxMetaspaceSize=2g ${extraJavaTestArgs}\n                -Dio.netty.tryReflectionSetAccessible=true</argLine>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>release</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-source-plugin</artifactId>\n            <version>${maven-source-plugin.version}</version>\n            <configuration>\n              <attach>true</attach>\n            </configuration>\n            <executions>\n              <execution>\n                <id>create-source-jar</id>\n                <goals>\n                  <goal>jar-no-fork</goal>\n                  <goal>test-jar-no-fork</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-deploy-plugin</artifactId>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-javadoc-plugin</artifactId>\n            <version>${maven-javadoc-plugin.version}</version>\n            <configuration>\n              <doclint>none</doclint>\n            </configuration>\n            <executions>\n              <execution>\n                <id>attach-javadocs</id>\n                <goals>\n                  <goal>jar</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-gpg-plugin</artifactId>\n            <version>${maven-gpg-plugin.version}</version>\n            <executions>\n              <execution>\n                <id>sign-artifacts</id>\n                <goals>\n                  <goal>sign</goal>\n                </goals>\n                <phase>verify</phase>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <!-- storage  -->\n    <profile>\n      <id>storage-parquet</id>\n      <properties>\n        <storage.parquet.scope>compile</storage.parquet.scope>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>storage-orc</id>\n      <properties>\n        <storage.orc.scope>compile</storage.orc.scope>\n      </properties>\n    </profile>\n  </profiles>\n</project>\n"
        },
        {
          "name": "scalastyle-config.xml",
          "type": "blob",
          "size": 21.7255859375,
          "content": "<!--\n  ~ Licensed to the Apache Software Foundation (ASF) under one or more\n  ~ contributor license agreements.  See the NOTICE file distributed with\n  ~ this work for additional information regarding copyright ownership.\n  ~ The ASF licenses this file to You under the Apache License, Version 2.0\n  ~ (the \"License\"); you may not use this file except in compliance with\n  ~ the License.  You may obtain a copy of the License at\n  ~\n  ~    http://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  ~ See the License for the specific language governing permissions and\n  ~ limitations under the License.\n  -->\n<!--\n\nIf you wish to turn off checking for a section of code, you can put a comment in the source\nbefore and after the section, with the following syntax:\n\n  // scalastyle:off\n  ...  // stuff that breaks the styles\n  // scalastyle:on\n\nYou can also disable only one rule, by specifying its rule id, as specified in:\n  http://www.scalastyle.org/rules-0.7.0.html\n\n  // scalastyle:off no.finalize\n  override def finalize(): Unit = ...\n  // scalastyle:on no.finalize\n\nThis file is divided into 3 sections:\n (1) rules that we enforce.\n (2) rules that we would like to enforce, but haven't cleaned up the codebase to turn on yet\n     (or we need to make the scalastyle rule more configurable).\n (3) rules that we don't want to enforce.\n-->\n\n<scalastyle>\n  <name>Scalastyle standard configuration</name>\n\n  <!-- ================================================================================ -->\n  <!--                               rules we enforce                                   -->\n  <!-- ================================================================================ -->\n\n  <check level=\"error\" class=\"org.scalastyle.file.FileTabChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.file.HeaderMatchesChecker\" enabled=\"true\">\n    <parameters>\n      <parameter name=\"header\"><![CDATA[/*\n * Licensed to the Apache Software Foundation (ASF) under one or more\n * contributor license agreements.  See the NOTICE file distributed with\n * this work for additional information regarding copyright ownership.\n * The ASF licenses this file to You under the Apache License, Version 2.0\n * (the \"License\"); you may not use this file except in compliance with\n * the License.  You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */]]></parameter>\n    </parameters>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.SpacesAfterPlusChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.SpacesBeforePlusChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.file.WhitespaceEndOfLineChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.file.FileLineLengthChecker\" enabled=\"true\">\n    <parameters>\n      <parameter name=\"maxLineLength\"><![CDATA[200]]></parameter>\n      <parameter name=\"tabSize\"><![CDATA[2]]></parameter>\n      <parameter name=\"ignoreImports\">true</parameter>\n    </parameters>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.ClassNamesChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\"><![CDATA[[A-Z][A-Za-z]*]]></parameter></parameters>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.ObjectNamesChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\"><![CDATA[(config|[A-Z][A-Za-z]*)]]></parameter></parameters>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.PackageObjectNamesChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\"><![CDATA[^[a-z][A-Za-z]*$]]></parameter></parameters>\n  </check>\n\n  <check customId=\"argcount\" level=\"error\" class=\"org.scalastyle.scalariform.ParameterNumberChecker\" enabled=\"true\">\n    <parameters><parameter name=\"maxParameters\"><![CDATA[15]]></parameter></parameters>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.NoFinalizeChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.CovariantEqualsChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.StructuralTypeChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.UppercaseLChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.IfBraceChecker\" enabled=\"true\">\n    <parameters>\n      <parameter name=\"singleLineAllowed\"><![CDATA[true]]></parameter>\n      <parameter name=\"doubleLineAllowed\"><![CDATA[true]]></parameter>\n    </parameters>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.PublicMethodsHaveTypeChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.file.NewLineAtEofChecker\" enabled=\"true\"></check>\n\n  <check customId=\"nonascii\" level=\"warning\" class=\"org.scalastyle.scalariform.NonASCIICharacterChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.SpaceAfterCommentStartChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.EnsureSingleSpaceBeforeTokenChecker\" enabled=\"true\">\n    <parameters>\n      <parameter name=\"tokens\">ARROW, EQUALS, ELSE, TRY, CATCH, FINALLY, LARROW, RARROW</parameter>\n    </parameters>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.EnsureSingleSpaceAfterTokenChecker\" enabled=\"true\">\n    <parameters>\n      <parameter name=\"tokens\">ARROW, EQUALS, COMMA, COLON, IF, ELSE, DO, WHILE, FOR, MATCH, TRY, CATCH, FINALLY, LARROW, RARROW</parameter>\n    </parameters>\n  </check>\n\n  <!-- ??? usually shouldn't be checked into the code base. -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.NotImplementedErrorUsage\" enabled=\"true\"></check>\n\n  <!-- all printlns need to be wrapped in '// scalastyle:off/on println' -->\n  <check customId=\"println\" level=\"error\" class=\"org.scalastyle.scalariform.TokenChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">^println$</parameter></parameters>\n    <customMessage><![CDATA[Are you sure you want to println? If yes, wrap the code block with\n      // scalastyle:off println\n      println(...)\n      // scalastyle:on println]]></customMessage>\n  </check>\n\n  <check customId=\"hadoopconfiguration\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">spark(.sqlContext)?.sparkContext.hadoopConfiguration</parameter></parameters>\n    <customMessage><![CDATA[\n      Are you sure that you want to use sparkContext.hadoopConfiguration? In most cases, you should use\n      spark.sessionState.newHadoopConf() instead, so that the hadoop configurations specified in Spark session\n      configuration will come into effect.\n      If you must use sparkContext.hadoopConfiguration, wrap the code block with\n      // scalastyle:off hadoopconfiguration\n      spark.sparkContext.hadoopConfiguration...\n      // scalastyle:on hadoopconfiguration\n    ]]></customMessage>\n  </check>\n\n  <check customId=\"visiblefortesting\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">@VisibleForTesting</parameter></parameters>\n    <customMessage><![CDATA[\n      @VisibleForTesting causes classpath issues. Please note this in the java doc instead.\n    ]]></customMessage>\n  </check>\n\n  <check customId=\"runtimeaddshutdownhook\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">Runtime\\.getRuntime\\.addShutdownHook</parameter></parameters>\n    <customMessage><![CDATA[\n      Are you sure that you want to use Runtime.getRuntime.addShutdownHook? In most cases, you should use\n      ShutdownHookManager.addShutdownHook instead.\n      If you must use Runtime.getRuntime.addShutdownHook, wrap the code block with\n      // scalastyle:off runtimeaddshutdownhook\n      Runtime.getRuntime.addShutdownHook(...)\n      // scalastyle:on runtimeaddshutdownhook\n    ]]></customMessage>\n  </check>\n\n  <check customId=\"mutablesynchronizedbuffer\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">mutable\\.SynchronizedBuffer</parameter></parameters>\n    <customMessage><![CDATA[\n      Are you sure that you want to use mutable.SynchronizedBuffer? In most cases, you should use\n      java.util.concurrent.ConcurrentLinkedQueue instead.\n      If you must use mutable.SynchronizedBuffer, wrap the code block with\n      // scalastyle:off mutablesynchronizedbuffer\n      mutable.SynchronizedBuffer[...]\n      // scalastyle:on mutablesynchronizedbuffer\n    ]]></customMessage>\n  </check>\n\n  <!--\n  <check customId=\"classforname\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">Class\\.forName</parameter></parameters>\n    <customMessage><![CDATA[\n      Are you sure that you want to use Class.forName? In most cases, you should use Utils.classForName instead.\n      If you must use Class.forName, wrap the code block with\n      // scalastyle:off classforname\n      Class.forName(...)\n      // scalastyle:on classforname\n    ]]></customMessage>\n  </check>\n-->\n  <check customId=\"awaitresult\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">Await\\.result</parameter></parameters>\n    <customMessage><![CDATA[\n      Are you sure that you want to use Await.result? In most cases, you should use ThreadUtils.awaitResult instead.\n      If you must use Await.result, wrap the code block with\n      // scalastyle:off awaitresult\n      Await.result(...)\n      // scalastyle:on awaitresult\n    ]]></customMessage>\n  </check>\n\n  <check customId=\"awaitready\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">Await\\.ready</parameter></parameters>\n    <customMessage><![CDATA[\n      Are you sure that you want to use Await.ready? In most cases, you should use ThreadUtils.awaitReady instead.\n      If you must use Await.ready, wrap the code block with\n      // scalastyle:off awaitready\n      Await.ready(...)\n      // scalastyle:on awaitready\n    ]]></customMessage>\n  </check>\n\n  <check customId=\"caselocale\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">(\\.toUpperCase|\\.toLowerCase)(?!(\\(|\\(Locale.ROOT\\)))</parameter></parameters>\n    <customMessage><![CDATA[\n      Are you sure that you want to use toUpperCase or toLowerCase without the root locale? In most cases, you\n      should use toUpperCase(Locale.ROOT) or toLowerCase(Locale.ROOT) instead.\n      If you must use toUpperCase or toLowerCase without the root locale, wrap the code block with\n      // scalastyle:off caselocale\n      .toUpperCase\n      .toLowerCase\n      // scalastyle:on caselocale\n    ]]></customMessage>\n  </check>\n\n  <check customId=\"throwerror\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">throw new \\w+Error\\(</parameter></parameters>\n    <customMessage><![CDATA[\n      Are you sure that you want to throw Error? In most cases, you should use appropriate Exception instead.\n      If you must throw Error, wrap the code block with\n      // scalastyle:off throwerror\n      throw new XXXError(...)\n      // scalastyle:on throwerror\n    ]]></customMessage>\n  </check>\n\n  <!-- JavaConversions should be replaced with JavaConverters -->\n  <check customId=\"javaconversions\" level=\"error\" class=\"org.scalastyle.scalariform.TokenChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">JavaConversions</parameter></parameters>\n    <customMessage>Instead of importing implicits in scala.collection.JavaConversions._, import\n      scala.collection.JavaConverters._ and use .asScala / .asJava methods</customMessage>\n  </check>\n\n  <check customId=\"commonslang2\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">org\\.apache\\.commons\\.lang\\.</parameter></parameters>\n    <customMessage>Use Commons Lang 3 classes (package org.apache.commons.lang3.*) instead\n      of Commons Lang 2 (package org.apache.commons.lang.*)</customMessage>\n  </check>\n\n  <check customId=\"executioncontextglobal\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">scala\\.concurrent\\.ExecutionContext\\.Implicits\\.global</parameter></parameters>\n    <customMessage> User queries can use global thread pool, causing starvation and eventual OOM.\n      Thus, APIs should not use this thread pool</customMessage>\n  </check>\n\n  <check customId=\"FileSystemGet\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">FileSystem.get\\([a-zA-Z_$][a-zA-Z_$0-9]*\\)</parameter></parameters>\n    <customMessage><![CDATA[\n      Are you sure that you want to use \"FileSystem.get(Configuration conf)\"? If the input\n      configuration is not set properly, a default FileSystem instance will be returned. It can\n      lead to errors when you deal with multiple file systems. Please consider using\n      \"FileSystem.get(URI uri, Configuration conf)\" or \"Path.getFileSystem(Configuration conf)\" instead.\n      If you must use the method \"FileSystem.get(Configuration conf)\", wrap the code block with\n      // scalastyle:off FileSystemGet\n      FileSystem.get(...)\n      // scalastyle:on FileSystemGet\n    ]]></customMessage>\n  </check>\n\n  <check customId=\"extractopt\" level=\"error\" class=\"org.scalastyle.scalariform.TokenChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">extractOpt</parameter></parameters>\n    <customMessage>Use jsonOption(x).map(.extract[T]) instead of .extractOpt[T], as the latter\n      is slower.  </customMessage>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.ImportOrderChecker\" enabled=\"true\">\n    <parameters>\n      <parameter name=\"groups\">linkis, apache, spring, javax, java, scala, 3rdParty</parameter>\n      <parameter name=\"group.linkis\">org\\.apache\\.linkis.*</parameter>\n      <parameter name=\"group.apache\">org\\.apache.*</parameter>\n      <parameter name=\"group.spring\">org\\.springframework.*</parameter>\n      <parameter name=\"group.javax\">javax.*</parameter>\n      <parameter name=\"group.java\">java.*</parameter>\n      <parameter name=\"group.scala\">scala.*</parameter>\n      <parameter name=\"group.3rdParty\">(?!org\\.apache\\.linkis).*</parameter>\n    </parameters>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.DisallowSpaceBeforeTokenChecker\" enabled=\"true\">\n    <parameters>\n      <parameter name=\"tokens\">COMMA</parameter>\n    </parameters>\n  </check>\n\n  <!-- Single Space between ')' and '{' -->\n  <check customId=\"SingleSpaceBetweenRParenAndLCurlyBrace\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">\\)\\{</parameter></parameters>\n    <customMessage><![CDATA[\n      Single Space between ')' and `{`.\n    ]]></customMessage>\n  </check>\n\n  <check customId=\"NoScalaDoc\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">(?m)^(\\s*)/[*][*].*$(\\r|)\\n^\\1  [*]</parameter></parameters>\n    <customMessage>Use Javadoc style indentation for multiline comments</customMessage>\n  </check>\n\n  <check customId=\"OmitBracesInCase\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">case[^\\n>]*=>\\s*\\{</parameter></parameters>\n    <customMessage>Omit braces in case clauses.</customMessage>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">new (java\\.lang\\.)?(Byte|Integer|Long|Short)\\(</parameter></parameters>\n    <customMessage>Use static factory 'valueOf' or 'parseXXX' instead of the deprecated constructors.</customMessage>\n  </check>\n\n  <!-- Avoid Java annotations -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.OverrideJavaChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.DeprecatedJavaChecker\" enabled=\"true\"></check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.IllegalImportsChecker\" enabled=\"true\">\n    <parameters><parameter name=\"illegalImports\"><![CDATA[scala.collection.Seq,scala.collection.IndexedSeq]]></parameter></parameters>\n    <customMessage><![CDATA[\n      Don't import scala.collection.Seq and scala.collection.IndexedSeq as it may bring some problems with cross-build between Scala 2.12 and 2.13.\n\n      Please refer below page to see the details of changes around Seq / IndexedSeq.\n      https://docs.scala-lang.org/overviews/core/collections-migration-213.html\n\n      If you really need to use scala.collection.Seq or scala.collection.IndexedSeq, please use the fully-qualified name instead.\n    ]]></customMessage>\n  </check>\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.IllegalImportsChecker\" enabled=\"true\">\n    <parameters><parameter name=\"illegalImports\"><![CDATA[org.apache.log4j]]></parameter></parameters>\n    <customMessage>Please use Apache Log4j 2 instead.</customMessage>\n  </check>\n\n\n  <!-- ================================================================================ -->\n  <!--       rules we'd like to enforce, but haven't cleaned up the codebase yet        -->\n  <!-- ================================================================================ -->\n\n  <!-- We cannot turn the following two on, because it'd fail a lot of string interpolation use cases. -->\n  <!-- Ideally the following two rules should be configurable to rule out string interpolation. -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.NoWhitespaceBeforeLeftBracketChecker\" enabled=\"false\"></check>\n  <check level=\"error\" class=\"org.scalastyle.scalariform.NoWhitespaceAfterLeftBracketChecker\" enabled=\"false\"></check>\n\n  <!-- This breaks symbolic method names so we don't turn it on. -->\n  <!-- Maybe we should update it to allow basic symbolic names, and then we are good to go. -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.MethodNamesChecker\" enabled=\"false\">\n    <parameters>\n      <parameter name=\"regex\"><![CDATA[^[a-z][A-Za-z0-9]*$]]></parameter>\n    </parameters>\n  </check>\n\n  <!-- Should turn this on, but we have a few places that need to be fixed first -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.EqualsHashCodeChecker\" enabled=\"true\"></check>\n\n  <!-- ================================================================================ -->\n  <!--                               rules we don't want                                -->\n  <!-- ================================================================================ -->\n\n  <check level=\"error\" class=\"org.scalastyle.scalariform.IllegalImportsChecker\" enabled=\"false\">\n    <parameters><parameter name=\"illegalImports\"><![CDATA[sun._,java.awt._]]></parameter></parameters>\n  </check>\n\n  <!-- We want the opposite of this: NewLineAtEofChecker -->\n  <check level=\"error\" class=\"org.scalastyle.file.NoNewLineAtEofChecker\" enabled=\"false\"></check>\n\n  <!-- This one complains about all kinds of random things. Disable. -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.SimplifyBooleanExpressionChecker\" enabled=\"false\"></check>\n\n  <!-- We use return quite a bit for control flows and guards -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.ReturnChecker\" enabled=\"false\"></check>\n\n  <!-- We use null a lot in low level code and to interface with 3rd party code -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.NullChecker\" enabled=\"false\"></check>\n\n  <!-- Doesn't seem super big deal here ... -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.NoCloneChecker\" enabled=\"false\"></check>\n\n  <!-- Doesn't seem super big deal here ... -->\n  <check level=\"error\" class=\"org.scalastyle.file.FileLengthChecker\" enabled=\"false\">\n    <parameters><parameter name=\"maxFileLength\">800></parameter></parameters>\n  </check>\n\n  <!-- Doesn't seem super big deal here ... -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.NumberOfTypesChecker\" enabled=\"false\">\n    <parameters><parameter name=\"maxTypes\">30</parameter></parameters>\n  </check>\n\n  <!-- Doesn't seem super big deal here ... -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.CyclomaticComplexityChecker\" enabled=\"false\">\n    <parameters><parameter name=\"maximum\">10</parameter></parameters>\n  </check>\n\n  <!-- Doesn't seem super big deal here ... -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.MethodLengthChecker\" enabled=\"false\">\n    <parameters><parameter name=\"maxLength\">50</parameter></parameters>\n  </check>\n\n  <!-- Not exactly feasible to enforce this right now. -->\n  <!-- It is also infrequent that somebody introduces a new class with a lot of methods. -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.NumberOfMethodsInTypeChecker\" enabled=\"false\">\n    <parameters><parameter name=\"maxMethods\"><![CDATA[30]]></parameter></parameters>\n  </check>\n\n  <!-- Doesn't seem super big deal here, and we have a lot of magic numbers ... -->\n  <check level=\"error\" class=\"org.scalastyle.scalariform.MagicNumberChecker\" enabled=\"false\">\n    <parameters><parameter name=\"ignore\">-1,0,1,2,3</parameter></parameters>\n  </check>\n\n  <check customId=\"GuavaToStringHelper\" level=\"error\" class=\"org.scalastyle.file.RegexChecker\" enabled=\"true\">\n    <parameters><parameter name=\"regex\">Objects.toStringHelper</parameter></parameters>\n    <customMessage>Avoid using Object.toStringHelper. Use ToStringBuilder instead.</customMessage>\n  </check>\n</scalastyle>\n"
        },
        {
          "name": "tool",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}