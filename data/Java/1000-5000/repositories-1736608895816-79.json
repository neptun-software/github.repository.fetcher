{
  "metadata": {
    "timestamp": 1736608895816,
    "page": 79,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "houbb/sensitive-word",
      "stars": 4669,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".coveralls.yml",
          "type": "blob",
          "size": 0.0224609375,
          "content": "service_name: travis-ci"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.255859375,
          "content": "# maven ignore\ntarget/\n*.jar\n*.war\n*.zip\n*.tar\n*.tar.gz\n\n# eclipse ignore\n.settings/\n.project\n.classpath\n\n# idea ignore\n.idea/\n*.ipr\n*.iml\n*.iws\n\n# temp ignore\n*.log\n*.cache\n*.diff\n*.patch\n*.tmp\n*.java~\n*.properties~\n*.xml~\n\n# system ignore\n.DS_Store\nThumbs.db\n\n"
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.1748046875,
          "content": "language: java\njdk:\n- oraclejdk7\ninstall: mvn install -DskipTests=true -Dmaven.javadoc.skip=true\nscript: mvn test\nafter_success:\n- mvn clean cobertura:cobertura coveralls:report\n\n"
        },
        {
          "name": "CHANGE_LOG.md",
          "type": "blob",
          "size": 26.4501953125,
          "content": "# 变更日志\n\n| 类型 | 说明 |\n|:----|:----|\n| A | 新增 |\n| U | 更新 |\n| D | 删除 |\n| T | 测试 |\n| O | 优化 |\n| F | 修复BUG |\n\n# release_0.0.1\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 基本功能的实现 | 2020-1-7 21:46:32 | |\n\n# release_0.0.2\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | O | 优化最大长度匹配模式 | 2020-1-8 09:34:35 | |\n| 2 | A | 新增替换实现 | 2020-1-8 09:34:35 | 性能优于各种博客的直接正则替换。|\n| 3 | O | 优化公共代码到 heaven 项目 | 2020-1-8 09:34:35 | 便于后期统一维护整理。|\n| 4 | O | 初步优化 DFA 对应 map 的大小 | 2020-1-8 09:34:35 | |\n\n# release_0.0.3\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | O | 优化敏感词大小 | 2020-1-8 09:34:35 | |\n\n# release_0.0.4\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 支持大小写转换 | 2020-1-9 09:34:35 | |\n| 1 | A | 支持半角全角转换 | 2020-1-9 09:34:35 | |\n\n# release_0.0.5\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | D | 移除单个字符 `v` | 2020-1-9 09:34:35 | |\n| 2 | D | 移除单个字符 `我` | 2020-1-10 09:34:35 | |\n| 3 | O | 责任链模式优化代码实现 | 2020-1-10 09:34:35 | |\n| 4 | A | 支持数字格式化转换 | 2020-1-10 09:34:35 | |\n| 5 | A | 支持数字敏感词验证 | 2020-1-10 09:34:35 | |\n| 6 | O | 优化所有写法的数字为阿拉伯写法 | 2020-1-10 09:34:35 | |\n\n# release_0.0.6\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 添加中文繁简体转换支持 | 2020-1-10 09:34:35 | |\n| 2 | A | 添加英文常见写法转换支持 | 2020-1-10 09:34:35 | |\n| 3 | A | 新增敏感词 `艹` | 2020-1-10 09:34:35 | |\n| 4 | D | 移除单个词 `k买仆办功务动区卖台吨天房本歌滚灾独证踢弓` | 2020-1-10 09:34:35 | |\n\n# release_0.0.7\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 添加忽略重复词支持 | 2020-1-10 09:34:35 | |\n\n# release_0.0.8\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 添加用户自定义敏感词和白名单 | 2020-1-10 09:34:35 | |\n\n# release_0.0.9\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 添加邮箱检测 | 2020-1-11 09:34:35 | |\n\n# release_0.0.10\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | F | 修复依赖包 heaven 版本 | 2020-1-11 09:34:35 | |\n\n# release_0.0.11\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 添加对于数字过滤的可配置型 | 2020-1-14 22:48:12 | |\n| 2 | A | 添加部分敏感词 | 2020-1-14 22:48:12 | |\n\n# release_0.0.12\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 添加对于网址的过滤 | 2020-1-16 20:51:58 | |\n\n# release_0.0.13\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 新增 Helper 工具类 | 2021-5-12 20:51:58 | |\n| 2 | A | 新增动态词库初始化支持 | 2021-5-12 20:51:58 | |\n\n# release_0.0.14\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 开发样式配置特性 | 2021-5-31 20:51:58 | |\n\n# release_0.0.15\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 优化 init 方式 | 2021-7-16 20:51:58 | |\n\n# release_0.1.0\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 返回敏感词对应的下标范围 | 2021-8-8 20:51:58 | |\n| 2 | U | ignoreRepeat 默认为 false | 2021-8-8 20:51:58 | |\n| 3 | U | 把测试、系统、买卖、彩票等常用词移出敏感词库 | 2021-8-8 20:51:58 | |\n\n# release_0.1.1\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | F | 自定义敏感词 allow/deny 进行格式化处理 | 2021-12-11 23:51:58 | |\n\n# release_0.2.0\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | A | 允许用户自定义替换策略 | 2022-01-15 23:51:58 | |\n| 2 | U | 升级二方数据库依赖 | 2022-01-15 23:51:58 | |\n\n# release_0.2.1\n\n| 序号 | 变更类型 | 说明 | 时间 | 备注 |\n|:---|:---|:---|:---|:--|\n| 1 | O | 移除日志初始化的控台日志输出 | 2023-02-17 23:51:58 | |\n| 2 | A | 支持数字检验的长度指定 | 2022-01-17 23:51:58 | |\n\n# release_0.3.0\n\n| 序号 | 变更类型 | 说明               | 时间                  | 备注 |\n|:---|:-----|:-----------------|:--------------------|:--|\n| 1  | O    | 移除冗余的耗时统计        | 2023-06-06 23:51:58 | |\n| 2  | A    | 优化代码实现方式，添加工具类方法 | 2023-06-06 23:51:58 | |\n\n\n# release_0.3.1\n\n| 序号 | 变更类型 | 说明    | 时间                  | 备注                                              |\n|:---|:-----|:------|:--------------------|:------------------------------------------------|\n| 1  | O    | 敏感词添加 | 2023-06-06 23:51:58 | 幸运/幸运儿/17年前/1条/1梯两户/1比1/年检/幸存/幸运/幸运儿/恶搞/游戏机/日/草 |\n| 2  | A    | 敏感词添加 | 2023-06-06 23:51:58 | SB  |\n\n# release_0.3.2\n\n| 序号 | 变更类型 | 说明      | 时间                  | 备注     |\n|:---|:-----|:--------|:--------------------|:-------|\n| 1  | O    | 中文繁简体样式 | 2023-06-07 23:51:58 | 调整实现策略 |\n| 2  | A    | 代码结构优化 | 2023-06-07 23:51:58 | 调整实现策略 |\n\n# release_0.4.0\n\n| 序号 | 变更类型 | 说明          | 时间                  | 备注     |\n|:---|:-----|:------------|:--------------------|:-------|\n| 1  | O    | 优化单词校验逻辑    | 2023-06-08 23:51:58 |  |\n| 2  | A    | 新增是否单词校验的开关 | 2023-06-08 23:51:58 |  |\n\n\n# release_0.5.0\n\n| 序号 | 变更类型 | 说明                          | 时间                  | 备注     |\n|:---|:-----|-----------------------------|:--------------------|:-------|\n| 1  | A    | 优化单词结果，减少 String 创建         | 2023-06-08 23:51:58 |  |\n| 2  | A    | 优化 contains 判断，减少 String 创建 | 2023-06-08 23:51:58 |  |\n\n# release_0.6.0\n\n| 序号 | 变更类型 | 说明                       | 时间                  | 备注     |\n|:---|:-----|--------------------------|:--------------------|:-------|\n| 1  | O    | 性能优化：字符映射统一处理一遍，而不是每次都处理 | 2023-06-09 23:51:58 |  |\n| 2  | D    | 移除废弃的 replaceContext     | 2023-06-09 23:51:58 |  |\n\n# release_0.7.0\n\n| 序号 | 变更类型 | 说明                                          | 时间                  | 备注              |\n|:---|:-----|---------------------------------------------|:--------------------|:----------------|\n| 1  | A    | IWordMap 命名调整为 IWordData, 添加 Tree 实现。优化内存占用 | 2023-06-09 23:51:58 | 避免过于限制，放开便于后续拓展 |\n\n# release_0.8.0\n\n| 序号 | 变更类型 | 说明                                          | 时间                  | 备注              |\n|:---|:-----|---------------------------------------------|:--------------------|:----------------|\n| 1  | A    | 添加 ICharFormatCombine | 2023-06-10 23:51:58 | 允许用户自定义格式化组合策略 |\n| 2  | A    | 添加 ISensitiveCheckCombine | 2023-06-10 23:51:58 | 允许用户自定义敏感词校验组合策略 |\n| 3  | A    | 添加 IWordAllowDenyCombine | 2023-06-10 23:51:58 | 允许用户自定义 allow+deny 的组合策略 |\n| 4  | A    | 添加引导类进阶的配置使用说明 | 2023-06-10 23:51:58 |  放在后续，避免内部接口不够稳定 |\n| 5  | U    | 内部接口名称统一为 IWordXXX | 2023-06-10 23:51:58 |  |\n\n# release_0.9.0\n\n| 序号 | 变更类型 | 说明              | 时间                  | 备注    |\n|:---|:-----|-----------------|:--------------------|:------|\n| 1  | O    | 移除单个汉字+部分常用词的脏词 | 2023-11-17 23:51:58 | 降低误判率 |\n\n# release_0.10.0\n\n| 序号 | 变更类型 | 说明               | 时间                  | 备注    |\n|:---|:-----|------------------|:--------------------|:------|\n| 1  | A    | 添加脏词的标签接口，便于后续拓展 | 2023-12-05 23:51:58 |  |\n\n# release_0.11.0\n\n| 序号 | 变更类型 | 说明                   | 时间                  | 备注    |\n|:---|:-----|----------------------|:--------------------|:------|\n| 1  | A    | 添加忽略字符接口，便于跳过一些干扰的字符 | 2023-12-08 23:51:58 |  |\n\n# release_0.12.0\n\n| 序号 | 变更类型 | 说明                                           | 时间                  | 备注    |\n|:---|:-----|----------------------------------------------|:--------------------|:------|\n| 1  | A    | 添加 wordTags 标签结果处理类                          | 2023-12-18 23:51:58 |  |\n| 2  | A    | 添加 AbstractWordResultHandler 处理类，便于后续拓展和统一管理 | 2023-12-18 23:51:58 |  |\n\n# release_0.13.0\n\n| 序号 | 变更类型 | 说明                                | 时间                  | 备注    |\n|:---|:-----|-----------------------------------|:--------------------|:------|\n| 1  | A    | 对匹配后的单词，额外可以做一次校验，比如做一次英文全词匹配的验证。 | 2024-02-19 23:51:58 |  |\n\n# release_0.13.1\n\n| 序号 | 变更类型 | 说明         | 时间                 | 备注                                               |\n|:---|:-----|------------|:-------------------|:-------------------------------------------------|\n| 1  | F    | 修正单词匹配 BUG | 2024-2-28 16:16:42 | https://github.com/houbb/sensitive-word/pull/47  |\n\n# release_0.13.2\n\n| 序号 | 变更类型 | 说明                   | 时间                | 备注                                               |\n|:---|:-----|----------------------|:------------------|:-------------------------------------------------|\n| 1  | O    | 优化部分2长度的英文，避免误判      | 2024-4-7 21:04:18 |  |\n| 2  | O    | 升级 heaven 版本到 v0.9.0 | 2024-4-7 21:04:18 |  |\n\n# release_0.13.3\n\n| 序号 | 变更类型 | 说明                                                                                                                     | 时间                | 备注                                               |\n|:---|:-----|------------------------------------------------------------------------------------------------------------------------|:------------------|:-------------------------------------------------|\n| 1  | O    | 移除辉煌、辅导、迅雷、运营、近亲、连接、1期、2o年、2期、3期、46级、4川、4风、4级证、5周年、5月天、610、64、6级证、89、8964、89年、9成、fa票、ftp://、nrqr、o78569                | 2024-4-8 21:04:18 |  |\n| 2  | O    | 移除pqαr、q币、tqrqu、v商、xi藏、xrnvs、xrqu、xrtbrnvs、x藏、you行、αqrqr、αqrqu、αrnvs、αrwqnvs、丁香、万岁、上海交大、上海交警、不良、专6、专8、丑化、东升、中华、中华人民共和国 | 2024-4-8 21:04:18 |  |\n| 3  | O    | 中南海、中国、中考、主义、主权、举行、举办、乌克兰、乌鲁木齐、乡巴佬、买房、争鸣、二战、亚洲、亡国、交警、交通部、亵渎、人渣、人质、人鬼情未了、今有广东                                           | 2024-4-7 21:04:18 |  |\n| 4  | O    | 仙剑、仙侣奇缘、仙界传、仙笛、代理、价格、仿真、优惠、会员、传单、伤亡、住宅、佛祖、佛教、作秀、佳薇、供应、侦探、侮辱、侵犯、俄国、俄罗斯、保监会、信仰、信号、信息、信用卡、信誉、修炼、                          | 2024-4-7 21:04:18 |  |\n| 5  | O    | 倒塌、倒退、倚天、借记卡、值勤、倾城美人、假冒、偷税、储蓄卡、催泪、催眠、傲视、傲神传、僵尸、充值、光线、光明日报、克隆、免费使用、全套、全户型、全职、全集、公务员、公司、公告、公司网址、公安、公安局、公寓、               | 2024-4-7 21:04:18 |  |\n| 6  | O    | 公文、公证、兰博、共产、其它、内幕、冒险岛、凤凰、凶手、出卖、出售、出版社、出货、击毙、刀剑、分析、刑警、列宁、别墅、制作、制服、刷卡、剑侠世界、剧毒、加冰                                         | 2024-4-7 21:04:18 |  |\n| 7  | O    | 动向、动漫、助理、助听器、劲舞、劳务、北京、北韩、千年、千岛湖、华语、协警、卡通、卧底、卫星电视、卫生部、卫生巾、印章、历史、压制、压迫、原子弹、原点、参拜、                                        | 2024-4-7 21:04:18 |  |\n| 8  | O    | 反攻、发售、发票、受伤、变天、变态、口腔科、古兰经、古龙、可儿、可塑、台湾、叱咤、号码、司机、同志、名刀、名师、后庭、后庭花、吐血、启蒙派、告示、呻吟、和平、和弦、咨询、哥哥、哥白尼                            | 2024-4-7 21:04:18 |  |\n| 9  | O    | 唐僧、商务、商业楼、商圈、商铺、商标、善恶有报、喷剂、回族、回馈、围攻、国务院、国家、国庆、国歌、圆满、圣母、在十月、地址、地产、地球文明                                                  | 2024-4-7 21:04:18 |  |\n| 10 | O    | 地震、均价、坠落、城堡、城管、增值税、复仇、复制、复活、多维、大宝、大师、大话、天猫、天骄、太监、头孢、奥运、奥运会、女人、如影逐形、如来、妈妈、姐夫、姐姐、孤儿                                      | 2024-4-7 21:04:18 |  |\n| 11 | O    | 学习班、学位证、学历证、学历证书、宇宙真理、安全监管、安全部、安定、安息、完美世界、宗教、官场、官方、定金、定额、宝莲灯、审查、审计、客户、客服、客服人员、密码                                       | 2024-4-7 21:04:18 |  |\n| 12 | O    | 富婆、富姐、富姐婆、寻仇、导师、导弹、导火索、导航、封神、封锁、小说、小龙女、尖值、屏蔽、岁月无声、崩盘、巡查、工商、工商局、巨商、巴赫、市长、                                               | 2024-4-7 21:04:18 |  |\n| 13 | O    | 师傅、师父、帐号、帝国主义、常委、幸运儿、广告、广电、广电局、广电总局、庐江、废墟、建筑、开发、开发票、开放、引导、弟子、形式主义、征途、                                                  | 2024-4-7 21:04:18 |  |\n| 14 | O    | 微信、怀旧、性情、性情中人、总局、总理、总裁、恭喜、您被、户口本、户型、房产、房地产、房型、房间、手机、托福、投票、抗战、抗议、报国、报警、拉sa、拉萨、招商、招募、                                    | 2024-4-7 21:04:18 |  |\n| 15 | O    | 拦截、拿破仑、指导员、挑战、捆绑、探头、接班、摄像、收藏品、改革、政治、救援、教徒、数通、文化部、断电、新浪、新闻出版、无线耳机、无线通话、日本、日本人、旺铺、                                       | 2024-4-7 21:04:18 |  |\n| 16 | O    | 昏迷、易容、星月、星星月亮、星相、春光、春色、暧昧、月嫂、月卡、月光宝盒、朝鲜、朝鲁、期货、本店、本色、杜鹃、杨j、格斗、梵高、检察、检查、楼盘、欲望、正义、                                        | 2024-4-7 21:04:18 |  |\n| 17 | O    | 武力、武器、武神、武警、歹徒、死亡、残疾、母亲、毕业、毕业证、毕加索、民族、民国、民政局、民警、汉人、江山、江山如此多娇、江湖、汪洋、沉沦、沁园春、沙僧、                                          | 2024-4-7 21:04:18 |  |\n| 18 | O    | 洗牙、洞穴、活动、消息、淘宝、混沌、清仓、清真、清纯、渡口、温b、温馨、温馨提示、激情、烟花、烟草、烟草局、然后、燃烧、爆炸、爸爸、爷爷、父亲、爹娘、牙科、牙疼、牙签、牙周炎、                               | 2024-4-7 21:04:18 |  |\n| 19 | O    | 牢记、牲口、狙击、独立、猥琐、现代中国、现金、现货、现房、瓦斯、生肖、用户、电信、电影、电影下载、电话、男装、疫苗、病毒、监督、监管、监管局、盗版、盘古、相亲会                                       | 2024-4-7 21:04:18 |  |\n| 20 | O    | 省长、督察、短信、破坏、硬币、礼品、礼物、社会、社会主义、祖国、祖宗、离婚、秃鹰、种子、租房、租售、移动、移民、税务、穷人、空降、签证、简历、米粒、精装、纪元、经济、经典语录、绝版                             | 2024-4-7 21:04:18 |  |\n| 21 | O    | 统治、维护、维权、缅甸、缠上、缺陷、网址、网关、网易、网站、网站建设、网络、网购、罪行、美利坚、美国、美女、群发、老板、老板手机、考号、考研、耳机、                                             | 2024-4-7 21:04:18 |  |\n| 22 | O    | 耶和华、耶稣、联合国、联合行动、 联系、联通、股票、自fe、自制、自拍、舆论、舒淇、航天、航班、航空、花园、苹果、茅台、茉莉花、药水、莎士比亚、落榜、蒙面、蓝光、虎头、                                   | 2024-4-7 21:04:18 |  |\n| 23 | O    | 虎牙、虎门、蛤蟆、融资、行驶证、街铺、被迫、西游、西臧、西藏、观世音、解放军、警察、讲法、论文、证书、证件、证券、诛仙、诡异、语句、语音、诱惑、资格、跟踪、路人、躲猫猫、通告                                | 2024-4-7 21:04:18 |  |\n| 24 | O    | 通知、通讯录、道教、采花、重生、钓鱼、钢珠、铃声、链接、销售、错别字、锤子、锤锤、面积、预测、领土、领导、风水、风花、首长、鲁迅、鲍鱼、鸡尾酒、麻将、                                            | 2024-4-7 21:04:18 |  |\n\n# release_0.13.4\n\n| 序号 | 变更类型 | 说明                                                                  | 时间                | 备注                                               |\n|:---|:-----|---------------------------------------------------------------------|:------------------|:-------------------------------------------------|\n| 1  | O    | 移除 一直对、组织、验证码、数据库、服务器、火药、世界都、聚集、国内、制造、解码、万里、视频、中国好声音                | 2024-4-9 21:04:18 |  |\n| 2  | O    | 移除 骑士、移动公司、战役、战场、飞机票、逃逸、自由、杂志、使用人数、域名服务、人民日报、一粒沙、牛顿、三国演义、哥伦布、       | 2024-4-9 21:04:18 |  |\n| 3  | O    | 移除 订票、财政部、搜狐、人员变动、惊天动地、试卷、华莱士、空闲时间、泰晤士报、企业家、气象局、诺贝尔奖、多多益善、论坛、外交部    | 2024-4-9 21:04:18 |  |\n| 4  | O    | 移除 焚烧、雅典娜、真相、真善美、制造、万里、法国、世界都、昨日重现、信息中心、马克思、刘德华、内蒙古、                | 2024-4-9 21:04:18 |  |\n| 5  | O    | 移除 涿州、中国联通、中国网通、李老师、写字楼、人民银行、卡拉、牛魔王、 张杰、哪里找、爱因斯坦、天地之间、不玩了、里根、监听器、监听 | 2024-4-9 21:04:18 |  |\n| 6  | O    | 移除 选举、登陆、中国移动、运营者、客户服务、精益求精、下载速度、好朋友、拦截器、账号、无界、深入浅出、腾讯、解码器、管理员、白皮书  | 2024-4-9 21:04:18 |  |\n| 7  | O    | 移除 监听、运营商、一起玩、转化、超市                                                   | 2024-4-9 21:04:18 |  |\n\n\n# release_0.14.0\n\n| 序号 | 变更类型 | 说明         | 时间                 | 备注                                               |\n|:---|:-----|------------|:-------------------|:-------------------------------------------------|\n| 1  | A    | 结果添加敏感词的类别 | 2024-4-11 15:02:25 |  |\n\n# release_0.15.0\n\n| 序号 | 变更类型 | 说明                  | 时间                 | 备注                                               |\n|:---|:-----|---------------------|:-------------------|:-------------------------------------------------|\n| 1  | F    | 调整默认文件名称，避免和其他框架重合。 | 2024-4-23 21:02:25 | https://github.com/houbb/sensitive-word/issues/54 |\n\n# release_0.16.0\n\n| 序号 | 变更类型 | 说明                   | 时间                 | 备注                                                     |\n|:---|:-----|----------------------|:-------------------|:-------------------------------------------------------|\n| 1  | A    | 支持资源的释放，如 andriod 场景 | 2024-4-26 21:02:25 | 废弃版本，https://github.com/houbb/sensitive-word/issues/53 |\n\n# release_0.16.1\n\n| 序号 | 变更类型 | 说明                   | 时间                 | 备注                                                        |\n|:---|:-----|----------------------|:-------------------|:----------------------------------------------------------|\n| 1  | F    | 支持资源的释放，如 andriod 场景 | 2024-4-26 21:02:25 | 修正未调用问题，https://github.com/houbb/sensitive-word/issues/53 |\n\n# release_0.16.2\n\n| 序号 | 变更类型 | 说明                                                                                       | 时间                | 备注    |\n|:---|:-----|------------------------------------------------------------------------------------------|:------------------|:------|\n| 1  | O    | 敏感词优化移除： 译码器/鞋帽/破解/看下/快乐水/冷却/招聘/搬迁/机票/谣言/第4代/赚钱/1989年/贫穷/护士/工作人员/网通/超速/明心/人民/服务管理/刺激/心水/ | 2024-6-01 15:02:25 |       |\n| 2  | O    | 敏感词优化移除： 影院/公关/韦小宝/挣钱/资本主义/人也/战争/水浒/女装/装修/妹妹/他爸爸/他妈妈                                        | 2024-6-01 15:02:25 |       |\n| 3  | O    | 默认关闭数字+网址+邮箱的校验                                                                          | 2024-6-01 15:02:25 | 降低误判率 |\n\n# release_0.17.0\n\n| 序号 | 变更类型 | 说明      | 时间                | 备注    |\n|:---|:-----|---------|:------------------|:------|\n| 1  | A    | IPV4 校验 | 2024-6-01 15:02:25 |    https://github.com/houbb/sensitive-word/issues/43   |\n\n# release_0.18.0\n\n| 序号 | 变更类型 | 说明                      | 时间                 | 备注   |\n|:---|:-----|-------------------------|:-------------------|:-----|\n| 1  | A    | 优化网址匹配策略，避免命中 1.jpg 之类的 | 2024-7-07 15:02:25 |   |\n\n# release_0.18.1\n\n| 序号 | 变更类型 | 说明                          | 时间                 | 备注   |\n|:---|:-----|-----------------------------|:-------------------|:-----|\n| 1  | A    | 优化自定义策略，避免出现返回 null 导致的 NPE | 2024-8-28 15:02:25 |   |\n\n# release_0.19.0\n\n| 序号 | 变更类型 | 说明                     | 时间                 | 备注   |\n|:---|:-----|------------------------|:-------------------|:-----|\n| 1  | A    | 单个词的新增/删除              | 2024-8-28 15:02:25 |   |\n| 2  | A    | allow/deny 的空实现，便于测试场景 | 2024-8-28 15:02:25 |   |\n\n# release_0.19.1\n\n| 序号 | 变更类型 | 说明                            | 时间                 | 备注 |\n|:---|:-----|-------------------------------|:-------------------|:---|\n| 1  | F    | 修正 englishWordMatch 单个字符误判的问题 | 2024-8-28 15:02:25 | https://github.com/houbb/sensitive-word/issues/69  |\n\n# release_0.19.2\n\n| 序号 | 变更类型 | 说明                                                     | 时间                 | 备注                                                |\n|:---|:-----|--------------------------------------------------------|:-------------------|:--------------------------------------------------|\n| 1  | F    | 修正 #68 SensitiveWordCharIgnores.specialChars() 误判命中开始的问题 | 2024-8-28 15:02:25 | https://github.com/houbb/sensitive-word/issues/68 |\n\n# release_0.20.0\n\n| 序号 | 变更类型 | 说明        | 时间                 | 备注                                                |\n|:---|:-----|-----------|:-------------------|:--------------------------------------------------|\n| 1  | A    | 支持数字的全词匹配 | 2024-9-18 19:39:40 | https://github.com/houbb/sensitive-word/issues/77 |\n\n# release_0.21.0\n\n| 序号 | 变更类型 | 说明                                 | 时间                 | 备注                                                    |\n|:---|:-----|------------------------------------|:-------------------|:------------------------------------------------------|\n| 1  | O    | 优化白名单的匹配策略，避免长白名单时，匹配到短的黑名单，不符合预期。 | 2024-9-18 21:39:40 | https://github.com/houbb/sensitive-word/issues/76 +19 |\n| 2  | A    | 白名单支持单个编辑                          | 2024-9-18 21:39:40 | 避免全量初始化                                               |\n\n# release_0.22.0\n\n| 序号 | 变更类型 | 说明       | 时间                  | 备注                                                    |\n|:---|:-----|----------|:--------------------|:------------------------------------------------------|\n| 1  | F    | 修正数字匹配问题 | 2024-11-10 22:43:08 | https://github.com/houbb/sensitive-word/issues/84 |\n\n# release_0.23.0\n\n| 序号 | 变更类型 | 说明         | 时间                 | 备注         |\n|:---|:-----|------------|:-------------------|:-----------|\n| 1  | A    | 进一步拓展结果条件类 | 2024-12-8 21:13:44 | 支持同时指定多个条件 |\n\n# release_0.23.1\n\n| 序号 | 变更类型 | 说明                                          | 时间                  | 备注          |\n|:---|:-----|---------------------------------------------|:--------------------|:------------|\n| 1  | O    | WordResultHandlerWordTags+获取tags时，统一格式化处理优化 | 2024-12-22 12:45:53 |  保持统一，简化词库信息           |\n\n# release_0.24.0\n\n| 序号 | 变更类型 | 说明             | 时间                  | 备注            |\n|:---|:-----|----------------|:--------------------|:--------------|\n| 1  | A    | 内置支持多个单词标签实现策略 | 2024-12-22 14:08:20 | 强化单词标签能力，方便复用 |\n| 2  | O    | 升级 heaven 依赖   | 2024-12-22 14:08:20 |  |"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 20.474609375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2016 ShenHuaJie iBase4J@163.com\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n   \n======================================================================\n   \n                                        Apache许可证 \n                                    版本 2.0，2004年1月\n                                http://www.apache.org/licenses/\n\t\t\t\t\t\t\t\t\t\n   使用、重生成及分发的术语和条件：\n \n   1.定义\n \n     \"许可证\"是指根据本文档第1到第9部分关于使用、重生成和分发的术语和条件。\n \n     \"许可证颁发者\"是指版权所有者或者由版权所有者批准的授权许可证的实体。\n \n     \"法律实体\"是指实施实体和进行控制的所有其它实体受该实体控制，或者受该实体集中控制。\n     根据此定义，\"控制\"是指(i)让无论是否签订协议的上述实体，进行指导或管理的直接权利或间接权利，\n     或者(ii)拥有百分之五十(50%)或以上已发行股票的所有者，或者(iii)上述实体的实权所有者。\n \n     \"用户\"(或\"用户的\")是指行使本许可证所授予权限的个人或法律实体。\n \n     \"源程序\"形式是指对包含但不限制软件源代码、文档源程序和配置文件进行修改的首选形式。\n \n     \"目标\"形式是指对源程序形式进行机械转换或翻译的任何形式，包括但不限于对编译的目标代码，\n     生成的文件以及转换为其它媒体类型。\n \n     \"作品\"是指根据本许可证所制作的源程序形式或目标形式的著作，在著作中包含的或附加的版权通知\n     (在下面附录中提供了一个示例)。\n \n     \"衍生作品\"是指基于作品(或从作品衍生而来)的源程序形式或目标形式的任何作品，以及编辑修订、\n     注释、详细描述或其它修订等构成原创著作作品的整体。根据本许可证，衍生作品不得包括与作品及其\n     衍生作品分离之作品，或仅与作品及其衍生作品的接口相链接(或按名称结合)之作品。\n \n     \"贡献\"是指任何著作作品，包括作品的原始版本和对该作品或衍生作品所做的任何修订或补充，\n     意在提交给许可证颁发者以让版权所有者或代表版权所有者的授权个人或法律实体包含在其作品中。\n     根据此定义，\"提交\"一词表示发送给许可证颁发者或其代表人，任何电子的、口头的或书面的交流信息形式，\n     包括但不限于在由许可证颁发者或者代表其管理的电子邮件清单、源代码控制系统、以及发布跟踪系统上为\n     讨论和提高作品的交流，但不包括由版权所有者以书面形式明显标注或指定为\"非贡献\"的交流活动。\n \n     \"贡献者\"是指许可证颁发者和代表从许可证颁发者接受之贡献的并随后包含在作品之贡献中的任何个人或法律实体。\n \n   2.版权许可证的授予\n \n     根据本许可证的条款，每个贡献者授予用户永久性的、全球性的、非专有性的、免费的、无版权费的、\n     不可撤销的版权许可证以源程序形式或目标形式复制、准备衍生作品、公开显示、公开执行、\n     授予分许可证、以及分发作品和这样的衍生作品。\n \n   3.专利许可证的授予\n \n     根据本许可证的条款，每个贡献者授予用户永久性的、全球性的、非专有性的、免费的、无版权费的、\n     不可撤销的(除在本部分进行说明)专利许可证对作品进行制作、让人制作、使用、提供销售、销售、\n     进口和其它转让，且这样的许可证仅适用于在所递交作品的贡献中因可由单一的或多个这样的贡献者\n     授予而必须侵犯的申请专利。如果用户对任何实体针对作品或作品中所涉及贡献提出因直接性或贡献性\n     专利侵权而提起专利法律诉讼(包括交互诉讼请求或反索赔)，那么根据本许可证，授予用户针对作品\n     的任何专利许可证将在提起上述诉讼之日起终止。\n \n   4.重新分发\n \n     用户可在任何媒介中复制和分发作品或衍生作品之副本，无论是否修订，还是以源程序形式或目标形式，\n     条件是用户需满足下列条款：\n \n     a) 用户必须为作品或衍生作品的任何其他接收者提供本许可证的副本；并且\n   \n     b) 用户必须让任何修改过的文件附带明显的通知，声明用户已更改文件；并且\n   \n     c) 用户必须从作品的源程序形式中保留衍生作品源程序形式的用户所分发的所有版权、专利、\n        商标和属性通知，但不包括不属于衍生作品任何部分的类似通知；并且\n   \n     d) 如果作品将\"通知\"文本文件包括为其分发作品的一部分，那么用户分发的任何衍生作品中须至少\n        在下列地方之一包括，在这样的通知文件中所包含的属性通知的可读副本，但不包括那些不属于衍生\n\t    作品任何部分的通知：在作为衍生作品一部分而分发的通知文本文件中；如果与衍生作品一起提供则\n\t    在源程序形式或文件中；或者通常作为第三方通知出现的时候和地方，在衍生作品中产生的画面中。\n\t    通知文件的内容仅供信息提供，并未对许可证进行修改。用户可在其分发的衍生作品中在作品的通知\n\t    文本后或作为附录添加自己的属性通知，条件是附加的属性通知不得构成修改本许可证。\n   \n     用户可以为自身所做出的修订添加自己的版权声明并可对自身所做出修订内容或为这样的衍生作品作为\n     整体的使用、复制或分发提供附加或不同的条款，条件是用户对作品的使用、复制和分发必须符合本许\n     可证中声明的条款。\n \n   5.贡献的提交。\n \n     除非用户明确声明，在作品中由用户向许可证颁发者的提交若要包含在贡献中，必须在无任何附加条款下\n     符合本许可证的条款。尽管上面如此规定，执行许可证颁发者有关贡献的条款时，任何情况下均不得替代\n     或修改任何单独许可证协议的条款。\n \n   6.商标。本许可证并未授予用户使用许可证颁发者的商号、商标、服务标记或产品名称，除非将这些名称\n     用于合理性和惯例性描述作品起源和复制通知文件的内容时。\n\t \n   7.保证否认条款。除非因适用法律需要或书面同意，许可证颁发者以\"按原样\"基础提供作品(并且每个\n     贡献者提供其贡献)，无任何明示的或暗示的保证或条件，包括但不限于关于所有权、不侵权、\n\t 商品适销性、或适用性的保证或条件。用户仅对使用或重新分发作品的正确性负责，并需承担根据本\n\t 许可证行使权限时的任何风险。\n\t \n   8.责任限制条款。在任何情况下并根据任何法律，无论是因侵权(包括过失)或根据合同，还是其它原因，\n     除非根据适用法律需要(例如故意行为和重大过失行为)或经书面同意，即使贡献者事先已被告知发生\n     损害的可能性，任何贡献者不就用户因使用本许可证或不能使用或无法使用作品(包括但不限于商誉损失、\n     停工、计算机失效或故障，或任何商业损坏或损失)而造成的损失，包括直接的、非直接的、特殊的、意外\n     的或间接的字符损坏而负责。\n   \n   9.接受保证或附加责任。重新分发作品或及其衍生作品时，用户可选择提供或为符合本许可证承担之支持、\n     担保、赔偿或其它职责义务和/或权利而收取费用。但是，在承担上述义务时，用户只可代表用户本身和\n     用户本身责任来执行，无需代表任何其它贡献者，并且用户仅可保证、防护并保持每个贡献者不受任何\n     因此而产生的责任或对因用户自身承担这样的保证或附加责任而对这样的贡献者所提出的索赔。\n   \n   条款结束\n \n   附录：如何向用户作品中应用Apache许可证。\n \n   若要向用户作品应用Apache许可证，请附加下列样本通知，将括号\"[]\"中的字段以用户自身的\n   区分信息来替换(但不包括括号)。文本必须以文件格式适当的注释句法包含在其中。\n   另外建议将文件名或类别名以及目的说明包含在相同的\"打印页\"上作为版权通知，以更加容易的区分出第三方档案。\n \n   版权所有 2016 ShenHuaJie iBase4J@163.com 根据2.0版本Apache许可证(\"许可证\")授权；\n   根据本许可证，用户可以不使用此文件。\n   \n   用户可从下列网址获得许可证副本：http://www.apache.org/licenses/LICENSE-2.0\n   除非因适用法律需要或书面同意，根据许可证分发的软件是基于\"按原样\"基础提供，\n   无任何明示的或暗示的保证或条件。详见根据许可证许可下，特定语言的管辖权限和限制。\n\n   =======================================================\n\n   简要解释：\n   \n   1.需要给代码的用户一份Apache Licence\n   2.如果你修改了代码，需要在被修改的文件中说明。\n   3.在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，\n     专利声明和其他原来作者规定需要包含的说明。\n   4.如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有 Apache Licence。\n     你可以在Notice中增加自己的许可，但不可以表现为对Apache Licence构成更改。"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 42.703125,
          "content": "# sensitive-word\n\n[sensitive-word](https://github.com/houbb/sensitive-word) 基于 DFA 算法实现的高性能敏感词工具。\n\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.houbb/sensitive-word/badge.svg)](http://mvnrepository.com/artifact/com.github.houbb/sensitive-word)\n[![Open Source Love](https://badges.frapsoft.com/os/v2/open-source.svg?v=103)](https://github.com/houbb/sensitive-word)\n[![](https://img.shields.io/badge/license-Apache2-FF0080.svg)](https://github.com/houbb/sensitive-word/blob/master/LICENSE.txt)\n\n> [在线体验](https://houbb.github.io/opensource/sensitive-word)\n\n如果有一些疑难杂症，可以加入：[技术交流群](https://mp.weixin.qq.com/s/rkSvXxiiLGjl3S-ZOZCr0Q)\n\n[sensitive-word-admin](https://github.com/houbb/sensitive-word-admin) 是对应的控台的应用，目前功能处于初期开发中，MVP 版本可用。\n\n## 创作目的\n\n大家好，我是老马。\n\n一直想实现一款简单好用敏感词工具，于是开源实现了这个工具。\n\n基于 DFA 算法实现，目前敏感词库内容收录 6W+（源文件 18W+，经过一次删减）。\n\n后期将进行持续优化和补充敏感词库，并进一步提升算法的性能。\n\nv0.24.0 开始内置支持对敏感词的分类细化，不过工作量比较大，难免存在疏漏。\n\n欢迎 PR 改进， github 提需求，或者加入技术交流群沟通吹牛！\n\n## 特性\n\n- 6W+ 词库，且不断优化更新\n\n- 基于 fluent-api 实现，使用优雅简洁\n\n- [基于 DFA 算法，性能为 7W+ QPS，应用无感](https://github.com/houbb/sensitive-word#benchmark)\n\n- [支持敏感词的判断、返回、脱敏等常见操作](https://github.com/houbb/sensitive-word#%E6%A0%B8%E5%BF%83%E6%96%B9%E6%B3%95)\n\n- [支持常见的格式转换](https://github.com/houbb/sensitive-word#%E6%9B%B4%E5%A4%9A%E7%89%B9%E6%80%A7)\n\n全角半角互换、英文大小写互换、数字常见形式的互换、中文繁简体互换、英文常见形式的互换、忽略重复词等\n\n- [支持敏感词检测、邮箱检测、数字检测、网址检测、IPV4等](https://github.com/houbb/sensitive-word#%E6%9B%B4%E5%A4%9A%E6%A3%80%E6%B5%8B%E7%AD%96%E7%95%A5)\n\n- [支持自定义替换策略](https://github.com/houbb/sensitive-word#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9B%BF%E6%8D%A2%E7%AD%96%E7%95%A5)\n\n- [支持用户自定义敏感词和白名单](https://github.com/houbb/sensitive-word#%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8)\n\n- [支持数据的数据动态更新（用户自定义），实时生效](https://github.com/houbb/sensitive-word#%E5%8A%A8%E6%80%81%E5%8A%A0%E8%BD%BD%E7%94%A8%E6%88%B7%E8%87%AA%E5%AE%9A%E4%B9%89)\n\n- [支持敏感词的标签接口+内置分类实现](https://github.com/houbb/sensitive-word#%E6%95%8F%E6%84%9F%E8%AF%8D%E6%A0%87%E7%AD%BE)\n\n- [支持跳过一些特殊字符，让匹配更灵活](https://github.com/houbb/sensitive-word#%E5%BF%BD%E7%95%A5%E5%AD%97%E7%AC%A6)\n\n- [支持黑白名单单个的新增/修改，无需全量初始化](https://github.com/houbb/sensitive-word?tab=readme-ov-file#%E9%92%88%E5%AF%B9%E5%8D%95%E4%B8%AA%E8%AF%8D%E7%9A%84%E6%96%B0%E5%A2%9E%E5%88%A0%E9%99%A4%E6%97%A0%E9%9C%80%E5%85%A8%E9%87%8F%E5%88%9D%E5%A7%8B%E5%8C%96)\n\n## 变更日志\n\n[CHANGE_LOG.md](https://github.com/houbb/sensitive-word/blob/master/CHANGE_LOG.md)\n\n### V0.23.0\n\n- 结果条件拓展支持 wordTags 和 chains \n\n### V0.24.0\n\n- 初步内置实现单词标签，丰富单词标签内置策略\n\n## 更多资料\n\n### 敏感词控台\n\n有时候敏感词有一个控台，配置起来会更加灵活方便。\n\n> [java 如何实现开箱即用的敏感词控台服务？](https://mp.weixin.qq.com/s/rQo75cfMU_OEbTJa0JGMGg)\n\n### 敏感词标签文件\n\n梳理了大量的敏感词标签文件，可以让我们的敏感词更加方便。\n\n这两个资料阅读可在下方文章获取：\n\n> [v0.11.0-敏感词新特性及对应标签文件](https://mp.weixin.qq.com/s/m40ZnR6YF6WgPrArUSZ_0g)\n\n目前 v0.24.0 已内置实现单词标签，需要的建议升级到最新版本。\n\n# 支持开源\n\n开源不易，如果本项目对你有帮助，你可以请老马喝一杯奶茶。\n\n<img src=\"https://github.com/houbb/sensitive-word/raw/master/lmxxf_reword.png?raw=true\" style=\"width: 300px; height: 200px;\"/>\n\n# 快速开始\n\n## 准备\n\n- JDK1.8+\n\n- Maven 3.x+\n\n## Maven 引入\n\n```xml\n<dependency>\n    <groupId>com.github.houbb</groupId>\n    <artifactId>sensitive-word</artifactId>\n    <version>0.24.0</version>\n</dependency>\n```\n\n## 核心方法\n\n`SensitiveWordHelper` 作为敏感词的工具类，核心方法如下：\n\n注意：`SensitiveWordHelper` 提供的都是默认配置。如果你希望进行灵活的自定义配置，可参考 [引导类特性配置](https://github.com/houbb/sensitive-word/?tab=readme-ov-file#%E5%BC%95%E5%AF%BC%E7%B1%BB%E7%89%B9%E6%80%A7%E9%85%8D%E7%BD%AE)\n\n| 方法                                     | 参数                       | 返回值    | 说明           |\n|:---------------------------------------|:-------------------------|:-------|:-------------|\n| contains(String)                       | 待验证的字符串                  | 布尔值    | 验证字符串是否包含敏感词 |\n| replace(String, ISensitiveWordReplace) | 使用指定的替换策略替换敏感词           | 字符串    | 返回脱敏后的字符串    |\n| replace(String, char)                  | 使用指定的 char 替换敏感词         | 字符串    | 返回脱敏后的字符串    |\n| replace(String)                        | 使用 `*` 替换敏感词             | 字符串    | 返回脱敏后的字符串    |\n| findAll(String)                        | 待验证的字符串                  | 字符串列表  | 返回字符串中所有敏感词  |\n| findFirst(String)                      | 待验证的字符串                  | 字符串    | 返回字符串中第一个敏感词 |\n| findAll(String, IWordResultHandler)    | IWordResultHandler 结果处理类 | 字符串列表  | 返回字符串中所有敏感词  |\n| findFirst(String, IWordResultHandler)  | IWordResultHandler 结果处理类 | 字符串    | 返回字符串中第一个敏感词 |\n| tags(String)       | 获取敏感词的标签                 | 敏感词字符串 | 返回敏感词的标签列表   |\n\n\n\n### 判断是否包含敏感词\n\n```java\nfinal String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\n\nAssert.assertTrue(SensitiveWordHelper.contains(text));\n```\n\n### 返回第一个敏感词\n\n```java\nfinal String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\n\nString word = SensitiveWordHelper.findFirst(text);\nAssert.assertEquals(\"五星红旗\", word);\n```\n\nSensitiveWordHelper.findFirst(text) 等价于：\n\n```java\nString word = SensitiveWordHelper.findFirst(text, WordResultHandlers.word());\n```\n\n### 返回所有敏感词\n\n```java\nfinal String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\n\nList<String> wordList = SensitiveWordHelper.findAll(text);\nAssert.assertEquals(\"[五星红旗, 毛主席, 天安门]\", wordList.toString());\n```\n\n返回所有敏感词用法上类似于 SensitiveWordHelper.findFirst()，同样也支持指定结果处理类。\n\nSensitiveWordHelper.findAll(text) 等价于：\n\n```java\nList<String> wordList = SensitiveWordHelper.findAll(text, WordResultHandlers.word());\n```\n\nWordResultHandlers.raw() 可以保留对应的下标信息、类别信息：\n\n```java\nfinal String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\n\n// 默认敏感词标签为空\nList<WordTagsDto> wordList1 = SensitiveWordHelper.findAll(text, WordResultHandlers.wordTags());\nAssert.assertEquals(\"[WordTagsDto{word='五星红旗', tags=[]}, WordTagsDto{word='毛主席', tags=[]}, WordTagsDto{word='天安门', tags=[]}]\", wordList1.toString());\n```\n\n### 默认的替换策略\n\n```java\nfinal String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\nString result = SensitiveWordHelper.replace(text);\nAssert.assertEquals(\"****迎风飘扬，***的画像屹立在***前。\", result);\n```\n\n### 指定替换的内容\n\n```java\nfinal String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\nString result = SensitiveWordHelper.replace(text, '0');\nAssert.assertEquals(\"0000迎风飘扬，000的画像屹立在000前。\", result);\n```\n\n### 自定义替换策略\n\nV0.2.0 支持该特性。\n\n场景说明：有时候我们希望不同的敏感词有不同的替换结果。比如【游戏】替换为【电子竞技】，【失业】替换为【灵活就业】。\n\n诚然，提前使用字符串的正则替换也可以，不过性能一般。\n\n使用例子：\n\n```java\n/**\n * 自定替换策略\n * @since 0.2.0\n */\n@Test\npublic void defineReplaceTest() {\n    final String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\n\n    ISensitiveWordReplace replace = new MySensitiveWordReplace();\n    String result = SensitiveWordHelper.replace(text, replace);\n\n    Assert.assertEquals(\"国家旗帜迎风飘扬，教员的画像屹立在***前。\", result);\n}\n```\n\n其中 `MySensitiveWordReplace` 是我们自定义的替换策略，实现如下：\n\n```java\npublic class MyWordReplace implements IWordReplace {\n\n    @Override\n    public void replace(StringBuilder stringBuilder, final char[] rawChars, IWordResult wordResult, IWordContext wordContext) {\n        String sensitiveWord = InnerWordCharUtils.getString(rawChars, wordResult);\n        // 自定义不同的敏感词替换策略，可以从数据库等地方读取\n        if(\"五星红旗\".equals(sensitiveWord)) {\n            stringBuilder.append(\"国家旗帜\");\n        } else if(\"毛主席\".equals(sensitiveWord)) {\n            stringBuilder.append(\"教员\");\n        } else {\n            // 其他默认使用 * 代替\n            int wordLength = wordResult.endIndex() - wordResult.startIndex();\n            for(int i = 0; i < wordLength; i++) {\n                stringBuilder.append('*');\n            }\n        }\n    }\n\n}\n```\n\n我们针对其中的部分词做固定映射处理，其他的默认转换为 `*`。\n\n## IWordResultHandler 结果处理类\n\nIWordResultHandler 可以对敏感词的结果进行处理，允许用户自定义。\n\n内置实现见 `WordResultHandlers` 工具类：\n\n- WordResultHandlers.word()\n\n只保留敏感词单词本身。\n\n- WordResultHandlers.raw()\n\n保留敏感词相关信息，包含敏感词的开始和结束下标。\n\n- WordResultHandlers.wordTags()\n\n同时保留单词，和对应的词标签信息。\n\n### 使用实例\n\n所有测试案例参见 [SensitiveWordHelperTest](https://github.com/houbb/sensitive-word/blob/master/src/test/java/com/github/houbb/sensitive/word/core/SensitiveWordHelperTest.java)\n\n1）基本例子\n\n```java\nfinal String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\n\nList<String> wordList = SensitiveWordHelper.findAll(text);\nAssert.assertEquals(\"[五星红旗, 毛主席, 天安门]\", wordList.toString());\nList<String> wordList2 = SensitiveWordHelper.findAll(text, WordResultHandlers.word());\nAssert.assertEquals(\"[五星红旗, 毛主席, 天安门]\", wordList2.toString());\n\nList<IWordResult> wordList3 = SensitiveWordHelper.findAll(text, WordResultHandlers.raw());\nAssert.assertEquals(\"[WordResult{startIndex=0, endIndex=4}, WordResult{startIndex=9, endIndex=12}, WordResult{startIndex=18, endIndex=21}]\", wordList3.toString());\n```\n\n2) wordTags 例子\n\n我们在 `dict_tag_test.txt` 文件中指定对应词的标签信息。\n\n```java\nfinal String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\n\n// 默认敏感词标签为空\nList<WordTagsDto> wordList1 = SensitiveWordHelper.findAll(text, WordResultHandlers.wordTags());\nAssert.assertEquals(\"[WordTagsDto{word='五星红旗', tags=[]}, WordTagsDto{word='毛主席', tags=[]}, WordTagsDto{word='天安门', tags=[]}]\", wordList1.toString());\n\nList<WordTagsDto> wordList2 = SensitiveWordBs.newInstance()\n        .wordTag(WordTags.file(\"dict_tag_test.txt\"))\n        .init()\n        .findAll(text, WordResultHandlers.wordTags());\nAssert.assertEquals(\"[WordTagsDto{word='五星红旗', tags=[政治, 国家]}, WordTagsDto{word='毛主席', tags=[政治, 伟人, 国家]}, WordTagsDto{word='天安门', tags=[政治, 国家, 地址]}]\", wordList2.toString());\n```\n\n# 更多特性\n\n后续的诸多特性，主要是针对各种针对各种情况的处理，尽可能的提升敏感词命中率。\n\n这是一场漫长的攻防之战。\n\n## 样式处理\n\n### 忽略大小写\n\n```java\nfinal String text = \"fuCK the bad words.\";\n\nString word = SensitiveWordHelper.findFirst(text);\nAssert.assertEquals(\"fuCK\", word);\n```\n\n### 忽略半角圆角\n\n```java\nfinal String text = \"ｆｕｃｋ the bad words.\";\n\nString word = SensitiveWordHelper.findFirst(text);\nAssert.assertEquals(\"ｆｕｃｋ\", word);\n```\n\n### 忽略数字的写法\n\n这里实现了数字常见形式的转换。\n\n```java\nfinal String text = \"这个是我的微信：9⓿二肆⁹₈③⑸⒋➃㈤㊄\";\n\nList<String> wordList = SensitiveWordBs.newInstance().enableNumCheck(true).init().findAll(text);\nAssert.assertEquals(\"[9⓿二肆⁹₈③⑸⒋➃㈤㊄]\", wordList.toString());\n```\n\n### 忽略繁简体\n\n```java\nfinal String text = \"我爱我的祖国和五星紅旗。\";\n\nList<String> wordList = SensitiveWordHelper.findAll(text);\nAssert.assertEquals(\"[五星紅旗]\", wordList.toString());\n```\n\n### 忽略英文的书写格式\n\n```java\nfinal String text = \"Ⓕⓤc⒦ the bad words\";\n\nList<String> wordList = SensitiveWordHelper.findAll(text);\nAssert.assertEquals(\"[Ⓕⓤc⒦]\", wordList.toString());\n```\n\n### 忽略重复词\n\n```java\nfinal String text = \"ⒻⒻⒻfⓤuⓤ⒰cⓒ⒦ the bad words\";\n\nList<String> wordList = SensitiveWordBs.newInstance()\n        .ignoreRepeat(true)\n        .init()\n        .findAll(text);\nAssert.assertEquals(\"[ⒻⒻⒻfⓤuⓤ⒰cⓒ⒦]\", wordList.toString());\n```\n\n## 更多检测策略\n\n### 邮箱检测\n\n邮箱等个人信息，默认未启用。\n\n```java\nfinal String text = \"楼主好人，邮箱 sensitiveword@xx.com\";\nList<String> wordList = SensitiveWordBs.newInstance().enableEmailCheck(true).init().findAll(text);\nAssert.assertEquals(\"[sensitiveword@xx.com]\", wordList.toString());\n```\n\n### 连续数字检测\n\n一般用于过滤手机号/QQ等广告信息，默认未启用。\n\nV0.2.1 之后，支持通过 `numCheckLen(长度)` 自定义检测的长度。\n\n```java\nfinal String text = \"你懂得：12345678\";\n\n// 默认检测 8 位\nList<String> wordList = SensitiveWordBs.newInstance()\n.enableNumCheck(true)\n.init().findAll(text);\nAssert.assertEquals(\"[12345678]\", wordList.toString());\n\n// 指定数字的长度，避免误杀\nList<String> wordList2 = SensitiveWordBs.newInstance()\n.enableNumCheck(true)\n.numCheckLen(9)\n.init()\n.findAll(text);\nAssert.assertEquals(\"[]\", wordList2.toString());\n```\n\n### 网址检测\n\n用于过滤常见的网址信息，默认未启用。\n\nv0.18.0 优化 URL 检测，更加严格，降低误判率\n\n```java\nfinal String text = \"点击链接 https://www.baidu.com 查看答案\";\nfinal SensitiveWordBs sensitiveWordBs = SensitiveWordBs.newInstance().enableUrlCheck(true).init();\nList<String> wordList = sensitiveWordBs.findAll(text);\nAssert.assertEquals(\"[https://www.baidu.com]\", wordList.toString());\nAssert.assertEquals(\"点击链接 ********************* 查看答案\", sensitiveWordBs.replace(text));\n```\n\n### IPV4 检测\n\nv0.17.0 支持\n\n避免用户通过 ip 绕过网址检测等，默认未启用。\n\n```java\nfinal String text = \"个人网站，如果网址打不开可以访问 127.0.0.1。\";\nfinal SensitiveWordBs sensitiveWordBs = SensitiveWordBs.newInstance().enableIpv4Check(true).init();\nList<String> wordList = sensitiveWordBs.findAll(text);\nAssert.assertEquals(\"[127.0.0.1]\", wordList.toString());\n```\n\n# 引导类特性配置\n\n## 说明\n\n上面的特性默认都是开启的，有时业务需要灵活定义相关的配置特性。\n\n所以 v0.0.14 开放了属性配置。\n\n## 配置方法\n\n为了让使用更加优雅，统一使用 fluent-api 的方式定义。\n\n用户可以使用 `SensitiveWordBs` 进行如下定义：\n\n注意：配置后，要使用我们新定义的 `SensitiveWordBs` 的对象，而不是以前的工具方法。工具方法配置都是默认的。\n\n```java\nSensitiveWordBs wordBs = SensitiveWordBs.newInstance()\n        .ignoreCase(true)\n        .ignoreWidth(true)\n        .ignoreNumStyle(true)\n        .ignoreChineseStyle(true)\n        .ignoreEnglishStyle(true)\n        .ignoreRepeat(false)\n        .enableNumCheck(false)\n        .enableEmailCheck(false)\n        .enableUrlCheck(false)\n        .enableIpv4Check(false)\n        .enableWordCheck(true)\n        .numCheckLen(8)\n        .wordTag(WordTags.none())\n        .charIgnore(SensitiveWordCharIgnores.defaults())\n        .wordResultCondition(WordResultConditions.alwaysTrue())\n        .init();\n\nfinal String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\nAssert.assertTrue(wordBs.contains(text));\n```\n## 配置说明\n\n其中各项配置的说明如下：\n\n| 序号 | 方法                   | 说明                           | 默认值   |\n|:---|:---------------------|:-----------------------------|:------|\n| 1  | ignoreCase           | 忽略大小写                        | true  |\n| 2  | ignoreWidth          | 忽略半角圆角                       | true  |\n| 3  | ignoreNumStyle       | 忽略数字的写法                      | true  |\n| 4  | ignoreChineseStyle   | 忽略中文的书写格式                    | true  |\n| 5  | ignoreEnglishStyle   | 忽略英文的书写格式                    | true  |\n| 6  | ignoreRepeat         | 忽略重复词                        | false |\n| 7  | enableNumCheck       | 是否启用数字检测。                    | false  |\n| 8  | enableEmailCheck     | 是有启用邮箱检测                     | false  |\n| 9  | enableUrlCheck       | 是否启用链接检测                     | false  |\n| 10 | enableIpv4Check       | 是否启用IPv4检测                   | false  |\n| 11 | enableWordCheck      | 是否启用敏感单词检测                   | true  |\n| 12 | numCheckLen          | 数字检测，自定义指定长度。                | 8     |\n| 13 | wordTag          | 词对应的标签                       | none  |\n| 14 | charIgnore          | 忽略的字符                        | none  |\n| 15 | wordResultCondition          | 针对匹配的敏感词额外加工，比如可以限制英文单词必须全匹配 | 恒为真   |\n\n## 内存资源的释放\n\nv0.16.1 开始支持，有时候我们需要释放内存，可以如下：\n\n> [关于内存回收问题](https://github.com/houbb/sensitive-word/issues/53)\n\n```java\nSensitiveWordBs wordBs = SensitiveWordBs.newInstance()\n                .init();\n// 后续因为一些原因移除了对应信息，希望释放内存。\nwordBs.destroy();\n```\n\n## 针对单个黑名单词的新增/删除，无需全量初始化\n\n使用场景：在初始化之后，我们希望针对单个词的新增/删除，而不是完全重新初始化。这个特性就是为此准备的。\n\n支持版本：v0.19.0\n\n### 方法说明 \n\n`addWord(word)` 新增敏感词，支持单个词/集合\n\n`removeWord(word)` 删除敏感词，支持单个词/集合\n\n### 实例代码：\n\n```java\nfinal String text = \"测试一下新增敏感词，验证一下删除和新增对不对\";\n\nSensitiveWordBs sensitiveWordBs =\nSensitiveWordBs.newInstance()\n        .wordAllow(WordAllows.empty())\n        .wordDeny(WordDenys.empty())\n        .init();\n\n// 当前\nAssert.assertEquals(\"[]\", sensitiveWordBs.findAll(text).toString());\n\n// 新增单个\nsensitiveWordBs.addWord(\"测试\");\nsensitiveWordBs.addWord(\"新增\");\nAssert.assertEquals(\"[测试, 新增, 新增]\", sensitiveWordBs.findAll(text).toString());\n\n// 删除单个\nsensitiveWordBs.removeWord(\"新增\");\nAssert.assertEquals(\"[测试]\", sensitiveWordBs.findAll(text).toString());\nsensitiveWordBs.removeWord(\"测试\");\nAssert.assertEquals(\"[]\", sensitiveWordBs.findAll(text).toString());\n\n// 新增集合\nsensitiveWordBs.addWord(Arrays.asList(\"新增\", \"测试\"));\nAssert.assertEquals(\"[测试, 新增, 新增]\", sensitiveWordBs.findAll(text).toString());\n// 删除集合\nsensitiveWordBs.removeWord(Arrays.asList(\"新增\", \"测试\"));\nAssert.assertEquals(\"[]\", sensitiveWordBs.findAll(text).toString());\n\n// 新增数组\nsensitiveWordBs.addWord(\"新增\", \"测试\");\nAssert.assertEquals(\"[测试, 新增, 新增]\", sensitiveWordBs.findAll(text).toString());\n// 删除集合\nsensitiveWordBs.removeWord(\"新增\", \"测试\");\nAssert.assertEquals(\"[]\", sensitiveWordBs.findAll(text).toString());\n```\n\n## 针对单个白名单词的新增/删除，无需全量初始化\n\n使用场景：在初始化之后，我们希望针对单个词的新增/删除，而不是完全重新初始化。这个特性就是为此准备的。\n\n支持版本：v0.21.0\n\n### 方法说明\n\n`addWordAllow(word)` 新增白名单，支持单个词/集合\n\n`removeWordAllow(word)` 删除白名单，支持单个词/集合\n\n### 使用例子\n\n```java\n        final String text = \"测试一下新增敏感词白名单，验证一下删除和新增对不对\";\n\n        SensitiveWordBs sensitiveWordBs =\n                SensitiveWordBs.newInstance()\n                        .wordAllow(WordAllows.empty())\n                        .wordDeny(new IWordDeny() {\n                            @Override\n                            public List<String> deny() {\n                                return Arrays.asList(\"测试\", \"新增\");\n                            }\n                        })\n                        .init();\n\n        // 当前\n        Assert.assertEquals(\"[测试, 新增, 新增]\", sensitiveWordBs.findAll(text).toString());\n\n        // 新增单个\n        sensitiveWordBs.addWordAllow(\"测试\");\n        sensitiveWordBs.addWordAllow(\"新增\");\n        Assert.assertEquals(\"[]\", sensitiveWordBs.findAll(text).toString());\n\n        // 删除单个\n        sensitiveWordBs.removeWordAllow(\"测试\");\n        Assert.assertEquals(\"[测试]\", sensitiveWordBs.findAll(text).toString());\n        sensitiveWordBs.removeWordAllow(\"新增\");\n        Assert.assertEquals(\"[测试, 新增, 新增]\", sensitiveWordBs.findAll(text).toString());\n\n        // 新增集合\n        sensitiveWordBs.addWordAllow(Arrays.asList(\"新增\", \"测试\"));\n        Assert.assertEquals(\"[]\", sensitiveWordBs.findAll(text).toString());\n        // 删除集合\n        sensitiveWordBs.removeWordAllow(Arrays.asList(\"新增\", \"测试\"));\n        Assert.assertEquals(\"[测试, 新增, 新增]\", sensitiveWordBs.findAll(text).toString());\n\n        // 新增数组\n        sensitiveWordBs.addWordAllow(\"新增\", \"测试\");\n        Assert.assertEquals(\"[]\", sensitiveWordBs.findAll(text).toString());\n        // 删除集合\n        sensitiveWordBs.removeWordAllow(\"新增\", \"测试\");\n        Assert.assertEquals(\"[测试, 新增, 新增]\", sensitiveWordBs.findAll(text).toString());\n```\n\n## 全量初始化\n\n### 说明\n\n此方式**已废弃**，建议使用上面增量添加的方式，避免全量加载。为了兼容，此方式依然保留。\n\n使用方式：在调用 `sensitiveWordBs.init()` 的时候，根据 IWordDeny+IWordAllow 重新构建敏感词库。 因为初始化可能耗时较长（秒级别），所有优化为 init 未完成时**不影响旧的词库功能，完成后以新的为准**。\n\n### 例子\n\n```java\n@Component\npublic class SensitiveWordService {\n\n    @Autowired\n    private SensitiveWordBs sensitiveWordBs;\n\n    /**\n     * 更新词库\n     *\n     * 每次数据库的信息发生变化之后，首先调用更新数据库敏感词库的方法。\n     * 如果需要生效，则调用这个方法。\n     *\n     * 说明：重新初始化不影响旧的方法使用。初始化完成后，会以新的为准。\n     */\n    public void refresh() {\n        // 每次数据库的信息发生变化之后，首先调用更新数据库敏感词库的方法，然后调用这个方法。\n        sensitiveWordBs.init();\n    }\n\n}\n```\n\n如上，你可以在数据库词库发生变更时，需要词库生效，主动触发一次初始化 `sensitiveWordBs.init();`。\n\n其他使用保持不变，无需重启应用。\n\n# wordResultCondition-针对匹配词进一步判断\n\n## 说明\n\n支持版本：v0.13.0\n\n有时候我们可能希望对匹配的敏感词进一步限制，比如虽然我们定义了【av】作为敏感词，但是不希望【have】被匹配。\n\n就可以自定义实现 wordResultCondition 接口，实现自己的策略。\n\n系统内置的策略在 `WordResultConditions#alwaysTrue()` 恒为真，`WordResultConditions#englishWordMatch()` 则要求英文必须全词匹配。\n\n## 内置策略\n\nWordResultConditions 工具类可以获取匹配策略\n\n| 实现                                         | 说明                  | 支持版本    |\n|:-------------------------------------------|:--------------------|:--------|\n| alwaysTrue                                 | 恒为真                 |         |\n| englishWordMatch                           | 英文单词全词匹配            | v0.13.0 |\n| englishWordNumMatch                        | 英文单词/数字全词匹配         | v0.20.0 |\n| wordTags                                   | 满足特定标签的，比如只关注【广告】标签 | v0.23.0 |\n| chains(IWordResultCondition ...conditions) | 支持指定多个条件，同时满足       | v0.23.0 |\n\n## 使用例子\n\n原始的默认情况：\n\n```java\nfinal String text = \"I have a nice day。\";\n\nList<String> wordList = SensitiveWordBs.newInstance()\n        .wordDeny(new IWordDeny() {\n            @Override\n            public List<String> deny() {\n                return Collections.singletonList(\"av\");\n            }\n        })\n        .wordResultCondition(WordResultConditions.alwaysTrue())\n        .init()\n        .findAll(text);\nAssert.assertEquals(\"[av]\", wordList.toString());\n```\n\n我们可以指定为英文必须全词匹配。\n\n```java\nfinal String text = \"I have a nice day。\";\n\nList<String> wordList = SensitiveWordBs.newInstance()\n        .wordDeny(new IWordDeny() {\n            @Override\n            public List<String> deny() {\n                return Collections.singletonList(\"av\");\n            }\n        })\n        .wordResultCondition(WordResultConditions.englishWordMatch())\n        .init()\n        .findAll(text);\nAssert.assertEquals(\"[]\", wordList.toString());\n```\n\n当然可以根据需要实现更加复杂的策略。\n\n## wordTags 单词标签\n\n支持版本： `v0.23.0`\n\n我们可以只返回隶属于某一种标签的敏感词。\n\n我们指定了两个敏感词：商品、AV\n\nMyWordTag 是我们定义的一个敏感词标签实现：\n\n```java\n/**\n * 自定义单词标签\n * @since 0.23.0\n */\npublic class MyWordTag extends AbstractWordTag {\n\n    private static Map<String, Set<String>> dataMap;\n\n    static {\n        dataMap = new HashMap<>();\n        dataMap.put(\"商品\", buildSet(\"广告\", \"中文\"));\n        dataMap.put(\"AV\", buildSet(\"色情\", \"单词\", \"英文\"));\n    }\n\n    private static Set<String> buildSet(String... tags) {\n        Set<String> set = new HashSet<>();\n        for(String tag : tags) {\n            set.add(tag);\n        }\n        return set;\n    }\n\n    @Override\n    protected Set<String> doGetTag(String word) {\n        return dataMap.get(word);\n    }\n\n}\n```\n\n测试用例如下，我们模拟了两个不同的实现类，每一个关注的单词标签不同。\n\n```java\n// 只关心SE情\nSensitiveWordBs sensitiveWordBsYellow = SensitiveWordBs.newInstance()\n        .wordDeny(new IWordDeny() {\n            @Override\n            public List<String> deny() {\n                return Arrays.asList(\"商品\", \"AV\");\n            }\n        })\n        .wordAllow(WordAllows.empty())\n        .wordTag(new MyWordTag())\n        .wordResultCondition(WordResultConditions.wordTags(Arrays.asList(\"色情\")))\n        .init();\n\n// 只关心广告\nSensitiveWordBs sensitiveWordBsAd = SensitiveWordBs.newInstance()\n        .wordDeny(new IWordDeny() {\n            @Override\n            public List<String> deny() {\n                return Arrays.asList(\"商品\", \"AV\");\n            }\n        })\n        .wordAllow(WordAllows.empty())\n        .wordTag(new MyWordTag())\n        .wordResultCondition(WordResultConditions.wordTags(Arrays.asList(\"广告\")))\n        .init();\n\nfinal String text = \"这些 AV 商品什么价格？\";\nAssert.assertEquals(\"[AV]\", sensitiveWordBsYellow.findAll(text).toString());\nAssert.assertEquals(\"[商品]\", sensitiveWordBsAd.findAll(text).toString());\n```\n\n# 忽略字符\n\n## 说明\n\n我们的敏感词一般都是比较连续的，比如【傻帽】\n\n那就有大聪明发现，可以在中间加一些字符，比如【傻!@#$帽】跳过检测，但是骂人等攻击力不减。\n\n那么，如何应对这些类似的场景呢？\n\n我们可以指定特殊字符的跳过集合，忽略掉这些无意义的字符即可。\n\nv0.11.0 开始支持\n\n## 例子\n\n其中 charIgnore 对应的字符策略，用户可以自行灵活定义。\n\n```java\nfinal String text = \"傻@冒，狗+东西\";\n\n//默认因为有特殊字符分割，无法识别\nList<String> wordList = SensitiveWordBs.newInstance().init().findAll(text);\nAssert.assertEquals(\"[]\", wordList.toString());\n\n// 指定忽略的字符策略，可自行实现。\nList<String> wordList2 = SensitiveWordBs.newInstance()\n        .charIgnore(SensitiveWordCharIgnores.specialChars())\n        .init()\n        .findAll(text);\n\nAssert.assertEquals(\"[傻@冒, 狗+东西]\", wordList2.toString());\n```\n\n# 敏感词标签\n\n## 说明\n\n有时候我们希望对敏感词加一个分类标签：比如社情、暴/力等等。\n\n这样后续可以按照标签等进行更多特性操作，比如只处理某一类的标签。\n\n支持版本：v0.10.0\n\n主要特性支持版本：v0.24.0\n\n## 标签接口\n\n这里只是一个抽象的接口，用户可以自行定义实现。比如从数据库查询、文件读取、api 调用等。\n\n```java\npublic interface IWordTag {\n\n    /**\n     * 查询标签列表\n     * @param word 脏词\n     * @return 结果\n     */\n    Set<String> getTag(String word);\n\n}\n```\n\n## 内置实现\n\n### 方法列表\n\n为了方便大部分情况使用，内置实现一些场景策略在 `WordTags` 类中\n\n| 实现方法                                                              | 说明                   | 备注         |\n|:------------------------------------------------------------------|:---------------------|:-----------|\n| none()                                                            | 空实现                  | v0.10.0 支持 |\n| file(String filePath)                                             | 指定文件路径               | v0.10.0 支持 |\n| file(String filePath, String wordSplit, String tagSplit)          | 指定文件路径，以及单词分隔符、标签分隔符 | v0.10.0 支持 |\n| map(final Map<String, Set<String>> wordTagMap)                    | 根据 map初始化            | v0.24.0 支持 |\n| lines(Collection<String> lines)                                   | 字符串列表                | v0.24.0 支持 |\n| lines(Collection<String> lines, String wordSplit, String tagSpli) | 字符串列表，以及单词分隔符、标签分隔符  | v0.24.0 支持 |\n| system()                                                          | 系件文件内置实现，整合网络分类      | v0.24.0 支持 |\n| defaults()                                                        | 默认策略，目前为 system      | v0.24.0 支持 |\n| chains(IWordTag... others)                 | 链式方法，支持用户整合实现多个策略    | v0.24.0 支持 |\n\n### 格式约定\n\n敏感词标签的格式我们默认约定如下 `敏感词 tag1,tag2`，代表这 `敏感词` 的标签为 tag1 和 tag2\n\n比如 \n\n```\n五星红旗 政治,国家\n```\n\n所有的文件行内容，和指定的字符串行内容也建议用这种方式。如果不满足，自定义实现即可。\n\n## 系统内置实现（默认效果）\n\nv0.24.0 版本开始，默认的单词标签为 `WordTags.system()`。\n\n说明：目前数据统计自网络，存在不少疏漏。也欢迎大家指正，持续改进中...\n\n```java\nSensitiveWordBs sensitiveWordBs = SensitiveWordBs.newInstance()\n.wordTag(WordTags.system())\n.init();\nSet<String> tagSet = sensitiveWordBs.tags(\"博彩\");\nAssert.assertEquals(\"[3]\", tagSet.toString());\n```\n\n这里为了压缩大小优化，对应的类别用数字表示。\n\n数字的含义列表如下：\n\n```\n0 政治\n1 毒品\n2 色情\n3 赌博\n4 违法\n```\n\n## 文件入门例子\n\n这里以文件为例子，演示一下如何使用。\n\n```java\nfinal String path = \"~\\\\test\\\\resources\\\\dict_tag_test.txt\";\n\n// 演示默认方法\nIWordTag wordTag = WordTags.file(path);\nSensitiveWordBs sensitiveWordBs = SensitiveWordBs.newInstance()\n        .wordTag(wordTag)\n        .init();\n\nSet<String> tagSet = sensitiveWordBs.tags(\"零售\");\n        Assert.assertEquals(\"[广告, 网络]\", tagSet.toString());\n\n\n// 演示指定分隔符\nIWordTag wordTag2 = WordTags.file(path, \" \", \",\");\nSensitiveWordBs sensitiveWordBs2 = SensitiveWordBs.newInstance()\n        .wordTag(wordTag2)\n        .init();\nSet<String> tagSet2 = sensitiveWordBs2.tags(\"零售\");\n        Assert.assertEquals(\"[广告, 网络]\", tagSet2.toString());\n```\n\n其中 `dict_tag_test.txt` 我们自定义的内容如下：\n\n```\n零售 广告,网络\n```\n\n## 单词标签和敏感词发现的联动\n\n我们在获取敏感词的时候，是可以设置对应的结果处理策略，从而获取对应的敏感词标签信息\n\n```java\n// 自定义测试标签类\nIWordTag wordTag = WordTags.lines(Arrays.asList(\"天安门 政治,国家,地址\"));\n\n// 指定初始化\nSensitiveWordBs sensitiveWordBs = SensitiveWordBs.newInstance()\n        .wordTag(wordTag)\n        .init()\n        ;\n\nList<WordTagsDto> wordTagsDtoList1 = sensitiveWordBs.findAll(\"天安门\", WordResultHandlers.wordTags());\nAssert.assertEquals(\"[WordTagsDto{word='天安门', tags=[政治, 国家, 地址]}]\", wordTagsDtoList1.toString());\n```\n\n我们自定义了 `天安门` 关键词的标签，然后通过指定 findAll 的结果处理策略为 `WordResultHandlers.wordTags()`，就可以在获取敏感词的同时，获取对应的标签列表。\n\n# 动态加载（用户自定义）\n\n## 情景说明\n\n有时候我们希望将敏感词的加载设计成动态的，比如控台修改，然后可以实时生效。\n\nv0.0.13 支持了这种特性。\n\n## 接口说明\n\n为了实现这个特性，并且兼容以前的功能，我们定义了两个接口。\n\n### IWordDeny\n\n接口如下，可以自定义自己的实现。\n\n返回的列表，表示这个词是一个敏感词。\n\n```java\n/**\n * 拒绝出现的数据-返回的内容被当做是敏感词\n * @author binbin.hou\n * @since 0.0.13\n */\npublic interface IWordDeny {\n\n    /**\n     * 获取结果\n     * @return 结果\n     * @since 0.0.13\n     */\n    List<String> deny();\n\n}\n```\n\n比如：\n\n```java\npublic class MyWordDeny implements IWordDeny {\n\n    @Override\n    public List<String> deny() {\n        return Arrays.asList(\"我的自定义敏感词\");\n    }\n\n}\n```\n\n### IWordAllow\n\n接口如下，可以自定义自己的实现。\n\n返回的列表，表示这个词不是一个敏感词。\n\n```java\n/**\n * 允许的内容-返回的内容不被当做敏感词\n * @author binbin.hou\n * @since 0.0.13\n */\npublic interface IWordAllow {\n\n    /**\n     * 获取结果\n     * @return 结果\n     * @since 0.0.13\n     */\n    List<String> allow();\n\n}\n```\n\n如：\n\n```java\npublic class MyWordAllow implements IWordAllow {\n\n    @Override\n    public List<String> allow() {\n        return Arrays.asList(\"五星红旗\");\n    }\n\n}\n```\n\n## 配置使用\n\n**接口自定义之后，当然需要指定才能生效。**\n\n为了让使用更加优雅，我们设计了引导类 `SensitiveWordBs`。\n\n可以通过 wordDeny() 指定敏感词，wordAllow() 指定非敏感词，通过 init() 初始化敏感词字典。\n\n### 系统的默认配置\n\n```java\nSensitiveWordBs wordBs = SensitiveWordBs.newInstance()\n        .wordDeny(WordDenys.defaults())\n        .wordAllow(WordAllows.defaults())\n        .init();\n\nfinal String text = \"五星红旗迎风飘扬，毛主席的画像屹立在天安门前。\";\nAssert.assertTrue(wordBs.contains(text));\n```\n\n备注：init() 对于敏感词 DFA 的构建是比较耗时的，一般建议在应用初始化的时候**只初始化一次**。而不是重复初始化！\n\n### 指定自己的实现\n\n我们可以测试一下自定义的实现，如下:\n\n```java\nString text = \"这是一个测试，我的自定义敏感词。\";\n\nSensitiveWordBs wordBs = SensitiveWordBs.newInstance()\n        .wordDeny(new MyWordDeny())\n        .wordAllow(new MyWordAllow())\n        .init();\n\nAssert.assertEquals(\"[我的自定义敏感词]\", wordBs.findAll(text).toString());\n```\n\n这里只有 `我的自定义敏感词` 是敏感词，而 `测试` 不是敏感词。\n\n当然，这里是全部使用我们自定义的实现，一般建议使用系统的默认配置+自定义配置。\n\n可以使用下面的方式。\n\n### 同时配置多个\n\n- 多个敏感词\n\n`WordDenys.chains()` 方法，将多个实现合并为同一个 IWordDeny。\n\n- 多个白名单\n\n`WordAllows.chains()` 方法，将多个实现合并为同一个 IWordAllow。\n\n例子：\n\n```java\nString text = \"这是一个测试。我的自定义敏感词。\";\n\nIWordDeny wordDeny = WordDenys.chains(WordDenys.defaults(), new MyWordDeny());\nIWordAllow wordAllow = WordAllows.chains(WordAllows.defaults(), new MyWordAllow());\n\nSensitiveWordBs wordBs = SensitiveWordBs.newInstance()\n        .wordDeny(wordDeny)\n        .wordAllow(wordAllow)\n        .init();\n\nAssert.assertEquals(\"[我的自定义敏感词]\", wordBs.findAll(text).toString());\n```\n\n这里都是同时使用了系统默认配置，和自定义的配置。\n\n注意：**我们初始化了新的 wordBs，那么用新的 wordBs 去判断。而不是用以前的 `SensitiveWordHelper` 工具方法，工具方法配置是默认的！**\n\n# spring 整合\n\n## 背景\n\n实际使用中，比如可以在页面配置修改，然后实时生效。\n\n数据存储在数据库中，下面是一个伪代码的例子，可以参考 [SpringSensitiveWordConfig.java](https://github.com/houbb/sensitive-word/blob/master/src/test/java/com/github/houbb/sensitive/word/spring/SpringSensitiveWordConfig.java)\n\n要求，版本 v0.0.15 及其以上。\n\n## 自定义数据源\n\n简化伪代码如下，数据的源头为数据库。\n\nMyDdWordAllow 和 MyDdWordDeny 是基于数据库为源头的自定义实现类。\n\n```java\n@Configuration\npublic class SpringSensitiveWordConfig {\n\n    @Autowired\n    private MyDdWordAllow myDdWordAllow;\n\n    @Autowired\n    private MyDdWordDeny myDdWordDeny;\n\n    /**\n     * 初始化引导类\n     * @return 初始化引导类\n     * @since 1.0.0\n     */\n    @Bean\n    public SensitiveWordBs sensitiveWordBs() {\n        SensitiveWordBs sensitiveWordBs = SensitiveWordBs.newInstance()\n                .wordAllow(WordAllows.chains(WordAllows.defaults(), myDdWordAllow))\n                .wordDeny(myDdWordDeny)\n                // 各种其他配置\n                .init();\n\n        return sensitiveWordBs;\n    }\n\n}\n```\n\n敏感词库的初始化较为耗时，建议程序启动时做一次 init 初始化。\n\n# Benchmark\n\nV0.6.0 以后，添加对应的 benchmark 测试。\n\n> [BenchmarkTimesTest](https://github.com/houbb/sensitive-word/blob/master/src/test/java/com/github/houbb/sensitive/word/benchmark/BenchmarkTimesTest.java)\n\n## 环境\n\n测试环境为普通的笔记本:\n\n```\n处理器\t12th Gen Intel(R) Core(TM) i7-1260P   2.10 GHz\n机带 RAM\t16.0 GB (15.7 GB 可用)\n系统类型\t64 位操作系统, 基于 x64 的处理器\n```\n\nps: 不同环境会有差异，但是比例基本稳定。\n\n## 测试效果记录\n\n测试数据：100+ 字符串，循环 10W 次。\n\n| 序号 | 场景               | 耗时 | 备注            |\n|:----|:-----------------|:----|:--------------|\n| 1 | 只做敏感词，无任何格式转换    | 1470ms，约 7.2W QPS | 追求极致性能，可以这样配置 |\n| 2 | 只做敏感词，支持全部格式转换  | 2744ms，约 3.7W QPS | 满足大部分场景       |\n\n# STAR\n\n[![Stargazers over time](https://starchart.cc/houbb/sensitive-word.svg)](https://starchart.cc/houbb/sensitive-word)\n\n# 后期 road-map\n\n- [x] 移除单个汉字的敏感词，在中国，要把词组当做一次词，降低误判率。\n\n- [x] 支持单个的敏感词变化？\n\nremove、add、edit?\n\n- [x] 敏感词标签接口支持\n\n- [x] 敏感词处理时标签支持\n\n- [x] wordData 的内存占用对比 + 优化\n\n- [x] 用户指定自定义的词组，同时允许指定词组的组合获取，更加灵活\n\nFormatCombine/CheckCombine/AllowDenyCombine 组合策略，允许用户自定义。\n\n- [ ] word check 策略的优化，统一遍历+转换\n\n- [ ] 添加 ThreadLocal 等性能优化\n\n# 拓展阅读\n\n# 敏感词系列\n\n[sensitive-word-admin 敏感词控台 v1.2.0 版本开源](https://mp.weixin.qq.com/s/7wSy0PuJLTudEo9gTY5s5w)\n\n[sensitive-word-admin v1.3.0 发布 如何支持分布式部署？](https://mp.weixin.qq.com/s/4wia8SlQQbLV5_OHplaWvg)\n\n[01-开源敏感词工具入门使用](https://houbb.github.io/2020/01/07/sensitive-word-00-overview)\n\n[02-如何实现一个敏感词工具？违禁词实现思路梳理](https://houbb.github.io/2020/01/07/sensitive-word-01-intro)\n\n[03-敏感词之 StopWord 停止词优化与特殊符号](https://houbb.github.io/2020/01/07/sensitive-word-02-stopword)\n\n[04-敏感词之字典瘦身](https://houbb.github.io/2020/01/07/sensitive-word-03-slim)\n\n[05-敏感词之 DFA 算法(Trie Tree 算法)详解](https://houbb.github.io/2020/01/07/sensitive-word-04-dfa)\n\n[06-敏感词(脏词) 如何忽略无意义的字符？达到更好的过滤效果](https://houbb.github.io/2020/01/07/sensitive-word-05-ignore-char)\n\n[v0.10.0-脏词分类标签初步支持](https://juejin.cn/post/7308782855941292058?searchId=20231209140414C082B3CCF1E7B2316EF9)\n\n[v0.11.0-敏感词新特性：忽略无意义的字符，词标签字典](https://mp.weixin.qq.com/s/m40ZnR6YF6WgPrArUSZ_0g)\n\n[v0.12.0-敏感词/脏词词标签能力进一步增强](https://mp.weixin.qq.com/s/-wa-if7uAy2jWsZC13C0cQ)\n\n[v0.13.0-敏感词特性版本发布 支持英文单词全词匹配](https://mp.weixin.qq.com/s/DXv5OUyOs0y2dAq8nFWJ9A)\n\n[v0.16.1-敏感词新特性之字典内存资源释放](https://mp.weixin.qq.com/s/zbeJR-OkWjxashtjiopnMA)\n\n[v0.19.0-敏感词新特性之敏感词单个编辑，不必重复初始化](https://houbb.github.io/2020/01/07/sensitive-word-10-v0.19.0-deny-word-edit)\n\n[v0.20.0 敏感词新特性之数字全部匹配，而不是部分匹配](https://houbb.github.io/2020/01/07/sensitive-word-11-v0.20.0-num-match)\n\n[v0.21.0 敏感词新特性之白名单支持单个编辑，修正白名单包含黑名单时的问题](https://houbb.github.io/2020/01/07/sensitive-word-12-v0.21.0-allow-word-edit)\n\n![wechat](https://img-blog.csdnimg.cn/63926529df364f09bcb203a8a9016854.png)\n\n# NLP 开源矩阵\n\n[pinyin 汉字转拼音](https://github.com/houbb/pinyin)\n\n[pinyin2hanzi 拼音转汉字](https://github.com/houbb/pinyin2hanzi)\n\n[segment 高性能中文分词](https://github.com/houbb/segment)\n\n[opencc4j 中文繁简体转换](https://github.com/houbb/opencc4j)\n\n[nlp-hanzi-similar 汉字相似度](https://github.com/houbb/nlp-hanzi-similar)\n\n[word-checker 拼写检测](https://github.com/houbb/word-checker)\n\n[sensitive-word 敏感词](https://github.com/houbb/sensitive-word)\n\n"
        },
        {
          "name": "WECHAT.png",
          "type": "blob",
          "size": 106.69140625,
          "content": null
        },
        {
          "name": "cgit.bat",
          "type": "blob",
          "size": 0.2412109375,
          "content": ":: 用于提交当前变更(windows)\n:: author: houbb\n:: LastUpdateTime:  2018-11-22 09:08:52\n:: 用法：双击运行，或者当前路径 cmd 直接输入 .\\cgit.bat\n\ngit pull\ngit add .\ngit commit -m \"[Feature] add for new\"\ngit push\ngit status\n\n"
        },
        {
          "name": "cgit.sh",
          "type": "blob",
          "size": 0.205078125,
          "content": "# 提交\n\ngit pull\ngit add .\ngit commit -m \"[Feature] add for new\"\ngit push\ngit status\n\n# 1. 赋值权限： chmod +x ./cgit.sh\n# 2. 执行： ./cgit.sh\n# Last Update Time: 2018-11-21 21:55:38\n# Author:   houbb"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "lmxxf_reword.png",
          "type": "blob",
          "size": 75.5029296875,
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 10.619140625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>com.github.houbb</groupId>\n    <artifactId>sensitive-word</artifactId>\n    <version>0.24.0</version>\n\n    <properties>\n        <!--============================== All Plugins START ==============================-->\n        <plugin.compiler.version>3.2</plugin.compiler.version>\n        <plugin.compiler.version>3.2</plugin.compiler.version>\n        <plugin.surefire.version>2.18.1</plugin.surefire.version>\n        <plugin.surefire.skip-it>false</plugin.surefire.skip-it>\n        <plugin.surefire.ignore-failure>false</plugin.surefire.ignore-failure>\n\n        <plugin.maven-source-plugin.version>2.2.1</plugin.maven-source-plugin.version>\n        <plugin.maven-javadoc-plugin.version>2.9.1</plugin.maven-javadoc-plugin.version>\n        <plugin.maven-gpg-plugin.version>1.5</plugin.maven-gpg-plugin.version>\n\n        <!--============================== MAIN ==============================-->\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.compiler.level>1.7</project.compiler.level>\n\n        <!--============================== INTER ==============================-->\n        <heaven.version>0.13.0</heaven.version>\n        <opencc4j.version>1.8.1</opencc4j.version>\n\n        <!--============================== OTHER ==============================-->\n        <junit.version>4.13.1</junit.version>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n            <!--============================== SELF ==============================-->\n\n            <!--============================== INTER ==============================-->\n            <dependency>\n                <groupId>com.github.houbb</groupId>\n                <artifactId>opencc4j</artifactId>\n                <version>${opencc4j.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.github.houbb</groupId>\n                        <artifactId>heaven</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.huaban</groupId>\n                        <artifactId>jieba-analysis</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.github.houbb</groupId>\n                <artifactId>heaven</artifactId>\n                <version>${heaven.version}</version>\n            </dependency>\n            <!--============================== OTHER ==============================-->\n\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>${junit.version}</version>\n                <scope>test</scope>\n                <optional>true</optional>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.lucene</groupId>\n                <artifactId>lucene-core</artifactId>\n                <version>4.0.0</version>\n                <scope>test</scope>\n                <optional>true</optional>\n            </dependency>\n\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <!--============================== SELF ==============================-->\n\n        <!--============================== INTER ==============================-->\n        <dependency>\n            <groupId>com.github.houbb</groupId>\n            <artifactId>heaven</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>com.github.houbb</groupId>\n            <artifactId>opencc4j</artifactId>\n        </dependency>\n\n        <!--============================== OTHER ==============================-->\n        <dependency>\n            <groupId>junit</groupId>\n            <artifactId>junit</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.lucene</groupId>\n            <artifactId>lucene-core</artifactId>\n        </dependency>\n\n    </dependencies>\n\n    <build>\n        <plugins>\n            <!--compiler plugin -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>${plugin.compiler.version}</version>\n                <configuration>\n                    <source>${project.compiler.level}</source>\n                    <target>${project.compiler.level}</target>\n                    <encoding>${project.build.sourceEncoding}</encoding>\n<!--                    <compilerArgument>-proc:none</compilerArgument>-->\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>${plugin.surefire.version}</version>\n                <configuration>\n                    <skipTests>${plugin.surefire.skip-it}</skipTests>\n                    <testFailureIgnore>${plugin.surefire.ignore-failure}</testFailureIgnore>\n                </configuration>\n            </plugin>\n\n            <!--mvn cobertura:cobertura coveralls:report -DrepoToken=yourcoverallsprojectrepositorytoken-->\n            <plugin>\n                <groupId>org.eluder.coveralls</groupId>\n                <artifactId>coveralls-maven-plugin</artifactId>\n                <version>4.3.0</version>\n            </plugin>\n\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>cobertura-maven-plugin</artifactId>\n                <version>2.7</version>\n                <configuration>\n                    <format>xml</format>\n                    <maxmem>256m</maxmem>\n                    <!-- aggregated reports for multi-module projects -->\n                    <aggregate>true</aggregate>\n                    <instrumentation>\n                        <excludes>\n                            <exclude>**/*Test.class</exclude>\n                            <exclude>**/HelpMojo.class</exclude>\n                            <exclude>**/*Vo.class</exclude>\n                        </excludes>\n                    </instrumentation>\n                </configuration>\n            </plugin>\n\n            <!--mvn clean install sonar:sonar -Dmaven.test.skip=true -Dsonar.host.url=http://localhost:9000-->\n            <!--sonar-->\n            <plugin>\n                <groupId>org.sonarsource.scanner.maven</groupId>\n                <artifactId>sonar-maven-plugin</artifactId>\n                <version>3.1.1</version>\n            </plugin>\n\n            <!-- Javadoc -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>${plugin.maven-javadoc-plugin.version}</version>\n            </plugin>\n\n        </plugins>\n    </build>\n\n    <!--============================== ADD For sonatype START ==============================-->\n    <name>sensitive-word</name>\n    <description>The sensitive word tool for java with DFA.</description>\n\n    <parent>\n        <groupId>org.sonatype.oss</groupId>\n        <artifactId>oss-parent</artifactId>\n        <version>7</version>\n    </parent>\n    <licenses>\n        <license>\n            <name>The Apache Software License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n    <scm>\n        <url>https://github.com/houbb/sensitive-word</url>\n        <connection>https://github.com/houbb/sensitive-word.git</connection>\n        <developerConnection>https://houbb.github.io/</developerConnection>\n    </scm>\n    <developers>\n        <developer>\n            <name>houbb</name>\n            <email>houbinbin.echo@gmail.com</email>\n            <url>https://houbb.github.io/</url>\n        </developer>\n    </developers>\n    <!--============================== ADD For sonatype END ==============================-->\n\n\n    <profiles>\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <!-- Source -->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>${plugin.maven-source-plugin.version}</version>\n                        <executions>\n                            <execution>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <!-- Javadoc -->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>${plugin.maven-javadoc-plugin.version}</version>\n                        <executions>\n                            <execution>\n                                <phase>package</phase>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <!-- GPG -->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>${plugin.maven-gpg-plugin.version}</version>\n                        <executions>\n                            <execution>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n            <distributionManagement>\n                <snapshotRepository>\n                    <id>oss</id>\n                    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n                </snapshotRepository>\n                <repository>\n                    <id>oss</id>\n                    <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n                </repository>\n            </distributionManagement>\n        </profile>\n    </profiles>\n\n</project>\n"
        },
        {
          "name": "release.bat",
          "type": "blob",
          "size": 1.0859375,
          "content": ":: 用于 release 当前项目(windows)\n:: author: houbb\n:: LastUpdateTime:  2018-1-22 09:08:52\n:: 用法：双击运行，或者当前路径 cmd 直接输入 release.bat\n\n:: 关闭回显\n@echo OFF\n\nECHO \"============================= RELEASE START...\"\n\n:: 版本号信息(需要手动指定)\n:::: 旧版本名称\nSET version=0.24.0\n:::: 新版本名称\nSET newVersion=0.25.0\n:::: 组织名称\nSET groupName=com.github.houbb\n:::: 项目名称\nSET projectName=sensitive-word\n\n:: release 项目版本\n:::: snapshot 版本号\nSET snapshot_version=%version%\"-SNAPSHOT\"\n:::: 新的版本号\nSET release_version=%version%\n\ncall mvn versions:set -DgroupId=%groupName% -DartifactId=%projectName% -DoldVersion=%snapshot_version% -DnewVersion=%release_version%\ncall mvn -N versions:update-child-modules\ncall mvn versions:commit\ncall echo \"1. RELEASE %snapshot_version% TO %release_version% DONE.\"\n\n\n:: 推送到 github\ngit add .\ngit commit -m \"release branch %version%\"\ngit push\ngit status\n\nECHO \"2. PUSH TO GITHUB DONE.\"\n\n:: 推送到 maven 中央仓库\ncall mvn clean deploy -P release\nECHO \"3 PUSH TO MVN CENTER DONE.\"\n"
        },
        {
          "name": "release.sh",
          "type": "blob",
          "size": 1.849609375,
          "content": "#!/usr/bin/env bash\necho \"============================= RELEASE START...\"\n\n## 版本号信息(需要手动指定)\nversion=\"0.0.1\"\nnewVersion=\"0.0.2\"\nprojectName=\"sisyphus\"\n\n# release 项目版本\n## snapshot 版本号\nsnapshot_version=${version}\"-SNAPSHOT\"\n## 新的版本号\nrelease_version=${version}\n\nmvn versions:set -DgroupId=com.github.houbb -DartifactId=${projectName} -DoldVersion=${snapshot_version} -DnewVersion=${release_version}\nmvn -N versions:update-child-modules\nmvn versions:commit\necho \"1. RELEASE ${snapshot_version} TO ${release_version} DONE.\"\n\n\n# 推送到 github\ngit add .\ngit commit -m \"release branch ${version}\"\ngit push\ngit status\n\necho \"2. PUSH TO GITHUB DONE.\"\n\n\n# 推送到 maven 中央仓库\nmvn clean deploy -P release\n\necho \"3. PUSH TO MAVEN CENTER DONE.\"\n\n# 合并到 master 分支\nbranchName=\"release_\"${version} # 分支名称\ngit checkout master\ngit pull\ngit checkout ${branchName}\ngit rebase master\ngit checkout master\ngit merge ${branchName}\ngit push\n\necho \"4. MERGE TO MASTER DONE.\"\n\n\n# 拉取新的分支\nnewBranchName=\"release_\"${newVersion}\ngit branch ${newBranchName}\ngit checkout ${newBranchName}\ngit push --set-upstream origin ${newBranchName}\n\necho \"5. NEW BRANCH DONE.\"\n\n# 修改新分支的版本号\n## snapshot 版本号\nsnapshot_new_version=${newVersion}\"-SNAPSHOT\"\nmvn versions:set -DgroupId=com.github.houbb -DartifactId=${projectName} -DoldVersion=${release_version} -DnewVersion=${snapshot_new_version}\nmvn -N versions:update-child-modules\nmvn versions:commit\n\ngit add .\ngit commit -m \"modify branch ${release_version} TO ${snapshot_new_version}\"\ngit push\ngit status\necho \"6. MODIFY ${release_version} TO ${snapshot_new_version} DONE.\"\n\necho \"============================= RELEASE END...\"\n\n\n# 使用方式：\n# 1. 赋值权限： chmod +x ./release.sh\n# 2. 执行： ./release.sh\n# Last Update Time: 2018-01-20 13:17:06\n# Author:   houbb\n\n\n"
        },
        {
          "name": "release_rm.sh",
          "type": "blob",
          "size": 1.3369140625,
          "content": "#!/usr/bin/env bash\necho \"============================= RELEASE START...\"\n\n## 版本号信息(需要手动指定)\noldVersion=\"1.0.0\"\nnewVersion=\"1.0.0\"\nprojectName=\"sisyphus\"\n\n# 删除分支\noldBranchName=\"release_\"${oldVersion}\ngit branch -d ${oldBranchName}\ngit push origin --delete ${oldBranchName}\n\necho \"1. Branch remove success...\"\n\n# 拉取新的分支\nnewBranchName=\"release_\"${newVersion}\ngit branch ${newBranchName}\ngit checkout ${newBranchName}\ngit push --set-upstream origin ${newBranchName}\n\necho \"2. NEW BRANCH DONE.\"\n\n# 修改新分支的版本号\n## snapshot 版本号\nsnapshot_new_version=${newVersion}\"-SNAPSHOT\"\nmvn versions:set -DgroupId=com.github.houbb -DartifactId=${projectName} -DoldVersion=${release_version} -DnewVersion=${snapshot_new_version}\nmvn -N versions:update-child-modules\nmvn versions:commit\n\ngit add .\ngit commit -m \"modify branch ${release_version} TO ${snapshot_new_version}\"\ngit push\ngit status\necho \"3. MODIFY ${release_version} TO ${snapshot_new_version} DONE.\"\n\necho \"============================= BRANCH RE-CREATE END...\"\n\necho \"============================= BRANCH LIST =============================\"\ngit branch -a\n\n# 使用方式：\n# 注意：本脚本用于删除分支，谨慎使用!\n# 1. 赋值权限： chmod +x ./release_rm.sh\n# 2. 执行： ./release_rm.sh\n# Last Update Time: 2018-06-21 11:10:42\n# Author:   houbb"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}