{
  "metadata": {
    "timestamp": 1736609168283,
    "page": 477,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "apache/curator",
      "stars": 3123,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".asf.yaml",
          "type": "blob",
          "size": 1.259765625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\ngithub:\n  description: \"Apache Curator\"\n  homepage: https://curator.apache.org/\n  labels:\n    - java\n    - database\n    - curator\n    - zookeeper\n    - consensus\n  features:\n    wiki: false\n    issues: true\n    projects: false\n  enabled_merge_buttons:\n    squash:  true\n    merge:   false\n    rebase:  true\n  protected_branches:\n    master: {}\n  autolink_jira:\n    - CURATOR\n\nnotifications:\n  commits:      commits@curator.apache.org\n  pullrequests: commits@curator.apache.org\n  jira_options: link label\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.2021484375,
          "content": "# You can configure git to automatically use this file with the following config:\n# git config blame.ignoreRevsFile .git-blame-ignore-revs\n\n#  ignore spotless format\n484ede9a33abb1427ba58c77e5792814aac889f0\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8232421875,
          "content": "# Compiled source #\n###################\n*.com\n*.class\n*.dll\n*.exe\n*.o\n*.so\n\n# Packages #\n############\n# it's better to unpack these files and commit the raw source\n# git has its own built in compression methods\n*.7z\n*.dmg\n*.gz\n*.iso\n*.jar\n*.rar\n*.tar\n*.zip\n\n# Logs and databases #\n######################\n*.log\n\n# OS generated files #\n######################\n.DS_Store*\nehthumbs.db\nIcon?\nThumbs.db\n\n# Editor Files #\n################\n*~\n*.swp\n\n# Gradle Files #\n################\n.gradle\n\n# Build output directies\n/target\n*/target\n/build\n*/build\n*/bin\n\n# IntelliJ specific files/directories\nout\n.idea\n*.ipr\n*.iws\n*.iml\natlassian-ide-plugin.xml\n\n# Eclipse specific files/directories\n.classpath\n.project\n.settings\n.metadata\n\n# NetBeans specific files/directories\n.nbattrs\n\n# Gradle Enterprise\ntest-reports/\n.mvn/.gradle-enterprise/\n.mvn/.develocity/\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "DEPENDENCIES",
          "type": "blob",
          "size": 0.0283203125,
          "content": "* intentionally left blank *\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.1640625,
          "content": "Apache Curator\nCopyright 2013-2023 The Apache Software Foundation\n\nThis product includes software developed at\nThe Apache Software Foundation (http://www.apache.org/).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.3525390625,
          "content": "# Apache Curator\n\n<!--\nLicensed to the Apache Software Foundation (ASF) under one\nor more contributor license agreements.  See the NOTICE file\ndistributed with this work for additional information\nregarding copyright ownership.  The ASF licenses this file\nto you under the Apache License, Version 2.0 (the\n\"License\"); you may not use this file except in compliance\nwith the License.  You may obtain a copy of the License at\n\n  http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing,\nsoftware distributed under the License is distributed on an\n\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, either express or implied.  See the License for the\nspecific language governing permissions and limitations\nunder the License.\n-->\n\n[![Maven Central](https://img.shields.io/maven-central/v/org.apache.curator/apache-curator.svg?logo=Apache+Maven&logoColor=blue)](http://search.maven.org/#search%7Cga%7C1%7Capache-curator)\n[![Curator Website](https://img.shields.io/badge/curator-Curator_Website-red?logo=Apache&logoColor=red)](https://curator.apache.org)\n[![Stack Overflow](https://img.shields.io/badge/stackoverflow-Curator_Help-orange?logo=Stack+Overflow&logoColor=orange)](https://stackoverflow.com/questions/tagged/apache-curator)\n[![Twitter](https://img.shields.io/badge/Follow-@Curator-55acee?logo=Twitter&logoColor=55acee)](https://twitter.com/intent/follow?original_referer=https%3A%2F%2Fgithub.com%2Fapache%2Fcurator&ref_src=twsrc%5Etfw&region=follow_link&screen_name=ApacheCurator&tw_p=followbutton)\n\n\n## What is Apache Curator?\n\nApache Curator is a Java/JVM client library for [Apache ZooKeeper](https://zookeeper.apache.org/), a distributed coordination service.\n\nApache Curator includes a high-level API framework and utilities to make using Apache ZooKeeper much easier and more reliable. It also includes recipes for common use cases and extensions such as service discovery and a Java 8 asynchronous DSL.\n\nFor more details:\n\n- Apache Curator Website: http://curator.apache.org/\n- Binaries on Maven Central: [http://search.maven.org](http://search.maven.org/#search%7Cga%7C1%7Capache-curator)\n- Best source of help for Curator: [Stack Overflow's Curator tag](https://stackoverflow.com/questions/tagged/apache-curator)\n- Apache ZooKeeper Website: https://zookeeper.apache.org\n- Curator's Wiki: http://cwiki.apache.org/confluence/display/CURATOR\n"
        },
        {
          "name": "curator-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-framework",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-recipes",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-test-zk35",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-test-zk36",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-test-zk37",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-test-zk38",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-x-async",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-x-discovery-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "curator-x-discovery",
          "type": "tree",
          "content": null
        },
        {
          "name": "doap.rdf",
          "type": "blob",
          "size": 2.4775390625,
          "content": "<?xml version=\"1.0\"?>\n<?xml-stylesheet type=\"text/xsl\"?>\n<rdf:RDF xml:lang=\"en\"\n         xmlns=\"http://usefulinc.com/ns/doap#\" \n         xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\" \n         xmlns:asfext=\"http://projects.apache.org/ns/asfext#\"\n         xmlns:foaf=\"http://xmlns.com/foaf/0.1/\">\n<!--\n    Licensed to the Apache Software Foundation (ASF) under one or more\n    contributor license agreements.  See the NOTICE file distributed with\n    this work for additional information regarding copyright ownership.\n    The ASF licenses this file to You under the Apache License, Version 2.0\n    (the \"License\"); you may not use this file except in compliance with\n    the License.  You may obtain a copy of the License at\n\n         http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n-->\n  <Project rdf:about=\"http://curator.apache.org/\">\n    <created>2011-02-06</created>\n    <license rdf:resource=\"http://usefulinc.com/doap/licenses/asl20\" />\n    <name>Apache Curator</name>\n    <homepage rdf:resource=\"http://curator.apache.org/\" />\n    <asfext:pmc rdf:resource=\"http://curator.apache.org\" />\n    <shortdesc>A set of Java libraries that make using Apache ZooKeeper much easier.</shortdesc>\n    <description>Apache Curator is a Java/JVM client library for Apache ZooKeeper, a distributed coordination service. \n    It includes a highlevel API framework and utilities to make using Apache ZooKeeper much easier and more reliable. It also \n    includes recipes for common use cases and extensions such as service discovery and a Java 8 asynchronous DSL.</description>\n    <bug-database rdf:resource=\"http://issues.apache.org/jira/browse/CURATOR\" />\n    <mailing-list rdf:resource=\"http://curator.apache.org/mailing-lists.html\" />\n    <download-page rdf:resource=\"http://www.apache.org/dyn/closer.cgi/curator/\" />\n    <programming-language>Java</programming-language>\n    <category rdf:resource=\"http://projects.apache.org/category/database\" />\n    <repository>\n    <GitRepository>\n      <location rdf:resource=\"https://gitbox.apache.org/repos/asf/curator.git\"/>\n      <browse rdf:resource=\"https://gitbox.apache.org/repos/asf?p=curator.git\"/>\n    </GitRepository>\n    </repository>\n  </Project>\n</rdf:RDF>\n"
        },
        {
          "name": "licenserc.toml",
          "type": "blob",
          "size": 0.890625,
          "content": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nheaderPath = \"Apache-2.0-ASF.txt\"\n\nexcludes = [\n    \"DEPENDENCIES\",\n    \"doap.rdf\",\n    \"**/NOTICE\",\n    \"**/*.confluence\",\n]\n"
        },
        {
          "name": "merge-pr.py",
          "type": "blob",
          "size": 19.2431640625,
          "content": "#!/usr/bin/env python\n\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n\n# Utility for creating well-formed pull request merges and pushing them to Apache. This script is a modified version\n# of the one created by the Spark project (https://github.com/apache/spark/blob/master/dev/merge_spark_pr.py).\n#\n# Usage: ./merge-pr.py (see config env vars below)\n#\n# This utility assumes you already have a local Curator git folder and that you\n# have added remotes corresponding to both:\n# (i) the github apache Curator mirror and\n# (ii) the apache Curator git repo.\n\nimport json\nimport os\nimport re\nimport subprocess\nimport sys\nimport urllib.request, urllib.error, urllib.parse\nimport getpass\n\ntry:\n    import jira.client\n    JIRA_IMPORTED = True\nexcept ImportError:\n    JIRA_IMPORTED = False\n\nPROJECT_NAME = \"curator\"\n\nCAPITALIZED_PROJECT_NAME = PROJECT_NAME.upper()\n\n# Remote name which points to the GitHub site\nPR_REMOTE_NAME = os.environ.get(\"PR_REMOTE_NAME\", \"apache-github\")\n# Remote name which points to Apache git\nPUSH_REMOTE_NAME = os.environ.get(\"PUSH_REMOTE_NAME\", \"apache\")\n# ASF JIRA username\nJIRA_USERNAME = os.environ.get(\"JIRA_USERNAME\", \"\")\n# ASF JIRA password\nJIRA_PASSWORD = os.environ.get(\"JIRA_PASSWORD\", \"\")\n# OAuth key used for issuing requests against the GitHub API. If this is not defined, then requests\n# will be unauthenticated. You should only need to configure this if you find yourself regularly\n# exceeding your IP's unauthenticated request rate limit. You can create an OAuth key at\n# https://github.com/settings/tokens. This script only requires the \"public_repo\" scope.\nGITHUB_OAUTH_KEY = os.environ.get(\"GITHUB_OAUTH_KEY\")\n\nGITHUB_USER = os.environ.get(\"GITHUB_USER\", \"apache\")\nGITHUB_BASE = \"https://github.com/%s/%s/pull\" % (GITHUB_USER, PROJECT_NAME)\nGITHUB_API_BASE = \"https://api.github.com/repos/%s/%s\" % (GITHUB_USER, PROJECT_NAME)\nJIRA_BASE = \"https://issues.apache.org/jira/browse\"\nJIRA_API_BASE = \"https://issues.apache.org/jira\"\n# Prefix added to temporary branches\nTEMP_BRANCH_PREFIX = \"PR_TOOL\"\n# TODO Introduce a convention as this is too brittle\nRELEASE_BRANCH_PREFIX = \"CURATOR\"\n\nDEV_BRANCH_NAME = \"master\"\n\nDEFAULT_FIX_VERSION = os.environ.get(\"DEFAULT_FIX_VERSION\", \"branch-3.5\")\n\ndef get_json(url):\n    try:\n        request = urllib.request.Request(url)\n        if GITHUB_OAUTH_KEY:\n            request.add_header('Authorization', 'token %s' % GITHUB_OAUTH_KEY)\n        return json.load(urllib.request.urlopen(request))\n    except urllib.error.HTTPError as e:\n        if \"X-RateLimit-Remaining\" in e.headers and e.headers[\"X-RateLimit-Remaining\"] == '0':\n            print(\"Exceeded the GitHub API rate limit; see the instructions in \" + \\\n                  \"merge-pr.py to configure an OAuth token for making authenticated \" + \\\n                  \"GitHub requests.\")\n        else:\n            print(\"Unable to fetch URL, exiting: %s\" % url)\n        sys.exit(-1)\n\n\ndef fail(msg):\n    print(msg)\n    clean_up()\n    sys.exit(-1)\n\n\ndef run_cmd(cmd):\n    print(cmd)\n    if isinstance(cmd, list):\n        return subprocess.check_output(cmd, encoding='utf8')\n    else:\n        return subprocess.check_output(cmd.split(\" \"), encoding='utf8')\n\n\ndef continue_maybe(prompt):\n    result = input(\"\\n%s (y/n): \" % prompt)\n    if result.lower().strip() != \"y\":\n        fail(\"Okay, exiting\")\n\ndef clean_up():\n    if original_head != get_current_branch():\n        print(\"Restoring head pointer to %s\" % original_head)\n        run_cmd(\"git checkout %s\" % original_head)\n\n    branches = run_cmd(\"git branch\").replace(\" \", \"\").split(\"\\n\")\n\n    for branch in [x for x in branches if x.startswith(TEMP_BRANCH_PREFIX)]:\n        print(\"Deleting local branch %s\" % branch)\n        run_cmd(\"git branch -D %s\" % branch)\n\ndef get_current_branch():\n    return run_cmd(\"git rev-parse --abbrev-ref HEAD\").replace(\"\\n\", \"\")\n\n# merge the requested PR and return the merge hash\ndef merge_pr(pr_num, target_ref, title, body, pr_repo_desc):\n    pr_branch_name = \"%s_MERGE_PR_%s\" % (TEMP_BRANCH_PREFIX, pr_num)\n    target_branch_name = \"%s_MERGE_PR_%s_%s\" % (TEMP_BRANCH_PREFIX, pr_num, target_ref.upper())\n    run_cmd(\"git fetch %s pull/%s/head:%s\" % (PR_REMOTE_NAME, pr_num, pr_branch_name))\n    run_cmd(\"git fetch %s %s:%s\" % (PUSH_REMOTE_NAME, target_ref, target_branch_name))\n    run_cmd(\"git checkout %s\" % target_branch_name)\n\n    had_conflicts = False\n    try:\n        run_cmd(['git', 'merge', pr_branch_name, '--squash'])\n    except Exception as e:\n        msg = \"Error merging: %s\\nWould you like to manually fix-up this merge?\" % e\n        continue_maybe(msg)\n        msg = \"Okay, please fix any conflicts and 'git add' conflicting files... Finished?\"\n        continue_maybe(msg)\n        had_conflicts = True\n\n    commit_authors = run_cmd(['git', 'log', 'HEAD..%s' % pr_branch_name,\n                             '--pretty=format:%an <%ae>']).split(\"\\n\")\n    distinct_authors = sorted(set(commit_authors),\n                              key=lambda x: commit_authors.count(x), reverse=True)\n    primary_author = input(\n        \"Enter primary author in the format of \\\"name <email>\\\" [%s]: \" %\n        distinct_authors[0])\n    if primary_author == \"\":\n        primary_author = distinct_authors[0]\n\n    reviewers = input(\n        \"Enter reviewers in the format of \\\"name1 <email1>, name2 <email2>\\\": \").strip()\n\n    commits = run_cmd(['git', 'log', 'HEAD..%s' % pr_branch_name,\n                      '--pretty=format:%h [%an] %s']).split(\"\\n\")\n\n    if len(commits) > 1:\n        result = input(\"List pull request commits in squashed commit message? (y/n): \")\n        if result.lower().strip() == \"y\":\n          should_list_commits = True\n        else:\n          should_list_commits = False\n    else:\n        should_list_commits = False\n\n    merge_message_flags = []\n\n    merge_message_flags += [\"-m\", title]\n    if body is not None:\n        # We remove @ symbols from the body to avoid triggering e-mails\n        # to people every time someone creates a public fork of the project.\n        merge_message_flags += [\"-m\", body.replace(\"@\", \"\")]\n\n    authors = \"\\n\".join([\"Author: %s\" % a for a in distinct_authors])\n\n    merge_message_flags += [\"-m\", authors]\n\n    if (reviewers != \"\"):\n        merge_message_flags += [\"-m\", \"Reviewers: %s\" % reviewers]\n\n    if had_conflicts:\n        committer_name = run_cmd(\"git config --get user.name\").strip()\n        committer_email = run_cmd(\"git config --get user.email\").strip()\n        message = \"This patch had conflicts when merged, resolved by\\nCommitter: %s <%s>\" % (\n            committer_name, committer_email)\n        merge_message_flags += [\"-m\", message]\n\n    # The string \"Closes #%s\" string is required for GitHub to correctly close the PR\n    close_line = \"Closes #%s from %s\" % (pr_num, pr_repo_desc)\n    if should_list_commits:\n        close_line += \" and squashes the following commits:\"\n    merge_message_flags += [\"-m\", close_line]\n\n    if should_list_commits:\n        merge_message_flags += [\"-m\", \"\\n\".join(commits)]\n\n    run_cmd(['git', 'commit', '--author=\"%s\"' % primary_author] + merge_message_flags)\n\n    continue_maybe(\"Merge complete (local ref %s). Push to %s?\" % (\n        target_branch_name, PUSH_REMOTE_NAME))\n\n    try:\n        run_cmd('git push %s %s:%s' % (PUSH_REMOTE_NAME, target_branch_name, target_ref))\n    except Exception as e:\n        clean_up()\n        fail(\"Exception while pushing: %s\" % e)\n\n    merge_hash = run_cmd(\"git rev-parse %s\" % target_branch_name)[:8]\n    clean_up()\n    print((\"Pull request #%s merged!\" % pr_num))\n    print((\"Merge hash: %s\" % merge_hash))\n    return merge_hash\n\n\ndef cherry_pick(pr_num, merge_hash, default_branch):\n    pick_ref = input(\"Enter a branch name [%s]: \" % default_branch)\n    if pick_ref == \"\":\n        pick_ref = default_branch\n\n    pick_branch_name = \"%s_PICK_PR_%s_%s\" % (TEMP_BRANCH_PREFIX, pr_num, pick_ref.upper())\n\n    run_cmd(\"git fetch %s %s:%s\" % (PUSH_REMOTE_NAME, pick_ref, pick_branch_name))\n    run_cmd(\"git checkout %s\" % pick_branch_name)\n\n    try:\n        run_cmd(\"git cherry-pick -sx %s\" % merge_hash)\n    except Exception as e:\n        msg = \"Error cherry-picking: %s\\nWould you like to manually fix-up this merge?\" % e\n        continue_maybe(msg)\n        msg = \"Okay, please fix any conflicts and finish the cherry-pick. Finished?\"\n        continue_maybe(msg)\n\n    continue_maybe(\"Pick complete (local ref %s). Push to %s?\" % (\n        pick_branch_name, PUSH_REMOTE_NAME))\n\n    try:\n        run_cmd('git push %s %s:%s' % (PUSH_REMOTE_NAME, pick_branch_name, pick_ref))\n    except Exception as e:\n        clean_up()\n        fail(\"Exception while pushing: %s\" % e)\n\n    pick_hash = run_cmd(\"git rev-parse %s\" % pick_branch_name)[:8]\n    clean_up()\n\n    print((\"Pull request #%s picked into %s!\" % (pr_num, pick_ref)))\n    print((\"Pick hash: %s\" % pick_hash))\n    return pick_ref\n\n\ndef fix_version_from_branch(branch, versions):\n    # Note: Assumes this is a sorted (newest->oldest) list of un-released versions\n    if branch == DEV_BRANCH_NAME:\n        versions = [x for x in versions if x == DEFAULT_FIX_VERSION]\n        if len(versions) > 0:\n            return versions[0]\n        else:\n            return None\n    else:\n        versions = [x for x in versions if x.startswith(branch)]\n        if len(versions) > 0:\n            return versions[-1]\n        else:\n            return None\n\n\ndef resolve_jira_issue(merge_branches, comment, default_jira_id=\"\"):\n    asf_jira = jira.client.JIRA({'server': JIRA_API_BASE},\n                                basic_auth=(JIRA_USERNAME, JIRA_PASSWORD))\n\n    jira_id = input(\"Enter a JIRA id [%s]: \" % default_jira_id)\n    if jira_id == \"\":\n        jira_id = default_jira_id\n\n    try:\n        issue = asf_jira.issue(jira_id)\n    except Exception as e:\n        fail(\"ASF JIRA could not find %s\\n%s\" % (jira_id, e))\n\n    cur_status = issue.fields.status.name\n    cur_summary = issue.fields.summary\n    cur_assignee = issue.fields.assignee\n    if cur_assignee is None:\n        cur_assignee = \"NOT ASSIGNED!!!\"\n    else:\n        cur_assignee = cur_assignee.displayName\n\n    if cur_status == \"Resolved\" or cur_status == \"Closed\":\n        fail(\"JIRA issue %s already has status '%s'\" % (jira_id, cur_status))\n    print((\"=== JIRA %s ===\" % jira_id))\n    print((\"summary\\t\\t%s\\nassignee\\t%s\\nstatus\\t\\t%s\\nurl\\t\\t%s/%s\\n\" % (\n        cur_summary, cur_assignee, cur_status, JIRA_BASE, jira_id)))\n\n    versions = asf_jira.project_versions(CAPITALIZED_PROJECT_NAME)\n    versions = sorted(versions, key=lambda x: x.name, reverse=True)\n    versions = [x for x in versions if x.raw['released'] is False]\n\n    version_names = [x.name for x in versions]\n    default_fix_versions = [fix_version_from_branch(x, version_names) for x in merge_branches]\n    default_fix_versions = [x for x in default_fix_versions if x != None]\n    default_fix_versions = \",\".join(default_fix_versions)\n\n    fix_versions = input(\"Enter comma-separated fix version(s) [%s]: \" % default_fix_versions)\n    if fix_versions == \"\":\n        fix_versions = default_fix_versions\n    fix_versions = fix_versions.replace(\" \", \"\").split(\",\")\n\n    def get_version_json(version_str):\n        return [v for v in versions if v.name == version_str][0].raw\n\n    jira_fix_versions = [get_version_json(v) for v in fix_versions]\n\n    resolve = [a for a in asf_jira.transitions(jira_id) if a['name'] == \"Resolve Issue\"][0]\n    resolution = [r for r in asf_jira.resolutions() if r.raw['name'] == \"Fixed\"][0]\n    asf_jira.transition_issue(\n        jira_id, resolve[\"id\"], fixVersions = jira_fix_versions,\n        comment = comment, resolution = {'id': resolution.raw['id']})\n\n    print(\"Successfully resolved %s with fixVersions=%s!\" % (jira_id, fix_versions))\n\n\ndef resolve_jira_issues(title, merge_branches, comment):\n    jira_ids = re.findall(\"%s-[0-9]{4,5}\" % CAPITALIZED_PROJECT_NAME, title)\n\n    if len(jira_ids) == 0:\n        resolve_jira_issue(merge_branches, comment)\n    for jira_id in jira_ids:\n        resolve_jira_issue(merge_branches, comment, jira_id)\n\n\ndef standardize_jira_ref(text):\n    \"\"\"\n    Standardize the jira reference commit message prefix to \"PROJECT_NAME-XXX: Issue\"\n    \"\"\"\n    jira_refs = []\n    components = []\n\n    # Extract JIRA ref(s):\n    pattern = re.compile(r'(%s[-\\s]*[0-9]{3,6})+' % CAPITALIZED_PROJECT_NAME, re.IGNORECASE)\n    for ref in pattern.findall(text):\n        # Add brackets, replace spaces with a dash, & convert to uppercase\n        jira_refs.append(re.sub(r'\\s+', '-', ref.upper()))\n        text = text.replace(ref, '')\n\n    # Extract project name component(s):\n    # Look for alphanumeric chars, spaces, dashes, periods, and/or commas\n    pattern = re.compile(r'(\\[[\\w\\s,-\\.]+\\])', re.IGNORECASE)\n    for component in pattern.findall(text):\n        components.append(component.upper())\n        text = text.replace(component, '')\n\n    # Cleanup any remaining symbols:\n    pattern = re.compile(r'^\\W+(.*)', re.IGNORECASE)\n    if (pattern.search(text) is not None):\n        text = pattern.search(text).groups()[0]\n\n    # Assemble full text (JIRA ref(s), module(s), remaining text)\n    jira_prefix = ' '.join(jira_refs).strip()\n    if jira_prefix:\n        jira_prefix = jira_prefix + \": \"\n    clean_text = jira_prefix + ' '.join(components).strip() + \" \" + text.strip()\n\n    # Replace multiple spaces with a single space, e.g. if no jira refs and/or components were included\n    clean_text = re.sub(r'\\s+', ' ', clean_text.strip())\n\n    return clean_text\n\ndef get_remote_repos():\n    repos = run_cmd(\"git remote -v\").split()\n\n    dict = {}\n    for i in range(0, len(repos), 3):\n        dict[repos[i]] = repos[i+1]\n    return dict\n\n\ndef check_git_remote():\n    repos = get_remote_repos()\n\n    # check if all remote endpoints' URLs point to project git repo\n    name = PROJECT_NAME + \".git\"\n    for url in list(repos.values()):\n        if not url.endswith(name):\n            fail(\"Error: not a %s git repo or at least one remote is invalid\" % PROJECT_NAME)\n\n    if not PR_REMOTE_NAME in repos:\n        fail(\"Error: PR_REMOTE_NAME (%s) environment variable has not been set!\" % PR_REMOTE_NAME)\n\n    if not PUSH_REMOTE_NAME in repos:\n        fail(\"Error: PUSH_REMOTE_NAME (%s) environment variable has not been set!\" % PUSH_REMOTE_NAME)\n\n\ndef check_jira_env():\n\n    global JIRA_PASSWORD\n\n    if JIRA_IMPORTED:\n\n       if JIRA_USERNAME.strip() != \"\" and JIRA_PASSWORD.strip() == \"\":\n           inform_pwd = input(\"JIRA_USERNAME set but JIRA_PASSWORD is not. Want to inform it? \")\n           if inform_pwd.strip() == \"y\":\n               JIRA_PASSWORD = getpass.getpass('JIRA PASSWORD: ')\n\n       if JIRA_USERNAME.strip() == \"\" or JIRA_PASSWORD.strip() == \"\":\n           msg =\"JIRA_USERNAME and/or JIRA_PASSWORD are not set. Want to continue? \"\n           continue_maybe(msg)\n    else:\n        msg = \"JIRA lib not installed. Want to continue? \"\n        continue_maybe(msg)\n\ndef main():\n    global original_head\n\n    original_head = get_current_branch()\n\n    check_jira_env()\n\n    check_git_remote()\n\n    branches = get_json(\"%s/branches\" % GITHUB_API_BASE)\n    branch_names = [x for x in [x['name'] for x in branches] if x.startswith(RELEASE_BRANCH_PREFIX)]\n    # Assumes branch names can be sorted lexicographically\n    latest_branch = sorted(branch_names, reverse=True)[0]\n\n    pr_num = input(\"Which pull request would you like to merge? (e.g. 34): \")\n    pr = get_json(\"%s/pulls/%s\" % (GITHUB_API_BASE, pr_num))\n    pr_events = get_json(\"%s/issues/%s/events\" % (GITHUB_API_BASE, pr_num))\n\n    url = pr[\"url\"]\n\n    pr_title = pr[\"title\"]\n    commit_title = input(\"Commit title [%s]: \" % pr_title)\n    if commit_title == \"\":\n        commit_title = pr_title\n\n    # Decide whether to use the modified title or not\n    modified_title = standardize_jira_ref(commit_title)\n    if modified_title != commit_title:\n        print(\"I've re-written the title as follows to match the standard format:\")\n        print(\"Original: %s\" % commit_title)\n        print(\"Modified: %s\" % modified_title)\n        result = input(\"Would you like to use the modified title? (y/n): \")\n        if result.lower().strip() == \"y\":\n            commit_title = modified_title\n            print(\"Using modified title:\")\n        else:\n            print(\"Using original title:\")\n        print(commit_title)\n\n    body = pr[\"body\"]\n    target_ref = pr[\"base\"][\"ref\"]\n    user_login = pr[\"user\"][\"login\"]\n    base_ref = pr[\"head\"][\"ref\"]\n    pr_repo_desc = \"%s/%s\" % (user_login, base_ref)\n\n    # Merged pull requests don't appear as merged in the GitHub API;\n    # Instead, they're closed by asfgit.\n    merge_commits = \\\n        [e for e in pr_events if e[\"actor\"][\"login\"] == \"asfgit\" and e[\"event\"] == \"closed\"]\n\n    if merge_commits:\n        merge_hash = merge_commits[0][\"commit_id\"]\n        message = get_json(\"%s/commits/%s\" % (GITHUB_API_BASE, merge_hash))[\"commit\"][\"message\"]\n\n        print(\"Pull request %s has already been merged, assuming you want to backport\" % pr_num)\n        commit_is_downloaded = run_cmd(['git', 'rev-parse', '--quiet', '--verify',\n                                    \"%s^{commit}\" % merge_hash]).strip() != \"\"\n        if not commit_is_downloaded:\n            fail(\"Couldn't find any merge commit for #%s, you may need to update HEAD.\" % pr_num)\n\n        print(\"Found commit %s:\\n%s\" % (merge_hash, message))\n        cherry_pick(pr_num, merge_hash, latest_branch)\n        sys.exit(0)\n\n    if not bool(pr[\"mergeable\"]):\n        msg = \"Pull request %s is not mergeable in its current form.\\n\" % pr_num + \\\n            \"Continue? (experts only!)\"\n        continue_maybe(msg)\n\n    print((\"\\n=== Pull Request #%s ===\" % pr_num))\n    print((\"PR title\\t%s\\nCommit title\\t%s\\nSource\\t\\t%s\\nTarget\\t\\t%s\\nURL\\t\\t%s\" % (\n        pr_title, commit_title, pr_repo_desc, target_ref, url)))\n    continue_maybe(\"Proceed with merging pull request #%s?\" % pr_num)\n\n    merged_refs = [target_ref]\n\n    merge_hash = merge_pr(pr_num, target_ref, commit_title, body, pr_repo_desc)\n\n    pick_prompt = \"Would you like to pick %s into another branch?\" % merge_hash\n    while input(\"\\n%s (y/n): \" % pick_prompt).lower().strip() == \"y\":\n        merged_refs = merged_refs + [cherry_pick(pr_num, merge_hash, latest_branch)]\n\n    if JIRA_IMPORTED:\n        if JIRA_USERNAME and JIRA_PASSWORD:\n            continue_maybe(\"Would you like to update an associated JIRA?\")\n            jira_comment = \"Issue resolved by pull request %s\\n[%s/%s]\" % (pr_num, GITHUB_BASE, pr_num)\n            resolve_jira_issues(commit_title, merged_refs, jira_comment)\n        else:\n            print(\"JIRA_USERNAME and JIRA_PASSWORD not set\")\n            print(\"Exiting without trying to close the associated JIRA.\")\n    else:\n        print(\"Could not find jira-python library. Run 'sudo pip install jira' to install.\")\n        print(\"Exiting without trying to close the associated JIRA.\")\n\nif __name__ == \"__main__\":\n    import doctest\n    (failure_count, test_count) = doctest.testmod()\n    if (failure_count):\n        exit(-1)\n\n    main()\n"
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 11.0244140625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.2.0\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"$(uname)\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        JAVA_HOME=\"$(/usr/libexec/java_home)\"; export JAVA_HOME\n      else\n        JAVA_HOME=\"/Library/Java/Home\"; export JAVA_HOME\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=$(java-config --jre-home)\n  fi\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=$(cygpath --unix \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=$(cygpath --path --unix \"$CLASSPATH\")\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$JAVA_HOME\" ] && [ -d \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"$(cd \"$JAVA_HOME\" || (echo \"cannot cd into $JAVA_HOME.\"; exit 1); pwd)\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"$(which javac)\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"$(expr \"\\\"$javaExecutable\\\"\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=$(which readlink)\n    if [ ! \"$(expr \"$readLink\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"$(dirname \"\\\"$javaExecutable\\\"\")\"\n        javaExecutable=\"$(cd \"\\\"$javaHome\\\"\" && pwd -P)/javac\"\n      else\n        javaExecutable=\"$(readlink -f \"\\\"$javaExecutable\\\"\")\"\n      fi\n      javaHome=\"$(dirname \"\\\"$javaExecutable\\\"\")\"\n      javaHome=$(expr \"$javaHome\" : '\\(.*\\)/bin')\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"$(\\unset -f command 2>/dev/null; \\command -v java)\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=$(cd \"$wdir/..\" || exit 1; pwd)\n    fi\n    # end of workaround\n  done\n  printf '%s' \"$(cd \"$basedir\" || exit 1; pwd)\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    # Remove \\r in case we run on Windows within Git Bash\n    # and check out the repository with auto CRLF management\n    # enabled. Otherwise, we may read lines that are delimited with\n    # \\r\\n and produce $'-Xarg\\r' rather than -Xarg due to word\n    # splitting rules.\n    tr -s '\\r\\n' ' ' < \"$1\"\n  fi\n}\n\nlog() {\n  if [ \"$MVNW_VERBOSE\" = true ]; then\n    printf '%s\\n' \"$1\"\n  fi\n}\n\nBASE_DIR=$(find_maven_basedir \"$(dirname \"$0\")\")\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\nMAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}; export MAVEN_PROJECTBASEDIR\nlog \"$MAVEN_PROJECTBASEDIR\"\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nwrapperJarPath=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\"\nif [ -r \"$wrapperJarPath\" ]; then\n    log \"Found $wrapperJarPath\"\nelse\n    log \"Couldn't find $wrapperJarPath, downloading it ...\"\n\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      wrapperUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    else\n      wrapperUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    fi\n    while IFS=\"=\" read -r key value; do\n      # Remove '\\r' from value to allow usage on windows as IFS does not consider '\\r' as a separator ( considers space, tab, new line ('\\n'), and custom '=' )\n      safeValue=$(echo \"$value\" | tr -d '\\r')\n      case \"$key\" in (wrapperUrl) wrapperUrl=\"$safeValue\"; break ;;\n      esac\n    done < \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\n    log \"Downloading from: $wrapperUrl\"\n\n    if $cygwin; then\n      wrapperJarPath=$(cygpath --path --windows \"$wrapperJarPath\")\n    fi\n\n    if command -v wget > /dev/null; then\n        log \"Found wget ... using wget\"\n        [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--quiet\"\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget $QUIET \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        else\n            wget $QUIET --http-user=\"$MVNW_USERNAME\" --http-password=\"$MVNW_PASSWORD\" \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        log \"Found curl ... using curl\"\n        [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--silent\"\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl $QUIET -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n        else\n            curl $QUIET --user \"$MVNW_USERNAME:$MVNW_PASSWORD\" -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n        fi\n    else\n        log \"Falling back to using Java to download\"\n        javaSource=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        javaClass=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.class\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaSource=$(cygpath --path --windows \"$javaSource\")\n          javaClass=$(cygpath --path --windows \"$javaClass\")\n        fi\n        if [ -e \"$javaSource\" ]; then\n            if [ ! -e \"$javaClass\" ]; then\n                log \" - Compiling MavenWrapperDownloader.java ...\"\n                (\"$JAVA_HOME/bin/javac\" \"$javaSource\")\n            fi\n            if [ -e \"$javaClass\" ]; then\n                log \" - Running MavenWrapperDownloader.java ...\"\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$wrapperUrl\" \"$wrapperJarPath\") || rm -f \"$wrapperJarPath\"\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\n# If specified, validate the SHA-256 sum of the Maven wrapper jar file\nwrapperSha256Sum=\"\"\nwhile IFS=\"=\" read -r key value; do\n  case \"$key\" in (wrapperSha256Sum) wrapperSha256Sum=$value; break ;;\n  esac\ndone < \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\nif [ -n \"$wrapperSha256Sum\" ]; then\n  wrapperSha256Result=false\n  if command -v sha256sum > /dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | sha256sum -c > /dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  elif command -v shasum > /dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | shasum -a 256 -c > /dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\"\n    echo \"Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties.\"\n    exit 1\n  fi\n  if [ $wrapperSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.\" >&2\n    echo \"Investigate or delete $wrapperJarPath to attempt a clean download.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified wrapperSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=$(cygpath --path --windows \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=$(cygpath --path --windows \"$CLASSPATH\")\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\")\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $*\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\n# shellcheck disable=SC2086 # safe args\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 7.61328125,
          "content": "@REM ----------------------------------------------------------------------------\r\n@REM Licensed to the Apache Software Foundation (ASF) under one\r\n@REM or more contributor license agreements.  See the NOTICE file\r\n@REM distributed with this work for additional information\r\n@REM regarding copyright ownership.  The ASF licenses this file\r\n@REM to you under the Apache License, Version 2.0 (the\r\n@REM \"License\"); you may not use this file except in compliance\r\n@REM with the License.  You may obtain a copy of the License at\r\n@REM\r\n@REM    http://www.apache.org/licenses/LICENSE-2.0\r\n@REM\r\n@REM Unless required by applicable law or agreed to in writing,\r\n@REM software distributed under the License is distributed on an\r\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n@REM KIND, either express or implied.  See the License for the\r\n@REM specific language governing permissions and limitations\r\n@REM under the License.\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@REM ----------------------------------------------------------------------------\r\n@REM Apache Maven Wrapper startup batch script, version 3.2.0\r\n@REM\r\n@REM Required ENV vars:\r\n@REM JAVA_HOME - location of a JDK home dir\r\n@REM\r\n@REM Optional ENV vars\r\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\r\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\r\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\r\n@REM     e.g. to debug Maven itself, use\r\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\r\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\r\n@REM ----------------------------------------------------------------------------\r\n\r\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\r\n@echo off\r\n@REM set title of command window\r\ntitle %0\r\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\r\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\r\n\r\n@REM set %HOME% to equivalent of $HOME\r\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\r\n\r\n@REM Execute a user defined script before this one\r\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\r\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\r\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\r\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\r\n:skipRcPre\r\n\r\n@setlocal\r\n\r\nset ERROR_CODE=0\r\n\r\n@REM To isolate internal variables from possible post scripts, we use another setlocal\r\n@setlocal\r\n\r\n@REM ==== START VALIDATION ====\r\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\r\n\r\necho.\r\necho Error: JAVA_HOME not found in your environment. >&2\r\necho Please set the JAVA_HOME variable in your environment to match the >&2\r\necho location of your Java installation. >&2\r\necho.\r\ngoto error\r\n\r\n:OkJHome\r\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\r\n\r\necho.\r\necho Error: JAVA_HOME is set to an invalid directory. >&2\r\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\r\necho Please set the JAVA_HOME variable in your environment to match the >&2\r\necho location of your Java installation. >&2\r\necho.\r\ngoto error\r\n\r\n@REM ==== END VALIDATION ====\r\n\r\n:init\r\n\r\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\r\n@REM Fallback to current working directory if not found.\r\n\r\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\r\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\r\n\r\nset EXEC_DIR=%CD%\r\nset WDIR=%EXEC_DIR%\r\n:findBaseDir\r\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\r\ncd ..\r\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\r\nset WDIR=%CD%\r\ngoto findBaseDir\r\n\r\n:baseDirFound\r\nset MAVEN_PROJECTBASEDIR=%WDIR%\r\ncd \"%EXEC_DIR%\"\r\ngoto endDetectBaseDir\r\n\r\n:baseDirNotFound\r\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\r\ncd \"%EXEC_DIR%\"\r\n\r\n:endDetectBaseDir\r\n\r\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\r\n\r\n@setlocal EnableExtensions EnableDelayedExpansion\r\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\r\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\r\n\r\n:endReadAdditionalConfig\r\n\r\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\r\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\r\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\r\n\r\nset WRAPPER_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\r\n\r\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\r\n    IF \"%%A\"==\"wrapperUrl\" SET WRAPPER_URL=%%B\r\n)\r\n\r\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\r\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\r\nif exist %WRAPPER_JAR% (\r\n    if \"%MVNW_VERBOSE%\" == \"true\" (\r\n        echo Found %WRAPPER_JAR%\r\n    )\r\n) else (\r\n    if not \"%MVNW_REPOURL%\" == \"\" (\r\n        SET WRAPPER_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\r\n    )\r\n    if \"%MVNW_VERBOSE%\" == \"true\" (\r\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\r\n        echo Downloading from: %WRAPPER_URL%\r\n    )\r\n\r\n    powershell -Command \"&{\"^\r\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\r\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\r\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\r\n\t\t\"}\"^\r\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')\"^\r\n\t\t\"}\"\r\n    if \"%MVNW_VERBOSE%\" == \"true\" (\r\n        echo Finished downloading %WRAPPER_JAR%\r\n    )\r\n)\r\n@REM End of extension\r\n\r\n@REM If specified, validate the SHA-256 sum of the Maven wrapper jar file\r\nSET WRAPPER_SHA_256_SUM=\"\"\r\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\r\n    IF \"%%A\"==\"wrapperSha256Sum\" SET WRAPPER_SHA_256_SUM=%%B\r\n)\r\nIF NOT %WRAPPER_SHA_256_SUM%==\"\" (\r\n    powershell -Command \"&{\"^\r\n       \"$hash = (Get-FileHash \\\"%WRAPPER_JAR%\\\" -Algorithm SHA256).Hash.ToLower();\"^\r\n       \"If('%WRAPPER_SHA_256_SUM%' -ne $hash){\"^\r\n       \"  Write-Output 'Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.';\"^\r\n       \"  Write-Output 'Investigate or delete %WRAPPER_JAR% to attempt a clean download.';\"^\r\n       \"  Write-Output 'If you updated your Maven version, you need to update the specified wrapperSha256Sum property.';\"^\r\n       \"  exit 1;\"^\r\n       \"}\"^\r\n       \"}\"\r\n    if ERRORLEVEL 1 goto error\r\n)\r\n\r\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\r\n@REM work with both Windows and non-Windows executions.\r\nset MAVEN_CMD_LINE_ARGS=%*\r\n\r\n%MAVEN_JAVA_EXE% ^\r\n  %JVM_CONFIG_MAVEN_PROPS% ^\r\n  %MAVEN_OPTS% ^\r\n  %MAVEN_DEBUG_OPTS% ^\r\n  -classpath %WRAPPER_JAR% ^\r\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\r\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\r\nif ERRORLEVEL 1 goto error\r\ngoto end\r\n\r\n:error\r\nset ERROR_CODE=1\r\n\r\n:end\r\n@endlocal & set ERROR_CODE=%ERROR_CODE%\r\n\r\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\r\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\r\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\r\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\r\n:skipRcPost\r\n\r\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\r\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\r\n\r\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\r\n\r\ncmd /C exit /B %ERROR_CODE%\r\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 39.1396484375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n\n    Licensed to the Apache Software Foundation (ASF) under one\n    or more contributor license agreements.  See the NOTICE file\n    distributed with this work for additional information\n    regarding copyright ownership.  The ASF licenses this file\n    to you under the Apache License, Version 2.0 (the\n    \"License\"); you may not use this file except in compliance\n    with the License.  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing,\n    software distributed under the License is distributed on an\n    \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, either express or implied.  See the License for the\n    specific language governing permissions and limitations\n    under the License.\n\n-->\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>org.apache</groupId>\n        <artifactId>apache</artifactId>\n        <version>31</version>\n    </parent>\n\n    <groupId>org.apache.curator</groupId>\n    <artifactId>apache-curator</artifactId>\n    <version>5.7.2-SNAPSHOT</version>\n    <packaging>pom</packaging>\n\n    <name>Apache Curator</name>\n    <description>\n        Curator is a set of Java libraries that make using Apache ZooKeeper much easier.\n    </description>\n    <url>https://curator.apache.org</url>\n    <inceptionYear>2011</inceptionYear>\n\n    <licenses>\n        <license>\n            <name>The Apache Software License, Version 2.0</name>\n            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <organization>\n        <name>The Apache Software Foundation</name>\n        <url>https://www.apache.org/</url>\n    </organization>\n\n    <properties>\n        <!-- maven properties -->\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <dependency.locations.enabled>false</dependency.locations.enabled>\n\n        <currentStableVersion>5.7.1</currentStableVersion>\n\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.build.resourceEncoding>UTF-8</project.build.resourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n\n        <short-jdk-version>8</short-jdk-version>\n        <jdk-version>1.${short-jdk-version}</jdk-version>\n\n        <redirectTestOutputToFile>true</redirectTestOutputToFile>\n\n        <!-- versions -->\n        <zookeeper-version>3.9.2</zookeeper-version>\n        <maven-bundle-plugin-version>5.1.4</maven-bundle-plugin-version>\n        <maven-compiler-plugin-version>3.10.0</maven-compiler-plugin-version>\n        <maven-dependency-plugin-version>3.2.0</maven-dependency-plugin-version>\n        <maven-project-info-reports-plugin-version>3.0.0</maven-project-info-reports-plugin-version>\n        <maven-javadoc-plugin-version>3.3.2</maven-javadoc-plugin-version>\n        <maven-surefire-plugin-version>3.0.0-M5</maven-surefire-plugin-version>\n        <spotless.version>2.39.0</spotless.version>\n        <doxia-module-confluence-version>1.11.1</doxia-module-confluence-version>\n        <javassist-version>3.24.1-GA</javassist-version>\n        <commons-math-version>2.2</commons-math-version>\n        <jackson-mapper-asl-version>1.9.13</jackson-mapper-asl-version>\n        <jackson-version>2.13.5</jackson-version>\n        <assertj-version>3.23.1</assertj-version>\n        <!-- Upgrading to Jersey 2.x is difficult and of unclear benefits, see\n             https://stackoverflow.com/questions/17098341#22033825 -->\n        <jersey-version>1.19.4</jersey-version>\n        <jsr311-api-version>1.1.1</jsr311-api-version>\n        <!-- See https://stackoverflow.com/questions/43574426#comment93992044_43574427 -->\n        <jaxb-version>2.2.11</jaxb-version>\n        <javax-activation-version>1.1.1</javax-activation-version>\n        <jetty-version>9.4.45.v20220203</jetty-version>\n        <scannotation-version>1.0.2</scannotation-version>\n        <!-- resteasy-jaxrs dependency cannot be higher than 2.x for compatibility with Jersey 1.x -->\n        <resteasy-jaxrs-version>2.3.5.Final</resteasy-jaxrs-version>\n        <guava-version>32.0.0-jre</guava-version>\n        <guava-listenablefuture-version>9999.0-empty-to-avoid-conflict-with-guava</guava-listenablefuture-version>\n        <guava-failureaccess-version>1.0.1</guava-failureaccess-version>\n        <junit-version>5.6.2</junit-version>\n        <swift-version>0.23.1</swift-version>\n        <maven-shade-plugin-version>3.2.4</maven-shade-plugin-version>\n        <slf4j-version>1.7.25</slf4j-version>\n        <clirr-maven-plugin-version>2.8</clirr-maven-plugin-version>\n        <dropwizard-version>3.2.5</dropwizard-version>\n        <snappy-version>1.1.10.4</snappy-version>\n        <build-helper-maven-plugin-version>3.3.0</build-helper-maven-plugin-version>\n        <awaitility-version>4.1.1</awaitility-version>\n\n        <!-- OSGi Properties -->\n        <osgi.export.package />\n        <osgi.import.package />\n        <osgi.private.package />\n        <osgi.dynamic.import />\n        <osgi.require.bundle />\n        <osgi.export.service />\n        <osgi.activator />\n    </properties>\n\n    <scm>\n        <url>https://github.com/apache/curator.git</url>\n        <connection>scm:git:https://gitbox.apache.org/repos/asf/curator.git</connection>\n        <developerConnection>scm:git:https://gitbox.apache.org/repos/asf/curator.git\n        </developerConnection>\n        <tag>HEAD</tag>\n    </scm>\n\n    <issueManagement>\n        <system>JIRA</system>\n        <url>https://issues.apache.org/jira/browse/CURATOR</url>\n    </issueManagement>\n\n    <mailingLists>\n        <mailingList>\n            <name>Users</name>\n            <subscribe>mailto:user-subscribe@curator.apache.org</subscribe>\n            <unsubscribe>mailto:user-unsubscribe@curator.apache.org</unsubscribe>\n            <post>mailto:user@curator.apache.org</post>\n            <archive>https://mail-archives.apache.org/mod_mbox/curator-user/</archive>\n        </mailingList>\n        <mailingList>\n            <name>Development</name>\n            <subscribe>mailto:dev-subscribe@curator.apache.org</subscribe>\n            <unsubscribe>mailto:dev-unsubscribe@curator.apache.org</unsubscribe>\n            <post>mailto:dev@curator.apache.org</post>\n            <archive>https://mail-archives.apache.org/mod_mbox/curator-dev/</archive>\n        </mailingList>\n        <mailingList>\n            <name>Commits</name>\n            <subscribe>mailto:commits-subscribe@curator.apache.org</subscribe>\n            <unsubscribe>mailto:commits-unsubscribe@curator.apache.org</unsubscribe>\n            <post>mailto:commits@curator.apache.org</post>\n            <archive>https://mail-archives.apache.org/mod_mbox/curator-commits/</archive>\n        </mailingList>\n    </mailingLists>\n\n    <developers>\n        <developer>\n            <id>randgalt</id>\n            <name>Jordan Zimmerman</name>\n            <email>randgalt@apache.org</email>\n            <timezone>-5</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n            </roles>\n            <url>https://people.apache.org/~randgalt</url>\n        </developer>\n\n        <developer>\n            <id>zarfide</id>\n            <name>Jay Zarfoss</name>\n            <email>zarfide@apache.org</email>\n            <timezone>-8</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n            </roles>\n            <url>https://www.linkedin.com/pub/jay-zarfoss/34/56/a19</url>\n        </developer>\n\n        <developer>\n            <id>cheddar</id>\n            <name>Eric Tschetter</name>\n            <email>cheddar@apache.org</email>\n            <timezone>-6</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n                <role>ChedHeader</role>\n            </roles>\n        </developer>\n        <developer>\n            <id>iocanel</id>\n            <name>Ioannis Canellos</name>\n            <email>iocanel@apache.org</email>\n            <timezone>+2</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n            </roles>\n            <url>https://iocanel.blogspot.com</url>\n        </developer>\n\n        <developer>\n            <id>cammckenzie</id>\n            <name>Cameron McKenzie</name>\n            <email>cammckenzie@apache.org</email>\n            <timezone>+10</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n            </roles>\n            <url>https://people.apache.org/~cammckenzie</url>\n        </developer>\n\n        <developer>\n            <id>dragonsinth</id>\n            <name>Scott Blum</name>\n            <email>dragonsinth@apache.org</email>\n            <timezone>-5</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n            </roles>\n            <url>https://github.com/dragonsinth</url>\n        </developer>\n\n        <developer>\n            <id>mdrob</id>\n            <name>Mike Drob</name>\n            <email>mdrob@apache.org</email>\n            <timezone>-6</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n            </roles>\n            <url>https://people.apache.org/~mdrob</url>\n        </developer>\n\n        <developer>\n            <name>Patrick Hunt</name>\n            <email>phunt1@gmail.com</email>\n            <roles>\n                <role>PMC Member</role>\n            </roles>\n            <timezone>-8</timezone>\n            <url>https://www.linkedin.com/pub/patrick-hunt/2/5b2/24a</url>\n        </developer>\n\n        <developer>\n            <name>Mahadev Konar</name>\n            <email>mahadev@apache.org</email>\n            <roles>\n                <role>PMC Member</role>\n            </roles>\n            <timezone>-8</timezone>\n            <url>https://www.linkedin.com/in/mahadevkonar</url>\n        </developer>\n\n        <developer>\n            <name>Luciano Resende</name>\n            <email>lresende@apache.org</email>\n            <roles>\n                <role>PMC Member</role>\n            </roles>\n            <timezone>-8</timezone>\n            <url>https://people.apache.org/~lresende</url>\n        </developer>\n\n        <developer>\n            <name>Enis Söztutar</name>\n            <email>enis@apache.org</email>\n            <roles>\n                <role>PMC Member</role>\n            </roles>\n            <timezone>-8</timezone>\n            <url>https://people.apache.org/~enis</url>\n        </developer>\n\n        <developer>\n            <name>Fangmin Lyu</name>\n            <email>fangmin@apache.org</email>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n            </roles>\n            <timezone>-8</timezone>\n            <url>https://people.apache.org/~fangmin</url>\n        </developer>\n\n        <developer>\n            <id>shayshim</id>\n            <name>Shay Shimony</name>\n            <email>shayshim@apache.org</email>\n            <timezone>+2</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n            </roles>\n            <url>https://people.apache.org/~shayshim</url>\n        </developer>\n\n        <developer>\n            <id>eolivelli</id>\n            <name>Enrico Olivelli</name>\n            <email>eolivelli@apache.org</email>\n            <timezone>+1</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Chair</role>\n            </roles>\n            <url>https://people.apache.org/~eolivelli</url>\n        </developer>\n\n        <developer>\n            <id>tison</id>\n            <name>Zili Chen</name>\n            <email>tison@apache.org</email>\n            <timezone>+8</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n            </roles>\n            <url>https://github.com/tisonkun/</url>\n        </developer>\n\n        <developer>\n            <id>kezhuw</id>\n            <name>Kezhu Wang</name>\n            <email>kezhuw@apache.org</email>\n            <timezone>+8</timezone>\n            <roles>\n                <role>Committer</role>\n                <role>PMC Member</role>\n            </roles>\n            <url>https://github.com/kezhuw</url>\n        </developer>\n    </developers>\n\n    <modules>\n        <module>curator-client</module>\n        <module>curator-test</module>\n        <module>curator-framework</module>\n        <module>curator-recipes</module>\n        <module>curator-examples</module>\n        <module>curator-x-discovery</module>\n        <module>curator-x-discovery-server</module>\n        <module>curator-x-async</module>\n        <module>curator-test-zk35</module>\n        <module>curator-test-zk36</module>\n        <module>curator-test-zk37</module>\n        <module>curator-test-zk38</module>\n    </modules>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-log4j12</artifactId>\n                <version>${slf4j-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.assertj</groupId>\n                <artifactId>assertj-core</artifactId>\n                <version>${assertj-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-client</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-client</artifactId>\n                <type>test-jar</type>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-framework</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-framework</artifactId>\n                <type>test-jar</type>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-recipes</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-recipes</artifactId>\n                <version>${project.version}</version>\n                <type>test-jar</type>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-test</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-x-discovery</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-x-discovery-server</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.curator</groupId>\n                <artifactId>curator-x-async</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-math</artifactId>\n                <version>${commons-math-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-core</artifactId>\n                <version>${jackson-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n                <version>${jackson-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.sun.jersey</groupId>\n                <artifactId>jersey-server</artifactId>\n                <version>${jersey-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.sun.jersey</groupId>\n                <artifactId>jersey-servlet</artifactId>\n                <version>${jersey-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.sun.jersey</groupId>\n                <artifactId>jersey-client</artifactId>\n                <version>${jersey-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.sun.jersey</groupId>\n                <artifactId>jersey-core</artifactId>\n                <version>${jersey-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>javax.ws.rs</groupId>\n                <artifactId>jsr311-api</artifactId>\n                <version>${jsr311-api-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>javax.xml.bind</groupId>\n                <artifactId>jaxb-api</artifactId>\n                <version>${jaxb-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.sun.xml.bind</groupId>\n                <artifactId>jaxb-core</artifactId>\n                <version>${jaxb-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.sun.xml.bind</groupId>\n                <artifactId>jaxb-impl</artifactId>\n                <version>${jaxb-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>javax.activation</groupId>\n                <artifactId>activation</artifactId>\n                <version>${javax-activation-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-webapp</artifactId>\n                <version>${jetty-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>net.sf.scannotation</groupId>\n                <artifactId>scannotation</artifactId>\n                <version>${scannotation-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.jboss.resteasy</groupId>\n                <artifactId>resteasy-jaxrs</artifactId>\n                <version>${resteasy-jaxrs-version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.scannotation</groupId>\n                        <artifactId>scannotation</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.apache.zookeeper</groupId>\n                <artifactId>zookeeper</artifactId>\n                <version>${zookeeper-version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.sun.jmx</groupId>\n                        <artifactId>jmxri</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>com.sun.jdmk</groupId>\n                        <artifactId>jmxtools</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>javax.jms</groupId>\n                        <artifactId>jms</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>junit</groupId>\n                        <artifactId>junit</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-log4j12</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>ch.qos.logback</groupId>\n                        <artifactId>logback-classic</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>guava</artifactId>\n                <version>${guava-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>listenablefuture</artifactId>\n                <version>${guava-listenablefuture-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>failureaccess</artifactId>\n                <version>${guava-failureaccess-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter-api</artifactId>\n                <version>${junit-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter-engine</artifactId>\n                <version>${junit-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.swift</groupId>\n                <artifactId>swift-codec</artifactId>\n                <version>${swift-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>com.facebook.swift</groupId>\n                <artifactId>swift-service</artifactId>\n                <version>${swift-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.dropwizard</groupId>\n                <artifactId>dropwizard-configuration</artifactId>\n                <version>${dropwizard-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.dropwizard</groupId>\n                <artifactId>dropwizard-logging</artifactId>\n                <version>${dropwizard-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>io.dropwizard.metrics</groupId>\n                <artifactId>metrics-core</artifactId>\n                <version>${dropwizard-version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>org.slf4j</groupId>\n                        <artifactId>slf4j-api</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n\n            <dependency>\n                <groupId>org.xerial.snappy</groupId>\n                <artifactId>snappy-java</artifactId>\n                <version>${snappy-version}</version>\n            </dependency>\n\n            <dependency>\n                <groupId>org.awaitility</groupId>\n                <artifactId>awaitility</artifactId>\n                <version>${awaitility-version}</version>\n                <scope>test</scope>\n            </dependency>\n\n        </dependencies>\n    </dependencyManagement>\n\n    <reporting>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-project-info-reports-plugin</artifactId>\n                <version>${maven-project-info-reports-plugin-version}</version>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>${maven-javadoc-plugin-version}</version>\n                <configuration>\n                    <additionalJOptions>\n                        <additionalJOption>-J-Xmx1g</additionalJOption>\n                    </additionalJOptions>\n                    <failOnError>false</failOnError>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>clirr-maven-plugin</artifactId>\n                <configuration>\n                    <includes>\n                        <include>org/apache/curator/**</include>\n                    </includes>\n                </configuration>\n            </plugin>\n        </plugins>\n    </reporting>\n\n    <build>\n        <pluginManagement>\n            <plugins>\n                <plugin>\n                    <groupId>org.apache.felix</groupId>\n                    <artifactId>maven-bundle-plugin</artifactId>\n                    <version>${maven-bundle-plugin-version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-release-plugin</artifactId>\n                    <configuration>\n                        <autoVersionSubmodules>true</autoVersionSubmodules>\n                        <tagNameFormat>${project.artifactId}-${project.version}</tagNameFormat>\n                        <pushChanges>false</pushChanges>\n                        <localCheckout>true</localCheckout>\n                    </configuration>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-shade-plugin</artifactId>\n                    <version>${maven-shade-plugin-version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>clirr-maven-plugin</artifactId>\n                    <version>${clirr-maven-plugin-version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.codehaus.mojo</groupId>\n                    <artifactId>build-helper-maven-plugin</artifactId>\n                    <version>${build-helper-maven-plugin-version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>org.apache.maven.plugins</groupId>\n                    <artifactId>maven-dependency-plugin</artifactId>\n                    <version>${maven-dependency-plugin-version}</version>\n                </plugin>\n\n                <plugin>\n                    <groupId>com.diffplug.spotless</groupId>\n                    <artifactId>spotless-maven-plugin</artifactId>\n                    <version>${spotless.version}</version>\n                </plugin>\n            </plugins>\n        </pluginManagement>\n\n        <resources>\n            <resource>\n                <directory>${basedir}</directory>\n                <targetPath>META-INF</targetPath>\n                <includes>\n                    <include>DISCLAIMER</include>\n                    <include>LICENSE</include>\n                    <include>NOTICE</include>\n                </includes>\n            </resource>\n        </resources>\n\n        <plugins>\n            <plugin>\n                <groupId>org.apache.felix</groupId>\n                <artifactId>maven-bundle-plugin</artifactId>\n                <extensions>true</extensions>\n                <inherited>true</inherited>\n                <configuration>\n                    <instructions>\n                        <Bundle-Name>${project.name}</Bundle-Name>\n                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>\n                        <Export-Package>${osgi.export.package}</Export-Package>\n                        <Import-Package>${osgi.import.package}</Import-Package>\n                        <DynamicImport-Package>${osgi.dynamic.import}</DynamicImport-Package>\n                        <Private-Package>${osgi.private.package}</Private-Package>\n                        <Require-Bundle>${osgi.require.bundle}</Require-Bundle>\n                        <Bundle-Activator>${osgi.activator}</Bundle-Activator>\n                        <Export-Service>${osgi.export.service}</Export-Service>\n                    </instructions>\n                    <supportedProjectTypes>\n                        <supportedProjectType>jar</supportedProjectType>\n                        <supportedProjectType>war</supportedProjectType>\n                        <supportedProjectType>bundle</supportedProjectType>\n                    </supportedProjectTypes>\n                    <unpackBundle>true</unpackBundle>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>bundle-manifest</id>\n                        <phase>process-classes</phase>\n                        <goals>\n                            <goal>manifest</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>${maven-surefire-plugin-version}</version>\n                <configuration>\n                    <threadCount>1</threadCount>\n                    <reuseForks>false</reuseForks>\n                    <redirectTestOutputToFile>${redirectTestOutputToFile}</redirectTestOutputToFile>\n                    <rerunFailingTestsCount>2</rerunFailingTestsCount>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <configuration>\n                    <additionalJOptions>\n                        <additionalJOption>-J-Xmx1g</additionalJOption>\n                    </additionalJOptions>\n                    <failOnError>false</failOnError>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-release-plugin</artifactId>\n                <configuration>\n                    <arguments>-DskipTests</arguments>\n                    <mavenExecutorId>forked-path</mavenExecutorId>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>clirr-maven-plugin</artifactId>\n                <configuration>\n                    <failOnError>false</failOnError>\n                    <logResults>false</logResults>\n                    <includes>\n                        <include>org/apache/curator/**</include>\n                    </includes>\n                </configuration>\n                <executions>\n                    <execution>\n                        <phase>compile</phase>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>apache-curator-guava-shader</id>\n                        <goals>\n                            <goal>shade</goal>\n                        </goals>\n                        <phase>package</phase>\n                        <configuration>\n                            <createDependencyReducedPom>false</createDependencyReducedPom>\n                            <relocations>\n                                <relocation>\n                                    <pattern>com.google</pattern>\n                                    <shadedPattern>org.apache.curator.shaded.com.google</shadedPattern>\n                                </relocation>\n                            </relocations>\n                            <artifactSet>\n                                <includes>\n                                    <include>${project.groupId}:${project.artifactId}</include>\n                                </includes>\n                            </artifactSet>\n                            <filters>\n                                <filter>\n                                    <artifact>com.google.guava:guava</artifact>\n                                    <excludes>\n                                        <exclude>META-INF/**</exclude>\n                                    </excludes>\n                                </filter>\n                                <filter>\n                                    <artifact>com.google.guava:listenablefuture</artifact>\n                                    <excludes>\n                                        <exclude>META-INF/**</exclude>\n                                    </excludes>\n                                </filter>\n                                <filter>\n                                    <artifact>com.google.guava:failureaccess</artifact>\n                                    <excludes>\n                                        <exclude>META-INF/**</exclude>\n                                    </excludes>\n                                </filter>\n                            </filters>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-antrun-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>run</goal>\n                        </goals>\n                        <configuration>\n                            <target>\n                                <condition property=\"skip-attaching-original-artifact\" else=\"false\">\n                                    <not>\n                                        <or>\n                                            <equals arg1=\"${project.packaging}\" arg2=\"jar\" />\n                                            <equals arg1=\"${project.packaging}\" arg2=\"bundle\" />\n                                        </or>\n                                    </not>\n                                </condition>\n                            </target>\n                            <exportAntProperties>true</exportAntProperties>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>build-helper-maven-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <phase>package</phase>\n                        <goals>\n                            <goal>attach-artifact</goal>\n                        </goals>\n                        <configuration>\n                            <artifacts>\n                                <artifact>\n                                    <file>${project.build.directory}/original-${project.build.finalName}.jar</file>\n                                    <type>jar</type>\n                                    <classifier>osgi</classifier>\n                                </artifact>\n                            </artifacts>\n                            <skipAttach>${skip-attaching-original-artifact}</skipAttach>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-dependency-plugin</artifactId>\n                <version>${maven-dependency-plugin-version}</version>\n            </plugin>\n\n            <plugin>\n                <groupId>com.diffplug.spotless</groupId>\n                <artifactId>spotless-maven-plugin</artifactId>\n                <configuration>\n                    <java>\n                        <palantirJavaFormat>\n                            <version>2.38.0</version>\n                        </palantirJavaFormat>\n                        <!-- static imports first, then others, no blank lines  -->\n                        <importOrder>\n                            <order>\\#|</order>\n                        </importOrder>\n                        <removeUnusedImports />\n                        <trimTrailingWhitespace />\n                        <endWithNewline />\n                        <indent>\n                            <spaces>true</spaces>\n                            <spacesPerTab>4</spacesPerTab>\n                        </indent>\n                    </java>\n                </configuration>\n            </plugin>\n        </plugins>\n    </build>\n\n    <profiles>\n        <profile>\n            <id>jdk-8-minus</id>\n            <activation>\n                <jdk>(,1.8]</jdk>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-compiler-plugin</artifactId>\n                        <version>${maven-compiler-plugin-version}</version>\n                        <configuration>\n                            <source>${jdk-version}</source>\n                            <target>${jdk-version}</target>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>jdk-9-plus</id>\n            <activation>\n                <jdk>[1.9,)</jdk>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-compiler-plugin</artifactId>\n                        <version>${maven-compiler-plugin-version}</version>\n                        <configuration>\n                            <release>${short-jdk-version}</release>\n                        </configuration>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-surefire-plugin</artifactId>\n                        <configuration>\n                            <argLine>--add-opens=java.base/java.lang=ALL-UNNAMED\n                                --add-opens=java.base/java.math=ALL-UNNAMED\n                                --add-opens=java.base/java.util=ALL-UNNAMED\n                                --add-opens=java.base/java.util.concurrent=ALL-UNNAMED\n                                --add-opens=java.base/java.net=ALL-UNNAMED\n                                --add-opens=java.base/java.text=ALL-UNNAMED\n                                --add-opens=java.sql/java.sql=ALL-UNNAMED</argLine>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>staging-repo</id>\n            <repositories>\n                <repository>\n                    <id>staging-repo</id>\n                    <url>https://repository.apache.org/content/groups/staging/</url>\n                </repository>\n            </repositories>\n        </profile>\n    </profiles>\n</project>\n"
        }
      ]
    }
  ]
}