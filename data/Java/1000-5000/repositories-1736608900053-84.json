{
  "metadata": {
    "timestamp": 1736608900053,
    "page": 84,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mock-server/mockserver",
      "stars": 4653,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".buildkite",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 10.93359375,
          "content": "root = true\n\n[*]\ncharset = utf-8\nend_of_line=lf\ninsert_final_newline=false\nindent_style=space\nindent_size=4\nmax_line_length=220\n\n[*.yml]\nindent_size=2\n\n[*.java]\ntrim_trailing_whitespace = true\nij_java_align_consecutive_assignments = false\nij_java_align_consecutive_variable_declarations = false\nij_java_align_group_field_declarations = false\nij_java_align_multiline_annotation_parameters = false\nij_java_align_multiline_array_initializer_expression = false\nij_java_align_multiline_assignment = false\nij_java_align_multiline_binary_operation = false\nij_java_align_multiline_chained_methods = true\nij_java_align_multiline_extends_list = false\nij_java_align_multiline_for = true\nij_java_align_multiline_method_parentheses = false\nij_java_align_multiline_parameters = true\nij_java_align_multiline_parameters_in_calls = true\nij_java_align_multiline_parenthesized_expression = false\nij_java_align_multiline_records = true\nij_java_align_multiline_resources = true\nij_java_align_multiline_ternary_operation = false\nij_java_align_multiline_text_blocks = false\nij_java_align_multiline_throws_list = false\nij_java_align_subsequent_simple_methods = false\nij_java_align_throws_keyword = false\nij_java_annotation_parameter_wrap = off\nij_java_array_initializer_new_line_after_left_brace = false\nij_java_array_initializer_right_brace_on_new_line = false\nij_java_array_initializer_wrap = off\nij_java_assert_statement_colon_on_next_line = false\nij_java_assert_statement_wrap = off\nij_java_assignment_wrap = off\nij_java_binary_operation_sign_on_next_line = false\nij_java_binary_operation_wrap = off\nij_java_blank_lines_after_anonymous_class_header = 0\nij_java_blank_lines_after_class_header = 0\nij_java_blank_lines_after_imports = 1\nij_java_blank_lines_after_package = 1\nij_java_blank_lines_around_class = 1\nij_java_blank_lines_around_field = 0\nij_java_blank_lines_around_field_in_interface = 0\nij_java_blank_lines_around_initializer = 1\nij_java_blank_lines_around_method = 1\nij_java_blank_lines_around_method_in_interface = 1\nij_java_blank_lines_before_class_end = 0\nij_java_blank_lines_before_imports = 1\nij_java_blank_lines_before_method_body = 0\nij_java_blank_lines_before_package = 0\nij_java_block_brace_style = end_of_line\nij_java_block_comment_add_space = false\nij_java_block_comment_at_first_column = true\nij_java_builder_methods = none\nij_java_call_parameters_new_line_after_left_paren = true\nij_java_call_parameters_right_paren_on_new_line = true\nij_java_call_parameters_wrap = on_every_item\nij_java_case_statement_on_separate_line = true\nij_java_catch_on_new_line = false\nij_java_class_annotation_wrap = split_into_lines\nij_java_class_brace_style = end_of_line\nij_java_class_count_to_use_import_on_demand = 5\nij_java_class_names_in_javadoc = 1\nij_java_do_not_indent_top_level_class_members = false\nij_java_do_not_wrap_after_single_annotation = false\nij_java_do_while_brace_force = never\nij_java_doc_add_blank_line_after_description = true\nij_java_doc_add_blank_line_after_param_comments = false\nij_java_doc_add_blank_line_after_return = false\nij_java_doc_add_p_tag_on_empty_lines = true\nij_java_doc_align_exception_comments = true\nij_java_doc_align_param_comments = true\nij_java_doc_do_not_wrap_if_one_line = false\nij_java_doc_enable_formatting = true\nij_java_doc_enable_leading_asterisks = true\nij_java_doc_indent_on_continuation = false\nij_java_doc_keep_empty_lines = true\nij_java_doc_keep_empty_parameter_tag = true\nij_java_doc_keep_empty_return_tag = true\nij_java_doc_keep_empty_throws_tag = true\nij_java_doc_keep_invalid_tags = true\nij_java_doc_param_description_on_new_line = false\nij_java_doc_preserve_line_breaks = false\nij_java_doc_use_throws_not_exception_tag = true\nij_java_else_on_new_line = false\nij_java_entity_dd_suffix = EJB\nij_java_entity_eb_suffix = Bean\nij_java_entity_hi_suffix = Home\nij_java_entity_lhi_prefix = Local\nij_java_entity_lhi_suffix = Home\nij_java_entity_li_prefix = Local\nij_java_entity_pk_class = java.lang.String\nij_java_entity_vo_suffix = VO\nij_java_enum_constants_wrap = off\nij_java_extends_keyword_wrap = off\nij_java_extends_list_wrap = off\nij_java_field_annotation_wrap = split_into_lines\nij_java_finally_on_new_line = false\nij_java_for_brace_force = never\nij_java_for_statement_new_line_after_left_paren = false\nij_java_for_statement_right_paren_on_new_line = false\nij_java_for_statement_wrap = off\nij_java_generate_final_locals = false\nij_java_generate_final_parameters = false\nij_java_if_brace_force = never\nij_java_imports_layout = *,|,javax.**,java.**,|,$*\nij_java_indent_case_from_switch = true\nij_java_insert_inner_class_imports = false\nij_java_insert_override_annotation = true\nij_java_keep_blank_lines_before_right_brace = 2\nij_java_keep_blank_lines_between_package_declaration_and_header = 2\nij_java_keep_blank_lines_in_code = 2\nij_java_keep_blank_lines_in_declarations = 2\nij_java_keep_builder_methods_indents = false\nij_java_keep_control_statement_in_one_line = true\nij_java_keep_first_column_comment = true\nij_java_keep_indents_on_empty_lines = false\nij_java_keep_line_breaks = true\nij_java_keep_multiple_expressions_in_one_line = false\nij_java_keep_simple_blocks_in_one_line = false\nij_java_keep_simple_classes_in_one_line = false\nij_java_keep_simple_lambdas_in_one_line = false\nij_java_keep_simple_methods_in_one_line = false\nij_java_label_indent_absolute = false\nij_java_label_indent_size = 0\nij_java_lambda_brace_style = end_of_line\nij_java_layout_static_imports_separately = true\nij_java_line_comment_add_space = false\nij_java_line_comment_at_first_column = true\nij_java_message_dd_suffix = EJB\nij_java_message_eb_suffix = Bean\nij_java_method_annotation_wrap = split_into_lines\nij_java_method_brace_style = end_of_line\nij_java_method_call_chain_wrap = on_every_item\nij_java_method_parameters_new_line_after_left_paren = false\nij_java_method_parameters_right_paren_on_new_line = false\nij_java_method_parameters_wrap = off\nij_java_modifier_list_wrap = false\nij_java_names_count_to_use_import_on_demand = 3\nij_java_new_line_after_lparen_in_record_header = false\nij_java_packages_to_use_import_on_demand = java.awt.*,javax.swing.*\nij_java_parameter_annotation_wrap = off\nij_java_parentheses_expression_new_line_after_left_paren = false\nij_java_parentheses_expression_right_paren_on_new_line = false\nij_java_place_assignment_sign_on_next_line = false\nij_java_prefer_longer_names = true\nij_java_prefer_parameters_wrap = false\nij_java_record_components_wrap = normal\nij_java_repeat_synchronized = true\nij_java_replace_instanceof_and_cast = false\nij_java_replace_null_check = true\nij_java_replace_sum_lambda_with_method_ref = true\nij_java_resource_list_new_line_after_left_paren = false\nij_java_resource_list_right_paren_on_new_line = false\nij_java_resource_list_wrap = off\nij_java_rparen_on_new_line_in_record_header = false\nij_java_session_dd_suffix = EJB\nij_java_session_eb_suffix = Bean\nij_java_session_hi_suffix = Home\nij_java_session_lhi_prefix = Local\nij_java_session_lhi_suffix = Home\nij_java_session_li_prefix = Local\nij_java_session_si_suffix = Service\nij_java_space_after_closing_angle_bracket_in_type_argument = false\nij_java_space_after_colon = true\nij_java_space_after_comma = true\nij_java_space_after_comma_in_type_arguments = true\nij_java_space_after_for_semicolon = true\nij_java_space_after_quest = true\nij_java_space_after_type_cast = true\nij_java_space_before_annotation_array_initializer_left_brace = false\nij_java_space_before_annotation_parameter_list = false\nij_java_space_before_array_initializer_left_brace = false\nij_java_space_before_catch_keyword = true\nij_java_space_before_catch_left_brace = true\nij_java_space_before_catch_parentheses = true\nij_java_space_before_class_left_brace = true\nij_java_space_before_colon = true\nij_java_space_before_colon_in_foreach = true\nij_java_space_before_comma = false\nij_java_space_before_do_left_brace = true\nij_java_space_before_else_keyword = true\nij_java_space_before_else_left_brace = true\nij_java_space_before_finally_keyword = true\nij_java_space_before_finally_left_brace = true\nij_java_space_before_for_left_brace = true\nij_java_space_before_for_parentheses = true\nij_java_space_before_for_semicolon = false\nij_java_space_before_if_left_brace = true\nij_java_space_before_if_parentheses = true\nij_java_space_before_method_call_parentheses = false\nij_java_space_before_method_left_brace = true\nij_java_space_before_method_parentheses = false\nij_java_space_before_opening_angle_bracket_in_type_parameter = false\nij_java_space_before_quest = true\nij_java_space_before_switch_left_brace = true\nij_java_space_before_switch_parentheses = true\nij_java_space_before_synchronized_left_brace = true\nij_java_space_before_synchronized_parentheses = true\nij_java_space_before_try_left_brace = true\nij_java_space_before_try_parentheses = true\nij_java_space_before_type_parameter_list = false\nij_java_space_before_while_keyword = true\nij_java_space_before_while_left_brace = true\nij_java_space_before_while_parentheses = true\nij_java_space_inside_one_line_enum_braces = false\nij_java_space_within_empty_array_initializer_braces = false\nij_java_space_within_empty_method_call_parentheses = false\nij_java_space_within_empty_method_parentheses = false\nij_java_spaces_around_additive_operators = true\nij_java_spaces_around_assignment_operators = true\nij_java_spaces_around_bitwise_operators = true\nij_java_spaces_around_equality_operators = true\nij_java_spaces_around_lambda_arrow = true\nij_java_spaces_around_logical_operators = true\nij_java_spaces_around_method_ref_dbl_colon = false\nij_java_spaces_around_multiplicative_operators = true\nij_java_spaces_around_relational_operators = true\nij_java_spaces_around_shift_operators = true\nij_java_spaces_around_type_bounds_in_type_parameters = true\nij_java_spaces_around_unary_operator = false\nij_java_spaces_within_angle_brackets = false\nij_java_spaces_within_annotation_parentheses = false\nij_java_spaces_within_array_initializer_braces = false\nij_java_spaces_within_braces = false\nij_java_spaces_within_brackets = false\nij_java_spaces_within_cast_parentheses = false\nij_java_spaces_within_catch_parentheses = false\nij_java_spaces_within_for_parentheses = false\nij_java_spaces_within_if_parentheses = false\nij_java_spaces_within_method_call_parentheses = false\nij_java_spaces_within_method_parentheses = false\nij_java_spaces_within_parentheses = false\nij_java_spaces_within_record_header = false\nij_java_spaces_within_switch_parentheses = false\nij_java_spaces_within_synchronized_parentheses = false\nij_java_spaces_within_try_parentheses = false\nij_java_spaces_within_while_parentheses = false\nij_java_special_else_if_treatment = true\nij_java_subclass_name_suffix = Impl\nij_java_ternary_operation_signs_on_next_line = false\nij_java_ternary_operation_wrap = off\nij_java_test_name_suffix = Test\nij_java_throws_keyword_wrap = off\nij_java_throws_list_wrap = off\nij_java_use_external_annotations = false\nij_java_use_fq_class_names = false\nij_java_use_relative_indents = false\nij_java_use_single_class_imports = true\nij_java_variable_annotation_wrap = off\nij_java_visibility = public\nij_java_while_brace_force = never\nij_java_while_on_new_line = false\nij_java_wrap_comments = false\nij_java_wrap_first_method_in_call_chain = true\nij_java_wrap_long_lines = false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.70703125,
          "content": "# Compiled source #\n###################\n*.class\n*.dll\n*.exe\n*.o\n*.so\n\n# Packages #\n############\n*.7z\n*.dmg\n*.gz\n*.iso\n*.jar\n!maven-wrapper.jar\n!gradle-wrapper.jar\n*.rar\n*.tar\n*.zip\nmods\n\n# Logs and databases #\n######################\n*.log\n*.log.*\n*.sql\n*.sqlite\n*.csv\n\n# Temp files #\n##############\nTODO.md\nbug\n\n# Runtime artifacts #\n#####################\nmockserver_keystore.jks\n\n# OS generated files #\n######################\n.DS_Store\n.DS_Store?\n._*\n.Spotlight-V100\n.Trashes\nIcon?\nehthumbs.db\nThumbs.db\n\n# JetBrains config files #\n##########################\n.idea\n*.iml\n\n# Eclipse config files #\n########################\n.project\n.classpath\n.settings\n\n# Maven build artifacts files #\n###############################\ntarget\npom.xml.releaseBackup\nrelease.properties\ngoogle\n.extract\n\n# rbenv config #\n################\n.ruby-version\n\n# Gradle build artifacts files #\n################################\n.gradle\nbuild\nout\n\n# grunt / node build artifacts #\n################################\nnode_modules\nnpm-debug.log\ntmp\ncustom_tmp\n.bundle\n\n# vagrant #\n###########\n.vagrant\n\n# drone.io build testing #\n##########################\ndrone.io\n\n# tomcat working directories #\n##############################\nmockserver-proxy-war/tomcat/\nmockserver-proxy-war/tomcat_proxy/\nmockserver-war/tomcat/\nmockserver-war/tomcat_mockserver/\n\n# test output #\n###############\nmockserver_keystore_*_jks\n/CertificateAuthorityCertificate.pem\n!/*/CertificateAuthorityCertificate.pem\n/PKCS8CertificateAuthorityPrivateKey.pem\n!/*/PKCS8CertificateAuthorityPrivateKey.pem\n/**/Certificate.pem\n/**/PKCS8PrivateKey.pem\n/*/mockserverInitialization*.json\npersistedExpectations.json\nmockserverInitialization.json\n/*.pem\n_test*.java\ngo_client\n\n# soft links #\n##############\nkube_config.yaml\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".run",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.49609375,
          "content": "### Issues\n\nIf you have any problems, please [check the project issues](https://github.com/mock-server/mockserver/issues?state=open) and avoid opening issues that have already been fixed.  When you open an issue please provide the following information:\n- MockServer version\n- How your running the MockServer (i.e maven plugin, docker, etc)\n- MockServer log output, at INFO level (or higher)\n- What the error is\n- What you are trying to do\n\n### Contributions\n\nPull requests are, of course, very welcome! Please read our [contributing to the project](https://github.com/mock-server/mockserver/wiki/Contributing-to-the-project) guide first. Then head over to the [open issues](https://github.com/mock-server/mockserver/issues?state=open) to see what we need help with. Make sure you let us know if you intend to work on something. Also check out <a href=\"https://trello.com/b/dsfTCP46/mockserver\" target=\"_blank\"><img height=\"20px\" src=\"http://mock-server.com/images/trello_badge-md.png\" alt=\"Trello Backlog\"></a> to see what is already in the backlog.\n\n### Feature Requests\n\nFeature requests are submitted to [github issues](https://github.com/mock-server/mockserver/issues?state=open).  Once accepted they will be added to the <a href=\"https://trello.com/b/dsfTCP46/mockserver\" target=\"_blank\">backlog</a>.  Please check out <a href=\"https://trello.com/b/dsfTCP46/mockserver\" target=\"_blank\"><img height=\"20px\" src=\"http://mock-server.com/images/trello_badge-md.png\" alt=\"Trello Backlog\"></a> to see what is already in the backlog.\n"
        },
        {
          "name": "DEBUGGING.md",
          "type": "blob",
          "size": 1.5498046875,
          "content": "### Debugging\n\nIt can be helpful to view packet capture to debug any issues with MockServer.\n\nThe [netshoot](https://github.com/nicolaka/netshoot) container has a helpful set of network debugging tools.\n\nThe following command can obtain a packet capture and the key log used to debug it:\n\n```shell\nCAPTURE_DIRECTORY=/tmp/mockserver_capture\nmkdir -p \"${CAPTURE_DIRECTORY}\"\nDATE_TIME=$(date +%H%M_%m_%d_%Y)\nCAPTURE_FILE=\"/tmp/mockserver_capture/capture_loopback_8443_${DATE_TIME}.pcap\"; echo \"CAPTURE_FILE: ${CAPTURE_FILE}\"\nKEY_LOG_FILE=\"/tmp/mockserver_capture/key_log_loopback_8443_${DATE_TIME}\"; echo \"KEY_LOG_FILE: ${KEY_LOG_FILE}\"\nsudo tcpdump -i lo0 -nn -w \"${CAPTURE_FILE}\" 'port 8443' &\ndocker run -v /tmp/mockserver_capture:/tmp/mockserver_capture -e SSLKEYLOGFILE=\"${KEY_LOG_FILE}\" nicolaka/netshoot curl -v -k -X PUT https://host.docker.internal:8443/mockserver/status https://host.docker.internal:8443/mockserver/status https://host.docker.internal:8443/mockserver/status\nsleep 3\nps -ef | grep \"sudo tcpdump\" | grep -v grep | awk '{ print $2 }' | xargs sudo kill\nls -lrt \"${CAPTURE_DIRECTORY}\"\nopen ${CAPTURE_FILE}\n```\n\n### HTTP2\n\nFor HTTP2 errors or connections being close \"early\" you can determine the issue by capturing the packets and key log then look at the clien'ts GOAWAY frame which may have an Error (such as PROTOCOL_ERROR) and Additional Debug Data.\n\nThe Additional Debug Data can be futher understood (for curl, nghttp and envoy clients) by looking at the nghttp c code, for example here: https://github.com/nghttp2/nghttp2/blob/master/lib/nghttp2_session.c#L4220"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.5810546875,
          "content": "MockServer &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Easily%20mock%20any%20system%20you%20integrate%20with%20via%20HTTP%20or%20HTTPS%2C%20or%20analysis%20and%20debug%20systems%20via%20HTTP%20or%20HTTPS%20by%20simple%20transparent%20proxying%20that%20allows%20easy%20inspection%20or%20modification%20of%20in%20flight%20requests&url=http://mock-server.com&hashtags=mock,proxy,http,testing,debug,developers) [![Build status](https://badge.buildkite.com/3b6803f4fe98cb5ed7bf18292a1434f800b53d8fecb92811d8.svg?branch=master&style=square&theme=slack)](https://buildkite.com/mockserver/mockserver) \n[![GitHub license](https://img.shields.io/github/license/mock-server/mockserver.svg)](https://github.com/mock-server/mockserver/blob/master/LICENSE.md) \n[![GitHub stars](https://img.shields.io/github/stars/mock-server/mockserver.svg)](https://github.com/mock-server/mockserver/stargazers)&nbsp;<a href=\"https://trello.com/b/dsfTCP46/mockserver\"><img height=\"20px\" width=\"47px\" src=\"http://mock-server.com/images/trello_badge.png\" alt=\"Trello Backlog\"></a>&nbsp;&nbsp;<a height=\"40px\" width=\"66px\" href=\"https://join-mock-server-slack.herokuapp.com\"><img height=\"40px\" src=\"http://mock-server.com/images/slack-logo-slim.png\" alt=\"Join Slack\"></a>\n=====\n\n### Documentation\n\nFor usage guide please see: [www.mock-server.com](http://www.mock-server.com/)\n\n### Change Log\n\nPlease see: [Change Log](https://github.com/mock-server/mockserver/blob/master/changelog.md)\n\n### Community\n\n<table>\n    <tr> \n        <td>Chat</td>\n        <td><a href=\"https://join-mock-server-slack.herokuapp.com\" target=\"_blank\"><img height=\"20px\" src=\"http://mock-server.com/images/slack-logo-slim-md.png\" alt=\"Join Slack\"></a></td>\n    </tr>\n    <tr>\n        <td>Feature Requests</td>\n        <td><a href=\"https://github.com/mock-server/mockserver/issues\"><img height=\"20px\" src=\"http://mock-server.com/images/GitHub_Logo-md.png\" alt=\"GitHub Issues\"></a></td>\n    </tr>\n    <tr> \n        <td>Issues / Bugs</td>\n        <td><a href=\"https://github.com/mock-server/mockserver/issues\"><img height=\"20px\" src=\"http://mock-server.com/images/GitHub_Logo-md.png\" alt=\"GitHub Issues\"></a></td>\n    </tr>\n    <tr>\n        <td>Backlog</td>\n        <td><a href=\"https://trello.com/b/dsfTCP46/mockserver\" target=\"_blank\"><img height=\"20px\" src=\"http://mock-server.com/images/trello_badge-md.png\" alt=\"Trello Backlog\"></a></td>\n    </tr>\n</table>\n\n### Versions\n\n##### Maven Central [![mockserver](https://maven-badges.herokuapp.com/maven-central/org.mock-server/mockserver-netty/badge.svg?style=flat)](http://search.maven.org/#search%7Cga%7C1%7Cmockserver)\n\nMaven Central contains the following MockServer artifacts:\n\n* [mockserver-netty](https://maven-badges.herokuapp.com/maven-central/org.mock-server/mockserver-netty) - an HTTP(S) web server that mocks and records requests and responses\n* [mockserver-netty:shaded](https://maven-badges.herokuapp.com/maven-central/org.mock-server/mockserver-netty) - mockserver-netty (as above) with all dependencies embedded\n* [mockserver-war](https://maven-badges.herokuapp.com/maven-central/org.mock-server/mockserver-war) - a deployable WAR for mocking HTTP(S) responses (for any JEE web server)\n* [mockserver-proxy-war](https://maven-badges.herokuapp.com/maven-central/org.mock-server/mockserver-proxy-war) - a deployable WAR that records requests and responses (for any JEE web server)\n* [mockserver-maven-plugin](https://maven-badges.herokuapp.com/maven-central/org.mock-server/mockserver-maven-plugin) - a maven plugin to start, stop and fork MockServer using maven\n* [mockserver-client-java](https://maven-badges.herokuapp.com/maven-central/org.mock-server/mockserver-client-java) - a Java client to communicate with both the server and the proxy\n\nIn addition MockServer SNAPSHOT artifacts can also be found on [Sonatype](https://oss.sonatype.org/index.html#nexus-search;quick~org.mock-server).\n\n##### Node Module & Grunt Plugin\n\nNPM Registry contains the following module:\n\n* [mockserver-node](https://www.npmjs.org/package/mockserver-node) - a Node.js module and Grunt plugin to start and stop MockServer\n    [![mockserver-node](https://nodei.co/npm/mockserver-node.png?downloads=true)](https://www.npmjs.org/package/mockserver-node)\n* [mockserver-client-node](https://www.npmjs.org/package/mockserver-client) - a Node.js client for both the MockServer and the proxy \n    [![mockserver-client-node](https://nodei.co/npm/mockserver-client.png?downloads=true)](https://www.npmjs.org/package/mockserver-client)\n\n##### Docker Hub\n\nDocker Hub contains the following artifacts:\n\n* [MockServer Docker Container](https://hub.docker.com/r/mockserver/mockserver/) - a Docker container containing the Netty MockServer and proxy\n\n##### Helm Chart\n\n* [MockServer Helm Chart](helm/mockserver/README.md) - a Helm Chart that installs MockServer to a Kubernetes cluster, available versions:\n  * [5.15.0](http://www.mock-server.com/mockserver-5.15.0.tgz)\n  * [5.14.0](http://www.mock-server.com/mockserver-5.14.0.tgz)\n  * [5.13.2](http://www.mock-server.com/mockserver-5.13.2.tgz)\n  * [5.13.1](http://www.mock-server.com/mockserver-5.13.1.tgz)\n  * [5.13.0](http://www.mock-server.com/mockserver-5.13.0.tgz)\n  * [5.12.0](http://www.mock-server.com/mockserver-5.12.0.tgz)\n  * [5.11.2](http://www.mock-server.com/mockserver-5.11.2.tgz)\n  * [5.11.1](http://www.mock-server.com/mockserver-5.11.1.tgz)\n  * [5.11.0](http://www.mock-server.com/mockserver-5.11.0.tgz)\n  * ...\n\n##### MockServer Clients\n\n* [mockserver-client-ruby ![mockserver-client](https://badge.fury.io/rb/mockserver-client.png)](https://rubygems.org/gems/mockserver-client) - Ruby client for both the MockServer and the proxy \n* [mockserver-client-java](http://search.maven.org/#search%7Cga%7C1%7Cmockserver-client-java) - a Java client for both the MockServer and the proxy \n* [mockserver-client-node](https://www.npmjs.org/package/mockserver-client) - a Node.js and [browser](https://raw.githubusercontent.com/mock-server/mockserver-client-node/mockserver-5.10.0/mockServerClient.js) client for both the MockServer and the proxy\n* [kotest-extensions-kotest](https://github.com/kotest/kotest-extensions-mockserver) - Kotlin Kotest integration with MockServer\n\n##### Previous Versions\n| Version         | Date        | Git & Docker Tag / Git Hash                                                                                                                                                                 | Documentation                                | Java API                                                              | REST API                                                                                  |\n|:----------------|:------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------|:----------------------------------------------------------------------|:------------------------------------------------------------------------------------------|\n | 5.15.0 (latest) | 11 Jan 2023 | [mockserver-5.15.0](https://github.com/mock-server/mockserver/tree/mockserver-5.15.0) / [7c071b](https://github.com/mock-server/mockserver/commit/7c071b8be3608036f2a2ea45eee6970d2f2b8d02) | [Documentation](http://mock-server.com)      | [Java API](http://mock-server.com/versions/5.15.0/apidocs/index.html) | [5.15.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.15.x) |\n | 5.14.0          | 22 Aug 2022 | [mockserver-5.14.0](https://github.com/mock-server/mockserver/tree/mockserver-5.14.0) / [808eba](https://github.com/mock-server/mockserver/commit/808ebaa44a88b630ca181e62712aa47d4c9c7ff4) | [Documentation](http://5-14.mock-server.com) | [Java API](http://mock-server.com/versions/5.14.0/apidocs/index.html) | [5.14.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.14.x) |\n | 5.13.2          | 05 Apr 2022 | [mockserver-5.13.2](https://github.com/mock-server/mockserver/tree/mockserver-5.13.2) / [81105b](https://github.com/mock-server/mockserver/commit/81105b3153674bbe66df612ad1b3a09a34a520cf) | [Documentation](http://5-13.mock-server.com) | [Java API](http://mock-server.com/versions/5.13.2/apidocs/index.html) | [5.13.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.13.x) |\n | 5.13.1          | 02 Apr 2022 | [mockserver-5.13.1](https://github.com/mock-server/mockserver/tree/mockserver-5.13.1) / [39d1cc](https://github.com/mock-server/mockserver/commit/39d1cc6251e6dbd00ab8012dbe39def6d8bb7312) | [Documentation](http://5-13.mock-server.com) | [Java API](http://mock-server.com/versions/5.13.1/apidocs/index.html) | [5.13.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.13.x) |\n | 5.13.0          | 17 Mar 2022 | [mockserver-5.13.0](https://github.com/mock-server/mockserver/tree/mockserver-5.13.0) / [604888](https://github.com/mock-server/mockserver/commit/604888cdb0f66f1f217e54c4f3ad3e3c7785f3af) | [Documentation](http://5-13.mock-server.com) | [Java API](http://mock-server.com/versions/5.13.0/apidocs/index.html) | [5.13.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.13.x) |\n | 5.12.0          | 12 Feb 2022 | [mockserver-5.12.0](https://github.com/mock-server/mockserver/tree/mockserver-5.12.0) / [61747f](https://github.com/mock-server/mockserver/commit/61747fd20316603e7ff4c0dd0e3ee34ea386882f) | [Documentation](http://5-12.mock-server.com) | [Java API](http://mock-server.com/versions/5.12.0/apidocs/index.html) | [5.12.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.12.x) |\n | 5.11.2          | 08 Nov 2020 | [mockserver-5.11.2](https://github.com/mock-server/mockserver/tree/mockserver-5.11.2) / [eb84f2](https://github.com/mock-server/mockserver/commit/eb84f20b9485233c6926e4067e1e8de652a112d6) | [Documentation](http://5-11.mock-server.com) | [Java API](http://mock-server.com/versions/5.11.2/apidocs/index.html) | [5.11.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.11.x) |\n | 5.11.1          | 22 Jul 2020 | [mockserver-5.11.1](https://github.com/mock-server/mockserver/tree/mockserver-5.11.1) / [361e5c](https://github.com/mock-server/mockserver/commit/361e5c74e5c7fd906957edbd5a46bb27582e4f5c) | [Documentation](http://5-11.mock-server.com) | [Java API](http://mock-server.com/versions/5.11.1/apidocs/index.html) | [5.11.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.11.x) |\n | 5.11.0          | 08 Jul 2020 | [mockserver-5.11.0](https://github.com/mock-server/mockserver/tree/mockserver-5.11.0) / [756758](https://github.com/mock-server/mockserver/commit/756758ebe3d032f3852411a9bb91c3c66d819ddc) | [Documentation](http://5-11.mock-server.com) | [Java API](http://mock-server.com/versions/5.11.0/apidocs/index.html) | [5.11.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.11.x) |\n | 5.10.0          | 24 Mar 2020 | [mockserver-5.10.0](https://github.com/mock-server/mockserver/tree/mockserver-5.10.0) / [14124d](https://github.com/mock-server/mockserver/commit/14124d32ef96c207cc73cc5334c1d7236d8c7640) | [Documentation](http://5-10.mock-server.com) | [Java API](http://mock-server.com/versions/5.10.0/apidocs/index.html) | [5.10.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.10.x) |\n | 5.9.0           | 01 Feb 2020 | [mockserver-5.9.0](https://github.com/mock-server/mockserver/tree/mockserver-5.9.0)   / [eacf07](https://github.com/mock-server/mockserver/commit/eacf07ad1eb738bacbf7c473f0d1aa62b4028602) | [Documentation](http://5-9.mock-server.com)  | [Java API](http://mock-server.com/versions/5.9.0/apidocs/index.html)  | [5.9.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.9.x)   |\n | 5.8.1           | 23 Dec 2019 | [mockserver-5.8.1](https://github.com/mock-server/mockserver/tree/mockserver-5.8.1)   / [f0e9ab](https://github.com/mock-server/mockserver/commit/f0e9ab3b64f47f7f8f756d5ae8bf7b1b4611d8e6) | [Documentation](http://5-8.mock-server.com)  | [Java API](http://mock-server.com/versions/5.8.1/apidocs/index.html)  | [5.8.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.8.x)   |\n | 5.8.0           | 01 Dec 2019 | [mockserver-5.8.0](https://github.com/mock-server/mockserver/tree/mockserver-5.8.0)   / [7c9fc5](https://github.com/mock-server/mockserver/commit/7c9fc5e5e831feac71dd68d0341ff089f37cec1e) | [Documentation](http://5-8.mock-server.com)  | [Java API](http://mock-server.com/versions/5.8.0/apidocs/index.html)  | [5.8.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.8.x)   |\n | 5.7.2           | 16 Nov 2019 | [mockserver-5.7.2](https://github.com/mock-server/mockserver/tree/mockserver-5.7.2)   / [7c9fc5](https://github.com/mock-server/mockserver/commit/7c9fc5e5e831feac71dd68d0341ff089f37cec1e) | [Documentation](http://5-7.mock-server.com)  | [Java API](http://mock-server.com/versions/5.7.2/apidocs/index.html)  | [5.7.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.7.x)   |\n | 5.7.1           | 09 Nov 2019 | [mockserver-5.7.1](https://github.com/mock-server/mockserver/tree/mockserver-5.7.1)   / [0ca353](https://github.com/mock-server/mockserver/commit/0ca3537023e9e0f9abcb09c92279891cbc0527c7) | [Documentation](http://5-7.mock-server.com)  | [Java API](http://mock-server.com/versions/5.7.1/apidocs/index.html)  | [5.7.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.7.x)   |\n | 5.7.0           | 01 Nov 2019 | [mockserver-5.7.0](https://github.com/mock-server/mockserver/tree/mockserver-5.7.0)   / [b58bc5](https://github.com/mock-server/mockserver/commit/b58bc589efbc76272a2053a64e774a001f1bb0a2) | [Documentation](http://5-7.mock-server.com)  | [Java API](http://mock-server.com/versions/5.7.0/apidocs/index.html)  | [5.7.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.7.x)   |\n | 5.6.1           | 21 Jul 2019 | [mockserver-5.6.1](https://github.com/mock-server/mockserver/tree/mockserver-5.6.1)   / [aec1fb](https://github.com/mock-server/mockserver/commit/aec1fbf1e826dc59fe4a19c3331ab6802ec4c3c7) | [Documentation](https://5-6.mock-server.com) | [Java API](http://mock-server.com/versions/5.6.0/apidocs/index.html)  | [5.6.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.6.x)   |\n | 5.6.0           | 21 Jun 2019 | [mockserver-5.6.0](https://github.com/mock-server/mockserver/tree/mockserver-5.6.0)   / [8f82dc](https://github.com/mock-server/mockserver/commit/8f82dc4d37271c3cbfe0b3a1963e91ec3a4ef7a7) | [Documentation](https://5-6.mock-server.com) | [Java API](http://mock-server.com/versions/5.6.0/apidocs/index.html)  | [5.6.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.6.x)   |\n | 5.5.4           | 26 Apr 2019 | [mockserver-5.5.4](https://github.com/mock-server/mockserver/tree/mockserver-5.5.4)   / [4ffd31](https://github.com/mock-server/mockserver/commit/4ffd3162a3250f18d343901b30c3ee71a75b1982) | [Documentation](https://5-5.mock-server.com) | [Java API](http://mock-server.com/versions/5.5.4/apidocs/index.html)  | [5.5.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.5.x)   |\n | 5.5.1           | 29 Dec 2018 | [mockserver-5.5.1](https://github.com/mock-server/mockserver/tree/mockserver-5.5.1)   / [11d8a9](https://github.com/mock-server/mockserver/commit/11d8a96b0eaf07b7fffd29444203503b1cdca653) | [Documentation](https://5-5.mock-server.com) | [Java API](http://mock-server.com/versions/5.5.1/apidocs/index.html)  | [5.5.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.5.x)   |\n | 5.5.0           | 15 Nov 2018 | [mockserver-5.5.0](https://github.com/mock-server/mockserver/tree/mockserver-5.5.0)   / [06e6fd](https://github.com/mock-server/mockserver/commit/06e6fdc4757f13fb5943fc281d5e55dc1c30919d) | [Documentation](https://5-5.mock-server.com) | [Java API](http://mock-server.com/versions/5.5.0/apidocs/index.html)  | [5.5.x REST API](https://app.swaggerhub.com/apis/jamesdbloom/mock-server-openapi/5.5.x)   |\n\n### Issues\n\nIf you have any problems, please [check the project issues](https://github.com/mock-server/mockserver/issues?state=open) and avoid opening issues that have already been fixed.  When you open an issue please provide the following information:\n- MockServer version (i.e. 5.15.0)\n- How your running the MockServer (i.e maven plugin, docker, etc)\n- MockServer log output, at INFO level (or higher)\n- What the error is\n- What you are trying to do\n\n### Contributions\n\nPull requests are, of course, very welcome! Please read our [contributing to the project](https://github.com/mock-server/mockserver/wiki/Contributing-to-the-project) guide first. Then head over to the [open issues](https://github.com/mock-server/mockserver/issues?state=open) to see what we need help with. Make sure you let us know if you intend to work on something. Also check out <a href=\"https://trello.com/b/dsfTCP46/mockserver\" target=\"_blank\"><img height=\"20px\" src=\"http://mock-server.com/images/trello_badge-md.png\" alt=\"Trello Backlog\"></a> to see what is already in the backlog.\n\n### Feature Requests\n\nFeature requests are submitted to [github issues](https://github.com/mock-server/mockserver/issues?state=open).  Once accepted they will be added to the <a href=\"https://trello.com/b/dsfTCP46/mockserver\" target=\"_blank\">backlog</a>.  Please check out <a href=\"https://trello.com/b/dsfTCP46/mockserver\" target=\"_blank\"><img height=\"20px\" src=\"http://mock-server.com/images/trello_badge-md.png\" alt=\"Trello Backlog\"></a> to see what is already in the backlog.\n\n### Maintainers\n* [James D Bloom](http://blog.jamesdbloom.com)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.4990234375,
          "content": "# Security Policy\n\n## Supported Versions\n\n| Version  | Supported          |\n|----------| ------------------ |\n| 5.15.0   | :white_check_mark: |\n| < 5.15.0 | :x:                |\n\n## Reporting a Vulnerability\n\nReporting a vulnerabilities is very helpful.\n\nPlease report a vulnerability via <a href=\"https://join-mock-server-slack.herokuapp.com\" target=\"_blank\">Slack</a> in a direct message to James Bloom.\n\nIf that does not received a response fast enough please raise a github issue with your contact details.\n"
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 27.26171875,
          "content": "# Changelog\nAll notable and significant changes to this project will be documented in this file.\n\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\n\n## [Unreleased]\n\n### Added\n- support for custom TLS protocols such as TLSv1.2,TLSv1.3\n- better error messages when MockServerClient fails due to TLS or networking errors\n\n### Changed\n- removed implicit reliance on internal java-certificate-classes (thanks to @Arkinator)\n\n### Fixed\n\n## [5.15.0] - 2023-01-11\n\n### Added\n- an image tag that allows container to run as root\n- HTTP2 protocol support for mocking\n- ability to proxy multiple binary messages without waiting for response \n- support to disallow loading of specific class in javascript templates \n- support to disallow specific text in javascript templates \n- support to disallow loading of any class in velocity templates\n- support to disallow specific text in velocity templates\n- support to disallow specific text in mustache templates\n- support to velocity templates to load files via $import.read(...)\n\n### Changed\n- improved error message for not valid HTTP requests that are not being proxied\n- improved error message when client doesn't trust MockServer's CA\n\n### Fixed\n- references to globally-scoped values within Ingress template\n- fixed error passing configuration in MockServerClient\n- fixed handling of additional content-type parameter and special characters in the content-type such as '+'\n- removed invalid extra content-encoding header add when forwarding if content-encoding was not present\n\n## [5.14.0] - 2022-08-22\n\n### Added\n- added support for json serialisation and de-serialisation java date time\n- support for server urls in OpenAPI specification, by adding server url path as path prefix to operations\n- improved documentation of clear functionality and type parameter and added examples\n- local ip and port exposed to callbacks and log, useful when bound on multiple ports\n- ability to match on content-encoding header\n- added support for custom HTTP methods (via assumeAllRequestsAreHttp)\n\n### Changed\n- used helm release name in K8s resources to avoid conflicts for multiple deployments in same namespace (without extra values being set)\n- tlsMutualAuthenticationCertificateChain is used if configured, even if tlsMutualAuthenticationRequired is false, so clients can choose correct certificate for optional client auth\n\n### Fixed\n- error matching header or parameters using array schema\n- updated Ingress apiVersion in helm chart to non deprecated value\n- removed the jdk14 slf4j bindings from the shaded and no-dependencies jars\n- fixed NullPointerException and added more context information for match failures\n- fixed NullPointerException during matcher logging\n- fixed override logic for query and path parameters\n- fixed verification of path parameters with multiple path parameter expectations\n- fixed matching for array parameters using OpenAPI or a schema based parameter matcher\n- resolved errors matching path by regex against expectations with path parameters\n- resolved error with some deleted logs still appearing in the dashboard\n- Content-Length is not added if a mock response set Transfer-Encoding\n\n## [5.13.2] - 2022-04-05\n\n### Fixed\n- fixed artefact name in no-dependencies pom which caused issue with gradle builds\n- added support for yml in addition to yaml for yaml files\n\n## [5.13.1] - 2022-04-02\n\n### Added\n- simplified JSON format accepted for headers and other multi-value maps by allowing single values to be used as value list\n- added warning message when content-length in expectation response is shorter than the body length\n- improved log output for multimap failures, especially when using schema matcher (i.e. with OpenAPI) for parameters, headers, etc\n- added support for endpoints examples in addition to existing schemas examples in an OpenAPI specifications\n\n### Changed\n- improved error messages from main method\n- always serialise default fields for StringBody and JsonBody when retrieving recorded expectations for consistency even when the charset changes\n- allow (and ignore) additional timestamp field for expectation JSON to support record request and responses to be submitted as JSON expectations\n- upgraded JVM version in docker (and helm) to 17\n- reduced memory footprint from log and simplified calculation of maximum log size\n- use JVM trust store in addition to MockServer CA for MockServerClient to allow control plane requests to go via proxies or load balancers that terminate TLS\n\n### Fixed\n- allow callback which is nested inside initializer class for maven plugin initializer\n- fixed HttpClassCallback static builder signature\n- improved parsing of media type parameters to handle parameter values with equal symbol\n- fixed serialising certificate chain to dashboard UI\n- used absolute URI form for requests to an HTTP proxy as per [rfc2068 section 5.1.2](https://www.rfc-editor.org/rfc/rfc2068#section-5.1.2)\n- removed content-length and other hop by hop response headers for forward actions\n- fixed handling of headers and parameters specified without any values\n- fixed logLevel in MockServer instance Configuration, so it now sets the SystemProperty read by the logging configuration\n- fixed parallel execution of MockServerExtension to prevent port bind errors\n- fixed error parsing body parameters containing '/'\n- removed external references to schema specification to remove required network connectivity\n- fixed docker latest tag by worked around bug in sonatype not updating the LATEST metadata for snapshots\n- fixed partial deletion of expectations from watched file initialiser\n- resolved small memory leak during proxy authentication\n- updated verify by expectation id so it uses expectation match log events instead of the request matcher from the expectation\n\n## [5.13.0] - 2022-03-17\n\n### Added\n- added support for configuring log level via properties file\n- allow proactively initialisation of TLS so dynamic TLS CA key pair is created at start up\n- added control plane authorisation using mTLS\n- added control plane authorisation using JWT\n- added support for control plane JWTs supplier to client\n- added support for control plane JWT authorisation to specify required audience, matching claims and required claims\n- added control plane authorisation using both JWT and mTLS\n- added property to control maximum number of requests to return in verification failure, defaults to 10\n- added field to verifications to control maximum number of requests to return in verification failure, defaults to configuration property - item above\n- added remote address field to http requests that can be used by class or method callbacks\n- exposed remote address (i.e. client address) to method and class callbacks, logs and dashboard\n- exposed client certificate chain to method and class callbacks, logs and dashboard\n- added simpler mustache style response templates (in addition to existing javascript and velocity support)\n- added response template variables and functions for date, uuid, random, xPath and jsonPath for mustache\n- added response template variables for date, uuid and random for velocity\n- added response template variables for date, uuid and random for javascript\n- added path parameters, remote address and client certificate chain to response template model\n- added support for EMCAScript 6 in JavaScript response templates for Java versions between 9 and 15\n- added support for numerous velocity tools for example for JSON and XML parsing to velocity response templates\n\n### Changed\n- included Bouncy Castle now used by default to resolve issues with modules in Java 16+ and backwards compatibility for Java 8\n- improved configuration for dynamically creating CA so the directory is defaulted if not set and log output is clearer\n- improved UI handling of match failures with a because section and more complex log events\n- improved log configuration during startup when loading of properties file\n- simplified support for multiline regex by allow . to match newlines\n- improved regex matching by support Unicode (instead of US-ASCII) and native case-insensitive matching\n- improved performance of negative matches by reducing the number of regex matches when not matching\n- disabled privilege escalation in helm chart\n- added setting of command line flags (i.e. serverPort) via system properties and properties file in addition to environment variables\n- improved log output for command line flags, environment variables and system properties\n- removed deprecated configuration properties for forward proxying\n- changed docker distroless base image to distroless image for nonroot user\n- changed docker distroless base image for snapshot to distroless image for debugging\n- changed client to launch dashboard in HTTP (not HTTPS) to avoid issues with self-signed certificates\n- simplified the body field for response template model\n- improved XML matching by ignoring element order\n- improved security by change CORS defaults to more secure values that prevent cross-site requests by default\n\n### Fixed\n- worked around JDK error 'flip()Ljava/nio/ByteBuffer; does not exist in class java.nio.ByteBuffer'\n- null pointer exception when serialising string bodies with non string content types (i.e. image/png)\n- disabled native TLS for netty to improve TLS resilience\n- fixed handling of circular references in OpenAPI specifications to be as gracefully as possible\n\n## [5.12.0] - 2022-02-12\n\n### Added\n- index.yaml to www.mock-server.com so it can be used as a helm chart repository\n- command line flags can now be set as environment variables simplifying some container deployment scenarios\n- glob support for initialisation files to allow multiple files to be specified\n- request and response modifiers to dynamically update path, query parameters, headers, and cookies\n- custom factory for key and certificates to provide more flexibility\n- support for Open API expectations in json initialisation file\n- improved @MockServerTest to support inheritance\n- more flexibility over semicolon parsing for query parameters\n- shaded jar for mockserver-netty and mockserver-client-java to reduce impact of dependency version mismatches with projects including these dependencies\n\n### Changed\n- ensured that TCP connections are closed immediately when shutting down to improved time before operating system frees the port\n- reduce noise from Netty INFO logs that were not correct or misleading\n- retrieveRecordedRequests now returns HttpRequest[]\n- made it easier to set priority and id both in Java and Node clients in multiple places\n- changed default charset for JSON and XML to UTF-8 from ISO 8859-1\n- error handling for Open API so only single operation is skipped on failure not the entire file\n- reduced over resolution of OpenAPI that triggered bugs in Swagger Parser V3 library\n- replaces JDK FileWatcher with custom solution for watch file changes to work around multiple JDK bugs\n- improved helm chart by supporting more configuration options\n- remove explicit calls to System.gc()\n\n### Fixed\n- resolved multiple issues with clearing by expectation id\n- resolved multiple issues with verifying by expectation id\n- resolved multiple NullPointerExceptions in backend for UI\n- ensure exact query parameter string is proxied allowing for empty values, leading `!` or or other special scenarios\n- improved expectation updates from FileWatcher so only expectation from matching source are updated resolving multiple bugs\n- ensured socket protocol of HTTPS is honoured resulting in forwarded requests using TLS\n- fixed logging of exceptions such as port already bound at startup\n- fixed retrieval of active exceptions where expectations were no longer active but not yet removed from expectations list\n- no longer treat ndjson as json\n- accessing UI via a reverse proxy or load balancer\n\n## [5.11.2] - 2020-10-08\n\n### Added\n- clearing by expectation id\n- verifying by expectation id\n\n### Changed\n- improved reliability and performance around stopping especially when stop is called multiple times for the same instance\n- improved grouping of logs and stopped TRACE level logs from being grouped which caused inconsistency in the UI\n\n### Fixed\n- fixed recursive loop on stopAsync for ClientAndServer\n- header matching for subsets to ensure notted header keys don't exist\n\n## [5.11.1] - 2020-07-22\n\n### Added\n- port is now printed at start of each log line\n- shutdown log message specifying port\n- UI updated prior to stopping MockServer to ensure all pending log messages are sent over UI web socket\n- added listener for expectation modifications that can be used with ExpectationInitializer for custom expectation persistence\n\n### Changed\n- performance improvements of expectation sorting and comparisons\n- reduced creation of objects at WARN log level\n- ensured all threads are daemon threads (except port binding thread)\n- simplified and improve performance of matching for headers, query string parameters, path parameters, cookies and body parameters\n- only mark log events as deleted for log level of TRACE, DEBUG, or INFO so log can be view in UI\n- improved performance of handling large OpenAPI specifications\n- improved error message format for errors when loading OpenAPI specifications\n- changed name of `optionalString` static factory method to `optional` to improve consistency with `not`\n\n### Fixed\n- fixed field name error when serializing ParameterBody\n- error when log level DEBUG cleared log events were returned from the API\n\n## [5.11.0] - 2020-07-08\n\n### Added\n- added basic support to proxy binary requests that are not HTTP\n- dynamic maximum log events and maximum expectations based on available memory\n- added ability to switch between BouncyCastle and vanilla JDK for key and certificate generation\n- added support for TLS over SOCKS4 or SOCKS5\n- request matching and expectations using OpenAPI or Swagger specification\n- create expectation using OpenAPI or Swagger specification with automatic example responses\n- verifications of requests or request sequences using OpenAPI or Swagger specification\n- clear log, clear expectations, retrieve logs and retrieve requests using OpenAPI or Swagger specification\n- json schema matchers for method, path, headers, query string parameters and cookies\n- path variables matched by nottable string, regex or json schema (as per query string parameters)\n- support for optional query parameters, header and cookies\n- support for nullable keyword in JSON Schemas (part of Open API specification not JSON Schema specification)\n- matching xml bodies against JSON Schema matchers\n- matching parameter bodies against JSON Schema matchers\n- support to match path parameters, query parameters and header either by sub set or by matching key\n- grouping of log events in UI to simplify analysis of expectation matches / non matches for a request\n- added extra log messages to indicate progress for large json expectation initializers\n- added log messages for invalid control plane request to make control plane errors clearer in the UI\n- added support for easily mapping jar and config into the docker container\n- added support for easily mapping jar and config into the helm chart\n\n### Changed\n- reduced time range of CA certificates to increase likelihood they will be accepted by strict systems (i.e. VMWare vCenter Server)\n- improved error message when exception loading or reading certificates or keys (i.e. file not found)\n- certificate and private key are saved to directoryToSaveDynamicSSLCertificate when preventCertificateDynamicUpdate is enabled\n- returns created expectations from /mockserver/expectation so that it is possible to view the id for new (or updated) expectations\n- added ability to inherit @MockServerSettings for Junit5 tests\n- switched to distroless container base for security and size\n- added explicit gc suggestion after reset and clear\n- upgraded docker container to Java 11 to ensure JVM honours container memory constraints (i.e. inside kubernetes)\n- improved parsing of invalid content-type header parameters by handling error gracefully and outputting a clear error message\n- improved performance through multiple minor tweaks around handling of expectations\n- added version to log output to improve resolution of github issues with logs attached\n- improved logic around proxies to make HTTP CONNECT, SOCKS4 and SOCKS5 more reliable and faster\n- reduced object creation (and therefore GCs) for log especially during request matching\n- print logs timestamp with milliseconds\n- reduced expiry of certification to one year to avoid errors from modern systems that don't like long lived certificates (such as Chrome or VMWare)\n- defaulted charset for XML and JSON to UTF8 as per rfc3470 and rfc8259\n- version matching logic for client now only matches on major and minor version and not bug fix version\n- improved handling of body matching for control plane to clearly separate control plane and data plan matching\n- simplified and improved stability for UI by moving all data processing into back-end and other simplifications\n\n### Fixed\n- fixed but with environment variable configuration for long, integer and integer list values\n- removed call to ReflectionToStringBuilder.setDefaultStyle to avoid impacting toString globally for JVM\n- fixed destination port and ip in Socks5CommandResponse which prevented SOCKS5 proxied connections\n- fixed Subject Alternative Names with wildcards or other valid DNS name formats not supported by certain versions of the JDK (<= 1.8)\n- fixed json body responses by returning blank or null fields, objects and arrays\n- fixed generics for withCallbackClass to allow ExpectationResponseCallback to be specified as a Class (not only a string)\n\n## [5.10.0] - 2020-03-24\n\n### Added\n- closure / object callbacks uses local method invocation (instead of Web Socket) when both the client in same JVM (i.e. ClientAndServer, JUnit Rule, etc)\n- support to specify a fixed TLS X509 Certificate and Private Key for inbound TLS connections (HTTPS or SOCKS)\n- ability to prioritise expectations such that the matching happens according to the specified priority (highest first) then creation order\n- ability to create or update (if id matches) expectations from the client using upsert method\n- ability to return chunked responses where each chunk is a specific size by using response connection options\n- support for XmlUnit placeholders https://github.com/xmlunit/user-guide/wiki/Placeholders\n- added ability to control (via configuration) whether matches fail fast or show all mismatching fields\n- configuration to disable automatically attempted proxying of request that don't match an expectation and look like they should be proxied\n\n### Changed\n- improved X509 certificates by adding Subject Key Identifier and Authority Key Identifier\n- stopped delay being applied twice on response actions (#721)\n- improve support for clients making initial SOCKS or HTTP CONNECT requests over TLS\n- replaced JSONAssert with JsonUnit to improve JSON matching and remove problematic transitive dependencies\n- added more detail of cause of match failure\n\n### Fixed\n- fixed null point for expectation initialiser with file watcher in working directory specified with relative path\n- fixed error resulting in enum not found exception for log events\n- fixed error with parsing of json arrays for expectation responses with json body as json object not escaped string\n- fixed meaning of disableSystemOut property so that only system out is disabled not all logging\n- fixed key store type in key store factory to avoid issue with the JVM changing the defaults\n\n## [5.9.0] - 2020-02-01\n\n### Added\n- added stopAsync method to ClientAndServer to allow stop without waiting\n- log events for UPDATED_EXPECTATION and REMOVED_EXPECTATION\n- ability to update existing expectation by id\n- hot re-loading of expectation initialiser file\n- addition configuration for web socket client event loop size\n- addition configuration for action handler thread pool size\n- exposed request raw bytes to object callbacks (allows forwarded requests body parsing that is inconsistent with Content-Type header)\n- added support to delay socket closure using connection options\n- added support to control trusted certificate authorities (trust store) for proxied & forwarded requests\n- added support for two-way TLS (mTLS), also called client authentication\n- now sends TLS X509 certificate from proxy (i.e. support forward client authentication / mTLS)\n- added ability to dynamically create local unique Certificate Authority (CA) X.509 and Private Key to improve security of clients trusting the CA\n\n### Changed\n- performance improvements for header and cookie handling\n- improved JSON validation errors by adding link to OpenAPI Specification\n- removed duplicate packages between modules to prepare for java modules\n- caught Jackson configuration exception to improve resilience with other Jackson versions in classpath\n- moved Junit4 to separate module to reduce size of jar-with-dependencies, simplify code and increase build speed\n- enabled case insensitive matching for regex matches\n- improved documentation (i.e. on website)\n- switched from Bouncy Castle to JDK for certificate and private key generation\n\n### Fixed\n- fixed error where ClientAndServer does fully wait for client to stop\n- fixed ability to specific a log level of OFF\n- fixed bug with keystore type configuration not being used in all places\n- added file locking and jvm locking for expectation persistence file to avoid file corruption\n- fixed verification incorrectly matching verifier non-empty bodies against empty request bodies\n- stopped response callbacks for proxied requests blocking threads\n- fixed bug that caused JSON bodies in specified expectations as raw JSON to ignore empty arrays and empty strings\n\n### Security\n- updated tomcat (used in integration tests) to version without vulnerabilities\n\n## [5.8.1] - 2019-12-23\n\n### Added\n- changelog\n- added configuration for all CORS headers\n- added support for forward proxy authentication (via configuration)\n- added support for overriding forward responses by class or closure\n- requests sent to MockServerClient can be updated / enhanced i.e. to support proxies\n- dynamic creation of a unique (i.e. local) Certificate Authority X509 Certificate and Private Key instead of using the fixed Certificate Authority X509 Certificate and Private Key in the git repo.\n- configuration to require mTLS (also called client authentication or two-way TLS) for all TLS connections / HTTPS requests to MockServer\n- configuration of trust store and client X.509 used during forwarded and proxied requests to endpoints requiring mTLS\n- extended TLS documentation significantly\n\n### Changed\n- reduced default number of fail handles used by nio event loop\n- improved performance and scalability of logging ring buffer\n- improved performance of json serialisation\n- deprecated isRunning and replaced with hasStopped and hasStarted to make behaviour more explicit and faster\n- improved, simplified and unified handling of Content-Type for bodies\n- remove closure callback clients and connections for expectation that no longer exist\n- ensure WebSockets for closure callback auto re-connect for unreliable networks\n- simplified XML and JSON of bodies in the log and UI\n- improved logging for CORS\n- added support for TLS with closure / WebSocket callbacks\n- simplified handling of TLS and HTTP CONNECT (which is always TLS)\n- improved JSON format for expectation to support objects instead of escaped strings\n\n### Fixed\n- fixed reading logLevel from system property or environment variable\n- ensure all errors are printed to console\n- removed TLSv1.3 to avoid any issues with JVM version that do not support TLSv1.3\n- handle proxying requests without Content-Length header\n- added support for JSON array for raw JSON in requests or responses body\n\n### Security\n- updated jetty (used in code examples) to version without vulnerabilities\n\n## [5.8.0] - 2019-12-01\n\n### Added\n- added support for configuration via environment variables\n- added support for overriding responses which an forward overridden request\n- added persistence of expectations to file (as json)\n\n### Changed\n- ensured all Netty threads are marked as daemon to ensure MockServer does not prevent / delay JVM shutdown\n- improved docker-compose example\n- improved helm document & example to show how to provide configuration file or expectation initialiser\n- improved performance and throttled load for UI\n\n### Fixed\n- WARN and ERROR is logged even if logLevel not yet initialised\n- ensured exceptions thrown in Main method are always logged\n- separated control plane and data plane matching to avoid reverse regex matches and other similar strange behaviour\n- fixed handling of multiple parameters in Content-Type header\n- autodetect WS or WSS for UI update WebSocket depending on HTTP or HTTPS\n- stopped usage being printed multiple time under certain error scenarios\n\n### Removed\n- removed reentrant WebSocket prevention by creating WebSocket client per expectation to improve resilience\n\n## [5.7.2] - 2019-11-16\n\n### Added\n- added setting to control maximum size of event log\n\n### Changed\n- performance enhancements\n- improved matcher failure log messages to output detail at DEBUG level\n- made log level configuration more resilient\n- allowed exceptions to be thrown from all types of callback methods\n\n### Fixed\n- fixed duplicate logging or request when optimistic proxying\n- added missing exception on bind error\n- ensured client event bus is not static so it not shared across multiple client instances except were server port is identical\n\n## [5.7.1] - 2019-11-09\n\n### Added\n- added disruptor ring buffer in front of log to improve performance\n- added configuration to ensure MockServer certificate is not updated once created\n\n### Changed\n- improved performance with request matcher fast failure\n- refactored CPU or memory hot spots\n- switched logging to simpler more resilient approach without external dependencies\n\n### Fixed\n- fixed log levels to support disabling the log completely without impacting verifications\n- ensured clear, reset and verify guarantee all pending log events are completed\n- ensured all thread pools (i.e. added disruptor, etc) are stopped with stopping MockServer or Servlets\n- respond with not found response (instead of hanging) when failure during template rendering\n\n## [5.7.0] - 2019-11-01\n\n### Added\n- added support for retrieving requests and associated responses from log\n- added support for access-control-request-headers with CORS\n\n### Changed\n- updated to Java 8\n- made Jackson more relaxed when parsing JSON already validated by JSON Schema\n- improved resilience of request and response parsing, such as when Content-Type is blank string\n- improved proxy loop prevention to only break loops within a single instance of MockServer\n- increased length of TLS keys to RSA 2048\n- increased default request log size and maximum number of expectation\n\n### Fixed\n- added global thread-safety to javascript templates for local variables defined without keyword var\n\n## [5.6.1] - 2019-07-21\n\n### Changed\n- delayed creation of Nashorn JS engine\n\n### Fixed\n- fixed multi-threaded handling of javascript templates\n- fixed duplicate logging errors\n\n## [5.6.0] - 2019-06-21\n\n### Added\n- added delay to actions that did not already have it\n- added configuration for certificate authority private key and x509\n- added support for large HTTP headers\n\n### Changed\n- simplified the certificate generation\n- configured logback file appender programmatically\n\n### Fixed\n- ensure port binding exception are thrown and MockServer stops if port already allocated\n- fixed log configuration to ensure no class loading exception thrown\n- fixed control plane matching of expectations with notted entries\n\n\n\n\n"
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 7.9013671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\" \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n\n<!-- This is a checkstyle configuration file. For descriptions of\nwhat the following rules do, please see the checkstyle configuration\npage at http://checkstyle.sourceforge.net/config.html -->\n\n<module name=\"Checker\">\n\n    <module name=\"FileTabCharacter\">\n        <!-- Checks that there are no tab characters in the file.\n        -->\n    </module>\n\n    <module name=\"RegexpSingleline\">\n        <!-- Checks that FIXME is not used in comments.  TODO is preferred.\n        -->\n        <property name=\"format\" value=\"((//.*)|(\\*.*))FIXME\"/>\n        <property name=\"message\" value='TODO is preferred to FIXME.  e.g. \"TODO(johndoe): Refactor when v2 is released.\"'/>\n    </module>\n\n    <module name=\"RegexpSingleline\">\n        <!-- Checks that TODOs are named.  (Actually, just that they are followed\n             by an open paren.)\n        -->\n        <property name=\"format\" value=\"((//.*)|(\\*.*))TODO[^(]\"/>\n        <property name=\"message\" value='All TODOs should be named.  e.g. \"TODO(johndoe): Refactor when v2 is released.\"'/>\n    </module>\n\n\n    <!-- All Java AST specific tests live under TreeWalker module. -->\n    <module name=\"TreeWalker\">\n\n        <!--\n\n        IMPORT CHECKS\n\n        -->\n\n        <module name=\"RedundantImport\">\n            <!-- Checks for redundant import statements. -->\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"CustomImportOrder\">\n            <property name=\"separateLineBetweenGroups\" value=\"true\"/>\n            <property name=\"customImportOrderRules\" value=\"THIRD_PARTY_PACKAGE###SPECIAL_IMPORTS###STANDARD_JAVA_PACKAGE###STATIC\"/>\n        </module>\n\n        <!--\n        NAMING CHECKS\n        -->\n\n        <!-- Item 38 - Adhere to generally accepted naming conventions -->\n\n        <module name=\"PackageName\">\n            <!-- Validates identifiers for package names against the\n              supplied expression. -->\n            <!-- Here the default checkstyle rule restricts package name parts to\n              seven characters, this is not in line with common practice at Google.\n            -->\n            <property name=\"format\" value=\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"StaticVariableNameCheck\">\n            <!-- Validates static, non-final fields against the supplied expression \"^[a-z][a-zA-Z0-9]*_?$\". -->\n            <metadata name=\"altname\" value=\"StaticVariableName\"/>\n            <property name=\"applyToPublic\" value=\"true\"/>\n            <property name=\"applyToProtected\" value=\"true\"/>\n            <property name=\"applyToPackage\" value=\"true\"/>\n            <property name=\"applyToPrivate\" value=\"true\"/>\n            <property name=\"format\" value=\"^[a-z][a-zA-Z0-9]*_?$\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"MemberNameCheck\">\n            <!-- Validates non-static members against the supplied expression. -->\n            <metadata name=\"altname\" value=\"MemberName\"/>\n            <property name=\"applyToPublic\" value=\"true\"/>\n            <property name=\"applyToProtected\" value=\"true\"/>\n            <property name=\"applyToPackage\" value=\"true\"/>\n            <property name=\"applyToPrivate\" value=\"true\"/>\n            <property name=\"format\" value=\"^[a-z][a-zA-Z0-9]*$\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"MethodNameCheck\">\n            <!-- Validates identifiers for method names. -->\n            <metadata name=\"altname\" value=\"MethodName\"/>\n            <property name=\"format\" value=\"^[a-z][a-zA-Z0-9]*(_[a-zA-Z0-9]+)*$\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <!--\n\n         LENGTH and CODING CHECKS\n\n         -->\n\n        <module name=\"LeftCurly\">\n            <!-- Checks for placement of the left curly brace ('{'). -->\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"RightCurly\">\n            <!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on\n            the same line. e.g., the following example is fine:\n            <pre>\n              if {\n                ...\n              } else\n            </pre>\n            -->\n            <!-- This next example is not fine:\n            <pre>\n              if {\n                ...\n              }\n              else\n            </pre>\n            -->\n            <property name=\"option\" value=\"same\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <!-- Checks for braces around if and else blocks -->\n        <module name=\"NeedBraces\">\n            <property name=\"tokens\" value=\"LITERAL_IF, LITERAL_ELSE, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"UpperEll\">\n            <!-- Checks that long constants are defined with an upper ell.-->\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"FallThrough\">\n            <!-- Warn about falling through to the next case statement.  Similar to\n            javac -Xlint:fallthrough, but the check is suppressed if a single-line comment\n            on the last non-blank line preceding the fallen-into case contains 'fall through' (or\n            some other variants which we don't publicized to promote consistency).\n            -->\n            <property name=\"reliefPattern\" value=\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <!--\n\n        WHITESPACE CHECKS\n\n        -->\n\n        <module name=\"WhitespaceAround\">\n            <!-- Checks that various tokens are surrounded by whitespace.\n                 This includes most binary operators and keywords followed\n                 by regular or curly braces.\n            -->\n            <property name=\"tokens\" value=\"ASSIGN, BAND, BAND_ASSIGN, BOR,\n        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,\n        EQUAL, GE, GT, LAND, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,\n        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,\n        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,\n        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,\n        SL, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"WhitespaceAfter\">\n            <!-- Checks that commas, semicolons and typecasts are followed by\n                 whitespace.\n            -->\n            <property name=\"tokens\" value=\"COMMA, SEMI, TYPECAST\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"NoWhitespaceAfter\">\n            <!-- Checks that there is no whitespace after various unary operators.\n                 Linebreaks are allowed.\n            -->\n            <property name=\"tokens\" value=\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS\"/>\n            <property name=\"allowLineBreaks\" value=\"true\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"NoWhitespaceBefore\">\n            <!-- Checks that there is no whitespace before various unary operators.\n                 Linebreaks are allowed.\n            -->\n            <property name=\"tokens\" value=\"SEMI, DOT, POST_DEC, POST_INC\"/>\n            <property name=\"allowLineBreaks\" value=\"true\"/>\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n        <module name=\"ParenPad\">\n            <!-- Checks that there is no whitespace before close parens or after\n                 open parens.\n            -->\n            <property name=\"severity\" value=\"error\"/>\n        </module>\n\n    </module>\n</module>\n"
        },
        {
          "name": "container_integration_tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker_build",
          "type": "tree",
          "content": null
        },
        {
          "name": "helm",
          "type": "tree",
          "content": null
        },
        {
          "name": "jekyll-www.mock-server.com",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-client-java",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-integration-testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-junit-jupiter",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-junit-rule",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-netty",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-proxy-war",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-spring-test-listener",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-testing",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver-war",
          "type": "tree",
          "content": null
        },
        {
          "name": "mockserver.example.properties",
          "type": "blob",
          "size": 13.6005859375,
          "content": "###############################\n# MockServer & Proxy Settings #\n###############################\n\n# ports\n# the HTTP, HTTPS, SOCKS and HTTP CONNECT port(s) for both mocking and proxying requests\nmockserver.serverPort=1080\n# when specified all requests received will be forwarded to the specified port, unless they match an expectation\nmockserver.proxyRemotePort=1090\n# specified the host to forward all proxy requests to when port forwarding mode has been enabled using the proxyRemotePort option, defaults to \"localhost\"\nmockserver.proxyRemoteHost=localhost\n\n# logging\n\n# minimum level of logs to record in the event log and to output to system out\nmockserver.logLevel=INFO\n# disable logging to the system output\nmockserver.disableSystemOut=false\n# disable all logging and processing of log events\nmockserver.disableLogging=false\n# if true (the default) the log event recording that a request matcher did not match will include a detailed reason why each non matching field did not match\nmockserver.detailedMatchFailures=false\n# if true (the default) the ClientAndServer constructor or static factor methods will open the UI in the default browser when the log level is set to DEBUG\nmockserver.launchUIForLogLevelDebug=false\n# enable the recording of metrics for different activities within MockServer, these are exposed via /mockserver/metrics in prometheus format\nmockserver.metricsEnabled=false\n\n# memory usage\n\n# maximum number of expectations held in the in-memory ring buffer\nmockserver.maxExpectations=5000\n# maximum number of log entries to hold in memory, this include recorded requests, expectation match failures and other log entries\nmockserver.maxLogEntries=60000\n# maximum number of remote (not the same JVM) method callbacks (i.e. web sockets) registered for expectations.  The web socket client registry entries are stored in a circular queue so once this limit is reach the oldest are overwritten\nmockserver.maxWebSocketExpectations=1500\n# output JVM memory usage metrics to CSV file periodically called memoryUsage_<yyyy-MM-dd>.csv\nmockserver.outputMemoryUsageCsv=false\n# directory to output JVM memory usage metrics CSV files to when outputMemoryUsageCsv enabled\nmockserver.memoryUsageCsvDirectory=.\n\n# scalability\n\n# number of threads for main event loop\nmockserver.nioEventLoopThreadCount=5\n# number of threads for the action handler thread pool\nmockserver.actionHandlerThreadCount=5\n# number of threads for client event loop when calling downstream\nmockserver.clientNioEventLoopThreadCount=5\n# number of threads for each expectation with a method / closure callback (i.e. web socket client) in MockServerClient\nmockserver.webSocketClientEventLoopThreadCount=5\n# maximum time allowed in milliseconds for any future to wait, for example when waiting for a response over a web socket callback\nmockserver.maxFutureTimeoutInMillis=60000\n# If true (the default) request matchers will fail on the first non-matching field, if false request matchers will compare all fields\nmockserver.matchersFailFast=false\n\n# socket\n\n# maximum time in milliseconds allowed for a response from a socket\nmockserver.maxSocketTimeoutInMillis=10000\n# maximum time in milliseconds allowed to connect to a socket\nmockserver.socketConnectionTimeoutInMillis=10000\n# if true socket connections will always be closed after a response is returned, if false connection is only closed if request header indicate connection should be closed\nmockserver.alwaysCloseSocketConnections=true\n# the local IP address to bind to for accepting new socket connections\nmockserver.localBoundIP=0.0.0.0\n\n# http request parsing\n\n# maximum size the first line of an HTTP request\nmockserver.maxInitialLineLength=8192\n# maximum size HTTP request headers\nmockserver.maxHeaderSize=16384\n# maximum size of HTTP chunks in request or responses\nmockserver.maxChunkSize=16384\n# if true semicolons are treated as a separator for a query parameter string, if false the semicolon is treated as a normal character that is part of a query parameter value\nmockserver.useSemicolonAsQueryParameterSeparator=true\n\n# CORS\n\n# enable CORS for MockServer REST API so that the API can be used for javascript running in browsers, such as selenium\nmockserver.enableCORSForAPI=false\n# enable CORS for all responses from MockServer, including the REST API and expectation responses\nmockserver.enableCORSForAllResponses=false\n# the value used for CORS in the access-control-allow-headers and access-control-expose-headers headers\nmockserver.corsAllowHeaders=\"Allow, Content-Encoding, Content-Length, Content-Type, ETag, Expires, Last-Modified, Location, Server, Vary, Authorization\"\n# the value used for CORS in the access-control-allow-methods header\nmockserver.corsAllowMethods=\"CONNECT, DELETE, GET, HEAD, OPTIONS, POST, PUT, PATCH, TRACE\"\n# the value used for CORS in the access-control-allow-credentials header\nmockserver.corsAllowCredentials=false\n# the value used for CORS in the access-control-max-age header\nmockserver.corsMaxAgeInSeconds=100\n\n# mock initialization\n\n# the class (and package) used to initialize expectations in MockServer at startup, if set MockServer will load and call this class to initialise expectations when is starts\n#mockserver.initializationClass=org.mockserver.server.initialize.ExpectationInitializerExample\n# the path to the json file used to initialize expectations in MockServer at startup, if set MockServer will load this file and initialise expectations for each item in the file when is starts\n#mockserver.initializationJsonPath=org/mockserver/server/initialize/initializerJson.json\n# if enabled the initialization json file will be watched for changes, any changes found will result in expectations being created, remove or updated by matching against their key\nmockserver.watchInitializationJson=false\n\n# mock persistence\n\n# enable the persisting of expectations as json, which is updated whenever the expectation state is updated (i.e. add, clear, expires, etc)\nmockserver.persistExpectations=false\n# the file path used to save persisted expectations as json, which is updated whenever the expectation state is updated (i.e. add, clear, expires, etc)\n#mockserver.persistedExpectationsPath=org/mockserver/server/initialize/initializerJson.json\n\n# verification\n\n# the maximum number of requests to return in verification failure result, if more expectations are found the failure result does not list them separately\nmockserver.maximumNumberOfRequestToReturnInVerificationFailure=10\n\n# proxy\n\n# If true (the default) when no matching expectation is found, and the host header of the request does not match MockServer's host, then MockServer attempts to proxy the request if that fails then a 404 is returned\nmockserver.attemptToProxyIfNoMatchingExpectation=true\n# Use HTTP proxy (i.e. via Host header) for all outbound / forwarded requests\n#mockserver.forwardHttpProxy=127.0.0.1:1090\n# Use HTTPS proxy (i.e. HTTP CONNECT) for all outbound / forwarded requests, supports TLS tunnelling of HTTPS requests\n#mockserver.forwardHttpsProxy=127.0.0.1:1090\n# use SOCKS proxy for all outbound / forwarded requests, support TLS tunnelling of TCP connections\n#mockserver.forwardSocksProxy=127.0.0.1:1090\n# Username for proxy authentication when using HTTPS proxy (i.e. HTTP CONNECT) for all outbound / forwarded requests\n#mockserver.forwardProxyAuthenticationUsername=john.doe\n# Password for proxy authentication when using HTTPS proxy (i.e. HTTP CONNECT) for all outbound / forwarded requests\n#mockserver.forwardProxyAuthenticationPassword=p@ssw0rd\n# The authentication realm for proxy authentication to MockServer\n#mockserver.proxyAuthenticationRealm=\"MockServer HTTP Proxy\"\n# The required username for proxy authentication to MockServer\n#mockserver.proxyAuthenticationUsername=john.doe\n# The required password for proxy authentication to MockServer\n#mockserver.proxyAuthenticationPassword=p@ssw0rd\n\n# liveness\n\n# Path to support HTTP GET requests for status response (also available on PUT /mockserver/status)\nmockserver.livenessHttpGetPath=/liveness/probe\n\n# control plane authentication\n\n# require mTLS (also called client authentication and two-way TLS) for all control plane requests\nmockserver.controlPlaneTLSMutualAuthenticationRequired=false\n# file system path or classpath location of custom mTLS (TLS client authentication) X.509 Certificate Chain for control plane mTLS authentication\n#mockserver.controlPlaneTLSMutualAuthenticationCAChain=\"/some/existing/path\"\n# file system path or classpath location of a fixed custom private key for control plane connections using mTLS for authentication\n#mockserver.controlPlanePrivateKeyPath=\"/some/existing/path\"\n# file system path or classpath location of a fixed custom X.509 Certificate for control plane connections using mTLS for authentication\n#mockserver.controlPlaneX509CertificatePath=\"/some/existing/path\"\n# require JWT authentication for all control plane requests\nmockserver.controlPlaneJWTAuthenticationRequired=false\n# JWK source, as a file system path, classpath location or a URL, used when JWK authentication is enabled for control plane requests\n#mockserver.controlPlaneJWTAuthenticationJWKSource=\"/some/existing/path\"\n# audience claim (i.e. aud) required when JWT authentication is enabled for control plane requests\n#mockserver.controlPlaneJWTAuthenticationExpectedAudience=https://mock-server.com\n# matching claims expected when JWT authentication is enabled for control plane requests, value should be string with comma separated key=value items, for example: scope=internal public,sub=some_subject\n#mockserver.controlPlaneJWTAuthenticationMatchingClaims=name=John Doe,admin=true\n# required claims that should exist (i.e. with any value) when JWT authentication is enabled for control plane requests, value should be string with comma separated values, for example: scope,sub\n#mockserver.controlPlaneJWTAuthenticationRequiredClaims=name,admin,scope\n\n# TLS inbound - dynamic CA\n\n# enable dynamic creation of Certificate Authority X.509 Certificate and Private Key\nmockserver.dynamicallyCreateCertificateAuthorityCertificate=true\n# directory used to save the dynamically generated Certificate Authority X.509 Certificate and Private Key\n#mockserver.directoryToSaveDynamicSSLCertificate=\"/some/existing/path\"\n# proactively initialise TLS during start to ensure that if dynamicallyCreateCertificateAuthorityCertificate is enabled the Certificate Authority X.509 Certificate and Private Key will be created during start up and not when the first TLS connection is received\nmockserver.proactivelyInitialiseTLS=false\n\n# TLS inbound - dynamic private key & x509\n\n# MockServer dynamically updates the Subject Alternative Name (SAN) values for its TLS certificate to add domain names and IP addresses from request Host headers and Host headers in expectations, this configuration setting disables this automatic update and only uses SAN value provided in TLS Subject Alternative Name Domains and TLS Subject Alternative Name IPs configuration properties\nmockserver.preventCertificateDynamicUpdate=false\n# the domain name for auto-generate TLS certificates\nmockserver.sslCertificateDomainName=localhost\n# the Subject Alternative Name (SAN) domain names for auto-generate TLS certificates as a comma separated list\nmockserver.sslSubjectAlternativeNameDomains=\"localhost,www.foo.bar\"\n# the Subject Alternative Name (SAN) IP addresses for auto-generate TLS certificates as a comma separated list\nmockserver.sslSubjectAlternativeNameIps=\"127.0.0.1,0.0.0.0\"\n\n# TLS inbound - fixed CA\n\n# location of custom file for Certificate Authority for TLS, the private key must be a PKCS#8 or PKCS#1 PEM file and must match the TLS Certificate Authority X.509 Certificate\n#mockserver.certificateAuthorityPrivateKey=\"/some/existing/path\"\n# location of custom file for Certificate Authority for TLS, the certificate must be a X.509 PEM file and must match the TLS Certificate Authority Private Key\n#mockserver.certificateAuthorityCertificate=\"/some/existing/path\"\n\n# TLS inbound - fixed private key & x509\n\n# File system path or classpath location of a fixed custom private key for TLS connections into MockServer\n#mockserver.privateKeyPath=\"/some/existing/path\"\n# File system path or classpath location of a fixed custom X.509 Certificate for TLS connections into MockServer\n#mockserver.x509CertificatePath=\"/some/existing/path\"\n\n# TLS inbound - mTLS\n\n# require mTLS (also called client authentication and two-way TLS) for all TLS connections / HTTPS requests to MockServer\nmockserver.tlsMutualAuthenticationRequired=false\n# File system path or classpath location of custom mTLS (TLS client authentication) X.509 Certificate Chain for Trusting (i.e. signature verification of) Client X.509 Certificates, the certificate chain must be a X.509 PEM file\n#mockserver.tlsMutualAuthenticationCertificateChain=\"/some/existing/path\"\n\n# TLS outbound - CA\n\n# configure trusted set of certificates for forwarded or proxied requests (i.e. TLS connections out of MockServer)\n#mockserver.forwardProxyTLSX509CertificatesTrustManagerType=CUSTOM\n\n# TLS outbound - fixed CA\n\n# File system path or classpath location of custom file for trusted X.509 Certificate Authority roots for forwarded or proxied requests (i.e. TLS connections out of MockServer), the certificate chain must be a X.509 PEM file\n#mockserver.forwardProxyTLSCustomTrustX509Certificates=\"/some/existing/path\"\n\n# TLS outbound - fixed private key & x509\n\n# File system path or classpath location of custom Private Key for forwarded or proxied requests (i.e. TLS connections out of MockServer), the private key must be a PKCS#8 or PKCS#1 PEM file\n#mockserver.forwardProxyPrivateKey=\"/some/existing/path\"\n# File system path or classpath location of custom X.509 Certificate Chain for forwarded or proxied requests (i.e. TLS connections out of MockServer), the certificates must be a X.509 PEM file\n#mockserver.forwardProxyCertificateChain=\"/some/existing/path\""
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 9.8330078125,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Maven Start Up Batch script\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   M2_HOME - location of maven2's installed home dir\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"`uname`\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        export JAVA_HOME=\"`/usr/libexec/java_home`\"\n      else\n        export JAVA_HOME=\"/Library/Java/Home\"\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=`java-config --jre-home`\n  fi\nfi\n\nif [ -z \"$M2_HOME\" ] ; then\n  ## resolve links - $0 may be a link to maven's home\n  PRG=\"$0\"\n\n  # need this for relative symlinks\n  while [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n      PRG=\"$link\"\n    else\n      PRG=\"`dirname \"$PRG\"`/$link\"\n    fi\n  done\n\n  saveddir=`pwd`\n\n  M2_HOME=`dirname \"$PRG\"`/..\n\n  # make it fully qualified\n  M2_HOME=`cd \"$M2_HOME\" && pwd`\n\n  cd \"$saveddir\"\n  # echo Using m2 at $M2_HOME\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --unix \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --unix \"$CLASSPATH\"`\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=\"`(cd \"$M2_HOME\"; pwd)`\"\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"`(cd \"$JAVA_HOME\"; pwd)`\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"`which javac`\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"`expr \\\"$javaExecutable\\\" : '\\([^ ]*\\)'`\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=`which readlink`\n    if [ ! `expr \"$readLink\" : '\\([^ ]*\\)'` = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n        javaExecutable=\"`cd \\\"$javaHome\\\" && pwd -P`/javac\"\n      else\n        javaExecutable=\"`readlink -f \\\"$javaExecutable\\\"`\"\n      fi\n      javaHome=\"`dirname \\\"$javaExecutable\\\"`\"\n      javaHome=`expr \"$javaHome\" : '\\(.*\\)/bin'`\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"`which java`\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\nCLASSWORLDS_LAUNCHER=org.codehaus.plexus.classworlds.launcher.Launcher\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=`cd \"$wdir/..\"; pwd`\n    fi\n    # end of workaround\n  done\n  echo \"${basedir}\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    echo \"$(tr -s '\\n' ' ' < \"$1\")\"\n  fi\n}\n\nBASE_DIR=`find_maven_basedir \"$(pwd)\"`\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nif [ -r \"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\" ]; then\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Found .mvn/wrapper/maven-wrapper.jar\"\n    fi\nelse\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Couldn't find .mvn/wrapper/maven-wrapper.jar, downloading it ...\"\n    fi\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      jarUrl=\"$MVNW_REPOURL/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n    else\n      jarUrl=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n    fi\n    while IFS=\"=\" read key value; do\n      case \"$key\" in (wrapperUrl) jarUrl=\"$value\"; break ;;\n      esac\n    done < \"$BASE_DIR/.mvn/wrapper/maven-wrapper.properties\"\n    if [ \"$MVNW_VERBOSE\" = true ]; then\n      echo \"Downloading from: $jarUrl\"\n    fi\n    wrapperJarPath=\"$BASE_DIR/.mvn/wrapper/maven-wrapper.jar\"\n    if $cygwin; then\n      wrapperJarPath=`cygpath --path --windows \"$wrapperJarPath\"`\n    fi\n\n    if command -v wget > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found wget ... using wget\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget \"$jarUrl\" -O \"$wrapperJarPath\"\n        else\n            wget --http-user=$MVNW_USERNAME --http-password=$MVNW_PASSWORD \"$jarUrl\" -O \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Found curl ... using curl\"\n        fi\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        else\n            curl --user $MVNW_USERNAME:$MVNW_PASSWORD -o \"$wrapperJarPath\" \"$jarUrl\" -f\n        fi\n\n    else\n        if [ \"$MVNW_VERBOSE\" = true ]; then\n          echo \"Falling back to using Java to download\"\n        fi\n        javaClass=\"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaClass=`cygpath --path --windows \"$javaClass\"`\n        fi\n        if [ -e \"$javaClass\" ]; then\n            if [ ! -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Compiling MavenWrapperDownloader.java ...\"\n                fi\n                # Compiling the Java class\n                (\"$JAVA_HOME/bin/javac\" \"$javaClass\")\n            fi\n            if [ -e \"$BASE_DIR/.mvn/wrapper/MavenWrapperDownloader.class\" ]; then\n                # Running the downloader\n                if [ \"$MVNW_VERBOSE\" = true ]; then\n                  echo \" - Running MavenWrapperDownloader.java ...\"\n                fi\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$MAVEN_PROJECTBASEDIR\")\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\nexport MAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nif [ \"$MVNW_VERBOSE\" = true ]; then\n  echo $MAVEN_PROJECTBASEDIR\nfi\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$M2_HOME\" ] &&\n    M2_HOME=`cygpath --path --windows \"$M2_HOME\"`\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=`cygpath --path --windows \"$JAVA_HOME\"`\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=`cygpath --path --windows \"$CLASSPATH\"`\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=`cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\"`\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $@\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.home=${M2_HOME}\" \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 6.4521484375,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Maven Start Up Batch script\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM M2_HOME - location of maven2's installed home dir\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%HOME%\\mavenrc_pre.bat\" call \"%HOME%\\mavenrc_pre.bat\"\nif exist \"%HOME%\\mavenrc_pre.cmd\" call \"%HOME%\\mavenrc_pre.cmd\"\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset DOWNLOAD_URL=\"https://repo.maven.apache.org/maven2/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n\nFOR /F \"tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET DOWNLOAD_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET DOWNLOAD_URL=\"%MVNW_REPOURL%/io/takari/maven-wrapper/0.5.6/maven-wrapper-0.5.6.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %DOWNLOAD_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%DOWNLOAD_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% %JVM_CONFIG_MAVEN_PROPS% %MAVEN_OPTS% %MAVEN_DEBUG_OPTS% -classpath %WRAPPER_JAR% \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%HOME%\\mavenrc_post.bat\" call \"%HOME%\\mavenrc_post.bat\"\nif exist \"%HOME%\\mavenrc_post.cmd\" call \"%HOME%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\" == \"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\" == \"on\" exit %ERROR_CODE%\n\nexit /B %ERROR_CODE%\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 37.40625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.mock-server</groupId>\n    <artifactId>mockserver</artifactId>\n    <version>5.15.1-SNAPSHOT</version>\n    <packaging>pom</packaging>\n\n    <name>MockServer</name>\n    <description>A simple server to support mocking responses from any server / service that uses HTTP. The expectations\n        that configure how the MockServer will respond and to incoming requests can be setup using any language that can\n        create JSON. In simple client is provided to make this easy in Java.\n    </description>\n    <url>https://www.mock-server.com</url>\n\n    <licenses>\n        <license>\n            <name>The Apache Software License, Version 2.0</name>\n            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <scm>\n        <url>https://github.com/jamesdbloom/mockservice.git</url>\n        <connection>scm:git:https://github.com/jamesdbloom/mockservice.git</connection>\n        <developerConnection>scm:git:git@github.com:jamesdbloom/mockservice.git</developerConnection>\n        <tag>HEAD</tag>\n    </scm>\n\n    <distributionManagement>\n        <snapshotRepository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n        </snapshotRepository>\n        <repository>\n            <id>ossrh</id>\n            <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n        </repository>\n    </distributionManagement>\n\n    <developers>\n        <developer>\n            <id>jamesdbloom</id>\n            <name>James D Bloom</name>\n            <email>jamesdbloom@gmail.com</email>\n            <url>https://blog.jamesdbloom.com</url>\n        </developer>\n    </developers>\n\n\n    <properties>\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <project.build.sourceEncoding>UTF8</project.build.sourceEncoding>\n        <slf4j.version>2.0.6</slf4j.version>\n        <jackson.version>2.14.2</jackson.version>\n        <velocity.version>2.3</velocity.version>\n        <netty.version>4.1.89.Final</netty.version>\n        <httpcomponents.version>4.4.1</httpcomponents.version>\n        <bouncycastle.version>1.72</bouncycastle.version>\n        <!-- highest spring version is 5.3 due to Java 1.8 version -->\n        <spring.version>5.3.25</spring.version>\n        <spring-web.version>5.3.25</spring-web.version>\n        <mockito.version>4.11.0</mockito.version>\n        <hamcrest.version>2.2</hamcrest.version>\n        <xmlunit.version>2.9.1</xmlunit.version>\n        <skipTests>false</skipTests>\n        <skipAssembly>false</skipAssembly>\n        <deploy.plugin.repository.url>https://oss.sonatype.org/content/repositories/snapshots/</deploy.plugin.repository.url>\n        <release.arguments/>\n        <javadoc.additional.parameters/>\n        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>\n        <!-- also update in docker -->\n        <!-- TODO(jamesdbloom) consider automating using `NETTY_TC_NATIVE_VERSION=$(./mvnw help:evaluate -Dexpression=netty-tcnative-boringssl-static.version -q -DforceStdout)` -->\n        <netty-tcnative-boringssl-static.version>2.0.56.Final</netty-tcnative-boringssl-static.version>\n    </properties>\n\n    <modules>\n        <module>mockserver-testing</module>\n        <module>mockserver-client-java</module>\n        <module>mockserver-core</module>\n        <module>mockserver-integration-testing</module>\n        <module>mockserver-war</module>\n        <module>mockserver-proxy-war</module>\n        <module>mockserver-netty</module>\n        <module>mockserver-junit-rule</module>\n        <module>mockserver-junit-jupiter</module>\n        <module>mockserver-spring-test-listener</module>\n        <module>mockserver-examples</module>\n    </modules>\n\n    <dependencyManagement>\n        <dependencies>\n            <!-- mockserver -->\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mockserver-core</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mockserver-war</artifactId>\n                <classifier>classes</classifier>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mockserver-proxy-war</artifactId>\n                <classifier>classes</classifier>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mockserver-netty</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mockserver-client-java</artifactId>\n                <version>${project.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mockserver-integration-testing</artifactId>\n                <version>${project.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>${project.groupId}</groupId>\n                <artifactId>mockserver-testing</artifactId>\n                <version>${project.version}</version>\n                <scope>test</scope>\n            </dependency>\n\n            <!-- disruptor -->\n            <dependency>\n                <groupId>com.lmax</groupId>\n                <artifactId>disruptor</artifactId>\n                <version>3.4.4</version>\n            </dependency>\n\n            <!-- http -->\n            <dependency>\n                <groupId>javax.servlet</groupId>\n                <artifactId>javax.servlet-api</artifactId>\n                <version>4.0.1</version>\n            </dependency>\n\n            <!-- Tomcat Server -->\n            <dependency>\n                <groupId>org.apache.tomcat.embed</groupId>\n                <artifactId>tomcat-embed-core</artifactId>\n                <!-- highest version for Servlet 4 is 9.x, highest version for Java 1.8 is 10.x -->\n                <version>9.0.71</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.tomcat.embed</groupId>\n                <artifactId>tomcat-embed-logging-juli</artifactId>\n                <version>8.5.2</version>\n            </dependency>\n\n            <!-- Jetty HTTP Client -->\n            <dependency>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-client</artifactId>\n                <version>${jetty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-util</artifactId>\n                <version>${jetty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.eclipse.jetty</groupId>\n                <artifactId>jetty-io</artifactId>\n                <version>${jetty.version}</version>\n            </dependency>\n\n            <!-- Apache HTTP Client -->\n            <dependency>\n                <groupId>org.apache.httpcomponents</groupId>\n                <artifactId>httpclient</artifactId>\n                <version>4.5.14</version>\n            </dependency>\n\n            <!-- Netty -->\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-buffer</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-http</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-http2</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-codec-socks</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-common</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-handler</artifactId>\n                <version>${netty.version}</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>io.netty</groupId>\n                        <artifactId>netty-tcnative-classes</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-handler-proxy</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-transport-native-unix-common</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n            <!-- when upgrading this dependency make sure to also update Dockerfiles -->\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-tcnative-boringssl-static</artifactId>\n                <version>${netty-tcnative-boringssl-static.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>io.netty</groupId>\n                <artifactId>netty-resolver</artifactId>\n                <version>${netty.version}</version>\n            </dependency>\n\n            <!-- gzip HTTP deflater & inflater -->\n            <dependency>\n                <groupId>com.jcraft</groupId>\n                <artifactId>jzlib</artifactId>\n                <version>1.1.3</version>\n            </dependency>\n\n            <!-- non-blocking UUID -->\n            <dependency>\n                <groupId>com.fasterxml.uuid</groupId>\n                <artifactId>java-uuid-generator</artifactId>\n                <version>4.1.0</version>\n            </dependency>\n\n            <!-- SSL X509 -->\n            <dependency>\n                <groupId>org.bouncycastle</groupId>\n                <artifactId>bcprov-jdk18on</artifactId>\n                <version>${bouncycastle.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.bouncycastle</groupId>\n                <artifactId>bcpkix-jdk18on</artifactId>\n                <version>${bouncycastle.version}</version>\n            </dependency>\n\n            <!-- JWT -->\n            <dependency>\n                <groupId>com.nimbusds</groupId>\n                <artifactId>nimbus-jose-jwt</artifactId>\n                <version>9.30.2</version>\n            </dependency>\n\n            <!-- templating -->\n            <dependency>\n                <groupId>org.apache.velocity</groupId>\n                <artifactId>velocity-engine-scripting</artifactId>\n                <version>${velocity.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.velocity</groupId>\n                <artifactId>velocity-engine-core</artifactId>\n                <version>${velocity.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.velocity.tools</groupId>\n                <artifactId>velocity-tools-generic</artifactId>\n                <version>3.1</version>\n            </dependency>\n            <dependency>\n                <groupId>com.samskivert</groupId>\n                <artifactId>jmustache</artifactId>\n                <version>1.15</version>\n            </dependency>\n\n            <!-- javascript (only Java 11+) -->\n            <dependency>\n                <groupId>org.openjdk.nashorn</groupId>\n                <artifactId>nashorn-core</artifactId>\n                <version>15.4</version>\n            </dependency>\n\n            <!-- json (object serialisation) -->\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-core</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-annotations</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>com.fasterxml.jackson.core</groupId>\n                <artifactId>jackson-databind</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>net.javacrumbs.json-unit</groupId>\n                <artifactId>json-unit-core</artifactId>\n                <version>2.36.1</version>\n            </dependency>\n\n            <!-- json validation -->\n            <dependency>\n                <groupId>com.networknt</groupId>\n                <artifactId>json-schema-validator</artifactId>\n                <version>1.0.76</version>\n            </dependency>\n            <dependency>\n                <groupId>com.jayway.jsonpath</groupId>\n                <artifactId>json-path</artifactId>\n                <version>2.7.0</version>\n            </dependency>\n\n            <!-- open api -->\n            <dependency>\n                <groupId>io.swagger.parser.v3</groupId>\n                <artifactId>swagger-parser</artifactId>\n                <version>2.1.12</version>\n                <exclusions>\n                    <exclusion>\n                        <groupId>com.github.fge</groupId>\n                        <artifactId>json-patch</artifactId>\n                    </exclusion>\n                    <exclusion>\n                        <groupId>javax.validation</groupId>\n                        <artifactId>validation-api</artifactId>\n                    </exclusion>\n                </exclusions>\n            </dependency>\n            <!-- used by swagger-parser force version due to CVEs -->\n            <dependency>\n                <groupId>org.mozilla</groupId>\n                <artifactId>rhino</artifactId>\n                <version>1.7.14</version>\n            </dependency>\n\n            <!-- xml -->\n            <dependency>\n                <groupId>jakarta.xml.bind</groupId>\n                <artifactId>jakarta.xml.bind-api</artifactId>\n                <version>3.0.1</version>\n            </dependency>\n            <dependency>\n                <groupId>com.sun.xml.bind</groupId>\n                <artifactId>jaxb-impl</artifactId>\n                <version>4.0.2</version>\n            </dependency>\n            <dependency>\n                <groupId>org.xmlunit</groupId>\n                <artifactId>xmlunit-core</artifactId>\n                <version>${xmlunit.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.xmlunit</groupId>\n                <artifactId>xmlunit-placeholders</artifactId>\n                <version>${xmlunit.version}</version>\n            </dependency>\n\n            <!-- commons & guava -->\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-lang3</artifactId>\n                <version>3.12.0</version>\n            </dependency>\n            <dependency>\n                <groupId>org.apache.commons</groupId>\n                <artifactId>commons-text</artifactId>\n                <version>1.10.0</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-codec</groupId>\n                <artifactId>commons-codec</artifactId>\n                <version>1.15</version>\n            </dependency>\n            <dependency>\n                <groupId>commons-io</groupId>\n                <artifactId>commons-io</artifactId>\n                <version>2.11.0</version>\n            </dependency>\n            <dependency>\n                <groupId>com.google.guava</groupId>\n                <artifactId>guava</artifactId>\n                <version>31.1-jre</version>\n            </dependency>\n\n            <!-- classpath scanning -->\n            <dependency>\n                <groupId>io.github.classgraph</groupId>\n                <artifactId>classgraph</artifactId>\n                <version>4.8.154</version>\n            </dependency>\n\n            <!-- logging -->\n            <dependency> <!-- will map to any underlying logging framework -->\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-api</artifactId>\n                <version>${slf4j.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.slf4j</groupId>\n                <artifactId>slf4j-jdk14</artifactId>\n                <version>${slf4j.version}</version>\n                <optional>true</optional> <!-- do not impose on project importing mock-server -->\n            </dependency>\n\n            <!-- prometheus -->\n            <dependency>\n                <groupId>io.prometheus</groupId>\n                <artifactId>simpleclient</artifactId>\n                <version>0.16.0</version>\n            </dependency>\n            <dependency>\n                <groupId>io.prometheus</groupId>\n                <artifactId>simpleclient_httpserver</artifactId>\n                <version>0.16.0</version>\n            </dependency>\n\n            <!-- spring -->\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-beans</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-context</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-test</artifactId>\n                <version>${spring.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-web</artifactId>\n                <version>${spring-web.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.springframework</groupId>\n                <artifactId>spring-core</artifactId>\n                <version>${spring-web.version}</version>\n            </dependency>\n\n            <!-- test -->\n            <dependency>\n                <groupId>junit</groupId>\n                <artifactId>junit</artifactId>\n                <version>4.13.2</version>\n            </dependency>\n            <dependency>\n                <groupId>org.junit.jupiter</groupId>\n                <artifactId>junit-jupiter-engine</artifactId>\n                <version>5.9.2</version>\n            </dependency>\n            <dependency>\n                <groupId>org.mockito</groupId>\n                <artifactId>mockito-core</artifactId>\n                <version>${mockito.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.mockito</groupId>\n                <artifactId>mockito-junit-jupiter</artifactId>\n                <version>${mockito.version}</version>\n                <scope>test</scope>\n            </dependency>\n            <dependency>\n                <groupId>org.hamcrest</groupId>\n                <artifactId>hamcrest</artifactId>\n                <version>${hamcrest.version}</version>\n            </dependency>\n            <dependency>\n                <groupId>org.skyscreamer</groupId>\n                <artifactId>jsonassert</artifactId>\n                <version>1.5.1</version>\n            </dependency>\n\n            <!-- Fixes for vulnerable transitive dependencies -->\n            <dependency>\n                <!-- from velocity-tools-generic -->\n                <groupId>commons-collections</groupId>\n                <artifactId>commons-collections</artifactId>\n                <version>3.2.2</version>\n            </dependency>\n\n            <!-- Fixes for conflicting transitive dependencies -->\n            <dependency>\n                <!-- Conflicting versions in json-unit-core and junit -->\n                <groupId>org.hamcrest</groupId>\n                <artifactId>hamcrest-core</artifactId>\n                <version>${hamcrest.version}</version>\n            </dependency>\n            <dependency>\n                <!-- Conflicting versions in json-schema-validator and guava -->\n                <groupId>com.google.code.findbugs</groupId>\n                <artifactId>jsr305</artifactId>\n                <version>3.0.2</version>\n            </dependency>\n            <dependency>\n                <!-- Conflicting versions in jakarta.xml.bind-api and jaxb-core -->\n                <groupId>com.sun.activation</groupId>\n                <artifactId>jakarta.activation</artifactId>\n                <version>2.0.1</version>\n            </dependency>\n            <dependency>\n                <!-- Conflicting versions in swagger-parser and swagger-core -->\n                <groupId>com.fasterxml.jackson.dataformat</groupId>\n                <artifactId>jackson-dataformat-yaml</artifactId>\n                <version>${jackson.version}</version>\n            </dependency>\n            <dependency>\n                <!-- Conflicting versions in velocity-tools-generic and commons-digester3 -->\n                <groupId>commons-beanutils</groupId>\n                <artifactId>commons-beanutils</artifactId>\n                <version>1.9.4</version>\n            </dependency>\n            <dependency>\n                <!-- Conflicting versions in commons-beanutils and commons-digester3 and swagger-parser -->\n                <groupId>commons-logging</groupId>\n                <artifactId>commons-logging</artifactId>\n                <version>1.2</version>\n            </dependency>\n            <dependency>\n                <!-- Conflicting versions in swagger-parser -->\n                <groupId>org.yaml</groupId>\n                <artifactId>snakeyaml</artifactId>\n                <version>1.33</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <profiles>\n        <profile>\n            <id>kill_mockserver_instances</id>\n            <activation>\n                <file>\n                    <exists>/usr/bin/env</exists>\n                </file>\n            </activation>\n\n            <build>\n                <plugins>\n                    <!-- ensure no existing mock server instances running -->\n                    <plugin>\n                        <groupId>org.codehaus.mojo</groupId>\n                        <artifactId>exec-maven-plugin</artifactId>\n                        <version>3.1.0</version>\n                        <inherited>false</inherited>\n                        <configuration>\n                            <workingDirectory>${basedir}</workingDirectory>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>kill_mockserver_instances</id>\n                                <phase>clean</phase>\n                                <goals>\n                                    <goal>exec</goal>\n                                </goals>\n                                <configuration>\n                                    <executable>scripts/stop_MockServer.sh</executable>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <!-- disable javadoc linting only in java 8 -->\n        <profile>\n            <id>disable-java8-doclint</id>\n            <activation>\n                <jdk>[1.8,)</jdk>\n            </activation>\n            <properties>\n                <additionalparam>-Xdoclint:none</additionalparam>\n            </properties>\n        </profile>\n        <profile>\n            <id>release</id>\n            <build>\n                <plugins>\n                    <!-- generate sources -->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-source-plugin</artifactId>\n                        <version>3.2.1</version>\n                        <executions>\n                            <execution>\n                                <id>attach-sources</id>\n                                <goals>\n                                    <goal>jar-no-fork</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <!-- generate javadoc -->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-javadoc-plugin</artifactId>\n                        <version>3.5.0</version>\n                        <configuration>\n                            <failOnError>false</failOnError>\n                            <doclint>none</doclint>\n                        </configuration>\n                        <executions>\n                            <execution>\n                                <id>attach-javadocs</id>\n                                <goals>\n                                    <goal>jar</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>aggregate</id>\n                                <goals>\n                                    <goal>aggregate</goal>\n                                </goals>\n                                <phase>site</phase>\n                                <configuration>\n                                    <reportOutputDirectory>${basedir}/jekyll-www.mock-server.com/_site\n                                    </reportOutputDirectory>\n                                    <destDir>apidocs</destDir>\n                                </configuration>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <!-- sign releases -->\n                    <!-- Error:\n                          gpg: signing failed: Inappropriate ioctl for device\n                         Fix:\n                          $ GPG_TTY=$(tty)\n                          $ export GPG_TTY -->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-gpg-plugin</artifactId>\n                        <version>3.0.1</version>\n                        <executions>\n                            <execution>\n                                <id>sign-artifacts</id>\n                                <phase>verify</phase>\n                                <goals>\n                                    <goal>sign</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                    <!-- perform releases -->\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-release-plugin</artifactId>\n                        <version>2.5.3</version>\n                        <configuration>\n                            <autoVersionSubmodules>true</autoVersionSubmodules>\n                            <useReleaseProfile>false</useReleaseProfile>\n                            <releaseProfiles>release</releaseProfiles>\n                            <goals>deploy</goals>\n                            <arguments>${release.arguments}</arguments>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n    <build>\n        <plugins>\n            <!-- compile with correct warnings -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.10.1</version>\n                <configuration>\n                    <fork>false</fork>\n                    <source>${maven.compiler.source}</source>\n                    <target>${maven.compiler.target}</target>\n                    <compilerArgs>\n                        <arg>-XDignore.symbol.file</arg>\n                        <arg>-Xlint:all</arg>\n                        <!-- lines below should be uncommented if switching to java 9+ -->\n                        <!-- <arg>&#45;&#45;add-exports=java.base/sun.security.x509=ALL-UNNAMED</arg>-->\n                        <!-- <arg>&#45;&#45;add-exports=java.base/sun.security.util=ALL-UNNAMED</arg>-->\n                    </compilerArgs>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>testCompile</goal>\n                        </goals>\n                        <configuration>\n                            <fork>false</fork>\n                            <compilerArgs>\n                                <arg>-XDignore.symbol.file</arg>\n                            </compilerArgs>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>templating-maven-plugin</artifactId>\n                <version>1.0.0</version>\n                <executions>\n                    <execution>\n                        <id>generate-version-class</id>\n                        <goals>\n                            <goal>filter-sources</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- output MANIFEST.MF file -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>3.3.0</version>\n                <configuration>\n                    <archive>\n                        <manifest>\n                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n                        </manifest>\n                    </archive>\n                </configuration>\n            </plugin>\n            <!-- clean up additional artifacts not generated by this build -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-clean-plugin</artifactId>\n                <version>3.2.0</version>\n                <configuration>\n                    <verbose>false</verbose>\n                    <filesets>\n                        <fileset>\n                            <directory>${basedir}</directory>\n                            <includes>\n                                <include>**/*.log</include>\n                                <include>**/keystore.jks</include>\n                                <include>**/mockserver_keystore_*_jks</include>\n                                <include>**/keystore.p12</include>\n                            </includes>\n                        </fileset>\n                        <fileset>\n                            <directory>${basedir}/mods</directory>\n                        </fileset>\n                        <fileset>\n                            <directory>${basedir}/tomcat</directory>\n                        </fileset>\n                        <fileset>\n                            <directory>${basedir}/tomcat_mockserver</directory>\n                        </fileset>\n                        <fileset>\n                            <directory>${basedir}/tomcat_proxy</directory>\n                        </fileset>\n                        <fileset>\n                            <directory>${basedir}/.extract</directory>\n                        </fileset>\n                        <fileset>\n                            <directory>${basedir}/jasmine/google</directory>\n                        </fileset>\n                    </filesets>\n                </configuration>\n            </plugin>\n            <!-- testing -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>${maven-surefire-plugin.version}</version>\n                <configuration>\n                    <!-- allow debugging tests -->\n                    <!--<forkCount>0</forkCount>-->\n                    <includes>\n                        <include>**/*Test.java</include>\n                    </includes>\n                    <excludes>\n                        <exclude>**/*IntegrationTest.java</exclude>\n                    </excludes>\n                    <systemProperties>\n                        <mockserver.logLevel>ERROR</mockserver.logLevel>\n                    </systemProperties>\n                    <argLine>-Duser.language=en -Duser.country=GB</argLine>\n                    <disableXmlReport>true</disableXmlReport>\n                    <properties>\n                        <property>\n                            <name>listener</name>\n                            <value>org.mockserver.test.PrintOutCurrentTestRunListener</value>\n                        </property>\n                    </properties>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-failsafe-plugin</artifactId>\n                <version>${maven-surefire-plugin.version}</version>\n                <configuration>\n                    <!-- allow debugging tests -->\n                    <!--<forkCount>0</forkCount>-->\n                    <includes>\n                        <include>**/*IntegrationTest.java</include>\n                    </includes>\n                    <systemProperties>\n                        <mockserver.logLevel>ERROR</mockserver.logLevel>\n                        <project.version>${project.version}</project.version>\n                        <project.basedir>${project.basedir}</project.basedir>\n                    </systemProperties>\n                    <argLine>-Duser.language=en -Duser.country=GB</argLine>\n                    <disableXmlReport>true</disableXmlReport>\n                    <properties>\n                        <property>\n                            <name>listener</name>\n                            <value>org.mockserver.test.PrintOutCurrentTestRunListener</value>\n                        </property>\n                    </properties>\n                </configuration>\n                <executions>\n                    <execution>\n                        <goals>\n                            <goal>integration-test</goal>\n                            <goal>verify</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- code format -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-checkstyle-plugin</artifactId>\n                <version>3.2.1</version>\n                <dependencies>\n                    <dependency>\n                        <groupId>com.puppycrawl.tools</groupId>\n                        <artifactId>checkstyle</artifactId>\n                        <version>9.3</version>\n                    </dependency>\n                </dependencies>\n                <configuration>\n                    <linkXRef>false</linkXRef>\n                    <failsOnError>true</failsOnError>\n                    <consoleOutput>true</consoleOutput>\n                    <excludes>**\\/HelpMojo.java</excludes>\n                    <configLocation>checkstyle.xml</configLocation>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>validate</id>\n                        <phase>validate</phase>\n                        <goals>\n                            <goal>check</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <!-- ensure no implicit transitive dependencies not at the same version -->\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>3.2.1</version>\n                <configuration>\n                    <rules>\n                        <dependencyConvergence/>\n                    </rules>\n                </configuration>\n                <executions>\n                    <execution>\n                        <id>enforce</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n        </plugins>\n    </build>\n\n</project>\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}