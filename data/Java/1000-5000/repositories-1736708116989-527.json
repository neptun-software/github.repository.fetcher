{
  "metadata": {
    "timestamp": 1736708116989,
    "page": 527,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lovetuzitong/MultiImageSelector",
      "stars": 2964,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3701171875,
          "content": "# Built application files\n*.apk\n*.ap_\n\n# Files for the Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\n\n# Gradle files\n*.iml\n.idea/\n.gradle/\nbuild/\n/*/build/\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n\n# Local configuration file (sdk path, etc)\nlocal.properties\n\n# Proguard folder generated by Eclipse\nproguard/\n\n# Log Files\n*.log\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2015 Nereo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.0888671875,
          "content": "# MultiImageSelector\nImage selector for Android device. Support single choice and multi-choice.\n\n[![](https://jitpack.io/v/lovetuzitong/MultiImageSelector.svg)](https://jitpack.io/#lovetuzitong/MultiImageSelector)\n\n[中文文档](README_zh.md)\n\n###ART\n![Example1](art/example_1.png) ![Select1](art/select_1.png) ![Select2](art/select_2.png) ![Select3](art/select_3.png)\n\n-------------------\n\n###Run Demo\n\n>./gradlew installDebug\n\n###Quick Start\n* Step 0\nAdd module `multi-image-selector` as your dependence. in your `build.gradle` :\n```java\nrepositories {\n    maven { url \"https://jitpack.io\" }\n}\n\ndependencies {\n    compile 'com.github.lovetuzitong:MultiImageSelector:1.2'\n}\n```\n\n* Step 1 \nSet your `AndroidManifest.xml` as below:\n```xml\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n\n<application\n\n    ...\n\n    <!--Image Selector Entry-->\n    <activity\n        android:configChanges=\"orientation|screenSize\"\n        android:name=\"me.nereo.multi_image_selector.MultiImageSelectorActivity\" />\n</application>\n```\n\n* Step 2\nCall image selector simplest in your code, eg. ( From `version-1.1` )\n\n``` java\n// Multi image selector form an Activity\nMultiImageSelector.create(Context)\n        .start(Activity, REQUEST_IMAGE);\n```\n\nDetail Api.\n``` java\nMultiImageSelector.create(Context)\n        .showCamera(boolean) // show camera or not. true by default\n        .count(int) // max select image size, 9 by default. used width #.multi()\n        .single() // single mode\n        .multi() // multi mode, default mode;\n        .origin(ArrayList<String>) // original select data set, used width #.multi()\n        .start(Activity/Fragment, REQUEST_IMAGE);\n```\n\nAlso support traditional `Intent` :\n``` java\nIntent intent = new Intent(mContext, MultiImageSelectorActivity.class);\n// whether show camera\nintent.putExtra(MultiImageSelectorActivity.EXTRA_SHOW_CAMERA, true);\n// max select image amount\nintent.putExtra(MultiImageSelectorActivity.EXTRA_SELECT_COUNT, 9);\n// select mode (MultiImageSelectorActivity.MODE_SINGLE OR MultiImageSelectorActivity.MODE_MULTI)\nintent.putExtra(MultiImageSelectorActivity.EXTRA_SELECT_MODE, MultiImageSelectorActivity.MODE_MULTI);\n// default select images (support array list)\nintent.putStringArrayListExtra(MultiImageSelectorActivity.EXTRA_DEFAULT_SELECTED_LIST, defaultDataArray);\nstartActivityForResult(intent, REQUEST_IMAGE);\n```\n\n* Step 3\nReceive result in your `onActivityResult` Method. eg.\n```java\n@Override\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n    if(requestCode == REQUEST_IMAGE){\n        if(resultCode == RESULT_OK){\n\t        // Get the result list of select image paths\n            List<String> path = data.getStringArrayListExtra(MultiImageSelectorActivity.EXTRA_RESULT);\n            // do your logic ....\n        }\n    }\n}\n```\n\n* Step 4\nNo more steps, just enjoy. :)\n\n-------------------\n\n###Custom Activity Style\n* Custome your own Activity\n```java\nclass CustomerActivity extends Activity implements MultiImageSelectorFragment.Callback{\n\t@Override\n    protected void onCreate(Bundle savedInstanceState) {\n\t\t// customer logic here...\n\t\tBundle bundle = new Bundle();\n        bundle.putInt(MultiImageSelectorFragment.EXTRA_SELECT_COUNT, mDefaultCount);\n        bundle.putInt(MultiImageSelectorFragment.EXTRA_SELECT_MODE, mode);\n        bundle.putBoolean(MultiImageSelectorFragment.EXTRA_SHOW_CAMERA, isShow);\n        // Add fragment to your Activity\n        getSupportFragmentManager().beginTransaction()\n                .add(R.id.image_grid, Fragment.instantiate(this, MultiImageSelectorFragment.class.getName(), bundle))\n                .commit();\n\t}\n\t@Override\n    public void onSingleImageSelected(String path) {\n        // When select mode set to MODE_SINGLE, this method will received result from fragment\n    }\n\n    @Override\n    public void onImageSelected(String path) {\n        // You can specify your ActionBar behavior here \n    }\n\n    @Override\n    public void onImageUnselected(String path) {\n        // You can specify your ActionBar behavior here \n    }\n\n    @Override\n    public void onCameraShot(File imageFile) {\n        // When user take phone by camera, this method will be called.\n    }\n}\n```\n* Take a glance of `MultiImageSelectorActivity.java`\n\n-------------------\n\n###Change Log\n\n* 2016-5-18\n    1. Added. `JitPack` support\n    2. Added. Convenient way to call image selector. See `Step 2`\n    3. Fixed. Some NPE.\n\n* 2016-1-19\n    1. Fixed. cannot load some 0-size image\n    2. Added. When take a new photo, notify media scanner\n    3. Fixed. Can't take photo on RED-MI\n    4. Fixed. Performance when show Camera-Icon\n\n* 2015-5-5\n    1. Fixed. Can't display some images. (Issue by[sd6352051](https://github.com/sd6352051), [larry](https://github.com/18611480882))\n    2. Fixed. `ListPopupWindow` can not fill parent\n    3. Added. Add checked mask.\n\n* 2015-4-16\n    1. Fixed. Crack when rotate device. (Issue by [@Leminity](https://github.com/Leminity))\n    2. Fixed. PopupListView position error. (Issue by [@Slock](https://github.com/Slock))\n    3. Change. Demo application shortcut.\n    4. Change. Readme file.\n\n* 2015-4-9\n    1. Fixed. When set `EXTRA_SHOW_CAMERA` to `true`, the first grid item onclick event were messed.\n    2. Add. Support initial selected image list.\n\n-------------------\n\n###Thanks\n\n* [square-picasso](https://github.com/square/picasso) A powerful image downloading and caching library for Android \n\n-------------------\n\n###License\n>The MIT License (MIT)\n\n>Copyright (c) 2015 Nereo\n\n>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software."
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 6.3974609375,
          "content": "# MultiImageSelector\n仿微信实现多图选择。支持单选和多选两种模式\n\n[![](https://jitpack.io/v/lovetuzitong/MultiImageSelector.svg)](https://jitpack.io/#lovetuzitong/MultiImageSelector)\n\n[English Doc](README.md)\n\n###截图\n![Example1](art/example_1.png) ![Select1](art/select_1.png) ![Select2](art/select_2.png) ![Select3](art/select_3.png)\n\n-------------------\n\n###运行DEMO\n\n>./gradlew installDebug\n\n###快速开始\n* 第0步\n把模块 `multi-image-selector` 作为你的项目依赖添加到工程中. 在项目`build.gradle` 中:\n```java\nrepositories {\n    maven { url \"https://jitpack.io\" }\n}\n\ndependencies {\n    compile 'com.github.lovetuzitong:MultiImageSelector:1.2'\n}\n```\n\n* 第1步 \n在你的 `AndroidManifest.xml` 中做如下声明:\n```xml\n<uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\n<uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n\n<application\n\n    ...\n\n    <!--Image Selector Entry-->\n    <activity\n        android:configChanges=\"orientation|screenSize\"\n        android:name=\"me.nereo.multi_image_selector.MultiImageSelectorActivity\" />\n</application>\n```\n\n* 第2步\n在你的代码中简单调用( 版本`version-1.1`之后支持 ), eg.\n\n``` java\n// Multi image selector form an Activity\nMultiImageSelector.create(Context)\n        .start(Activity, REQUEST_IMAGE);\n```\n\n详细可使用的Api.\n``` java\nMultiImageSelector.create(Context)\n        .showCamera(boolean) // 是否显示相机. 默认为显示\n        .count(int) // 最大选择图片数量, 默认为9. 只有在选择模式为多选时有效\n        .single() // 单选模式\n        .multi() // 多选模式, 默认模式;\n        .origin(ArrayList<String>) // 默认已选择图片. 只有在选择模式为多选时有效\n        .start(Activity/Fragment, REQUEST_IMAGE);\n```\n\n同样支持老版本的 `Intent` 调用方法:\n```java\nIntent intent = new Intent(mContext, MultiImageSelectorActivity.class);\n// 是否显示调用相机拍照\nintent.putExtra(MultiImageSelectorActivity.EXTRA_SHOW_CAMERA, true);\n// 最大图片选择数量\nintent.putExtra(MultiImageSelectorActivity.EXTRA_SELECT_COUNT, 9);\n// 设置模式 (支持 单选/MultiImageSelectorActivity.MODE_SINGLE 或者 多选/MultiImageSelectorActivity.MODE_MULTI)\nintent.putExtra(MultiImageSelectorActivity.EXTRA_SELECT_MODE, MultiImageSelectorActivity.MODE_MULTI);\n// 默认选择图片,回填选项(支持String ArrayList)\nintent.putStringArrayListExtra(MultiImageSelectorActivity.EXTRA_DEFAULT_SELECTED_LIST, defaultDataArray);\nstartActivityForResult(intent, REQUEST_IMAGE);\n```\n\n* 第3步\n在你的 `onActivityResult` 方法中接受结果. 例如:\n```java\n@Override\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n    if(requestCode == REQUEST_IMAGE){\n        if(resultCode == RESULT_OK){\n            // 获取返回的图片列表\n            List<String> path = data.getStringArrayListExtra(MultiImageSelectorActivity.EXTRA_RESULT);\n            // 处理你自己的逻辑 ....\n        }\n    }\n}\n```\n\n* 第4步\n没第4步了，就这样就OK啦~ :)\n\n-------------------\n\n###自定义显示\n* 自定义Activity\n```java\nclass CustomerActivity extends Activity implements MultiImageSelectorFragment.Callback{\n\t@Override\n    protected void onCreate(Bundle savedInstanceState) {\n\t\t// 你自己的逻辑...\n        Bundle bundle = new Bundle();\n        bundle.putInt(MultiImageSelectorFragment.EXTRA_SELECT_COUNT, mDefaultCount);\n        bundle.putInt(MultiImageSelectorFragment.EXTRA_SELECT_MODE, mode);\n        <bundle class=\"putBo\"></bundle>olean(MultiImageSelectorFragment.EXTRA_SHOW_CAMERA, isShow);\n        // 添加主Fragment到Activity\n        getSupportFragmentManager().beginTransaction()\n                .add(R.id.image_grid, Fragment.instantiate(this, MultiImageSelectorFragment.class.getName(), bundle))\n                .commit();\n\t}\n\t@Override\n    public void onSingleImageSelected(String path) {\n        // 当选择模式设定为 单选/MODE_SINGLE, 这个方法就会接受到Fragment返回的数据\n    }\n\n    @Override\n    public void onImageSelected(String path) {\n        // 一个图片被选择是触发，这里可以自定义的自己的Actionbar行为\n    }\n\n    @Override\n    public void onImageUnselected(String path) {\n        // 一个图片被反选是触发，这里可以自定义的自己的Actionbar行为\n    }\n\n    @Override\n    public void onCameraShot(File imageFile) {\n        // 当设置了使用摄像头，用户拍照后会返回照片文件\n    }\n}\n```\n* 具体可以参考`MultiImageSelectorActivity.java`的实现\n\n-------------------\n\n###更新日志\n\n* 2016-5-18\n    1. 新增. `JitPack` 支持\n    2. 新增. 简单的调用方式. 详细参见 `第2步`\n    3. Fixed. 修复某些情况下碰到的空指针异常.\n\n* 2016-1-19\n    1. 修复. 无法加载大小为0的图片\n    2. 新增. 拍照后通知媒体扫描,加入图库\n    3. 修复. 红米无法拍照问题\n    4. 优化. 拍照Item的显示\n\n* 2015-5-5\n    1. 修复. 某些图片无法显示. (Issue by[sd6352051](https://github.com/sd6352051), [larry](https://github.com/18611480882))\n    2. 修复. `ListPopupWindow` 无法填充父控件\n    3. 新增. 选中的遮罩效果.\n\n* 2015-4-16\n    1. 修复. 旋转设备时，程序会崩溃. (Issue by [@Leminity](https://github.com/Leminity))\n    2. 修复. 文件夹PopupListView位置错误. (Issue by [@Slock](https://github.com/Slock))\n    3. 更改. 演示程序截图.\n    4. 更改. Readme 文件.\n\n* 2015-4-9\n    1. 修复. 当设置 `EXTRA_SHOW_CAMERA` 为 `true` 时, 点击第一个Item会混乱的问题.\n    2. 新增. 支持初始化图片选择设定。\n\n\n-------------------\n\n###感谢\n\n* [square-picasso](https://github.com/square/picasso) A powerful image downloading and caching library for Android \n\n-------------------\n\n###License\n>The MIT License (MIT)\n\n>Copyright (c) 2015 Nereo\n\n>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\n>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software."
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.42578125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.1.0'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n"
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8349609375,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.9609375,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched.\nif $cygwin ; then\n    [ -n \"$JAVA_HOME\" ] && JAVA_HOME=`cygpath --unix \"$JAVA_HOME\"`\nfi\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >&-\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >&-\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "multi-image-selector",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.0390625,
          "content": "include ':app', ':multi-image-selector'\n"
        }
      ]
    }
  ]
}