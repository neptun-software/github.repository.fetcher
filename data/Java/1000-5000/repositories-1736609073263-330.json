{
  "metadata": {
    "timestamp": 1736609073263,
    "page": 330,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vert-x3/vertx-examples",
      "stars": 3551,
      "defaultBranch": "5.x",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1435546875,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 2\ntrim_trailing_whitespace = true\nend_of_line = lf\ninsert_final_newline = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.62109375,
          "content": "*.log\n.DS_Store\n.gradle\n.classpath\n.project\n.settings\n.idea\n.vertx\n.yardoc\n.yardopts\nbin\nbuild\ntarget\nout\ntest-output\nScratch.java\nScratchTest.java\ntest-results\ntest-tmp\n*.iml\n*.class\nsrc/gen\nsrc/main/groovy/io/vertx/groovy/core/**/*.groovy\nsrc/test/groovy/io/vertx/groovy/codegen/**/*.groovy\nopenshift-example/quickstart-diy/application/*.jar\nopenshift-example/vertx-cartridge/application/*.jar\nweb-examples/src/main/java/io/vertx/example/web/react/webroot/dist\nweb-examples/src/main/java/io/vertx/example/web/react/node_modules\nservice-proxy-examples/service-provider/node-client/node_modules\nopenshift2-example/**/*.jar\nnode_modules\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 5.5595703125,
          "content": "= Vert.x 5 examples\n\nThis repository contains a range of examples, so you can get up and running easily with Vert.x. 5\n\nVert.x 4 examples can be found here https://github.com/vert-x3/vertx-examples/tree/4.x\n\n== The examples\n\nThe examples demonstrate how to use all different bits of Vert.x including Vert.x core, Vert.x-Web and various other services and features.\n\nMost of the examples have been written as verticles. For more information on verticles please consult the Vert.x core manual.\n\nUsing verticles allows you to scale and run your code from the command line more easily, but if you prefer the same code in the verticles can also be run embedded.\nIt's really up to you.\nVerticles are entirely optional in Vert.x.\n\n=== Running the examples\n\n==== Running in your IDE\n\nMost of the Java examples can be run directly in your IDE.\n\nWe provide a `main()` method in most of the example classes which allows you to conveniently run them directly in your IDE.\n\nJust right-click the main method or class in your IDE and run as... application (supported by all major IDEs).\n\n=== Vert.x core examples\n\nThe link:core-examples/README.adoc[Vert.x core examples] contains a wide range of examples using just Vert.x Core.\n\n=== Service resolver examples\n\nThe link:service-resolver-examples/README.adoc[Vert.x Service Resolver] examples contain client\nusing a resolver to discover service endpoints.\n\n=== Vert.x-Web examples\n\nVert.x-Web is a toolkit for building web applications using Vert.x\n\nThe link:web-examples/README.adoc[Vert.x-Web examples] contains a wide range of examples using Vert.x-Web\n\n=== Vert.x Web Client examples\n\nVert.x Web Client that provides an easy-to-use web client for Vert.x.\n\nThe link:web-client-examples/README.adoc[Vert.x Web Client examples] contains a wide range of examples using the Vert.x Web Client\n\n=== Virtual Threads\n\nThe `virtual-threads-examples` module shows how to use Vert.x with virtual threads.\n\nSee link:virtual-threads-examples/README.adoc[Vert.x Virtual Threads 5 examples].\n\n=== Vert.x JUnit 5 examples\n\nThe `vertx-junit5` modules allow testing Vert.x asynchronous operations with JUnit 5.\n\nSee link:junit5-examples/README.adoc[Vert.x JUnit 5 examples].\n\n=== Vert.x Zipkin examples\n\nlink:zipkin-examples/README.adoc[Vert.x Zipkin examples] contains a wide range of examples using Vert.x Zipkin.\n\n=== RxJava examples\n\nVert.x for RxJava provides most of its APIs as RxJava, so you can use those if you prefer.\n\nRxJava is a great choice when you want to perform complex operations on multiple asynchronous streams of data.\n\nThe link:rxjava-2-examples/README.adoc[Vert.x RxJava 2] examples contains a wide range of examples using Vert.x for RxJava 2\nThe link:rxjava-3-examples/README.adoc[Vert.x RxJava 3] examples contains a wide range of examples using Vert.x for RxJava 3\n\n=== gRPC examples\n\nThe link:grpc-examples/README.adoc[Vert.x gRPC Examples] show how you can implement a gRPC service and invoke a gRPC service with Vert.x.\n\n=== Kotlin coroutines examples\n\nThe link:kotlin-coroutines-examples/README.md[Kotlin coroutines example] is a sample JDBC application demonstrating Kotlin coroutines in action.\n\n=== Mail examples\n\nThe link:mail-examples/README.adoc[Vert.x Mail examples]\ncontains a few examples using Vert.x Mail\n\nThe mail examples show different ways to create the mail message and send it via\ntls, ssl etc. The examples either use `localhost:25` to send a mail or use host\n`mail.example.com`. To actually run the examples you will have to change the\nmail server and the user credentials in the `MailLogin` example.\n\n=== Service Proxy Examples\n\nThe link:service-proxy-examples/README.adoc[Vert.x Service Proxy examples] contains an example of service proxy usage.\nIt depicts how a service provider can be implemented and how the published service can be consumed.\n\n=== Vert.x AMQP examples\n\nThe link:amqp-examples/README.adoc[Vert.x AMQP examples] shows how to interact with an AMQP broker.\n\n=== Spring Examples\n\nThe link:spring-examples/README.adoc[Vert.x Spring Examples] shows how vert.x application can be integrated inside a Spring\necosystem.\n\n=== Redis example\n\nThe link:redis-examples/README.adoc[Vert.x Redis Example] shows how you can interact with Redis using the vert.x Redis client.\n\n=== Mongo example\n\nThe link:mongo-examples/README.adoc[Vert.x Mongo Example] shows how you can interact with MongoDB using the vert.x Mongo client.\n\n=== SQL client example\n\nThe link:sql-client-examples/README.adoc[Vert.x SQL Client Examples] shows how you can interact PostgreSQL or MySQL Databases using the Reactive SQL client.\n\n=== Kafka example\n\nThe link:kafka-examples/README.adoc[Vert.x Kafka Examples] shows how you can interact Kafka using the vert.x Kafka\nclient.\n\n=== MQTT example\n\nThe link:mqtt-examples/README.adoc[Vert.x MQTT Examples] shows how you can write MQTT servers and clients using Vert.x MQTT.\n\n=== Service Proxy Examples\n\nThe link:service-proxy-examples/README.adoc[Vert.x Service Proxy examples] contains an example of service proxy usage.\nIt depicts how a service provider can be implemented and how the published service can be consumed.\n\n=== JPMS examples\n\nThis link:jpms-examples/README.adoc[JPMS examples] shows how a simple Java (11) modular application using Vert.x.\n\n=== Camel Bridge examples\n\nThe link:camel-bridge-examples/README.adoc[Vert.x Camel Bridge Examples] show how you can use Apache Camel routes from\nthe event bus.\n\n=== GraphQL examples\n\nThe link:web-graphql-examples/README.adoc[Vert.x Web GraphQL] examples contain simple client/server GraphQL applications built with https://vertx.io/docs/vertx-web-graphql/java/[Vert.x Web GraphQL] and the https://www.graphql-java.com/[GraphQL-Java] library.\n"
        },
        {
          "name": "amqp-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "app.json",
          "type": "blob",
          "size": 0.3359375,
          "content": "{\n    \"name\": \"Vert.x on Heroku\",\n    \"description\": \"A barebones Vert.x app, which can easily be deployed to Heroku.\",\n    \"addons\": [ \"heroku-postgresql\" ],\n    \"env\": {\n        \"MAVEN_CUSTOM_OPTS\": {\n            \"description\": \"Custom Maven options for the buildpack\",\n            \"value\": \"-DskipTests -pl heroku-example\"\n        }\n    }\n}\n"
        },
        {
          "name": "camel-bridge-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "cassandra-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "circuit-breaker-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "config-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "consul-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "core-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "grpc-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "health-check-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "http-proxy-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "jpms-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "json-schema-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "junit5-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "kafka-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "kotlin-coroutines-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "mail-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "metrics-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "mongo-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "mqtt-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "openapi-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "opentelemetry-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 2.5419921875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>io.vertx</groupId>\n\n  <artifactId>vertx-examples</artifactId>\n\n  <packaging>pom</packaging>\n\n  <version>5.0.0.CR3</version>\n\n  <properties>\n    <testcontainers.version>1.20.3</testcontainers.version>\n  </properties>\n\n  <modules>\n    <module>core-examples</module>\n    <module>zipkin-examples</module>\n    <module>web-examples</module>\n    <module>web-client-examples</module>\n    <module>rxjava-2-examples</module>\n    <module>rxjava-3-examples</module>\n    <module>metrics-examples</module>\n    <module>mail-examples</module>\n    <module>service-proxy-examples</module>\n    <module>spring-examples</module>\n    <module>redis-examples</module>\n    <module>consul-examples</module>\n    <module>mongo-examples</module>\n    <module>sql-client-examples</module>\n    <module>shell-examples</module>\n    <module>amqp-examples</module>\n    <module>camel-bridge-examples</module>\n    <module>circuit-breaker-examples</module>\n    <module>service-resolver-examples</module>\n    <module>mqtt-examples</module>\n    <module>grpc-examples</module>\n    <module>kafka-examples</module>\n    <module>kotlin-coroutines-examples</module>\n    <module>junit5-examples</module>\n    <module>cassandra-examples</module>\n    <module>web-graphql-examples</module>\n    <module>openapi-examples</module>\n    <module>jpms-examples</module>\n    <module>json-schema-examples</module>\n    <module>config-examples</module>\n    <module>health-check-examples</module>\n    <module>http-proxy-examples</module>\n    <module>opentelemetry-examples</module>\n    <module>stomp-examples</module>\n  </modules>\n\n  <build>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>3.13.0</version>\n          <configuration>\n            <release>11</release>\n            <generatedSourcesDirectory>${project.basedir}/src/main/generated</generatedSourcesDirectory>\n          </configuration>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n  </build>\n\n  <profiles>\n\n    <profile>\n      <id>virtual-threads</id>\n      <activation>\n        <jdk>[21,)</jdk>\n      </activation>\n      <modules>\n        <module>virtual-threads-examples</module>\n      </modules>\n    </profile>\n\n  </profiles>\n\n</project>\n"
        },
        {
          "name": "redis-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "rxjava-2-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "rxjava-3-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "service-proxy-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "service-resolver-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.xml",
          "type": "blob",
          "size": 10.00390625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<!--\nfile-system-maven-settings\n-->\n\n<!--\n | This is the configuration file for Maven. It can be specified at two levels:\n |\n |  1. User Level. This settings.xml file provides configuration for a single user,\n |                 and is normally provided in ${user.home}/.m2/settings.xml.\n |\n |                 NOTE: This location can be overridden with the CLI option:\n |\n |                 -s /path/to/user/settings.xml\n |\n |  2. Global Level. This settings.xml file provides configuration for all Maven\n |                 users on a machine (assuming they're all using the same Maven\n |                 installation). It's normally provided in\n |                 ${maven.home}/conf/settings.xml.\n |\n |                 NOTE: This location can be overridden with the CLI option:\n |\n |                 -gs /path/to/global/settings.xml\n |\n | The sections in this sample file are intended to give you a running start at\n | getting the most out of your Maven installation. Where appropriate, the default\n | values (values used when the setting is not specified) are provided.\n |\n |-->\n<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"\n          xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n          xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">\n  <!-- localRepository\n   | The path to the local repository maven will use to store artifacts.\n   |\n   | Default: ~/.m2/repository\n  <localRepository>/path/to/local/repo</localRepository>\n  -->\n\n  <!-- interactiveMode\n   | This will determine whether maven prompts you when it needs input. If set to false,\n   | maven will use a sensible default value, perhaps based on some other setting, for\n   | the parameter in question.\n   |\n   | Default: true\n  <interactiveMode>true</interactiveMode>\n  -->\n\n  <!-- offline\n   | Determines whether maven should attempt to connect to the network when executing a build.\n   | This will have an effect on artifact downloads, artifact deployment, and others.\n   |\n   | Default: false\n  <offline>false</offline>\n  -->\n\n  <!-- pluginGroups\n   | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e.\n   | when invoking a command line like \"mvn prefix:goal\". Maven will automatically add the group identifiers\n   | \"org.apache.maven.plugins\" and \"org.codehaus.mojo\" if these are not already contained in the list.\n   |-->\n  <pluginGroups>\n    <!-- pluginGroup\n     | Specifies a further group identifier to use for plugin lookup.\n    <pluginGroup>com.your.plugins</pluginGroup>\n    -->\n  </pluginGroups>\n\n  <!-- proxies\n   | This is a list of proxies which can be used on this machine to connect to the network.\n   | Unless otherwise specified (by system property or command-line switch), the first proxy\n   | specification in this list marked as active will be used.\n   |-->\n  <proxies>\n    <!-- proxy\n     | Specification for one proxy, to be used in connecting to the network.\n     |\n    <proxy>\n      <id>optional</id>\n      <active>true</active>\n      <protocol>http</protocol>\n      <username>proxyuser</username>\n      <password>proxypass</password>\n      <host>proxy.host.net</host>\n      <port>80</port>\n      <nonProxyHosts>local.net|some.host.com</nonProxyHosts>\n    </proxy>\n    -->\n  </proxies>\n\n  <!-- servers\n   | This is a list of authentication profiles, keyed by the server-id used within the system.\n   | Authentication profiles can be used whenever maven must make a connection to a remote server.\n   |-->\n  <servers>\n    <!-- server\n     | Specifies the authentication information to use when connecting to a particular server, identified by\n     | a unique name within the system (referred to by the 'id' attribute below).\n     |\n     | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are\n     |       used together.\n     |\n    <server>\n      <id>deploymentRepo</id>\n      <username>repouser</username>\n      <password>repopwd</password>\n    </server>\n    -->\n\n    <!-- Another sample, using keys to authenticate.\n    <server>\n      <id>siteServer</id>\n      <privateKey>/path/to/private/key</privateKey>\n      <passphrase>optional; leave empty if not used.</passphrase>\n    </server>\n    -->\n  </servers>\n\n  <!-- mirrors\n   | This is a list of mirrors to be used in downloading artifacts from remote repositories.\n   |\n   | It works like this: a POM may declare a repository to use in resolving certain artifacts.\n   | However, this repository may have problems with heavy traffic at times, so people have mirrored\n   | it to several places.\n   |\n   | That repository definition will have a unique id, so we can create a mirror reference for that\n   | repository, to be used as an alternate download site. The mirror site will be the preferred\n   | server for that repository.\n   |-->\n  <mirrors>\n    <!-- mirror\n     | Specifies a repository mirror site to use instead of a given repository. The repository that\n     | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used\n     | for inheritance and direct lookup purposes, and must be unique across the set of mirrors.\n     |\n    <mirror>\n      <id>mirrorId</id>\n      <mirrorOf>repositoryId</mirrorOf>\n      <name>Human Readable Name for this Mirror.</name>\n      <url>http://my.repository.com/repo/path</url>\n    </mirror>\n     -->\n  </mirrors>\n\n  <!-- profiles\n   | This is a list of profiles which can be activated in a variety of ways, and which can modify\n   | the build process. Profiles provided in the settings.xml are intended to provide local machine-\n   | specific paths and repository locations which allow the build to work in the local environment.\n   |\n   | For example, if you have an integration testing plugin - like cactus - that needs to know where\n   | your Tomcat instance is installed, you can provide a variable here such that the variable is\n   | dereferenced during the build process to configure the cactus plugin.\n   |\n   | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles\n   | section of this document (settings.xml) - will be discussed later. Another way essentially\n   | relies on the detection of a system property, either matching a particular value for the property,\n   | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a\n   | value of '1.4' might activate a profile when the build is executed on a JDK version of '1.4.2_07'.\n   | Finally, the list of active profiles can be specified directly from the command line.\n   |\n   | NOTE: For profiles defined in the settings.xml, you are restricted to specifying only artifact\n   |       repositories, plugin repositories, and free-form properties to be used as configuration\n   |       variables for plugins in the POM.\n   |\n   |-->\n  <profiles>\n    <!-- profile\n     | Specifies a set of introductions to the build process, to be activated using one or more of the\n     | mechanisms described above. For inheritance purposes, and to activate profiles via <activatedProfiles/>\n     | or the command line, profiles have to have an ID that is unique.\n     |\n     | An encouraged best practice for profile identification is to use a consistent naming convention\n     | for profiles, such as 'env-dev', 'env-test', 'env-production', 'user-jdcasey', 'user-brett', etc.\n     | This will make it more intuitive to understand what the set of introduced profiles is attempting\n     | to accomplish, particularly when you only have a list of profile id's for debug.\n     |\n     | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo.\n    <profile>\n      <id>jdk-1.4</id>\n\n      <activation>\n        <jdk>1.4</jdk>\n      </activation>\n\n      <repositories>\n        <repository>\n          <id>jdk14</id>\n          <name>Repository for JDK 1.4 builds</name>\n          <url>http://www.myhost.com/maven/jdk14</url>\n          <layout>default</layout>\n          <snapshotPolicy>always</snapshotPolicy>\n        </repository>\n      </repositories>\n    </profile>\n    -->\n\n    <!--\n     | Here is another profile, activated by the system property 'target-env' with a value of 'dev',\n     | which provides a specific path to the Tomcat instance. To use this, your plugin configuration\n     | might hypothetically look like:\n     |\n     | ...\n     | <plugin>\n     |   <groupId>org.myco.myplugins</groupId>\n     |   <artifactId>myplugin</artifactId>\n     |\n     |   <configuration>\n     |     <tomcatLocation>${tomcatPath}</tomcatLocation>\n     |   </configuration>\n     | </plugin>\n     | ...\n     |\n     | NOTE: If you just wanted to inject this configuration whenever someone set 'target-env' to\n     |       anything, you could just leave off the <value/> inside the activation-property.\n     |\n    <profile>\n      <id>env-dev</id>\n\n      <activation>\n        <property>\n          <name>target-env</name>\n          <value>dev</value>\n        </property>\n      </activation>\n\n      <properties>\n        <tomcatPath>/path/to/tomcat/instance</tomcatPath>\n      </properties>\n    </profile>\n    -->\n\n    <profile>\n      <id>sonatype-repository</id>\n      <repositories>\n        <repository>\n          <id>sonatype-nexus-releases</id>\n          <url>https://s01.oss.sonatype.org/content/repositories/releases</url>\n          <layout>default</layout>\n        </repository>\n        <repository>\n          <id>sonatype-nexus-snapshots</id>\n          <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>\n          <snapshots>\n            <enabled>true</enabled>\n          </snapshots>\n          <layout>default</layout>\n          <releases>\n            <enabled>false</enabled>\n          </releases>\n        </repository>\n      </repositories>\n    </profile>\n\n  </profiles>\n\n  <!-- activeProfiles\n   | List of profiles that are active for all builds.\n   |\n  <activeProfiles>\n    <activeProfile>alwaysActiveProfile</activeProfile>\n    <activeProfile>anotherAlwaysActiveProfile</activeProfile>\n  </activeProfiles>\n  -->\n  <activeProfiles>\n    <activeProfile>sonatype-repository</activeProfile>\n  </activeProfiles>\n\n</settings>\n"
        },
        {
          "name": "shell-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "spring-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "sql-client-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "stomp-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "virtual-threads-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "web-client-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "web-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "web-graphql-examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "zipkin-examples",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}