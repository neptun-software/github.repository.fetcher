{
  "metadata": {
    "timestamp": 1736609058974,
    "page": 309,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "JCTools/JCTools",
      "stars": 3607,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1953125,
          "content": "*.class\n\n# Package Files #\n*.jar\n*.war\n*.ear\n/jctools-core/target\n/jctools-benchmarks/target\n/jctools-experimental/target/\n/.project\n*.iml\n.idea\n\n\n/.settings\n\ntarget/MANIFEST.MF\n/settings.xml\ntarget/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.2314453125,
          "content": "os:\n  - linux\nlanguage: java\njdk:\n  - openjdk8\n  - openjdk11\n  - openjdk17\narch:\n  - amd64\n#  - arm64 <-- this is not working very well\nbranches:\n  only:\n    - master\n\nafter_success:\n- mvn jacoco:report coveralls:report -pl jctools-core\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.0546875,
          "content": "[![Total alerts](https://img.shields.io/lgtm/alerts/g/JCTools/JCTools.svg?logo=lgtm&logoWidth=18)](https://lgtm.com/projects/g/JCTools/JCTools/alerts/)\n[![Coverage Status](https://coveralls.io/repos/github/JCTools/JCTools/badge.svg?branch=master)](https://coveralls.io/github/JCTools/JCTools?branch=master)\n[![Build Status](https://app.travis-ci.com/JCTools/JCTools.svg?branch=master)](https://app.travis-ci.com/JCTools/JCTools)\n\nJCTools\n==========\nJava Concurrency Tools for the JVM. This project aims to offer some concurrent data structures currently missing from\nthe JDK:\n\n- SPSC/MPSC/SPMC/MPMC variations for concurrent queues:\n    * SPSC - Single Producer Single Consumer (Wait Free, bounded and unbounded)\n    * MPSC - Multi Producer Single Consumer (Lock less, bounded and unbounded)\n    * SPMC - Single Producer Multi Consumer (Lock less, bounded)\n    * MPMC - Multi Producer Multi Consumer (Lock less, bounded)\n\n- SPSC/MPSC linked array queues (bounded and unbounded) offer a balance between performance, allocation and footprint\n- MPSC/MPMC XAdd based, unbounded linked array queues offer reduced contention costs for producers (using XADD instead\n  of a CAS loop), and pooled queue chunks for reduced allocation.\n- An expanded queue interface (MessagePassingQueue):\n    * relaxedOffer/Peek/Poll: trade off conflated guarantee on full/empty queue state with improved performance.\n    * drain/fill: batch read and write methods for increased throughput and reduced contention\n\nMany queues are available in both `Unsafe` (default, uses `sun.mic.Unsafe`) and `Atomic` (relying\non `AtomicFieldUpdater`) variations, as well as `Unpadded` (lower footprint by removing false sharing avoiding field\npadding).\n\nThere's more to come and contributions/suggestions are most welcome. JCTools has enjoyed support from the community\nand contributions in the form of issues/tests/documentation/code have helped it grow.\nJCTools offers excellent performance at a reasonable price (FREE! under the Apache 2.0 License). It's stable and in\nuse by such distinguished frameworks as Netty, RxJava and others. JCTools is also used by commercial products to great\nresult.\n\nGet it NOW!\n==========\nAdd the latest version as a dependency using Maven:\n\n```xml\n\n<dependency>\n    <groupId>org.jctools</groupId>\n    <artifactId>jctools-core</artifactId>\n    <version>4.0.3</version>\n</dependency>\n```\n\nOr use the awesome, built from source, <https://jitpack.io/> version, you'll need to add the Jitpack repository:\n\n```xml\n\n<repository>\n    <id>jitpack.io</id>\n    <url>https://jitpack.io</url>\n</repository>\n```\n\nAnd setup the following dependency:\n\n```xml\n\n<dependency>\n    <groupId>com.github.JCTools.JCTools</groupId>\n    <artifactId>jctools-core</artifactId>\n    <version>v4.0.3</version>\n</dependency>\n```\n\nYou can also depend on latest snapshot from this repository (live on the edge) by setting the version to \n'4.0.5-SNAPSHOT'.\n\n\nBuild it from source\n==========\nJCTools is maven built and requires an existing Maven installation and JDK8 (only for building, runtime is 1.6\ncompliant).\n\nWith 'MAVEN_HOME/bin' on the path and JDK8 set to your 'JAVA_HOME' you should be able to run \"mvn install\" from this\ndirectory.\n\n\nBut I have a zero-dependency/single-jar project\n==========\nWhile you are free to copy & extend JCTools, we would much prefer it if you have a versioned dependency on JCTools to\nenable better support, upgrade paths and discussion. The shade plugin for Maven/Gradle is the preferred way to get\nJCTools fused with your library. Examples are available in\nthe [ShadeJCToolsSamples](https://github.com/JCTools/ShadeJCToolsSamples) project.\n\n\nBenchmarks\n==========\nJCTools is benchmarked using both JMH benchmarks and handrolled harnesses. The benchmarks and related instructions can\nbe\nfound in the jctools-benchmarks module [README](jctools-benchmarks/README.md). Go wild and please let us know how it did\non your hardware.\n\nConcurrency Testing\n===========\n\n```\nmvn package\ncd jctools-concurrency-test\njava -jar target/concurrency-test.jar -v\n```\n\nCome up to the lab...\n==========\nExperimental work is available under the jctools-experimental module. Most of the stuff is developed with an eye to\neventually porting it to the core where it will be stabilized and released, but some implementations are kept purely for\nreference and some may never graduate. Beware the Jabberwock my child.\n\nHave Questions? Suggestions?\n==========\nThe best way to discuss JCTools is on the GitHub issues system. Any question is good, and GitHub provides a better\nplatform for knowledge sharing than twitter/mailing-list/gitter (or at least that's what we think).\n\nThanks!!!\n=====\nWe have kindly been awarded [IntelliJ IDEA](https://www.jetbrains.com/idea/) licences\nby [JetBrains](https://www.jetbrains.com/) to aid in the development of JCTools. It's a great suite of tools which has\nbenefited the developers and ultimately the community.\n\nIt's an awesome and inspiring company, [**BUY THEIR PRODUCTS\nNOW!!!**](https://www.jetbrains.com/store/#edition=commercial)\n\nJCTools has enjoyed a steady stream of PRs, suggestions and user feedback. It's a community! Thank you all for getting\ninvolved!\n"
        },
        {
          "name": "RELEASE-NOTES.md",
          "type": "blob",
          "size": 9.5146484375,
          "content": "4.0.1\n=========\nThis is a major release, following the removal of the `QueueFactory`, `AtomicQueueFactory` and `org.jctools.queues.spec`\npackage(deprecated since 3.0). These classes are still used for testing, but are not part of the release artifacts\nanymore.\n\nNew unpadded queue variants are also included in this release.\n\nFurther changes included:\n- Fix table-size long math on very large tables\n- #355 Adher to size semantic for queue emptiness for MpscLinkedArrayQueue variants\n\n- 3.3.0\n=========\nThis is a minor release with new features and several bug fixes.\n\nBug fixes:\n- #334 NBHMLong iterators do not remove NO_KEY (thanks @matteobertozzi)\n- #335 NBHM/Long/Identity iterators only removes keys if values have not changed. Now follow JDK convention.\n- #336 MpscBlockingConsumerArrayQueue: fix race writing to blocked field (thanks @philipa)\n- #339 `fill` wakeup call can spin forever(or until a consumer is blocked again) on MpscBlockingConsumerArrayQueue\n\nNew features:\n- #340 MpscBlockingConsumerArrayQueue provide a new blocking drain variant (thanks @franz1981)\n\n3.2.0\n=========\nThis is a minor release with new features and several bug fixes.\n\nBug fixes:\n- #319 Relying on test cases provided by @alefedor (#328) we apply the fix used for #205 to `NonBlockingHashMapLong` and `NonBlockingIdentityHashMap` to provide `getAndSet` like semantics for put and remove.\n- #330 Fix a `NonBlockingIdentityHashMap` `replace` bug. During this fix some further work was done to bring the code closer in line to the current state of `NonBlockingHashMap`\n\nEnhancements:\n- #326 Xadd queues consumers can help producers\n- #323 Update to latest JCStress (thanks @shipilev )\n- Further build and doc improvements (thanks @kay @Rjbeckwith55 @pveentjer )\n \nNew features:\n- After long incubation and following a user request (see #321), we move counters (introduced in #93 by @qwwdfsad) into core!\n- Merging some experimental utils and a #264 we add a `PaddedAtomicLong`, thanks @pveentjer \n\n3.1.0\n=========\nThis is a minor release with one new feature and several bug fixes.\n\nBug fixes:\n- Use byte fields for padding (avoid upcoming false sharing problem in JDK 15+ where field ordering has changed)\n- #289 Add Automatic-Module-Name header to MANIFEST.MF (thanks @vy)\n- #292 Fix inconsistent isEmpty/poll/peek/offer dynamics for SpscLinkedQueue : 5fd5772#diff-b17b0df9e15e7821411b77042876eb02 (thanks @hl845740757 and @franz1981)\n- Fixed potential for negative queue size for indexed queues and similar issue with isEmpty : 5fd5772#diff-f32b0a7583f04b29affe3c5f0486df4f (thanks @hl845740757 and @franz1981)\n- #296 Fix peek/relaxedPeek race with poll/offer in MC queues (thanks @hl845740757 and @franz1981)\n- #297 Fix inconsistent size of FF based queues causing potential size() > capacity() (thanks @hl845740757)\n- #316 Fix MpscBlockingConsumerArrayQueue::poll(TimeUnit,timeout) (thanks @philipa , @njhill and @franz1981)\n- #310 Fix MpmcUnboundedXaddArrayQueue::peek/relaxedPeek can load \"future\" elements (thanks @franz1981)\n\nNew feature:\n- #314 MpscBlockingConsumerArrayQueue::offerIfBelowThreshold is added (thanks @philipa)\n\n3.0.0\n=========\nThis is a major version as there are some minor API breaking changes which may effect users. Please apply with care and provide feedback. The breaking changes:\n\nRemoved MpscLinkedQueue7 and MpscLinkedQueue8 and consolidate into parent. This removes the need for the builder method on MpscLinkedQueue.\nDeprecated QueueFactory and spec package classes. These are not used by any users AFAICT and are only used for testing internally.\nRemoved some internal classes and reduced visibility of internal utilities where practical. The @InternalAPI tagging annotation is also used more extensively to discourage dependency.\nWe also have some great new queues for y'all to try:\n- #226: XADD unbounded mpsc/mpmc queue: highly scalable linked array queues\n (from @franz1981)\n- New blocking consumer MPSC (with contributions and bug fixes from @njhill)\n\nBug fixes:\n- #209: On Arm7, non-volatile long can have unaligned address leading to error\n- #216: Size of SpscGrowableArrayQueue can exceeds max capacity (from @franz1981 PR #218)\n- #241: Protect the producer index in case of OutOfMemoryError (from @franz1981)\n- #244: Long NBHM AssertionError when replacing missing key (thanks @fvlad for reporting and @cliffclick for assistance and review)\n- Fix argument checks on fill/drain methods\n- Fix LGTM warning, potential int overflow bug b467d29, 15d944c, 6367951\n\nImprovements:\n- Don't mark generated linked atomic queues as final (from @kay 9db418c)\n- #211: Implement batching methods on MpmcArrayQueue (from @franz1981)\n- #228: Iterator for MpscArrayQueue and MpscUnboundedArrayQueue (PR #229 from @srdo)\n- Iterator support also available for the *ArrayQueue classes\n- #208: MpscLinkedAtomicQueue can be made not final\n- #237: Add scale to exception message to help debug netty/netty#8916 (from @johnou)\n\nMany other improvements to testing, javadoc, formatting were made with some contributions from @Hearen @JanStureNielsen @nastra thanks!\n\n2.1.2\n=========\n- PR #202 : Fix NBHM bug in remove/replace where ref equality was used to report val match instead of equals (thanks @henri-tremblay)\n- PR #206 : Improved javadoc (thanks @franz1981)\n- Issue #205 : NBHM remove/put getAndSet semantics issue (thanks @fvlad for reporting and @cliffclick for review)\n- Issue #208 : no need for queues to be final\n\nFurther improvements to testing and code style.\n\nNot included in the release, but very much appreciated, are contributions from @franz1981 and @qwwdfsad to the experimental part of JCTools, which may one day get merged into core, and @maseev contribution to integrate build with Coveralls.io.\n\n\n2.1.1\n=========\n- PR #193 : Fix API break on release in MpscLinkedAtomicQueue\n- Issue #194 : Fix MpscCompoundQueue::relaxedOffer bug\n- Issue #196 : Fix MpscLinkedArray::fill bug\n- Issue #197 : Fix MpscChunkedQueue:fill bug\n\n2.1.0\n==========\nBug fixes:\n- PR #188 JvmInfo called from Atomic queues invokes Unsafe methods (thanks @kay )\n\nFeatures:\n- PR #187 + #186 + #185  Atomic queues are now generated from source (thanks @kay )\n- PR #184 + #190 MpscLinked supports a remove method (thanks @Scottmitch )\n- PR #183   Make SpscLinkedArray queues support the MPQ interface (thanks @franz1981 )\n- PR #181 Testing was expanded for NBHM, and minor issue fixed (thanks @qwwdfsad )\n\nSome further improvements to formatting, javadoc and testing and general tending to the garden by @nitsanw\n\n2.0.2\n==========\n- PR #168 from @maseev - unifying the approach to queue size range checks and exceptions\n- PR #173 #174 #176 from @neomatrix369 - porting the SPSC linked array queues to non-unsafe versions\n- PR #172 #175 from @chbatey - porting the MPSC linked array queues to non-unsafe versions\n- Fix #179 - bug in MpmcArrayQueue and MpmcAtomicArrayQueue leading to false reporting of queue full on offer which races with a poll, reported by Sharath Gururaj (I think that is @flipsha)\n- JCStress testing support added by @victorparmar \n- Code tidy up by @avalanche123 \n- Experimental support for MPSC proxy channels by @kay \n\n2.0.1\n==========\nBUG: #143 - toString() didn't work for many of the queues because the default implemetation relied on iterators.\nBUG: #151 fixed by @cliffclick and helped by @vyazelenko (PR #152) - bringing in some fixes and improvements to NHBM\n\n2.0\n==========\nPR #94 : The NonBlockingHashMap by @cliffclick is now released as part of JCTools core. Also thanks to @pcholakov for help is converting and sanity testing some of the benchmark code (PR #108).\nPR #129 : MPSC linked array queues code is tidied up and split into 3 implementations. The old Chunked is here, but constructor has changed. Growable is split from chunked and Unbounded is added.\nBug #135 : Bug fix for the growable MPSC case.\nPR #127 : Releasing JCTools as an OSGi bundle, thanks @CodingFabian \n\n1.2.1\n==========\n- PERF: Fix GC nepotism issue in SpscUnboundedArrayQueue (Issue #95, PR #96, courtesy of @akarnokd)\n- PERF: Unified base implementation to SpscUnbounded/Growable (Issue #103, PR #107, courtesy of @pcholakov)\n- BUG: IllegalStateException during MpscChunkedArrayQueue.offer(....) (Issue #115)\n- BUG: new MpscChunkedArrayQueue(1024, Integer.MAX_VALUE, ...) throws confusing exception (Issue #116)\n- BUG: SpscGrowable/SpscUnbounded/SpscAtomic/SpscUnboundedAtomic !isEmpty() but poll() == null (Issue #119)\n- BUG: MpscArrayQueue.offerIfBelowTheshold is broken: offering is still possible when queue is full (Issue #120)\n\n\n1.2\n==========\n- Added MpscChunkedArrayQueue an MPSC bounded queue aiming to replace current usage of MpscLinkedQueue in usecases where low footprint AND low GC churn are desirable. This is achieved through usage of smaller buffers which are then linked to either bigger buffers or same sized buffers as queue size demands.\n- Fixed a GC nepotism issue in linked queues. This is not a bug but an observable generational GC side effect causing false promotion of linked nodes because of a reference from a promoted dead node. See discussion here: https://github.com/akka/akka/issues/19216\n- Fixed an inconsistently handled exception on offering null elements. This was a bug in MpmcArrayQueue.\n- Formatting and refactoring\n\nContributions made by:\n - https://github.com/guidomedina\n - https://github.com/kay\n\n\n1.1\n==========\n- New API offered under MessagePassingQueue\n- New Queues\n- Minor Bug fixes\n\n\n1.0\n==========\nJCTools offers java.util.Queue implementations for concurrent use. The queues\nsupport a limited subset of the interface focusing on message passing rather\nthan collection like semantics. In particular the queues do not support:\n- The iterator() method\n- remove()\n- contains()\n\nEnjoy!\n"
        },
        {
          "name": "ides",
          "type": "tree",
          "content": null
        },
        {
          "name": "jctools-benchmarks",
          "type": "tree",
          "content": null
        },
        {
          "name": "jctools-build",
          "type": "tree",
          "content": null
        },
        {
          "name": "jctools-channels",
          "type": "tree",
          "content": null
        },
        {
          "name": "jctools-concurrency-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "jctools-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "jctools-experimental",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 10.44140625,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>org.jctools</groupId>\n    <artifactId>jctools-parent</artifactId>\n    <packaging>pom</packaging>\n    <version>4.0.5-SNAPSHOT</version>\n    <name>JCTools Parent</name>\n    <organization>\n        <url>https://github.com/JCTools</url>\n    </organization>\n    <inceptionYear>2013</inceptionYear>\n\n    <licenses>\n        <license>\n            <name>Apache License, Version 2.0</name>\n            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n            <distribution>repo</distribution>\n        </license>\n    </licenses>\n\n    <scm>\n        <url>https://github.com/JCTools/JCTools</url>\n        <connection>scm:git:https://github.com/JCTools/JCTools</connection>\n    </scm>\n\n    <developers>\n        <developer>\n            <url>https://github.com/nitsanw</url>\n        </developer>\n        <developer>\n            <url>https://github.com/mjpt777</url>\n        </developer>\n        <developer>\n            <url>https://github.com/RichardWarburton</url>\n        </developer>\n        <developer>\n            <url>https://github.com/kay</url>\n        </developer>\n        <developer>\n            <url>https://github.com/franz1981</url>\n        </developer>\n    </developers>\n\n    <prerequisites>\n        <maven>3.5.0</maven>\n    </prerequisites>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <java.version>1.6</java.version>\n        <java.test.version>1.8</java.test.version>\n\n        <maven.compiler.source>${java.version}</maven.compiler.source>\n        <maven.compiler.target>${java.version}</maven.compiler.target>\n        <maven.compiler.testSource>${java.test.version}</maven.compiler.testSource>\n        <maven.compiler.testTarget>${java.test.version}</maven.compiler.testTarget>\n\n        <bnd.version>6.3.1</bnd.version>\n        <bundle-plugin.version>5.1.8</bundle-plugin.version>\n        <osgi.version>8.0.0</osgi.version>\n\n        <hamcrest.version>1.3</hamcrest.version>\n        <junit.version>4.13.2</junit.version>\n        <guava-testlib.version>31.1-jre</guava-testlib.version>\n        <lincheck.version>2.14.1</lincheck.version>\n    </properties>\n\n    <modules>\n        <module>jctools-core</module>\n        <module>jctools-experimental</module>\n        <module>jctools-channels</module>\n        <module>jctools-benchmarks</module>\n        <module>jctools-concurrency-test</module>\n        <module>jctools-build</module>\n    </modules>\n\n    <dependencyManagement>\n        <dependencies>\n            <dependency>\n                <groupId>org.osgi</groupId>\n                <artifactId>osgi.annotation</artifactId>\n                <version>${osgi.version}</version>\n            </dependency>\n        </dependencies>\n    </dependencyManagement>\n\n    <build>\n        <pluginManagement>\n        <!-- Define versions for children -->\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-clean-plugin</artifactId>\n                <version>3.2.0</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-deploy-plugin</artifactId>\n                <version>3.0.0-M2</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-install-plugin</artifactId>\n                <version>3.0.0-M1</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <version>3.2.2</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <version>3.4.0</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-resources-plugin</artifactId>\n                <version>3.2.0</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-shade-plugin</artifactId>\n                <version>3.3.0</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-site-plugin</artifactId>\n                <version>4.0.0-M1</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-source-plugin</artifactId>\n                <version>3.2.1</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <version>3.0.0-M7</version>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-compiler-plugin</artifactId>\n                <version>3.10.1</version>\n                <configuration>\n                    <source>${maven.compiler.source}</source>\n                    <target>${maven.compiler.target}</target>\n                    <testSource>${maven.compiler.testSource}</testSource>\n                    <testTarget>${maven.compiler.testTarget}</testTarget>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n                <version>3.0.0</version>\n                <executions>\n                    <execution>\n                        <id>enforce-java</id>\n                        <goals>\n                            <goal>enforce</goal>\n                        </goals>\n                        <configuration>\n                            <rules>\n                                <requireJavaVersion>\n                                    <version>${java.test.version}</version>\n                                </requireJavaVersion>\n                                <requireMavenVersion>\n                                    <version>3.5.0</version>\n                                </requireMavenVersion>\n                            </rules>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.felix</groupId>\n                <artifactId>maven-bundle-plugin</artifactId>\n                <version>${bundle-plugin.version}</version>\n                <dependencies>\n                    <!-- Same version as `biz.aQute.bnd.annotation` -->\n                    <dependency>\n                        <groupId>biz.aQute.bnd</groupId>\n                        <artifactId>biz.aQute.bndlib</artifactId>\n                        <version>${bnd.version}</version>\n                    </dependency>\n                </dependencies>\n                <configuration>\n                    <instructions>\n                        <!-- Adds a module descriptor named as the OSGI bundle -->\n                        <_jpms-module-info>$[maven-symbolicname];access=0</_jpms-module-info>\n                        <!-- Exports only explicitly annotated packages -->\n                        <_exportcontents>$[packages;ANNOTATED;org.osgi.annotation.bundle.Export]</_exportcontents>\n                    </instructions>\n                </configuration>\n            </plugin>\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>exec-maven-plugin</artifactId>\n                <version>3.0.0</version>\n            </plugin>\n            <plugin>\n                <groupId>org.eluder.coveralls</groupId>\n                <artifactId>coveralls-maven-plugin</artifactId>\n                <version>4.3.0</version>\n            </plugin>\n            <plugin>\n                <groupId>org.jacoco</groupId>\n                <artifactId>jacoco-maven-plugin</artifactId>\n                <version>0.8.7</version>\n            </plugin>\n        </plugins>\n        </pluginManagement>\n        <plugins>\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-enforcer-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n    <profiles>\n        <profile>\n            <id>surefire-java8</id>\n            <activation>\n                <jdk>1.8</jdk>\n            </activation>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-surefire-plugin</artifactId>\n                        <configuration>\n                            <argLine></argLine>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>surefire-java9-and-over</id>\n            <activation>\n                <jdk>[9,)</jdk>\n            </activation>\n            <properties>\n                <!-- Releases are still done from a JDK8, but this makes life easier-->\n                <java.version>1.8</java.version>\n            </properties>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-surefire-plugin</artifactId>\n                        <configuration>\n                            <argLine>\n                                --add-opens java.base/jdk.internal.misc=ALL-UNNAMED\n                                --add-exports java.base/jdk.internal.util=ALL-UNNAMED\n                            </argLine>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <!-- For use by eclipse users using the m2 plugin that gets the source\n                and target versions mixed up. With this you can go to right click on the projects,\n                select \"Maven\" and \"Select Profiles\" then check \"eclipse-dev\". -->\n            <id>eclipse-dev</id>\n            <properties>\n                <java.version>${java.test.version}</java.version>\n            </properties>\n        </profile>\n    </profiles>\n</project>\n"
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}