{
  "metadata": {
    "timestamp": 1736708162191,
    "page": 611,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "mzule/ActivityRouter",
      "stars": 2808,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.064453125,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea\n.DS_Store\n/build\n/captures\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README-en.md",
          "type": "blob",
          "size": 5.423828125,
          "content": "# ActivityRouter\n\nOpen activities via url like gifs below.\n\n![image](https://raw.githubusercontent.com/mzule/ActivityRouter/master/gif/router.gif)\n\n![image](https://raw.githubusercontent.com/mzule/ActivityRouter/master/gif/http.gif)\n\n## Usage\n\nRoot project build.gradle\n\n``` groovy\nbuildscript {\n  dependencies {\n    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'\n  }\n}\n```\n\napp project build.gradle\n\n``` groovy\napply plugin: 'android-apt'\n\ndependencies {\n\tcompile 'com.github.mzule.activityrouter:activityrouter:1.2.2'\n\tapt 'com.github.mzule.activityrouter:compiler:1.1.7'\n}\n```\n\nAndroidManifest.xml\n\n``` xml\n<activity\n    android:name=\"com.github.mzule.activityrouter.router.RouterActivity\"\n    android:theme=\"@android:style/Theme.NoDisplay\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.DEFAULT\" />\n        <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data android:scheme=\"mzule\" /><!--change to your scheme-->\n    </intent-filter>\n</activity>\n```\n\nAnnotate activities with `@Router`.\n\n``` java\n@Router(\"main\")\npublic class MainActivity extends Activity {\n\t...\n}\n```\n\nNow, you can open `MainActivity` with `mzule://main`.\n\n## Advance Usage\n\n### 1. Map multiple urls to a activity\n\n``` java\n@Router({\"main\", \"root\"})\n```\n\n`mzule://main` and `mzule://root` can both open `MainActivity`\n\n\n### 2. Pass parameters like web url\n\n``` java\n@Router(\"main\")\n@Router(\"main/:color\")\n@Router(\"user/:userId/:topicId/:commentId\")\n@Router(\"user/:userId/topic/:topicId/comment/:commentId\")\n```\nParamters after ? and path paramters are both supported here. like, `mzule://main?id=345&name=isee` and `mzule://user/76546/876/9999`. You can later get paramter with `getIntent().getStringExtra(\"name\")`. All paramters are `String`s by default. You can change it of course, see next section.\n\n\n### 3. Set parameters type\n\n``` java\n@Router(value = \"main/:color\", intParams = \"color\")\n```\nAbove configured that `color` paramter is `int` type. All the parameters which is not `String` should be declared in coresponding type, such as `int`, `long`, `short`, `byte`, `char`, `float`, `double`, `boolean`. You can later get paramter with `getIntent().getIntExtra(\"name\")` or other getXxExtra.\n\n### 4. Router callbacks\n\n``` java\npublic class App extends Application implements RouterCallbackProvider {\n    @Override\n    public RouterCallback provideRouterCallback() {\n        return new SimpleRouterCallback() {\n            @Override\n            public boolean beforeOpen(Context context, Uri uri) {\n                context.startActivity(new Intent(context, LaunchActivity.class));\n                // return true for interception.\n                return false;\n            }\n\n            @Override\n            public void afterOpen(Context context, Uri uri) {\n            }\n\n            @Override\n            public void notFound(Context context, Uri uri) {\n                context.startActivity(new Intent(context, NotFoundActivity.class));\n            }\n            \n            @Override\n            public void error(Context context, Uri uri, Throwable e) {\n                context.startActivity(ErrorStackActivity.makeIntent(context, uri, e));\n            }\n        };\n    }\n}\n```\nCallback can handle `beforeOpen`, `afterOpen`, and `notFound(404)` event. You should let your Application class implements `RouterCallbackProvider` to provide a callback if you need.\n\n### 5. Http and https\n\n``` java\n@Router({\"http://mzule.com/main\", \"main\"})\n```\n\nAndroidManifest.xml\n\n``` xml\n<activity\n    android:name=\"com.github.mzule.activityrouter.router.RouterActivity\"\n    android:theme=\"@android:style/Theme.NoDisplay\">\n    ...\n    <intent-filter>\n    \t<action android:name=\"android.intent.action.VIEW\" />\n    \t<category android:name=\"android.intent.category.DEFAULT\" />\n    \t<category android:name=\"android.intent.category.BROWSABLE\" />\n    \t<data android:scheme=\"http\" android:host=\"mzule.com\" />\n\t</intent-filter>\n</activity>\n```\n\nWith above config, you can visite `MainActivity` with `http://mzule.com/main` or normally `mzule://main`. As you can see, `http(s)` router config must be fill in  with full path url.\n\n### 6. Paramters name mapping\n\n``` java\n@Router(value = \"item\", longParams = \"id\", transfer = \"id=>itemId\")\n```\nIn normal case, parameter `A` will put into bundle-extra with name `A`. If you want to change its name. You can set value for `transfer` with `A=>B` means from `A` to `B`.\n\n### 7. In-app usage\n\n``` java\nRouters.open(context, \"mzule://main/0xff878798\")\nRouters.open(context, Uri.parse(\"mzule://main/0xff878798\"))\nRouters.openForResult(activity, \"mzule://main/0xff878798\", REQUEST_CODE);\nRouters.openForResult(activity, Uri.parse(\"mzule://main/0xff878798\"), REQUEST_CODE);\n// create Intent from url\nIntent intent = Routers.resolve(context, \"mzule://main/0xff878798\")\n```\nOpen activities in app self.\n\n### 8. Raw url support\n\n``` java\ngetIntent().getStringExtra(Routers.KEY_RAW_URL);\n```\n\n### 9. Invoke a method via url\n\n``` java\n@Router(\"logout\")\npublic static void logout(Context context, Bundle bundle) {\n}\n```\n\nDefine a public static method with arguments type Context and Bundle. Annotated it with @Router to define its url.\n\n## Proguard\n\n``` java\n-keep class com.github.mzule.activityrouter.router.** { *; }\n```\n\n## License\n\nApache License  2.0\n\n## Contact me\n\nFeel free to contact me if you have any trouble on this project.\n\n1. Create a new issue\n1. Send mail to me, \"mzule\".concat(\"4j\").concat(\"@\").concat(\"gmail.com\")\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.4453125,
          "content": "# ActivityRouter\n\n### [English README.md here](https://github.com/mzule/ActivityRouter/blob/master/README-en.md)\n\n## 功能\n\n支持给`Activity`定义 URL，这样可以通过 URL 跳转到`Activity`，支持在浏览器以及 app 中跳入。\n\n![image](https://raw.githubusercontent.com/mzule/ActivityRouter/master/gif/router.gif)\n\n![image](https://raw.githubusercontent.com/mzule/ActivityRouter/master/gif/http.gif)\n\n## 集成\n\n### 1. 添加引用\n\n请根据项目的历史情况选择合适的集成方式\n\n#### 1.1 annotaitonProcessor 方式\n\n``` groovy\ndependencies {\n    compile 'com.github.mzule.activityrouter:activityrouter:1.2.2'\n    annotationProcessor 'com.github.mzule.activityrouter:compiler:1.1.7'\n}\n```\n\n#### 1.2 apt 方式\n根目录 build.gradle\n\n``` groovy\nbuildscript {\n  dependencies {\n    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'\n  }\n}\n```\n\n项目 app/build.gradle\n``` groovy\napply plugin: 'android-apt'\n\ndependencies {\n    compile 'com.github.mzule.activityrouter:activityrouter:1.2.2'\n    apt 'com.github.mzule.activityrouter:compiler:1.1.7'\n}\n\n```\n### 2. 集成\n\n在`AndroidManifest.xml`配置\n\n``` xml\n<activity\n    android:name=\"com.github.mzule.activityrouter.router.RouterActivity\"\n    android:theme=\"@android:style/Theme.NoDisplay\">\n    <intent-filter>\n        <action android:name=\"android.intent.action.VIEW\" />\n        <category android:name=\"android.intent.category.DEFAULT\" />\n        <category android:name=\"android.intent.category.BROWSABLE\" />\n        <data android:scheme=\"mzule\" /><!--改成自己的scheme-->\n    </intent-filter>\n</activity>\n```\n在需要配置的`Activity`上添加注解\n\n``` java\n@Router(\"main\")\npublic class MainActivity extends Activity {\n\t...\n}\n```\n这样就可以通过`mzule://main`来打开`MainActivity`了。\n\n## 进阶\n\n### 支持配置多个地址\n\n``` java\n@Router({\"main\", \"root\"})\n```\n\n`mzule://main`和`mzule://root`都可以访问到同一个`Activity`\n\n\n### 支持获取 url 中`?`传递的参数\n\n``` java\n@Router(\"main\")\n```\n上面的配置，可以通过`mzule://main?color=0xff878798&name=you+are+best`来传递参数，在`MainActivity#onCreate`中通过`getIntent().getStringExtra(\"name\")`的方式来获取参数，所有的参数默认为`String`类型，但是可以通过配置指定参数类型，后面会介绍。\n\n### 支持在 path 中定义参数\n\n``` java\n@Router(\"main/:color\")\n```\n\n通过`:color`的方式定义参数，参数名为`color`，访问`mzule://main/0xff878798`，可以在`MainActivity#onCreate`通过`getIntent().getStringExtra(\"color\")`获取到 color 的值`0xff878798`\n\n### 支持多级 path 参数\n\n``` java\n@Router(\"user/:userId/:topicId/:commentId\")\n\n@Router(\"user/:userId/topic/:topicId/comment/:commentId\")\n```\n\n上面两种方式都是被支持的，分别定义了三个参数，`userId`,`topicId`,`commentId`\n\n\n### 支持指定参数类型\n\n``` java\n@Router(value = \"main/:color\", intParams = \"color\")\n```\n这样指定了参数`color`的类型为`int`，在`MainActivity#onCreate`获取 color 可以通过`getIntent().getIntExtra(\"color\", 0)`来获取。支持的参数类型有`int`,`long`,`short`,`byte`,`char`,`float`,`double`,`boolean`，默认不指定则为`String`类型。\n\n### 支持优先适配\n\n``` java\n@Router(\"user/:userId\")\npublic class UserActivity extends Activity {\n\t...\n}\n\n@Router(\"user/statistics\")\npublic class UserStatisticsActivity extends Activity {\n\t...\n}\n```\n假设有上面两个配置，\n\n不支持优先适配的情况下，`mzule://user/statistics`可能会适配到`@Router(\"user/:userId\")`，并且`userId=statistics`\n\n支持优先适配，意味着，`mzule://user/statistics`会直接适配到`@Router(\"user/statistics\")`，不会适配前一个`@Router(\"user/:userId\")`\n\n### 支持 Callback\n\n``` java\npublic class App extends Application implements RouterCallbackProvider {\n    @Override\n    public RouterCallback provideRouterCallback() {\n        return new SimpleRouterCallback() {\n            @Override\n            public boolean beforeOpen(Context context, Uri uri) {\n                context.startActivity(new Intent(context, LaunchActivity.class));\n                // 是否拦截，true 拦截，false 不拦截\n                return false;\n            }\n\n            @Override\n            public void afterOpen(Context context, Uri uri) {\n            }\n\n            @Override\n            public void notFound(Context context, Uri uri) {\n                context.startActivity(new Intent(context, NotFoundActivity.class));\n            }\n            \n            @Override\n            public void error(Context context, Uri uri, Throwable e) {\n                context.startActivity(ErrorStackActivity.makeIntent(context, uri, e));\n            }\n        };\n    }\n}\n```\n在`Application`中实现`RouterCallbackProvider`接口，通过`provideRouterCallback()`方法提供`RouterCallback`，具体 API 如上。\n\n### 支持 Http(s) 协议\n\n``` java\n@Router({\"http://mzule.com/main\", \"main\"})\n```\n\nAndroidManifest.xml\n\n``` xml\n<activity\n    android:name=\"com.github.mzule.activityrouter.router.RouterActivity\"\n    android:theme=\"@android:style/Theme.NoDisplay\">\n    ...\n    <intent-filter>\n    \t<action android:name=\"android.intent.action.VIEW\" />\n    \t<category android:name=\"android.intent.category.DEFAULT\" />\n    \t<category android:name=\"android.intent.category.BROWSABLE\" />\n    \t<data android:scheme=\"http\" android:host=\"mzule.com\" />\n\t</intent-filter>\n</activity>\n```\n\n这样，`http://mzule.com/main`和`mzule://main`都可以映射到同一个 Activity，值得注意的是，在`@Router`中声明`http`协议地址时，需要写全称。\n\n### 支持参数 transfer\n\n``` java\n@Router(value = \"item\", longParams = \"id\", transfer = \"id=>itemId\")\n```\n这里通过`transfer = \"id=>itemId\"`的方式，设定了 url 中名称为`id`的参数会被改名成`itemId`放到参数`Bundle`中，类型为`long`. 值得注意的是，这里，通过`longParams = \"id\"`或者`longParams = \"itemId\"`都可以设置参数类型为`long`.\n\n### 支持应用内调用\n\n``` java\nRouters.open(context, \"mzule://main/0xff878798\")\nRouters.open(context, Uri.parse(\"mzule://main/0xff878798\"))\nRouters.openForResult(activity, \"mzule://main/0xff878798\", REQUEST_CODE);\nRouters.openForResult(activity, Uri.parse(\"mzule://main/0xff878798\"), REQUEST_CODE);\n// 获取 Intent\nIntent intent = Routers.resolve(context, \"mzule://main/0xff878798\")\n```\n\n通过`Routers.open(Context, String)`或者`Routers.open(Context, Uri)`可以直接在应用内打开对应的 Activity，不去要经过 RouterActivity 跳转，效率更高。\n\n### 支持获取原始 url 信息\n\n``` java\ngetIntent().getStringExtra(Routers.KEY_RAW_URL);\n```\n\n### 支持通过 url 调用方法\n\n``` java\n@Router(\"logout\")\npublic static void logout(Context context, Bundle bundle) {\n}\n```\n\n在任意参数为 Context 和 Bundle 的静态公共方法上, 通过 @Router 标记即可定义方法的 url. @Router 使用方式与上述一致。\n\n### 支持多模块\n\n* 每个包含 activity 的 module 都要添加 apt 依赖\n* 每个 module(包含主项目) 都要添加一个 @Module(name) 的注解在任意类上面，name 是项目的名称\n* 主项目要添加一个 @Modules({name0, name1, name2}) 的注解，指定所有的 module 名称集合\n\n## 混淆配置\n\n``` groovy\n-keep class com.github.mzule.activityrouter.router.** { *; }\n```\n\n## 许可\n\nApache License  2.0\n\n## 联系我\n\n任何相关问题都可以通过以下方式联系我。\n\n1. 提 issue\n1. 新浪微博 http://weibo.com/mzule\n1. 个人博客 https://mzule.github.io/\n1. 邮件 \"mzule\".concat(\"4j\").concat(\"@\").concat(\"gmail.com\")\n"
        },
        {
          "name": "activityrouter",
          "type": "tree",
          "content": null
        },
        {
          "name": "annotation",
          "type": "tree",
          "content": null
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "app_module",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.62890625,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    repositories {\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:2.2.3'\n        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.4'\n        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "compiler",
          "type": "tree",
          "content": null
        },
        {
          "name": "gif",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8349609375,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx10248m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 4.8544921875,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn ( ) {\n    echo \"$*\"\n}\n\ndie ( ) {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\nesac\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Split up the JVM_OPTS And GRADLE_OPTS values into an array, following the shell quoting and substitution rules\nfunction splitJvmOpts() {\n    JVM_OPTS=(\"$@\")\n}\neval splitJvmOpts $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\nJVM_OPTS[${#JVM_OPTS[*]}]=\"-Dorg.gradle.appname=$APP_BASE_NAME\"\n\nexec \"$JAVACMD\" \"${JVM_OPTS[@]}\" -classpath \"$CLASSPATH\" org.gradle.wrapper.GradleWrapperMain \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.259765625,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windowz variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\nif \"%@eval[2+2]\" == \"4\" goto 4NT_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\ngoto execute\n\n:4NT_args\n@rem Get arguments from the 4NT Shell from JP Software\nset CMD_LINE_ARGS=%$\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.083984375,
          "content": "include ':app', ':compiler', ':annotation', ':activityrouter', ':stub', ':app_module'\n"
        },
        {
          "name": "stub",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}