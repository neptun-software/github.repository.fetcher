{
  "metadata": {
    "timestamp": 1736609156049,
    "page": 457,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bytedance/ByteX",
      "stars": 3162,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.216796875,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea/libraries\n/.idea/modules.xml\n/.idea/workspace.xml\n.DS_Store\n/build\n/captures\n.externalNativeBuild\n\n# Built application files\n*.apk\n*.ap_\n\n# Files for the ART/Dalvik VM\n*.dex\n\n# Java class files\n*.class\n\n# Generated files\nbin/\ngen/\nout/\n\n# Gradle files\n.gradle/\nbuild/\n\n# Local configuration jar (sdk path, etc)\nlocal.properties\n\n# Log Files\n*.log\n\n# Android Studio Navigation editor temp files\n.navigation/\n\n# Android Studio captures folder\ncaptures/\n\n# IntelliJ\n/.idea\n*.iml\n.idea/workspace.xml\n.idea/tasks.xml\n.idea/gradle.xml\n.idea/assetWizardSettings.xml\n.idea/dictionaries\n.idea/libraries\n.idea/caches\n\n# Keystore files\n# Uncomment the following line if you do not want to check your keystore files in.\n#*.jks\n\n# External native build folder generated in Android Studio 2.2 and later\n.externalNativeBuild\n\n# Google Services (e.g. APIs or Firebase)\ngoogle-services.json\n\n# Freeline\nfreeline.py\nfreeline/\nfreeline_project_description.json\n\n# fastlane\nfastlane/report.xml\nfastlane/Preview.html\nfastlane/screenshots\nfastlane/test_output\nfastlane/readme.md\n*.iml\n.gradle\n/local.properties\n/.idea/workspace.xml\n/.idea/libraries\n.DS_Store\n/build\n/captures\n.externalNativeBuild\n/gradle_plugins\n\ncommitFiles.txt"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 3.59765625,
          "content": "# Change Log\n### Version 0.3.0\n- Upgrade asm libs from 6.2.1 to 9.2(Notes:ASM_API which is passed to asm visitors has not been changed,ASM6 by default.You could changed it by append 'bytex.ASM_API=\\[ASM4、ASM5、ASM6、ASM7、ASM8、ASM9\\]' in gradle.properties)\n- Replace booster-gradle-api with gradle-compat-api.Both of them are perfect AGP compatible libraries.\n    `booster-gradle-api` is developed and maintained by [booster](https://github.com/didi/booster)，which was used by ByteX for a long time .\n    `gradle-compat-api` is developed and maintained by bytedance，witch has been running well within the company for several months.\n- Check unexpected bytecode modifications by plugins during the traverse phase in release build.(Notes:Plugins should only perceive the inputs in the traverse phase, and there should be no modifications) \n- Fix memory leak caused by gradle\n- New whiteList feature in access-inline-plugin.\n\n### Version 0.2.8\n- Replace hookTransform with HookInjector;\n- Add proguard mapping parser&retracer；\n- output files with fixed timestamp by default；\n- fix bugs of incremental build；\n\n### Version 0.2.7\n- Improve compatibility(AGP4.1) of GradleToolKit;\n- fix 'RuntimeClasspath was resolved from a thread not managed by Gradle' in getter-setter-plugin；\n- fix incremental\n\n### Version 0.2.6\n- fix bug in access-inline with coroutines[Issue](https://github.com/bytedance/ByteX/issues/31)\n- add quick-refer-check task:processQuickReferCheckWith${variant.capitalize}\n\n### Version 0.2.5\n- fix get applying variant scope(Compatible with AGP)\n\n### Version 0.2.4\n- fix APK with empty code on the higher version of AGP due to getScope\n- fix blocking compilation while calling getArtifact\n  > Note :This is an experimental bug fix.Need to enable the\n  > switch(bytex.forbidUseLenientMutationDuringGetArtifact) in\n  > gradle.properties manually\n- fix a badcase in access-inline-plugin\n\n### Version 0.2.3\n- use ASM6\n- remove usages of internal interfaces\n- configurable output with fixed timestamp\n\n### Version 0.2.2\n- fix bugs:default transform configuration、NPE\n- optimize daemon cache with --no-daemon\n\n### Version 0.2.1\n- optimize incremental build:Cache graph nodes with daemon\n\n### Version 0.1.9\n- optimize refer checker:More detailed error information\n- add [ByteXBuildListener](wiki/ByteX-Developer-API-en.md#perceive-the-lifecycle-of-bytex)\n\n### Version 0.1.8\n- improve compatibility\n- optimize hook proguard\n- add checkIncrementalInDebug\n- fix npe cased by refer-checker\n\n### Version 0.1.7\n- Optimize incremental build and fix bugs\n- Fix memory leak in plugins\n- Support multi variants build\n\n### Version 0.1.6\n- Upgrade AGP 3.5.3\n- Fix memory leak in HookProguard\n- Run refer-check-plugin in single flow in order to check any issues producted by bytex'plugin\n- Unified threadpool and run pipleline lifecycles in parallel\n\n### Version 0.1.5\n- Fix bugs with getter-setter-inline plugins\n\n### Version 0.1.4\n- Fixed a bug caused by incorrectly processing removed input file.\n- Optimize graph cache reading and writing efficiency and  size\n- More efficient and convenient way for creating a [incremental](wiki/ByteX-Developer-API-en.md#incremental-plugin) plugin \n\n### Version 0.1.3\n- shrink styleable(shrink 500KB+ on douyin)\n- RFileKnife(fix R.java code to large)\n- ButterKnifeCheck(detect exceptions caused by cross-module use of ButterKnife)\n- optimize graph cache and html log\n- fix bug(fd leak)\n\n### Version 0.1.2\n- fix memory leak\n- optional html log、optional graph cache for incremental build\n\n### Version 0.1.1\n\n- Removed some code in GradleToolKit and add `booster-android-gradle-api` as dependencies.\n\n### Version 0.1.0\n\nInitial release"
        },
        {
          "name": "GradleToolKit",
          "type": "tree",
          "content": null
        },
        {
          "name": "HookProguard",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.08984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "PluginConfig",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.4453125,
          "content": "English | **[简体中文](README_zh.md)**\n\n# ByteX（Infinite Possibilities）\n\n\n\n<h1 align=\"center\">\n  <img src=\"wiki/bytex-logo.png\" height=\"111\" width=\"340\"  alt=\"logo\" />\n </h1>\n\n [![GitHub license](https://img.shields.io/badge/license-Apache%202-blue)](https://github.com/bytedance/ByteX/blob/master/LICENSE)\n\n> Powered by ByteDance TikTok & Douyin Android team.\n\n\nByteX is a bytecode plugin platform based on Android Gradle Transform Api and ASM. \n\n (Maybe you can think of it as a socket with unlimited plugs?)\n\n\nIn the apk building process, each plugin is completely independent. It not only can run independently from the ByteX host, but also can be automatically integrated into the host into a single Transform along with other plugins. \n\nWhat's more, each plugin's code is decoupled from one another, as well as their host, which makes it extensible and highly efficient for the development of new plugins.\n\n### Background\n\nIf all features are developed as a separate plugin, each plugin will cost 10+s, and the compilation time will increase linearly. \n\nBut if  the iterative development in only one plugin module will make it more and more cluttered, for the code is deeply coupled. \n\nSo an idea was raised. It could make sense to build a bytecode plugin platform, and the new feature can be extended based on it as a new plugin.\n\n### Feature\n\n- Code reuse. The common code sinks to `common` module and is reused by all plugins, so that each plugin only needs to focus on bytecode operation.\n\n- Plugin code is isolated and decoupled from each other. Based on ByteX, each feature is independent as a single plugin, and the code of each plugin is isolated from each other, which is conducive to develop a new plugin.\n\n- Platformization makes `Transform` more efficient.\n\n  - Class files are processed in multiple threads concurrently, making full use of the CPU resources of your machine.\n\n  - Plugins are automatically and seamlessly integrated into a single `Transform` to improve the efficiency of processing. During the `Transform` process, the IO of the class file is time-consuming. Integrating all the plugins into a single transform can avoid the costing  time increasing linearly. It makes \"1 + 1 = 2\"  become \"1 + 1 <2\" or approximately equal to 1.\n\n- Plugin portability is outstanding. Each plugin can be separated from the ByteX host, working as a transform independently.\n\n### Structure\n\n![structure](wiki/structure.png)\n\n\n\n**TransformEngine**\n\nReading all the class files in the project and Android SDK, and writing back to the specified directory.\n\n**base-plugin**\n\nByteX host.\n\n**common**\n\nBasic code library, including class diagram construction, logs, interfaces provided to various plugins.\n\n**other plugin modules**\n\nDepending on `common` module and focusing on bytecode operation.\n\n\n\n## Quick Start\n\nAdd those configuration code to your build.gradle, and apply your plugins on demand.\n\n```groovy\nbuildscript {\n    ext.plugin_version=\"0.3.0\"\n    repositories {\n        google()\n        jcenter()\n        maven {\n            url \"https://artifact.bytedance.com/repository/byteX/\"\n        }\n    }\n  \n    dependencies {\n        classpath \"com.bytedance.android.byteX:base-plugin:${plugin_version}\"\n      \t// Add bytex plugins' dependencies on demand\n        classpath \"com.bytedance.android.byteX:refer-check-plugin:${plugin_version}\"\n      \t// ...\n    }\n}\n\napply plugin: 'com.android.application'\n// apply bytex host\napply plugin: 'bytex'\nByteX {\n    enable true\n    enableInDebug false\n    logLevel \"DEBUG\"\n}\n\n// apply bytex plugins on demand...\napply plugin: 'bytex.refer_check'\n// ...\n```\n\nNote: If ByteX host is not applied, there is no difference between ByteX plugins and ordinary ones, and all of them will run separately. On the contrary, all ByteX plugins can be automatically merged into one single Transform with the help of the ByteX host.\n\n## Plugins\n\n- [access-inline-plugin](access-inline-plugin/README.md)（Inline access method）\n- [shrink-r-plugin](shrink-r-plugin/README.md)（Slimming R files&Unused resource check）\n- [closeable-check-plugin](closeable-check-plugin/README.md)（Detect opening stream without close）\n- [const-inline-plugin](const-inline-plugin/README.md)（Inline constants）\n- [field-assign-opt-plugin](field-assign-opt-plugin/README.md)（Optimize redundant assignment instructions）\n- [getter-setter-inline-plugin](getter-setter-inline-plugin/README.md) （Inline Getters and Setters）\n- [method-call-opt-plugin](method-call-opt-plugin/README.md)（Delete some method invoking instructions clearly e.g. `Log.d`）\n- [coverage-plugin](coverage/README.md)（Online code coverage）\n- [refer-check-plugin](refer-check-plugin/README.md)（Detect if there is a invocation to a non-existent method and a reference to a non-existent field）\n- [serialization-check-plugin](serialization-check-plugin/README.md)（Serialization check）\n- [SourceFileKiller](SourceFileKiller/README.md)（Shrink SourceFile and linenumber）\n- [ButterKnifeChecker](butterknife-check-plugin/README.md)（detect exceptions caused by cross-module use of ButterKnife）\n- [RFileKnife](shrink-r-plugin/RFileKnife-README.md)（Fix R.java code too large）\n\n\n## Apps Using ByteX\n\n| <img src=\"https://sf1-ttcdn-tos.pstatp.com/img/ee-finolhu/a0ca113c9c6d4fb49c9b8bb54a392a00~noop.image\" alt=\"抖音\" height=\"60\"/> | <img src=\"https://sf1-ttcdn-tos.pstatp.com/img/ee-finolhu/a0ca113c9c6d4fb49c9b8bb54a392a00~noop.image\" alt=\"tiktok\" height=\"60\"/> | <img src=\"https://sf6-ttcdn-tos.pstatp.com/img/ee-finolhu/034e2e9d3cfe49f8bb0a3367c9afec47~noop.image\" alt=\"今日头条\" height=\"60\"/> |\n|:-----------:|:-------:|:-------:|\n| 抖音 | Tik Tok | 今日头条 |\n| <img src=\"https://sf1-ttcdn-tos.pstatp.com/img/ee-finolhu/6f2b3dc9b3e945a89565dd67a3e1a3b3~noop.image\" height=\"60\" width=\"60\"  alt=\"火山小视频\" style=\"margin: 10px\"/> | <img src=\"https://sf1-ttcdn-tos.pstatp.com/img/ee-finolhu/d9a7c17402164799becb3b62676e5f88~noop.image\"  alt=\"lark\" height=\"60\"/> | <img src=\"wiki/icons/duoshan.png\" height=\"60\" width=\"60\"  alt=\"多闪\" style=\"margin: 10px\"/> | \n| 火山小视频 | 飞书 | 多闪 |\n|<img src=\"https://sf1-ttcdn-tos.pstatp.com/img/ee-finolhu/2b49de98334a4c05b875a7d56df9abab~noop.image\" height=\"60\" alt=\"FaceU\" /> | <img src=\"https://sf3-ttcdn-tos.pstatp.com/img/ee-finolhu/5f2b63d1fc904c47a37c89dd439e2b7a~noop.image\" height=\"60\" alt=\"轻颜\"/> | <img src=\"wiki/icons/feiliao.png\" height=\"60\" width=\"60\"  alt=\"飞聊\" style=\"margin:17px\"/> |\n| FaceU激萌 | 轻颜| 飞聊|\n\n## What else can the ByteX do?\nThere are more than 25 plugins developed based on ByteX in ByteDance (We only open sourced some of them). You can quickly develop the following related plugins based on ByteX:\n- Performance optimization(SPI...)\n- Optimize apk size(xxx-inline...)\n- Fix Bug\n- Code analysis / security scan\n- AOP(replace SharedPreferences...)\n- and so on\n\n## Contribution\n\nIf you have some creative ideas and demands related to bytecode, come to join us to develop a new bytecode plugin based on ByteX!\n\nPlease read through our [Developer API](wiki/ByteX-Developer-API-en.md).\n\n## Thanks\n\n- [lancet](https://github.com/eleme/lancet) \n- [booster](https://github.com/didi/booster)\n \n\n\n## Contact us\n\nIf you have any question or advice about ByteX, feel free to join our WeChat group.\n\n<img src=\"https://github.com/yangzhiqian/StaticResource/blob/master/ByteX/wechat_group.jpeg\" alt=\"WeChat Group\" />\n\nBesides,  sending email to yangzhiqian@bytedance.com or  tanlehua@bytedance.com  is also available for you.\n\n## Change Log\n\n[Change Log](CHANGELOG.md)\n\n## License\n\nApache 2.0\n\n\n"
        },
        {
          "name": "README_zh.md",
          "type": "blob",
          "size": 7.5400390625,
          "content": "**[English](README.md)** | 简体中文\n\n\n# ByteX（Infinite Possibilities）\n\n\n<h1 align=\"center\">\n  <img src=\"wiki/bytex-logo.png\" height=\"111\" width=\"340\"  alt=\"logo\" />\n </h1>\n\n [![GitHub license](https://img.shields.io/badge/license-Apache%202-blue)](https://github.com/bytedance/ByteX/blob/master/LICENSE)\n\n> 本工具由字节跳动抖音 Android 团队提供。\n\nByteX是一个基于gradle transform api和ASM的字节码插件平台（或许，你可以把它当成一个有无限个插头的插座？）。\n\n\n目前集成了若干个字节码插件，每个插件完全独立，既可以脱离ByteX这个宿主而独立存在，又可以自动集成到宿主和其它插件一起整合为一个单独的Transform。插件和插件之间，宿主和插件之间的代码是完全解耦的（有点像组件化），这使得ByteX在代码上拥有很好的可拓展性，新插件的开发将会变得更加简单高效。\n\n### 背景\n\n如果所有feature都开发一个单独的插件，每个插件编译构建耗时+10s，各个插件叠在一起，编译耗时就会呈线性增长；那如果我们所有feature都基于一个现成的字节码插件做迭代开发，又会让插件代码变得越来越臃肿，代码耦合严重。所以就有了这个想法，单独做一个字节码插件开发平台，新的feature可以基于它做扩展。\n\n### 特点\n\n- 代码复用。公共的代码下沉下到common，给所有插件复用，这样每个插件就只需要专注于字节码插桩就行了。\n\n- 插件间代码隔离，相互解耦。之前字节码的相关feature都是基于某个字节码插件module来迭代扩展的，但各个feature的代码耦合在一起，久而久之这个插件module就成为了大杂烩。而基于ByteX，各个feature都独立成一个个插件，各个feature的代码相互隔离，相互独立，有利于新插件的功能拓展。\n\n- 平台化让transform更高效。\n\n  - class文件多线程并发处理，充分利用打包机的CPU资源。\n\n  - 插件间自动无缝地整合成一个Transform，提高处理构建的效率。Transform过程中，对class文件的IO是比较耗时的，把所有的plugin整合成一个单独transform可以避免打包的额外时间开销呈线性增长。让耗时从1+1=2，变成1+1<2或者约等于1。\n\n- 插件移植性强。每个插件都可以脱离ByteX宿主，独立成一个transform，独立工作。\n\n### 项目结构\n\n![structure](wiki/structure.png)\n\n\n\n**TransformEngine**\n\n负责遍历读取工程和Android SDK里的所有class文件，并回写到transform指定目录。\n\n**base-plugin**\n\n宿主，也就一个壳。\n\n**common**\n\n基础代码库，包括类图构建逻辑，日志，提供给各个插件的适配接口等。\n\n**其它插件module**\n\n依赖common，实现相应的接口和各自的字节码插桩逻辑。\n\n\n\n## 快速接入\n\n在build.gradle里添加以下配置，按需apply你的插件：\n\n```groovy\nbuildscript {\n    ext.plugin_version=\"0.3.0\"\n    repositories {\n        google()\n        jcenter()\n        maven {\n            url \"https://artifact.bytedance.com/repository/byteX/\"\n        }\n    }\n  \n    dependencies {\n        classpath \"com.bytedance.android.byteX:base-plugin:${plugin_version}\"\n      \t// Add bytex plugins' dependencies on demand. 按需添加插件依赖\n        classpath \"com.bytedance.android.byteX:refer-check-plugin:${plugin_version}\"\n      \t// ...\n    }\n}\n\napply plugin: 'com.android.application'\n// apply ByteX宿主\napply plugin: 'bytex'\nByteX {\n    enable true\n    enableInDebug false\n    logLevel \"DEBUG\"\n}\n\n// 按需apply bytex 插件\napply plugin: 'bytex.refer_check'\n// ...\n```\n\n注意：如果不apply ByteX宿主，那么这些ByteX插件与普通的插件无异，将会各自形成单独的Transform。反之，所有ByteX的插件将会自动融合成一个Transform。\n\n以下是基于ByteX开发的插件，可以进入各个插件的README.md了解插件的接入方式。\n\n## 已集成的插件\n\n- [access-inline-plugin](access-inline-plugin/README-zh.md)（access方法内联）\n- [shrink-r-plugin](shrink-r-plugin/README-zh.md)（R文件瘦身和无用资源检查）\n- [closeable-check-plugin](closeable-check-plugin/README-zh.md)（文件流的close检查）\n- [const-inline-plugin](const-inline-plugin/README-zh.md)（常量内联）\n- [field-assign-opt-plugin](field-assign-opt-plugin/README-zh.md)（优化多余赋值指令）\n- [getter-setter-inline-plugin](getter-setter-inline-plugin/README-zh.md) （getter和setter方法内联）\n- [method-call-opt-plugin](method-call-opt-plugin/README-zh.md)（干净地删除某些方法调用，如`Log.d`）\n- [coverage-plugin](coverage/README-zh.md)（线上代码覆盖率）\n- [refer-check-plugin](refer-check-plugin/README-zh.md)（检查是否有调用不存在的方法和引用不存在的字段）\n- [serialization-check-plugin](serialization-check-plugin/README-zh.md)（序列化检查）\n- [SourceFileKiller](SourceFileKiller/README-zh.md)（删除SourceFile和行号属性，作为示例）\n- [ButterKnifeChecker](butterknife-check-plugin/README-zh.md)（检测跨module使用ButterKnife可能导致的问题）\n- [RFileKnife](shrink-r-plugin/RFileKnife-README-zh.md)（修复R.java太大编译报code too large的问题）\n\n## 已知接入方\n\n| <img src=\"https://sf1-ttcdn-tos.pstatp.com/img/ee-finolhu/a0ca113c9c6d4fb49c9b8bb54a392a00~noop.image\" alt=\"抖音\" height=\"60\"/> | <img src=\"https://sf1-ttcdn-tos.pstatp.com/img/ee-finolhu/a0ca113c9c6d4fb49c9b8bb54a392a00~noop.image\" alt=\"tiktok\" height=\"60\"/> | <img src=\"https://sf6-ttcdn-tos.pstatp.com/img/ee-finolhu/034e2e9d3cfe49f8bb0a3367c9afec47~noop.image\" alt=\"今日头条\" height=\"60\"/> |\n|:-----------:|:-------:|:-------:|\n| 抖音 | Tik Tok | 今日头条 |\n| <img src=\"https://sf1-ttcdn-tos.pstatp.com/img/ee-finolhu/6f2b3dc9b3e945a89565dd67a3e1a3b3~noop.image\" height=\"60\" width=\"60\"  alt=\"火山小视频\" style=\"margin: 10px\"/> | <img src=\"https://sf1-ttcdn-tos.pstatp.com/img/ee-finolhu/d9a7c17402164799becb3b62676e5f88~noop.image\"  alt=\"lark\" height=\"60\"/> | <img src=\"wiki/icons/duoshan.png\" height=\"60\" width=\"60\"  alt=\"多闪\" style=\"margin: 10px\"/> | \n| 火山小视频 | 飞书 | 多闪 |\n|<img src=\"https://sf1-ttcdn-tos.pstatp.com/img/ee-finolhu/2b49de98334a4c05b875a7d56df9abab~noop.image\" height=\"60\" alt=\"FaceU\" /> | <img src=\"https://sf3-ttcdn-tos.pstatp.com/img/ee-finolhu/5f2b63d1fc904c47a37c89dd439e2b7a~noop.image\" height=\"60\" alt=\"轻颜\"/> | <img src=\"wiki/icons/feiliao.png\" height=\"60\" width=\"60\"  alt=\"飞聊\" style=\"margin:17px\"/> |\n| FaceU激萌 | 轻颜| 飞聊|\n\n## ByteX框架还能做什么？\n在字节跳动公司内基于ByteX开发的插件超过25个(只开源了部分)，你可以基于ByteX快速开发出以下几点相关的插件:\n- 性能优化(SPI...)\n- 优化包大小(xxx-inline...)\n- 修复bug\n- 代码分析检查/安全扫描\n- AOP(SharedPreferences替换...)\n- 其他\n\n## Contribution\n\n如果你有一些关于字节码的相关需求或脑洞，完全可以基于ByteX来开发新的字节码插件。\n\n请参考研发WIKI：[Developer API](wiki/ByteX-Developer-API-zh.md)\n\n## 鸣谢\n\n- [lancet](https://github.com/eleme/lancet) \n- [booster](https://github.com/didi/booster)\n\n## 联系我们\n\n如果你有任何关于ByteX的问题或建议，可以加入到微信群与我们沟通交流，我们会及时回复你哒。\n\n<img src=\"https://github.com/yangzhiqian/StaticResource/blob/master/ByteX/wechat_group.jpeg\" alt=\"WeChat Group\" />\n\n除此之外，你也可以发邮件到邮箱：yangzhiqian@bytedance.com、tanlehua@bytedance.com，在邮件中详细描述你的问题。\n\n## Change Log\n\n[Change Log](CHANGELOG.md)\n\n## License\n\nApache 2.0\n"
        },
        {
          "name": "SourceFileKiller",
          "type": "tree",
          "content": null
        },
        {
          "name": "TransformEngine",
          "type": "tree",
          "content": null
        },
        {
          "name": "access-inline-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "base-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 1.4189453125,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n    ext.kotlin_version = '1.3.21'\n    apply from: rootProject.file('gradle/ext.gradle')\n    repositories {\n        maven {\n            url uri('../gradle_plugins')\n        }\n        maven {\n            url \"https://artifact.bytedance.com/repository/byteX/\"\n        }\n        google()\n        jcenter()\n        maven {\n            url \"https://plugins.gradle.org/m2/\"\n        }\n    }\n    dependencies {\n        classpath \"com.android.tools.build:gradle:$gradle_version\"\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n        classpath 'com.novoda:bintray-release:0.8.0'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n        classpath \"org.jetbrains.dokka:dokka-gradle-plugin:0.10.0\"\n        classpath \"com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.3\"\n        classpath \"digital.wup:android-maven-publish:3.6.3\"\n    }\n}\n\nallprojects {\n    repositories {\n        maven {\n            url uri('../gradle_plugins')\n        }\n        maven {\n            url \"https://artifact.bytedance.com/repository/byteX/\"\n        }\n        google()\n        jcenter()\n        mavenCentral()\n        maven {\n            url \"https://plugins.gradle.org/m2/\"\n        }\n    }\n}\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n"
        },
        {
          "name": "butterknife-check-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "closeable-check-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "const-inline-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "coverage",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "field-assign-opt-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "getter-setter-inline-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.150390625,
          "content": "# Project-wide Gradle settings.\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx8192m -XX\\:MaxPermSize\\=512m -Dfile.encoding\\=UTF-8\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\nandroid.enableD8=true\nandroid.enableR8=false\nandroid.enableD8.desugaring=false\nandroid.enableDesugar=true\n# gradle build cache\norg.gradle.caching=true\n# log in CI\norg.gradle.caching.debug=true\n#是否生成html日志,默认true\n#whether to generate html log.True by default\nbytex.enableHtmlLog=true\nandroid.useAndroidX=false\nandroid.enableJetifier=false\nbytex.forbidUseLenientMutationDuringGetArtifact=true"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.171875,
          "content": "#!/usr/bin/env sh\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS=\"\"\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=$((i+1))\n    done\n    case $i in\n        (0) set -- ;;\n        (1) set -- \"$args0\" ;;\n        (2) set -- \"$args0\" \"$args1\" ;;\n        (3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        (4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        (5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        (6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        (7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        (8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        (9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=$(save \"$@\")\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\n# by default we should be in the correct project dir, but when run from Finder on Mac, the cwd is wrong\nif [ \"$(uname)\" = \"Darwin\" ] && [ \"$HOME\" = \"$PWD\" ]; then\n  cd \"$(dirname \"$0\")\"\nfi\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.125,
          "content": "@if \"%DEBUG%\" == \"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif \"%ERRORLEVEL%\" == \"0\" goto init\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto init\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:init\n@rem Get command-line arguments, handling Windows variants\n\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\n\n:win9xME_args\n@rem Slurp the command line arguments.\nset CMD_LINE_ARGS=\nset _SKIP=2\n\n:win9xME_args_slurp\nif \"x%~1\" == \"x\" goto execute\n\nset CMD_LINE_ARGS=%*\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\n\n:end\n@rem End local scope for the variables with windows NT shell\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\nexit /b 1\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "method-call-opt-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "publish.sh",
          "type": "blob",
          "size": 1.31640625,
          "content": "#!/usr/bin/env bash\n\n##############################################################################\n##\n##  Upload gradle_plugins to TT Nexus (https://wiki.bytedance.net/pages/viewpage.action?pageId=173661094)\n##  http://git.bytedance.com:8081/#browse/browse/components:ugc_android    （search key : com.bytedance.android.byteX）\n##  run ./publish.sh -m to upload to maven.\n##  run ./publish.sh -m -t to upload to maven(snapshot -t=-test).\n##  run ./publish.sh to upload to gradle_plugins directory.\n##  run ./publish.sh -b to upload to bintray jcenter.\n##############################################################################\nupload2Maven=false\nuseSnapshot=false\nupload2JCenter=false\n\n\nwhile getopts \"mtb\" opt\ndo\n  case ${opt} in\n    m)\n      upload2Maven=true\n      ;;\n    b)\n      upload2Maven=true\n      upload2JCenter=true\n      ;;\n    t)\n      useSnapshot=true\n      ;;\n  esac\ndone\necho ${upload2Maven}\necho ${upload2JCenter}\necho ${useSnapshot}\necho \"upload2Maven=$upload2Maven\" > upload.properties\necho \"useSnapshotMaven=$useSnapshot\" >> upload.properties\necho \"excludeApp=true\" >> upload.properties\n\n\n#./gradlew clean\n\nif [[ \"$upload2JCenter\" == \"true\" ]]; then\n    echo \"upload2JCenter=$upload2JCenter\" >> upload.properties\n    ./gradlew bintrayUpload --stacktrace\n\nelse\n    ./gradlew uploadArchives\nfi\n\nrm -rf ./upload.properties\n"
        },
        {
          "name": "refer-check-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "serialization-check-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 1.9267578125,
          "content": "def excludeApp = false\ndef proFile = file(\"./upload.properties\")\nif (proFile != null) {\n    Properties p = new Properties()\n    try {\n        proFile.withInputStream { stream ->\n            p.load(stream)\n        }\n        excludeApp = p.excludeApp\n    } catch (e) {\n    }\n}\nif (!excludeApp) {\n//    \"./publish.sh\".execute().waitForProcessOutput(System.out, System.err)\n    include ':example'\n}\n\n//common\ninclude ':base-plugin'\ninclude ':common'\ninclude ':TransformEngine'\ninclude ':HookProguard'\ninclude ':ProguardConfigurationResolver'\ninclude ':ProguardConfigurationResolver-task'\ninclude ':ProguardConfigurationResolver-transform'\nproject(':ProguardConfigurationResolver').projectDir = new File('HookProguard/ProguardConfigurationResolver')\nproject(':ProguardConfigurationResolver-task').projectDir = new File('HookProguard/ProguardConfigurationResolver/task')\nproject(':ProguardConfigurationResolver-transform').projectDir = new File('HookProguard/ProguardConfigurationResolver/transform')\ninclude ':GradleToolKit'\ninclude ':GradleEnvApi'\nproject(':GradleEnvApi').projectDir = new File('GradleToolKit/GradleEnvApi')\ninclude ':PluginConfigProcessor'\nproject(':PluginConfigProcessor').projectDir = new File('PluginConfig/PluginConfigProcessor')\ninclude ':PluginConfigAnnotation'\nproject(':PluginConfigAnnotation').projectDir = new File('PluginConfig/PluginConfigAnnotation')\n\n//opensource\ninclude ':shrink-r-plugin'\ninclude ':access-inline-plugin'\ninclude ':getter-setter-inline-plugin'\ninclude ':refer-check-plugin'\ninclude ':closeable-check-plugin'\ninclude ':serialization-check-plugin'\ninclude ':const-inline-plugin'\ninclude ':field-assign-opt-plugin'\ninclude ':method-call-opt-plugin'\ninclude ':SourceFileKiller'\ninclude ':butterknife-check-plugin'\n\ninclude ':coverage-plugin'\nproject(':coverage-plugin').projectDir = new File('coverage/coverage-plugin')\ninclude ':coverage-lib'\nproject(':coverage-lib').projectDir = new File('coverage/coverage-lib')\n\n//pull request"
        },
        {
          "name": "shrink-r-plugin",
          "type": "tree",
          "content": null
        },
        {
          "name": "wiki",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}