{
  "metadata": {
    "timestamp": 1736708155531,
    "page": 597,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "noties/Markwon",
      "stars": 2835,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.109375,
          "content": "*.iml\n.gradle\n/local.properties\n/.idea\n.DS_Store\n/captures\n.externalNativeBuild\n**/build\n**/dist\n**/node_modules"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 20.5166015625,
          "content": "# Changelog\n\n# 4.6.2\n\n#### Added\n* `image` - `DefaultDownScalingMediaDecoder` which scales displayed images down ([#329])\n\n[#329]: https://github.com/noties/Markwon/issues/329\n\n\n# 4.6.1\n\n#### Changed\n* `core` - `CustomTypefaceSpan` new `mergeStyles` functionality and new factory method([#298])<br>Thanks [@c-b-h]\n* `image-coil` - update `Coil` to `0.13.0` ([#303])<br>Thanks [@ubuntudroid]\n\n#### Deprecated\n* `core` - `CustomTypefaceSpan(Typeface)` constructor, use `CustomTypefaceSpan.create(Typeface)` \n  or `CustomTypefaceSpan.create(Typeface, boolean)` factory methods instead\n\n\n[#298]: https://github.com/noties/Markwon/pull/298\n[#303]: https://github.com/noties/Markwon/pull/303\n\n[@c-b-h]: https://github.com/c-b-h\n[@ubuntudroid]: https://github.com/ubuntudroid\n\n\n# 4.6.0\n\n#### Added\n* `ext-tables` - `TableAwareMovementMethod` a special movement method to handle clicks inside tables ([#289])\n\n#### Changed\n* `ext-tasklist` - changed implementation to be in line with GFM (Github flavored markdown), \n  task list item is a regular list item (BulletList and OrderedList can contain it). \n  Internal implementation changed from block parsing to node post processing ([#291])\n* `image-glide` - update to `4.11.0` version\n* `inline-parser` - revert parsing index when `InlineProcessor` returns `null` as result\n* `image-coil` - update `Coil` to `0.12.0` ([Coil changelog](https://coil-kt.github.io/coil/changelog/)) ([#284])<br>Thanks [@magnusvs] \n\n[#284]: https://github.com/noties/Markwon/pull/284\n[#289]: https://github.com/noties/Markwon/issues/289\n[#291]: https://github.com/noties/Markwon/issues/291\n\n[@magnusvs]: https://github.com/magnusvs\n\n\n# 4.5.1\n\n#### Changed\n* `image-coil` - use `coil-base` as `api` dependency (would require explicit `coil` dependency) ([#274])\n\n#### Fixed\n* `image-coil` - deliver image result if it loaded before request disposable is created ([#272])\n* `ext-tables` - fix column width rounding issue\n\n[#272]: https://github.com/noties/Markwon/issues/272\n[#274]: https://github.com/noties/Markwon/issues/274\n\n\n# 4.5.0\n\n#### Added\n* `core` - `MovementMethodPlugin.none()`, `MovementMethodPlugin.link()` factory methods\n* `core` - `CorePlugin` `hasExplicitMovementMethod` configuration method to **not** add implicit `LinkMovementMethod` in `afterSetText`\n* `core` - `MarkwonTheme` `isLinkedUnderlined` attribute for links([#270])<br>Thanks to [@dallasgutauckis]\n* `ext-latex` - `JLatexMathTheme.Padding.of(int,int,int,int)` factory method\n* `app-sample` - example application\n\n#### Changed\n* `html` - `SimpleTagHandler` visits children tags if supplied tag is block one ([#235])\n* `inline-parser` -  `BangInlineProcessor` properly returns `null` if no image node is found (possible to define other inline parsers that use `!` as special character)\n* `image` - `AsyncDrawable` won't trigger loading if it has result (aim: `RecyclerView` due to multiple attach/detach events of a View)\n* `image` - `AsyncDrawable` will resume result if it is `Animatable` and was playing before detach event (aim: `RecyclerView`) ([#241])\n* `core` - `MarkwonReducer` filter out `LinkReferenceDefinition` nodes\n\n#### Fixed\n* `image-glide` cache `RequestManager` in  `GlideImagesPlugin#create(Context)` factory method ([#259])\n\n#### Deprecated\n* `core` - `MovementMethodPlugin.create()` use explicit `MovementMethodPlugin.link()` instead\n\n#### Removed\n* `image` - `AsyncDrawable#hasKnownDimentions` (deprecated in `4.2.1`)\n* `app` and `sample` applications (merged together in a `app-sample` single app)\n\n[#235]: https://github.com/noties/Markwon/issues/235\n[#241]: https://github.com/noties/Markwon/issues/241\n[#259]: https://github.com/noties/Markwon/issues/259\n[#270]: https://github.com/noties/Markwon/pull/270\n\n[@dallasgutauckis]: https://github.com/dallasgutauckis\n\n\n# 4.4.0\n* `TextViewSpan` to obtain `TextView` in which markdown is displayed (applied by `CorePlugin`)\n* `TextLayoutSpan` to obtain `Layout` in which markdown is displayed (applied by `TablePlugin`, more specifically `TableRowSpan` to propagate layout in which cell content is displayed)\n* `HtmlEmptyTagReplacement` now is configurable by `HtmlPlugin`, `iframe` handling ([#235])\n* `AsyncDrawable` now uses `TextView` width without padding instead of width of canvas\n* Support for images inside table cells (`ext-tables` module)\n* Expose `enabledBlockTypes` in `CorePlugin`\n* Update `jlatexmath-android` dependency ([#225])\n* Update `image-coil` module (Coil version `0.10.1`) ([#244])<br>Thanks to [@tylerbwong]\n* Rename `UrlProcessor` to `ImageDestinationProcessor` (`io.noties.markwon.urlprocessor` -&gt; `io.noties.markwon.image.destination`) and limit its usage to process **only** destination URL of images (was used to also process links before)\n* `fallbackToRawInputWhenEmpty` `Markwon.Builder` configuration to fallback to raw input if rendered markdown is empty ([#242]) \n\n[#235]: https://github.com/noties/Markwon/issues/235\n[#225]: https://github.com/noties/Markwon/issues/225\n[#244]: https://github.com/noties/Markwon/pull/244\n[#242]: https://github.com/noties/Markwon/issues/242\n[@tylerbwong]: https://github.com/tylerbwong\n\n\n# 4.3.1\n* Fix DexGuard optimization issue ([#216])<br>Thanks [@francescocervone]\n* module `images`: `GifSupport` and `SvgSupport` use `Class.forName` instead access to full qualified class name\n* `ext-table`: fix links in tables ([#224])\n* `ext-table`: proper borders (equal for all sides)\n* module `core`: Add `PrecomputedFutureTextSetterCompat`<br>Thanks [@KirkBushman]\n\n[#216]: https://github.com/noties/Markwon/pull/216\n[#224]: https://github.com/noties/Markwon/issues/224\n[@francescocervone]: https://github.com/francescocervone\n[@KirkBushman]: https://github.com/KirkBushman\n\n\n# 4.3.0\n* add `MarkwonInlineParserPlugin` in `inline-parser` module\n* `JLatexMathPlugin` now supports inline LaTeX structures via `MarkwonInlineParserPlugin` \ndependency (must be explicitly added to `Markwon` whilst configuring)\n* `JLatexMathPlugin`: add `theme` (to customize both inlines and blocks)\n* add `JLatexMathPlugin.ErrorHandler` to catch latex rendering errors and (optionally) display error drawable ([#204])\n* `JLatexMathPlugin` add text color customization ([#207])\n* `JLatexMathPlugin` will use text color of widget in which it is displayed **if color is not set explicitly**\n* add `SoftBreakAddsNewLinePlugin` plugin (`core` module)\n* `LinkResolverDef` defaults to `https` when a link does not have scheme information ([#75])\n* add `option` abstraction for `sample` module allowing switching of multiple cases in runtime via menu\n* non-empty bounds for `AsyncDrawable` when no dimensions are not yet available ([#189])\n* `linkify` - option to use `LinkifyCompat` in `LinkifyPlugin` ([#201])<br>Thanks to [@drakeet]\n* `MarkwonVisitor.BlockHandler` and `BlockHandlerDef` implementation to control how blocks insert new lines after them\n\n\n```java\n// default usage: new blocks parser, no inlines\nfinal Markwon markwon = Markwon.builder(this)\n    .usePlugin(JLatexMathPlugin.create(textSize))\n    .build();\n```\n\n```java\n// legacy blocks (pre `4.3.0`) parsing, no inlines\nfinal Markwon markwon =  Markwon.builder(this)\n        .usePlugin(JLatexMathPlugin.create(textView.getTextSize(), builder -> builder.blocksLegacy(true)))\n        .build();\n```\n\n```java\n// new blocks parsing and inline parsing\nfinal Markwon markwon =  Markwon.builder(this)\n        .usePlugin(JLatexMathPlugin.create(textView.getTextSize(), builder -> {\n            // blocksEnabled and blocksLegacy can be omitted\n            builder\n                    .blocksEnabled(true)\n                    .blocksLegacy(false)\n                    .inlinesEnabled(true);\n        }))\n        .build();\n```\n\n[#189]: https://github.com/noties/Markwon/issues/189\n[#75]: https://github.com/noties/Markwon/issues/75\n[#204]: https://github.com/noties/Markwon/issues/204 \n[#207]: https://github.com/noties/Markwon/issues/207\n[#201]: https://github.com/noties/Markwon/issues/201\n[@drakeet]: https://github.com/drakeet\n\n\n# 4.2.2\n* Fixed `AsyncDrawable` display when it has placeholder with empty bounds ([#189])\n* Fixed `syntax-highlight` where code input is empty string ([#192])\n* Add `appendFactory`/`prependFactory` in `MarkwonSpansFactory.Builder` for more explicit `SpanFactory` ordering ([#193])\n\n[#189]: https://github.com/noties/Markwon/issues/189\n[#192]: https://github.com/noties/Markwon/issues/192\n[#193]: https://github.com/noties/Markwon/issues/193\n\n# 4.2.1\n* Fix SpannableBuilder `subSequence` method\n* Introduce Nougat check in `BulletListItemSpan` to position bullet (for bullets to be\npositioned correctly when nested inside other `LeadingMarginSpan`s)  \n* Reduced number of invalidations in AsyncDrawable when result is ready\n* AsyncDrawable#hasKnownDimentions -> AsyncDrawable#hasKnownDimensions typo fix\n\n# 4.2.0\n* `MarkwonEditor` to highlight markdown input whilst editing (new module: `markwon-editor`)\n* `CoilImagesPlugin` image loader based on [Coil] library (new module: `markwon-image-coil`) ([#166], [#174])\n<br>Thanks to [@tylerbwong]\n* `MarkwonInlineParser` to customize inline parsing (new module: `markwon-inline-parser`)\n* Update commonmark-java to `0.13.0` (and commonmark spec `0.29`)\n* `Markwon#configuration` method to expose `MarkwonConfiguration` via public API\n* `HeadingSpan#getLevel` getter\n* Add `SvgPictureMediaDecoder` in `image` module to deal with SVG without dimensions ([#165])\n* `LinkSpan#getLink` method\n* `LinkifyPlugin` applies link span that is configured by `Markwon` (obtain via span factory)\n* `LinkifyPlugin` is thread-safe\n\n[@tylerbwong]: https://github.com/tylerbwong\n[Coil]: https://github.com/coil-kt/coil\n[#165]: https://github.com/noties/Markwon/issues/165\n[#166]: https://github.com/noties/Markwon/issues/166\n[#174]: https://github.com/noties/Markwon/pull/174\n\n# 4.1.2\n* Do not re-use RenderProps when creating a new visitor (fixes [#171])\n\n[#171]: https://github.com/noties/Markwon/issues/171\n\n# 4.1.1\n* `markwon-ext-tables`: fix padding between subsequent table blocks ([#159])\n* `markwon-images`: print a single warning instead full stacktrace in case when SVG or GIF \nare not present in the classpath ([#160])\n* Make `Markwon` instance thread-safe by using a single `MarkwonVisitor` for each `render` call ([#157])\n* Add `CoreProps.CODE_BLOCK_INFO` with code-block info (language)\n\n[#159]: https://github.com/noties/Markwon/issues/159\n[#160]: https://github.com/noties/Markwon/issues/160\n[#157]: https://github.com/noties/Markwon/issues/157\n\n# 4.1.0\n* Add `Markwon.TextSetter` interface to be able to use PrecomputedText/PrecomputedTextCompat\n* Add `PrecomputedTextSetterCompat` and `compileOnly` dependency on `androidx.core:core` \n(clients must have this dependency in the classpath)\n* Add `requirePlugin(Class)` and `getPlugins` for `Markwon` instance\n* TablePlugin -&gt; defer table invalidation (via `View.post`), so only one invalidation \nhappens with each draw-call\n* AsyncDrawableSpan -&gt; defer invalidation\n\n# 4.0.2\n* Fix `JLatexMathPlugin` formula placeholder (cannot have line breaks) ([#149])\n* Fix `JLatexMathPlugin` to update resulting formula bounds when `fitCanvas=true` and \nformula exceed canvas width (scale down keeping formula width/height ratio)\n\n[#149]: https://github.com/noties/Markwon/issues/149\n\n# 4.0.1\n* Fix `JLatexMathPlugin` (background-provider null) ([#147])\n\n[#147]: https://github.com/noties/Markwon/issues/147\n\n# 4.0.0\n* maven group-id change to `io.noties.markwon` (was `ru.noties.markwon`)\n* package name change to `io.notier.markwon.*` (was `ru.noties.markwon.*`)\n* androidx artifacts ([#76])\n* `Markwon#builder` does not require explicit `CorePlugin` (added automatically), \nuse `Markwon#builderNoCore()` to obtain a builder without `CorePlugin`\n* Removed `Priority` abstraction and `MarkwonPlugin#priority` (use `MarkwonPlugin.Registry`)\n* Removed `MarkwonPlugin#configureHtmlRenderer` (for configuration use `HtmlPlugin` directly)\n* Removed `MarkwonPlugin#configureImages` (for configuration use `ImagesPlugin` directly)\n* Added `MarkwonPlugin.Registry` and `MarkwonPlugin#configure(Registry)` method\n* `CorePlugin#addOnTextAddedListener` (process raw text added)\n* `ImageSizeResolver` signature change (accept `AsyncDrawable`)\n* `LinkResolver` is now an independent entity (previously part of the `LinkSpan`), `LinkSpan.Resolver` -&gt; `LinkResolver`\n* `AsyncDrawableScheduler` can now be called multiple times without performance penalty\n* `AsyncDrawable` now exposes its destination, image-size, last known dimensions (canvas, text-size)\n* `AsyncDrawableLoader` signature change (accept `AsyncDrawable`)\n* Add `LastLineSpacingSpan`\n* Add `MarkwonConfiguration.Builder#asyncDrawableLoader` method\n* `ImagesPlugin` removed from `core` artifact \n(also removed `images-gif`, `images-okhttp` and `images-svg` artifacts and their plugins)\n* `ImagesPlugin` exposes configuration (adding scheme-handler, media-decoder, etc)\n* `ImagesPlugin` allows multiple images with the same source (URL)\n* Add `PlaceholderProvider` and `ErrorHandler` to `ImagesPlugin`\n* `GIF` and `SVG` media-decoders are automatically added to `ImagesPlugin` if required libraries are found in the classpath\n* `ImageItem` is now abstract, has 2 implementations: `withResult`, `withDecodingNeeded`\n* Add `images-glide`, `images-picasso`, `linkify`, `simple-ext` modules\n* `JLatexMathPlugin` is now independent of `ImagesPlugin`\n* Fix wrong `JLatexMathPlugin` formulas sizes ([#138])\n* `JLatexMathPlugin` has `backgroundProvider`, `executorService` configuration\n* `HtmlPlugin` is self-contained (all configuration is moved in the plugin itself)\n\n[#76]: https://github.com/noties/Markwon/issues/76\n[#138]: https://github.com/noties/Markwon/issues/138\n\n# 3.1.0\n* `AsyncDrawable` exposes `ImageSize`, `ImageSizeResolver` and last known dimensions (canvas width and text size)\n* `AsyncDrawableLoader` `load` and `cancel` signatures change - both accept an `AsyncDrawable`\n* Fix for multiple images with the same source in `AsyncDrawableLoader` \n\nWith this release `Markwon` `3.x.x` version goes into maintenance mode. \nNo new features will be added in `3.x.x` version, development is focused on `4.x.x` version.\n\n\n# 3.0.2\n* Fix `latex` plugin ([#136])\n* Add `#create(Call.Factory)` factory method to `OkHttpImagesPlugin` ([#129])\n<br>Thanks to [@ZacSweers] \n\n[#136]: https://github.com/noties/Markwon/issues/136\n[#129]: https://github.com/noties/Markwon/issues/129\n[@ZacSweers]: https://github.com/ZacSweers\n\n\n# 3.0.1\n* Add `AsyncDrawableLoader.Builder#implementation` method ([#109])\n* AsyncDrawable allow placeholder to have independent size ([#115])\n* `addFactory` method for MarkwonSpansFactory\n* Add optional spans for list blocks (bullet and ordered)\n* AsyncDrawable placeholder bounds fix\n* SpannableBuilder setSpans allow array of arrays\n* Add `requireFactory` method to MarkwonSpansFactory\n* Add DrawableUtils\n\n[#109]: https://github.com/noties/Markwon/issues/109\n[#115]: https://github.com/noties/Markwon/issues/115\n\n\n# 3.0.0\n* Plugins, plugins, plugins\n* Split basic functionality blocks into standalone modules\n* Maven artifacts group changed to `ru.noties.markwon` (previously had been `ru.noties`)\n* removed `markwon`, `markwon-image-loader`, `markwon-html-pareser-api`, `markwon-html-parser-impl`, `markwon-view` modules\n* new module system: `core`, `ext-latex`, `ext-strikethrough`, `ext-tables`, `ext-tasklist`, `html`, `image-gif`, `image-okhttp`, `image-svg`, `recycler`, `recycler-table`, `syntax-highlight`\n* Add BufferType option for Markwon configuration\n* Fix typo in AsyncDrawable waitingForDimensions\n* New tests format\n* `Markwon.render` returns `Spanned` instance of generic `CharSequence`\n* LinkMovementMethod is applied implicitly if not set on a TextView explicitly\n* Split code and codeBlock spans and factories\n* Add CustomTypefaceSpan \n* Add NoCopySpansFactory\n* Add placeholder to image loading\n\nGenerally speaking there are a lot of changes. Most of them are not backwards-compatible.\nThe main point of this release is the `Plugin` system that allows more fluent configuration\nand opens the possibility of extending `Markwon` with 3rd party functionality in a simple\nand intuitive fashion. Please refer to the [documentation web-site](https://noties.github.io/Markwon)\nthat has information on how to start migration.\n\nThe shortest excerpt of this release can be expressed like this:\n\n```java\n// previous v2.x.x way\nMarkwon.setMarkdown(textView, \"**Hello there!**\");\n```\n\n```java\n// 3.x.x\nMarkwon.create(context)\n        .setMarkdown(textView, \"**Hello there!**\");\n```\n\nBut there is much more to it, please visit documentation web-site\nto get the full picture of latest changes.\n\n# 2.0.1\n* `SpannableMarkdownVisitor` Rename blockQuoteIndent to blockIndent\n* Fixed block new lines logic for block quote and paragraph ([#82])\n* AsyncDrawable fix no dimensions bug ([#81])\n* Update SpannableTheme to use Px instead of Dimension annotation\n* Allow TaskListSpan isDone mutation\n* Updated commonmark-java to 0.12.1\n* Add OrderedListItemSpan measure utility method ([#78])\n* Add SpannableBuilder#getSpans method\n* Fix DataUri scheme handler in image-loader ([#74])\n* Introduced a \"copy\" builder for SpannableThem\n<br>Thanks [@c-b-h]\n\n[#82]: https://github.com/noties/Markwon/issues/82\n[#81]: https://github.com/noties/Markwon/issues/81\n[#78]: https://github.com/noties/Markwon/issues/78\n[#74]: https://github.com/noties/Markwon/issues/74\n[@c-b-h]: https://github.com/c-b-h\n\n\n# 2.0.0\n* Add `html-parser-api` and `html-parser-impl` modules\n* Add `HtmlEmptyTagReplacement`\n* Implement Appendable and CharSequence in SpannableBuilder\n* Renamed library modules to reflect maven artifact names\n* Rename `markwon-syntax` to `markwon-syntax-highlight`\n* Add HtmlRenderer asbtraction\n* Add CssInlineStyleParser\n* Fix Theme#listItemColor and OL\n* Fix task list block parser to revert parsing state when line is not matching\n* Defined test format files\n* image-loader add datauri parser\n* image-loader add support for inline data uri image references\n* Add travis configuration\n* Fix image with width greater than canvas scaled\n* Fix blockquote span\n* Dealing with white spaces at the end of a document\n* image-loader add SchemeHandler abstraction\n* Add sample-latex-math module\n\n# 1.1.1\n* Fix OrderedListItemSpan text position (baseline) ([#55])\n* Add softBreakAddsNewLine option for SpannableConfiguration ([#54])\n* Paragraph text can now explicitly be spanned ([#58])\n<br>Thanks to [@c-b-h]\n* Fix table border color if odd background is specified ([#56])\n* Add table customizations (even and header rows)\n\n[#55]: https://github.com/noties/Markwon/issues/55\n[#54]: https://github.com/noties/Markwon/issues/54\n[#58]: https://github.com/noties/Markwon/issues/58\n[#56]: https://github.com/noties/Markwon/issues/56\n[@c-b-h]: https://github.com/c-b-h\n\n\n# 1.1.0\n* Update commonmark to 0.11.0 and android-gif to 1.2.14\n* Add syntax highlight functionality (`library-syntax` module and `markwon-syntax` artifact)\n* Add headingTypeface, headingTextSizes to SpannableTheme\n<br>Thanks to [@edenman]\n* Introduce `MediaDecoder` abstraction to `image-loader` module\n* Introduce `SpannableFactory`\n<br>Thanks for idea to [@c-b-h]\n* Update sample application to use syntax-highlight\n* Update sample application to use clickable placeholder for GIF media\n\n[@edenman]: https://github.com/edenman\n[@c-b-h]: https://github.com/c-b-h\n\n\n# 1.0.6\n* Fix bullet list item size (depend on text size and not top-bottom arguments)\n* Add ability to specify MovementMethod when applying markdown to a TextView\n* Markdown images size is also resolved via ImageSizeResolver\n* Moved `ImageSize`, `ImageSizeResolver` and `ImageSizeResolverDef` \nto `ru.noties.markwon.renderer` package (one level up, previously `ru.noties.markwon.renderer.html`)\n\n# 1.0.5\n* Change LinkSpan to extend URLSpan. Allow default linkColor (if not set explicitly)\n* Fit an image without dimensions to canvas width (and keep ratio)\n* Add support for separate color for code blocks ([#37])\n<br>Thanks to [@Arcnor]\n\n[#37]: https://github.com/noties/Markwon/issues/37\n[@Arcnor]: https://github.com/Arcnor\n\n\n# 1.0.4\n* Fixes [#28] (tables are not rendered when at the end of the markdown)\n* Adds support for `indented code blocks`\n<br>Thanks to [@dlew]\n\n[#28]: https://github.com/noties/Markwon/issues/\n[@dlew]: https://github.com/dlew\n\n\n# 1.0.3\n* Fixed ordered lists (when number width is greater than block margin)\n\n# 1.0.2\n* Fixed additional white spaces at the end of parsed markdown\n* Fixed headings with no underline (levels 1 &amp; 2)\n* Tables can have no borders\n\n# 1.0.1\n* Support for task-lists ([#2])\n* Spans now are applied in reverse order ([#5] [#10])\n* Added `SpannableBuilder` to follow the reverse order of spans\n* Updated `commonmark-java` to `0.10.0`\n* Fixes [#1]\n\n[#1]: https://github.com/noties/Markwon/issues/1\n[#2]: https://github.com/noties/Markwon/issues/2\n[#5]: https://github.com/noties/Markwon/issues/5\n[#10]: https://github.com/noties/Markwon/issues/10\n\n\n# 1.0.0\n\nInitial release"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0595703125,
          "content": "Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.3359375,
          "content": "![logo](./art/markwon_logo.png)\n\n# Markwon\n\n[![Build](https://github.com/noties/Markwon/workflows/Build/badge.svg)](https://github.com/noties/Markwon/actions)\n\n**Markwon** is a markdown library for Android. It parses markdown\nfollowing [commonmark-spec] with the help of amazing [commonmark-java]\nlibrary and renders result as _Android-native_ Spannables. **No HTML**\nis involved as an intermediate step. <u>**No WebView** is required</u>.\nIt's extremely fast, feature-rich and extensible.\n\nIt gives ability to display markdown in all TextView widgets\n(**TextView**, **Button**, **Switch**, **CheckBox**, etc), **Toasts**\nand all other places that accept **Spanned content**. Library provides\nreasonable defaults to display style of a markdown content but also \ngives all the means to tweak the appearance if desired. All markdown\nfeatures listed in [commonmark-spec] are supported\n(including support for **inlined/block HTML code**, **markdown tables**,\n**images** and **syntax highlight**).\n\n`Markwon` comes with a [sample application](./app-sample/). It is a\ncollection of library usages that comes with search and source code for\neach code sample.\n\nSince version **4.2.0** **Markwon** comes with an [editor](./markwon-editor/) to _highlight_ markdown input\nas user types (for example in **EditText**).\n\n[commonmark-spec]: https://spec.commonmark.org/0.28/\n[commonmark-java]: https://github.com/atlassian/commonmark-java/blob/master/README.md\n\n## Installation\n\n![stable](https://img.shields.io/maven-central/v/io.noties.markwon/core.svg?label=stable)\n![snapshot](https://img.shields.io/nexus/s/https/oss.sonatype.org/io.noties.markwon/core.svg?label=snapshot)\n\n```kotlin\nimplementation \"io.noties.markwon:core:${markwonVersion}\"\n```\n\nFull list of available artifacts is present in the [install section](https://noties.github.io/Markwon/docs/v4/install.html)\nof the [documentation] web-site.\n\nPlease visit [documentation] web-site for further reference.\n\n\n> You can find previous version of Markwon in [2.x.x](https://github.com/noties/Markwon/tree/2.x.x)\nand [3.x.x](https://github.com/noties/Markwon/tree/3.x.x) branches\n\n\n## Supported markdown features:\n* Emphasis (`*`, `_`)\n* Strong emphasis (`**`, `__`)\n* Strike-through (`~~`)\n* Headers (`#{1,6}`)\n* Links (`[]()` && `[][]`)\n* Images\n* Thematic break (`---`, `***`, `___`)\n* Quotes & nested quotes (`>{1,}`)\n* Ordered & non-ordered lists & nested ones\n* Inline code\n* Code blocks\n* Tables (*with limitations*)\n* Syntax highlight\n* LaTeX formulas\n* HTML\n  * Emphasis (`<i>`, `<em>`, `<cite>`, `<dfn>`)\n  * Strong emphasis (`<b>`, `<strong>`)\n  * SuperScript (`<sup>`)\n  * SubScript (`<sub>`)\n  * Underline (`<u>`, `ins`)\n  * Strike-through (`<s>`, `<strike>`, `<del>`)\n  * Link (`a`)\n  * Lists (`ul`, `ol`)\n  * Images (`img` will require configured image loader)\n  * Blockquote (`blockquote`)\n  * Heading (`h1`, `h2`, `h3`, `h4`, `h5`, `h6`)\n  * there is support to render any HTML tag\n* Task lists:\n- [ ] Not _done_\n  - [X] **Done** with `X`\n  - [x] ~~and~~ **or** small `x`\n---\n\n## Screenshots\n\nTaken with default configuration (except for image loading) in [sample app](./app-sample/):\n\n<a href=\"./art/mw_light_01.png\"><img src=\"./art/mw_light_01.png\" width=\"30%\" /></a>\n<a href=\"./art/mw_light_02.png\"><img src=\"./art/mw_light_02.png\" width=\"30%\" /></a>\n<a href=\"./art/mw_light_03.png\"><img src=\"./art/mw_light_03.png\" width=\"30%\" /></a>\n<a href=\"./art/mw_dark_01.png\"><img src=\"./art/mw_dark_01.png\" width=\"30%\" /></a>\n\nBy default configuration uses TextView textColor for styling, so changing textColor changes style\n\n---\n\n## Documentation\n\nPlease visit [documentation] web-site for reference\n\n[documentation]: https://noties.github.io/Markwon\n\n\n## Consulting\nPaid consulting is available. Please reach me out at [markwon+consulting[at]noties.io](mailto:markwon+consulting@noties.io)\nto discuss your idea or a project\n\n---\n\n# Demo\nBased on [this cheatsheet][cheatsheet]\n\n---\n\n## Headers\n---\n# Header 1\n## Header 2\n### Header 3\n#### Header 4\n##### Header 5\n###### Header 6\n---\n\n## Emphasis\n\nEmphasis, aka italics, with *asterisks* or _underscores_.\n\nStrong emphasis, aka bold, with **asterisks** or __underscores__.\n\nCombined emphasis with **asterisks and _underscores_**.\n\nStrikethrough uses two tildes. ~~Scratch this.~~\n\n---\n\n## Lists\n1. First ordered list item\n2. Another item\n  * Unordered sub-list.\n1. Actual numbers don't matter, just that it's a number\n  1. Ordered sub-list\n4. And another item.\n\n   You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).\n\n   To have a line break without a paragraph, you will need to use two trailing spaces.\n   Note that this line is separate, but within the same paragraph.\n   (This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)\n\n* Unordered list can use asterisks\n- Or minuses\n+ Or pluses\n\n---\n\n## Links\n\n[I'm an inline-style link](https://www.google.com)\n\n[I'm a reference-style link][Arbitrary case-insensitive reference text]\n\n[I'm a relative reference to a repository file](../blob/master/LICENSE)\n\n[You can use numbers for reference-style link definitions][1]\n\nOr leave it empty and use the [link text itself].\n\n---\n\n## Code\n\nInline `code` has `back-ticks around` it.\n\n```javascript\nvar s = \"JavaScript syntax highlighting\";\nalert(s);\n```\n\n```python\ns = \"Python syntax highlighting\"\nprint s\n```\n\n```java\n/**\n * Helper method to obtain a Parser with registered strike-through &amp; table extensions\n * &amp; task lists (added in 1.0.1)\n *\n * @return a Parser instance that is supported by this library\n * @since 1.0.0\n */\n@NonNull\npublic static Parser createParser() {\n  return new Parser.Builder()\n      .extensions(Arrays.asList(\n          StrikethroughExtension.create(),\n          TablesExtension.create(),\n          TaskListExtension.create()\n      ))\n      .build();\n}\n```\n\n```xml\n<ScrollView\n  android:id=\"@+id/scroll_view\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\"\n  android:layout_marginTop=\"?android:attr/actionBarSize\">\n\n  <TextView\n    android:id=\"@+id/text\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:layout_margin=\"16dip\"\n    android:lineSpacingExtra=\"2dip\"\n    android:textSize=\"16sp\"\n    tools:text=\"yo\\nman\" />\n\n</ScrollView>\n```\n\n```\nNo language indicated, so no syntax highlighting.\nBut let's throw in a <b>tag</b>.\n```\n\n---\n\n## Tables\n\nColons can be used to align columns.\n\n| Tables        | Are           | Cool  |\n| ------------- |:-------------:| -----:|\n| col 3 is      | right-aligned | $1600 |\n| col 2 is      | centered      |   $12 |\n| zebra stripes | are neat      |    $1 |\n\nThere must be at least 3 dashes separating each header cell.\nThe outer pipes (|) are optional, and you don't need to make the\nraw Markdown line up prettily. You can also use inline Markdown.\n\nMarkdown | Less | Pretty\n--- | --- | ---\n*Still* | `renders` | **nicely**\n1 | 2 | 3\n\n---\n\n## Blockquotes\n\n> Blockquotes are very handy in email to emulate reply text.\n> This line is part of the same quote.\n\nQuote break.\n\n> This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.\n\nNested quotes\n> Hello!\n>> And to you!\n\n---\n\n## Inline HTML\n\n```html\n<u><i>H<sup>T<sub>M</sub></sup><b><s>L</s></b></i></u>\n```\n\n<u><i>H<sup>T<sub>M</sub></sup><b><s>L</s></b></i></u>\n\n---\n\n## Horizontal Rule\n\nThree or more...\n\n---\n\nHyphens (`-`)\n\n***\n\nAsterisks (`*`)\n\n___\n\nUnderscores (`_`)\n\n\n## License\n\n```\n  Copyright 2019 Dimitry Ivanov (legal@noties.io)\n\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n\n      http://www.apache.org/licenses/LICENSE-2.0\n\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n```\n\n[cheatsheet]: https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\n\n[arbitrary case-insensitive reference text]: https://www.mozilla.org\n[1]: http://slashdot.org\n[link text itself]: http://www.reddit.com\n"
        },
        {
          "name": "app-sample",
          "type": "tree",
          "content": null
        },
        {
          "name": "art",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 5.587890625,
          "content": "buildscript {\n    ext.kotlin_version = '1.4.10'\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:4.0.2'\n        classpath 'com.github.ben-manes:gradle-versions-plugin:0.28.0'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version\"\n    }\n}\n\nallprojects {\n    repositories {\n        if (project.hasProperty('LOCAL_MAVEN_URL')) {\n            maven { url LOCAL_MAVEN_URL }\n        }\n        google()\n        jcenter()\n//        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }\n    }\n    version = VERSION_NAME\n    group = GROUP\n\n    // do we actually need javadoc any more?\n    tasks.withType(Javadoc) {\n        enabled = false\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n\nwrapper {\n    gradleVersion '6.1.1'\n    distributionType 'all'\n}\n\nif (hasProperty('local')) {\n    if (!hasProperty('LOCAL_MAVEN_URL')) {\n        throw new RuntimeException('Cannot publish to local maven as no such property exists: LOCAL_MAVEN_URL')\n    }\n    ext.RELEASE_REPOSITORY_URL = LOCAL_MAVEN_URL\n    ext.SNAPSHOT_REPOSITORY_URL = LOCAL_MAVEN_URL\n}\n\next {\n\n    config = [\n            'build-tools'    : '29.0.3',\n            'compile-sdk'    : 29,\n            'target-sdk'     : 29,\n            'min-sdk'        : 16,\n            'push-aar-gradle': 'https://raw.githubusercontent.com/noties/gradle-mvn-push/master/gradle-mvn-push-aar.gradle'\n    ]\n\n    final def commonMarkVersion = '0.13.0'\n    final def daggerVersion = '2.10'\n    final def coilVersion = '0.13.0'\n\n    // please note that `pl.droidsonroids.gif:android-gif-drawable:1.2.15` is used due to the minimum\n    // api level mismatch that Markwon supports (16) and later versions of AndroidGifDrawable (17).\n    // It should not be a problem as this dependency is used as `compileOnly` and users\n    // must specify version explicitly (until library's API changes...)\n\n    deps = [\n            'x-annotations'           : 'androidx.annotation:annotation:1.1.0',\n            'x-recycler-view'         : 'androidx.recyclerview:recyclerview:1.0.0',\n            'x-core'                  : 'androidx.core:core:1.0.2',\n            'x-appcompat'             : 'androidx.appcompat:appcompat:1.1.0',\n            'x-cardview'              : 'androidx.cardview:cardview:1.0.0',\n            'x-fragment'              : 'androidx.fragment:fragment:1.0.0',\n            'commonmark'              : \"com.atlassian.commonmark:commonmark:$commonMarkVersion\",\n            'commonmark-strikethrough': \"com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:$commonMarkVersion\",\n            'commonmark-table'        : \"com.atlassian.commonmark:commonmark-ext-gfm-tables:$commonMarkVersion\",\n            'android-svg'             : 'com.caverock:androidsvg:1.4',\n            // we need 2 gif artifacts at long as we have a difference in version used for API compatibility\n            'android-gif'             : 'pl.droidsonroids.gif:android-gif-drawable:1.2.15',\n            'android-gif-impl'        : 'pl.droidsonroids.gif:android-gif-drawable:1.2.20',\n            'jlatexmath-android'      : 'ru.noties:jlatexmath-android:0.2.0',\n            'okhttp'                  : 'com.squareup.okhttp3:okhttp:3.9.0',\n            'prism4j'                 : 'io.noties:prism4j:2.0.0',\n            'debug'                   : 'io.noties:debug:5.1.0',\n            'adapt'                   : 'io.noties:adapt:2.2.0',\n            'dagger'                  : \"com.google.dagger:dagger:$daggerVersion\",\n            'picasso'                 : 'com.squareup.picasso:picasso:2.71828',\n            'glide'                   : 'com.github.bumptech.glide:glide:4.11.0',\n            'coil'                    : \"io.coil-kt:coil:$coilVersion\",\n            'coil-base'               : \"io.coil-kt:coil-base:$coilVersion\",\n            'ix-java'                 : 'com.github.akarnokd:ixjava:1.0.0',\n            'gson'                    : 'com.google.code.gson:gson:2.8.6',\n            'commons-io'              : 'commons-io:commons-io:2.6'\n    ]\n\n    deps['annotationProcessor'] = [\n            'prism4j-bundler': 'io.noties:prism4j-bundler:2.0.0',\n            'dagger-compiler': \"com.google.dagger:dagger-compiler:$daggerVersion\"\n    ]\n\n    deps['test'] = [\n            'junit'               : 'junit:junit:4.12',\n            'robolectric'         : 'org.robolectric:robolectric:3.8',\n            'mockito'             : 'org.mockito:mockito-core:2.21.0',\n            'commonmark-test-util': \"com.atlassian.commonmark:commonmark-test-util:$commonMarkVersion\",\n    ]\n\n    registerArtifact = this.&registerArtifact\n}\n\ntask checkUpdates {\n    apply plugin: 'com.github.ben-manes.versions'\n    dependsOn 'dependencyUpdates'\n}\n\ndef registerArtifact(project) {\n\n    if (hasProperty('release')) {\n\n        // to be used in github actions (to publish a snapshot)\n        // but only if we have snapshot in the version name\n        if (hasProperty('CI') && VERSION_NAME.contains('SNAPSHOT')) {\n            ext.NEXUS_USERNAME = System.getenv('NEXUS_USERNAME')\n            ext.NEXUS_PASSWORD = System.getenv('NEXUS_PASSWORD')\n        }\n\n        project.apply from: config['push-aar-gradle']\n    }\n\n    project.afterEvaluate {\n\n        // disable generation of BuildConfig files\n        project.generateDebugBuildConfig.enabled = false\n        project.generateReleaseBuildConfig.enabled = false\n\n        // print test status (for CI)\n        project.android.testOptions.unitTests.all {\n            testLogging {\n                events \"passed\", \"skipped\", \"failed\"\n                exceptionFormat \"short\"\n                showStandardStreams = true\n            }\n        }\n    }\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.7470703125,
          "content": "org.gradle.daemon=true\norg.gradle.jvmargs=-Xmx5g -Dfile.encoding=UTF-8\n#org.gradle.parallel=true\norg.gradle.configureondemand=true\n\nandroid.useAndroidX=true\nandroid.enableJetifier=true\nandroid.enableBuildCache=true\nandroid.buildCacheDir=build/pre-dex-cache\n\nVERSION_NAME=4.6.2\n\nGROUP=io.noties.markwon\nPOM_DESCRIPTION=Markwon markdown for Android\nPOM_URL=https://github.com/noties/Markwon\nPOM_SCM_URL=https://github.com/noties/Markwon\nPOM_SCM_CONNECTION=scm:git:git://github.com/noties/Markwon.git\nPOM_SCM_DEV_CONNECTION=scm:git:git://github.com/noties/Markwon.git\nPOM_LICENCE_NAME=The Apache Software License, Version 2.0\nPOM_LICENCE_URL=http://www.apache.org/licenses/LICENSE-2.0.txt\nPOM_LICENCE_DIST=repo\nPOM_DEVELOPER_ID=noties\nPOM_DEVELOPER_NAME=Dimitry Ivanov"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.62890625,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.873046875,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "markwon-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-editor",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-ext-latex",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-ext-strikethrough",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-ext-tables",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-ext-tasklist",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-html",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-image-coil",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-image-glide",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-image-picasso",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-image",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-inline-parser",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-linkify",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-recycler-table",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-recycler",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-simple-ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-syntax-highlight",
          "type": "tree",
          "content": null
        },
        {
          "name": "markwon-test-span",
          "type": "tree",
          "content": null
        },
        {
          "name": "release-management.md",
          "type": "blob",
          "size": 1.4140625,
          "content": "# Release checklist\n- [ ] CHANGELOG.md has proper version for released changes\n- [ ] Code occurrences of `@since $SNAPSHOT;` are replaced with proper version (`@deprecated` also)\n- [ ] `gradle.properties` has proper version (NOT SNAPSHOT)\n- [ ] documentation web site is published (if has changes)\n\n\n# Release management\n\nDevelopment happens in the `master` branch. Although CI (via Github workflows) is triggered\nwith each push, all releases are happening in manual mode (stable and snapshot versions \nof the library and the sample app).\n\n```\n# Stable and snapshot library release (depending on the version specified in `gradle.properties`)\n./gradlew upA -Prelease\n\n# Sample app release\n./app-sample/deploy.sh\n```\n\nTests must be run before releasing (either locally or via CI).\n\n## `@since` annotation\n\nAll code changes should have a documentation comment with version of the library specified.\nFor changes before _stable_ release (snapshots) a special `$SNAPSHOT;` version can be used\n(useful when the next version name of the library is still not known).\n\n```java\n/**\n * @since $SNAPSHOT;\n */\n\n// @since $SNAPSHOT;\n```\n\nThese changes must also be placed in according section of the `CHANGELOG.md` file:\n* `Added`\n* `Changed`\n* `Fixed`\n* `Deprecated`\n* `Removed`\n\nStable release must replace all `$SNAPSHOT;` occurrences with proper library version name.\n\n## Documentation\n\nIf there are updates to documentation web site these should be published"
        },
        {
          "name": "sample-utils",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.6328125,
          "content": "rootProject.name = 'MarkwonProject'\ninclude ':markwon-core',\n        ':markwon-editor',\n        ':markwon-ext-latex',\n        ':markwon-ext-strikethrough',\n        ':markwon-ext-tables',\n        ':markwon-ext-tasklist',\n        ':markwon-html',\n        ':markwon-image',\n        ':markwon-image-coil',\n        ':markwon-image-glide',\n        ':markwon-image-picasso',\n        ':markwon-inline-parser',\n        ':markwon-linkify',\n        ':markwon-recycler',\n        ':markwon-recycler-table',\n        ':markwon-simple-ext',\n        ':markwon-syntax-highlight',\n        ':markwon-test-span'\n\ninclude ':app-sample'\ninclude ':sample-utils:processor'\n"
        }
      ]
    }
  ]
}