{
  "metadata": {
    "timestamp": 1736608980395,
    "page": 188,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/malmo",
      "stars": 4119,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 2.458984375,
          "content": "###############################################################################\n# Set default behavior to automatically normalize line endings.\n###############################################################################\n* text=auto\n\n###############################################################################\n# Set default behavior for command prompt diff.\n#\n# This is need for earlier builds of msysgit that does not have it on by\n# default for csharp files.\n# Note: This is only used by command line\n###############################################################################\n#*.cs     diff=csharp\n\n###############################################################################\n# Set the merge driver for project and solution files\n#\n# Merging from the command prompt will add diff markers to the files if there\n# are conflicts (Merging from VS is not affected by the settings below, in VS\n# the diff markers are never inserted). Diff markers may cause the following \n# file extensions to fail to load in VS. An alternative would be to treat\n# these files as binary and thus will always conflict and require user\n# intervention with every merge. To do so, just uncomment the entries below\n###############################################################################\n#*.sln       merge=binary\n#*.csproj    merge=binary\n#*.vbproj    merge=binary\n#*.vcxproj   merge=binary\n#*.vcproj    merge=binary\n#*.dbproj    merge=binary\n#*.fsproj    merge=binary\n#*.lsproj    merge=binary\n#*.wixproj   merge=binary\n#*.modelproj merge=binary\n#*.sqlproj   merge=binary\n#*.wwaproj   merge=binary\n\n###############################################################################\n# behavior for image files\n#\n# image files are treated as binary by default.\n###############################################################################\n#*.jpg   binary\n#*.png   binary\n#*.gif   binary\n\n###############################################################################\n# diff behavior for common document formats\n# \n# Convert binary document formats to text before diffing them. This feature\n# is only available from the command line. Turn it on by uncommenting the \n# entries below.\n###############################################################################\n#*.doc   diff=astextplain\n#*.DOC   diff=astextplain\n#*.docx  diff=astextplain\n#*.DOCX  diff=astextplain\n#*.dot   diff=astextplain\n#*.DOT   diff=astextplain\n#*.pdf   diff=astextplain\n#*.PDF   diff=astextplain\n#*.rtf   diff=astextplain\n#*.RTF   diff=astextplain\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.162109375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\nx64/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Roslyn cache directories\n*.ide/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n## TODO: Comment the next line if you want to checkin your\n## web deploy settings but do note that will include unencrypted\n## passwords\n#*.pubxml\n\n# NuGet Packages Directory\npackages/*\n## TODO: If the tool you use requires repositories.config\n## uncomment the next line\n#!packages/repositories.config\n/ExperimentStudio/packages\n/Installer/packages\n/ExperimentLauncher/packages\n/HumanAction/packages\n/CSharpAgents/Sample/packages\n/InstancePlayer/packages\n/MalmoPlatform/packages\n\n# Enable \"build/\" folder in the NuGet Packages folder since\n# NuGet packages use it for MSBuild targets.\n# This line needs to be after the ignore of the build folder\n# (and the packages folder if the line above has been uncommented)\n!packages/build/\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.bak\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# LightSwitch generated files\nGeneratedArtifacts/\n_Pvt_Extensions/\nModelManifest.xml\n\n# Eclipse/Java files\n*.class\n.classpath\n.gradle\n.settings\n.project\n/Mod/eclipse\n\n# IntelliJ files\n.idea\n\n# Python\n*.pyc\n\n# Thing specific to Project Malmo\nSchemas/xs3p.xsl\nMinecraft/run/config/malmomodCLIENT.cfg\nMinecraft/Minecraft_Client.launch\n\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.3603515625,
          "content": "language: cpp\n\nmatrix:\n  include:\n    - os: linux\n      sudo: required\n      dist: trusty\n      compiler: gcc\n    - os: osx\n      osx_image: xcode7.3\n      compiler: clang\n\nscript:\n  - if [[ \"$TRAVIS_OS_NAME\" == \"osx\" ]];   then travis_wait 40 .travis/ci_macosx.sh      ; fi\n  - if [[ \"$TRAVIS_OS_NAME\" == \"linux\" ]]; then travis_wait 40 .travis/ci_ubuntu14.04.sh ; fi\n"
        },
        {
          "name": ".travis",
          "type": "tree",
          "content": null
        },
        {
          "name": "ALE_ROMS",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 11.337890625,
          "content": "# ------------------------------------------------------------------------------------------------\n# Copyright (c) 2016 Microsoft Corporation\n# \n# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and\n# associated documentation files (the \"Software\"), to deal in the Software without restriction,\n# including without limitation the rights to use, copy, modify, merge, publish, distribute,\n# sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n# \n# The above copyright notice and this permission notice shall be included in all copies or\n# substantial portions of the Software.\n# \n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\n# NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n# ------------------------------------------------------------------------------------------------\n\ncmake_minimum_required( VERSION 3.8 )\n\nproject( Malmo )\n\n# -------------------- Options --------------------------------\n\nfile( STRINGS \"VERSION\" MALMO_VERSION_FILE )\nstring( REPLACE \".\" \";\" MALMO_VERSION_LIST ${MALMO_VERSION_FILE} )\nlist( GET MALMO_VERSION_LIST 0 MALMO_VERSION_MAJOR )\nlist( GET MALMO_VERSION_LIST 1 MALMO_VERSION_MINOR )\nlist( GET MALMO_VERSION_LIST 2 MALMO_VERSION_REVISION )\nset( MALMO_VERSION ${MALMO_VERSION_MAJOR}.${MALMO_VERSION_MINOR}.${MALMO_VERSION_REVISION} )\n\nmessage(\"Configure MALMO_VERSION at ${MALMO_VERSION}\")\n\n# N.B. Check that this version number matches the ones in the schemas.\n\nset( BUILD_MOD_DESC           \"Specifies whether to build the Malmo Minecraft Mod\" )\nset( BUILD_DOCUMENTATION_DESC \"Specifies whether to build the documentation for the API and XML\" )\nset( INCLUDE_ALE_DESC         \"Specifies whether to build Malmo with bindings to the Arcade Learning Environment\" )\nset( INCLUDE_CSHARP_DESC      \"Specifies whether to build Malmo with C# bindings\" )\nset( INCLUDE_JAVA_DESC        \"Specifies whether to build Malmo with Java bindings\" )\nset( INCLUDE_PYTHON_DESC      \"Specifies whether to build Malmo with Python bindings\" )\nset( STATIC_BOOST_DESC        \"Specifies whether to link Malmo statically against Boost\" )\nset( BUILD_MOD           ON  CACHE BOOL ${BUILD_MOD_DESC} )\nset( BUILD_DOCUMENTATION ON  CACHE BOOL ${BUILD_DOCUMENTATION_DESC} )\nset( INCLUDE_ALE         OFF CACHE BOOL ${INCLUDE_ALE_DESC} )\nset( INCLUDE_CSHARP      ON  CACHE BOOL ${INCLUDE_CSHARP_DESC} )\nset( INCLUDE_JAVA        ON  CACHE BOOL ${INCLUDE_JAVA_DESC} )\nset( INCLUDE_PYTHON      ON  CACHE BOOL ${INCLUDE_PYTHON_DESC} )\nset( STATIC_BOOST        ON CACHE BOOL ${STATIC_BOOST_DESC} )\n\nif( INCLUDE_PYTHON )\n  set( USE_PYTHON_VERSIONS_DESC \"Specifies which version of Python to build Malmo with Python bindings\" )\n  set( USE_PYTHON_VERSIONS 3.6 CACHE STRING ${USE_PYTHON_VERSIONS_DESC} )\n  if (NOT BOOST_PYTHON_NAME)\n    message(\"The name of the Boost Python library has not been set - trying to\n    determine it automatically...\")\n    set(BOOST_PYTHON_NAME_DESC \"Specifies which Boost Python module to build Malmo with\" )\n\n    if (Boost_VERSION VERSION_GREATER 1.67 )\n      # From version 1.67 and up, Boost appends the Python version number to\n      # the library name by default.\n      # (https://www.boost.org/users/history/version_1_67_0.html)\n      execute_process(\n        COMMAND python3 -c \"import sys; print('python' + str(sys.version_info[0]) + str(sys.version_info[1]), end='')\" \n        OUTPUT_VARIABLE BOOST_PYTHON_NAME\n      )\n    else()\n      set (BOOST_PYTHON_NAME \"python\")\n    endif()\n    message(\"BOOST_PYTHON_NAME set to ${BOOST_PYTHON_NAME}. To override it, add\n    the flag -DBOOST_PYTHON_NAME=<name> where <name> is the name of the Boost\n    Python library on your system (see https://github.com/boostorg/build/pull/250).\")\n  endif()\nendif()\n\nset( WARNINGS_AS_ERRORS OFF )\n\n# ------------------- Detect the system -----------------------\n\nif( APPLE )\n  set( SYSTEM_NAME \"Mac\" )\nelseif( UNIX )\n  set( SYSTEM_NAME \"Linux\" )\n  execute_process(COMMAND lsb_release -is OUTPUT_VARIABLE LSB_ID)\n  execute_process(COMMAND lsb_release -rs OUTPUT_VARIABLE LSB_RELEASE)\n  if( LSB_ID AND LSB_RELEASE )\n    string(STRIP \"${LSB_ID}\" LSB_ID)\n    string(STRIP \"${LSB_RELEASE}\" LSB_RELEASE)\n    set( SYSTEM_NAME \"${SYSTEM_NAME}-${LSB_ID}-${LSB_RELEASE}\")\n  elseif( EXISTS \"/etc/debian_version\")\n    file( READ /etc/debian_version DEBIAN_VERSION )\n    set( SYSTEM_NAME \"${SYSTEM_NAME}-${DEBIAN_VERSION}\")\n  elseif( EXISTS \"/etc/os-release\")\n    execute_process(COMMAND \"sed\" \"-ne\" \"s/^ID=\\\"\\\\?\\\\([a-z]\\\\+\\\\)\\\"\\\\?$/\\\\1/p\" \"/etc/os-release\" OUTPUT_VARIABLE OS_RELEASE_ID OUTPUT_STRIP_TRAILING_WHITESPACE)\n    execute_process(COMMAND \"sed\" \"-ne\" \"s/^VERSION_ID=\\\"\\\\?\\\\([0-9\\\\.]\\\\+\\\\)\\\"\\\\?$/\\\\1/p\" \"/etc/os-release\" OUTPUT_VARIABLE OS_RELEASE_VERSION_ID OUTPUT_STRIP_TRAILING_WHITESPACE)\n    set( SYSTEM_NAME \"${SYSTEM_NAME}-${OS_RELEASE_ID}-${OS_RELEASE_VERSION_ID}\")\n  elseif( EXISTS \"/etc/redhat-release\")\n    set( SYSTEM_NAME \"${SYSTEM_NAME}-Redhat\")\n  endif()\nelseif( WIN32 )\n  set( SYSTEM_NAME \"Windows\" )\nendif()\nif( CMAKE_SIZEOF_VOID_P EQUAL 8 )\n  set( SYSTEM_NAME \"${SYSTEM_NAME}-64bit\" )\nelse()\n  set( SYSTEM_NAME \"${SYSTEM_NAME}-32bit\" )\nendif()\n\n# -------------------- Find packages --------------------------\n\nif ( WIN32 )\n    enable_language( CSharp )\nelse()\n    set( INCLUDE_CSHARP OFF )\nendif()\n\nset( CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/cmake )\n\nSET(Boost_ADDITIONAL_VERSIONS \"1.65\" \"1.65.0\")\nSET(Boost_ADDITIONAL_VERSIONS \"1.66\" \"1.66.0\")\nSET(Boost_ADDITIONAL_VERSIONS \"1.67\" \"1.67.0\")\nSET(Boost_ADDITIONAL_VERSIONS \"1.68\" \"1.68.0\")\nSET(Boost_ADDITIONAL_VERSIONS \"1.69\" \"1.69.0\")\nSET(Boost_ADDITIONAL_VERSIONS \"1.70\" \"1.70.0\")\n\n# Boost release variant builds have symbol visibility set to hidden by default \n# (https://boostorg.github.io/build/manual/develop/index.html#bbv2.overview.builtins.features)\n# The line below adds compilation flags to make the visibility settings for compiling Malmo\n# consistent with the visibility settings for Boost, and fixes linking warnings emitted by the\n# GCC 9 compiler.\nset(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fvisibility=hidden -fvisibility-inlines-hidden\")\n\n# This allows users to override the Boost Python library name if different from\n# the defaults (this can occur with certain package managers - e.g. For Boost compiled against Python 3.6,\n# MacPorts would name the Boost Python library as libboost_python3 instead of libboost_python36).\n\n\nif( WIN32 )\n  SET(Boost_USE_STATIC_LIBS ON)\n  find_package( Boost COMPONENTS chrono date_time filesystem iostreams program_options ${BOOST_PYTHON_NAME} regex system thread REQUIRED )\n  add_definitions(-DBOOST_ALL_NO_LIB=1)  # Turn off auto-linking, creates problems when linking boost statically\nelse()\n  SET(Boost_USE_STATIC_LIBS ${STATIC_BOOST})\n  find_package( Boost COMPONENTS chrono date_time filesystem iostreams program_options ${BOOST_PYTHON_NAME} regex system thread REQUIRED )\n  set(CMAKE_THREAD_PREFER_PTHREAD TRUE)\n  find_package( Threads REQUIRED )\nendif()\n\n# suggested install paths - see readme.md\nif( NOT WIN32)\n  set( ALE_ROOT_DIR ~/ALE )\nendif()\n\nif( INCLUDE_CSHARP )\n  # Select the .NET architecture\n  if( CMAKE_SIZEOF_VOID_P EQUAL 8 )\n    set( CSHARP_PLATFORM \"x64\" CACHE STRING \"C# target platform: x86, x64, anycpu, or itanium\")\n  else()\n    set( CSHARP_PLATFORM \"x86\" CACHE STRING \"C# target platform: x86, x64, anycpu, or itanium\")\n  endif()\nendif()\n\nif( BUILD_DOCUMENTATION )\n  find_package( Doxygen REQUIRED )\nendif()\n\nfind_package( Git REQUIRED )\nfind_package( ZLIB REQUIRED )\n\nif ( INCLUDE_JAVA OR BUILD_MOD )\n   find_package( Java REQUIRED COMPONENTS Runtime Development ) \nendif()\n\nif( INCLUDE_JAVA )\n  find_package( JNI REQUIRED) \nendif()\n\nif( INCLUDE_PYTHON )\n  set( Python_ADDITIONAL_VERSIONS ${USE_PYTHON_VERSIONS} )\n  find_package( PythonInterp ${USE_PYTHON_VERSIONS} REQUIRED )\n  find_package( PythonLibs ${USE_PYTHON_VERSIONS} REQUIRED )\nendif()\n\nfind_package( SWIG REQUIRED )\n\nif( INCLUDE_ALE )\n  find_package(ALE QUIET)\n  if( NOT ALE_FOUND )\n    message( \"\" )\n    message( \" ====   WARNING: ====\" )\n    message( \"\" )\n    message( \" ALE was not found! Build will proceed but without the ALE parts included.\" )\n    message( \"\" )\n    set( INCLUDE_ALE OFF CACHE BOOL ${INCLUDE_ALE_DESC} FORCE )\n  endif()\nendif()\n\n# -------------------- Build settings -----------------------------\n\n# use C++11\nif (CMAKE_VERSION VERSION_LESS \"3.1\")\n  if (CMAKE_CXX_COMPILER_ID STREQUAL \"GNU\")\n    set (CMAKE_CXX_FLAGS \"--std=gnu++11 ${CMAKE_CXX_FLAGS}\")\n  endif ()\nelse ()\n  set (CMAKE_CXX_STANDARD 11)\nendif ()\n \nif( MSVC )\n  set( MALMO_PYTHON_DIR ${CMAKE_BINARY_DIR}/Malmo/src/PythonWrapper/$<CONFIG> )\n  set( MALMO_CSHARP_DIR ${CMAKE_BINARY_DIR}/Malmo/src/CSharpWrapper/$<CONFIG> )\n  if( WARNINGS_AS_ERRORS )\n    set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} /WX\" )\n  endif()\n  # set the Windows target version to WinXP or later\n  set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D_WIN32_WINNT=0x0501\" )\n  set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS\" )\nelse()\n  set( MALMO_PYTHON_DIR ${CMAKE_BINARY_DIR}/Malmo/src/PythonWrapper )\n  set( MALMO_CSHARP_DIR ${CMAKE_BINARY_DIR}/Malmo/src/CSharpWrapper )\n  set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fPIC\" )\n  if( WARNINGS_AS_ERRORS )\n    set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Werror\" )\n  else()\n    set( CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations\" ) # get a lot of warnings from Boost about auto_ptr\n  endif()  \nendif()\n\nif( APPLE )\n  add_definitions( -DAPPLE )\n  set( CMAKE_MACOSX_RPATH ON )\nendif()\n\n# -------------------- Testing ------------------------------------\n\nset( BUILDNAME ${CMAKE_SYSTEM} ) # including version numbers\nif( MSVC )\n  set( BUILDNAME \"${BUILDNAME}_MSVC\" )\nelseif( CMAKE_COMPILER_IS_GNUCXX )\n  set( BUILDNAME \"${BUILDNAME}_gcc\" )\nelse()\n  set( BUILDNAME \"${BUILDNAME}_${CMAKE_CXX_COMPILER}\" )\nendif()\n\nif( CMAKE_SIZEOF_VOID_P EQUAL 8 )\n  set( BUILDNAME \"${BUILDNAME}_64bit\" )\nelse()\n  set( BUILDNAME \"${BUILDNAME}_32bit\" )\nendif()\n\ninclude( CTest )\n\nset( CMAKE_INSTALL_PREFIX \"install\" ) # useful for testing the sample scripts\n\n# -------------------- Walk the subdirectories --------------------\n\nadd_subdirectory( Malmo )\nif( BUILD_MOD )\n  add_subdirectory( Minecraft )\nendif()\nif( BUILD_DOCUMENTATION )\n  add_subdirectory( doc )\nendif()\nadd_subdirectory( Schemas )\nadd_subdirectory( scripts )\nadd_subdirectory( sample_missions )\nif( INCLUDE_ALE )\n  add_subdirectory( ALE_ROMS )\nendif()\n\n# Save a small properties file, so we can easily tell what version of python this was built against, etc.\nconfigure_file( ${CMAKE_CURRENT_SOURCE_DIR}/malmo.properties malmo.properties )\nINSTALL( FILES ${CMAKE_BINARY_DIR}/malmo.properties DESTINATION .)\n\n# -------------------- Package ------------------------------------\nif( INCLUDE_ALE )\n  set( SYSTEM_NAME \"${SYSTEM_NAME}_withALE\" )\nendif()\nif ( STATIC_BOOST )\n  set( SYSTEM_NAME \"${SYSTEM_NAME}_withBoost\" )\nendif()\nset( SYSTEM_NAME \"${SYSTEM_NAME}_Python${USE_PYTHON_VERSIONS}\" )\nset( CPACK_SYSTEM_NAME ${SYSTEM_NAME} )\nset( CPACK_PACKAGE_VERSION \"${MALMO_VERSION}\" )\nset( CPACK_GENERATOR \"ZIP\" )\nset( CPACK_SOURCE_GENERATOR \"ZIP\" )\ninclude( CPack )\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.05859375,
          "content": "MIT License\n\nCopyright (c) 2016, 2018 Microsoft Corporation\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and\nassociated documentation files (the \"Software\"), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge, publish, distribute,\nsublicense, and/or sell copies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT\nNOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Malmo",
          "type": "tree",
          "content": null
        },
        {
          "name": "MalmoEnv",
          "type": "tree",
          "content": null
        },
        {
          "name": "Minecraft",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.0595703125,
          "content": "# Malmö #\n\nProject Malmö is a platform for Artificial Intelligence experimentation and research built on top of Minecraft. We aim to inspire a new generation of research into challenging new problems presented by this unique environment.\n\n[![Join the chat at https://gitter.im/Microsoft/malmo](https://badges.gitter.im/Microsoft/malmo.svg)](https://gitter.im/Microsoft/malmo?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Build Status](https://travis-ci.org/Microsoft/malmo.svg?branch=master)](https://travis-ci.org/Microsoft/malmo) [![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://github.com/Microsoft/malmo/blob/master/LICENSE.txt)\n----\n    \n## Getting Started ##\n\n### MalmoEnv ###\n\nMalmoEnv implements an Open AI \"gym\"-like environment in Python without any native code (communicating directly with Java Minecraft). If you only need this functionallity then please see [MalmoEnv](https://github.com/Microsoft/malmo/tree/master/MalmoEnv). This will most likely be the preferred way to develop with Malmo Minecraft going forward.\n\nIf you wish to use the \"native\" Malmo implementation, either install the \"Malmo native Python wheel\" (if available for your platform) or a pre-built binary release (more on these options below). Building Malmo yourself from source is always an option!\n\nAdvantages:\n    \n1. No native code - you don't have to build or install platform dependent code.\n2. A single network connection is used to run missions. No dynamic ports means it's more virtualization friendly.\n3. A simpler multi-agent coordination protocol. \nOne Minecraft client instance, one single port is used to start missions.\n4. Less impedance miss-match with the gym api.\n\nDisadvantages:\n\n1. The existing Malmo examples are not supported (as API used is different). \nMarlo envs should work with this [port](https://github.com/AndKram/marLo/tree/malmoenv).\n2. The API is more limited (e.g. selecting video options) - can edit mission xml directly.\n\n### Malmo as a native Python wheel ###\n\nOn common Windows, MacOSX and Linux variants it is possible to use ```pip3 install malmo``` to install Malmo as a python with native code package: [Pip install for Malmo](https://github.com/Microsoft/malmo/blob/master/scripts/python-wheel/README.md). Once installed, the malmo Python module can be used to download source and examples and start up Minecraft with the Malmo game mod. \n\nAlternatively, a pre-built version of Malmo can be installed as follows:\n\n1. [Download the latest *pre-built* version, for Windows, Linux or MacOSX.](https://github.com/Microsoft/malmo/releases)   \n      NOTE: This is _not_ the same as downloading a zip of the source from Github. _Doing this **will not work** unless you are planning to build the source code yourself (which is a lengthier process). If you get errors along the lines of \"`ImportError: No module named MalmoPython`\" it will probably be because you have made this mistake._\n\n2. Install the dependencies for your OS: [Windows](doc/install_windows.md), [Linux](doc/install_linux.md), [MacOSX](doc/install_macosx.md).\n\n3. Launch Minecraft with our Mod installed. Instructions below.\n\n4. Launch one of our sample agents, as Python, C#, C++ or Java. Instructions below.\n\n5. Follow the [Tutorial](https://github.com/Microsoft/malmo/blob/master/Malmo/samples/Python_examples/Tutorial.pdf) \n\n6. Explore the [Documentation](http://microsoft.github.io/malmo/). This is also available in the readme.html in the release zip.\n\n7. Read the [Blog](http://microsoft.github.io/malmo/blog) for more information.\n\nIf you want to build from source then see the build instructions for your OS: [Windows](doc/build_windows.md), [Linux](doc/build_linux.md), [MacOSX](doc/build_macosx.md).\n\n----\n\n## Problems: ##\n\nWe're building up a [Troubleshooting](https://github.com/Microsoft/malmo/wiki/Troubleshooting) page of the wiki for frequently encountered situations. If that doesn't work then please ask a question on our [chat page](https://gitter.im/Microsoft/malmo) or open a [new issue](https://github.com/Microsoft/malmo/issues/new).\n\n----\n\n## Launching Minecraft with our Mod: ##\n\nMinecraft needs to create windows and render to them with OpenGL, so the machine you do this from must have a desktop environment.\n\nGo to the folder where you unzipped the release, then:\n\n`cd Minecraft`  \n`launchClient` (On Windows)  \n`./launchClient.sh` (On Linux or MacOSX)\n\nor, e.g. `launchClient -port 10001` to launch Minecraft on a specific port.\n\non Linux or MacOSX: `./launchClient.sh -port 10001`\n\n*NB: If you run this from a terminal, the bottom line will say something like \"Building 95%\" - ignore this - don't wait for 100%! As long as a Minecraft game window has opened and is displaying the main menu, you are good to go.*\n\nBy default the Mod chooses port 10000 if available, and will search upwards for a free port if not, up to 11000.\nThe port chosen is shown in the Mod config page.\n\nTo change the port while the Mod is running, use the `portOverride` setting in the Mod config page.\n\nThe Mod and the agents use other ports internally, and will find free ones in the range 10000-11000 so if administering\na machine for network use these TCP ports should be open.\n\n----\n\n## Launch an agent: ##\n\n#### Running a Python agent: ####\n\n```\ncd Python_Examples\npython3 run_mission.py\n``` \n\n#### Running a C++ agent: ####\n\n`cd Cpp_Examples`\n\nTo run the pre-built sample:\n\n`run_mission` (on Windows)  \n`./run_mission` (on Linux or MacOSX)\n\nTo build the sample yourself:\n\n`cmake .`  \n`cmake --build .`  \n`./run_mission` (on Linux or MacOSX)  \n`Debug\\run_mission.exe` (on Windows)\n\n#### Running a C# agent: ####\n\nTo run the pre-built sample (on Windows):\n\n`cd CSharp_Examples`  \n`CSharpExamples_RunMission.exe`\n\nTo build the sample yourself, open CSharp_Examples/RunMission.csproj in Visual Studio.\n\nOr from the command-line:\n\n`cd CSharp_Examples`\n\nThen, on Windows:  \n```\nmsbuild RunMission.csproj /p:Platform=x64\nbin\\x64\\Debug\\CSharpExamples_RunMission.exe\n```\n\n#### Running a Java agent: ####\n\n`cd Java_Examples`  \n`java -cp MalmoJavaJar.jar:JavaExamples_run_mission.jar -Djava.library.path=. JavaExamples_run_mission` (on Linux or MacOSX)  \n`java -cp MalmoJavaJar.jar;JavaExamples_run_mission.jar -Djava.library.path=. JavaExamples_run_mission` (on Windows)\n\n#### Running an Atari agent: (Linux only) ####\n\n```\ncd Python_Examples\npython3 ALE_HAC.py\n```\n\n----\n\n# Citations #\n\nPlease cite Malmo as:\n\nJohnson M., Hofmann K., Hutton T., Bignell D. (2016) [_The Malmo Platform for Artificial Intelligence Experimentation._](http://www.ijcai.org/Proceedings/16/Papers/643.pdf) [Proc. 25th International Joint Conference on Artificial Intelligence](http://www.ijcai.org/Proceedings/2016), Ed. Kambhampati S., p. 4246. AAAI Press, Palo Alto, California USA. https://github.com/Microsoft/malmo\n\n----\n\n# Code of Conduct #\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.6923828125,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.8 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/opensource/security/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/opensource/security/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/opensource/security/pgpkey).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://aka.ms/opensource/security/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/opensource/security/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/opensource/security/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "Schemas",
          "type": "tree",
          "content": null
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0068359375,
          "content": "0.37.0\n"
        },
        {
          "name": "changelog.txt",
          "type": "blob",
          "size": 19.8271484375,
          "content": "0.37.0\n-------------------\nFix: for timeLimitInSeconds.\nFix: Multi-agent timeouts added.\nNew: Log for scoring missions.\nNew: malmoenv - python to Java environment for OpenAI gym.\nNew: Observations from compass (with Biome world generation).\n\n0.36.0\n-------------------\nFixes for MacOS stability problems.\n\n0.35.0\n-------------------\nNew: Now possible for agent to select the Minecraft client's command port using \nan additional ClientInfo constructor when static port allocation is required.\nFix: Replaced XSD schema C++ generation in Malmo Agent which removes dependency on\nCodeSynthesis XSD. On Windows that required the Visual Studio 2013 for debug builds.\nNew: C# is now built on Windows using modern CMake.\nChg: Removed support for Mono.\nChg: Removed support for Torch.\nChg: Removed Support for Lua.\nNew: Support building Malmo as a Python (native) wheel.\nNew: Exposed ClientPool clients C++ vector member as Python iterable.\nChg: Timeouts added to startMission and other agent to Minecraft client communications.\n\n0.34.0\n-------------------\nNew: Can now record video streams as individual frames rather than video.\nFix: Many fixes to recording, tarring, etc - improved stability.\nNew: \"Human\" action space and observations, for tighter human-in-the-loop scenarios.\nNew: Titles and subtitles are now returned as part of the chat observation.\nNew: [Stability] ObservationFromSystem to return stats on Minecraft's health (eg render/server/client ticks per second)\nNew: [Stability] Option to kill Minecraft clients; command-line switch for launchClient to replace clients when killed.\nNew: DrawSign allows signposts to be drawn with specific text.\nNew: 'includeNBT' flag for ObservationFromRay, to return JSON NBTTagCompound for tile entities.\nNew: 'decision_tree_test.py' to test signs/NBTTagCompound.\nNew: 'braitenberg_simulation.py' to test luminance video producer (and for fun)\nNew: 'mouse_steering_test.py' to test human action space\nNew: Dockerfiles for automated building (Linux only, so far)\nFix: Integration tests can now be run headless - should be reliable (no false negatives)\n\n0.31.0\n-------------------\nNew: Samples now compatible with Python 2 and 3\nNew: Added luminance, 32bpp depth-map and colour-map video producers\nNew: Support for containers - drawing them, transferring inventory, observation producers etc\n\n0.30.0\n-------------------\nNew: UPGRADED TO LATEST MC/FORGE\nBreaking: AllowSpawning/AllowedMobs now affects mob_spawners\nBreaking: \"Minecart\" entity renamed to \"MinecartRideable\"\nNew: Now includes all mobs up to Minecraft 1.11, and \"mob_zoo.py\" sample\nNew: Added new blocktypes and items up to Minecraft 1.11\nNew: Added support for drawing tuned note blocks and \"note_block_test.py\" sample\n\n0.22.0\n-------------------\nNew: ObservationFromRay now returns distance.\nNew: Added socket logging code to Mod, available in Mod UI.\nNew: Added logging code to platform, available through Malmo API.\nNew: startMission now provides more error details in exceptions; multi-agent samples hardened by using this.\nNew: ObservationFromNearbyEntities now returns entity life.\nNew: RewardForDamagingEntity plus sample. (#537)\n\n0.21.0\n-------------------\nNew: yaw and pitch added to nearby entity observations.\nNew: reward handler and quit producer for mob catching. (#440)\n\n0.20.0\n-------------------\nNew: Moving target decorator. (#458)\nNew: Multi-agent turn-based scheduler. (#441)\n\n0.19.0\n-------------------\nNew: Multi-agent scenario reworked.\nNew: Version checking - schemas, mod and platform must all have the same version number. (#334)\nNew: Time-based rewards. (#126)\nNew: Discrete jumpuse action (great for nerd poling). (#400)\nNew: Team rewards. (#279)\nNew: Discrete strafe and jump actions, autojump and autofall. (#352, #321)\nNew: Simple animation decorator. (#389)\n\n0.18.0\n-------------------\nNew: Added RewardForStructureCopying and BuildBattleDecorator. (#337)\nFix: [BREAKING CHANGE] The centre of the grid observation was being rounded to the nearest int in the y-axis. (#370)\nFix: [BREAKING CHANGE] temp folder and \"mission_recordings\" now removed from path of files in recordings. (#298)\nFix: Three second grace period on spawning removed. (#88)\nNew: WorldTime and TotalTime added to ObservationFromFullStats. (#262)\nFix: AbsoluteMovementCommands can now teleport outside the current chunk. (#353)\nNew: [BREAKING CHANGE] AbsoluteMovementCommands tpx, tpy, tpz now applied immediately.\nFix: [BREAKING CHANGE] Extra block properties returned by ObservationFromRay are now prefixed with \"prop_\" to prevent collisions. (#355)\nNew: Agent can now quit by using MissionQuitCommands. (#170)\nFix: FileWorldGenerator load issue + file_test.py to test fix. (#342)\nNew: Python sample to test initial chunk loading. (#338)\nNew: Added startAtWithPitchAndYaw to API. (#295)\nNew: Greater control over drawing of rails and stairs. (#323)\nNew: Entities can now be placed by DrawingDecorator. (#322)\nFix: Weather is periodically reset to mission requirements. (#264)\nNew: [BREAKING CHANGE] Mission worlds are now deleted after use unless destroyAfterUse is false. (#76)\nFix: ContinuousMovementCommands now allow the setting of yaw/pitch by Discrete or Absolute movement commands. (#255)\nFix: Continuous-mode use/attack weren't correctly triggering rewards for discarding/collecting items. (#303)\nFix: Discrete-mode use/attack weren't correctly triggering rewards for discarding/collecting items. (#297)\nNew: ObservationFromGrid has new optional attribute 'absoluteCoords' for fixed-location grids. (#293)\n\n0.17.0 (2016-08-16)\n-------------------\nFix: Discrete use and attack now affect the inventory. (#247)\nFix: Rewards would occasionally get doubled. (#275)\nFix: Stopped mobs spawing illegally. (#280)\nNew: Added has_mission_begun flag to world state, to solve problems with short missions. (#118, #236)\nFix: [BREAKING CHANGE] Rewards now sent as simple strings rather than XML, for speed - changes recorded rewards format. (#261)\nNew: ALEAgentHost.setSeed allows ALE experiments to be seeded. (#254)\nFix: No longer need a fresh MissionRecordSpec for each call to startMission. (#256)\nNew: [BREAKING CHANGE] MissionRecordSpec.getTemporaryDirectory() now moved to AgentHost.getRecordingTemporaryDirectory().\nNew: MALMO_TEMP_PATH environment variable now used to determine where temp recording files are created. (#21)\nNew: TimestampedFrame now includes xPos,yPos,zPos,yaw and pitch information. (#257, #250, #231)\n\n0.16.1 (2016-08-03)\n-------------------\nNew: Simple \"craft\" command now works with smelting recipes - eg \"craft cooked_rabbit\" to cook raw rabbit meat. (#177)\nFix: [BREAKING CHANGE] Malmo java bindings now use pacakge com.microsoft.msr.malmo. (#232)\n\n0.16.0 (2016-07-29)\n-------------------\nNew: DiscreteCommandHandler now supports AgentQuitFromTouchingBlockType and RewardForTouchingBlockType. (#241)\nNew: MissionSpec has get/setSummary, getListOfCommandHandlers, getAllowedCommands. (#217)\nNew: DiscreteCommandHandler now supports attack and use commands. (#219)\nNew: Bonus - added AllowedMobs to ServerInitialConditions to control which mobs are allowed to spawn (does not affect mob_spawners).\nNew: Bonus - can now draw mob_spawner blocks and specify the entity they spawn as a variant.\nNew: ObservationFromRay returns info about nearest block/item/entity in the agent's direct line of sight. (#184)\nFix: RewardForDiscardingItem/RewardForCollectingItem now work with variations, colours etc.\nFix: Inventory and Entity observations now return information in the same format we use to specify things (eg Type, Variation, Colour).\nNew: More types supported in BlockDrawing, Inventory initialisation etc - see FlowerTypes, EntityTypes, MonsterEggTypes.\nNew: AgentQuitFromCollectingItem. (#171)\nNew: ObservationsFromFullStats now additionally returns Air. (#214)\nNew: Cross-platform Human Action Component.\n\n0.15.0 (2016-07-18)\n-------------------\nNew: Added ObservationFromNearbyEntities (#89) and updated reward_for_items_test.py to demonstrate it.\nNew: Simplified inventory movement with swapInventoryItems command. (#148)\nNew: Can combine inventory slots using new combineInventoryItems command. (#189)\nNew: Free-floating blocks can now be placed using DrawItem, and used in RewardForDiscardingItem/RewardForCollectingItem.\nNew: Crafting now triggers RewardForDiscardingItem/RewardForCollectingItem.\nNew: Python bindings changed for videoframe pixels - now returns a native python array, for faster use in numpy/PIL etc. (#187)\n\n0.14.0 (2016-07-07)\n-------------------\nNew: Basic, first stage crafting support added. (#11)\nNew: ObservationsFromMazeOptimalPath has been turned into general purpose ObservationFromSubgoalPositionList.\nNew: Maze generator can now take care of quitting mission when agent reaches goal. (#103)\nNew: AgentQuitFromReachingCommandQuota. (#109)\nRewards are now only sent when triggered. (#120)\nMulti-dimensional rewards are now possible, using a 'dimension' parameter on each RewardProducer.\nPitch command had positive as up, which was inconsistent with Minecraft and Placement section.\n\n0.13.0 (2016-07-01)\n-------------------\nNew: tp x y z command. (#112)\nFix: Hotbar commands moved from ContinuousMovementCommands to InventoryCommands.\nFix: Client quit producers are now queried between executing commands, in cases where commands get clustered.\nNew: Test for AgentQuitFromReachingPosition.\nSome MissionSpec calls now take float coordinates to match XML (#107). If you want to start in the middle of a block,\n  make sure that the x and z coordinates end in 0.5.\nMissionSpec::endAt now takes tolerance parameter.\npeekWorldState and getWorldState now return WorldState instances rather than smart pointers. (#124)\nNew: API call MissionSpec::setViewpoint to change the camera viewpoint.\nFix: ALE_HAC.py was broken. (#114)\n\n0.12.0 (2016-06-24)\n-------------------\nNew: Issue 55 (added forceReset flag to FlatWorldGenerator, DefaultWorldGenerator and FileWorldGenerator).\nNew: Issue 84 (added seed to FlatWorldGenerator and DefaultWorldGenerator).\nAdd: Issue 82 (new RewardForDiscardingItem mission handler).\nAdd: Issue 73 (added new DiscardCurrentItem command to InventoryCommands).\nAdd: Issue 4 (Overclocking) - can set tick length, and limit onscreen render.\nFix: Issue 48 (Grid observer crippled by bad TCP string sending method).\nFix: Issue 52 (Malmo's internal Minecraft client/server messages limited to 64k data per message).\nFix: Issue 40 (added tostring() methods to Lua and Python classes).\nFix: Issue 7 (requesting depth map would break the recorded video).\nFix: Issue 81 (changing video size between missions could crash the platform).\nFix: Issue 2 (XSDs no longer need to be in the current folder).\nAdd: New API call: MissionSpec::requestVideoWithDepth.\nAdd: New API call: AgentHost::peekWorldState.\n\n0.11.2 (2016-06-06)\n-------------------\nFix: Issue 22 (attack auto-repeat not working if Minecraft hasn't had focus).\nFix: Issue 33 (framerate slowdown after 500+ missions).\nFix: Issue 37 (occasional messages lost because two servers listening on same port).\n\n0.11.1 (2016-05-20)\n-------------------\nAdd: Login feature and UI required for authentication in multi-agent missions\nFix: Render size set correctly, avoiding aspect ratio distortion.\nAdd: Support for multi-agent missions. New sample: MultiMaze.py\n\n0.11.0 (2016-05-12)\n-------------------\nChange: All project code renamed to 'Malmo'.\nAdd: New ALEAgentHost, to use the Atari Learning Environment as a back-end instead of Minecraft.\nAdd: Chat commands and observations now supported.\nFix: MissionSpec::observeGrid and ::observeDistance were broken.\n\n0.10.4 (2016-04-20)\n-------------------\nFix: discrete movement had interpolation when rendering and offsetting in the Mod when bumping against walls.\nFix: tabular_q_learning.py was using deprecated API.\n\n0.10.3 (2016-04-01)\n-------------------\nChange: replaced MissionSpec::useDiscreteActions() with allowContinuousMovementCommand() etc. to control allow- and deny-lists through the API.\nFix: 64-bit build now supported on Windows.\nFix: Human Action Component now supports discrete actions again.\nAdd: New visualization tool for heatmaps of agent movement.\n\n0.10.2 (2016-03-22)\n-------------------\nFix: ffmpeg now a runtime dependency instead of an installation requirement.\nFix: pitch and yaw speed now render-speed independent.\n\n0.10.1 (2016-03-03)\n-------------------\nAdd: Tutorial pdf and scripts\nFix: DefaultWorldGenerator wasn't generating if a flatworld was already running.\nFix: ObservationFromGrid was never returning observations.\nFix: Hotbar keys were broken for both agent and human.\nFix: Initial yaw and pitch were being stomped on by ContinuousCommandHandler.\nFix: The order of draw objects in the DrawingDecorator is now preserved.\nFix: Command handler modifiers now called \"allow-list\" and \"deny-list\".\nAdd: AI/Human toggle now bound to enter key and state is displayed in info text.\nFix: Mouse can no longer move the AI in the gap between missions.\nFix: AI/Human toggling of control fixed (no longer need to press toggle key twice).\nFix: Empty JSON observations filtered out.\nAdd: Tutorial in Python_Examples.\n\n0.10.0 (2016-02-26)\n------------------\nAdd: WorldDecorators can now throw to cleanly abort missions.\nFix: Mod error message lists weren't getting reset between missions.\nAdd: New python example for DefaultWorldGenerator, timestamps etc.\nFix: MissionSpec::useDiscreteActions() was broken.\nFix: Timestamps weren't accessible in Python and Lua.\nFix: Player now no longer remains on fire from the end of a previous mission.\nFix: Player placement yaw and pitch were being ignored.\nAdd: New python example for tabular Q learning.\nAdd: ClassroomDecorator, providing random sampling from a parameterized mission space.\n\n0.9.9 (2016-02-12)\n------------------\nFix: When running multiple missions, video/PNGs would only be saved in the first one.\n\n0.9.8 (2016-02-11)\n------------------\nFix: Attempting to run without saving mission file (empty MissionRecordSpec) would cause crash.\nFix: Torch support was missing.\nAdd: Debian 7 support now available.\n\n0.9.7 (2016-02-09)\n------------------\nFix: Reuses TCP connections to avoid leaving too many ports in TIME_WAIT.\n\n0.9.6 (2016-02-05)\n------------------\nFix: getTorchTensorFromPixels now takes an allocated tensor, avoids memory leak.\n\n0.9.5 (2016-01-28)\n------------------\nFix: Final reward now sent in MissionEnded message to guarantee arrival.\n\n0.9.4 (2016-01-27)\n------------------\nAdd: RewardProducer for mission end.\nAdd: XSD documentation in Schemas folder.\n\n0.9.3 (2016-01-20)\n------------------\nAdd: Discrete movement handlers.\n\n0.9.1 (2016-01-07)\n------------------\nAdd: Improved installation instructions.\n\n0.9.0 (2016-01-05)\n------------------\nChange: Rewrite of platform API to be cross-platform, multi-language and easier to use.\nChange: Large XML changes.\nChange: Removed ExperimentLauncher and ExperimentStudio.\n\n0.8 (2015-11-20)\n----------------\nFix: Exceptions now passed on to Python agents - user should catch.\nChange: Malmo.StartListeningForMissionControlMessages() now doesn't take the port parameter.\nChange: Malmo.SendMissionEnded() now doesn't take the port parameter.\nAdd: New ObservationsProducer: ObservationFromRecentCommands.\nAdd: Can specify game mode in WorldFromBaseMapFile.\nAdd: Can now specify a motor scaling for turning.\nAdd: New VideoProducer: RGBDVideoGenerator gives RGB and depth.\n\n0.7 (2015-09-11)\n----------------\nChange: StartTime node in XML has changes.\nChange: Discrete.WorldFromGrid mission handler has been removed.\nChange: Malmo.saveUri is no longer available.\nChange: Malmo.logVideoEnabled is no longer available.\nAdd: Malmo.StartListeningForVideo() now takes an optional parameter, to request raw image buffer instead of PIL image.\nAdd: Communication between Python and Lua/Torch is now supported.\nAdd: Communication between C# and Lua/Torch is now supported.\nAdd: Malmo.SendMissionInitString() now validates the MissionInit string before sending, for easier debugging.\nAdd: Malmo.GetMissionInitString() now allows the video size and save location to be specified.\n\n0.6 (2015-08-26)\n----------------\nChange: No longer saves mission file by default - call Malmo.SaveSession manually in OnMissionEndedMessage().\nPython agents no longer require bat files to launch from the launcher/experiment studio, and can train.\nFix: timeout issue when launching missions from python (\"no agent available\" error)\nFix: Sample Python agents were giving an error saying no module named malmo.\nMod's observations now report agent's position using floats rather than ints.\nMod shouldn't grab mouse pointer anymore (mostly).\nFix: yaw and pitch should be set to sensible defaults at the start of each mission (fix weird camera angle error)\nFix: XML block drawing no longer requires co-ords to be specified in low->high order.\nAdditions to Mission XML: (full documentation of these is pending)\n  Inventory - can control exactly what blocks/items appear in which slots of player's inventory at start of each mission\n  Weather - can specify rain/thunder/clear weather for initial mission conditions\n  StartTime - can specify the Minecraft world time at the start of the Mission (will stop repeated runs of missions entering the night time)\n  AllowSpawning - can switch mob spawning on/off\n  Initial pitch and yaw can be specified.\n\n0.5 (2015-08-17)\n----------------\nPython agents can be run in the cloud\nHumanInstanceDownload - command line program to download human instance recordings\nDatasetCreation - create datasets from human instance data\nNew missionhandler for teleport commands: CommandForAbsoluteMovement\n\n0.4.1 (2015-08-11)\n------------------\nMod now quits the mission and returns to dormant state when it detects that its TCP video or reward signals are not being received by anything.\nNew commands added to the Discrete.CommandForGridWalking handler.\nNew whitelisting/blacklisting of individual commands in the command handlers\n\n0.3.1 (2015-07-27)\n------------------\nChange: In Python agents, the OnVideo callback now takes a PIL (Python Imaging Library) Image, instead of a raw buffer of bytes. See the sample scripts for usage hints.\nChange: Needs 'requests': pip install requests\nChange: You need an Experiment Studio human account created in order to log into Human Action.\nChange: OutputUri is now required in MissionInit nodes\nAdd: Parameterisation added to the grid observation producer (the one that produces the hull of blocks around the player).\nAdd: Parameterisation added to the discrete world builder (produces a flat maze-like grid of stained glass over lava).\nNew MissionHandlers available (see the md files for details):\n  WorldBuilder: \"WorldFromDefaultGame\" - basically loads a default world.\n  ObservationProducers: \"ObservationFromHotBar\" and \"ObservationFromFullInventory\"\n  CommandHandler: \"CommandForInventoryToHotBar\" - allows basic manipulation of inventory.\nFixes to Discrete MissionHandlers: Discrete.RewardForGridWalking should now give a negative reward for attempting to move, even if the move was unsuccessful (eg the agent tried to walk into a wall).\nStabilisation - hopefully the Mod can now cope with thousands of missions without crashing, hanging, or otherwise doing weird things.\n\n0.2 (2015-07-15)\n----------------\nChange: XML files in new version cannot be used in old versions of the software.\nChange: For loading a base map, WorldFromBaseMapFile must be one of the WorldBuilder mission handlers. See notes below.\nAdd: Mod now crashes far less often.\nAdd: New world builders mean that there is no need to manually enter a world when launching minecraft.\nAdd: Python agents now save out Malmo files with the session contents. Frames are timestamped png files.\nAdd: XML files now include a SchemaVersion attribute, to help with future changes.\n\n0.1.1 (2015-07-07)\n------------------\nChange: Mission handlers now separate XML nodes, with ClassName attribute. See samples in ExperimentDefinitions.\nChange: MalmoStartListeningForMissionControlMessages now takes 3 parameters. See samples in NonPsiAgents.\nChange: Python scripts now require PyXB. See Tutorials.\nAdd: Support for discrete action experiments. The D-Pad on the XBox controller can be used to navigate through the provided cliffWalkingTask.xml mission for example.\nAdd: Lots of bugfixes. The Mod now crashes less often.\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "malmo.properties",
          "type": "blob",
          "size": 0.0673828125,
          "content": "malmo_version=${MALMO_VERSION}\npython_version=${USE_PYTHON_VERSIONS}\n"
        },
        {
          "name": "sample_missions",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}