{
  "metadata": {
    "timestamp": 1736708162600,
    "page": 612,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "OpenHFT/Chronicle-Map",
      "stars": 2805,
      "defaultBranch": "ea",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.69140625,
          "content": "### How to update\n# This is copied from OpenHFT/.gitignore\n# update the original and run OpenHFT/update_gitignore.sh\ndata/\nperfmap/\n\n### Compiled class file\n*.class\n\n### Package Files\n*.jar\n*.war\n*.ear\n\n### Log file\n*.log\n\n### IntelliJ\n*.iml\n*.ipr\n*.iws\n.idea\ncompat_reports\n.attach_pid*\n\n### Virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n### Maven template\ntarget/\npom.xml.tag\npom.xml.releaseBackup\npom.xml.versionsBackup\npom.xml.next\nrelease.properties\n\n### Eclipse template\n*.pydevproject\n.metadata\n.gradle\nbin/\ntmp/\n*.tmp\n*.bak\n*.swp\n*~.nib\nlocal.properties\n.classpath\n.project\n.settings/\n.loadpath\n\n### Queue files\n*.cq4t\n*.cq4\n\nfile.lock\n\nissue423\n"
        },
        {
          "name": "DISCLAIMER.adoc",
          "type": "blob",
          "size": 2.1611328125,
          "content": "== Data\n\nThis product uses Google Analytics, a web analytics service provided by Google, Inc.(\"Google\").\n\nThis product sends usage data and platform information via a secure connection to Google Analytics.\n\nThis product stores a small file with a random client id (UUID) in the user's home directory. Because it is random, it does not contain any personal information.\n\n== Conveyed Properties\nProperties are conveyed over a secure (https) connection and includes the following:\n\n* Event name (e.g. \"started\")\n* Version of the library (e.g. \"5.20.146\")\n* The three top-most external package names (e.g. \"org.apache.commons\")\n* A random client id (UUID) (e.g. \"c38175c7-e822-40ef-a2ff-73a2e888b47c\")\n* The following System Properties:\n  - java.runtime.name (e.g \"Java(TM) SE Runtime Environment\")\n  - java.runtime.version (e.g. \"1.8.0_191-b12\")\n  - os.name (e.g. \"Mac OS X\")\n  - os.arch (e.g. \"x86_64\")\n  - os.version (e.g. \"10.16\")\n  - timezone.default (e.g. \"Europe/London\")\n  - available.processors (e.g. \"16\")\n  - max.memory.gib (e.g \"14\")\n  - java.major.version (e.g. \"8\")\n  - max.direct.memory.gib (e.g. \"14\")\n\nThe following library-specific properties are also conveyed:\n\n* Key type (e.g. `java.lang.Long`)\n* Value type (e.g. `java.lang.CharSequence`)\n* Entries (e.g. 10000)\n\n== System Resources\nData collection is using a separate thread for sending information. The thread itself will not consume CPU resources when idle.\n\n== Why is Data Collected?\nKnowing how our products are used allows us to focus our resources more efficiently in our effort to improve our libraries and\nprovide better and more widely adopted solutions for the community.\n\n== Open Data Pledge\nChronicle pledges to make aggregated data reports (using collected data) available to the general public at no cost.\nContact info@chronicle.software to obtain a link to these reports.\n\n== Consent\nBy using this product, you consent to the collection, storage and processing of data (sent by this library) by Google and Chronicle in the manner and for the purposes set out above.\n\nIf you do not consent you can do either of the following:\n\nA) Refrain from using this product\n\nOR\n\nB) Contact info@chronicle.software to have this feature removed"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.08984375,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License."
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.05859375,
          "content": "Chronicle Map\nCopyright 2012-2018 Chronicle Map Contributors"
        },
        {
          "name": "ReadMe.adoc",
          "type": "blob",
          "size": 3.6181640625,
          "content": "= Chronicle Map\nChronicle Software\n:css-signature: demo\n:toc: macro\n:toclevels: 2\n:icons: font\n\nimage:https://maven-badges.herokuapp.com/maven-central/net.openhft/chronicle-map/badge.svg[caption=\"\",link=https://maven-badges.herokuapp.com/maven-central/net.openhft/chronicle-map]\nimage:https://javadoc.io/badge2/net.openhft/chronicle-map/javadoc.svg[link=\"https://www.javadoc.io/doc/net.openhft/chronicle-map/latest/index.html\"]\n//image:https://javadoc-badge.appspot.com/net.openhft/chronicle-map.svg?label=javadoc[JavaDoc, link=https://www.javadoc.io/doc/net.openhft/chronicle-map]\nimage:https://img.shields.io/github/license/OpenHFT/Chronicle-Map[GitHub]\nimage:https://img.shields.io/badge/release%20notes-subscribe-brightgreen[link=\"https://chronicle.software/release-notes/\"]\nimage:https://sonarcloud.io/api/project_badges/measure?project=OpenHFT_Chronicle-Map&metric=alert_status[link=\"https://sonarcloud.io/dashboard?id=OpenHFT_Chronicle-Map\"]\n\nimage::docs/images/Map_line.png[width=20%]\n\ntoc::[]\n\n== About\n\nChronicle Map is a super-fast, in-memory, non-blocking, key-value store, designed for low-latency, and/or multi-process\napplications such as trading and financial market applications.\nSee <<docs/CM_Features.adoc#,Features doc>> for more information.\n\nThe size of a Chronicle Map is not limited by memory (RAM), but rather by the available disk capacity.\n\n.Overview\nimage::docs\\images\\Image1_.png[750,650]\n\n\n=== Use cases\nChronicle Map is used in production around the\nworld for:\n\n• **real-time trading systems**. Chronicle Map\nprovides in-memory access speeds, and supports\nultra-low garbage collection. Chronicle Map can support the most demanding of applications.\n• **highly concurrent systems**. Chronicle Map\nsupports multiple readers and writers,\ndistributed across multiple machines.\n\n=== Why use Chronicle Map?\nChronicle Map is:\n\n• **fast**. Millions of operations per second, with\nlow and stable microsecond latencies for reads and writes. Write queries scale well up\nto the number of hardware execution threads in the server. Read queries never block each\nother.\n• **reliable**. Chronicle Software have a “chaos\nmonkey” test which verifies Chronicle Map\nmulti-master replication in the face of node\nand network failures. The map can optionally be persisted to disk.\n• **in production** at banks and hedge funds,\nglobally.\n• **built using lessons learnt** from real-world\nexperience solving real-world problems.\n• **open source** (standard version), and in use at\nhundreds of sites around the world.\n\n=== Our offering\nChronicle Software provides full support for\nChronicle Map, consulting to help you make\nbest use of the product, and can also deliver\nprojects using a mix of our resources and\nyour own.\n\n=== Replication\nSee <<docs/CM_Replication.adoc#,Chronicle Map Replication>> for more information.\n\n'''\n== Documentation\nThe Chronicle Map documentation comprises:\n\n.Documentation\n|===\n|**Document**|**Purpose**\n|<<docs/CM_Features.adoc#,CM_Features>>\n|Features description.\n|<<docs/CM_Replication.adoc#,CM_Replication>>\n|Replication explanation.\n|<<docs/CM_Tutorial.adoc#,CM_Tutorial>>\n|Tutorial.\n|<<docs/CM_FAQs.adoc#,CM_FAQs>>\n|Frequently asked questions.\n|<<docs/CM_Download.adoc#,CM_Download>>\n|Downloading the software.\n|<<docs/CM_Updates.adoc#,CM_Updates>>\n|Updates from Chronicle Map version 2.\n|<<docs/CM_Compatibility_and_Versioning.adoc#,CM_Compatibility_and_Versioning>>\n|Compatibility and Versioning description.\n|===\n\nLinked documentation is contained in the `docs` folder.\n\n== Chronicle Software Release Notes\nhttps://chronicle.software/release-notes[Leave your e-mail] to get information about the latest releases and patches to stay up-to-date. \n"
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "checkstyle-suppressions.xml",
          "type": "blob",
          "size": 0.5234375,
          "content": "<?xml version=\"1.0\"?>\n\n<!DOCTYPE suppressions PUBLIC\n        \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\"\n        \"https://checkstyle.org/dtds/suppressions_1_2.dtd\">\n\n<suppressions>\n    <!-- Ignore generated code -->\n    <suppress files=\"CompiledReplicatedMapIterationContext.java\" checks=\".*\"/>\n    <suppress files=\"CompiledReplicatedMapQueryContext.java\" checks=\".*\"/>\n    <suppress files=\"CompiledMapIterationContext.java\" checks=\".*\"/>\n    <suppress files=\"CompiledMapQueryContext.java\" checks=\".*\"/>\n</suppressions>"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 21.865234375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n\n    <modelVersion>4.0.0</modelVersion>\n\n    <parent>\n        <groupId>net.openhft</groupId>\n        <artifactId>java-parent-pom</artifactId>\n        <version>1.27ea0</version>\n        <relativePath/>\n    </parent>\n\n    <artifactId>chronicle-map</artifactId>\n\n    <version>3.27ea1-SNAPSHOT</version>\n    <name>OpenHFT/Chronicle-Map</name>\n    <description>Chronicle-Map</description>\n    <packaging>bundle</packaging>\n    <properties>\n        <zero.cost.assertions>disabled</zero.cost.assertions>\n        <sonar.organization>openhft</sonar.organization>\n        <sonar.host.url>https://sonarcloud.io</sonar.host.url>\n    </properties>\n\n    <dependencyManagement>\n        <dependencies>\n\n            <dependency>\n                <groupId>net.openhft</groupId>\n                <artifactId>third-party-bom</artifactId>\n                <version>3.27ea0</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n            <dependency>\n                <groupId>net.openhft</groupId>\n                <artifactId>chronicle-bom</artifactId>\n                <version>2.27ea-SNAPSHOT</version>\n                <type>pom</type>\n                <scope>import</scope>\n            </dependency>\n\n        </dependencies>\n    </dependencyManagement>\n\n    <dependencies>\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>assertions-${zero.cost.assertions}</artifactId>\n            <scope>provided</scope>\n        </dependency>\n\n        <dependency>\n            <!-- note using org.jetbrains jar breaks the build -->\n            <groupId>com.intellij</groupId>\n            <artifactId>annotations</artifactId>\n            <version>12.0</version>\n            <scope>provided</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>affinity</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>chronicle-core</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>chronicle-bytes</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>posix</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>chronicle-values</artifactId>\n            <exclusions>\n                <exclusion>\n                    <groupId>com.sun.java</groupId>\n                    <artifactId>tools</artifactId>\n                </exclusion>\n            </exclusions>\n        </dependency>\n\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>chronicle-threads</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-api</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>chronicle-wire</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>chronicle-algorithms</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>net.java.dev.jna</groupId>\n            <artifactId>jna</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>net.java.dev.jna</groupId>\n            <artifactId>jna-platform</artifactId>\n        </dependency>\n\n        <!-- optional dependencies -->\n\n        <dependency>\n            <groupId>com.thoughtworks.xstream</groupId>\n            <artifactId>xstream</artifactId>\n            <optional>true</optional>\n        </dependency>\n\n        <dependency>\n            <groupId>org.codehaus.jettison</groupId>\n            <artifactId>jettison</artifactId>\n            <optional>true</optional>\n        </dependency>\n\n        <dependency>\n            <groupId>org.ops4j.pax.url</groupId>\n            <artifactId>pax-url-aether</artifactId>\n            <optional>true</optional>\n        </dependency>\n\n        <!-- test dependencies -->\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>chronicle-test-framework</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>jlbh</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-api</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.junit.jupiter</groupId>\n            <artifactId>junit-jupiter-params</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.junit.vintage</groupId>\n            <artifactId>junit-vintage-engine</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.slf4j</groupId>\n            <artifactId>slf4j-simple</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.mockito</groupId>\n            <artifactId>mockito-core</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.powermock</groupId>\n            <artifactId>powermock-module-junit4</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.powermock</groupId>\n            <artifactId>powermock-api-mockito</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>com.google.guava</groupId>\n            <artifactId>guava-testlib</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>net.openhft</groupId>\n            <artifactId>zero-allocation-hashing</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>com.samskivert</groupId>\n            <artifactId>samskivert</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.apache.commons</groupId>\n            <artifactId>commons-lang3</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.skyscreamer</groupId>\n            <artifactId>jsonassert</artifactId>\n            <scope>test</scope>\n        </dependency>\n    </dependencies>\n\n    <build>\n        <resources>\n            <resource>\n                <directory>src/main/resources</directory>\n                <filtering>true</filtering>\n                <includes>\n                    <include>**/map.version</include>\n                </includes>\n            </resource>\n            <resource>\n                <directory>src/main/resources</directory>\n                <filtering>false</filtering>\n                <excludes>\n                    <exclude>**/map.version</exclude>\n                </excludes>\n            </resource>\n        </resources>\n\n        <plugins>\n            <plugin>\n                <groupId>net.openhft</groupId>\n                <artifactId>binary-compatibility-enforcer-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <phase>verify</phase>\n                        <goals>\n                            <goal>enforcer</goal>\n                        </goals>\n                        <configuration>\n                            <referenceVersion>3.27ea0</referenceVersion>\n                            <artifactsURI>https://teamcity.chronicle.software/repository/download</artifactsURI>\n                            <binaryCompatibilityPercentageRequired>100.0</binaryCompatibilityPercentageRequired>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-surefire-plugin</artifactId>\n                <configuration>\n                    <trimStackTrace>false</trimStackTrace>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-scm-publish-plugin</artifactId>\n                <configuration>\n                    <checkoutDirectory>${project.build.directory}/scmpublish/javadoc/\n                    </checkoutDirectory>\n                    <checkinComment>Publishing javadoc for ${project.artifactId}:${project.version}\n                    </checkinComment>\n                    <content>${project.reporting.outputDirectory}/3.1.x</content>\n                    <skipDeletedFiles>true</skipDeletedFiles>\n                    <pubScmUrl>scm:git:git@github.com:OpenHFT/Chronicle-Map</pubScmUrl>\n                    <scmBranch>gh-pages</scmBranch>\n                </configuration>\n            </plugin>\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-javadoc-plugin</artifactId>\n                <configuration>\n                    <tags>\n                        <tag>\n                            <name>apiNote</name>\n                            <placement>tcm</placement>\n                            <head>API Note:</head>\n                        </tag>\n                        <tag>\n                            <name>implSpec</name>\n                            <placement>tcm</placement>\n                            <head>Implementation Requirements:</head>\n                        </tag>\n                        <tag>\n                            <name>implNote</name>\n                            <placement>tcm</placement>\n                            <head>Implementation Note:</head>\n                        </tag>\n                    </tags>\n                    <excludePackageNames>\n                        net.openhft.chronicle.hash.serialization.impl:net.openhft.chronicle.hash.impl:net.openhft.chronicle.map.impl:**.replication\n                    </excludePackageNames>\n                    <sourceFileExcludes>\n                        <exclude>net/openhft/chronicle/hash/ChronicleHashBuilderPrivateAPI.java</exclude>\n                        <exclude>net/openhft/chronicle/hash/VanillaGlobalMutableState.java</exclude>\n                        <exclude>net/openhft/chronicle/hash/ReplicatedHashSegmentContext.java</exclude>\n                        <exclude>net/openhft/chronicle/hash/VanillaGlobalMutableState*Native.java</exclude>\n                        <exclude>net/openhft/chronicle/map/MapDiagnostics.java</exclude>\n                        <exclude>net/openhft/chronicle/map/VanillaChronicleMap.java</exclude>\n                        <exclude>net/openhft/chronicle/map/Replica.java</exclude>\n                        <exclude>net/openhft/chronicle/map/ReplicatedChronicleMap.java</exclude>\n                        <exclude>net/openhft/chronicle/map/ReplicatedGlobalMutableState*Native.java</exclude>\n                        <exclude>net/openhft/chronicle/map/ChronicleHashCorruptionImpl.java</exclude>\n                        <exclude>net/openhft/chronicle/set/DummyValueData.java</exclude>\n                        <exclude>**/Compiled*.java</exclude>\n                    </sourceFileExcludes>\n                    <failOnError>false</failOnError>\n                    <additionalOptions>-Xdoclint:none</additionalOptions>\n                </configuration>\n            </plugin>\n\n            <!-- used to allow getClass().getPackage().getImplementationVersion() -->\n\n            <plugin>\n                <groupId>org.apache.maven.plugins</groupId>\n                <artifactId>maven-jar-plugin</artifactId>\n                <configuration>\n                    <archive>\n                        <manifest>\n                            <addClasspath>true</addClasspath>\n                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                        </manifest>\n                        <manifestEntries>\n                            <X-Compile-Source-JDK>${maven.compiler.release}</X-Compile-Source-JDK>\n                            <Implementation-Version>${project.version}</Implementation-Version>\n                            <!--  See https://openjdk.java.net/jeps/261#Breaking-encapsulation-->\n                            <!--Unfortunately, only works for the main jar which this is not likely to be-->\n                            <Add-Opens>java.base/java.lang.reflect=ALL-UNNAMED</Add-Opens>\n                            <Add-Exports>java.base/jdk.internal.ref=ALL-UNNAMED java.base/sun.nio.ch=ALL-UNNAMED\n                            </Add-Exports>\n                            <Automatic-Module-Name>chronicle.map</Automatic-Module-Name>\n                        </manifestEntries>\n                    </archive>\n                </configuration>\n\n            </plugin>\n            <!--\n                generate maven dependencies versions file that can be used later\n                to install the right bundle in test phase.\n\n                The file is:\n\n                    target/classes/META-INF/maven/dependencies.properties\n            -->\n            <plugin>\n                <groupId>org.apache.servicemix.tooling</groupId>\n                <artifactId>depends-maven-plugin</artifactId>\n                <executions>\n                    <execution>\n                        <id>generate-depends-file</id>\n                        <goals>\n                            <goal>generate-depends-file</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n            <plugin>\n                <groupId>org.apache.felix</groupId>\n                <artifactId>maven-bundle-plugin</artifactId>\n                <extensions>true</extensions>\n                <configuration>\n                    <instructions>\n                        <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>\n                        <Bundle-Name>OpenHFT :: ${project.artifactId}</Bundle-Name>\n                        <Bundle-Version>${project.version}</Bundle-Version>\n                        <Import-Package>\n                            org.jetbrains.annotations;resolution:=optional,\n                            *\n                        </Import-Package>\n                        <Export-Package>\n                            net.openhft.chronicle.map.*,\n                            net.openhft.chronicle.set.*,\n                            net.openhft.chronicle.hash.*\n                        </Export-Package>\n                        <Add-Opens>java.base/java.lang.reflect=ALL-UNNAMED</Add-Opens>\n                        <Add-Exports>java.base/jdk.internal.ref=ALL-UNNAMED java.base/sun.nio.ch=ALL-UNNAMED\n                        </Add-Exports>\n                        <Automatic-Module-Name>chronicle.map</Automatic-Module-Name>\n                        <Implementation-Title>${project.name}</Implementation-Title>\n                        <Implementation-Version>${project.version}</Implementation-Version>\n                        <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>\n                        <Implementation-Vendor>${project.organization.name}</Implementation-Vendor>\n                        <Implementation-URL>${project.url}</Implementation-URL>\n                        <Specification-Title>${project.name}</Specification-Title>\n                        <Specification-Version>${project.version}</Specification-Version>\n                        <Specification-Vendor>${project.organization.name}</Specification-Vendor>\n                    </instructions>\n                </configuration>\n                <executions>\n                    <!--\n                      This execution makes sure that the manifest is available\n                      when the tests are executed\n                    -->\n                    <execution>\n                        <goals>\n                            <goal>manifest</goal>\n                        </goals>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>exec-maven-plugin</artifactId>\n                <version>3.1.0</version>\n                <executions>\n                    <execution>\n                        <id>MapFileAnalyzer</id>\n                        <goals>\n                            <goal>java</goal>\n                        </goals>\n                        <configuration>\n                            <mainClass>net.openhft.chronicle.map.MapFileAnalyzer</mainClass>\n                            <classpathScope>compile</classpathScope>\n                        </configuration>\n                    </execution>\n                </executions>\n            </plugin>\n\n            <plugin>\n                <!--mvn versions:display-dependency-updates-->\n                <!--mvn versions:display-plugin-updates-->\n                <!--https://www.mojohaus.org/versions-maven-plugin/-->\n                <groupId>org.codehaus.mojo</groupId>\n                <artifactId>versions-maven-plugin</artifactId>\n                <version>2.14.2</version>\n                <configuration>\n                    <generateBackupPoms>false</generateBackupPoms>\n                </configuration>\n            </plugin>\n\n        </plugins>\n    </build>\n    <profiles>\n        <profile>\n            <id>assertions</id>\n            <properties>\n                <zero.cost.assertions>enabled</zero.cost.assertions>\n            </properties>\n        </profile>\n        <profile>\n            <id>pre-java9</id>\n            <dependencies>\n                <dependency>\n                    <groupId>com.sun</groupId>\n                    <artifactId>tools</artifactId>\n                    <version>${java.version}</version>\n                    <scope>system</scope>\n                    <systemPath>${java.home}/../lib/tools.jar</systemPath>\n                </dependency>\n            </dependencies>\n            <activation>\n                <file>\n                    <exists>${java.home}/../lib/tools.jar</exists>\n                </file>\n            </activation>\n        </profile>\n        <profile>\n            <id>sonar</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.sonarsource.scanner.maven</groupId>\n                        <artifactId>sonar-maven-plugin</artifactId>\n                    </plugin>\n                    <plugin>\n                        <groupId>org.jacoco</groupId>\n                        <artifactId>jacoco-maven-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <goals>\n                                    <goal>prepare-agent</goal>\n                                </goals>\n                            </execution>\n                            <execution>\n                                <id>report</id>\n                                <phase>prepare-package</phase>\n                                <goals>\n                                    <goal>report</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <!-- Note that CompiledXXXX.java files have been pre-compiled and added to src/main/java/net/openhft/chronicle/map/impl/ -->\n            <id>enable_code_generation</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <groupId>org.apache.maven.plugins</groupId>\n                        <artifactId>maven-compiler-plugin</artifactId>\n                        <configuration>\n                            <compilerArgument>-Xlint:deprecation</compilerArgument>\n                            <source>1.8</source>\n                            <target>1.8</target>\n                            <encoding>UTF-8</encoding>\n                            <useIncrementalCompilation>false</useIncrementalCompilation>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n        <profile>\n            <id>run-benchmarks</id>\n            <build>\n                <plugins>\n                    <plugin>\n                        <artifactId>maven-invoker-plugin</artifactId>\n                        <executions>\n                            <execution>\n                                <phase>test</phase>\n                                <goals>\n                                    <goal>run</goal>\n                                </goals>\n                            </execution>\n                        </executions>\n                        <configuration>\n                            <pom>benchmark/pom.xml</pom>\n                            <goals>clean,integration-test</goals>\n                            <profiles>\n                                <profile>run-benchmarks</profile>\n                            </profiles>\n                            <properties>\n                                <bytes.version>${project.version}</bytes.version>\n                                <skip.binary>true</skip.binary>\n                            </properties>\n                            <streamLogs>true</streamLogs>\n                        </configuration>\n                    </plugin>\n                </plugins>\n            </build>\n        </profile>\n    </profiles>\n\n    <scm>\n        <url>scm:git:git@github.com:OpenHFT/Chronicle-Map.git</url>\n        <connection>scm:git:git@github.com:OpenHFT/Chronicle-Map.git</connection>\n        <developerConnection>scm:git:git@github.com:OpenHFT/Chronicle-Map.git</developerConnection>\n        <tag>ea</tag>\n    </scm>\n\n</project>\n"
        },
        {
          "name": "spec",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "system.properties",
          "type": "blob",
          "size": 0.2412109375,
          "content": "# Tracing if resources are closed/released correctly.\njvm.resource.tracing=false\n# for profiling\njvm.safepoint.enabled=false\n# for testing sparseFiles\nchronicle.map.sparseFile=true\n# to speed up tests\nnet.openhft.chronicle.map.lockTimeoutSeconds=5"
        }
      ]
    }
  ]
}