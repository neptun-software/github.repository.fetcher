{
  "metadata": {
    "timestamp": 1736609127075,
    "page": 406,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "aragozin/jvm-tools",
      "stars": 3319,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.037109375,
          "content": "**.java text eol=lf\n**.xml text eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0703125,
          "content": "target/\n.classpath\n.settings\n.project\n.factorypath\n.codenvy\n*.iml\n.idea/"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.0458984375,
          "content": "language: java\njdk:\n  - openjdk8\n  - openjdk11\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 5.3681640625,
          "content": "next version\n----\n\n0.23 - 2024 Jan 24\n\n- Fixed: `--force-address` option for JMX connections\n- Fixed: few more packages for cage break\n\n0.22 - 2024 Jan 11\n\n- Feature: Added `--json` and `--json-array` to `mx --get` command to export MBean data as JSON\n- Feature: Made `-f` argument optional for `mx --get` in JSON mode (all attributes will be exported)\n- Fixed: Perfomance issue preventing HTML flame graphs for deep stack trace (previosuly lead to browser hang)\n\n0.21 - 2023 Apr 19\n----\n\n- Added `--force-hostname` option to overriden endpoint hostname on RMI stub with JMX connection hostname (useful for NAT and containers)\n- Added `prfi` command for importing sampling data from Linux perf\n- Add `--csv` and `--json` options to `jps` command\n\n0.20 - 2021 Oct 5\n----\n\n- Introduce `jcmd` command over JMX connection\n- Fix agent access to agent properties in post 8 Java\n\n0.19 - 2021 Jul 18\n----\n- Improvements for console output checker\n\n0.18 - 2021 Jul 5\n----\n- Separate module for test tools\n\n0.17 - 2020 Oct 25\n----\n- Clean up whitespaces in `ssa --thread-info` command\n- Add `--numeric` option for `ssa --thread-info`\n\n0.16 - 2020 Jun 28\n----\n- Added `hs` command\n- Ability to active HostpotInternal MBeans via JVM agent `hs --enable-hotspot-mbean`\n- Support multiple attributes in `mx --get`\n- Options to control header in `mx --get` CSV output mode\n\n0.15 - 2020 Jan 8\n----\n- Fixed NPE parsing some Java 11 JFR files\n- Fixed Netbeans/VisualVM nps files parsing\n\n0.14 - 2019 Aug 11\n----\n- Support for parsing JFR recordings Java 8 - 11\n- `jfr2json` command to convert JFR recordings to json\n- Support JFR allocation samples in `ssa` command\n- Support JFR exception event in `ssa` command\n\n0.12 - 2019 Mar 15\n----\n- Java 11 compatibility fixes\n- `mxping` command for connectivity diagnostics\n- `vminfo` support JVM flags listing\n\n0.11 - 2018 Dec 12\n----\n- Support JMX over TLS remote connections\n- `mxprx` command force correct RMI hostname usage\n- `vminfo` command added\n- Stack trace filter language improvements\n- Support Java 9/10 strings\n- Fixed parsing JFR files under JDK 9/10\n\n0.10.1 - 2018 Jun 4\n----\n- Java 9/10 compatibility fixes\n\n0.10 - 2018 May 28\n----\n- Added contention monitoring option to `ttop` command\n- `jstack` thread dump text format is now accepted by analytic commands\n- Added 'flame' command producing flame chart in HTML format\n\n0.9.3 - 2018 Mar 31\n----\n- Few minor changes in heap parser\n\n0.9.2 - 2018 Feb 18\n----\n- Frame histogram can be sorted by terminal count (default sort is by occurance count)\n- Export of tabular MBean attributes to CSV\n- Fixed NPE in thread dump collector\n\n0.9.1 - 2018 Jan 9\n----\n- Fixed few issues with hprof heap parser\n\n0.9 - 2017 Dec 24\n----\n- Fixed undesired splitting of JMX call arguments by comma\n- Fixed time range filtering for `stcpy` command\n- Added `mprx` command, open JMX port for target process\n\n0.8.1 - 2017 Nov 12\n----\n- Added SYS cpu time summary to `ssa --thread-info` command\n- Few improvements for `dexp` command\n\n0.8 - 2017 Aug 6\n----\n- Fixed transitive dependencies issues for JFR and NPS parsers\n- Fixed HeapPath bug for single asterisk path\n\n0.7 - 2017 Jul 23\n----\n- Parsing stack traces from NetBeans / VisualVM profiler snapshot format\n- Added command to export tags/counter from dump file to CSV or ASCII table\n\n0.6 - 2017 Jun 4\n----\n- Avoid unnecessary memory allocation to initialize hashCode on `StackFrame` object\n- Unified input processing between SSA and STCPY (SSA got wildcard support, STCPY time range filtering and trace trimming)\n- Parsing stack traces from Java Flight Recorder files\n\n0.5.1 - 2017 Mar 19\n---\n- Minor improvements to ThreadDumpSampler\n- Added memory MBean sampler\n\n0.5 - 2017 Jan 29\n----\n- Thread dump archive reader performance improvement\n- New generic event reader and writer API\n- Binary format V4 with support for non thread dump events\n- Added JMX GC event subscriber\n\n0.4.4 - 2016 Dec 4\n----\n- Compressed heap dump processing majot performance improvement\n- Added `SingletonDetector` utility class\n\n0.4.3 - 2016 Aug 18\n----\n- Added notation for null arguments for MBean operations\n- Added few formating options for `mx` command\n\n0.4.2 - 2016 July 7\n----\n- Option to override JMX URI (support for WildFly JMX over HTTP)\n- Fixed locale dependent decimal separator in flame graph generator\n\n0.4.1 - 2016 March 27\n----\n- Added `--thread-info` mode for SSA command\n- Added time range filter option for SSA command\n- Added thread name filter option for SSA command\n\n0.4.0 - 2016 Jan 24\n----\n- Added flame graph generation support (SVG format).\n- `--trace-trim` option for SSA commands, command used \nto remove unintersting top of call tree from analysis.\n\n0.3.9 - 2016 Jan 14\n----\n- Added stack trace filter expression language.\n- CLI related stuff is moved into separate module for reuse.\n- Fixed potential devision by zero in safe point rate calculation.\n- Support of basic primitive wrappers in mx command.\n- Optional CSV output for stack trace histogram and categorization.\n- Added compressed (gzip) heap dump support.\n- Ignore incomplete instances in heap dump.\n\n0.3.8 - 2015 Sep 10\n----\n- Added safe point information for [ttop] command.\n- Fixed NPE in heap cluster analyzer.\n\n0.3.7 - 2015 July 17\n----\n- Added --dead-young options to [hh] command.\n- `org.gridkit.jvmtool.stacktrace.StackTraceCodec.ChainedStackTraceReader` made public.\n- Suppress IO exception for parsing stack dump files.\n\n [hh]: sjk-core/COMMANDS.md#hh-command\n [ttop]: sjk-core/COMMANDS.md#ttop-command"
        },
        {
          "name": "JMX-CONFIG.md",
          "type": "blob",
          "size": 3.7958984375,
          "content": "JMX Setup Quick Guide\n=====================\n\nUsing many Java diagnostic tools (e.g. Visual VM, Mission Control or SJK) over the network requires a remote JVM to listen to JMX protocol on TCP socket.\nTypically JMX port is enabled via JVM startup options, though it can also be activated ad hoc via `jcmd`.\n\n\nConfiguring JMX via command line\n--------------------------------\n\n[Official documentation][1] is useful, but here is a quick summary.\n\nMinimal config for JMX would look like\n\n    java ...\n      -Dcom.sun.management.jmxremote.port=5555\n      -Dcom.sun.management.jmxremote.authenticate=false \n      -Dcom.sun.management.jmxremote.ssl=false\n       ...\n\nThis will let you use hostname:5555 as JMX socket address to connect to JVM.\n\nExample above is totally *insecure*, I have warned you.\n\nFor securing JMX please consult [docs][1].\n\nCouple extra properties you better add to the real config:\n\n  * `com.sun.management.jmxremote.rmi.port=5555` set is to same port value\nif you do not want JVM to open another random port.\n\n  * `java.rmi.server.hostname` see network quirks below.\n\n\nJMX Network quirks\n------------------\n\nJMX is a weird protocol.\n\nAssuming you have JMX socket `hostA:5555`, communications would look like.\n\n    JXM Client                      JMX Server\n       |                                |\n       connect on hostA:5555 ----------->\n       <---return \"stub\" hostX:portX ---|\n       |                                |\n       connect on hostX:portX----------->\n       <------- start talking JMX ------>\n\nSo the client would attempt to connect to a certain `host:port` returned from JMX Server. \nThis is mechanics of Java RMI protocol and it is not very friendly to sophisticated network topologies.\n\nThis gives us two strategies for JMX address configuration.\n\nJMX on host you can directly connect\n------------------------------------\n\nDirectly connect host A means you can ping address A and process on host can bind socket on address A \n(i.e. there is no NAT between you and host A).\n\nIn this can minimal *unsecured* config would be.\n\n    java ...\n      -Dcom.sun.management.jmxremote.port=5555\n      -Dcom.sun.management.jmxremote.rmi.port=5555\n      -Dcom.sun.management.jmxremote.authenticate=false \n      -Dcom.sun.management.jmxremote.ssl=false\n      -Djava.rmi.server.hostname=HostA\n       ...\n\nYou may omit `java.rmi.server.hostname` if you have a single interface and not using dual (IPv4 / IPv6) stack.\n\n\nIn this case you would probably need security.\n\nJMX via port forwarding\n-----------------------\n\nIf you access host via port forwarding (`ssh`, `kubectl` etc), you need to\nforce JVM to use local host for JMX.\n\nIn this can minimal config would be.\n\n    java ...\n      -Dcom.sun.management.jmxremote.port=5555\n      -Dcom.sun.management.jmxremote.rmi.port=5555\n      -Dcom.sun.management.jmxremote.authenticate=false \n      -Dcom.sun.management.jmxremote.ssl=false\n      -Djava.rmi.server.hostname=127.0.0.1\n       ...\n\nForwarded port must be the same on both sides. Now both connections made by JMX would be\nproperly forwarded.\n\nIn this case you probably already have a layer of security and leaving JMX unsecured could be justified.\n\n\nUsing `JCMD` to start JMX port without JVM restart\n--------------------------------------------------\n\nIf you have local access to the host where JVM is running, but no JMX configured you can fix it with `jcmd`.\n\nBelow is command to open JMX protocol listener on port 5555.\n\n    jcmd PID ManagementAgent.start \\\n\tjmxremote.authenticate=false \\\n        jmxremote.ssl=false \\\n        jmxremote.port=5555 \n\nConfiguration options here are the same properties as above but with `com.sun.managment` stripped.\n\nAll forwarding issues mentioned above are applied too.\n\n\n [1]: https://docs.oracle.com/en/java/javase/11/management/monitoring-and-management-using-jmx-technology.html#GUID-805517EC-2D33-4D61-81D8-4D0FA770D1B8\n"
        },
        {
          "name": "JMX-HTTP.md",
          "type": "blob",
          "size": 0.4384765625,
          "content": "WildFly application service support proprietary\nJMX over HTTP transport.\n\nBelow is example shell script to let SJK use JMX over HTTP instead of JMX over RMI transport.\nAdditional WildFly client jars are required.\n\n\t#!/usr/bin/env bash\n\tset -eu\n\tLIB_DIR=\"${WILDFLY_HOME:-/opt/wildfly}/bin/client\"\n\tJMX_PROTO=\"http-remoting-jmx\"\n\n\tjava \\\n\t  -Djmx.service.protocol=${JMX_PROTO} \\\n\t  -Djava.ext.dirs=${LIB_DIR} \\\n\t  -jar \"/opt/jvm-tools/sjk-plus.jar\" $@"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.2890625,
          "content": "\r\n                                 Apache License\r\n                           Version 2.0, January 2004\r\n                        http://www.apache.org/licenses/\r\n\r\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\r\n\r\n   1. Definitions.\r\n\r\n      \"License\" shall mean the terms and conditions for use, reproduction,\r\n      and distribution as defined by Sections 1 through 9 of this document.\r\n\r\n      \"Licensor\" shall mean the copyright owner or entity authorized by\r\n      the copyright owner that is granting the License.\r\n\r\n      \"Legal Entity\" shall mean the union of the acting entity and all\r\n      other entities that control, are controlled by, or are under common\r\n      control with that entity. For the purposes of this definition,\r\n      \"control\" means (i) the power, direct or indirect, to cause the\r\n      direction or management of such entity, whether by contract or\r\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\r\n      outstanding shares, or (iii) beneficial ownership of such entity.\r\n\r\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\r\n      exercising permissions granted by this License.\r\n\r\n      \"Source\" form shall mean the preferred form for making modifications,\r\n      including but not limited to software source code, documentation\r\n      source, and configuration files.\r\n\r\n      \"Object\" form shall mean any form resulting from mechanical\r\n      transformation or translation of a Source form, including but\r\n      not limited to compiled object code, generated documentation,\r\n      and conversions to other media types.\r\n\r\n      \"Work\" shall mean the work of authorship, whether in Source or\r\n      Object form, made available under the License, as indicated by a\r\n      copyright notice that is included in or attached to the work\r\n      (an example is provided in the Appendix below).\r\n\r\n      \"Derivative Works\" shall mean any work, whether in Source or Object\r\n      form, that is based on (or derived from) the Work and for which the\r\n      editorial revisions, annotations, elaborations, or other modifications\r\n      represent, as a whole, an original work of authorship. For the purposes\r\n      of this License, Derivative Works shall not include works that remain\r\n      separable from, or merely link (or bind by name) to the interfaces of,\r\n      the Work and Derivative Works thereof.\r\n\r\n      \"Contribution\" shall mean any work of authorship, including\r\n      the original version of the Work and any modifications or additions\r\n      to that Work or Derivative Works thereof, that is intentionally\r\n      submitted to Licensor for inclusion in the Work by the copyright owner\r\n      or by an individual or Legal Entity authorized to submit on behalf of\r\n      the copyright owner. For the purposes of this definition, \"submitted\"\r\n      means any form of electronic, verbal, or written communication sent\r\n      to the Licensor or its representatives, including but not limited to\r\n      communication on electronic mailing lists, source code control systems,\r\n      and issue tracking systems that are managed by, or on behalf of, the\r\n      Licensor for the purpose of discussing and improving the Work, but\r\n      excluding communication that is conspicuously marked or otherwise\r\n      designated in writing by the copyright owner as \"Not a Contribution.\"\r\n\r\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\r\n      on behalf of whom a Contribution has been received by Licensor and\r\n      subsequently incorporated within the Work.\r\n\r\n   2. Grant of Copyright License. Subject to the terms and conditions of\r\n      this License, each Contributor hereby grants to You a perpetual,\r\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n      copyright license to reproduce, prepare Derivative Works of,\r\n      publicly display, publicly perform, sublicense, and distribute the\r\n      Work and such Derivative Works in Source or Object form.\r\n\r\n   3. Grant of Patent License. Subject to the terms and conditions of\r\n      this License, each Contributor hereby grants to You a perpetual,\r\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\r\n      (except as stated in this section) patent license to make, have made,\r\n      use, offer to sell, sell, import, and otherwise transfer the Work,\r\n      where such license applies only to those patent claims licensable\r\n      by such Contributor that are necessarily infringed by their\r\n      Contribution(s) alone or by combination of their Contribution(s)\r\n      with the Work to which such Contribution(s) was submitted. If You\r\n      institute patent litigation against any entity (including a\r\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\r\n      or a Contribution incorporated within the Work constitutes direct\r\n      or contributory patent infringement, then any patent licenses\r\n      granted to You under this License for that Work shall terminate\r\n      as of the date such litigation is filed.\r\n\r\n   4. Redistribution. You may reproduce and distribute copies of the\r\n      Work or Derivative Works thereof in any medium, with or without\r\n      modifications, and in Source or Object form, provided that You\r\n      meet the following conditions:\r\n\r\n      (a) You must give any other recipients of the Work or\r\n          Derivative Works a copy of this License; and\r\n\r\n      (b) You must cause any modified files to carry prominent notices\r\n          stating that You changed the files; and\r\n\r\n      (c) You must retain, in the Source form of any Derivative Works\r\n          that You distribute, all copyright, patent, trademark, and\r\n          attribution notices from the Source form of the Work,\r\n          excluding those notices that do not pertain to any part of\r\n          the Derivative Works; and\r\n\r\n      (d) If the Work includes a \"NOTICE\" text file as part of its\r\n          distribution, then any Derivative Works that You distribute must\r\n          include a readable copy of the attribution notices contained\r\n          within such NOTICE file, excluding those notices that do not\r\n          pertain to any part of the Derivative Works, in at least one\r\n          of the following places: within a NOTICE text file distributed\r\n          as part of the Derivative Works; within the Source form or\r\n          documentation, if provided along with the Derivative Works; or,\r\n          within a display generated by the Derivative Works, if and\r\n          wherever such third-party notices normally appear. The contents\r\n          of the NOTICE file are for informational purposes only and\r\n          do not modify the License. You may add Your own attribution\r\n          notices within Derivative Works that You distribute, alongside\r\n          or as an addendum to the NOTICE text from the Work, provided\r\n          that such additional attribution notices cannot be construed\r\n          as modifying the License.\r\n\r\n      You may add Your own copyright statement to Your modifications and\r\n      may provide additional or different license terms and conditions\r\n      for use, reproduction, or distribution of Your modifications, or\r\n      for any such Derivative Works as a whole, provided Your use,\r\n      reproduction, and distribution of the Work otherwise complies with\r\n      the conditions stated in this License.\r\n\r\n   5. Submission of Contributions. Unless You explicitly state otherwise,\r\n      any Contribution intentionally submitted for inclusion in the Work\r\n      by You to the Licensor shall be under the terms and conditions of\r\n      this License, without any additional terms or conditions.\r\n      Notwithstanding the above, nothing herein shall supersede or modify\r\n      the terms of any separate license agreement you may have executed\r\n      with Licensor regarding such Contributions.\r\n\r\n   6. Trademarks. This License does not grant permission to use the trade\r\n      names, trademarks, service marks, or product names of the Licensor,\r\n      except as required for reasonable and customary use in describing the\r\n      origin of the Work and reproducing the content of the NOTICE file.\r\n\r\n   7. Disclaimer of Warranty. Unless required by applicable law or\r\n      agreed to in writing, Licensor provides the Work (and each\r\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\r\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\r\n      implied, including, without limitation, any warranties or conditions\r\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\r\n      PARTICULAR PURPOSE. You are solely responsible for determining the\r\n      appropriateness of using or redistributing the Work and assume any\r\n      risks associated with Your exercise of permissions under this License.\r\n\r\n   8. Limitation of Liability. In no event and under no legal theory,\r\n      whether in tort (including negligence), contract, or otherwise,\r\n      unless required by applicable law (such as deliberate and grossly\r\n      negligent acts) or agreed to in writing, shall any Contributor be\r\n      liable to You for damages, including any direct, indirect, special,\r\n      incidental, or consequential damages of any character arising as a\r\n      result of this License or out of the use or inability to use the\r\n      Work (including but not limited to damages for loss of goodwill,\r\n      work stoppage, computer failure or malfunction, or any and all\r\n      other commercial damages or losses), even if such Contributor\r\n      has been advised of the possibility of such damages.\r\n\r\n   9. Accepting Warranty or Additional Liability. While redistributing\r\n      the Work or Derivative Works thereof, You may choose to offer,\r\n      and charge a fee for, acceptance of support, warranty, indemnity,\r\n      or other liability obligations and/or rights consistent with this\r\n      License. However, in accepting such obligations, You may act only\r\n      on Your own behalf and on Your sole responsibility, not on behalf\r\n      of any other Contributor, and only if You agree to indemnify,\r\n      defend, and hold each Contributor harmless for any liability\r\n      incurred by, or claims asserted against, such Contributor by reason\r\n      of your accepting any such warranty or additional liability.\r\n\r\n   END OF TERMS AND CONDITIONS\r\n\r\n   APPENDIX: How to apply the Apache License to your work.\r\n\r\n      To apply the Apache License to your work, attach the following\r\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\r\n      replaced with your own identifying information. (Don't include\r\n      the brackets!)  The text should be enclosed in the appropriate\r\n      comment syntax for the file format. We also recommend that a\r\n      file or class name and description of purpose be included on the\r\n      same \"printed page\" as the copyright notice for easier\r\n      identification within third-party archives.\r\n\r\n   Copyright [yyyy] [name of copyright owner]\r\n\r\n   Licensed under the Apache License, Version 2.0 (the \"License\");\r\n   you may not use this file except in compliance with the License.\r\n   You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n   Unless required by applicable law or agreed to in writing, software\r\n   distributed under the License is distributed on an \"AS IS\" BASIS,\r\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n   See the License for the specific language governing permissions and\r\n   limitations under the License.\r\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.1123046875,
          "content": "Swiss Java Knife (SJK)\n=========\n\nSJK is a command line tool for JVM diagnostic, troubleshooting and profiling.\n\nSJK exploits standard diagnostic interfaces of JVM (such as JMX, JVM attach and perf counters) and adds some more logic on top \nuseful for common troubleshooting cases. SJK can also be used as a library for building application specific diagnostic tools\nor to enhance your code with self monitoring features.\n\nWhat you can do with SJK?\n----\n\n - [Monitor Java threads in real time][ttop]\n - [Analyze head dynamics with advanced class histograms][hh]\n - [Access MBean attributes and operation from command line][mx]\n - Create [flame graphs][html-flame] and over reports from snapshots created VisualVM, Java Flight Recorder or [SJK's own sampler][stcap]\n \nSee [full command reference](sjk-core/COMMANDS.md).\n\nDownload\n----\n\nLatest prebuild binaries [![Last Version](https://img.shields.io/maven-central/v/org.gridkit.jvmtool/sjk.svg)](https://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.gridkit.jvmtool%22)\n- `wget https://training.ragozin.info/sjk.jar` -> [sjk.jar](https://search.maven.org/remotecontent?filepath=org/gridkit/jvmtool/sjk-plus/0.22/sjk-plus-0.22.jar) \n\nStarting sjk\n----\n\n    java -jar sjk.jar <cmd> <arguments>\n    java -jar sjk.jar --commands\n    java -jar sjk.jar --help <cmd>\n\nBelow a few command from SJK ([full command reference](sjk-core/COMMANDS.md)).\n\n[ttop]\n----\n\nPools thread CPU usage of the target JVM and periodically reports to the console.\n\n - can attach via PID or open JMX port\n - displays thread memory allocation rate and cumulative process allocation rate\n - displays safe point time consumption (only if attache via PID)\n\n[More details][ttop]\n\n[hh]\n----\n\nSimilar to `jmap -histo`.\n\n - plus can show a histogram of dead objects (histograms of all and live requested, then difference is calculated)\n - plus can show N top buckets in histogram\n\n[More details][hh]\n\n[stcap], [stcpy], [ssa] and [flame]\n----\n\nThese commands provide basic sample profiler capabilities. `stcap` produces hyper-dense stack trace dump \n(about 1000 compression rate compared to text format) and `ssa` provides few reports over dump files.\n`stcpy` can copy data in archives produced by `stcap` (e.g. merging dumps or filtering selected threads).\n\nSo far following reports are available:\n\n - [sophisticated filtering] (time, stack trace, thread name)\n - stack frame histogram with advanced filtering options\n - flame graph visualization (SVG or [interactive HTML][html-flame])\n - per thread summary (CPU usage, memory allocation, etc)\n - converting back to text format\n\nDump file can be also processed programatically.\n\n[More details][ssa]\n\n[mx]\n-----\n\nThis command allows you to do basic operations with MBean from command line.\n\nIt can:\n\n - read MBean attributes\n - update MBean writeable attributes\n - invoke MBean operations (arguments are supported)\n - display composite and tabular data in a human readable format\n - use wild cards to shorten MBean names (e.g. `*:*,name=CodeCacheManager` instead of `java.lang:type=MemoryManager,name=CodeCacheManager`)\n - connect to local JVM processes by PID (e.i. any Java process, you do not need to enable JMX server)\n - connect to JMX using host:port (password authentication is supported)\n\n[More details][mx]\n\n[jps]\n----\n\nSimilar to `jps` from JDK. \n\n- plus can display specific system properties of process in output\n- plus can display values of specific -XX for HotSpot JVM processes \n- plus can filter process java processes by their system properties\n \n[More details][jps]\n\n[gc]\n-----\n\nReport information about GC in real time. Data is retrieved via JMX.\n\n[More details][gc]\n\nmxdump\n-----\n\nDumps all MBeans of target java process to JSON.\n\n [ttop]: sjk-core/docs/TTOP.md\n [jps]: sjk-core/docs/JPS.md\n [hh]: sjk-core/docs/HH.md\n [gc]: sjk-core/docs/GC.md\n [mx]: sjk-core/docs/MX.md\n [stcap]: sjk-core/docs/STCAP.md\n [stcpy]: sjk-core/docs/STCPY.md\n [ssa]: sjk-core/docs/SSA.md\n [flame]: sjk-hflame/docs/FLAME.md\n [sophisticated filtering]: sjk-core/src/main/resources/org/gridkit/jvmtool/cmd/ssa-help.md\n [flame graphs]: http://blog.ragozin.info/2016/01/flame-graphs-vs-cold-numbers.html\n [html-flame]: sjk-hflame/docs/flame_graph_ui.md\n"
        },
        {
          "name": "bstub",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcflow",
          "type": "tree",
          "content": null
        },
        {
          "name": "mxdump",
          "type": "tree",
          "content": null
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 12.1875,
          "content": "<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\n<!--\n\n    Copyright 2012 Alexey Ragozin\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n\n-->\n\n  <modelVersion>4.0.0</modelVersion>\n\n  <parent>\n    <groupId>org.gridkit.lab</groupId>\n    <artifactId>grid-lab-pom</artifactId>\n    <version>2</version>\n  </parent>\n\n  <groupId>org.gridkit.jvmtool</groupId>\n  <artifactId>jvmtool-umbrella-pom</artifactId>\n  <version>0.24-SNAPSHOT</version>\n  <name>${project.groupId}::${project.artifactId}</name>\n  <description>JVM tools, parent project</description>\n  <packaging>pom</packaging>\n\n  <modules>\n    <module>sjk-cli</module>\n    <module>sjk-stacktrace</module>\n    <module>sjk-hflame</module>\n    <module>sjk-win32</module>\n    <module>sjk-core</module>\n    <module>sjk-agent</module>\n    <module>sjk-json</module>\n    <module>sjk-test</module>\n    <module>mxdump</module>\n    <module>gcflow</module>\n    <module>sjk</module>\n    <module>sjk-plus</module>\n    <module>ygc-bench</module>\n  </modules>\n\n  <licenses>\n    <license>\n      <name>The Apache Software License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n\n  <developers>\n    <developer>\n      <id>alexey.ragozin</id>\n      <name>Alexey Ragozin</name>\n      <email>alexey.ragozin@gmail.com</email>\n    </developer>\n  </developers>\n\n  <scm>\n    <connection>scm:git:https://github.com/aragozin/jvm-tools.git</connection>\n    <developerConnection>scm:git:https://github.com/aragozin/jvm-tools.git</developerConnection>\n    <url>https://github.com/aragozin/jvm-tools</url>\n    <tag>HEAD</tag>\n  </scm>\n\n  <dependencyManagement>\n    <dependencies>\n\n      <!-- Local modules -->\n      <dependency>\n        <groupId>org.gridkit.jvmtool</groupId>\n        <artifactId>sjk-cli</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.gridkit.jvmtool</groupId>\n        <artifactId>sjk-core</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.gridkit.jvmtool</groupId>\n        <artifactId>sjk-stacktrace</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.gridkit.jvmtool</groupId>\n        <artifactId>sjk-hflame</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.gridkit.jvmtool</groupId>\n        <artifactId>mxdump</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.gridkit.jvmtool</groupId>\n        <artifactId>sjk-json</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.gridkit.jvmtool</groupId>\n        <artifactId>sjk-agent</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.gridkit.jvmtool</groupId>\n        <artifactId>sjk-test</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.gridkit.jvmtool</groupId>\n        <artifactId>ygc-bench</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n\n      <!-- Perfkit modules -->\n      <dependency>\n        <groupId>org.perfkit.sjk.parsers</groupId>\n        <artifactId>sjk-jfr5</artifactId>\n        <version>0.5</version>\n      </dependency>\n      <dependency>\n        <groupId>org.perfkit.sjk.parsers</groupId>\n        <artifactId>sjk-jfr6</artifactId>\n        <version>0.7</version>\n      </dependency>\n      <dependency>\n        <groupId>org.perfkit.sjk.parsers</groupId>\n        <artifactId>sjk-nps</artifactId>\n        <version>0.9</version>\n      </dependency>\n      <dependency>\n        <groupId>org.perfkit.sjk.parsers</groupId>\n        <artifactId>sjk-jfr-standalone</artifactId>\n        <version>0.7</version>\n      </dependency>\n      <dependency>\n        <groupId>org.gridkit.lab</groupId>\n        <artifactId>jvm-attach-api</artifactId>\n        <version>1.5</version>\n      </dependency>\n\n      <!-- 3rd party modules -->\n      <dependency>\n        <groupId>junit</groupId>\n        <artifactId>junit</artifactId>\n        <version>4.11</version>\n      </dependency>\n      <dependency>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-core</artifactId>\n        <version>1.6.0</version>\n      </dependency>\n      <dependency>\n        <groupId>com.carrotsearch</groupId>\n        <artifactId>junit-benchmarks</artifactId>\n        <version>0.7.2</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <build>\n\n    <pluginManagement>\n      <plugins>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>3.0</version>\n          <configuration>\n            <source>1.6</source>\n            <target>1.6</target>\n          </configuration>\n        </plugin>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-release-plugin</artifactId>\n          <version>2.4</version>\n          <configuration>\n            <autoVersionSubmodules>true</autoVersionSubmodules>\n            <pushChanges>true</pushChanges>\n          </configuration>\n        </plugin>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-surefire-plugin</artifactId>\n          <version>2.22.2</version>\n        </plugin>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-javadoc-plugin</artifactId>\n          <version>2.9</version>\n          <executions>\n            <execution>\n              <id>attach-javadoc</id>\n              <goals>\n                <goal>jar</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-source-plugin</artifactId>\n          <version>2.2.1</version>\n          <executions>\n            <execution>\n              <id>attach-source</id>\n              <goals>\n                <goal>jar</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-resources-plugin</artifactId>\n          <version>2.6</version>\n          <configuration>\n            <encoding>UTF-8</encoding>\n          </configuration>\n        </plugin>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-deploy-plugin</artifactId>\n          <version>2.8.2</version>\n        </plugin>\n\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-jar-plugin</artifactId>\n          <version>3.0.2</version>\n          <configuration>\n            <excludes>\n              <exclude>java/**</exclude>\n              <exclude>jdk/**</exclude>\n            </excludes>\n          </configuration>\n        </plugin>\n\n        <plugin>\n          <groupId>net.revelc.code.formatter</groupId>\n          <artifactId>formatter-maven-plugin</artifactId>\n          <version>2.11.0</version>\n        </plugin>\n\n        <plugin>\n          <groupId>com.diffplug.spotless</groupId>\n          <artifactId>spotless-maven-plugin</artifactId>\n          <version>1.31.3</version>\n          <configuration>\n            <formats>\n              <format>\n                <!-- Java whitespace formatting -->\n                <includes>\n                  <include>src/**/java/**/*.java</include>\n                </includes>\n                <endWithNewline />\n                <indent>\n                  <spaces>true</spaces>\n                  <tabs>false</tabs>\n                  <spacesPerTab>4</spacesPerTab>\n                </indent>\n                <trimTrailingWhitespace />\n              </format>\n              <format>\n                <!-- Java whitespace formatting -->\n                <includes>\n                  <include>**/pom.xml</include>\n                </includes>\n                <endWithNewline />\n                <indent>\n                  <spaces>true</spaces>\n                  <tabs>false</tabs>\n                  <spacesPerTab>2</spacesPerTab>\n                </indent>\n                <trimTrailingWhitespace />\n              </format>\n            </formats>\n          </configuration>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n  </build>\n\n  <profiles>\n\n    <profile>\n      <id>spotless-check</id>\n\n      <activation>\n        <property>\n          <name>!disableSpotless</name>\n        </property>\n      </activation>\n\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>com.diffplug.spotless</groupId>\n            <artifactId>spotless-maven-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>spotless-check</id>\n                <goals>\n                  <goal>check</goal>\n                </goals>\n                <phase>validate</phase>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n\n    </profile>\n\n    <profile>\n      <id>enable-toolchain</id>\n\n      <activation>\n        <property>\n          <name>!disableToolchain</name>\n        </property>\n      </activation>\n\n      <build>\n        <plugins>\n          <!-- SJK is 1.6 compatible -->\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-toolchains-plugin</artifactId>\n            <version>1.1</version>\n            <executions>\n              <execution>\n                <goals>\n                  <goal>toolchain</goal>\n                </goals>\n              </execution>\n            </executions>\n            <configuration>\n              <toolchains>\n                <jdk>\n                  <version>1.6</version>\n                  <vendor>sun</vendor>\n                </jdk>\n              </toolchains>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n\n    <profile>\n      <id>fix-surefire</id>\n\n      <activation>\n        <jdk>[11,1000)</jdk>\n      </activation>\n\n      <build>\n        <pluginManagement>\n          <plugins>\n\n            <plugin>\n              <!-- Since Java 11 surefire is broken due to text leaking in std out, here is remedy for that. -->\n              <groupId>org.apache.maven.plugins</groupId>\n              <artifactId>maven-surefire-plugin</artifactId>\n              <version>3.0.0-M5</version>\n              <configuration>\n                <forkNode implementation=\"org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory\" />\n                <!-- additional encantation to work around Java 11 nonsense -->\n                <argLine>-Djdk.attach.allowAttachSelf=true --add-opens java.base/jdk.internal.perf=ALL-UNNAMED --add-opens jdk.attach/sun.tools.attach=ALL-UNNAMED -Dsjk.breakCage=false</argLine>\n              </configuration>\n            </plugin>\n\n          </plugins>\n        </pluginManagement>\n      </build>\n    </profile>\n\n    <profile>\n      <id>fix-post-11-compile</id>\n\n      <activation>\n        <jdk>[12,1000)</jdk>\n      </activation>\n\n      <build>\n        <pluginManagement>\n          <plugins>\n\n            <plugin>\n              <groupId>org.apache.maven.plugins</groupId>\n              <artifactId>maven-compiler-plugin</artifactId>\n              <configuration>\n                <source>1.8</source>\n                <target>1.8</target>\n              </configuration>\n            </plugin>\n\n          </plugins>\n        </pluginManagement>\n      </build>\n\n    </profile>\n\n  </profiles>\n\n</project>\n"
        },
        {
          "name": "sjk-agent",
          "type": "tree",
          "content": null
        },
        {
          "name": "sjk-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "sjk-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "sjk-hflame",
          "type": "tree",
          "content": null
        },
        {
          "name": "sjk-json",
          "type": "tree",
          "content": null
        },
        {
          "name": "sjk-plus",
          "type": "tree",
          "content": null
        },
        {
          "name": "sjk-stacktrace",
          "type": "tree",
          "content": null
        },
        {
          "name": "sjk-test",
          "type": "tree",
          "content": null
        },
        {
          "name": "sjk-win32",
          "type": "tree",
          "content": null
        },
        {
          "name": "sjk",
          "type": "tree",
          "content": null
        },
        {
          "name": "ygc-bench",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}