{
  "metadata": {
    "timestamp": 1736708964984,
    "page": 11,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjEx",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/guava",
      "stars": 50401,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.19140625,
          "content": "# Auto detect text files and perform LF normalization\n* text=auto\n\n# Known text files\n*.java text\n*.xml text\n*.yml text\n*.md text\n*.sh text\n*.css text\n*.txt text\n\n# Known binary files\n*.jar binary"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.171875,
          "content": "# Maven\ntarget/\n*.ser\n*.ec\n.mvn/wrapper/maven-wrapper.jar\n\n# IntelliJ Idea\n.idea/\nout/\n*.ipr\n*.iws\n*.iml\n\n# Eclipse\n.classpath\n.project\n.settings/\n.metadata/\n\n# OS X\n.DS_Store\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.6884765625,
          "content": "How to contribute\n=================\n\nThank you so much for wanting to contribute to Guava! Here are a few important\nthings you should know about contributing:\n\n1.  API changes require discussion, use cases, etc. Code comes later.\n2.  Pull requests are great for small fixes for bugs, documentation, etc.\n3.  Pull requests are not merged directly into the master branch.\n4.  Code contributions require signing a Google CLA.\n\nAPI changes\n-----------\n\nWe make changes to Guava's public [APIs][], including adding new APIs, very\ncarefully. Because of this, if you're interested in seeing a new feature in\nGuava, the best approach is to create an [issue][] (or comment on an existing\nissue if there is one) requesting the feature and describing specific use cases\nfor it.\n\nIf the feature has merit, it will go through a thorough process of API design\nand review. Any code should come after this.\n\n[APIs]: https://en.wikipedia.org/wiki/Application_programming_interface\n[issue]: https://github.com/google/guava/issues\n\nPull requests\n-------------\n\nUnless the change is a trivial fix such as for a typo, it's generally best to\nstart by opening a new issue describing the bug or feature you're intending to\nfix. Even if you think it's relatively minor, it's helpful to know what people\nare working on. And as mentioned above, API changes should be discussed\nthoroughly before moving to code.\n\nSome examples of types of pull requests that are immediately helpful:\n\n  - Fixing a bug without changing a public API.\n  - Fixing or improving documentation.\n  - Improvements to Maven configuration.\n\nGuidelines for any code contributions:\n\n  1. Any significant changes should be accompanied by tests. The project already\n     has good test coverage, so look at some existing tests if you're unsure\n     how to go about it.\n  2. All contributions must be licensed Apache 2.0 and all files must have a\n     copy of the boilerplate license comment (can be copied from an existing\n     file).\n  3. Files should be formatted according to Google's [Java style guide][].\n  4. Please squash all commits for a change into a single commit (this can be\n     done using `git rebase -i`). Do your best to have a\n     [well-formed commit message][] for the change.\n\n[Java style guide]: https://google.github.io/styleguide/javaguide.html\n[well-formed commit message]: https://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html\n\n#### Merging pull requests ####\n\nDue to Guava's nature as a subset of Google's internal codebase which is\nautomatically synced to the public GitHub repository, we are unable to merge\npull requests directly into the master branch. Instead, once a pull request is\nready for merging, we'll make the appropriate changes in the internal codebase\nand, when the change is synced out, give the pull request author credit for the\ncommit.\n\nContributor License Agreement\n-----------------------------\n\nContributions to any Google project must be accompanied by a Contributor\nLicense Agreement. This is not a copyright _assignment_; it simply gives\nGoogle permission to use and redistribute your contributions as part of the\nproject.\n\n  - If you are an individual writing original source code and you're sure you\n    own the intellectual property, then you'll need to sign an [individual\n    CLA][]. Please include your GitHub username.\n  - If you work for a company that wants to allow you to contribute your work,\n    then you'll need to sign a [corporate CLA][].\n\nYou generally only need to submit a CLA once, so if you've already submitted\none (even if it was for a different project), you probably don't need to do it\nagain.\n\n[individual CLA]: https://cla.developers.google.com/about/google-individual\n[corporate CLA]: https://developers.google.com/open-source/cla/corporate\n"
        },
        {
          "name": "CONTRIBUTORS",
          "type": "blob",
          "size": 0.0087890625,
          "content": "Doug Lea\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.9287109375,
          "content": "# Guava: Google Core Libraries for Java\n\n[![GitHub Release](https://img.shields.io/github/v/release/google/guava)](https://github.com/google/guava/releases/latest)\n[![CI](https://github.com/google/guava/actions/workflows/ci.yml/badge.svg)](https://github.com/google/guava/actions/workflows/ci.yml)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/7197/badge)](https://www.bestpractices.dev/projects/7197)\n\n\n\nGuava is a set of core Java libraries from Google that includes new collection\ntypes (such as multimap and multiset), immutable collections, a graph library,\nand utilities for concurrency, I/O, hashing, primitives, strings, and more! It\nis widely used on most Java projects within Google, and widely used by many\nother companies as well.\n\n\n\nGuava comes in two flavors:\n\n*   The JRE flavor requires JDK 1.8 or higher.\n*   If you need support for Android, use\n    [the Android flavor](https://github.com/google/guava/wiki/Android). You can\n    find the Android Guava source in the [`android` directory].\n\n[`android` directory]: https://github.com/google/guava/tree/master/android\n\n## Adding Guava to your build\n\nGuava's Maven group ID is `com.google.guava`, and its artifact ID is `guava`.\nGuava provides two different \"flavors\": one for use on a (Java 8+) JRE and one\nfor use on Android or by any library that wants to be compatible with Android.\nThese flavors are specified in the Maven version field as either `33.4.0-jre` or\n`33.4.0-android`. For more about depending on Guava, see\n[using Guava in your build].\n\nTo add a dependency on Guava using Maven, use the following:\n\n```xml\n<dependency>\n  <groupId>com.google.guava</groupId>\n  <artifactId>guava</artifactId>\n  <version>33.4.0-jre</version>\n  <!-- or, for Android: -->\n  <version>33.4.0-android</version>\n</dependency>\n```\n\nTo add a dependency using Gradle:\n\n```gradle\ndependencies {\n  // Pick one:\n\n  // 1. Use Guava in your implementation only:\n  implementation(\"com.google.guava:guava:33.4.0-jre\")\n\n  // 2. Use Guava types in your public API:\n  api(\"com.google.guava:guava:33.4.0-jre\")\n\n  // 3. Android - Use Guava in your implementation only:\n  implementation(\"com.google.guava:guava:33.4.0-android\")\n\n  // 4. Android - Use Guava types in your public API:\n  api(\"com.google.guava:guava:33.4.0-android\")\n}\n```\n\nFor more information on when to use `api` and when to use `implementation`,\nconsult the\n[Gradle documentation on API and implementation separation](https://docs.gradle.org/current/userguide/java_library_plugin.html#sec:java_library_separation).\n\n## Snapshots and Documentation\n\nSnapshots of Guava built from the `master` branch are available through Maven\nusing version `HEAD-jre-SNAPSHOT`, or `HEAD-android-SNAPSHOT` for the Android\nflavor.\n\n[Snapshot API Javadoc][guava-snapshot-api-docs] as well as\n[Snapshot API Diffs][guava-snapshot-api-diffs] are also available.\n\n## Learn about Guava\n\n-   Our users' guide, [Guava Explained]\n-   [A nice collection](https://www.tfnico.com/presentations/google-guava) of\n    other helpful links\n\n## Links\n\n-   [GitHub project](https://github.com/google/guava)\n-   [Issue tracker: Report a defect or feature request](https://github.com/google/guava/issues/new)\n-   [StackOverflow: Ask \"how-to\" and \"why-didn't-it-work\" questions](https://stackoverflow.com/questions/ask?tags=guava+java)\n-   [guava-announce: Announcements of releases and upcoming significant changes](https://groups.google.com/group/guava-announce)\n-   [guava-discuss: For open-ended questions and discussion](https://groups.google.com/group/guava-discuss)\n\n## IMPORTANT WARNINGS\n\n1.  APIs marked with the `@Beta` annotation at the class or method level are\n    subject to change. They can be modified in any way, or even removed, at any\n    time. If your code is a library itself (i.e., it is used on the CLASSPATH of\n    users outside your own control), you should not use beta APIs unless you\n    [repackage] them. **If your code is a library, we strongly recommend using\n    the [Guava Beta Checker] to ensure that you do not use any `@Beta` APIs!**\n\n2.  APIs without `@Beta` will remain binary-compatible for the indefinite\n    future. (Previously, we sometimes removed such APIs after a deprecation\n    period. The last release to remove non-`@Beta` APIs was Guava 21.0.) Even\n    `@Deprecated` APIs will remain (again, unless they are `@Beta`). We have no\n    plans to start removing things again, but officially, we're leaving our\n    options open in case of surprises (like, say, a serious security problem).\n\n3.  Guava has one dependency that is needed for linkage at runtime:\n    `com.google.guava:failureaccess:1.0.2`. It also has\n    [some annotation-only dependencies][guava-deps], which we discuss in more\n    detail at that link.\n\n4.  Serialized forms of ALL objects are subject to change unless noted\n    otherwise. Do not persist these and assume they can be read by a future\n    version of the library.\n\n5.  Our classes are not designed to protect against a malicious caller. You\n    should not use them for communication between trusted and untrusted code.\n\n6.  For the mainline flavor, we test the libraries using OpenJDK 8, 11, and 17\n    on Linux, with some additional testing on newer JDKs and on Windows. Some\n    features, especially in `com.google.common.io`, may not work correctly in\n    non-Linux environments. For the Android flavor, our unit tests also run on\n    API level 21 (Lollipop).\n\n[guava-snapshot-api-docs]: https://guava.dev/releases/snapshot-jre/api/docs/\n[guava-snapshot-api-diffs]: https://guava.dev/releases/snapshot-jre/api/diffs/\n[Guava Explained]: https://github.com/google/guava/wiki/Home\n[Guava Beta Checker]: https://github.com/google/guava-beta-checker\n\n<!-- References -->\n\n[using Guava in your build]: https://github.com/google/guava/wiki/UseGuavaInYourBuild\n[repackage]: https://github.com/google/guava/wiki/UseGuavaInYourBuild#what-if-i-want-to-use-beta-apis-from-a-library-that-people-use-as-a-dependency\n[guava-deps]: https://github.com/google/guava/wiki/UseGuavaInYourBuild#what-about-guavas-own-dependencies\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "cycle_suppress_list.txt",
          "type": "blob",
          "size": 3.11328125,
          "content": "# TODO(user): Resolve cycles\n\nNAMESPACE com.google.common.collect.testing\nNAMESPACE com.google.common.collect.testing.google\nNAMESPACE com.google.common.escape\nNAMESPACE com.google.common.escape.testing\nNAMESPACE com.google.common.io\nNAMESPACE com.google.common.net\nNAMESPACE com.google.common.testing\n\n# Allow our dependencies for now.\nNAMESPACE junit.framework\nNAMESPACE org.junit\n\n# ***** REAL CYCLES *****\n# Cycle exists until future completes\nFIELD com.google.common.util.concurrent.AbstractFuture.Listener.executor com.google.common.util.concurrent.ExecutionSequencer.TaskNonReentrantExecutor\n\n# ***** FALSE POSITIVES *****\n\n# The Runnable type is so generic that it produces too many false positives.\nTYPE java.lang.Runnable\n\nFIELD com.google.common.base.Converter.reverse\nFIELD com.google.common.collect.AbstractBiMap.EntrySet.iterator.$.entry com.google.common.collect.AbstractBiMap.EntrySet.iterator.$.next.$\nFIELD com.google.common.collect.AbstractMapBasedMultimap.map\nFIELD com.google.common.collect.AbstractMultimap.asMap com.google.common.collect.AbstractMapBasedMultimap.NavigableAsMap\nFIELD com.google.common.collect.AbstractMultimap.values com.google.common.collect.LinkedListMultimap.get.$\nFIELD com.google.common.collect.AbstractMultimap.values com.google.common.collect.Multimaps.MapMultimap.get.$\nFIELD com.google.common.collect.AbstractMultiset.entrySet com.google.common.collect.FilteredEntryMultimap.Keys.entrySet.$\nFIELD com.google.common.collect.ConcurrentHashMultiset.countMap\nFIELD com.google.common.collect.ImmutableMultiset.asList\nFIELD com.google.common.collect.ImmutableRangeMap.ranges\nFIELD com.google.common.collect.ImmutableRangeSet.ranges\nFIELD com.google.common.collect.ImmutableSet.asList\nFIELD com.google.common.collect.Maps.FilteredMapValues.unfiltered\nFIELD com.google.common.collect.Sets.SubSet.inputSet\nFIELD com.google.common.collect.SingletonImmutableBiMap.inverse\nFIELD com.google.common.collect.TreeTraverser.PostOrderNode.childIterator\nFIELD com.google.common.collect.TreeTraverser.PreOrderIterator.stack\nFIELD com.google.common.util.concurrent.AbstractFuture.Listener.executor com.google.common.util.concurrent.MoreExecutors.rejectionPropagatingExecutor.$\nFIELD com.google.common.util.concurrent.AbstractService.listeners\n# NonReentrantExecutor is not exposed to this field\nFIELD com.google.common.util.concurrent.ExecutionSequencer.ThreadConfinedTaskQueue.nextExecutor com.google.common.util.concurrent.ExecutionSequencer.TaskNonReentrantExecutor\n# Real cycle, but the runningState field is null'ed on completion of the future.\nFIELD com.google.common.util.concurrent.AggregateFuture.runningState\nFIELD java.util.AbstractMap.keySet com.google.common.collect.AbstractMapBasedMultimap.NavigableKeySet\nFIELD java.util.AbstractMap.keySet com.google.common.collect.Maps.FilteredEntryNavigableMap.navigableKeySet.$\nFIELD java.util.AbstractMap.keySet com.google.common.collect.TreeRangeMap.SubRangeMap.SubRangeMapAsMap.keySet.$\nFIELD java.util.AbstractMap.values com.google.common.collect.TreeRangeMap.SubRangeMap.SubRangeMapAsMap.values.$\nOUTER com.google.common.collect.StandardTable.Row\nOUTER com.google.common.collect.TreeBasedTable.TreeRow\n"
        },
        {
          "name": "futures",
          "type": "tree",
          "content": null
        },
        {
          "name": "guava-bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "guava-gwt",
          "type": "tree",
          "content": null
        },
        {
          "name": "guava-testlib",
          "type": "tree",
          "content": null
        },
        {
          "name": "guava-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "guava",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "javadoc-stylesheet.css",
          "type": "blob",
          "size": 11.208984375,
          "content": "/* Javadoc style sheet */\n/*\nOverall document style\n*/\nbody {\n    background-color:#ffffff;\n    color:#353833;\n    font-family:Arial, Helvetica, sans-serif;\n    font-size:76%;\n    margin:0;\n}\na:link, a:visited {\n    text-decoration:none;\n    color:#4c6b87;\n}\na:hover, a:focus {\n    text-decoration:none;\n    color:#bb7a2a;\n}\na:active {\n    text-decoration:none;\n    color:#4c6b87;\n}\na[name] {\n    color:#353833;\n}\na[name]:hover {\n    text-decoration:none;\n    color:#353833;\n}\npre {\n    font-size:1.3em;\n}\nh1 {\n    font-size:1.8em;\n}\nh2 {\n    font-size:1.5em;\n}\nh3 {\n    font-size:1.4em;\n}\nh4 {\n    font-size:1.3em;\n}\nh5 {\n    font-size:1.2em;\n}\nh6 {\n    font-size:1.1em;\n}\nul {\n    list-style-type:disc;\n}\ncode, tt {\n    font-size:1.2em;\n}\ndt code {\n    font-size:1.2em;\n}\ntable tr td dt code {\n    font-size:1.2em;\n    vertical-align:top;\n}\nsup {\n    font-size:.6em;\n}\n/*\nDocument title and Copyright styles\n*/\n.clear {\n    clear:both;\n    height:0px;\n    overflow:hidden;\n}\n.aboutLanguage {\n    float:right;\n    padding:0px 21px;\n    font-size:.8em;\n    z-index:200;\n    margin-top:-7px;\n}\n.legalCopy {\n    margin-left:.5em;\n}\n.bar a, .bar a:link, .bar a:visited, .bar a:active {\n    color:#FFFFFF;\n    text-decoration:none;\n}\n.bar a:hover, .bar a:focus {\n    color:#bb7a2a;\n}\n.tab {\n    background-color:#0066FF;\n    background-image:url(resources/titlebar.gif);\n    background-position:left top;\n    background-repeat:no-repeat;\n    color:#ffffff;\n    padding:8px;\n    width:5em;\n    font-weight:bold;\n}\n/*\nNavigation bar styles\n*/\n.bar {\n    background-image:url(resources/background.gif);\n    background-repeat:repeat-x;\n    color:#FFFFFF;\n    padding:.8em .5em .4em .8em;\n    height:auto;/*height:1.8em;*/\n    font-size:1em;\n    margin:0;\n}\n.topNav {\n    background-image:url(resources/background.gif);\n    background-repeat:repeat-x;\n    color:#FFFFFF;\n    float:left;\n    padding:0;\n    width:100%;\n    clear:right;\n    height:2.8em;\n    padding-top:10px;\n    overflow:hidden;\n}\n.bottomNav {\n    margin-top:10px;\n    background-image:url(resources/background.gif);\n    background-repeat:repeat-x;\n    color:#FFFFFF;\n    float:left;\n    padding:0;\n    width:100%;\n    clear:right;\n    height:2.8em;\n    padding-top:10px;\n    overflow:hidden;\n}\n.subNav {\n    background-color:#dee3e9;\n    border-bottom:1px solid #9eadc0;\n    float:left;\n    width:100%;\n    overflow:hidden;\n}\n.subNav div {\n    clear:left;\n    float:left;\n    padding:0 0 5px 6px;\n}\nul.navList, ul.subNavList {\n    float:left;\n    margin:0 25px 0 0;\n    padding:0;\n}\nul.navList li{\n    list-style:none;\n    float:left;\n    padding:3px 6px;\n}\nul.subNavList li{\n    list-style:none;\n    float:left;\n    font-size:90%;\n}\n.topNav a:link, .topNav a:active, .topNav a:visited, .bottomNav a:link, .bottomNav a:active, .bottomNav a:visited {\n    color:#FFFFFF;\n    text-decoration:none;\n}\n.topNav a:hover, .bottomNav a:hover {\n    text-decoration:none;\n    color:#bb7a2a;\n}\n.navBarCell1Rev {\n    background-image:url(resources/tab.gif);\n    background-color:#a88834;\n    color:#FFFFFF;\n    margin: auto 5px;\n    border:1px solid #c9aa44;\n}\n/*\nPage header and footer styles\n*/\n.header, .footer {\n    clear:both;\n    margin:0 20px;\n    padding:5px 0 0 0;\n}\n.indexHeader {\n    margin:10px;\n    position:relative;\n}\n.indexHeader h1 {\n    font-size:1.3em;\n}\n.title {\n    color:#2c4557;\n    margin:10px 0;\n}\n.subTitle {\n    margin:5px 0 0 0;\n}\n.header ul {\n    margin:0 0 25px 0;\n    padding:0;\n}\n.footer ul {\n    margin:20px 0 5px 0;\n}\n.header ul li, .footer ul li {\n    list-style:none;\n    font-size:1.2em;\n}\n/*\nHeading styles\n*/\ndiv.details ul.blockList ul.blockList ul.blockList li.blockList h4, div.details ul.blockList ul.blockList ul.blockListLast li.blockList h4 {\n    background-color:#dee3e9;\n    border-top:1px solid #9eadc0;\n    border-bottom:1px solid #9eadc0;\n    margin:0 0 6px -8px;\n    padding:2px 5px;\n}\nul.blockList ul.blockList ul.blockList li.blockList h3 {\n    background-color:#dee3e9;\n    border-top:1px solid #9eadc0;\n    border-bottom:1px solid #9eadc0;\n    margin:0 0 6px -8px;\n    padding:2px 5px;\n}\nul.blockList ul.blockList li.blockList h3 {\n    padding:0;\n    margin:15px 0;\n}\nul.blockList li.blockList h2 {\n    padding:0px 0 20px 0;\n}\n/*\nPage layout container styles\n*/\n.contentContainer, .sourceContainer, .classUseContainer, .serializedFormContainer, .constantValuesContainer {\n    clear:both;\n    padding:10px 20px;\n    position:relative;\n}\n.indexContainer {\n    margin:10px;\n    position:relative;\n    font-size:1.0em;\n}\n.indexContainer h2 {\n    font-size:1.1em;\n    padding:0 0 3px 0;\n}\n.indexContainer ul {\n    margin:0;\n    padding:0;\n}\n.indexContainer ul li {\n    list-style:none;\n}\n.contentContainer .description dl dt, .contentContainer .details dl dt, .serializedFormContainer dl dt {\n    font-size:1.1em;\n    font-weight:bold;\n    margin:10px 0 0 0;\n    color:#4E4E4E;\n}\n.contentContainer .description dl dd, .contentContainer .details dl dd, .serializedFormContainer dl dd {\n    margin:10px 0 10px 20px;\n}\n.serializedFormContainer dl.nameValue dt {\n    margin-left:1px;\n    font-size:1.1em;\n    display:inline;\n    font-weight:bold;\n}\n.serializedFormContainer dl.nameValue dd {\n    margin:0 0 0 1px;\n    font-size:1.1em;\n    display:inline;\n}\n/*\nList styles\n*/\nul.horizontal li {\n    display:inline;\n    font-size:0.9em;\n}\nul.inheritance {\n    margin:0;\n    padding:0;\n}\nul.inheritance li {\n    display:inline;\n    list-style:none;\n}\nul.inheritance li ul.inheritance {\n    margin-left:15px;\n    padding-left:15px;\n    padding-top:1px;\n}\nul.blockList, ul.blockListLast {\n    margin:10px 0 10px 0;\n    padding:0;\n}\nul.blockList li.blockList, ul.blockListLast li.blockList {\n    list-style:none;\n    margin-bottom:25px;\n}\nul.blockList ul.blockList li.blockList, ul.blockList ul.blockListLast li.blockList {\n    padding:0px 20px 5px 10px;\n    border:1px solid #9eadc0;\n    background-color:#f9f9f9;\n}\nul.blockList ul.blockList ul.blockList li.blockList, ul.blockList ul.blockList ul.blockListLast li.blockList {\n    padding:0 0 5px 8px;\n    background-color:#ffffff;\n    border:1px solid #9eadc0;\n    border-top:none;\n}\nul.blockList ul.blockList ul.blockList ul.blockList li.blockList {\n    margin-left:0;\n    padding-left:0;\n    padding-bottom:15px;\n    border:none;\n    border-bottom:1px solid #9eadc0;\n}\nul.blockList ul.blockList ul.blockList ul.blockList li.blockListLast {\n    list-style:none;\n    border-bottom:none;\n    padding-bottom:0;\n}\ntable tr td dl, table tr td dl dt, table tr td dl dd {\n    margin-top:0;\n    margin-bottom:1px;\n}\n/*\nTable styles\n*/\n.contentContainer table, .classUseContainer table, .constantValuesContainer table {\n    border-bottom:1px solid #9eadc0;\n    width:100%;\n}\n.contentContainer ul li table, .classUseContainer ul li table, .constantValuesContainer ul li table {\n    width:100%;\n}\n.contentContainer .description table, .contentContainer .details table {\n    border-bottom:none;\n}\n.contentContainer ul li table th.colOne, .contentContainer ul li table th.colFirst, .contentContainer ul li table th.colLast, .classUseContainer ul li table th, .constantValuesContainer ul li table th, .contentContainer ul li table td.colOne, .contentContainer ul li table td.colFirst, .contentContainer ul li table td.colLast, .classUseContainer ul li table td, .constantValuesContainer ul li table td{\n    vertical-align:top;\n    padding-right:20px;\n}\n.contentContainer ul li table th.colLast, .classUseContainer ul li table th.colLast,.constantValuesContainer ul li table th.colLast,\n.contentContainer ul li table td.colLast, .classUseContainer ul li table td.colLast,.constantValuesContainer ul li table td.colLast,\n.contentContainer ul li table th.colOne, .classUseContainer ul li table th.colOne,\n.contentContainer ul li table td.colOne, .classUseContainer ul li table td.colOne {\n    padding-right:3px;\n}\n.overviewSummary caption, .packageSummary caption, .contentContainer ul.blockList li.blockList caption, .summary caption, .classUseContainer caption, .constantValuesContainer caption {\n    position:relative;\n    text-align:left;\n    background-repeat:no-repeat;\n    color:#FFFFFF;\n    font-weight:bold;\n    clear:none;\n    overflow:hidden;\n    padding:0px;\n    margin:0px;\n}\ncaption a:link, caption a:hover, caption a:active, caption a:visited {\n    color:#FFFFFF;\n}\n.overviewSummary caption span, .packageSummary caption span, .contentContainer ul.blockList li.blockList caption span, .summary caption span, .classUseContainer caption span, .constantValuesContainer caption span {\n    white-space:nowrap;\n    padding-top:8px;\n    padding-left:8px;\n    display:block;\n    float:left;\n    background-image:url(resources/titlebar.gif);\n    height:18px;\n}\n.overviewSummary .tabEnd, .packageSummary .tabEnd, .contentContainer ul.blockList li.blockList .tabEnd, .summary .tabEnd, .classUseContainer .tabEnd, .constantValuesContainer .tabEnd {\n    width:10px;\n    background-image:url(resources/titlebar_end.gif);\n    background-repeat:no-repeat;\n    background-position:top right;\n    position:relative;\n    float:left;\n}\nul.blockList ul.blockList li.blockList table {\n    margin:0 0 12px 0px;\n    width:100%;\n}\n.tableSubHeadingColor {\n    background-color: #EEEEFF;\n}\n.altColor {\n    background-color:#eeeeef;\n}\n.rowColor {\n    background-color:#ffffff;\n}\n.overviewSummary td, .packageSummary td, .contentContainer ul.blockList li.blockList td, .summary td, .classUseContainer td, .constantValuesContainer td {\n    text-align:left;\n    padding:3px 3px 3px 7px;\n}\nth.colFirst, th.colLast, th.colOne, .constantValuesContainer th {\n    background:#dee3e9;\n    border-top:1px solid #9eadc0;\n    border-bottom:1px solid #9eadc0;\n    text-align:left;\n    padding:3px 3px 3px 7px;\n}\ntd.colOne a:link, td.colOne a:active, td.colOne a:visited, td.colOne a:hover, td.colFirst a:link, td.colFirst a:active, td.colFirst a:visited, td.colFirst a:hover, td.colLast a:link, td.colLast a:active, td.colLast a:visited, td.colLast a:hover, .constantValuesContainer td a:link, .constantValuesContainer td a:active, .constantValuesContainer td a:visited, .constantValuesContainer td a:hover {\n    font-weight:bold;\n}\ntd.colFirst, th.colFirst {\n    border-left:1px solid #9eadc0;\n    white-space:nowrap;\n}\ntd.colLast, th.colLast {\n    border-right:1px solid #9eadc0;\n}\ntd.colOne, th.colOne {\n    border-right:1px solid #9eadc0;\n    border-left:1px solid #9eadc0;\n}\ntable.overviewSummary  {\n    padding:0px;\n    margin-left:0px;\n}\ntable.overviewSummary td.colFirst, table.overviewSummary th.colFirst,\ntable.overviewSummary td.colOne, table.overviewSummary th.colOne {\n    width:25%;\n    vertical-align:middle;\n}\ntable.packageSummary td.colFirst, table.overviewSummary th.colFirst {\n    width:25%;\n    vertical-align:middle;\n}\n/*\nContent styles\n*/\n.description pre {\n    margin-top:0;\n}\n.deprecatedContent {\n    margin:0;\n    padding:10px 0;\n}\n.docSummary {\n    padding:0;\n}\n/*\nFormatting effect styles\n*/\n.sourceLineNo {\n    color:green;\n    padding:0 30px 0 0;\n}\nh1.hidden {\n    visibility:hidden;\n    overflow:hidden;\n    font-size:.9em;\n}\n.block {\n    display:block;\n    margin:3px 0 0 0;\n}\n.strong {\n    font-weight:bold;\n}\n\n/*\n Fixes for a number of issues with the default stylesheet.\n */\n\n/* Fixes huge font size in <pre>{@code} blocks. */\npre code {\n    font-size:inherit;\n}\n\n/*\n Fixes issue with no blank line before <pre> in class-level Javadoc\n when the <pre> is preceded by a block of text with no <p>.\n */\n.description .block pre {\n    margin-top:1em;\n}\n"
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 10.91015625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.3.2\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ]; then\n\n  if [ -f /usr/local/etc/mavenrc ]; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ]; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ]; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false\ndarwin=false\nmingw=false\ncase \"$(uname)\" in\nCYGWIN*) cygwin=true ;;\nMINGW*) mingw=true ;;\nDarwin*)\n  darwin=true\n  # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n  # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n  if [ -z \"$JAVA_HOME\" ]; then\n    if [ -x \"/usr/libexec/java_home\" ]; then\n      JAVA_HOME=\"$(/usr/libexec/java_home)\"\n      export JAVA_HOME\n    else\n      JAVA_HOME=\"/Library/Java/Home\"\n      export JAVA_HOME\n    fi\n  fi\n  ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ]; then\n  if [ -r /etc/gentoo-release ]; then\n    JAVA_HOME=$(java-config --jre-home)\n  fi\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] \\\n    && JAVA_HOME=$(cygpath --unix \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] \\\n    && CLASSPATH=$(cygpath --path --unix \"$CLASSPATH\")\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw; then\n  [ -n \"$JAVA_HOME\" ] && [ -d \"$JAVA_HOME\" ] \\\n    && JAVA_HOME=\"$(\n      cd \"$JAVA_HOME\" || (\n        echo \"cannot cd into $JAVA_HOME.\" >&2\n        exit 1\n      )\n      pwd\n    )\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"$(which javac)\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"$(expr \"$javaExecutable\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=$(which readlink)\n    if [ ! \"$(expr \"$readLink\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n      if $darwin; then\n        javaHome=\"$(dirname \"$javaExecutable\")\"\n        javaExecutable=\"$(cd \"$javaHome\" && pwd -P)/javac\"\n      else\n        javaExecutable=\"$(readlink -f \"$javaExecutable\")\"\n      fi\n      javaHome=\"$(dirname \"$javaExecutable\")\"\n      javaHome=$(expr \"$javaHome\" : '\\(.*\\)/bin')\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ]; then\n  if [ -n \"$JAVA_HOME\" ]; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ]; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"$(\n      \\unset -f command 2>/dev/null\n      \\command -v java\n    )\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ]; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\" >&2\nfi\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n  if [ -z \"$1\" ]; then\n    echo \"Path not specified to find_maven_basedir\" >&2\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ]; do\n    if [ -d \"$wdir\"/.mvn ]; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=$(\n        cd \"$wdir/..\" || exit 1\n        pwd\n      )\n    fi\n    # end of workaround\n  done\n  printf '%s' \"$(\n    cd \"$basedir\" || exit 1\n    pwd\n  )\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    # Remove \\r in case we run on Windows within Git Bash\n    # and check out the repository with auto CRLF management\n    # enabled. Otherwise, we may read lines that are delimited with\n    # \\r\\n and produce $'-Xarg\\r' rather than -Xarg due to word\n    # splitting rules.\n    tr -s '\\r\\n' ' ' <\"$1\"\n  fi\n}\n\nlog() {\n  if [ \"$MVNW_VERBOSE\" = true ]; then\n    printf '%s\\n' \"$1\"\n  fi\n}\n\nBASE_DIR=$(find_maven_basedir \"$(dirname \"$0\")\")\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1\nfi\n\nMAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}\nexport MAVEN_PROJECTBASEDIR\nlog \"$MAVEN_PROJECTBASEDIR\"\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nwrapperJarPath=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\"\nif [ -r \"$wrapperJarPath\" ]; then\n  log \"Found $wrapperJarPath\"\nelse\n  log \"Couldn't find $wrapperJarPath, downloading it ...\"\n\n  if [ -n \"$MVNW_REPOURL\" ]; then\n    wrapperUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.3.2/maven-wrapper-3.3.2.jar\"\n  else\n    wrapperUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.3.2/maven-wrapper-3.3.2.jar\"\n  fi\n  while IFS=\"=\" read -r key value; do\n    # Remove '\\r' from value to allow usage on windows as IFS does not consider '\\r' as a separator ( considers space, tab, new line ('\\n'), and custom '=' )\n    safeValue=$(echo \"$value\" | tr -d '\\r')\n    case \"$key\" in wrapperUrl)\n      wrapperUrl=\"$safeValue\"\n      break\n      ;;\n    esac\n  done <\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\n  log \"Downloading from: $wrapperUrl\"\n\n  if $cygwin; then\n    wrapperJarPath=$(cygpath --path --windows \"$wrapperJarPath\")\n  fi\n\n  if command -v wget >/dev/null; then\n    log \"Found wget ... using wget\"\n    [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--quiet\"\n    if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n      wget $QUIET \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n    else\n      wget $QUIET --http-user=\"$MVNW_USERNAME\" --http-password=\"$MVNW_PASSWORD\" \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n    fi\n  elif command -v curl >/dev/null; then\n    log \"Found curl ... using curl\"\n    [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--silent\"\n    if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n      curl $QUIET -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n    else\n      curl $QUIET --user \"$MVNW_USERNAME:$MVNW_PASSWORD\" -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n    fi\n  else\n    log \"Falling back to using Java to download\"\n    javaSource=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n    javaClass=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.class\"\n    # For Cygwin, switch paths to Windows format before running javac\n    if $cygwin; then\n      javaSource=$(cygpath --path --windows \"$javaSource\")\n      javaClass=$(cygpath --path --windows \"$javaClass\")\n    fi\n    if [ -e \"$javaSource\" ]; then\n      if [ ! -e \"$javaClass\" ]; then\n        log \" - Compiling MavenWrapperDownloader.java ...\"\n        (\"$JAVA_HOME/bin/javac\" \"$javaSource\")\n      fi\n      if [ -e \"$javaClass\" ]; then\n        log \" - Running MavenWrapperDownloader.java ...\"\n        (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$wrapperUrl\" \"$wrapperJarPath\") || rm -f \"$wrapperJarPath\"\n      fi\n    fi\n  fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\n# If specified, validate the SHA-256 sum of the Maven wrapper jar file\nwrapperSha256Sum=\"\"\nwhile IFS=\"=\" read -r key value; do\n  case \"$key\" in wrapperSha256Sum)\n    wrapperSha256Sum=$value\n    break\n    ;;\n  esac\ndone <\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\nif [ -n \"$wrapperSha256Sum\" ]; then\n  wrapperSha256Result=false\n  if command -v sha256sum >/dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | sha256sum -c >/dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  elif command -v shasum >/dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | shasum -a 256 -c >/dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\" >&2\n    echo \"Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties.\" >&2\n    exit 1\n  fi\n  if [ $wrapperSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.\" >&2\n    echo \"Investigate or delete $wrapperJarPath to attempt a clean download.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified wrapperSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] \\\n    && JAVA_HOME=$(cygpath --path --windows \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] \\\n    && CLASSPATH=$(cygpath --path --windows \"$CLASSPATH\")\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] \\\n    && MAVEN_PROJECTBASEDIR=$(cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\")\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $*\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\n# shellcheck disable=SC2086 # safe args\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 7.5166015625,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    http://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Apache Maven Wrapper startup batch script, version 3.3.2\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho. >&2\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho. >&2\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho. >&2\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho. >&2\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset WRAPPER_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.3.2/maven-wrapper-3.3.2.jar\"\n\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET WRAPPER_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET WRAPPER_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.3.2/maven-wrapper-3.3.2.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %WRAPPER_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM If specified, validate the SHA-256 sum of the Maven wrapper jar file\nSET WRAPPER_SHA_256_SUM=\"\"\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperSha256Sum\" SET WRAPPER_SHA_256_SUM=%%B\n)\nIF NOT %WRAPPER_SHA_256_SUM%==\"\" (\n    powershell -Command \"&{\"^\n       \"Import-Module $PSHOME\\Modules\\Microsoft.PowerShell.Utility -Function Get-FileHash;\"^\n       \"$hash = (Get-FileHash \\\"%WRAPPER_JAR%\\\" -Algorithm SHA256).Hash.ToLower();\"^\n       \"If('%WRAPPER_SHA_256_SUM%' -ne $hash){\"^\n       \"  Write-Error 'Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.';\"^\n       \"  Write-Error 'Investigate or delete %WRAPPER_JAR% to attempt a clean download.';\"^\n       \"  Write-Error 'If you updated your Maven version, you need to update the specified wrapperSha256Sum property.';\"^\n       \"  exit 1;\"^\n       \"}\"^\n       \"}\"\n    if ERRORLEVEL 1 goto error\n)\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% ^\n  %JVM_CONFIG_MAVEN_PROPS% ^\n  %MAVEN_OPTS% ^\n  %MAVEN_DEBUG_OPTS% ^\n  -classpath %WRAPPER_JAR% ^\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n\ncmd /C exit /B %ERROR_CODE%\n"
        },
        {
          "name": "overview.html",
          "type": "blob",
          "size": 0.4189453125,
          "content": "<body>\n\nGuava is a set of core Java libraries from Google that includes new collection\ntypes (such as multimap and multiset), immutable collections, a graph library,\nand utilities for concurrency, I/O, hashing, primitives, strings, and more! It\nis widely used on most Java projects within Google, and widely used by many\nother companies as well.\n\n\n<p>For more information, see <a href=\"https://guava.dev/\">guava.dev</a>.\n</body>\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 22.2236328125,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.google.guava</groupId>\n  <artifactId>guava-parent</artifactId>\n  <version>HEAD-jre-SNAPSHOT</version>\n  <packaging>pom</packaging>\n  <name>Guava Maven Parent</name>\n  <description>Parent for guava artifacts</description>\n  <url>https://github.com/google/guava</url>\n  <properties>\n    <!--\n    When building Guava, you can pass (e.g.) `-Dsurefire.toolchain.version=21` to change which version to run tests under.\n    You may find that you need to use Java 11+ to *build* Guava, but it continues to work under Java 8, and you can run tests to verify that, as we do.\n    -->\n    <surefire.toolchain.version>${java.specification.version}</surefire.toolchain.version>\n    <!-- Override this with -Dtest.include=\"**/SomeTest.java\" on the CLI -->\n    <test.include>%regex[.*.class]</test.include>\n    <truth.version>1.4.4</truth.version>\n    <jspecify.version>1.0.0</jspecify.version>\n    <errorprone.version>2.36.0</errorprone.version>\n    <j2objc.version>3.0.0</j2objc.version>\n    <project.build.outputTimestamp>2025-01-02T00:00:00Z</project.build.outputTimestamp>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <!--\n    Some tests need reflective access to the internals of these packages. It is only the\n    tests themselves and not the code being tested that needs that access, though there's no\n    obvious way to ensure that.\n\n    We could consider arranging things so that only the tests we know need this would get\n    the add-opens. Right now that doesn't seem worth the effort, though.\n    -->\n    <test.add.opens>\n      --add-opens java.base/java.lang=ALL-UNNAMED\n      --add-opens java.base/java.util=ALL-UNNAMED\n      --add-opens java.base/sun.security.jca=ALL-UNNAMED\n    </test.add.opens>\n    <test.add.args></test.add.args>\n    <module.status>integration</module.status>\n    <variant.jvmEnvironment>standard-jvm</variant.jvmEnvironment>\n    <variant.jvmEnvironmentVariantName>jre</variant.jvmEnvironmentVariantName>\n    <otherVariant.version>HEAD-android-SNAPSHOT</otherVariant.version>\n    <otherVariant.jvmEnvironment>android</otherVariant.jvmEnvironment>\n    <otherVariant.jvmEnvironmentVariantName>android</otherVariant.jvmEnvironmentVariantName>\n  </properties>\n  <issueManagement>\n    <system>GitHub Issues</system>\n    <url>https://github.com/google/guava/issues</url>\n  </issueManagement>\n  <inceptionYear>2010</inceptionYear>\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>\n      <distribution>repo</distribution>\n    </license>\n  </licenses>\n  <scm>\n    <connection>scm:git:https://github.com/google/guava.git</connection>\n    <developerConnection>scm:git:git@github.com:google/guava.git</developerConnection>\n    <url>https://github.com/google/guava</url>\n  </scm>\n  <developers>\n    <developer>\n      <id>kevinb9n</id>\n      <name>Kevin Bourrillion</name>\n      <email>kevinb@google.com</email>\n      <organization>Google</organization>\n      <organizationUrl>http://www.google.com</organizationUrl>\n      <roles>\n        <role>owner</role>\n        <role>developer</role>\n      </roles>\n      <timezone>-8</timezone>\n    </developer>\n  </developers>\n  <ciManagement>\n    <system>GitHub Actions</system>\n    <url>https://github.com/google/guava/actions</url>\n  </ciManagement>\n  <modules>\n    <module>guava</module>\n    <module>guava-bom</module>\n    <module>guava-gwt</module>\n    <module>guava-testlib</module>\n    <module>guava-tests</module>\n  </modules>\n  <build>\n    <!-- Handle where Guava deviates from Maven defaults -->\n    <sourceDirectory>src</sourceDirectory>\n    <testSourceDirectory>test</testSourceDirectory>\n    <resources>\n      <resource>\n        <directory>..</directory>\n        <includes>\n          <include>LICENSE</include>\n        </includes>\n        <targetPath>META-INF</targetPath>\n      </resource>\n    </resources>\n    <testResources>\n      <testResource>\n        <directory>test</directory>\n        <excludes>\n          <exclude>**/*.java</exclude>\n        </excludes>\n      </testResource>\n    </testResources>\n    <plugins>\n      <plugin>\n        <artifactId>maven-enforcer-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>enforce-versions</id>\n            <goals>\n              <goal>enforce</goal>\n            </goals>\n            <configuration>\n              <rules>\n                <requireMavenVersion>\n                  <version>3.0.5</version>\n                </requireMavenVersion>\n                <requireJavaVersion>\n                  <version>1.8.0</version>\n                </requireJavaVersion>\n              </rules>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n    </plugins>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>3.13.0</version>\n          <configuration>\n            <source>1.8</source>\n            <target>1.8</target>\n            <encoding>UTF-8</encoding>\n            <parameters>true</parameters>\n            <compilerArgs>\n              <!--\n                   Make includes/excludes fully work:\n                   https://issues.apache.org/jira/browse/MCOMPILER-174\n\n                   (Compare what guava-gwt has to do for maven-javadoc-plugin.)\n              -->\n              <arg>-sourcepath</arg>\n              <arg>doesnotexist</arg>\n              <!-- https://errorprone.info/docs/installation#maven -->\n              <arg>-XDcompilePolicy=simple</arg>\n              <arg>--should-stop=ifError=FLOW</arg>\n\n              <!-- https://errorprone.info/docs/installation#maven -->\n              <!-- TODO(cpovirk): Enable NullArgumentForNonNullParameter for\n                   prod code. It's disabled automatically for \"test code\"\n                   (which is good: our tests have intentional violations), but\n                   Error Prone doesn't know it's building test code unless we\n                   pass -XepCompilingTestOnlyCode, and that argument needs to\n                   be passed as part of the same <arg> as -Xplugin:ErrorProne,\n                   and I gave up trying to figure out how to do that for test\n                   compilation only. -->\n              <arg>-Xplugin:ErrorProne -Xep:NullArgumentForNonNullParameter:OFF -Xep:Java8ApiChecker:ERROR</arg>\n              <!-- https://github.com/google/error-prone/blob/f8e33bc460be82ab22256a7ef8b979d7a2cacaba/docs/installation.md#jdk-16 -->\n              <!-- TODO(cpovirk): Use .mvn/jvm.config instead (per\n                   https://errorprone.info/docs/installation#maven). -->\n              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>\n              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>\n              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>\n              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.model=ALL-UNNAMED</arg>\n              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>\n              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>\n              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>\n              <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>\n              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>\n              <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>\n            </compilerArgs>\n            <annotationProcessorPaths>\n              <path>\n                <groupId>com.google.errorprone</groupId>\n                <artifactId>error_prone_core</artifactId>\n                <version>2.36.0</version>\n              </path>\n            </annotationProcessorPaths>\n            <!-- Fork because we need args like add-exports. (But see the TODO above about .mvn/jvm.config.) -->\n            <fork>true</fork>\n          </configuration>\n        </plugin>\n        <plugin>\n          <groupId>org.mvnsearch</groupId>\n          <artifactId>toolchains-maven-plugin</artifactId>\n          <executions>\n            <!--\n            We can apparently have only one <jdk> per execution: Others are silently ignored :(\n            To properly test this, you need to remove existing toolchains:\n            rm -rf ~/.m2/jdks/ ~/.m2/toolchains.xml\n            (But don't run that if you have put something into ~/.m2/toolchains.xml yourself.)\n            -->\n            <execution>\n              <id>download-23-and-surefire-version</id>\n              <goals>\n                <goal>toolchain</goal>\n              </goals>\n              <configuration>\n                <toolchains>\n                  <jdk>\n                    <version>23</version>\n                    <vendor>temurin</vendor>\n                  </jdk>\n                  <testJdk>\n                    <version>${surefire.toolchain.version}</version>\n                    <vendor>temurin</vendor>\n                  </testJdk>\n                </toolchains>\n              </configuration>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <artifactId>maven-toolchains-plugin</artifactId>\n          <version>3.2.0</version>\n          <executions>\n            <execution>\n              <goals>\n                <goal>toolchain</goal>\n              </goals>\n            </execution>\n          </executions>\n          <configuration>\n            <toolchains>\n              <jdk>\n                <version>23</version>\n              </jdk>\n            </toolchains>\n          </configuration>\n        </plugin>\n        <plugin>\n          <artifactId>maven-jar-plugin</artifactId>\n          <version>3.2.0</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-source-plugin</artifactId>\n          <version>3.3.1</version>\n          <executions>\n            <execution>\n              <id>attach-sources</id>\n              <goals>\n                <goal>jar-no-fork</goal>\n              </goals>\n            </execution>\n          </executions>\n          <dependencies>\n            <dependency>\n              <groupId>org.codehaus.plexus</groupId>\n              <artifactId>plexus-io</artifactId>\n              <!-- We need at least 3.5.1 to avoid https://github.com/codehaus-plexus/plexus-io/issues/109. Once we upgrade maven-source-plugin itself to a version new enough to depend on 3.5.1 or higher, we can remove this override. -->\n              <version>3.5.1</version>\n            </dependency>\n          </dependencies>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>animal-sniffer-maven-plugin</artifactId>\n          <version>1.23</version>\n          <dependencies>\n            <dependency>\n              <groupId>org.ow2.asm</groupId>\n              <artifactId>asm</artifactId>\n              <version>9.6</version>\n            </dependency>\n          </dependencies>\n          <configuration>\n            <annotations>\n              <annotation>com.google.common.base.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.cache.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.collect.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.collect.testing.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.collect.testing.testers.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.hash.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.io.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.math.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.primitives.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.reflect.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.testing.IgnoreJRERequirement</annotation>\n              <annotation>com.google.common.util.concurrent.IgnoreJRERequirement</annotation>\n            </annotations>\n            <checkTestClasses>true</checkTestClasses>\n            <signature>\n              <groupId>org.codehaus.mojo.signature</groupId>\n              <artifactId>java18</artifactId>\n              <version>1.0</version>\n            </signature>\n          </configuration>\n          <executions>\n            <execution>\n              <id>check-java-version-compatibility</id>\n              <phase>test</phase>\n              <goals>\n                <goal>check</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <artifactId>maven-javadoc-plugin</artifactId>\n          <version>3.11.2</version>\n          <configuration>\n            <jdkToolchain>\n              <version>23</version>\n            </jdkToolchain>\n            <quiet>true</quiet>\n            <notimestamp>true</notimestamp>\n            <encoding>UTF-8</encoding>\n            <docencoding>UTF-8</docencoding>\n            <charset>UTF-8</charset>\n            <additionalOptions>\n              <additionalOption>-XDignore.symbol.file</additionalOption>\n              <additionalOption>-Xdoclint:-html</additionalOption>\n            </additionalOptions>\n            <linksource>true</linksource>\n            <source>8</source>\n          </configuration>\n          <executions>\n            <execution>\n              <id>attach-docs</id>\n              <goals><goal>jar</goal></goals>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <artifactId>maven-dependency-plugin</artifactId>\n          <version>3.1.1</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-antrun-plugin</artifactId>\n          <version>1.6</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-surefire-plugin</artifactId>\n          <version>3.3.1</version>\n          <configuration>\n            <jdkToolchain>\n              <version>${surefire.toolchain.version}</version>\n            </jdkToolchain>\n            <includes>\n              <include>${test.include}</include>\n            </includes>\n            <!-- By having our own entries here, we also override the default exclusion filter, which excludes all nested classes. -->\n            <excludes>\n              <!-- https://github.com/google/guava/issues/2840 -->\n              <exclude>%regex[.*PackageSanityTests.*.class]</exclude>\n              <!-- FeatureUtilTest.*ExampleDerivedInterfaceTester, com.google.common.io.*Tester, incidentally FeatureSpecificTestSuiteBuilderTest.MyAbstractTester (but we don't care either way because it's not meant to run on its own but works OK if it does)... but not NullPointerTesterTest, etc. -->\n              <exclude>%regex[.*Tester.class]</exclude>\n              <!-- Anonymous TestCase subclasses in GeneratedMonitorTest -->\n              <exclude>%regex[.*[$]\\d+.class]</exclude>\n            </excludes>\n            <redirectTestOutputToFile>true</redirectTestOutputToFile>\n            <runOrder>alphabetical</runOrder>\n            <!-- Set max heap for tests. -->\n            <!-- Catch dependencies on the default locale by setting it to hi-IN. -->\n            <argLine>-Xmx1536M -Duser.language=hi -Duser.country=IN ${test.add.args} ${test.add.opens}</argLine>\n          </configuration>\n        </plugin>\n        <plugin>\n          <artifactId>maven-enforcer-plugin</artifactId>\n          <version>3.0.0-M3</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-resources-plugin</artifactId>\n          <version>3.3.1</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-install-plugin</artifactId>\n          <version>3.1.3</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-deploy-plugin</artifactId>\n          <version>3.1.3</version>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>build-helper-maven-plugin</artifactId>\n          <version>3.4.0</version>\n        </plugin>\n        <plugin>\n          <groupId>org.mvnsearch</groupId>\n          <artifactId>toolchains-maven-plugin</artifactId>\n          <version>4.5.0</version>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n  </build>\n  <distributionManagement>\n    <snapshotRepository>\n      <id>sonatype-nexus-snapshots</id>\n      <name>Sonatype Nexus Snapshots</name>\n      <url>https://oss.sonatype.org/content/repositories/snapshots/</url>\n    </snapshotRepository>\n    <repository>\n      <id>sonatype-nexus-staging</id>\n      <name>Nexus Release Repository</name>\n      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>\n    </repository>\n    <site>\n      <id>guava-site</id>\n      <name>Guava Documentation Site</name>\n      <url>scp://dummy.server/dontinstall/usestaging</url>\n    </site>\n  </distributionManagement>\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.jspecify</groupId>\n        <artifactId>jspecify</artifactId>\n        <version>${jspecify.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.errorprone</groupId>\n        <artifactId>error_prone_annotations</artifactId>\n        <version>${errorprone.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.j2objc</groupId>\n        <artifactId>j2objc-annotations</artifactId>\n        <version>${j2objc.version}</version>\n      </dependency>\n      <!--\n      We moved away from using dependencyManagement for test-only deps because of https://github.com/google/guava/issues/6654.\n      We could probably have resumed it after https://github.com/google/guava/pull/6664.\n      But it's always weird that published poms reference test-only libraries at all, so I'm not in any rush to do so.\n      -->\n    </dependencies>\n  </dependencyManagement>\n  <profiles>\n    <profile>\n      <id>sonatype-oss-release</id>\n      <build>\n        <plugins>\n          <plugin>\n            <artifactId>maven-gpg-plugin</artifactId>\n            <version>3.0.1</version>\n            <executions>\n              <execution>\n                <id>sign-artifacts</id>\n                <phase>verify</phase>\n                <goals>\n                  <goal>sign</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>suppress-open-jre-modules-for-toolchain-1.8</id>\n      <activation>\n        <property>\n          <name>surefire.toolchain.version</name>\n          <!-- the value provided by java.specification.version -->\n          <value>1.8</value>\n        </property>\n      </activation>\n      <properties>\n        <test.add.opens></test.add.opens>\n      </properties>\n    </profile>\n    <profile>\n      <id>suppress-open-jre-modules-for-toolchain-8</id>\n      <activation>\n        <property>\n          <name>surefire.toolchain.version</name>\n          <!-- the value provided by GitHub CI (which maybe we could even change, but supporting \"8\" seems nice for any users who try pass that value manually) -->\n          <value>8</value>\n        </property>\n      </activation>\n      <properties>\n        <test.add.opens></test.add.opens>\n      </properties>\n    </profile>\n    <!-- JDiff and the Gradle integration tests need Java 11 to be installed, and they need to know where it's located so that they can set JAVA_HOME to point to it. The following profile downloads a temurin Java 11 (if one isn't already available) and writes its location to target/java_11_home. This lets our JDiff and Gradle-integration-test scripts invoke the `print-java-11-home` profile and then read that file. -->\n    <profile>\n      <id>print-java-11-home</id>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.mvnsearch</groupId>\n            <artifactId>toolchains-maven-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>download-11</id>\n                <phase>initialize</phase>\n                <goals>\n                  <goal>toolchain</goal>\n                </goals>\n                <configuration>\n                  <toolchains>\n                    <jdk>\n                      <version>11</version>\n                      <vendor>temurin</vendor>\n                    </jdk>\n                  </toolchains>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <artifactId>maven-toolchains-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>select-java-11</id>\n                <phase>initialize</phase>\n                <goals>\n                  <goal>toolchain</goal>\n                </goals>\n              </execution>\n            </executions>\n            <configuration>\n              <toolchains>\n                <jdk>\n                  <version>11</version>\n                </jdk>\n              </toolchains>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>com.diamondq.maven</groupId>\n            <artifactId>javahome-resolver-maven-plugin</artifactId>\n            <version>1.0.2</version>\n            <executions>\n              <execution>\n                <id>resolve-java-11</id>\n                <phase>initialize</phase>\n                <goals>\n                  <goal>resolve</goal>\n                </goals>\n              </execution>\n            </executions>\n          </plugin>\n          <plugin>\n            <groupId>org.codehaus.mojo</groupId>\n            <artifactId>exec-maven-plugin</artifactId>\n            <version>3.5.0</version>\n            <executions>\n              <execution>\n                <id>print-java-11-home</id>\n                <phase>initialize</phase>\n                <goals>\n                  <goal>exec</goal>\n                </goals>\n                <configuration>\n                  <executable>echo</executable>\n                  <arguments>\n                    <argument>${javaHome}</argument>\n                  </arguments>\n                  <outputFile>${project.build.directory}/java_11_home</outputFile>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n  </profiles>\n</project>\n"
        },
        {
          "name": "proguard",
          "type": "tree",
          "content": null
        },
        {
          "name": "refactorings",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}