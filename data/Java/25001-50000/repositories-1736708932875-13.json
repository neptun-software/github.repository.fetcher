{
  "metadata": {
    "timestamp": 1736708932875,
    "page": 13,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "bumptech/glide",
      "stars": 34747,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.296875,
          "content": "# Android\nlocal.properties\n*.keystore\n*.DS_Store\n\n# Gradle\n.gradle\nbuild\njacoco.exec\n\n# gh-pages\ndoc/**\n_site/*\n_pages/*\ndocs/**/*\n\n# Vim\n*.swp\n*.swo\n\n# sed\n*.bak\n\n# Intellij\n*.iml\n*.ipr\n*.iws\n.idea/**\n!.idea/codeStyleSettings.xml\n!.idea/inspectionProfiles\n!.idea/inspectionProfiles/Project_Default.xml\n\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".idea",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.501953125,
          "content": "# Contributing\nContributions of all types are welcome.\nWe use GitHub as our bug and feature tracker both for code and for other aspects of the library (documentation, the wiki, etc.).\n\n\n## Asking Questions\nThe best way to ask general questions is to send an email to our [mailing list][2], or join [#glide-library on freenode.org][3].\n\n\n## Filing issues\nWhen in doubt, file an issue. We'd rather close a few duplicate issues than let a problem go unnoticed.\nSimilarly if you support a particular feature request, feel free to let us know by commenting on the issue or [subscribing][6] to the issue.\n\nTo file a new issue, please use our issue template and fill out the template as much as possible (remove irrelevant parts).\nThe more information you can provide, the more likely we are to be able help.\n\n\n## Contributing code\nPull requests are welcome for all parts of the codebase, especially the integration libraries.\nYou can find instructions on building the project in [README.md][5].\nOur code style is defined in Intellij project files in the repo and also by our Checkstyle config.\nIf you'd like to submit code, but can't get the style checks to pass, feel free to put up your pull request anyway and we can help you fix the style issues.\nIf you'd like to contribute code, you will need to sign [Google's individual contributor license agreement][4] which will be asked when you create the PR by [googlebot](https://github.com/googlebot) should you forget it.\n\n## Labels\nLabels on issues are managed by contributors, you don't have to worry about them. Here's a list of what they mean:\n\n * **bug**: feature that should work, but doesn't\n * **enhancement**: minor tweak/addition to existing behavior\n * **feature**: new behavior, bigger than enhancement, it gives more bang to Glide\n * **question**: no need to modify Glide to fix the issue, usually a usage problem\n * **reproducible**: has enough information to very easily reproduce, mostly in form of a small project in a GitHub repo\n * **repro-needed**: we need some code to be able to reproduce and debug locally, otherwise there's not much we can do\n * **duplicate**: there's another issue which already covers/tracks this\n * **wontfix**: working as intended, or won't be fixed due to compatibility or other reasons\n * **invalid**: there isn't enough information to make a verdict, or unrelated to Glide\n * **non-library**: issue is not in the core library code, but rather in documentation, samples, build process, releases\n * **v4**: problem originated in v4, or question about v4 (while v3 is in wide use)\n\n*bug + enhancement: feature that doesn't work, but it's an edge case that either has a workaround or doesn't affect many users*\n\n\n[1]: https://github.com/bumptech/glide/issues/new?body=**Glide%20Version**%3A%0A**Integration%20libraries**%3A%0A**Device/Android%20Version**%3A%0A**Issue%20details%20/%20Repro%20steps%20/%20Use%20case%20background**%3A%0A%0A**Glide%20load%20line**%3A%0A%60%60%60java%0AGlide.with%28...%29.....load%28...%29.....into%28...%29%3B%0A%60%60%60%0A%0A**Layout%20XML**%3A%0A%60%60%60xml%0A%3C...Layout%3E%0A%20%20%20%20%3CImageView%20android%3AscaleType%3D%22...%22%20...%20/%3E%0A%3C/..Layout%3E%0A%60%60%60%0A%0A**Stack%20trace%20/%20LogCat**%3A%0A%60%60%60ruby%0Apaste%20stack%20trace%20here%0A%60%60%60\n[2]: https://groups.google.com/forum/#!forum/glidelibrary\n[3]: http://webchat.freenode.net/?channels=glide-library\n[4]: https://developers.google.com/open-source/cla/individual\n[5]: https://github.com/bumptech/glide\n[6]: https://help.github.com/articles/subscribing-to-conversations/\n"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 2.0751953125,
          "content": "<!--\nPlease fill in the below fields with some data to help us best diagnose the issue.\nThe more specific you are, the better! You can help a lot by not making us ask these questions.\nFeel free to remove any irrelevant parts that you know are not related to the issue.\nAny HTML comment like this will be stripped when rendering markdown, no need to delete them.\n-->\n\n\n<!-- What version of Glide you're running, for example: 3.7.1 | 3.8.0-SNAPSHOT | 4.0.0-SNAPSHOT\nIt's essentially the version number from your build.gradle: `dependencies { compile '...:x.y.z' }` -->\n**Glide Version**:\n\n<!-- Do you use any integration library, like OkHttp3 or Volley? For example:\nFails to display with stock networking, but works with okhttp3-1.4.0 -->\n**Integration libraries**:\n\n<!-- What devices you managed to get the issue to come up on? For example:\nfails on Galaxy S4/GT-I9500 4.4.2, works fine on Nexus 6P 5.1 and Genymotion Nexus 5 5.0.1 -->\n**Device/Android Version**:\n\n<!-- Share the details of your issue in prose, detailing actual and expected behavior. It also helps if you give some info **why** you are trying to do something as opposed to **what** is not working. -->\n**Issue details / Repro steps / Use case background**: \n\n<!-- How do you use Glide?\nMake sure you include everything as is in your app's code:\nChanging a single method parameter can yield totally different results.\nPlease clarify any magic variables that appear in the code, for example: \"// `this` is a Fragment\"\n-->\n**Glide load line / `GlideModule` (if any) / list Adapter code (if any)**:\n```java\nGlide.with...\n```\n\n<!-- How does your app look like?\nWe're most interested in the layout attributes and the hierarchy around the ImageView -->\n**Layout XML**:\n```xml\n<FrameLayout xmlns:android=\"...\n```\n\n<!--\nWhat is the error message that you got in the log?\nYou can find some help on diagnosing issues here: https://github.com/bumptech/glide/wiki/Debugging-and-Error-Handling\n-->\n**Stack trace / LogCat**:\n```ruby\npaste stack trace and/or log here\n```\n\n<!-- Bonus points if you attach a relevant screenshot, screen recording or a small demo project -->\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 4.7841796875,
          "content": "License for everything not in third_party and not otherwise marked:\n\nCopyright 2014 Google, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are\npermitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice, this list of\n         conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice, this list\n         of conditions and the following disclaimer in the documentation and/or other materials\n         provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY GOOGLE, INC. ``AS IS'' AND ANY EXPRESS OR IMPLIED\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND\nFITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GOOGLE, INC. OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF\nADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe views and conclusions contained in the software and documentation are those of the\nauthors and should not be interpreted as representing official policies, either expressed\nor implied, of Google, Inc.\n---------------------------------------------------------------------------------------------\nLicense for third_party/disklrucache:\n\nCopyright 2012 Jake Wharton\nCopyright 2011 The Android Open Source Project\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n---------------------------------------------------------------------------------------------\nLicense for third_party/gif_decoder:\n\nCopyright (c) 2013 Xcellent Creations, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n---------------------------------------------------------------------------------------------\nLicense for third_party/gif_encoder/AnimatedGifEncoder.java and\nthird_party/gif_encoder/LZWEncoder.java:\n\nNo copyright asserted on the source code of this class. May be used for any\npurpose, however, refer to the Unisys LZW patent for restrictions on use of\nthe associated LZWEncoder class. Please forward any corrections to\nkweiner@fmsware.com.\n\n-----------------------------------------------------------------------------\nLicense for third_party/gif_encoder/NeuQuant.java\n\nCopyright (c) 1994 Anthony Dekker\n\nNEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994. See\n\"Kohonen neural networks for optimal colour quantization\" in \"Network:\nComputation in Neural Systems\" Vol. 5 (1994) pp 351-367. for a discussion of\nthe algorithm.\n\nAny party obtaining a copy of these files from the author, directly or\nindirectly, is granted, free of charge, a full and unrestricted irrevocable,\nworld-wide, paid up, royalty-free, nonexclusive right and license to deal in\nthis software and documentation files (the \"Software\"), including without\nlimitation the rights to use, copy, modify, merge, publish, distribute,\nsublicense, and/or sell copies of the Software, and to permit persons who\nreceive copies from any such party to do so, with the only requirement being\nthat this copyright notice remain intact.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 0.7626953125,
          "content": "<!-- Make sure you've run `gradlew clean check jar assemble` before commit. -->\n<!-- Don't forget that you can always force push to your private branches to make changes. -->\n<!-- Please make sure there are no weird commits in the change set by rebasing to latest upstream. -->\n<!-- Please squash typo/checkstyle/review fix commits into the base commit. -->\n\n## Description\n<!-- Please describe the changes you made on a high level. -->\n<!-- Make sure you reference the GitHub issue here if this change is related to one. -->\n\n## Motivation and Context\n<!-- Why is this change required? What problem does it solve? -->\n<!-- If it's fixing a bug reference it or provide repro steps. -->\n\n<!-- If you have any issues feel free to create the PR anyway, we'll help to resolve them. -->"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.64453125,
          "content": "Glide\n=====\n\n[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.bumptech.glide/glide/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.bumptech.glide/glide)\n| [View Glide's documentation][20] | [简体中文文档][22] | [Report an issue with Glide][5]\n\nGlide is a fast and efficient open source media management and image loading framework for Android that wraps media\ndecoding, memory and disk caching, and resource pooling into a simple and easy to use interface.\n\n![](static/glide_logo.png)\n\nGlide supports fetching, decoding, and displaying video stills, images, and animated GIFs. Glide includes a flexible API\nthat allows developers to plug in to almost any network stack. By default Glide uses a custom `HttpUrlConnection` based\nstack, but also includes utility libraries plug in to Google's Volley project or Square's OkHttp library instead.\n\nGlide's primary focus is on making scrolling any kind of a list of images as smooth and fast as possible, but Glide is\nalso effective for almost any case where you need to fetch, resize, and display a remote image.\n\nDownload\n--------\nFor detailed instructions and requirements, see Glide's [download and setup docs page][28].\n\nYou can download a jar from GitHub's [releases page][1].\n\nOr use Gradle:\n\n```gradle\nrepositories {\n  google()\n  mavenCentral()\n}\n\ndependencies {\n  implementation 'com.github.bumptech.glide:glide:4.16.0'\n}\n```\n\nOr Maven:\n\n```xml\n<dependency>\n  <groupId>com.github.bumptech.glide</groupId>\n  <artifactId>glide</artifactId>\n  <version>4.16.0</version>\n</dependency>\n```\n\nFor info on using the bleeding edge, see the [Snapshots][17] docs page.\n\nR8 / Proguard\n--------\nThe specific rules are [already bundled](library/proguard-rules.txt) into the aar which can be interpreted by R8 automatically\n\nHow do I use Glide?\n-------------------\nCheck out the [documentation][20] for pages on a variety of topics, and see the [javadocs][3].\n\nFor Glide v3, see the [wiki][2].\n\nSimple use cases will look something like this:\n\n```java\n// For a simple view:\n@Override public void onCreate(Bundle savedInstanceState) {\n  ...\n  ImageView imageView = (ImageView) findViewById(R.id.my_image_view);\n\n  Glide.with(this).load(\"https://goo.gl/gEgYUd\").into(imageView);\n}\n\n// For a simple image list:\n@Override public View getView(int position, View recycled, ViewGroup container) {\n  final ImageView myImageView;\n  if (recycled == null) {\n    myImageView = (ImageView) inflater.inflate(R.layout.my_image_view, container, false);\n  } else {\n    myImageView = (ImageView) recycled;\n  }\n\n  String url = myUrls.get(position);\n\n  Glide\n    .with(myFragment)\n    .load(url)\n    .centerCrop()\n    .placeholder(R.drawable.loading_spinner)\n    .into(myImageView);\n\n  return myImageView;\n}\n```\n\nStatus\n------\nVersion 4 is now released and stable. Updates are released periodically with new features and bug fixes.\n\nComments/bugs/questions/pull requests are always welcome! Please read [CONTRIBUTING.md][5] on how to report issues.\n\nCompatibility\n-------------\n\n * **Minimum Android SDK**: Glide v4 requires a minimum API level of 14.\n * **Compile Android SDK**: Glide v4 requires you to compile against API 26 or later.\n\n If you need to support older versions of Android, consider staying on [Glide v3][14], which works on API 10, but is not actively maintained.\n\n * **OkHttp 3.x**: There is an optional dependency available called `okhttp3-integration`, see the [docs page][23].\n * **Volley**: There is an optional dependency available called `volley-integration`, see the [docs page][24].\n * **Round Pictures**: `CircleImageView`/`CircularImageView`/`RoundedImageView` are known to have [issues][18] with `TransitionDrawable` (`.crossFade()` with `.thumbnail()` or `.placeholder()`) and animated GIFs, use a [`BitmapTransformation`][19] (`.circleCrop()` will be available in v4) or `.dontAnimate()` to fix the issue.\n * **Huge Images** (maps, comic strips): Glide can load huge images by downsampling them, but does not support zooming and panning `ImageView`s as they require special resource optimizations (such as tiling) to work without `OutOfMemoryError`s.\n\nBuild\n-----\nBuilding Glide with gradle is fairly straight forward:\n\n```shell\ngit clone https://github.com/bumptech/glide.git\ncd glide\n./gradlew jar\n```\n\n**Note**: Make sure your *Android SDK* has the *Android Support Repository* installed, and that your `$ANDROID_HOME` environment\nvariable is pointing at the SDK or add a `local.properties` file in the root project with a `sdk.dir=...` line.\n\nSamples\n-------\nFollow the steps in the [Build](#build) section to set up the project and then:\n\n```shell\n./gradlew :samples:flickr:run\n./gradlew :samples:giphy:run\n./gradlew :samples:svg:run\n./gradlew :samples:contacturi:run\n```\nYou may also find precompiled APKs on the [releases page][1].\n\nDevelopment\n-----------\nFollow the steps in the [Build](#build) section to setup the project and then edit the files however you wish.\n[Android Studio][26] cleanly imports both Glide's source and tests and is the recommended way to work with Glide.\n\nTo open the project in Android Studio:\n\n1. Go to *File* menu or the *Welcome Screen*\n2. Click on *Open...*\n3. Navigate to Glide's root directory.\n4. Select `setting.gradle`\n\nFor more details, see the [Contributing docs page][27].\n\nGetting Help\n------------\nTo report a specific problem or feature request, [open a new issue on Github][5]. For questions, suggestions, or\nanything else, email [Glide's discussion group][6], or join our IRC channel: [irc.freenode.net#glide-library][13].\n\nContributing\n------------\nBefore submitting pull requests, contributors must sign Google's [individual contributor license agreement][7].\n\nThanks\n------\n* The **Android team** and **Jake Wharton** for the [disk cache implementation][8] Glide's disk cache is based on.\n* **Dave Smith** for the [GIF decoder gist][9] Glide's GIF decoder is based on.\n* **Chris Banes** for his [gradle-mvn-push][10] script.\n* **Corey Hall** for Glide's [amazing logo][11].\n* Everyone who has contributed code and reported issues!\n\nAuthor\n------\nSam Judd - @sjudd on GitHub, @samajudd on Twitter\n\nLicense\n-------\nBSD, part MIT and Apache 2.0. See the [LICENSE][16] file for details.\n\nDisclaimer\n---------\nThis is not an official Google product.\n\n[1]: https://github.com/bumptech/glide/releases\n[2]: https://github.com/bumptech/glide/wiki\n[3]: https://bumptech.github.io/glide/ref/javadocs.html\n[4]: https://www.jetbrains.com/idea/download/\n[5]: https://github.com/bumptech/glide/blob/master/CONTRIBUTING.md\n[6]: https://groups.google.com/forum/#!forum/glidelibrary\n[7]: https://developers.google.com/open-source/cla/individual\n[8]: https://github.com/JakeWharton/DiskLruCache\n[9]: https://gist.github.com/devunwired/4479231\n[10]: https://github.com/chrisbanes/gradle-mvn-push\n[11]: static/glide_logo.png\n[12]: https://github.com/bumptech/glide/wiki/Integration-Libraries\n[13]: http://webchat.freenode.net/?channels=glide-library\n[14]: https://github.com/bumptech/glide/tree/3.0\n[15]: https://github.com/bumptech/glide/tree/master\n[16]: https://github.com/bumptech/glide/blob/master/LICENSE\n[17]: http://bumptech.github.io/glide/dev/snapshots.html\n[18]: https://github.com/bumptech/glide/issues?q=is%3Aissue+CircleImageView+OR+CircularImageView+OR+RoundedImageView\n[19]: https://github.com/wasabeef/glide-transformations\n[20]: https://bumptech.github.io/glide/\n[22]: https://muyangmin.github.io/glide-docs-cn/\n[23]: http://bumptech.github.io/glide/int/okhttp3.html\n[24]: http://bumptech.github.io/glide/int/volley.html\n[25]: http://bumptech.github.io/glide/doc/download-setup.html#proguard\n[26]: https://developer.android.com/studio/index.html\n[27]: http://bumptech.github.io/glide/dev/contributing.html\n[28]: http://bumptech.github.io/glide/doc/download-setup.html\n"
        },
        {
          "name": "annotation",
          "type": "tree",
          "content": null
        },
        {
          "name": "benchmark",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 7.3525390625,
          "content": "import org.gradle.api.tasks.testing.logging.TestExceptionFormat\nimport se.bjurr.violations.gradle.plugin.ViolationsTask\n\nbuildscript {\n    repositories {\n        google()\n        mavenCentral()\n        gradlePluginPortal()\n    }\n\n    dependencies {\n        classpath libs.android.gradle\n        if (!hasProperty('DISABLE_ERROR_PRONE')) {\n            classpath libs.errorprone.gradle\n        }\n        classpath libs.proguard.gradle\n        classpath libs.violations\n        classpath libs.androidx.benchmark.gradle\n        classpath libs.kotlin.gradle\n        classpath libs.ksp.gradle\n        classpath libs.coroutines.binarycompat.gradle\n        classpath libs.dokka.gradle\n        classpath 'com.guardsquare:proguard-gradle:' + (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_11) ? '7.3.2' : '7.1.0')\n    }\n}\n\nrepositories {\n    google()\n    mavenCentral()\n}\n\napply plugin: 'binary-compatibility-validator'\napply plugin: 'org.jetbrains.dokka'\n\napiValidation {\n    ignoredProjects += [\"ksp\", \"test\", \"gallery\", \"integrationtest\", \"sqljournaldiskcache\"]\n    nonPublicMarkers += [\"com.bumptech.glide.integration.ktx.InternalGlideApi\"]\n}\n\n// See http://blog.joda.org/2014/02/turning-off-doclint-in-jdk-8-javadoc.html.\nif (JavaVersion.current().isJava8Compatible()) {\n    allprojects {\n        tasks.withType(Javadoc) {\n            options.addStringOption('Xdoclint:none', '-quiet')\n        }\n    }\n}\n\ndokkaHtmlMultiModule.configure {\n    moduleName.set(\"Glide\")\n}\nafterEvaluate {\n    tasks.named(\"dokkaHtmlMultiModule\") {\n        pluginsMapConfiguration.set(\n                [\n        \"org.jetbrains.dokka.base.DokkaBase\": \"\"\"{\n          \"customStyleSheets\": [\"${projectDir.toString()}/static/logo-styles.css\"],\n          \"customAssets\" : [\"${projectDir.toString()}/static/logo-icon.svg\", \"${projectDir.toString()}/static/glide_circle_logo.png\"]\n         }\"\"\"\n                ]\n        )\n    }\n}\n\nsubprojects { project ->\n    repositories {\n        google()\n        mavenCentral()\n        maven {\n            url \"https://oss.sonatype.org/content/repositories/snapshots\"\n        }\n        gradlePluginPortal()\n    }\n\n    // Exclude packages not intended for public use.\n    if ([\n          \"testutil\",\n          \"flickr\",\n          \"giphy\",\n          \"imgur\",\n          \"svg\",\n          \"gallery\",\n          \"contacturi\",\n          \"test\",\n          \"gif_decoder\",\n          \"gifencoder\",\n          \"compiler\",\n          \"benchmark\",\n          \"integrationtest\",\n          \"instrumentation\",\n          \"glide-parent\",\n          \"integration\",\n          \"samples\",\n          \"third_party\"\n    ].contains(project.getName())) {\n        afterEvaluate {\n            project.apply plugin: 'org.jetbrains.dokka'\n\n            project.tasks.dokkaHtmlPartial.enabled = false\n        }\n    } else {\n        afterEvaluate {\n            project.apply plugin: 'org.jetbrains.dokka'\n\n            project.tasks.dokkaHtmlPartial.configure {\n                dokkaSourceSets {\n                    // Kotlin works out of the box\n                     if (!project.plugins.hasPlugin(\"kotlin-android\") && project.plugins.hasPlugin(\"com.android.library\")) {\n                        // Java Android modules\n                        register(\"main\") {\n                            sourceRoots.from(project.android.sourceSets.main.java.srcDirs)\n\n                        }\n                    } else if (project.plugins.hasPlugin(\"java\") && \"ksp\" != project.getName()) {\n                        // Java only modules (ksp is not useful and uses multiple plugins)\n                        register(\"main\") {\n                            sourceRoots.from(sourceSets.main.java.srcDirs)\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    afterEvaluate {\n        if (project.plugins.hasPlugin(\"com.android.application\")) {\n            project.dependencies {\n                // Hack around some version mismatches: https://stackoverflow.com/questions/75263047/duplicate-class-in-kotlin-android\n                implementation(platform(libs.kotlin.bom))\n            }\n        }\n    }\n\n    tasks.withType(JavaCompile) {\n        // gifencoder is a legacy project that has a ton of warnings and is basically never\n        // modified, so we're not going to worry about cleaning it up.\n        // Imgur uses generated code from dagger that has warnings.\n        if (\"gifencoder\" != project.getName() && \"imgur\" != project.getName()) {\n          options.compilerArgs.addAll([\n            //Treat all warnings as errors.\n            \"-Werror\",\n            //Enable all warnings.\n            \"-Xlint:all\",\n            // Disable warnings about source 7 being obsolete.\n            \"-Xlint:-options\",\n            // Java expects every annotation to have a processor, but we use\n            // javax.annotation.Nullable, which doesn't have one.\n            \"-Xlint:-processing\",\n            // See https://github.com/google/dagger/issues/945\n            // and https://bugs.openjdk.java.net/browse/JDK-8190452\n            \"-Xlint:-classfile\",\n             // Disable deprecation warnings for ViewTarget/BaseTarget for now.\n            \"-Xlint:-deprecation\",\n          ])\n        }\n    }\n\n    tasks.withType(Test) {\n        testLogging {\n            exceptionFormat = TestExceptionFormat.FULL\n        }\n    }\n\n    // Avoid issues like #2452.\n    tasks.withType(Jar) {\n        duplicatesStrategy = DuplicatesStrategy.FAIL\n    }\n\n    apply plugin: 'checkstyle'\n\n    checkstyle {\n        toolVersion = '8.45.1'\n    }\n\n    checkstyle {\n        configFile = rootProject.file('checkstyle.xml')\n        configProperties.checkStyleConfigDir = rootProject.rootDir\n    }\n\n    task checkstyle(type: Checkstyle) {\n        source 'src'\n        include '**/*.java'\n        exclude '**/gen/**'\n        // Caught by the violations plugin.\n        ignoreFailures = true\n\n        // empty classpath\n        classpath = files()\n    }\n\n    apply plugin: \"se.bjurr.violations.violations-gradle-plugin\"\n\n    task violations(type: ViolationsTask) {\n        minSeverity = 'INFO'\n        detailLevel = 'VERBOSE'\n        maxViolations = 0\n        diffMaxViolations = 0\n\n        // Formats are listed here: https://github.com/tomasbjerre/violations-lib\n        def dir = projectDir.absolutePath\n        violations = [\n                [\"PMD\",         dir, \".*/pmd/.*\\\\.xml\\$\",        \"PMD\"],\n                [\"ANDROIDLINT\", dir, \".*/lint-results\\\\.xml\\$\",  \"AndroidLint\"],\n                [\"CHECKSTYLE\",  dir, \".*/checkstyle/.*\\\\.xml\\$\", \"Checkstyle\"],\n        ]\n    }\n\n    afterEvaluate {\n        if (project.hasProperty(\"android\")\n                && project.name != 'pmd' ) {\n            android {\n                lint {\n                    warningsAsErrors true\n                    quiet true\n                    // Caught by the violations plugin.\n                    abortOnError false\n                }\n\n                // We don't need a BuildConfig constants class.\n                buildFeatures {\n                    buildConfig = false\n                }\n\n                // Signing isn't relevant to a library. Our signing is done via\n                // a GPG key at upload time, there's no APK to sign.\n                buildTypes {\n                    release {\n                        signingConfig signingConfigs.debug\n                    }\n                }\n            }\n        }\n\n        if (project.tasks.findByName('check')) {\n            check.dependsOn('checkstyle')\n            check.finalizedBy violations\n        }\n    }\n}\n"
        },
        {
          "name": "checkstyle.xml",
          "type": "blob",
          "size": 5.8681640625,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE module PUBLIC \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\" \"http://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n    <module name=\"FileLength\"/>\n    <module name=\"FileTabCharacter\"/>\n\n    <module name=\"SuppressionFilter\">\n        <property name=\"file\" value=\"${checkStyleConfigDir}/checkstyle_suppressions.xml\" />\n    </module>\n\n    <!-- Trailing spaces -->\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"\\s+$\"/>\n        <property name=\"message\" value=\"Line has trailing spaces.\"/>\n    </module>\n\n    <!-- Ensure trailling newline for compatibility -->\n    <module name=\"NewlineAtEndOfFile\">\n        <property name=\"lineSeparator\" value=\"lf\"/>\n    </module>\n\n    <!-- Space after 'for' and 'if' -->\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"^\\s*(for|if)\\b[^ ]\"/>\n        <property name=\"message\" value=\"Space needed before opening parenthesis.\"/>\n    </module>\n\n    <!-- For each spacing -->\n    <module name=\"RegexpSingleline\">\n        <property name=\"format\" value=\"^\\s*for \\(.*?([^ ]:|:[^ ])\"/>\n        <property name=\"message\" value=\"Space needed around ':' character.\"/>\n    </module>\n    <module name=\"SuppressWarningsFilter\" />\n    <module name=\"TreeWalker\">\n        <module name=\"SuppressWarningsHolder\" />\n\n        <!-- Checks for uncommented main() methods (debugging leftovers). -->\n        <!-- Checks that long constants are defined with an upper ell. -->\n        <!-- See http://checkstyle.sourceforge.net/config_misc.html#UpperEll -->\n        <module name=\"UpperEll\" />\n\n        <!-- Checks the style of array type definitions. -->\n        <!-- See http://checkstyle.sourceforge.net/config_misc.html#ArrayTypeStyle -->\n        <module name=\"ArrayTypeStyle\" />\n\n        <!-- Checks that the outer type name and the file name match. -->\n        <!-- See http://checkstyle.sourceforge.net/config_misc.html#OuterTypeFilename -->\n        <module name=\"OuterTypeFilename\" />\n\n        <!-- Validates Javadoc comments to help ensure they are well formed. -->\n        <!-- See http://checkstyle.sourceforge.net/config_javadoc.html#JavadocStyle -->\n        <module name=\"JavadocStyle\" />\n        <module name=\"JavadocType\">\n            <property name=\"scope\" value=\"public\"/>\n        </module>\n\n        <!-- Each of these naming modules validates identifiers for particular\n                code elements. -->\n        <!-- See http://checkstyle.sourceforge.net/config_naming.html -->\n        <module name=\"ConstantName\">\n            <property name=\"format\" value=\"^[A-Z][A-Z0-9\\$]*(_[A-Z0-9\\$]+)*$\" />\n        </module>\n        <module name=\"LocalFinalVariableName\" />\n        <module name=\"LocalVariableName\" />\n        <module name=\"MemberName\">\n            <property name=\"format\" value=\"^[a-z][a-zA-Z0-9_\\$]*$\" />\n        </module>\n        <module name=\"MethodName\" >\n            <property name=\"format\" value=\"^[a-z][a-zA-Z0-9]*(_[a-zA-Z0-9]+)*$\"/>\n        </module>\n        <module name=\"PackageName\" />\n        <module name=\"ParameterName\" />\n        <module name=\"StaticVariableName\" />\n        <module name=\"TypeName\" />\n\n        <!-- Checks for imports. -->\n        <!-- See http://checkstyle.sourceforge.net/config_imports.html -->\n        <module name=\"AvoidStarImport\"/>\n        <module name=\"RedundantImport\"/>\n        <module name=\"UnusedImports\"/>\n        <!-- Default sun.* packages -->\n        <module name=\"IllegalImport\">\n            <property name=\"illegalPkgs\" value=\"sun\" />\n            <message key=\"import.illegal\" value=\"Import from illegal package - {0}. Programs that contain direct calls to the sun.* packages are not 100% Pure Java.\" />\n        </module>\n        <!-- Prevent importing JUnit 3 classes and Assert methods -->\n        <module name=\"IllegalImport\">\n            <property name=\"illegalPkgs\" value=\"junit\" />\n            <message key=\"import.illegal\" value=\"Import from illegal package - {0}. Tests are written in JUnit 4, use org.junit.* equivalents.\" />\n        </module>\n        <!-- Prevent importing Mockito matchers directly -->\n        <module name=\"IllegalImport\">\n            <property name=\"illegalPkgs\" value=\"org.mockito.internal\" />\n            <message key=\"import.illegal\" value=\"Import from illegal package - {0}. Use org.mockito.Matchers to instantiate argument matchers.\" />\n        </module>\n\n        <!-- Modifier Checks. -->\n        <!-- See http://checkstyle.sourceforge.net/config_modifier.html -->\n        <module name=\"ModifierOrder\" />\n\n        <!-- Checks for blocks. -->\n        <!-- See http://checkstyle.sourceforge.net/config_blocks.html -->\n        <module name=\"AvoidNestedBlocks\">\n            <property name=\"allowInSwitchCase\" value=\"true\" />\n        </module>\n        <module name=\"EmptyBlock\" >\n            <property name=\"option\" value=\"text\"/>\n        </module>\n        <module name=\"NeedBraces\"/>\n\n        <module name=\"LeftCurly\" />\n        <module name=\"RightCurly\">\n            <property name=\"tokens\"\n              value=\"LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_ELSE\" />\n        </module>\n\n        <!-- Checks for common coding problems. -->\n        <!-- See http://checkstyle.sourceforge.net/config_coding.html -->\n        <module name=\"CovariantEquals\" />\n        <module name=\"DefaultComesLast\" />\n        <module name=\"EmptyStatement\" />\n        <module name=\"EqualsHashCode\" />\n        <module name=\"NoClone\" />\n        <module name=\"NoFinalizer\" />\n        <module name=\"OneStatementPerLine\" />\n        <module name=\"IllegalInstantiation\"/>\n        <module name=\"SimplifyBooleanExpression\" />\n        <module name=\"SimplifyBooleanReturn\" />\n        <module name=\"StringLiteralEquality\" />\n        <module name=\"UnnecessaryParentheses\" />\n\n        <!-- Checks for class design. -->\n        <!-- See http://checkstyle.sourceforge.net/config_design.html -->\n        <module name=\"FinalClass\" />\n        <module name=\"InterfaceIsType\" />\n    </module>\n</module>"
        },
        {
          "name": "checkstyle_suppressions.xml",
          "type": "blob",
          "size": 1.640625,
          "content": "<?xml version=\"1.0\"?>\n\n<!DOCTYPE suppressions PUBLIC\n    \"-//Puppy Crawl//DTD Suppressions 1.1//EN\"\n    \"http://www.puppycrawl.com/dtds/suppressions_1_1.dtd\">\n\n<suppressions>\n    <suppress files=\".*[/\\\\]library[/\\\\]src[/\\\\]main[/\\\\]java[/\\\\]com[/\\\\]bumptech[/\\\\]glide[/\\\\]GlideExperiments.java\" checks=\"FinalClass\"/>\n    <suppress files=\".*[/\\\\]library[/\\\\]src[/\\\\]main[/\\\\]java[/\\\\]com[/\\\\]bumptech[/\\\\]glide[/\\\\]util[/\\\\]CachedHashCodeArrayMap.java\" checks=\"EqualsHashCodeCheck\"/>\n    <suppress files=\".*[/\\\\]library[/\\\\]test[/\\\\]src[/\\\\]test[/\\\\].*\" checks=\"Javadoc.*\"/>\n    <suppress files=\".*[/\\\\]annotation[/\\\\]compiler[/\\\\]test[/\\\\]src[/\\\\]test[/\\\\]resources[/\\\\].*\" checks=\".*\"/>\n    <suppress files=\".*[/\\\\]integration[/\\\\]concurrent[/\\\\]src[/\\\\]test[/\\\\].*\" checks=\".*\"/>\n    <suppress files=\".*[/\\\\]integration[/\\\\]sqljournaldiskcache[/\\\\]src[/\\\\]test[/\\\\].*\" checks=\"Javadoc.*\"/>\n    <suppress files=\".*[/\\\\]integration[/\\\\]sqljournaldiskcache[/\\\\]src[/\\\\]main[/\\\\].*\" checks=\"InterfaceIsTypeCheck.*\"/>\n    <suppress files=\".*[/\\\\]testutil[/\\\\]src[/\\\\].*\" checks=\"Javadoc.*\"/>\n    <suppress files=\".*[/\\\\]benchmark[/\\\\]src[/\\\\].*\" checks=\"Javadoc.*\"/>\n    <suppress files=\".*[/\\\\]instrumentation[/\\\\]src[/\\\\].*\" checks=\"Javadoc.*\"/>\n    <suppress files=\".*[/\\\\]instrumentation[/\\\\]src[/\\\\]androidTest[/\\\\].*\" checks=\"Javadoc.*\"/>\n    <suppress files=\".*[/\\\\]instrumentation[/\\\\]src[/\\\\]androidTest[/\\\\].*[/\\\\]ResourceIds\" checks=\".*\"/>\n    <suppress files=\".*[/\\\\]gif_encoder[/\\\\].*\" checks=\".*\"/>\n    <suppress files=\".*RequestBuilder.java|ChildLoadProvider.java|TransitionOptions.java|BaseDecodeOptions.java|RequestOptions.java\" checks=\"NoClone\" />\n</suppressions>\n\n"
        },
        {
          "name": "debug.keystore",
          "type": "blob",
          "size": 1.228515625,
          "content": null
        },
        {
          "name": "exifsamples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcloud-bumptech.json.enc",
          "type": "blob",
          "size": 2.296875,
          "content": null
        },
        {
          "name": "gcloud-sjudd.json.enc",
          "type": "blob",
          "size": 2.296875,
          "content": null
        },
        {
          "name": "glide",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.4619140625,
          "content": "## For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n#\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\n# Default value: -Xmx1024m -XX:MaxPermSize=256m\n# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\n#\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n#Sun Jun 05 16:53:18 EST 2022\n\n## Grouping\nGROUP=com.github.bumptech.glide\n\n## Metadata\nPOM_DESCRIPTION=A fast and efficient image loading library for Android focused on smooth scrolling.\nPOM_DEVELOPER_EMAIL=judds@google.com\nPOM_DEVELOPER_ID=sjudd\nPOM_DEVELOPER_NAME=Sam Judd\nPOM_SCM_CONNECTION=scm\\:git@github.com\\:bumptech/glide.git\nPOM_SCM_DEV_CONNECTION=scm\\:git@github.com\\:bumptech/glide.git\nPOM_SCM_URL=https\\://github.com/bumptech/glide\nPOM_URL=https\\://github.com/bumptech/glide\n\n## Gradle config\nandroid.useAndroidX=true\norg.gradle.configureondemand=false\norg.gradle.daemon=true\norg.gradle.jvmargs=-Xmx4096M\nTEST_JVM_MEMORY_SIZE=4096M\n\n## Glide versioning - these may be overwritten in lower level gradle.properties files\nVERSION_MAJOR=5\nVERSION_MINOR=0\nVERSION_PATCH=0\nVERSION_NAME=5.0.0-SNAPSHOT\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.2978515625,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\nAPP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045 \n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045 \n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n# Collect all arguments for the java command;\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n#     shell script including quotes and variable substitutions, so put them in\n#     double quotes to make sure that they get re-expanded; and\n#   * put everything else in single quotes, so that it's not re-expanded.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.80078125,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\"==\"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\r\n@rem This is normally unused\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif %ERRORLEVEL% equ 0 goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto execute\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif %ERRORLEVEL% equ 0 goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nset EXIT_CODE=%ERRORLEVEL%\r\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\r\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\r\nexit /b %EXIT_CODE%\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "instrumentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "library",
          "type": "tree",
          "content": null
        },
        {
          "name": "mocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 0.296875,
          "content": "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"extends\": [\n    \"config:recommended\"\n  ],\n  \"semanticCommits\": \"disabled\",\n  \"packageRules\": [\n    {\n      \"matchUpdateTypes\": [\"minor\", \"patch\", \"pin\", \"digest\"],\n      \"automerge\": true,\n      \"automergeType\": \"branch\"\n    }\n  ]\n}\n"
        },
        {
          "name": "samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 9.154296875,
          "content": "exec {\n    commandLine \"git\", \"submodule\", \"update\", \"--init\", \"--recursive\"\n    ignoreExitValue true\n}\ninclude ':library'\ninclude ':library:pmd'\ninclude ':library:test'\ninclude ':instrumentation'\ninclude ':annotation'\ninclude ':annotation:compiler'\n//include ':annotation:compiler:test'\ninclude ':annotation:ksp'\ninclude ':annotation:ksp:test'\ninclude ':annotation:ksp:integrationtest'\ninclude ':benchmark'\ninclude ':glide'\ninclude ':third_party:gif_decoder'\ninclude ':third_party:disklrucache'\ninclude ':samples:flickr'\ninclude ':samples:giphy'\ninclude ':samples:svg'\ninclude ':samples:gallery'\ninclude ':samples:contacturi'\ninclude ':samples:imgur'\ninclude ':integration'\ninclude ':integration:avif'\ninclude ':integration:compose'\ninclude ':integration:concurrent'\ninclude ':integration:cronet'\ninclude ':integration:gifencoder'\ninclude ':integration:ktx'\ninclude ':integration:okhttp'\ninclude ':integration:okhttp3'\ninclude ':integration:okhttp4'\ninclude ':integration:recyclerview'\ninclude ':integration:sqljournaldiskcache'\ninclude ':integration:volley'\ninclude ':testutil'\ninclude ':mocks'\n\nrootProject.name = 'glide-parent'\n\ndependencyResolutionManagement {\n    // versionCatalogs end up in the global namespace and we can't nest namespaces, so we end up\n    // stuffing everything into libs :/.\n    versionCatalogs {\n        libs {\n            // Versions for things other than dependencies\n            version('compile-sdk-version', 'android-34')\n            version('min-sdk-version', '14')\n            version('okhttp-min-sdk-version', '21')\n            version('target-sdk-version', '32')\n            version('pmd', '6.0.0')\n            // 1.5.3 requires Kotlin 1.9.x, which doesn't seem to be supported by the coroutines\n            // libraries: https://github.com/Kotlin/kotlinx.coroutines/issues/3812\n            version('kotlin-compiler-extension', '1.4.8')\n\n            // Versions for dependencies\n            version('compose', '1.5.1')\n            version('coroutines', '1.7.3')\n            version('dagger', '2.47')\n            version('errorprone', '2.18.0')\n            version('kotlin', '1.8.22')\n            version('mockito', '5.3.1')\n            version('retrofit', '2.3.0')\n            version('androidx-benchmark', '1.2.0-beta05')\n            version('androidx-espresso', '3.5.1')\n            version('androidx-fragment', '1.6.1')\n            version('ksp', '1.8.22-1.0.11')\n\n            library('androidx-multidex', \"androidx.multidex:multidex:2.0.1\")\n            library('autoservice', 'com.google.auto.service:auto-service:1.0-rc3')\n            library('autoservice.annotations', 'com.google.auto.service:auto-service-annotations:1.0.1')\n            library('android-gradle', 'com.android.tools.build:gradle:8.1.1')\n            library('androidx-cardview', 'androidx.cardview:cardview:1.0.0')\n            library('androidx-core', 'androidx.core:core:1.12.0')\n            library('androidx-annotation', 'androidx.annotation:annotation:1.7.1')\n            library('androidx-appcompat', 'androidx.appcompat:appcompat:1.6.1')\n            library('androidx-benchmark.gradle', 'androidx.benchmark', 'benchmark-gradle-plugin').versionRef('androidx-benchmark')\n            library('androidx-benchmark.junit', 'androidx.benchmark', 'benchmark-junit4').versionRef('androidx-benchmark')\n            library('androidx-core.ktx', 'androidx.core:core-ktx:1.12.0')\n            library('androidx-espresso', 'androidx.test.espresso', 'espresso-core').versionRef('androidx-espresso')\n            library('androidx-espresso.idling', 'androidx.test.espresso.idling', 'idling-concurrent').versionRef('androidx-espresso')\n            library('androidx-exifinterface', 'androidx.exifinterface:exifinterface:1.3.6')\n            library('androidx-fragment', 'androidx.fragment', 'fragment').versionRef('androidx-fragment')\n            library('androidx-fragment.ktx', 'androidx.fragment', 'fragment-ktx').versionRef('androidx-fragment')\n            library('androidx-futures', 'androidx.concurrent:concurrent-futures:1.1.0')\n            library('androidx-junit', 'androidx.test.ext:junit:1.1.5')\n            library('androidx-recyclerview','androidx.recyclerview:recyclerview:1.3.1')\n            library('androidx-test.core', 'androidx.test:core:1.4.0')\n            library('androidx-test.ktx', 'androidx.test:core-ktx:1.5.0')\n            library('androidx-test.ktx.junit', 'androidx.test.ext:junit-ktx:1.1.5')\n            library('androidx-test.rules', 'androidx.test:rules:1.4.0')\n            library('androidx-test.runner', 'androidx.test:runner:1.4.0')\n            library('androidx-tracing', 'androidx.tracing:tracing:1.0.0')\n            library('androidx.vectordrawable', 'androidx.vectordrawable:vectordrawable-animated:1.1.0')\n            library('proguard-gradle', 'com.guardsquare:proguard-gradle:7.1.0')\n            library('compose-foundation', 'androidx.compose.foundation', 'foundation').versionRef('compose')\n            library('compose-material', 'androidx.compose.material:material:1.5.1')\n            library('compose-ui', 'androidx.compose.ui', 'ui').versionRef('compose')\n            library('compose-ui.testmanifest', 'androidx.compose.ui', 'ui-test-manifest').versionRef('compose')\n            library('compose-ui.testjunit4', 'androidx.compose.ui', 'ui-test-junit4').versionRef('compose')\n            library('coroutines-binarycompat.gradle', 'org.jetbrains.kotlinx:binary-compatibility-validator:0.11.0')\n            library('coroutines-android', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-android').versionRef('coroutines')\n            library('coroutines-core', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-core').versionRef('coroutines')\n            library('coroutines-test', 'org.jetbrains.kotlinx', 'kotlinx-coroutines-test').versionRef('coroutines')\n            library('cronet', 'com.google.android.gms:play-services-cronet:17.0.1')\n            library('dagger', 'com.google.dagger', 'dagger').versionRef('dagger')\n            library('dagger-compiler', 'com.google.dagger', 'dagger-compiler').versionRef('dagger')\n            library('dagger-android', 'com.google.dagger', 'dagger-android').versionRef('dagger')\n            library('dagger-android.support', 'com.google.dagger', 'dagger-android-support').versionRef('dagger')\n            library('dagger-android.processor', 'com.google.dagger', 'dagger-android-processor').versionRef('dagger')\n            library('dokka-gradle', 'org.jetbrains.dokka:dokka-gradle-plugin:1.8.20')\n            library('errorprone-annotations', 'com.google.errorprone', 'error_prone_annotations').versionRef('errorprone')\n            library('errorprone-core', 'com.google.errorprone', 'error_prone_core').versionRef('errorprone')\n            library('errorprone-gradle', 'net.ltgt.gradle:gradle-errorprone-plugin:2.0.2')\n            library('findbugs-jsr305', 'com.google.code.findbugs:jsr305:3.0.2')\n            library('guava', 'com.google.guava:guava:28.1-android')\n            library('guava-testlib', 'com.google.guava:guava-testlib:18.0')\n            library('javapoet', 'com.squareup:javapoet:1.9.0')\n            library('junit', 'junit:junit:4.13.2')\n            library('kotlin-junit', 'org.jetbrains.kotlin', 'kotlin-test-junit').versionRef('kotlin')\n            library('kotlin-jdk7', 'org.jetbrains.kotlin', 'kotlin-stdlib-jdk7').versionRef('kotlin')\n            library('kotlin-gradle', 'org.jetbrains.kotlin', 'kotlin-gradle-plugin').versionRef('kotlin')\n            library('kotlin-test', 'org.jetbrains.kotlin', 'kotlin-test').versionRef('kotlin')\n            library('kotlin-bom', 'org.jetbrains.kotlin', 'kotlin-bom').versionRef('kotlin')\n            library('kotlinpoet', 'com.squareup:kotlinpoet:1.12.0')\n            library('ksp', 'com.google.devtools.ksp', 'symbol-processing-api').versionRef('ksp')\n            library('ksp-autoservice', 'dev.zacsweers.autoservice:auto-service-ksp:1.0.0')\n            library('ksp-compiletesting', 'com.github.tschuchortdev:kotlin-compile-testing-ksp:1.4.9')\n            library('ksp-gradle', 'com.google.devtools.ksp', 'com.google.devtools.ksp.gradle.plugin').versionRef('ksp')\n            library('mockwebserver', 'com.squareup.okhttp3:mockwebserver:3.0.0-RC1')\n            library('mockito', 'org.mockito', 'mockito-core').versionRef('mockito')\n            library('mockito-android', 'org.mockito', 'mockito-android').versionRef('mockito')\n            library('okhttp2', 'com.squareup.okhttp:okhttp:2.7.5')\n            library('okhttp3', 'com.squareup.okhttp3:okhttp:3.10.0')\n            library('okhttp4', 'com.squareup.okhttp3:okhttp:4.10.0')\n            library('retrofit', 'com.squareup.retrofit2', 'retrofit').versionRef('retrofit')\n            library('retrofit-gson', 'com.squareup.retrofit2', 'converter-gson').versionRef('retrofit')\n            library('retrofit-rxjava', 'com.squareup.retrofit2', 'adapter-rxjava').versionRef('retrofit')\n            library('robolectric', 'org.robolectric:robolectric:4.11.1')\n            library('rx-android', 'io.reactivex:rxandroid:1.2.1')\n            library('rx-java', 'io.reactivex:rxjava:1.3.8')\n            library('svg', 'com.caverock:androidsvg:1.2.1')\n            library('truth', 'com.google.truth:truth:1.1.5')\n            library('violations', 'se.bjurr.violations:violations-gradle-plugin:1.8')\n            library('volley', 'com.android.volley:volley:1.2.1')\n        }\n    }\n}\n"
        },
        {
          "name": "static",
          "type": "tree",
          "content": null
        },
        {
          "name": "testutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}