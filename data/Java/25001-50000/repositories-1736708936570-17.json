{
  "metadata": {
    "timestamp": 1736708936570,
    "page": 17,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xkcoding/spring-boot-demo",
      "stars": 33299,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codacy.yml",
          "type": "blob",
          "size": 0.1279296875,
          "content": "---\nexclude_paths:\n  - '**.md'\n  - '**/**.md'\n  - '**.sql'\n  - '**.html'\n  - '**/static/**'\n  - '**/templates/**'\n  - '**/test/**'\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.22265625,
          "content": "# 开发组IDE 编辑器标准\nroot = true\n\n[*]\nindent_size = 2\ncharset = utf-8\nindent_style = space\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.{groovy, java, kt, kts, xsd}]\nindent_size = 4\n"
        },
        {
          "name": ".gitee",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.44140625,
          "content": "# Created by .ignore support plugin (hsz.mobi)\n### xkcoding-后端 template\n### Spring Boot ###\ntarget/\n!.mvn/wrapper/maven-wrapper.jar\n\n### STS ###\n.apt_generated\n.classpath\n.factorypath\n.project\n.settings\n.springBeans\n.sts4-cache\n\n### IntelliJ IDEA ###\n.idea\n*.iws\n*.iml\n*.ipr\nout/\ngen/\n\n### NetBeans ###\n/nbproject/private/\n/build/\n/nbbuild/\n/dist/\n/nbdist/\n/.nb-gradle/\n\n### LOGS ###\nlogs/\n*.log\n\n### Mac OS ###\n.DS_Store\n\n### VS CODE ###\n.vscode/\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.35546875,
          "content": "# 语言\nlanguage: java\n# 执行脚本\nscript: \"mvn clean package -DskipTests=true -Dmaven.javadoc.skip=true -B -V\"\n# 通知\nnotifications:\n  email:\n    recipients:\n      - 237497819@qq.com\n    on_success: always # default: change\n    on_failure: always # default: always\n# 缓存\ncache:\n  directories:\n    - '$HOME/.m2/repository'\n\nbranches:\n  only:\n    - master\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2018 Yangkai.Shen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.en.md",
          "type": "blob",
          "size": 19.685546875,
          "content": "<h1 align=\"center\"><a href=\"https://github.com/xkcoding\" target=\"_blank\">Spring Boot Demo</a></h1>\n<p align=\"center\">\n  <a href=\"https://travis-ci.com/xkcoding/spring-boot-demo\"><img alt=\"Travis-CI\" src=\"https://travis-ci.com/xkcoding/spring-boot-demo.svg?branch=master\"/></a>\n  <a href=\"https://www.codacy.com/app/xkcoding/spring-boot-demo?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=xkcoding/spring-boot-demo&amp;utm_campaign=Badge_Grade\"><img alt=\"Codacy\" src=\"https://api.codacy.com/project/badge/Grade/1f2e3d437b174bfc943dae1600332ec1\"/></a>\n  <a href=\"https://xkcoding.com\"><img alt=\"author\" src=\"https://img.shields.io/badge/author-Yangkai.Shen-blue.svg\"/></a>\n  <a href=\"https://www.oracle.com/technetwork/java/javase/downloads/index.html\"><img alt=\"JDK\" src=\"https://img.shields.io/badge/JDK-1.8.0_162-orange.svg\"/></a>\n  <a href=\"https://docs.spring.io/spring-boot/docs/2.1.0.RELEASE/reference/html/\"><img alt=\"Spring Boot\" src=\"https://img.shields.io/badge/Spring Boot-2.1.0.RELEASE-brightgreen.svg\"/></a>\n  <a href=\"https://github.com/xkcoding/spring-boot-demo/blob/master/LICENSE\"><img alt=\"LICENSE\" src=\"https://img.shields.io/github/license/xkcoding/spring-boot-demo.svg\"/></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/xkcoding/spring-boot-demo/stargazers\"><img alt=\"star\" src=\"https://img.shields.io/github/stars/xkcoding/spring-boot-demo.svg?label=Stars&style=social\"/></a>\n  <a href=\"https://github.com/xkcoding/spring-boot-demo/network/members\"><img alt=\"star\" src=\"https://img.shields.io/github/forks/xkcoding/spring-boot-demo.svg?label=Fork&style=social\"/></a>\n  <a href=\"https://github.com/xkcoding/spring-boot-demo/watchers\"><img alt=\"star\" src=\"https://img.shields.io/github/watchers/xkcoding/spring-boot-demo.svg?label=Watch&style=social\"/></a>\n</p>\n\n<p align=\"center\">\n  <span>English | <a href=\"./README.md\">中文</a></span>\n</p>\n\n## Introduction\n\n`spring boot demo` is a project for learning and practicing `spring boot`, including `66` demos, and `55` of them have been done.\n\nThis project has integrated actuator (`monitoring`), admin (`visual monitoring`), logback (`log`), aopLog (`recording web request logs through AOP`), global exception handling (`json level and page level` ), freemarker (`template engine`), thymeleaf (`template engine`), Beetl (`template engine`), Enjoy (`template engine`), JdbcTemplate (`general JDBC operate database`), JPA (`powerful ORM framework `), mybatis (`powerful ORM framework`), Generic Mapper (`mybatis quick operation `), PageHelper (`powerful mybatis pagination plugin`), mybatis-plus (`mybatis quick operation`), BeetlSQL (`powerful ORM framework `), upload (`local file upload and qiniu cloud file upload`), redis (`cache`), ehcache (`cache`), email (`send various types of mail`), task (`basic scheduled tasks`), quartz (`dynamic management scheduled tasks`), xxl-job (`distributed scheduled tasks`), swagger (`API interface management and tests`), security (`RBAC-based Dynamic Rights Authentication`), SpringSession (`session sharing`), Zookeeper (`implement distributed locks by AOP`), RabbitMQ (`message queue`), Kafka (`message queue`), websocket (` server pushes the monitoring server status to front end `), socket.io (`chat room`), ureport2 (`Chinese-style report`), packaged into a `war` file, integrate ElasticSearch (`basic operations and advanced queries`), Async ( `asynchronous tasks`), integrated Dubbo (`with official starter`), MongoDB (`document database`), neo4j (`graph database`), docker (`container`), `JPA Multi-Datasource`, `Mybatis Multi-Datasource`, `code generator`', GrayLog (`log collection`), JustAuth (`third-party login`), LDAP(`CURD`), `Dynamically add/switch datasources`, Standalone RateLimiting(`AOP + Guava RateLimiter`), Distributed Ratelimiting(`AOP + Redis + Lua`), ElasticSearch 7.x(`use official Rest High Level Client`), HTTPS, Flyway(`initialize databases`),UReport2(`Chinese complex report `).\n\n> If you have demos to contribute or needs to meet, it is very welcome to submit a [issue](https://github.com/xkcoding/spring-boot-demo/issues/new) and I will add it to my [TODO](./TODO.en.md) list.\n\n## Branch Introduction\n\n- branch master: Based on Spring Boot version `2.1.0.RELEASE`. Every module's parent dependency is the pom.xml at root directory in convenience of managing common dependencies and learning spring boot.\n- branch v-1.5.x: Based on Spring Boot version `1.5.8.RELEASE`. Every module's parent dependency is spring-boot-demo-parent. But since the feedback shows that it is not much friendly to many new learners, this branch will not be mantained any more. All of the demos will be moved to branch master. Everyone could still study at this branch but it's suggested to study at branch master while Spring Boot has much new content over version `2.x`.\n\n## Environment\n\n- **JDK 1.8 +**\n- **Maven 3.5 +**\n- **IntelliJ IDEA ULTIMATE 2018.2 +** (*Note: Please use IDEA and make sure plugin `lombok` installed.*)\n- **Mysql 5.7 +** (*Please use version 5.7 or higher because mysql has some new features and is not backward compatible at version 5.7. Althought this project will try to avoid this incompatibility*)\n\n## Getting Started\n\n> Note: If you has been forked this project, need to sync the project's code, please see: https://xkcoding.com/2018/09/18/how-to-update-the-fork-project.html\n\n1. `git clone https://github.com/xkcoding/spring-boot-demo.git`\n2. Open the cloned project in IDEA\n3. Import the `pom.xml` file from the root directory using `Maven Projects` panel\n4. If you can not find `Maven Projects` panel, try to tick `View -> Tool Buttons` on and the `Maven Projects` panel will appear on the right side of IDEA.\n5. Find each Application class to run each module.\n6. **`Note: Each demo has a detailed README file. Remember to check it before running the demo~`**\n7. **`Note: In some condition you have to execute sql to prepare data before running demo, don't forget it~`**\n\n## Stargazers over time\n\n[![Stargazers over time](https://starchart.cc/xkcoding/spring-boot-demo.svg)](https://starchart.cc/xkcoding/spring-boot-demo)\n\n## Appendix\n\n### Recommended  Open source\n\n- `JustAuth`：The most comprehensive open source library for third-party logins in history，https://github.com/justauth/JustAuth\n- `Mica`：Spring Boot microservices efficient development toolset，https://github.com/lets-mica/mica\n- `awesome-collector`：https://github.com/P-P-X/awesome-collector\n- `SpringBlade`：Complete micro-service online solution (required for enterprise development)，https://github.com/chillzhuang/SpringBlade\n- `Pig`：The universe's strongest micro-service certification authorized scaffolding (architect necessary)，https://github.com/pigxcloud/pig\n\n### TODO\n\nView the [TODO](./TODO.en.md) file\n\n### Introduction of each Module\n\n| Module Name                                                  | Module Description                                           |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n| [demo-helloworld](./demo-helloworld)                         | a helloworld demo.                                           |\n| [demo-properties](./demo-properties)                         | a demo to read the contents of configuration file.           |\n| [demo-actuator](./demo-actuator)                             | a demo to integrate spring-boot-starter-actuator for monitoring the starting status and the running status of application. |\n| [demo-admin-client](./demo-admin/admin-client)               | a client demo to  integrate spring-boot-admin for visually monitoring the running status of application, it can be used with spring-boot-starter-actuator. |\n| [demo-admin-server](./demo-admin/admin-server)               | a server demo to  integrate spring-boot-admin for visually monitoring the running status of the spring-boot program, it can be used with spring-boot-starter-actuator. |\n| [demo-logback](./demo-logback)                               | a demo to integrate the logback for logging.                 |\n| [demo-log-aop](./demo-log-aop)                               | a demo to record web request logs using AOP aspect.          |\n| [demo-exception-handler](./demo-exception-handler)           | a demo to demonstrate global exception handling, including 2 types, the first one returns  json data, and the second one jumps to error page. |\n| [demo-template-freemarker](./demo-template-freemarker)       | a demo to integrate Freemarker template engine.              |\n| [demo-template-thymeleaf](./demo-template-thymeleaf)         | a demo to integrate Thymeleaf template engine.               |\n| [demo-template-beetl](./demo-template-beetl)                 | a demo to integrate Beetl template engine.                   |\n| [demo-template-enjoy](./demo-template-enjoy)                 | a demo to integrate Enjoy template engine.                   |\n| [demo-orm-jdbctemplate](./demo-orm-jdbctemplate)             | a demo to integrate the Jdbc Template for operating database and easily encapsulate the generic Dao layer. |\n| [demo-orm-jpa](./demo-orm-jpa)                               | a demo to integrate spring-boot-starter-data-jpa for operating database. |\n| [demo-orm-mybatis](./demo-orm-mybatis)                       | a demo to integrate native mybatis by using [mybatis-spring-boot-starter](https://github.com/mybatis/spring-boot-starter) dependency. |\n| [demo-orm-mybatis-mapper-page](./demo-orm-mybatis-mapper-page) | a demo to integrate [Mapper](https://github.com/abel533/Mapper) and [PageHelper](https://github.com/pagehelper/Mybatis-PageHelper) by using [mapper-spring-boot-starter](https://github.com/abel533/Mapper/tree/master/spring-boot-starter) and [pagehelper-spring-boot-starter](https://github.com/pagehelper/pagehelper-spring-boot) dependencies. |\n| [demo-orm-mybatis-plus](./demo-orm-mybatis-plus)             | a demo to integrate [mybatis-plus](https://mybatis.plus/en/) by using [mybatis-plus-boot-starter](http://mp.baomidou.com/) dependency, integrate BaseMapper / BaseService / ActiveRecord to operate database. |\n| [demo-orm-beetlsql](./demo-orm-beetlsql)                     | a demo to integrate [beetl-sql](http://ibeetl.com/guide/#beetlsql) by using [beetl-framework-starter](http://ibeetl.com/guide/#beetlsql) dependency. |\n| [demo-upload](./demo-upload)                                 | a file upload demo, including local file upload and qiniu cloud file upload. |\n| [demo-cache-redis](./demo-cache-redis)                       | a demo to integrate redis, operate data in redis, and use redis to cache data. |\n| [demo-cache-ehcache](./demo-cache-ehcache)                   | a demo to integrate ehcache, and use ehcache to cache data.  |\n| [demo-email](./demo-email)                                   | a demo to integrate email, including sending simple text email, HTML email (including template HTML email), attachment email, and static resource email. |\n| [demo-task](./demo-task)                                     | a demo to show easy to use scheduled task.                   |\n| [demo-task-quartz](./demo-task-quartz)                       | a demo to integrate quartz for managing scheduled tasks, including adding new scheduled tasks, deleting scheduled tasks, suspending scheduled tasks, restoring scheduled tasks, modifying scheduled task startup times, and timing task list queries, and `providing front-end pages`. |\n| [demo-task-xxl-job](./demo-task-xxl-job)                     | a demo to integrate [xxl-job](http://www.xuxueli.com/xxl-job/en/#/) for distributed scheduled tasks and provide methods to manage scheduled tasks bypass `xxl-job-admin`, including scheduled task lists, trigger lists, new scheduled tasks, deleted scheduled tasks, stopped scheduled tasks, and started scheduled tasks. Modify the scheduled task and manually trigger the scheduled task. |\n| [demo-swagger](./demo-swagger)                               | a demo to integrate native `swagger` to manage and test API interfaces. |\n| [demo-swagger-beauty](./demo-swagger-beauty)                 | a demo to integrate third part of swagger dependency [swagger-bootstrap-ui](https://github.com/xiaoymin/Swagger-Bootstrap-UI) to beautify document style and manage and test API interfaces. |\n| [demo-rbac-security](./demo-rbac-security)                   | a demo to integrate spring security implement privilege management based on RBAC privilege model, supports custom filtering request, dynamic privilege authentication, uses JWT security authentication, supports online population statistics, manually kicks out users, etc. |\n| [demo-rbac-shiro](./demo-rbac-shiro)                         | <span style=\"color:pink;\">NOT FINISHED YET!</span> <br />a demo to integrate shiro for authentication management. |\n| [demo-session](./demo-session)                               | a demo to integrate Spring Session to implement Session sharing, restart program Session does not expire. |\n| [demo-oauth](./demo-oauth)                                   | <span style=\"color:pink;\">NOT FINISHED YET!</span> <br />a demo to implement the oauth server and  to implement oauth2 protocol such as the authorization code, access token. |\n| [demo-social](./demo-social)                                 | a demo to integrate third-party login by using `justauth-spring-boot-starter` dependency to achieve QQ login, GitHub login, WeChat login, Google login, Microsoft login, Xiaomi login, enterprise WeChat login. |\n| [demo-zookeeper](./demo-zookeeper)                           | a demo to integrate Zookeeper and AOP to implement distributed lock. |\n| [demo-mq-rabbitmq](./demo-mq-rabbitmq)                       | a demo to integrate RabbitMQ implementation for message delivery and reception based on direct queue mode, fanout mode, topic mode, delay queue. |\n| [demo-mq-rocketmq](./demo-mq-rocketmq)                       | <span style=\"color:pink;\">NOT FINISHED YET!</span> <br />a demo to integrate RocketMQ implementation for message delivery and reception. |\n| [demo-mq-kafka](./demo-mq-kafka)                             | a demo to integrate Kafka implementation for message delivery and reception. |\n| [demo-websocket](./demo-websocket)                           | a demo to integrate websocket, the backend actively pushes the server running status to front end. |\n| [demo-websocket-socketio](./demo-websocket-socketio)         | a demo to integrate websocket by using `netty-socketio`, implement a simple chat room. |\n| [demo-ureport2](./demo-ureport2)                             | <span style=\"color:pink;\">NOT FINISHED YET!</span> <br />a demo to integrate [ureport2](https://github.com/youseries/ureport) to implement complex, customized Chinese-style reports. |\n| [demo-uflo](./demo-uflo)                                     | <span style=\"color:pink;\">NOT FINISHED YET!</span> <br />a demo to integrate [uflo](https://github.com/youseries/uflo)(process engine like Activiti and Flowable) to quickly implement a lightweight process engine. |\n| [demo-urule](./demo-urule)                                   | <span style=\"color:pink;\">NOT FINISHED YET!</span> <br />a demo to integrate [urule](https://github.com/youseries/urule)(rule engine like drools) fast implementation rule engine. |\n| [demo-activiti](./demo-activiti)                             | <span style=\"color:pink;\">NOT FINISHED YET!</span> <br />a demo to integrate Activiti 7 process engine. |\n| [demo-async](./demo-async)                                   | asynchronous execution of tasks by using natively provided asynchronous task support. |\n| [demo-war](./demo-war)                                       | packaged into a war format configuration                     |\n| [demo-elasticsearch](./demo-elasticsearch)                   | a demo to integrate ElasticSearch by using `spring-boot-starter-data-elasticsearch` to implement advanced techniques for using ElasticSearch, including creating indexes, configuring mappings, deleting indexes, adding and deleting basic operations, complex queries, advanced queries, aggregate queries, etc. |\n| [demo-dubbo](./demo-dubbo)                                   | a demo to integrate Dubbo, common module `spring-boot-demo-dubbo-common`, service provider `spring-boot-demo-dubbo-provider`, service consumer `spring-boot-demo-dubbo-consumer`. |\n| [demo-mongodb](./demo-mongodb)                               | a demo to integrate MongoDB and use the official starter to CRUD. |\n| [demo-neo4j](./demo-neo4j)                                   | a demo to integrate Neo4j graph database to implement a campus character relationship network. |\n| [demo-docker](./demo-docker)                                 | docker container.                                            |\n| [demo-multi-datasource-jpa](./demo-multi-datasource-jpa)     | a demo to implement JPA multi-datasource.                    |\n| [demo-multi-datasource-mybatis](./demo-multi-datasource-mybatis) | a demo to implement Mybatis multi-datasource by using an open source solution from Mybatis-Plus. |\n| [demo-sharding-jdbc](./demo-sharding-jdbc)                   | a demo to use `sharding-jdbc` to implement sub-database and sub-tables, while ORM uses Mybatis-Plus. |\n| [demo-tio](./demo-tio)                                       | <span style=\"color:pink;\">NOT FINISHED YET!</span> <br />a demo to integrate t-io(a network programming framework like netty). |\n| demo-grpc                                                    | <span style=\"color:pink;\">NOT FINISHED YET!</span> <br />a demo to integrate Google grpc, need to be configure tls/ssl, see [ISSUE#5](https://github.com/xkcoding/spring-boot-demo/issues/5). |\n| [demo-codegen](./demo-codegen)                               | a demo to integrate velocity template engine to implement code generator, improve development efficiency. |\n| [demo-graylog](./demo-graylog)                               | a demo to integrate graylog for unified log collection.      |\n| demo-sso                                                     | <span style=\"color:pink;\">NOT FINISHED YET!</span> <br />a demo to integrate Single Sign On, see [ISSUE#12](https://github.com/xkcoding/spring-boot-demo/issues/12). |\n| [demo-ldap](./demo-ldap)                                     | a demo to integrate LDAP to use `spring-boot-starter-data-ldap` to implement  CURD operations and give the login demo, see [ISSUE#23](https://github.com/xkcoding/spring-boot-demo/issues/23), thanks [@fxbin](https://github.com/fxbin). |\n| [demo-dynamic-datasource](./demo-dynamic-datasource)         | a demo to add datasource dynamically, switch datasource dynamically. |\n| [demo-ratelimit-guava](./demo-ratelimit-guava)               | a demo to use use Guava RateLimiter to protect API  by standalone rate limiting. |\n| [demo-ratelimit-redis](./demo-ratelimit-redis)               | a demo to use Redis and Lua script implementation to protect API by distributed rate limiting. |\n| [demo-https](./demo-https)                                   | a demo to integrate HTTPS.                                   |\n| [demo-elasticsearch-rest-high-level-client](./demo-elasticsearch-rest-high-level-client) | a demo to integrate ElasticSearch 7.x version by using official Rest High Level Client to operate ES data. |\n| [demo-flyway](./demo-flyway)                                 | a demo to integrate Flyway to initialize tables and data in database, Flyway also support the sql script version control. |\n| [demo-ureport2](./demo-ureport2)                             | a demo to integrate Ureport2 to design the Chinese complex report file. |\n\n### Thanks\n\n- <a href=\"https://www.jetbrains.com/?from=spring-boot-demo\"><img src=\"http://static.xkcoding.com/spring-boot-demo/064312.jpg\" width=\"100px\" alt=\"jetbrains\">**Thanks JetBrains Offer Open Source Free License**</a>\n-  [Thanks MyBatisCodeHelper-Pro(The Best Code Generator Plugin) Offer Permanent Activation Code](https://gejun123456.github.io/MyBatisCodeHelper-Pro/#/?id=mybatiscodehelper-pro)\n\n### License\n\n[MIT](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2018 Yangkai.Shen\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 19.1005859375,
          "content": "<h1 align=\"center\"><a href=\"https://github.com/xkcoding\" target=\"_blank\">Spring Boot Demo</a></h1>\n<p align=\"center\">\n  <a href=\"https://travis-ci.com/xkcoding/spring-boot-demo\"><img alt=\"Travis-CI\" src=\"https://travis-ci.com/xkcoding/spring-boot-demo.svg?branch=master\"/></a>\n  <a href=\"https://www.codacy.com/app/xkcoding/spring-boot-demo?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=xkcoding/spring-boot-demo&amp;utm_campaign=Badge_Grade\"><img alt=\"Codacy\" src=\"https://api.codacy.com/project/badge/Grade/1f2e3d437b174bfc943dae1600332ec1\"/></a>\n  <a href=\"https://xkcoding.com\"><img alt=\"author\" src=\"https://img.shields.io/badge/author-Yangkai.Shen-blue.svg\"/></a>\n  <a href=\"https://www.oracle.com/technetwork/java/javase/downloads/index.html\"><img alt=\"JDK\" src=\"https://img.shields.io/badge/JDK-1.8.0_162-orange.svg\"/></a>\n  <a href=\"https://docs.spring.io/spring-boot/docs/2.1.0.RELEASE/reference/html/\"><img alt=\"Spring Boot\" src=\"https://img.shields.io/badge/Spring Boot-2.1.0.RELEASE-brightgreen.svg\"/></a>\n  <a href=\"https://github.com/xkcoding/spring-boot-demo/blob/master/LICENSE\"><img alt=\"LICENSE\" src=\"https://img.shields.io/github/license/xkcoding/spring-boot-demo.svg\"/></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/xkcoding/spring-boot-demo/stargazers\"><img alt=\"star\" src=\"https://img.shields.io/github/stars/xkcoding/spring-boot-demo.svg?label=Stars&style=social\"/></a>\n  <a href=\"https://github.com/xkcoding/spring-boot-demo/network/members\"><img alt=\"star\" src=\"https://img.shields.io/github/forks/xkcoding/spring-boot-demo.svg?label=Fork&style=social\"/></a>\n  <a href=\"https://github.com/xkcoding/spring-boot-demo/watchers\"><img alt=\"star\" src=\"https://img.shields.io/github/watchers/xkcoding/spring-boot-demo.svg?label=Watch&style=social\"/></a>\n</p>\n\n<p align=\"center\">\n  <span>中文 | <a href=\"./README.en.md\">English</a></span>\n</p>\n\n## 项目简介\n\n`spring boot demo` 是一个用来深度学习并实战 `spring boot` 的项目，目前总共包含 **`66`** 个集成demo，已经完成 **`55`** 个。\n\n该项目已成功集成 actuator(`监控`)、admin(`可视化监控`)、logback(`日志`)、aopLog(`通过AOP记录web请求日志`)、统一异常处理(`json级别和页面级别`)、freemarker(`模板引擎`)、thymeleaf(`模板引擎`)、Beetl(`模板引擎`)、Enjoy(`模板引擎`)、JdbcTemplate(`通用JDBC操作数据库`)、JPA(`强大的ORM框架`)、mybatis(`强大的ORM框架`)、通用Mapper(`快速操作Mybatis`)、PageHelper(`通用的Mybatis分页插件`)、mybatis-plus(`快速操作Mybatis`)、BeetlSQL(`强大的ORM框架`)、upload(`本地文件上传和七牛云文件上传`)、redis(`缓存`)、ehcache(`缓存`)、email(`发送各种类型邮件`)、task(`基础定时任务`)、quartz(`动态管理定时任务`)、xxl-job(`分布式定时任务`)、swagger(`API接口管理测试`)、security(`基于RBAC的动态权限认证`)、SpringSession(`Session共享`)、Zookeeper(`结合AOP实现分布式锁`)、RabbitMQ(`消息队列`)、Kafka(`消息队列`)、websocket(`服务端推送监控服务器运行信息`)、socket.io(`聊天室`)、ureport2(`中国式报表`)、打包成`war`文件、集成 ElasticSearch(`基本操作和高级查询`)、Async(`异步任务`)、集成Dubbo(`采用官方的starter`)、MongoDB(`文档数据库`)、neo4j(`图数据库`)、docker(`容器化`)、`JPA多数据源`、`Mybatis多数据源`、`代码生成器`、GrayLog(`日志收集`)、JustAuth(`第三方登录`)、LDAP(`增删改查`)、`动态添加/切换数据源`、单机限流(`AOP + Guava RateLimiter`)、分布式限流(`AOP + Redis + Lua`)、ElasticSearch 7.x(`使用官方 Rest High Level Client`)、HTTPS、Flyway(`数据库初始化`)、UReport2(`中国式复杂报表`)。\n\n> 如果大家还有想要集成的demo，也可在 [issue](https://github.com/xkcoding/spring-boot-demo/issues/new) 里提需求。我会额外添加在 [TODO](./TODO.md) 列表里。✊\n\n## 分支介绍\n\n- master 分支：基于 Spring Boot 版本 `2.1.0.RELEASE`，每个 Module 的 parent 依赖根目录下的 pom.xml，主要用于管理每个 Module 的通用依赖版本，方便大家学习。\n- v-1.5.x 分支：基于 Spring Boot 版本 `1.5.8.RELEASE`，每个 Module 均依赖 spring-boot-demo-parent，有挺多同学们反映这种方式对新手不是很友好，运行起来有些难度，因此 ***此分支(v-1.5.x)会停止开发维护*** ，所有内容会慢慢以 master 分支的形式同步过去，此分支暂未完成的，也会直接在 master 分支上加，在此分支学习的同学们，仍然可以在此分支学习，但是建议后期切换到master分支，会更加容易，毕竟官方已经将 Spring Boot 升级到 2.x 版本。🙂\n\n## 开发环境\n\n- **JDK 1.8 +**\n- **Maven 3.5 +**\n- **IntelliJ IDEA ULTIMATE 2018.2 +** (*注意：务必使用 IDEA 开发，同时保证安装 `lombok` 插件*)\n- **Mysql 5.7 +** (*尽量保证使用 5.7 版本以上，因为 5.7 版本加了一些新特性，同时不向下兼容。本 demo 里会尽量避免这种不兼容的地方，但还是建议尽量保证 5.7 版本以上*)\n\n## 运行方式\n\n> 提示：如果是 fork 的朋友，同步代码的请参考：https://xkcoding.com/2018/09/18/how-to-update-the-fork-project.html\n\n1. `git clone https://github.com/xkcoding/spring-boot-demo.git`\n2. 使用 IDEA 打开 clone 下来的项目\n3. 在 IDEA 中 Maven Projects 的面板导入项目根目录下 的 `pom.xml` 文件\n4. Maven Projects 找不到的童鞋，可以勾上 IDEA 顶部工具栏的 View -> Tool Buttons ，然后 Maven Projects 的面板就会出现在 IDEA 的右侧\n5. 找到各个 Module 的 Application 类就可以运行各个 demo 了\n6. **`注意：每个 demo 均有详细的 README 配套，食用 demo 前记得先看看哦~`**\n7. **`注意：运行各个 demo 之前，有些是需要事先初始化数据库数据的，亲们别忘记了哦~`**\n\n## 项目趋势\n\n[![Stargazers over time](https://starchart.cc/xkcoding/spring-boot-demo.svg)](https://starchart.cc/xkcoding/spring-boot-demo)\n\n## 其他\n\n###  团队纳新\n\n组内招人啦，HC 巨多，Base 杭州，感兴趣的小伙伴，查看 [岗位详情](./jd.md)\n\n### 开源推荐\n\n![11628591293_.pic_hd](https://static.aliyun.xkcoding.com/2021/08/14/11628591293pichd.jpg?x-oss-process=style/tag_compress)\n\n- `JustAuth`：史上最全的整合第三方登录的开源库，https://github.com/justauth/JustAuth\n- `Mica`：SpringBoot 微服务高效开发工具集，https://github.com/lets-mica/mica\n- `awesome-collector`：https://github.com/P-P-X/awesome-collector\n- `SpringBlade`：完整的线上解决方案(企业开发必备)，https://github.com/chillzhuang/SpringBlade\n- `Pig`：宇宙最强微服务认证授权脚手架(架构师必备)，https://github.com/pigxcloud/pig\n\n### 开发计划\n\n查看 [TODO](./TODO.md) 文件\n\n### 各 Module 介绍\n\n| Module 名称                                                  | Module 介绍                                                  |\n| ------------------------------------------------------------ | ------------------------------------------------------------ |\n| [demo-helloworld](./demo-helloworld)                         | spring-boot 的一个 helloworld                                |\n| [demo-properties](./demo-properties)                         | spring-boot 读取配置文件中的内容                             |\n| [demo-actuator](./demo-actuator)                             | spring-boot 集成 spring-boot-starter-actuator 用于监控 spring-boot 的启动和运行状态 |\n| [demo-admin-client](./demo-admin/admin-client)               | spring-boot 集成 spring-boot-admin 来可视化的监控 spring-boot 程序的运行状态，可以与 actuator 互相搭配使用，客户端示例 |\n| [demo-admin-server](./demo-admin/admin-server)               | spring-boot 集成 spring-boot-admin 来可视化的监控 spring-boot 程序的运行状态，可以与 actuator 互相搭配使用，服务端示例 |\n| [demo-logback](./demo-logback)                               | spring-boot 集成 logback 日志                                |\n| [demo-log-aop](./demo-log-aop)                               | spring-boot 使用 AOP 切面的方式记录 web 请求日志             |\n| [demo-exception-handler](./demo-exception-handler)           | spring-boot 统一异常处理，包括2种，第一种返回统一的 json 格式，第二种统一跳转到异常页面 |\n| [demo-template-freemarker](./demo-template-freemarker)       | spring-boot 集成 Freemarker 模板引擎                         |\n| [demo-template-thymeleaf](./demo-template-thymeleaf)         | spring-boot 集成 Thymeleaf 模板引擎                          |\n| [demo-template-beetl](./demo-template-beetl)                 | spring-boot 集成 Beetl 模板引擎                              |\n| [demo-template-enjoy](./demo-template-enjoy)                 | spring-boot 集成 Enjoy 模板引擎                              |\n| [demo-orm-jdbctemplate](./demo-orm-jdbctemplate)             | spring-boot 集成 Jdbc Template 操作数据库，并简易封装通用 Dao 层 |\n| [demo-orm-jpa](./demo-orm-jpa)                               | spring-boot 集成 spring-boot-starter-data-jpa 操作数据库     |\n| [demo-orm-mybatis](./demo-orm-mybatis)                       | spring-boot 集成原生mybatis，使用 [mybatis-spring-boot-starter](https://github.com/mybatis/spring-boot-starter) 集成 |\n| [demo-orm-mybatis-mapper-page](./demo-orm-mybatis-mapper-page) | spring-boot 集成[通用Mapper](https://github.com/abel533/Mapper)和[PageHelper](https://github.com/pagehelper/Mybatis-PageHelper)，使用 [mapper-spring-boot-starter](https://github.com/abel533/Mapper/tree/master/spring-boot-starter) 和 [pagehelper-spring-boot-starter](https://github.com/pagehelper/pagehelper-spring-boot) 集成 |\n| [demo-orm-mybatis-plus](./demo-orm-mybatis-plus)             | spring-boot 集成 [mybatis-plus](https://mybatis.plus/)，使用 [mybatis-plus-boot-starter](http://mp.baomidou.com/) 集成，集成 BaseMapper、BaseService、ActiveRecord 操作数据库 |\n| [demo-orm-beetlsql](./demo-orm-beetlsql)                     | spring-boot 集成 [beetl-sql](http://ibeetl.com/guide/#beetlsql)，使用 [beetl-framework-starter](http://ibeetl.com/guide/#beetlsql) 集成 |\n| [demo-upload](./demo-upload)                                 | spring-boot 文件上传示例，包含本地文件上传以及七牛云文件上传 |\n| [demo-cache-redis](./demo-cache-redis)                       | spring-boot 整合 redis，操作redis中的数据，并使用redis缓存数据 |\n| [demo-cache-ehcache](./demo-cache-ehcache)                   | spring-boot 整合 ehcache，使用 ehcache 缓存数据              |\n| [demo-email](./demo-email)                                   | spring-boot 整合 email，包括发送简单文本邮件、HTML邮件（包括模板HTML邮件）、附件邮件、静态资源邮件 |\n| [demo-task](./demo-task)                                     | spring-boot 快速实现定时任务                                 |\n| [demo-task-quartz](./demo-task-quartz)                       | spring-boot 整合 quartz，并实现对定时任务的管理，包括新增定时任务，删除定时任务，暂停定时任务，恢复定时任务，修改定时任务启动时间，以及定时任务列表查询，`提供前端页面` |\n| [demo-task-xxl-job](./demo-task-xxl-job)                     | spring-boot 整合[xxl-job](http://www.xuxueli.com/xxl-job/en/#/)，并提供绕过 `xxl-job-admin` 对定时任务的管理的方法，包括定时任务列表，触发器列表，新增定时任务，删除定时任务，停止定时任务，启动定时任务，修改定时任务，手动触发定时任务 |\n| [demo-swagger](./demo-swagger)                               | spring-boot 集成原生的 `swagger` 用于统一管理、测试 API 接口 |\n| [demo-swagger-beauty](./demo-swagger-beauty)                 | spring-boot 集成第三方 `swagger` [swagger-bootstrap-ui](https://github.com/xiaoymin/Swagger-Bootstrap-UI) 美化API文档样式，用于统一管理、测试 API 接口 |\n| [demo-rbac-security](./demo-rbac-security)                   | spring-boot 集成 spring security 完成基于RBAC权限模型的权限管理，支持自定义过滤请求，动态权限认证，使用 JWT 安全认证，支持在线人数统计，手动踢出用户等操作 |\n| [demo-rbac-shiro](./demo-rbac-shiro)                         | spring-boot 集成 shiro 实现权限管理<br /> <span style=\"color:pink;\">待完成</span> |\n| [demo-session](./demo-session)                               | spring-boot 集成 Spring Session 实现Session共享、重启程序Session不失效 |\n| [demo-oauth](./demo-oauth)                                   | spring-boot 实现 oauth 服务器功能，实现授权码机制<br /> <span style=\"color:pink;\">待完成</span> |\n| [demo-social](./demo-social)                                 | spring-boot 集成第三方登录，集成 `justauth-spring-boot-starter` 实现QQ登录、GitHub登录、微信登录、谷歌登录、微软登录、小米登录、企业微信登录。 |\n| [demo-zookeeper](./demo-zookeeper)                           | spring-boot 集成 Zookeeper 结合AOP实现分布式锁               |\n| [demo-mq-rabbitmq](./demo-mq-rabbitmq)                       | spring-boot 集成 RabbitMQ 实现基于直接队列模式、分列模式、主题模式、延迟队列的消息发送和接收 |\n| [demo-mq-rocketmq](./demo-mq-rocketmq)                       | spring-boot 集成 RocketMQ，实现消息的发送和接收<br /> <span style=\"color:pink;\">待完成</span> |\n| [demo-mq-kafka](./demo-mq-kafka)                             | spring-boot 集成 kafka，实现消息的发送和接收                 |\n| [demo-websocket](./demo-websocket)                           | spring-boot 集成 websocket，后端主动推送前端服务器运行信息   |\n| [demo-websocket-socketio](./demo-websocket-socketio)         | spring-boot 使用 netty-socketio 集成 websocket，实现一个简单的聊天室 |\n| [demo-ureport2](./demo-ureport2)                             | spring-boot 集成 ureport2 实现复杂的自定义的中国式报表<br /> <span style=\"color:pink;\">待完成</span> |\n| [demo-uflo](./demo-uflo)                                     | spring-boot 集成 uflo 快速实现轻量级流程引擎<br /> <span style=\"color:pink;\">待完成</span> |\n| [demo-urule](./demo-urule)                                   | spring-boot 集成 urule 快速实现规则引擎<br /> <span style=\"color:pink;\">待完成</span> |\n| [demo-activiti](./demo-activiti)                             | spring-boot 集成 activiti 7  流程引擎<br /> <span style=\"color:pink;\">待完成</span> |\n| [demo-async](./demo-async)                                   | spring-boot 使用原生提供的异步任务支持，实现异步执行任务     |\n| [demo-war](./demo-war)                                       | spring-boot 打成 war 包的配置                                |\n| [demo-elasticsearch](./demo-elasticsearch)                   | spring-boot 集成 ElasticSearch，集成 `spring-boot-starter-data-elasticsearch` 完成对 ElasticSearch 的高级使用技巧，包括创建索引、配置映射、删除索引、增删改查基本操作、复杂查询、高级查询、聚合查询等 |\n| [demo-dubbo](./demo-dubbo)                                   | spring-boot 集成 Dubbo，分别为公共模块 `spring-boot-demo-dubbo-common`、服务提供方`spring-boot-demo-dubbo-provider`、服务调用方`spring-boot-demo-dubbo-consumer` |\n| [demo-mongodb](./demo-mongodb)                               | spring-boot 集成 MongoDB，使用官方的 starter 实现增删改查    |\n| [demo-neo4j](./demo-neo4j)                                   | spring-boot 集成 Neo4j 图数据库，实现一个校园人物关系网的demo |\n| [demo-docker](./demo-docker)                                 | spring-boot 容器化                                           |\n| [demo-multi-datasource-jpa](./demo-multi-datasource-jpa)     | spring-boot 使用JPA集成多数据源                              |\n| [demo-multi-datasource-mybatis](./demo-multi-datasource-mybatis) | spring-boot 使用Mybatis集成多数据源，使用 Mybatis-Plus 提供的开源解决方案实现 |\n| [demo-sharding-jdbc](./demo-sharding-jdbc)                   | spring-boot 使用 `sharding-jdbc` 实现分库分表，同时ORM采用 Mybatis-Plus |\n| [demo-tio](./demo-tio)                                       | spring-boot 集成 tio 网络编程框架<br /> <span style=\"color:pink;\">待完成</span> |\n| demo-grpc                                                    | spring-boot 集成grpc，配置tls/ssl，参见[ISSUE#5](https://github.com/xkcoding/spring-boot-demo/issues/5)<br /> <span style=\"color:pink;\">待完成</span> |\n| [demo-codegen](./demo-codegen)                               | spring-boot 集成 velocity 模板技术实现的代码生成器，简化开发 |\n| [demo-graylog](./demo-graylog)                               | spring-boot 集成 graylog 实现日志统一收集                    |\n| demo-sso                                                     | spring-boot 集成 SSO 单点登录，参见 [ISSUE#12](https://github.com/xkcoding/spring-boot-demo/issues/12)<br /> <span style=\"color:pink;\">待完成</span> |\n| [demo-ldap](./demo-ldap)                                     | spring-boot 集成 LDAP，集成 `spring-boot-starter-data-ldap` 完成对 Ldap 的基本 CURD操作, 并给出以登录为实战的 API 示例，参见 [ISSUE#23](https://github.com/xkcoding/spring-boot-demo/issues/23)，感谢 [@fxbin](https://github.com/fxbin) |\n| [demo-dynamic-datasource](./demo-dynamic-datasource)         | spring-boot 动态添加数据源、动态切换数据源                   |\n| [demo-ratelimit-guava](./demo-ratelimit-guava)               | spring-boot 使用 Guava RateLimiter 实现单机版限流，保护 API  |\n| [demo-ratelimit-redis](./demo-ratelimit-redis)               | spring-boot 使用 Redis + Lua 脚本实现分布式限流，保护 API    |\n| [demo-https](./demo-https)                                   | spring-boot 集成 HTTPS                                       |\n| [demo-elasticsearch-rest-high-level-client](./demo-elasticsearch-rest-high-level-client) | spring boot 集成 ElasticSearch 7.x 版本，使用官方 Rest High Level Client 操作 ES 数据 |\n| [demo-flyway](./demo-flyway)                                 | spring boot 集成 Flyway，项目启动时初始化数据库表结构，同时支持数据库脚本版本控制 |\n| [demo-ureport2](./demo-ureport2)                             | spring boot 集成 Ureport2，实现中国式复杂报表设计            |\n\n\n### 特别感谢\n\n- 感谢 [七牛云](https://portal.qiniu.com/signup?utm_source=kaiyuan&utm_media=xkcoding) 提供的免费云存储与 CDN 加速支持\n- 感谢史上最牛的代码生成插件 [MyBatisCodeHelper-Pro](https://gejun123456.github.io/MyBatisCodeHelper-Pro/#/?id=mybatiscodehelper-pro) 提供的永久激活码\n- <a href=\"https://www.jetbrains.com/?from=spring-boot-demo\"><img src=\"http://static.xkcoding.com/spring-boot-demo/064312.jpg\" width=\"100px\" alt=\"jetbrains\">**感谢 JetBrains 提供的免费开源 License**</a>\n\n### License\n\n[MIT](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2018 Yangkai.Shen\n"
        },
        {
          "name": "TODO.en.md",
          "type": "blob",
          "size": 5.0751953125,
          "content": "# spring-boot-demo Project TODO List\n\n## Module plan (completed: 55 / 66)\n\n- [x] ~~demo-helloworld(helloworld example)~~\n- [x] ~~demo-properties (read configuration file information)~~\n- [x] ~~demo-actuator (endpoint monitoring for Spring boot)~~\n- [x] ~~demo-admin-client (for Spring boot visual control client)~~\n- [x] ~~demo-admin-server (for Spring boot visual control server)~~\n- [x] ~~demo-logback (integrated logback log)~~\n- [x] ~~demo-log-aop (use AOP to intercept request log information)~~\n- [x] ~~demo-exception-handler (unified exception handling)~~\n- [x] ~~demo-template-freemarker (using template engine - Freemarker)~~\n- [x] ~~demo-template-thymeleaf (using template engine - thymeleaf)~~\n- [x] ~~demo-template-beetl (using template engine - beetl)~~\n- [x] ~~demo-template-enjoy (using template engine - JFinal-Enjoy)~~\n- [x] ~~demo-upload (upload - integrated local upload and seven cattle cloud upload)~~\n- [x] ~~demo-orm-jdbctemplate (operating SQL relational database - JdbcTemplate)~~\n- [x] ~~demo-orm-jpa (operating SQL Relational Database - JPA)~~\n- [x] ~~demo-orm-mybatis (operating SQL relational database - mybatis)~~\n- [x] ~~demo-orm-mybatis-mapper-page (operating SQL relational database - integrating mybatis generic Mapper, PageHelper)~~\n- [x] ~~demo-orm-mybatis-plus (operating SQL relational database - integrating mybatis-plus, Mapper, ActiveRecord)~~\n- [x] ~~demo-orm-beetlsql (operating SQL relational database - beetlSQL)~~\n- [x] ~~demo-cache-redis (using redis for caching)~~\n- [x] ~~demo-cache-ehcache (using Ehcache for caching)~~\n- [x] ~~demo-email (integrated mail service)~~\n- [x] ~~demo-task (scheduled task - Task implementation)~~\n- [x] ~~demo-task-quartz (scheduled task - Quartz implementation)~~\n- [x] ~~demo-task-xxl-job (scheduled task - XXL-JOB for Distributed Scheduling)~~\n- [x] ~~demo-swagger (integrated Swagger for API interface test management)~~\n- [x] ~~demo-swagger-beauty (integrated custom and more beautiful Swagger test management of API interface)~~\n- [x] ~~demo-rbac-security (implementing RBAC-based permission model - Spring Security)~~\n- [ ] demo-rbac-shiro (implementing RBAC-based permission model - shiro)\n- [x] ~~demo-session(unified Session Management)~~\n- [ ] demo-oauth (OAuth2 certification)\n- [x] ~~demo-social (integrated JustAuth implements third-party authorization verification, and implements third-party logins such as QQ, WeChat, GitHub, Google, Xiaomi, etc.)~~\n- [x] ~~demo-zookeeper (use zookeeper to implement distributed locks with AOP)~~\n- [x] ~~demo-mq-rabbitmq (integrated messaging middleware - RabbitMQ)~~\n- [ ] demo-mq-rocketmq (integrated messaging middleware - RocketMQ)\n- [x] ~~demo-mq-kafka (integrated message middleware - Kafka)~~\n- [x] ~~demo-websocket (integrated websocket service)~~\n- [x] ~~demo-websocket-socketio (integrated socketio implements websocket service)~~\n- [x] ~~demo-ureport2 (integrated ureport2 implements a custom complex Chinese-style reporting engine)~~\n- [ ] demo-uflo (integrated uflo implementation process control engine)\n- [ ] demo-urule (integrated urule implementation rules engine)\n- [ ] demo-activiti (integrated of Activiti to implement process control engine)\n- [x] ~~demo-async (Spring boot implements asynchronous calls)~~\n- [x] ~~demo-dubbo (integrated dubbo)~~\n- [x] ~~demo-war (packaged into a war package)~~\n- [x] ~~demo-elasticsearch (integrated ElasticSearch)~~\n- [x] ~~demo-mongodb (integrated MongoDb)~~\n- [x] ~~demo-neo4j (integrated neo4j graph database)~~\n- [x] ~~demo-docker (packaged into docker image)~~\n- [x] ~~demo-multi-datasource-jpa (integrated JPA multi data source)~~\n- [x] ~~demo-multi-datasource-mybatis (integrated with mybatis multi-data source)~~\n- [x] ~~demo-sharding-jdbc (integrated sharding-jdbc implementation sub-library table)~~\n- [ ] demo-tio (integrated t-io)\n- [ ] demo-grpc (integrated grpc, configure tls/ssl) see [ISSUE#5](https://github.com/xkcoding/spring-boot-demo/issues/5)\n- [x] ~~demo-codegen (integrated velocity auto-generated code)~~\n- [x] ~~demo-graylog (integrated gralog log management)~~\n- [ ] demo-sso (integrated single sign on) see [ISSUE#12](https://github.com/xkcoding/spring-boot-demo/issues/12)\n- [x] ~~demo-ldap （integrated ldap）see [ISSUE#23](https://github.com/xkcoding/spring-boot-demo/issues/23)~~\n- [x] ~~demo-dynamic-datasource（add datasource dynamically, switch datasource dynamically）~~\n- [x] ~~demo-ratelimit-guava（use Guava RateLimiter to protect API by standalone rate limiting）~~\n- [x] ~~demo-ratelimit-redis（use Redis and Lua script implementation to protect API by distributed rate limiting）~~\n- [x] ~~demo-https（integrated HTTPS）~~\n- [x] ~~demo-elasticsearch-rest-high-level-client（integrated Elasticsearch 7.x version，use official Rest High Level Client to operate ES data）~~\n- [ ] demo-springbatch（data process）\n- [ ] demo-security-justauth（use JustAuth to login GitHub，and use Spring-Security to manage login state）\n- [x] ~~demo-flyway（integrated Flyway to initialize tables and data in database, Flyway also support the sql script version control）~~\n\n## Remarks\n\nTry to ensure that the corresponding demos are integrated in the order above.\n\n"
        },
        {
          "name": "TODO.md",
          "type": "blob",
          "size": 4.7294921875,
          "content": "# spring-boot-demo 项目待办列表\n\n## 模块计划(已完成：55 / 66)\n\n- [x] ~~demo-helloworld（Helloworld 示例）~~\n- [x] ~~demo-properties（读取配置文件信息）~~\n- [x] ~~demo-actuator（对 Spring boot 的端点监控）~~\n- [x] ~~demo-admin-client（对 Spring boot 可视化管控 客户端）~~\n- [x] ~~demo-admin-server（对 Spring boot 可视化管控 服务端）~~\n- [x] ~~demo-logback（集成 logback 日志）~~\n- [x] ~~demo-log-aop（使用 AOP 拦截请求日志信息）~~\n- [x] ~~demo-exception-handler（统一异常处理）~~\n- [x] ~~demo-template-freemarker（使用模板引擎 - Freemarker）~~\n- [x] ~~demo-template-thymeleaf（使用模板引擎 - thymeleaf）~~\n- [x] ~~demo-template-beetl（使用模板引擎 - beetl）~~\n- [x] ~~demo-template-enjoy（使用模板引擎 - JFinal-Enjoy）~~\n- [x] ~~demo-upload（上传 - 集成本地上传和七牛云上传）~~\n- [x] ~~demo-orm-jdbctemplate（操作 SQL 关系型数据库 - JdbcTemplate）~~\n- [x] ~~demo-orm-jpa（操作 SQL 关系型数据库 - JPA）~~\n- [x] ~~demo-orm-mybatis（操作 SQL 关系型数据库 - mybatis）~~\n- [x] ~~demo-orm-mybatis-mapper-page（操作 SQL 关系型数据库 - 集成mybatis通用Mapper,PageHelper）~~\n- [x] ~~demo-orm-mybatis-plus（操作 SQL 关系型数据库 - 集成mybatis-plus，Mapper操作、ActiveRecord操作）~~\n- [x] ~~demo-orm-beetlsql（操作 SQL 关系型数据库 - beetlSQL）~~\n- [x] ~~demo-cache-redis（使用 redis 进行缓存）~~\n- [x] ~~demo-cache-ehcache（使用 Ehcache 进行缓存）~~\n- [x] ~~demo-email（集成邮件服务）~~\n- [x] ~~demo-task（定时任务 - Task 实现）~~\n- [x] ~~demo-task-quartz（定时任务 - Quartz 实现）~~\n- [x] ~~demo-task-xxl-job（定时任务 - XXL-JOB 实现分布式调度）~~\n- [x] ~~demo-swagger（集成 Swagger 对 API 接口进行测试管理）~~\n- [x] ~~demo-swagger-beauty（集成自定义且更加美观的 Swagger 对 API 接口进行测试管理）~~\n- [x] ~~demo-rbac-security（实现基于 RBAC 的权限模型 - Spring Security）~~\n- [ ] demo-rbac-shiro（实现基于 RBAC 的权限模型 - shiro）\n- [x] ~~demo-session（统一 Session 管理）~~\n- [ ] demo-oauth（OAuth2 认证）\n- [x] ~~demo-social（集成 JustAuth 实现第三方授权验证，实现 QQ、微信、GitHub、谷歌、小米等第三方登录）~~\n- [x] ~~demo-zookeeper（使用 zookeeper 结合AOP实现分布式锁）~~\n- [x] ~~demo-mq-rabbitmq（集成消息中间件 - RabbitMQ）~~\n- [ ] demo-mq-rocketmq（集成消息中间件 - RocketMQ）\n- [x] ~~demo-mq-kafka（集成消息中间件 - Kafka）~~\n- [x] ~~demo-websocket（集成 websocket 服务）~~\n- [x] ~~demo-websocket-socketio（集成 socketio 实现 websocket 服务）~~\n- [x] ~~demo-ureport2 （集成 ureport2 实现自定义的复杂中国式报表引擎）~~\n- [ ] demo-uflo（集成  uflo 实现流程控制引擎）\n- [ ] demo-urule（集成  urule 实现规则引擎）\n- [ ] demo-activiti（集成 Activiti 实现流程控制引擎）\n- [x] ~~demo-async（Spring boot 实现异步调用）~~\n- [x] ~~demo-dubbo（集成 dubbo）~~\n- [x] ~~demo-war（打包成war包）~~\n- [x] ~~demo-elasticsearch（集成 ElasticSearch）~~\n- [x] ~~demo-mongodb（集成 MongoDb）~~\n- [x] ~~demo-neo4j（集成 neo4j 图数据库）~~\n- [x] ~~demo-docker（打包成 docker 镜像）~~\n- [x] ~~demo-multi-datasource-jpa（集成JPA多数据源）~~\n- [x] ~~demo-multi-datasource-mybatis（集成mybatis多数据源）~~\n- [x] ~~demo-sharding-jdbc（集成 sharding-jdbc 实现分库分表）~~\n- [ ] demo-tio（集成 tio）\n- [ ] demo-grpc（集成grpc，配置tls/ssl）参见[ISSUE#5](https://github.com/xkcoding/spring-boot-demo/issues/5)\n- [x] ~~demo-codegen（集成 velocity 自动生成代码）~~\n- [x] ~~demo-graylog（集成 gralog 日志管理）~~\n- [ ] demo-sso（集成单点登录）参见 [ISSUE#12](https://github.com/xkcoding/spring-boot-demo/issues/12)\n- [x] ~~demo-ldap （集成 ldap）参见 [ISSUE#23](https://github.com/xkcoding/spring-boot-demo/issues/23)~~\n- [x] ~~demo-dynamic-datasource（动态添加数据源，切换数据源）~~\n- [x] ~~demo-ratelimit-guava（单机限流保护API，集成 Guava 的 RateLimiter）~~\n- [x] ~~demo-ratelimit-redis（分布式限流保护API，使用 Redis + lua 脚本实现）~~\n- [x] ~~demo-https（集成 HTTPS）~~\n- [x] ~~demo-elasticsearch-rest-high-level-client（集成 Elasticsearch 7.x 版本，使用官方 rest high level client操作 ES 数据）~~\n- [ ] demo-springbatch（数据处理）\n- [ ] demo-security-justauth（使用 JustAuth 登录 GitHub，使用 Security 管理登录状态）\n- [x] ~~demo-flyway（集成 Flyway，项目启动时初始化数据库表结构，同时支持数据库脚本版本控制）~~\n\n## 备注\n\n尽量保证按照上面的顺序集成相应的 demo。\n"
        },
        {
          "name": "demo-activiti",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-actuator",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-admin",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-async",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-cache-ehcache",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-cache-redis",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-codegen",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-dubbo",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-dynamic-datasource",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-elasticsearch-rest-high-level-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-elasticsearch",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-email",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-exception-handler",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-flyway",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-graylog",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-helloworld",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-https",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-ldap",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-log-aop",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-logback",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-mongodb",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-mq-kafka",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-mq-rabbitmq",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-mq-rocketmq",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-multi-datasource-jpa",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-multi-datasource-mybatis",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-neo4j",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-oauth",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-orm-beetlsql",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-orm-jdbctemplate",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-orm-jpa",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-orm-mybatis-mapper-page",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-orm-mybatis-plus",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-orm-mybatis",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-pay",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-properties",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-ratelimit-guava",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-ratelimit-redis",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-rbac-security",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-rbac-shiro",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-session",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-sharding-jdbc",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-social",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-swagger-beauty",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-swagger",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-task-quartz",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-task-xxl-job",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-task",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-template-beetl",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-template-enjoy",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-template-freemarker",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-template-thymeleaf",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-tio",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-uflo",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-upload",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-ureport2",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-urule",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-war",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-websocket-socketio",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-websocket",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo-zookeeper",
          "type": "tree",
          "content": null
        },
        {
          "name": "jd.md",
          "type": "blob",
          "size": 7.8896484375,
          "content": "> 公司：杭州涂鸦信息科技有限公司，是一个全球云开发平台、AI+IoT开发者平台，连接消费者、制造品牌、OEM厂商和连锁零售商的智能化需求，为开发者提供一站式人工智能物联网的PaaS级解决方案。并且涵盖了硬件开发工具、全球云、智慧商业平台开发三方面，提供从技术到营销渠道的全面生态赋能，打造世界领先的IoT OS。\n>\n> 团队：云端开发部/数据平台\n>\n> Base：杭州\n\n组内招人啦，HC 巨多 ~~ 感兴趣的小伙伴，简历发过来，:kissing_heart:\n\n> 微信：syk941020\n>\n> 邮箱：237497819@qq.com\n>\n> 备注：内推+岗位\n\n---\n\n# 岗位列表\n\n* [岗位列表](#岗位列表)\n  * [高级java开发-大数据方向](#高级java开发-大数据方向)\n     * [【职位描述】](#职位描述)\n     * [【职位要求】](#职位要求)\n  * [高级java大数据平台开发工程师](#高级java大数据平台开发工程师)\n     * [【职位描述】](#职位描述-1)\n     * [【职位要求】](#职位要求-1)\n  * [大数据开发工程师(flink方向)](#大数据开发工程师flink方向)\n     * [【岗位职责】](#岗位职责)\n     * [【任职要求】](#任职要求)\n  * [高级数据仓库开发工程师](#高级数据仓库开发工程师)\n     * [【岗位描述】](#岗位描述)\n     * [【技能要求】](#技能要求)\n  * [bi分析师](#bi分析师)\n     * [【岗位职责】](#岗位职责-1)\n     * [【任职要求】](#任职要求-1)\n  * [大数据平台架构师](#大数据平台架构师)\n     * [【职位描述】](#职位描述-2)\n     * [【职位要求】](#职位要求-2)\n\n## 高级java开发-大数据方向\n\n### 【职位描述】\n\n1. 精通Java开源框架，Java开发语言\n3. 对新技术有出色的学习能力,掌握 mybatis, Spring MVC等技术\n3. 参与公司大数据产品、核心架构的研发和方向预演；\n4. 思维开阔喜问乐学，以提升自己的能力和效率；\n\n### 【职位要求】\n\n1. 精通Java语言，对相关技术领域的开源产品有深入的理解;\n2. 希望你有3年以上java相关经验；\n3. 熟悉Linux下的常用系统工具, 能利用工具排查CPU, 内存, IO等系统问题；\n4. 从事过大规模 Web 应用开发，熟悉代码重构，性能优化，系统安全和高可用性；\n5. 熟悉非关系型数据库如Redis、Hbase等。\n6. 有过hbase,elasticsearch,flink,tidb,clickhouse的开发经验，对这5者有一个深入研究者优先。\n7. 有过数据应用产品相关开发经验优先。\n\n## 高级java大数据平台开发工程师\n\n### 【职位描述】\n\n1. 负责大数据平台的设计与开发实现\n2. 负责大数据应用相关产品需求分析、架构设计以及开发实现\n3. 负责数据产品的服务接口开发和维护\n\n### 【职位要求】\n\n1. 本科及以上学历，2年及以上大数据相关技术背景\n2. 熟练进行Java的代码编写，良好的代码编写素养，良好的数据结构算法技能。\n3. 熟悉spring boot、mybatis、dubbo等开发框架，熟悉前后端分离开发流程\n4. 有大数据平台开发经验，包括但不限于离线开发平台、数据质量中心、元数据管理、数据资产管理，实时流平台，可视化报表等\n5. 熟悉开源大数据平台如HBase、ES、Kylin、tidb、clickhouse等相关技术\n6. 有过使用flink做实时计算平台成功案例者和用过hera系统做过离线任务平台者优先。\n\n## 大数据开发工程师(flink方向)\n\n### 【岗位职责】\n\n1. 负责业务数据和用户行为日志的实时采集、计算、存储、服务，为业务团队提供直接数据决策;\n2. 负责部门实时计算体系架构建设及实时计算平台开发改进。\n3. 负责即时分析相关技术方案的探索\n4. 负责实时数据仓库的建设，完善实时计算方案\n\n### 【任职要求】\n\n1. 深入了解离线计算及相关开发，掌握实时计算技术体系包括数据采集、计算引擎flink等,对实时计算所涉及的事务、容错、可靠性有深入理解 并有实际项目经验；\n2. 熟悉 hadoop 生态包括 hdfs/mapreduce/hive/hbase,熟悉 kafka 等实时开源工具并有项目经验；\n3. 熟悉 mysql 等关系型数据库,熟悉 redis 内存数据库,熟悉 linux 系统;\n4. 掌握Java或Scala语言，如并发编程和JVM等，追求高标准的工程质量；\n5. 有flink实时计算开发经验,熟悉olap的相关技术。\n6. 有良好的沟通能力和自我驱动动力,具备出色的规划、执行力,强烈的责任感,以及优秀的学习能力,对技术有热情，愿意不断尝试新技术和业务挑战。\n\n## 高级数据仓库开发工程师\n\n### 【岗位描述】\n\n1. 负责数据仓库架构设计、建模和ETL开发；\n2. 参与数据治理工作，提升数据易用性及数据质量；\n3. 理解并合理抽象业务需求，发挥数据价值，与业务、BI团队紧密合作。\n\n### 【技能要求】\n\n1. 有数据仓库需求调研和需求分析经验，能根据业务需求设计数据仓库模型，并对数据仓库数据模型进行管理，保证数据质量。\n2. 精通sql开发，有较丰富的spark sql性能调优经验优先；\n3. 精通数据仓库实施方法论、深入了解数据仓库体系，并支撑过实际业务场景；\n4. 熟悉数据治理的相关环节、有相关开发经验或者实际应用场景；\n5. 具备较强的编码能力，熟悉sql，python，hive，spark，kafka，storm中的多项；\n6. 对数据敏感，认真细致，善于从数据中发现疑点；\n7. 善于沟通，具备优秀的技术与业务结合能力。\n\n## bi分析师\n\n### 【岗位职责】\n\n1. 为公司技术，运营，产品，业务策略等提供数据支持；\n2. 维护,完善数据报表体系，及时,准确监控运营状况,并提供专业分析报告；\n3. 通过数据来发现业务、流程中的问题、机会，从数据角度为业务部门提出相应的优化建议，并与多方合作实现流程改善,推动相关业务目标达成；\n4. 沉淀分析思路与框架，提炼数据产品需求，与相关团队协作并推动数据产品的落地；\n\n### 【任职要求】\n\n1. 本科以上学历，2年以上工作经验，有过互联网数据分析经验者优先；\n2. 扎实的数据分析、数据统计理论，善于对抽象问题进行概括；\n3. 精通Excel，熟练SQL查询等操作,熟练使用至少一种数据分析工具（R、Python、SPSS等）者优先；\n4. 具有良好的学习能力、沟通表达能力和团队协作能力。\n\n## 大数据平台架构师\n\n### 【职位描述】\n\n1. 负责涂鸦大数据平台的开发建设，建立数据生态服务，解决海量数据面临的挑战\n2. 参与大数据平台各类基础系统架构设计和引擎开发，集群优化，技术难点攻关\n3. 集群数据安全相关体系建设，各种存储，查询方案构建\n4. 协助管理、优化并维护Hadoop、Spark、flink等集群，保证集群规模持续、稳定；\n5. 负责大数据产品的自动化、离线与实时计算、即席计算、数据质量、数据安全等平台的设计和开发；\n6. 调研和把握当前的最新技术，将其中的先进技术引入到自己的平台中，改善产品，提升竞争力\n\n### 【职位要求】\n\n1. 本科及以上学历，5年以上工作经验，3年以上大数据领域工作经验，熟悉java,spark\n2. 熟悉开源大数据平台如HBase、ES、Kylin、Druid等，有实际的报表平台、多维度分析工具、etl平台、调度平台、实时平台中至少两种工具的实际建设经验。\n3. 有上述相关系统为基础的实际成功的复杂系统项目的架构和开发经验\n4. 热爱开源技术，熟悉一种或者多种大数据生态技术（Kafka、Hive、Hbase、Spark、Storm、Hadoop、Flink、kudu、clickhouse、tidb等），熟悉源码者优先\n5. 相关开源领域的活跃贡献者或大型互联网公司相关从业经验者优先.\n6. 有过使用flink做实时计算平台成功案例者和用过hera系统做过离线任务平台者优先。\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 6.083984375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.xkcoding</groupId>\n  <artifactId>spring-boot-demo</artifactId>\n  <version>1.0.0-SNAPSHOT</version>\n  <modules>\n    <module>demo-helloworld</module>\n    <module>demo-properties</module>\n    <module>demo-actuator</module>\n    <module>demo-admin</module>\n    <module>demo-logback</module>\n    <module>demo-log-aop</module>\n    <module>demo-exception-handler</module>\n    <module>demo-template-freemarker</module>\n    <module>demo-template-thymeleaf</module>\n    <module>demo-template-beetl</module>\n    <module>demo-template-enjoy</module>\n    <module>demo-orm-jdbctemplate</module>\n    <module>demo-orm-jpa</module>\n    <module>demo-orm-mybatis</module>\n    <module>demo-orm-mybatis-mapper-page</module>\n    <module>demo-orm-mybatis-plus</module>\n    <module>demo-orm-beetlsql</module>\n    <module>demo-upload</module>\n    <module>demo-cache-redis</module>\n    <module>demo-cache-ehcache</module>\n    <module>demo-email</module>\n    <module>demo-task</module>\n    <module>demo-task-quartz</module>\n    <module>demo-task-xxl-job</module>\n    <module>demo-swagger</module>\n    <module>demo-swagger-beauty</module>\n    <module>demo-rbac-security</module>\n    <module>demo-rbac-shiro</module>\n    <module>demo-session</module>\n    <module>demo-oauth</module>\n    <module>demo-social</module>\n    <module>demo-zookeeper</module>\n    <module>demo-mq-rabbitmq</module>\n    <module>demo-mq-rocketmq</module>\n    <module>demo-mq-kafka</module>\n    <module>demo-websocket</module>\n    <module>demo-websocket-socketio</module>\n    <module>demo-ureport2</module>\n    <module>demo-uflo</module>\n    <module>demo-urule</module>\n    <module>demo-activiti</module>\n    <module>demo-async</module>\n    <module>demo-dubbo</module>\n    <module>demo-war</module>\n    <module>demo-elasticsearch</module>\n    <module>demo-mongodb</module>\n    <module>demo-neo4j</module>\n    <module>demo-docker</module>\n    <module>demo-multi-datasource-jpa</module>\n    <module>demo-multi-datasource-mybatis</module>\n    <module>demo-sharding-jdbc</module>\n    <module>demo-tio</module>\n    <module>demo-codegen</module>\n    <module>demo-graylog</module>\n    <module>demo-ldap</module>\n    <module>demo-dynamic-datasource</module>\n    <module>demo-ratelimit-guava</module>\n    <module>demo-ratelimit-redis</module>\n    <module>demo-elasticsearch-rest-high-level-client</module>\n    <module>demo-https</module>\n    <module>demo-flyway</module>\n    <module>demo-pay</module>\n  </modules>\n  <packaging>pom</packaging>\n\n  <name>spring-boot-demo</name>\n  <url>http://xkcoding.com</url>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <java.version>1.8</java.version>\n    <maven.compiler.source>1.8</maven.compiler.source>\n    <maven.compiler.target>1.8</maven.compiler.target>\n    <spring.boot.version>2.1.0.RELEASE</spring.boot.version>\n    <mysql.version>8.0.21</mysql.version>\n    <hutool.version>5.4.5</hutool.version>\n    <guava.version>29.0-jre</guava.version>\n    <user.agent.version>1.20</user.agent.version>\n  </properties>\n\n  <repositories>\n    <repository>\n      <id>aliyun</id>\n      <name>aliyun</name>\n      <url>https://maven.aliyun.com/repository/public</url>\n      <releases>\n        <enabled>true</enabled>\n      </releases>\n      <snapshots>\n        <enabled>false</enabled>\n      </snapshots>\n    </repository>\n  </repositories>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-dependencies</artifactId>\n        <version>${spring.boot.version}</version>\n        <type>pom</type>\n        <scope>import</scope>\n      </dependency>\n      <dependency>\n        <groupId>mysql</groupId>\n        <artifactId>mysql-connector-java</artifactId>\n        <version>${mysql.version}</version>\n      </dependency>\n      <!-- hutool工具类 -->\n      <dependency>\n        <groupId>cn.hutool</groupId>\n        <artifactId>hutool-all</artifactId>\n        <version>${hutool.version}</version>\n      </dependency>\n      <!-- guava工具类 -->\n      <dependency>\n        <groupId>com.google.guava</groupId>\n        <artifactId>guava</artifactId>\n        <version>${guava.version}</version>\n      </dependency>\n      <!-- 解析 UserAgent 信息 -->\n      <dependency>\n        <groupId>eu.bitwalker</groupId>\n        <artifactId>UserAgentUtils</artifactId>\n        <version>${user.agent.version}</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <build>\n    <pluginManagement>\n      <plugins>\n        <plugin>\n          <artifactId>maven-clean-plugin</artifactId>\n          <version>3.0.0</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-resources-plugin</artifactId>\n          <version>3.0.2</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>3.7.0</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-surefire-plugin</artifactId>\n          <version>2.20.1</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-jar-plugin</artifactId>\n          <version>3.0.2</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-install-plugin</artifactId>\n          <version>2.5.2</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-deploy-plugin</artifactId>\n          <version>2.8.2</version>\n        </plugin>\n        <plugin>\n          <groupId>org.springframework.boot</groupId>\n          <artifactId>spring-boot-maven-plugin</artifactId>\n          <version>${spring.boot.version}</version>\n          <executions>\n            <execution>\n              <goals>\n                <goal>repackage</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n  </build>\n</project>\n"
        }
      ]
    }
  ]
}