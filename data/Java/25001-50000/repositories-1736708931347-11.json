{
  "metadata": {
    "timestamp": 1736708931347,
    "page": 11,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "geekxh/hello-algorithm",
      "stars": 35405,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".DS_Store",
          "type": "blob",
          "size": 6.00390625,
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.048828125,
          "content": "node_modules\n.idea\nwebsite/.vuepress/dist\nlearning"
        },
        {
          "name": "1.md",
          "type": "blob",
          "size": 2.314453125,
          "content": "##### [点击下载本项目全部内容 提取码：【8f8b】 包括：1、我写的图解算法题典 2、千本开源电子书 3、百张思维导图 4、BAT/TMD 大厂面经 （如果链接失效，上方扫码回复即可）](https://www.geekxh.com/github_click.html?6072)\n\n#### 本项目还包括 I（支持下载）：\n\n> 千本开源电子书覆盖了你在IT行业发展可以用到的大部分资料，百张思维导图按照专题对各类计算机知识进行了整合。**由于文件过大，建议通过下方扫码，回复【999】获取**\n\n- 📚 [一千本开源电子书](https://github.com/geekxh/hello-algorithm/tree/master/%E6%B8%85%E6%99%B0%E7%89%88%E7%94%B5%E5%AD%90%E4%B9%A61000%E6%9C%AC)\n- 🐒 [百张思维导图集锦](https://github.com/geekxh/hello-algorithm/tree/master/%E8%B6%85%E6%B8%85%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE100%E5%BC%A0) \n\n#### 本项目还包括 II（支持下载）：\n\n> 大厂面经汇总覆盖了阿里、京东、华为、字节、滴滴、百度、美团、腾讯 等公司的面试题，按照 公司/专题 两个维度对面试题进行了整合。**由于文件过大，建议通过下方扫码，回复【面经】获取。**\n\n<br/>\n    <div align=\"center\">\n        <a href=\"https://www.geekxh.com/readme/04.png\" style=\"box-shadow: rgb(210, 210, 210) 0em 0em 0.5em 0px; font-size: 17px;\"><img src=\"https://www.geekxh.com/readme/04.png\" width=\"200px\"></a>\n    </div>\n<br/>\n\n### 使用指南\n\n1、因为本教程完全免费，但现在被一些不良商家拿去卖钱，<b> 所以我需要你先帮我点一个 star </b>，助力原创，防止更多人上当受骗，也顺便支持我一下。\n\n2、算法训练包括三部分：① 算法知识基础 ② 图解算法题典 ③ 算法知识扩展 \n\n3、如果是以面试为目的，可以直接对第二部分进行学习。如果基础薄弱，建议从第一部分进行学习。第三部分为专题学习，包含大部分算法资料。\n\n4、对于其中题目有疑惑，可以加入我们的<b>万人刷题群</b>，群里可内推 BAT。扫上面那只熊，回复【进群】即可。\n\n5、当然，也许你就想加我的私人微信: [个人名片](https://www.geekxh.com/contact.jpeg)\n\nPS：该项目包括了你在 IT 行业发展可以用到的绝大部分资料。但我希望大家不要当收藏党，找到适合自己的才重要。"
        },
        {
          "name": "PART_1_算法基础",
          "type": "tree",
          "content": null
        },
        {
          "name": "PART_2_力扣图解",
          "type": "tree",
          "content": null
        },
        {
          "name": "PART_3_大厂面试",
          "type": "tree",
          "content": null
        },
        {
          "name": "PART_4_CS知识汇总",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 16.7255859375,
          "content": "## 简介\n\nEnglish version repo and Gitbook is on [english branch](https://github.com/geekxh/hello-algorithm/tree/english)\n\n> ### **小浩算法是一套针对小白的完整的算法训练流程！** \n>\n> <a href=\"https://www.geekxh.com/\"><img src=\"https://www.geekxh.com/svg/0-1-blueviolet.svg\" alt=\"css\"></a>\n> <a href=\"https://github.com/haizlin/fe-interview/stargazers\"><img src=\"https://img.shields.io/github/stars/geekxh/hello-algorithm.svg\" alt=\"Statr\"></a>\n> <a href=\"https://github.com/haizlin/fe-interview/stargazers\"><img src=\"https://www.geekxh.com/svg/2-1-success.svg\" alt=\"Statr\"></a>\n>\n> 目前共包括以下几个步骤：\n> - PART_1_算法基础\n> - PART_2_力扣图解\n> - PART_3_大厂面试\n> - PART_4_CS知识汇总\n>\n> [目前已支持 PDF 下载](https://www.cxyhub.com/all/programming/7786/)\n\n<div align=\"center\">\n    <a href=\"https://www.geekxh.com\"><img src=\"https://www.geekxh.com/logo_tmp.png\" width=\"350px\"></a>\n</div>\n\n<p align=\"center\">\n<a href=\"https://www.geekxh.com/\"><img src=\"https://www.geekxh.com/svg/0-1-blueviolet.svg\" alt=\"css\"></a>\n<a href=\"https://github.com/haizlin/fe-interview/stargazers\"><img src=\"https://img.shields.io/github/stars/geekxh/hello-algorithm.svg\" alt=\"Statr\"></a>\n<a href=\"https://github.com/haizlin/fe-interview/stargazers\"><img src=\"https://www.geekxh.com/svg/2-1-success.svg\" alt=\"Statr\"></a>\n</p>\n<p align=\"center\">\n    <b>这也许是东半球最好的算法学习类项目！</b>\n</p>\n</br>\n\n> 我自己刷题都是在 lintcode 进行，也会在上面更新题解！下方可以直接进入~\n- [www.lintcode.com](https://www.lintcode.com/?utm_source=tf-github-xh2022)\n- [另外推荐一套算法课，北大FB双料大佬的，我之前上过，性价比很高](https://www.jiuzhang.com/course/71/?utm_source=tf-github-xh2022)\n- 最后，下方扫码可以领取我准备的刷题模板\n<p align=\"center\">\n    <img height=\"200\" src=\"https://www.cxyhub.com/wp-content/uploads/2022/08/f9e51121533b2c175bcb41ee8c05e62.jpg\">\n</p>\n\n\n### 正文\n\n### PART_1_算法基础\n\n主要包括两部分：\n\n- a：数据结构知识框架：为了大家更好的掌握数据结构和算法，我把基础知识整理成了一张思维导图，包括下面这些知识点：\n\n> [开始学习](PART_1_算法基础/README.md)\n\n- b：对常用的数据结构知识进行总结：\n\n*  [链表](PART_1_算法基础/2_基础知识/linked-list/README.md)\n*  [双向链表](PART_1_算法基础/2_基础知识/doubly-linked-list/README.md)\n*  [队列](PART_1_算法基础/2_基础知识/queue/README.md)\n*  [栈](PART_1_算法基础/2_基础知识/stack/README.md)\n*  [哈希表(散列)](PART_1_算法基础/2_基础知识/hash-table/README.md)\n*  [堆](PART_1_算法基础/2_基础知识/heap/README.md)\n*  [优先队列](PART_1_算法基础/2_基础知识/priority-queue/README.md)\n*  [字典树](PART_1_算法基础/2_基础知识/trie/README.md)\n*  [树](PART_1_算法基础/2_基础知识/tree/README.md)\n*  [图](PART_1_算法基础/2_基础知识/graph/README.md) \n\n### PART_2_力扣图解\n\n<details><summary><a>显示更多</a></summary></br>\n    \n> [小浩图解算法题典.PDF【完整版】下载](https://www.cxyhub.com/all/programming/7786/)\n\n- [开始学习](http://www.geekxh.com)\n- [阅读指南](http://www.geekxh.com/c99/hello.html)\n- 数组\n    - [01.最长公共前缀(14)](http://www.geekxh.com/1.0.数组系列/002.html)  \n    - [02.买卖股票的最佳时机(122)](http://www.geekxh.com/1.0.数组系列/003.html)\n    - [03.旋转数组(189)](http://www.geekxh.com/1.0.数组系列/004.html) \n    - [04.原地删除(27)](http://www.geekxh.com/1.0.数组系列/005.html) \n    - [05.加一(66)](http://www.geekxh.com/1.0.数组系列/006.html)\n    - [06.两数之和(1)](http://www.geekxh.com/1.0.数组系列/007.html)                                              \n    - [07.三数之和(15)](http://www.geekxh.com/1.0.数组系列/008.html)                                              \n    - [08.Z字形变换(6)](http://www.geekxh.com/1.0.数组系列/009.html)  \n- 链表                                            \n    - [01.删除链表倒数第N个节点(19)](http://www.geekxh.com/1.1.链表系列/101.html)                                                 \n    - [02.合并两个有序链表(21)](http://www.geekxh.com/1.1.链表系列/102.html)                                                 \n    - [03.环形链表(141)](http://www.geekxh.com/1.1.链表系列/103.html)                                                 \n    - [04.两数相加(2)](http://www.geekxh.com/1.1.链表系列/104.html)                                                 \n- 动态规划\n    - [01.爬楼梯(70)](http://www.geekxh.com/1.2.动态规划系列/201.html)                                                \n    - [02.最大子序和(53)](http://www.geekxh.com/1.2.动态规划系列/202.html)                                                \n    - [03.最长上升子序列(300)](http://www.geekxh.com/1.2.动态规划系列/203.html)                                                \n    - [04.三角形最小路径和(120)](http://www.geekxh.com/1.2.动态规划系列/204.html)                                                \n    - [05.最小路径和(64)](http://www.geekxh.com/1.2.动态规划系列/205.html)                                                \n    - [06.打家劫舍(198)](http://www.geekxh.com/1.2.动态规划系列/206.html)                                                \n- 字符串\n    - [01.反转字符串(344)](http://www.geekxh.com/1.3.字符串系列/301.html)                                               \n    - [02.字符串中的第一个唯一字符(387)](http://www.geekxh.com/1.3.字符串系列/302.html)                                               \n    - [03.实现 Sunday 匹配](http://www.geekxh.com/1.3.字符串系列/303.html)                                               \n    - [04.大数打印](http://www.geekxh.com/1.3.字符串系列/304.html)                                               \n    - [05.验证回文串(125)](http://www.geekxh.com/1.3.字符串系列/305.html)                                               \n    - [06.KMP 精讲](http://www.geekxh.com/1.3.字符串系列/306.html)                                               \n    - [07.旋转字符串(796)](http://www.geekxh.com/1.3.字符串系列/307.html)                                               \n    - [08.最后一个单词的长度(58)](http://www.geekxh.com/1.3.字符串系列/308.html)                                               \n- 二叉树\n    - [01.最大深度与DFS(104)](http://www.geekxh.com/1.4.二叉树系列/401.html)                                               \n    - [02.层次遍历与BFS(102)](http://www.geekxh.com/1.4.二叉树系列/402.html)                                               \n    - [03.BST与其验证(98)](http://www.geekxh.com/1.4.二叉树系列/403.html)                                               \n    - [04.BST 的查找(700)](http://www.geekxh.com/1.4.二叉树系列/404.html)                                               \n    - [05.BST 的删除(450)](http://www.geekxh.com/1.4.二叉树系列/405.html)                                               \n    - [06.平衡二叉树(110)](http://www.geekxh.com/1.4.二叉树系列/406.html)                                               \n    - [07.完全二叉树(222)](http://www.geekxh.com/1.4.二叉树系列/407.html)                                               \n    - [08.二叉树的剪枝(814)](http://www.geekxh.com/1.4.二叉树系列/408.html)                                               \n- 滑动窗口\n    - [01.滑动窗口最大值（239）](http://www.geekxh.com/1.5.滑动窗口系列/501.html)                                                \n    - [02.无重复字符的最长子串（3）](http://www.geekxh.com/1.5.滑动窗口系列/502.html)                                                \n    - [03.找到字符串中所有字母异位词（438）](http://www.geekxh.com/1.5.滑动窗口系列/503.html)                                                \n    - [04.和为s的连续正数序列](http://www.geekxh.com/1.5.滑动窗口系列/504.html)   \n- 博弈论                                             \n    - [01.囚徒困境](http://www.geekxh.com/1.6.博弈论系列/601.html)                                                \n    - [02.辛普森悖论](http://www.geekxh.com/1.6.博弈论系列/602.html)                                                \n    - [03.红眼睛和蓝眼睛](http://www.geekxh.com/1.6.博弈论系列/603.html)                                                 \n    - [04.海盗分金币](http://www.geekxh.com/1.6.博弈论系列/604.html)                                                \n    - [05.智猪博弈](http://www.geekxh.com/1.6.博弈论系列/605.html)                                                \n    - [06.生男生女的问题](http://www.geekxh.com/1.6.博弈论系列/606.html)                                                \n    - [07.硬币问题](http://www.geekxh.com/1.6.博弈论系列/607.html)                                                \n    - [08.画圈圈的问题](http://www.geekxh.com/1.6.博弈论系列/608.html)                                                \n    - [09.巧克力问题](http://www.geekxh.com/1.6.博弈论系列/609.html)                                                \n    - [10.大鱼和小鱼的问题](http://www.geekxh.com/1.6.博弈论系列/610.html)  \n- 位运算                                              \n    - [01.使用位运算求和](http://www.geekxh.com/1.8.位运算系列/801.html)                                                \n    - [02.2的幂(231)](http://www.geekxh.com/1.8.位运算系列/802.html)                                                \n    - [03.返回一个数二进制中1的个数](http://www.geekxh.com/1.8.位运算系列/803.html)                                                 \n    - [04.只出现一次的数字](http://www.geekxh.com/1.8.位运算系列/804.html)                                                 \n    - [05.只出现一次的数字Ⅱ](http://www.geekxh.com/1.8.位运算系列/805.html)                                                 \n    - [06.缺失数字(268)](http://www.geekxh.com/1.8.位运算系列/806.html) \n- 二分法                                                \n    - [01.爱吃香蕉的珂珂（875）](http://www.geekxh.com/1.9.二分法系列/901.html)                                                \n    - [02.x的平方根（69）](http://www.geekxh.com/1.9.二分法系列/902.html)                                                \n    - [03.x的平方根（69）](http://www.geekxh.com/1.9.二分法系列/903.html)                                                 \n    - [04.旋转排序数组中的最小值Ⅰ（153）](http://www.geekxh.com/1.9.二分法系列/904.html)                                                 \n    - [05.旋转排序数组中的最小值Ⅱ(154)](http://www.geekxh.com/1.9.二分法系列/905.html)                                                 \n    - [06.供暖器（475）](http://www.geekxh.com/1.9.二分法系列/906.html)   \n- 其他高频面试题目                                              \n    - [01.螺旋矩阵(54)](http://www.geekxh.com/1.99.其他补充题目/01.html)                                                 \n    - [02.只有两个键的键盘(650)](http://www.geekxh.com/1.99.其他补充题目/02.html)                                                 \n    - [03.24点游戏(679)](http://www.geekxh.com/1.99.其他补充题目/03.html)                                                 \n    - [04.飞机座位分配概率(1227)](http://www.geekxh.com/1.99.其他补充题目/04.html)                                                 \n    - [05.水分子的产生](http://www.geekxh.com/1.99.其他补充题目/05.html)                                                 \n    - [06.救生艇(881)](http://www.geekxh.com/1.99.其他补充题目/06.html)                                                 \n    - [07.救生艇(881)](http://www.geekxh.com/1.99.其他补充题目/07.html)                                                 \n    - [08.灯泡开关(319)](http://www.geekxh.com/1.99.其他补充题目/08.html)                                                 \n    - [09.三门问题](http://www.geekxh.com/1.99.其他补充题目/09.html)                                                 \n    - [10.猜数字游戏(299)](http://www.geekxh.com/1.99.其他补充题目/10.html)                                                 \n    - [11.LRU缓存机制(146)](http://www.geekxh.com/1.99.其他补充题目/11.html)                                                 \n    - [12.最小的k个数](http://www.geekxh.com/1.99.其他补充题目/12.html)                                                 \n    - [13.不同路径](http://www.geekxh.com/1.99.其他补充题目/13.html)                                                 \n    - [14.不同路径-障碍物](http://www.geekxh.com/1.99.其他补充题目/14.html)                                                 \n    - [15.连续n个数的和](http://www.geekxh.com/1.99.其他补充题目/15.html)                                                 \n    - [16.盛水最多的容器](http://www.geekxh.com/1.99.其他补充题目/16.html)                                                 \n    - [17.扑克牌中的顺子容器](http://www.geekxh.com/1.99.其他补充题目/17.html)                                                 \n    - [18.整数拆分(343)](http://www.geekxh.com/1.99.其他补充题目/18.html)                                                 \n    - [19.移动石子到连续(1033)](http://www.geekxh.com/1.99.其他补充题目/19.html)                                                 \n    - [20.Nim游戏(292)](http://www.geekxh.com/1.99.其他补充题目/20.html)                                                 \n    - [21.寻找两个正序数组的中位数(4)](http://www.geekxh.com/1.99.其他补充题目/21.html)                                                 \n    - [22.第k个最大元素（215）](http://www.geekxh.com/1.99.其他补充题目/22.html)                                                 \n    - [23.镜面反射（858）](http://www.geekxh.com/1.99.其他补充题目/23.html)                                                 \n    - [25.整数转罗马数字（12）](http://www.geekxh.com/1.99.其他补充题目/25.html)                                                 \n    - [26.荷兰国旗问题](http://www.geekxh.com/1.99.其他补充题目/26.html)                                                 \n    - [27.六九问题](http://www.geekxh.com/1.99.其他补充题目/27.html)                                                 \n    - [28.有效的数独](http://www.geekxh.com/1.99.其他补充题目/28.html)                                                 \n    - [29.费米估算](http://www.geekxh.com/1.99.其他补充题目/29.html)                                                 \n    - [30.分发饼干](http://www.geekxh.com/1.99.其他补充题目/30.html)                                                 \n    - [31.生命游戏（289）](http://www.geekxh.com/1.99.其他补充题目/31.html)                                                 \n    - [32.搜索二维矩阵（74）](http://www.geekxh.com/1.99.其他补充题目/32.html)                                                 \n    - [33.子集（78）](http://www.geekxh.com/1.99.其他补充题目/33.html)                                                 \n    - [34.面试中的智力题](http://www.geekxh.com/1.99.其他补充题目/34.html)                                                 \n    - [35.旋转图像（48）](http://www.geekxh.com/1.99.其他补充题目/51.html)                                                 \n\n</details>\n\n### PART_3_大厂面试（更新中）\n\n<details><summary><a>显示更多</a></summary></br>\n\n考虑到现在网上面经实在太杂，很多都冠以 “BAT” 之名，重复率、错误率都非常高。所以我尽可能的挑选出了我认为比较好的 50 篇面经（基本不重复），并对内容做了分类。\n\n建议大家把这个页面收藏起来，防止后面需要的时候找不到了。（整理了近40个小时，跪求star~）\n\n- [系统设计-长文（非常建议读，我自己也看了）](https://github.com/donnemartin/system-design-primer/blob/master/README-zh-Hans.md)\n- [后端-社招(两年): 蚂蚁 头条 PingCAP](https://github.com/aylei/interview)\n- [后端-京东-JAVA](https://www.cnblogs.com/wupeixuan/p/8908524.html#%E4%B8%80%E3%80%81java)\n- [后端-百度-高并发抢红包设计](https://github.com/xbox1994/Java-Interview/blob/master/MD/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1-%E9%AB%98%E5%B9%B6%E5%8F%91%E6%8A%A2%E7%BA%A2%E5%8C%85.md)\n- [NLP（机器学习）-百度](https://www.e-learn.cn/topic/95743)\n\n</details>\n\n\n### PART_4_CS_知识汇总(TODO)\n\n### License\n\n本项目除部分引用开源技术文档的内容外，大部分为本人原创。欢迎任何以学习为目的的传播，但未授权任何平台进行转载！\n"
        },
        {
          "name": "git",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": "hello-algorithm.iml",
          "type": "blob",
          "size": 8.13671875,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<module type=\"JAVA_MODULE\" version=\"4\">\n  <component name=\"NewModuleRootManager\" inherit-compiler-output=\"true\">\n    <exclude-output />\n    <content url=\"file://$MODULE_DIR$\">\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/03_01_DuplicationInArray\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/03_02_DuplicationInArrayNoEdit\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/04_FindInPartiallySortedMatrix\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/05_ReplaceSpaces\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/06_PrintListInReversedOrder\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/07_ConstructBinaryTree\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/08_NextNodeInBinaryTrees\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/09_01_QueueWithTwoStacks\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/09_02_StackWithTwoQueues\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/10_01_Fibonacci\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/10_02_JumpFloor\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/10_03_JumpFloorII\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/10_04_RectCover\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/11_MinNumberInRotatedArray\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/12_StringPathInMatrix\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/13_RobotMove\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/14_CuttingRope\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/15_NumberOf1InBinary\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/16_Power\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/17_Print1ToMaxOfNDigits\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/18_01_DeleteNodeInList\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/18_02_DeleteDuplicatedNode\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/19_RegularExpressionsMatching\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/20_NumericStrings\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/21_ReorderArray\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/22_KthNodeFromEnd\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/23_EntryNodeInListLoop\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/24_ReverseList\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/25_MergeSortedLists\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/26_SubstructureInTree\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/27_MirrorOfBinaryTree\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/28_SymmetricalBinaryTree\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/29_PrintMatrix\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/30_MinInStack\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/31_StackPushPopOrder\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/32_01_PrintTreeFromTopToBottom\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/32_02_PrintTreesInLines\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/32_03_PrintTreesInZigzag\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/33_SquenceOfBST\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/34_PathInTree\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/35_CopyComplexList\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/36_ConvertBinarySearchTree\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/37_SerializeBinaryTrees\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/38_StringPermutation\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/39_MoreThanHalfNumber\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/40_KLeastNumbers\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/41_StreamMedian\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/42_GreatestSumOfSubarrays\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/43_NumberOf1\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/44_DigitsInSequence\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/45_SortArrayForMinNumber\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/46_TranslateNumbersToStrings\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/47_MaxValueOfGifts\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/48_LongestSubstringWithoutDup\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/49_UglyNumber\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/50_01_FirstNotRepeatingChar\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/50_02_FristCharacterInStream\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/52_FirstCommonNodesInLists\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/53_01_NumberOfK\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/53_02_MissingNumber\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/53_03_IntegerIdenticalToIndex\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/54_KthNodeInBST\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/55_01_TreeDepth\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/55_02_BalancedBinaryTree\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/56_01_NumbersAppearOnce\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/56_02_NumberAppearingOnce\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/57_01_TwoNumbersWithSum\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/57_02_ContinuousSquenceWithSum\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/58_01_ReverseWordsInSentence\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/58_02_LeftRotateString\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/59_01_MaxInSlidingWindow\" isTestSource=\"false\" />\n      <sourceFolder url=\"file://$MODULE_DIR$/专栏/剑指offer/61_ContinousCards\" isTestSource=\"false\" />\n    </content>\n    <orderEntry type=\"inheritedJdk\" />\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\n  </component>\n</module>"
        },
        {
          "name": "other",
          "type": "tree",
          "content": null
        },
        {
          "name": "千本开源电子书",
          "type": "tree",
          "content": null
        },
        {
          "name": "百张思维导图",
          "type": "tree",
          "content": null
        },
        {
          "name": "算法读物",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}