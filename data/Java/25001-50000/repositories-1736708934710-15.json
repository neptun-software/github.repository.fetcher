{
  "metadata": {
    "timestamp": 1736708934710,
    "page": 15,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "netty/netty",
      "stars": 33659,
      "defaultBranch": "4.1",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".fbprefs",
          "type": "blob",
          "size": 8.494140625,
          "content": "#FindBugs User Preferences\n#Wed Mar 04 19:28:55 KST 2009\ndetectorAppendingToAnObjectOutputStream=AppendingToAnObjectOutputStream|true\ndetectorBCPMethodReturnCheck=BCPMethodReturnCheck|true\ndetectorBadAppletConstructor=BadAppletConstructor|true\ndetectorBadResultSetAccess=BadResultSetAccess|true\ndetectorBadSyntaxForRegularExpression=BadSyntaxForRegularExpression|true\ndetectorBadUseOfReturnValue=BadUseOfReturnValue|true\ndetectorBadlyOverriddenAdapter=BadlyOverriddenAdapter|true\ndetectorBooleanReturnNull=BooleanReturnNull|true\ndetectorBuildInterproceduralCallGraph=BuildInterproceduralCallGraph|true\ndetectorBuildObligationPolicyDatabase=BuildObligationPolicyDatabase|true\ndetectorCallToUnsupportedMethod=CallToUnsupportedMethod|true\ndetectorCalledMethods=CalledMethods|true\ndetectorCheckCalls=CheckCalls|false\ndetectorCheckExpectedWarnings=CheckExpectedWarnings|false\ndetectorCheckImmutableAnnotation=CheckImmutableAnnotation|true\ndetectorCheckTypeQualifiers=CheckTypeQualifiers|true\ndetectorCloneIdiom=CloneIdiom|true\ndetectorComparatorIdiom=ComparatorIdiom|true\ndetectorConfusedInheritance=ConfusedInheritance|true\ndetectorConfusionBetweenInheritedAndOuterMethod=ConfusionBetweenInheritedAndOuterMethod|true\ndetectorCrossSiteScripting=CrossSiteScripting|true\ndetectorDoInsideDoPrivileged=DoInsideDoPrivileged|true\ndetectorDontCatchIllegalMonitorStateException=DontCatchIllegalMonitorStateException|true\ndetectorDontUseEnum=DontUseEnum|true\ndetectorDroppedException=DroppedException|true\ndetectorDumbMethodInvocations=DumbMethodInvocations|true\ndetectorDumbMethods=DumbMethods|true\ndetectorDuplicateBranches=DuplicateBranches|true\ndetectorEmptyZipFileEntry=EmptyZipFileEntry|true\ndetectorEqStringTest=EqStringTest|true\ndetectorEqualsOperandShouldHaveClassCompatibleWithThis=EqualsOperandShouldHaveClassCompatibleWithThis|true\ndetectorFieldItemSummary=FieldItemSummary|true\ndetectorFinalizerNullsFields=FinalizerNullsFields|true\ndetectorFindBadCast=FindBadCast|true\ndetectorFindBadCast2=FindBadCast2|true\ndetectorFindBadEqualsImplementation=FindBadEqualsImplementation|true\ndetectorFindBadForLoop=FindBadForLoop|true\ndetectorFindBugsSummaryStats=FindBugsSummaryStats|true\ndetectorFindCircularDependencies=FindCircularDependencies|false\ndetectorFindDeadLocalStores=FindDeadLocalStores|true\ndetectorFindDoubleCheck=FindDoubleCheck|true\ndetectorFindEmptySynchronizedBlock=FindEmptySynchronizedBlock|true\ndetectorFindFieldSelfAssignment=FindFieldSelfAssignment|true\ndetectorFindFinalizeInvocations=FindFinalizeInvocations|true\ndetectorFindFloatEquality=FindFloatEquality|true\ndetectorFindFloatMath=FindFloatMath|false\ndetectorFindHEmismatch=FindHEmismatch|true\ndetectorFindInconsistentSync2=FindInconsistentSync2|true\ndetectorFindJSR166LockMonitorenter=FindJSR166LockMonitorenter|true\ndetectorFindLocalSelfAssignment2=FindLocalSelfAssignment2|true\ndetectorFindMaskedFields=FindMaskedFields|true\ndetectorFindMismatchedWaitOrNotify=FindMismatchedWaitOrNotify|true\ndetectorFindNakedNotify=FindNakedNotify|true\ndetectorFindNonSerializableStoreIntoSession=FindNonSerializableStoreIntoSession|true\ndetectorFindNonSerializableValuePassedToWriteObject=FindNonSerializableValuePassedToWriteObject|true\ndetectorFindNonShortCircuit=FindNonShortCircuit|true\ndetectorFindNullDeref=FindNullDeref|true\ndetectorFindNullDerefsInvolvingNonShortCircuitEvaluation=FindNullDerefsInvolvingNonShortCircuitEvaluation|true\ndetectorFindOpenStream=FindOpenStream|true\ndetectorFindPuzzlers=FindPuzzlers|true\ndetectorFindRefComparison=FindRefComparison|true\ndetectorFindReturnRef=FindReturnRef|true\ndetectorFindRunInvocations=FindRunInvocations|true\ndetectorFindSelfComparison=FindSelfComparison|true\ndetectorFindSelfComparison2=FindSelfComparison2|true\ndetectorFindSleepWithLockHeld=FindSleepWithLockHeld|true\ndetectorFindSpinLoop=FindSpinLoop|true\ndetectorFindSqlInjection=FindSqlInjection|true\ndetectorFindTwoLockWait=FindTwoLockWait|true\ndetectorFindUncalledPrivateMethods=FindUncalledPrivateMethods|true\ndetectorFindUnconditionalWait=FindUnconditionalWait|true\ndetectorFindUninitializedGet=FindUninitializedGet|true\ndetectorFindUnrelatedTypesInGenericContainer=FindUnrelatedTypesInGenericContainer|true\ndetectorFindUnreleasedLock=FindUnreleasedLock|true\ndetectorFindUnsatisfiedObligation=FindUnsatisfiedObligation|true\ndetectorFindUnsyncGet=FindUnsyncGet|true\ndetectorFindUselessControlFlow=FindUselessControlFlow|true\ndetectorFormatStringChecker=FormatStringChecker|true\ndetectorHugeSharedStringConstants=HugeSharedStringConstants|true\ndetectorIDivResultCastToDouble=IDivResultCastToDouble|true\ndetectorIncompatMask=IncompatMask|true\ndetectorInconsistentAnnotations=InconsistentAnnotations|true\ndetectorInefficientMemberAccess=InefficientMemberAccess|true\ndetectorInefficientToArray=InefficientToArray|true\ndetectorInfiniteLoop=InfiniteLoop|true\ndetectorInfiniteRecursiveLoop=InfiniteRecursiveLoop|true\ndetectorInfiniteRecursiveLoop2=InfiniteRecursiveLoop2|true\ndetectorInheritanceUnsafeGetResource=InheritanceUnsafeGetResource|true\ndetectorInitializationChain=InitializationChain|true\ndetectorInstantiateStaticClass=InstantiateStaticClass|true\ndetectorInvalidJUnitTest=InvalidJUnitTest|true\ndetectorIteratorIdioms=IteratorIdioms|true\ndetectorLazyInit=LazyInit|true\ndetectorLoadOfKnownNullValue=LoadOfKnownNullValue|true\ndetectorLockedFields=LockedFields|true\ndetectorMethodReturnCheck=MethodReturnCheck|true\ndetectorMethods=Methods|true\ndetectorMultithreadedInstanceAccess=MultithreadedInstanceAccess|true\ndetectorMutableLock=MutableLock|true\ndetectorMutableStaticFields=MutableStaticFields|true\ndetectorNaming=Naming|true\ndetectorNoise=Noise|false\ndetectorNoiseNullDeref=NoiseNullDeref|false\ndetectorNoteAnnotationRetention=NoteAnnotationRetention|true\ndetectorNoteCheckReturnValue=NoteCheckReturnValue|true\ndetectorNoteCheckReturnValueAnnotations=NoteCheckReturnValueAnnotations|true\ndetectorNoteDirectlyRelevantTypeQualifiers=NoteDirectlyRelevantTypeQualifiers|true\ndetectorNoteJCIPAnnotation=NoteJCIPAnnotation|true\ndetectorNoteNonNullAnnotations=NoteNonNullAnnotations|true\ndetectorNoteNonnullReturnValues=NoteNonnullReturnValues|true\ndetectorNoteSuppressedWarnings=NoteSuppressedWarnings|true\ndetectorNoteUnconditionalParamDerefs=NoteUnconditionalParamDerefs|true\ndetectorNumberConstructor=NumberConstructor|true\ndetectorOverridingEqualsNotSymmetrical=OverridingEqualsNotSymmetrical|true\ndetectorPreferZeroLengthArrays=PreferZeroLengthArrays|true\ndetectorPublicSemaphores=PublicSemaphores|true\ndetectorQuestionableBooleanAssignment=QuestionableBooleanAssignment|true\ndetectorReadReturnShouldBeChecked=ReadReturnShouldBeChecked|true\ndetectorRedundantInterfaces=RedundantInterfaces|true\ndetectorReflectiveClasses=ReflectiveClasses|true\ndetectorRepeatedConditionals=RepeatedConditionals|true\ndetectorResolveAllReferences=ResolveAllReferences|true\ndetectorRuntimeExceptionCapture=RuntimeExceptionCapture|true\ndetectorSerializableIdiom=SerializableIdiom|true\ndetectorStartInConstructor=StartInConstructor|true\ndetectorStaticCalendarDetector=StaticCalendarDetector|true\ndetectorStringConcatenation=StringConcatenation|true\ndetectorSuperfluousInstanceOf=SuperfluousInstanceOf|true\ndetectorSuspiciousThreadInterrupted=SuspiciousThreadInterrupted|true\ndetectorSwitchFallthrough=SwitchFallthrough|true\ndetectorSynchronizationOnSharedBuiltinConstant=SynchronizationOnSharedBuiltinConstant|true\ndetectorSynchronizeAndNullCheckField=SynchronizeAndNullCheckField|true\ndetectorSynchronizeOnClassLiteralNotGetClass=SynchronizeOnClassLiteralNotGetClass|true\ndetectorSynchronizingOnContentsOfFieldToProtectField=SynchronizingOnContentsOfFieldToProtectField|true\ndetectorTestASM=TestASM|false\ndetectorTestDataflowAnalysis=TestDataflowAnalysis|false\ndetectorTestingGround=TestingGround|false\ndetectorTrainFieldStoreTypes=TrainFieldStoreTypes|true\ndetectorTrainNonNullAnnotations=TrainNonNullAnnotations|true\ndetectorTrainUnconditionalDerefParams=TrainUnconditionalDerefParams|true\ndetectorURLProblems=URLProblems|true\ndetectorUncallableMethodOfAnonymousClass=UncallableMethodOfAnonymousClass|true\ndetectorUnnecessaryMath=UnnecessaryMath|true\ndetectorUnreadFields=UnreadFields|true\ndetectorUseObjectEquals=UseObjectEquals|true\ndetectorUselessSubclassMethod=UselessSubclassMethod|true\ndetectorVarArgsProblems=VarArgsProblems|true\ndetectorVolatileUsage=VolatileUsage|true\ndetectorWaitInLoop=WaitInLoop|true\ndetectorWrongMapIterator=WrongMapIterator|true\ndetectorXMLFactoryBypass=XMLFactoryBypass|true\ndetector_threshold=3\neffort=max\nexcludefilter0=.fbfilter.xml\nfilter_settings=Low|BAD_PRACTICE,CORRECTNESS,EXPERIMENTAL,I18N,MALICIOUS_CODE,MT_CORRECTNESS,PERFORMANCE,SECURITY,STYLE|false\nfilter_settings_neg=NOISE|\nrun_at_full_build=true\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0830078125,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.708984375,
          "content": "# Eclipse project files\n.project\n.classpath\n.settings\n\n# IntelliJ IDEA project files and directories\n*.iml\n*.ipr\n*.iws\n.idea/\n.shelf/\n\n# Geany project file\n.geany\n\n# KDevelop project file and directory\n.kdev4/\n*.kdev4\n\n# Build targets\n/target\n*/target\n\n# Report directories\n/reports\n*/reports\n\n# Mac-specific directory that no other operating system needs.\n.DS_Store\n\n# JVM crash logs\nhs_err_pid*.log\nreplay_pid*.log\n\n# JVM dumps\n*.hprof.xz\n*.threads\n\ndependency-reduced-pom.xml\n\n*/.unison.*\n\n# exclude mainframer files\nmainframer\n.mainframer\n\n# exclude docker-sync stuff\n.docker-sync\n*/.docker-sync\n\n# exclude vscode files\n.vscode/\n*.factorypath\n\n# exclude file created by the flatten plugin\n.flattened-pom.xml\n.java-version\n"
        },
        {
          "name": ".mvn",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.2900390625,
          "content": "## How to submit a bug report\n\nPlease ensure to specify the following:\n\n* Netty version (e.g. 4.0.17.Final)\n* Contextual information (e.g. what you were trying to achieve with Netty)\n* Simplest possible steps to reproduce\n  * More complex the steps are, lower the priority will be.\n  * A pull request with failing JUnit test case is most preferred, although it's OK to paste the test case into the issue description.\n* Anything that might be relevant in your opinion, such as:\n  * JDK/JRE version or the output of `java -version`\n  * Operating system and the output of `uname -a`\n  * Network configuration\n\n\n### Example\n\n```\nNetty version: 4.0.17.Final\n\nContext:\nI encountered an exception which looks suspicious while load-testing my Netty-based Thrift server implementation.\n\nSteps to reproduce:\n1. ...\n2. ...\n3. ...\n4. ...\n\n$ java -version\njava version \"1.7.0_51\"\nJava(TM) SE Runtime Environment (build 1.7.0_51-b13)\nJava HotSpot(TM) 64-Bit Server VM (build 24.51-b03, mixed mode)\n\nOperating system: Ubuntu Linux 13.04 64-bit\n\n$ uname -a\nLinux infinity 3.10.32-1-lts #1 SMP Sun Feb 23 09:44:24 CET 2014 x86_64 GNU/Linux\n\nMy system has IPv6 disabled.\n```\n\n## How to contribute your work\n\nBefore submitting a pull request or push a commit, please read [our developer guide](https://netty.io/wiki/developer-guide.html).\n\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 11.09375,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        https://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       https://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE.txt",
          "type": "blob",
          "size": 8.8271484375,
          "content": "\n                            The Netty Project\n                            =================\n\nPlease visit the Netty web site for more information:\n\n  * https://netty.io/\n\nCopyright 2014 The Netty Project\n\nThe Netty Project licenses this file to you under the Apache License,\nversion 2.0 (the \"License\"); you may not use this file except in compliance\nwith the License. You may obtain a copy of the License at:\n\n  https://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\nWARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\nLicense for the specific language governing permissions and limitations\nunder the License.\n\nAlso, please refer to each LICENSE.<component>.txt file, which is located in\nthe 'license' directory of the distribution file, for the license terms of the\ncomponents that this product depends on.\n\n-------------------------------------------------------------------------------\nThis product contains the extensions to Java Collections Framework which has\nbeen derived from the works by JSR-166 EG, Doug Lea, and Jason T. Greene:\n\n  * LICENSE:\n    * license/LICENSE.jsr166y.txt (Public Domain)\n  * HOMEPAGE:\n    * http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/\n    * http://viewvc.jboss.org/cgi-bin/viewvc.cgi/jbosscache/experimental/jsr166/\n\nThis product contains a modified version of Robert Harder's Public Domain\nBase64 Encoder and Decoder, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.base64.txt (Public Domain)\n  * HOMEPAGE:\n    * http://iharder.sourceforge.net/current/java/base64/\n\nThis product contains a modified portion of 'Webbit', an event based\nWebSocket and HTTP server, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.webbit.txt (BSD License)\n  * HOMEPAGE:\n    * https://github.com/joewalnes/webbit\n\nThis product contains a modified portion of 'SLF4J', a simple logging\nfacade for Java, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.slf4j.txt (MIT License)\n  * HOMEPAGE:\n    * https://www.slf4j.org/\n\nThis product contains a modified portion of 'Apache Harmony', an open source\nJava SE, which can be obtained at:\n\n  * NOTICE:\n    * license/NOTICE.harmony.txt\n  * LICENSE:\n    * license/LICENSE.harmony.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://archive.apache.org/dist/harmony/\n\nThis product contains a modified portion of 'jbzip2', a Java bzip2 compression\nand decompression library written by Matthew J. Francis. It can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.jbzip2.txt (MIT License)\n  * HOMEPAGE:\n    * https://code.google.com/p/jbzip2/\n\nThis product contains a modified portion of 'libdivsufsort', a C API library to construct\nthe suffix array and the Burrows-Wheeler transformed string for any input string of\na constant-size alphabet written by Yuta Mori. It can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.libdivsufsort.txt (MIT License)\n  * HOMEPAGE:\n    * https://github.com/y-256/libdivsufsort\n\nThis product contains a modified portion of Nitsan Wakart's 'JCTools', Java Concurrency Tools for the JVM,\n which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.jctools.txt (ASL2 License)\n  * HOMEPAGE:\n    * https://github.com/JCTools/JCTools\n\nThis product optionally depends on 'JZlib', a re-implementation of zlib in\npure Java, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.jzlib.txt (BSD style License)\n  * HOMEPAGE:\n    * http://www.jcraft.com/jzlib/\n\nThis product optionally depends on 'Compress-LZF', a Java library for encoding and\ndecoding data in LZF format, written by Tatu Saloranta. It can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.compress-lzf.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://github.com/ning/compress\n\nThis product optionally depends on 'lz4', a LZ4 Java compression\nand decompression library written by Adrien Grand. It can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.lz4.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://github.com/jpountz/lz4-java\n\nThis product optionally depends on 'lzma-java', a LZMA Java compression\nand decompression library, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.lzma-java.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://github.com/jponge/lzma-java\n\nThis product optionally depends on 'zstd-jni', a zstd-jni Java compression\nand decompression library, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.zstd-jni.txt (BSD)\n  * HOMEPAGE:\n    * https://github.com/luben/zstd-jni\n\nThis product contains a modified portion of 'jfastlz', a Java port of FastLZ compression\nand decompression library written by William Kinney. It can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.jfastlz.txt (MIT License)\n  * HOMEPAGE:\n    * https://code.google.com/p/jfastlz/\n\nThis product contains a modified portion of and optionally depends on 'Protocol Buffers', Google's data\ninterchange format, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.protobuf.txt (New BSD License)\n  * HOMEPAGE:\n    * https://github.com/google/protobuf\n\nThis product optionally depends on 'Bouncy Castle Crypto APIs' to generate\na temporary self-signed X.509 certificate when the JVM does not provide the\nequivalent functionality.  It can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.bouncycastle.txt (MIT License)\n  * HOMEPAGE:\n    * https://www.bouncycastle.org/\n\nThis product optionally depends on 'Snappy', a compression library produced\nby Google Inc, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.snappy.txt (New BSD License)\n  * HOMEPAGE:\n    * https://github.com/google/snappy\n\nThis product optionally depends on 'JBoss Marshalling', an alternative Java\nserialization API, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.jboss-marshalling.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://github.com/jboss-remoting/jboss-marshalling\n\nThis product optionally depends on 'Caliper', Google's micro-\nbenchmarking framework, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.caliper.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://github.com/google/caliper\n\nThis product optionally depends on 'Apache Commons Logging', a logging\nframework, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.commons-logging.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://commons.apache.org/logging/\n\nThis product optionally depends on 'Apache Log4J', a logging framework, which\ncan be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.log4j.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://logging.apache.org/log4j/\n\nThis product optionally depends on 'Aalto XML', an ultra-high performance\nnon-blocking XML processor, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.aalto-xml.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://wiki.fasterxml.com/AaltoHome\n\nThis product contains a modified version of 'HPACK', a Java implementation of\nthe HTTP/2 HPACK algorithm written by Twitter. It can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.hpack.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://github.com/twitter/hpack\n    \nThis product contains a modified version of 'HPACK', a Java implementation of\nthe HTTP/2 HPACK algorithm written by Cory Benfield. It can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.hyper-hpack.txt (MIT License)\n  * HOMEPAGE:\n    * https://github.com/python-hyper/hpack/\n\nThis product contains a modified version of 'HPACK', a Java implementation of\nthe HTTP/2 HPACK algorithm written by Tatsuhiro Tsujikawa. It can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.nghttp2-hpack.txt (MIT License)\n  * HOMEPAGE:\n    * https://github.com/nghttp2/nghttp2/\n\nThis product contains a modified portion of 'Apache Commons Lang', a Java library\nprovides utilities for the java.lang API, which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.commons-lang.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://commons.apache.org/proper/commons-lang/\n\n\nThis product contains the Maven wrapper scripts from 'Maven Wrapper', that provides an easy way to ensure a user has everything necessary to run the Maven build.\n\n  * LICENSE:\n    * license/LICENSE.mvn-wrapper.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://github.com/takari/maven-wrapper\n\nThis product contains the dnsinfo.h header file, that provides a way to retrieve the system DNS configuration on MacOS.\nThis private header is also used by Apple's open source\n mDNSResponder (https://opensource.apple.com/tarballs/mDNSResponder/).\n\n * LICENSE:\n    * license/LICENSE.dnsinfo.txt (Apple Public Source License 2.0)\n  * HOMEPAGE:\n    * https://www.opensource.apple.com/source/configd/configd-453.19/dnsinfo/dnsinfo.h\n\nThis product optionally depends on 'Brotli4j', Brotli compression and\ndecompression for Java., which can be obtained at:\n\n  * LICENSE:\n    * license/LICENSE.brotli4j.txt (Apache License 2.0)\n  * HOMEPAGE:\n    * https://github.com/hyperxpro/Brotli4j\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.67578125,
          "content": "![Build project](https://github.com/netty/netty/workflows/Build%20project/badge.svg)\n\n# Netty Project\n\nNetty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients.\n\n## Links\n\n* [Web Site](https://netty.io/)\n* [Downloads](https://netty.io/downloads.html)\n* [Documentation](https://netty.io/wiki/)\n* [@netty_project](https://twitter.com/netty_project)\n* [Official Discord server](https://discord.gg/q4aQ2XjaCa)\n\n## How to build\n\nFor the detailed information about building and developing Netty, please visit [the developer guide](https://netty.io/wiki/developer-guide.html).  This page only gives very basic information.\n\nYou require the following to build Netty:\n\n* Latest stable [OpenJDK 8](https://adoptium.net/)\n* Latest stable [Apache Maven](https://maven.apache.org/)\n* If you are on Linux or MacOS, you need [additional development packages](https://netty.io/wiki/native-transports.html) installed on your system, because you'll build the native transport.\n\nNote that this is build-time requirement.  JDK 5 (for 3.x) or 6 (for 4.0+ / 4.1+) is enough to run your Netty-based application.\n\n## Branches to look\n\nDevelopment of all versions takes place in each branch whose name is identical to `<majorVersion>.<minorVersion>`.  For example, the development of 3.9 and 4.1 resides in [the branch '3.9'](https://github.com/netty/netty/tree/3.9) and [the branch '4.1'](https://github.com/netty/netty/tree/4.1) respectively.\n\n## Usage with JDK 9+\n\nNetty can be used in modular JDK9+ applications as a collection of automatic modules. The module names follow the\nreverse-DNS style, and are derived from subproject names rather than root packages due to historical reasons. They\nare listed below:\n\n * `io.netty.all`\n * `io.netty.buffer`\n * `io.netty.codec`\n * `io.netty.codec.dns`\n * `io.netty.codec.haproxy`\n * `io.netty.codec.http`\n * `io.netty.codec.http2`\n * `io.netty.codec.memcache`\n * `io.netty.codec.mqtt`\n * `io.netty.codec.redis`\n * `io.netty.codec.smtp`\n * `io.netty.codec.socks`\n * `io.netty.codec.stomp`\n * `io.netty.codec.xml`\n * `io.netty.common`\n * `io.netty.handler`\n * `io.netty.handler.proxy`\n * `io.netty.resolver`\n * `io.netty.resolver.dns`\n * `io.netty.transport`\n * `io.netty.transport.epoll` (`native` omitted - reserved keyword in Java)\n * `io.netty.transport.kqueue` (`native` omitted - reserved keyword in Java)\n * `io.netty.transport.unix.common` (`native` omitted - reserved keyword in Java)\n * `io.netty.transport.rxtx`\n * `io.netty.transport.sctp`\n * `io.netty.transport.udt`\n\n\n\nAutomatic modules do not provide any means to declare dependencies, so you need to list each used module separately\nin your `module-info` file.\n"
        },
        {
          "name": "all",
          "type": "tree",
          "content": null
        },
        {
          "name": "bom",
          "type": "tree",
          "content": null
        },
        {
          "name": "buffer",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-dns",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-haproxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-http",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-http2",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-memcache",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-mqtt",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-redis",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-smtp",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-socks",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-stomp",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec-xml",
          "type": "tree",
          "content": null
        },
        {
          "name": "codec",
          "type": "tree",
          "content": null
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "handler-proxy",
          "type": "tree",
          "content": null
        },
        {
          "name": "handler-ssl-ocsp",
          "type": "tree",
          "content": null
        },
        {
          "name": "handler",
          "type": "tree",
          "content": null
        },
        {
          "name": "license",
          "type": "tree",
          "content": null
        },
        {
          "name": "microbench",
          "type": "tree",
          "content": null
        },
        {
          "name": "mvnw",
          "type": "blob",
          "size": 11.025390625,
          "content": "#!/bin/sh\n# ----------------------------------------------------------------------------\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#    https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\n\n# ----------------------------------------------------------------------------\n# Apache Maven Wrapper startup batch script, version 3.2.0\n#\n# Required ENV vars:\n# ------------------\n#   JAVA_HOME - location of a JDK home dir\n#\n# Optional ENV vars\n# -----------------\n#   MAVEN_OPTS - parameters passed to the Java VM when running Maven\n#     e.g. to debug Maven itself, use\n#       set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n#   MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n# ----------------------------------------------------------------------------\n\nif [ -z \"$MAVEN_SKIP_RC\" ] ; then\n\n  if [ -f /usr/local/etc/mavenrc ] ; then\n    . /usr/local/etc/mavenrc\n  fi\n\n  if [ -f /etc/mavenrc ] ; then\n    . /etc/mavenrc\n  fi\n\n  if [ -f \"$HOME/.mavenrc\" ] ; then\n    . \"$HOME/.mavenrc\"\n  fi\n\nfi\n\n# OS specific support.  $var _must_ be set to either true or false.\ncygwin=false;\ndarwin=false;\nmingw=false\ncase \"$(uname)\" in\n  CYGWIN*) cygwin=true ;;\n  MINGW*) mingw=true;;\n  Darwin*) darwin=true\n    # Use /usr/libexec/java_home if available, otherwise fall back to /Library/Java/Home\n    # See https://developer.apple.com/library/mac/qa/qa1170/_index.html\n    if [ -z \"$JAVA_HOME\" ]; then\n      if [ -x \"/usr/libexec/java_home\" ]; then\n        JAVA_HOME=\"$(/usr/libexec/java_home)\"; export JAVA_HOME\n      else\n        JAVA_HOME=\"/Library/Java/Home\"; export JAVA_HOME\n      fi\n    fi\n    ;;\nesac\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  if [ -r /etc/gentoo-release ] ; then\n    JAVA_HOME=$(java-config --jre-home)\n  fi\nfi\n\n# For Cygwin, ensure paths are in UNIX format before anything is touched\nif $cygwin ; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=$(cygpath --unix \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=$(cygpath --path --unix \"$CLASSPATH\")\nfi\n\n# For Mingw, ensure paths are in UNIX format before anything is touched\nif $mingw ; then\n  [ -n \"$JAVA_HOME\" ] && [ -d \"$JAVA_HOME\" ] &&\n    JAVA_HOME=\"$(cd \"$JAVA_HOME\" || (echo \"cannot cd into $JAVA_HOME.\"; exit 1); pwd)\"\nfi\n\nif [ -z \"$JAVA_HOME\" ]; then\n  javaExecutable=\"$(which javac)\"\n  if [ -n \"$javaExecutable\" ] && ! [ \"$(expr \"\\\"$javaExecutable\\\"\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n    # readlink(1) is not available as standard on Solaris 10.\n    readLink=$(which readlink)\n    if [ ! \"$(expr \"$readLink\" : '\\([^ ]*\\)')\" = \"no\" ]; then\n      if $darwin ; then\n        javaHome=\"$(dirname \"\\\"$javaExecutable\\\"\")\"\n        javaExecutable=\"$(cd \"\\\"$javaHome\\\"\" && pwd -P)/javac\"\n      else\n        javaExecutable=\"$(readlink -f \"\\\"$javaExecutable\\\"\")\"\n      fi\n      javaHome=\"$(dirname \"\\\"$javaExecutable\\\"\")\"\n      javaHome=$(expr \"$javaHome\" : '\\(.*\\)/bin')\n      JAVA_HOME=\"$javaHome\"\n      export JAVA_HOME\n    fi\n  fi\nfi\n\nif [ -z \"$JAVACMD\" ] ; then\n  if [ -n \"$JAVA_HOME\"  ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n      # IBM's JDK on AIX uses strange locations for the executables\n      JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n      JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n  else\n    JAVACMD=\"$(\\unset -f command 2>/dev/null; \\command -v java)\"\n  fi\nfi\n\nif [ ! -x \"$JAVACMD\" ] ; then\n  echo \"Error: JAVA_HOME is not defined correctly.\" >&2\n  echo \"  We cannot execute $JAVACMD\" >&2\n  exit 1\nfi\n\nif [ -z \"$JAVA_HOME\" ] ; then\n  echo \"Warning: JAVA_HOME environment variable is not set.\"\nfi\n\n# traverses directory structure from process work directory to filesystem root\n# first directory with .mvn subdirectory is considered project base directory\nfind_maven_basedir() {\n  if [ -z \"$1\" ]\n  then\n    echo \"Path not specified to find_maven_basedir\"\n    return 1\n  fi\n\n  basedir=\"$1\"\n  wdir=\"$1\"\n  while [ \"$wdir\" != '/' ] ; do\n    if [ -d \"$wdir\"/.mvn ] ; then\n      basedir=$wdir\n      break\n    fi\n    # workaround for JBEAP-8937 (on Solaris 10/Sparc)\n    if [ -d \"${wdir}\" ]; then\n      wdir=$(cd \"$wdir/..\" || exit 1; pwd)\n    fi\n    # end of workaround\n  done\n  printf '%s' \"$(cd \"$basedir\" || exit 1; pwd)\"\n}\n\n# concatenates all lines of a file\nconcat_lines() {\n  if [ -f \"$1\" ]; then\n    # Remove \\r in case we run on Windows within Git Bash\n    # and check out the repository with auto CRLF management\n    # enabled. Otherwise, we may read lines that are delimited with\n    # \\r\\n and produce $'-Xarg\\r' rather than -Xarg due to word\n    # splitting rules.\n    tr -s '\\r\\n' ' ' < \"$1\"\n  fi\n}\n\nlog() {\n  if [ \"$MVNW_VERBOSE\" = true ]; then\n    printf '%s\\n' \"$1\"\n  fi\n}\n\nBASE_DIR=$(find_maven_basedir \"$(dirname \"$0\")\")\nif [ -z \"$BASE_DIR\" ]; then\n  exit 1;\nfi\n\nMAVEN_PROJECTBASEDIR=${MAVEN_BASEDIR:-\"$BASE_DIR\"}; export MAVEN_PROJECTBASEDIR\nlog \"$MAVEN_PROJECTBASEDIR\"\n\n##########################################################################################\n# Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n# This allows using the maven wrapper in projects that prohibit checking in binary data.\n##########################################################################################\nwrapperJarPath=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\"\nif [ -r \"$wrapperJarPath\" ]; then\n    log \"Found $wrapperJarPath\"\nelse\n    log \"Couldn't find $wrapperJarPath, downloading it ...\"\n\n    if [ -n \"$MVNW_REPOURL\" ]; then\n      wrapperUrl=\"$MVNW_REPOURL/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    else\n      wrapperUrl=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    fi\n    while IFS=\"=\" read -r key value; do\n      # Remove '\\r' from value to allow usage on windows as IFS does not consider '\\r' as a separator ( considers space, tab, new line ('\\n'), and custom '=' )\n      safeValue=$(echo \"$value\" | tr -d '\\r')\n      case \"$key\" in (wrapperUrl) wrapperUrl=\"$safeValue\"; break ;;\n      esac\n    done < \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\n    log \"Downloading from: $wrapperUrl\"\n\n    if $cygwin; then\n      wrapperJarPath=$(cygpath --path --windows \"$wrapperJarPath\")\n    fi\n\n    if command -v wget > /dev/null; then\n        log \"Found wget ... using wget\"\n        [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--quiet\"\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            wget $QUIET \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        else\n            wget $QUIET --http-user=\"$MVNW_USERNAME\" --http-password=\"$MVNW_PASSWORD\" \"$wrapperUrl\" -O \"$wrapperJarPath\" || rm -f \"$wrapperJarPath\"\n        fi\n    elif command -v curl > /dev/null; then\n        log \"Found curl ... using curl\"\n        [ \"$MVNW_VERBOSE\" = true ] && QUIET=\"\" || QUIET=\"--silent\"\n        if [ -z \"$MVNW_USERNAME\" ] || [ -z \"$MVNW_PASSWORD\" ]; then\n            curl $QUIET -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n        else\n            curl $QUIET --user \"$MVNW_USERNAME:$MVNW_PASSWORD\" -o \"$wrapperJarPath\" \"$wrapperUrl\" -f -L || rm -f \"$wrapperJarPath\"\n        fi\n    else\n        log \"Falling back to using Java to download\"\n        javaSource=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.java\"\n        javaClass=\"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/MavenWrapperDownloader.class\"\n        # For Cygwin, switch paths to Windows format before running javac\n        if $cygwin; then\n          javaSource=$(cygpath --path --windows \"$javaSource\")\n          javaClass=$(cygpath --path --windows \"$javaClass\")\n        fi\n        if [ -e \"$javaSource\" ]; then\n            if [ ! -e \"$javaClass\" ]; then\n                log \" - Compiling MavenWrapperDownloader.java ...\"\n                (\"$JAVA_HOME/bin/javac\" \"$javaSource\")\n            fi\n            if [ -e \"$javaClass\" ]; then\n                log \" - Running MavenWrapperDownloader.java ...\"\n                (\"$JAVA_HOME/bin/java\" -cp .mvn/wrapper MavenWrapperDownloader \"$wrapperUrl\" \"$wrapperJarPath\") || rm -f \"$wrapperJarPath\"\n            fi\n        fi\n    fi\nfi\n##########################################################################################\n# End of extension\n##########################################################################################\n\n# If specified, validate the SHA-256 sum of the Maven wrapper jar file\nwrapperSha256Sum=\"\"\nwhile IFS=\"=\" read -r key value; do\n  case \"$key\" in (wrapperSha256Sum) wrapperSha256Sum=$value; break ;;\n  esac\ndone < \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.properties\"\nif [ -n \"$wrapperSha256Sum\" ]; then\n  wrapperSha256Result=false\n  if command -v sha256sum > /dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | sha256sum -c > /dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  elif command -v shasum > /dev/null; then\n    if echo \"$wrapperSha256Sum  $wrapperJarPath\" | shasum -a 256 -c > /dev/null 2>&1; then\n      wrapperSha256Result=true\n    fi\n  else\n    echo \"Checksum validation was requested but neither 'sha256sum' or 'shasum' are available.\"\n    echo \"Please install either command, or disable validation by removing 'wrapperSha256Sum' from your maven-wrapper.properties.\"\n    exit 1\n  fi\n  if [ $wrapperSha256Result = false ]; then\n    echo \"Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.\" >&2\n    echo \"Investigate or delete $wrapperJarPath to attempt a clean download.\" >&2\n    echo \"If you updated your Maven version, you need to update the specified wrapperSha256Sum property.\" >&2\n    exit 1\n  fi\nfi\n\nMAVEN_OPTS=\"$(concat_lines \"$MAVEN_PROJECTBASEDIR/.mvn/jvm.config\") $MAVEN_OPTS\"\n\n# For Cygwin, switch paths to Windows format before running java\nif $cygwin; then\n  [ -n \"$JAVA_HOME\" ] &&\n    JAVA_HOME=$(cygpath --path --windows \"$JAVA_HOME\")\n  [ -n \"$CLASSPATH\" ] &&\n    CLASSPATH=$(cygpath --path --windows \"$CLASSPATH\")\n  [ -n \"$MAVEN_PROJECTBASEDIR\" ] &&\n    MAVEN_PROJECTBASEDIR=$(cygpath --path --windows \"$MAVEN_PROJECTBASEDIR\")\nfi\n\n# Provide a \"standardized\" way to retrieve the CLI args that will\n# work with both Windows and non-Windows executions.\nMAVEN_CMD_LINE_ARGS=\"$MAVEN_CONFIG $*\"\nexport MAVEN_CMD_LINE_ARGS\n\nWRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\n# shellcheck disable=SC2086 # safe args\nexec \"$JAVACMD\" \\\n  $MAVEN_OPTS \\\n  $MAVEN_DEBUG_OPTS \\\n  -classpath \"$MAVEN_PROJECTBASEDIR/.mvn/wrapper/maven-wrapper.jar\" \\\n  \"-Dmaven.multiModuleProjectDirectory=${MAVEN_PROJECTBASEDIR}\" \\\n  ${WRAPPER_LAUNCHER} $MAVEN_CONFIG \"$@\"\n"
        },
        {
          "name": "mvnw.cmd",
          "type": "blob",
          "size": 7.4140625,
          "content": "@REM ----------------------------------------------------------------------------\n@REM Licensed to the Apache Software Foundation (ASF) under one\n@REM or more contributor license agreements.  See the NOTICE file\n@REM distributed with this work for additional information\n@REM regarding copyright ownership.  The ASF licenses this file\n@REM to you under the Apache License, Version 2.0 (the\n@REM \"License\"); you may not use this file except in compliance\n@REM with the License.  You may obtain a copy of the License at\n@REM\n@REM    https://www.apache.org/licenses/LICENSE-2.0\n@REM\n@REM Unless required by applicable law or agreed to in writing,\n@REM software distributed under the License is distributed on an\n@REM \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@REM KIND, either express or implied.  See the License for the\n@REM specific language governing permissions and limitations\n@REM under the License.\n@REM ----------------------------------------------------------------------------\n\n@REM ----------------------------------------------------------------------------\n@REM Apache Maven Wrapper startup batch script, version 3.2.0\n@REM\n@REM Required ENV vars:\n@REM JAVA_HOME - location of a JDK home dir\n@REM\n@REM Optional ENV vars\n@REM MAVEN_BATCH_ECHO - set to 'on' to enable the echoing of the batch commands\n@REM MAVEN_BATCH_PAUSE - set to 'on' to wait for a keystroke before ending\n@REM MAVEN_OPTS - parameters passed to the Java VM when running Maven\n@REM     e.g. to debug Maven itself, use\n@REM set MAVEN_OPTS=-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000\n@REM MAVEN_SKIP_RC - flag to disable loading of mavenrc files\n@REM ----------------------------------------------------------------------------\n\n@REM Begin all REM lines with '@' in case MAVEN_BATCH_ECHO is 'on'\n@echo off\n@REM set title of command window\ntitle %0\n@REM enable echoing by setting MAVEN_BATCH_ECHO to 'on'\n@if \"%MAVEN_BATCH_ECHO%\" == \"on\"  echo %MAVEN_BATCH_ECHO%\n\n@REM set %HOME% to equivalent of $HOME\nif \"%HOME%\" == \"\" (set \"HOME=%HOMEDRIVE%%HOMEPATH%\")\n\n@REM Execute a user defined script before this one\nif not \"%MAVEN_SKIP_RC%\" == \"\" goto skipRcPre\n@REM check for pre script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_pre.bat\" call \"%USERPROFILE%\\mavenrc_pre.bat\" %*\nif exist \"%USERPROFILE%\\mavenrc_pre.cmd\" call \"%USERPROFILE%\\mavenrc_pre.cmd\" %*\n:skipRcPre\n\n@setlocal\n\nset ERROR_CODE=0\n\n@REM To isolate internal variables from possible post scripts, we use another setlocal\n@setlocal\n\n@REM ==== START VALIDATION ====\nif not \"%JAVA_HOME%\" == \"\" goto OkJHome\n\necho.\necho Error: JAVA_HOME not found in your environment. >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n:OkJHome\nif exist \"%JAVA_HOME%\\bin\\java.exe\" goto init\n\necho.\necho Error: JAVA_HOME is set to an invalid directory. >&2\necho JAVA_HOME = \"%JAVA_HOME%\" >&2\necho Please set the JAVA_HOME variable in your environment to match the >&2\necho location of your Java installation. >&2\necho.\ngoto error\n\n@REM ==== END VALIDATION ====\n\n:init\n\n@REM Find the project base dir, i.e. the directory that contains the folder \".mvn\".\n@REM Fallback to current working directory if not found.\n\nset MAVEN_PROJECTBASEDIR=%MAVEN_BASEDIR%\nIF NOT \"%MAVEN_PROJECTBASEDIR%\"==\"\" goto endDetectBaseDir\n\nset EXEC_DIR=%CD%\nset WDIR=%EXEC_DIR%\n:findBaseDir\nIF EXIST \"%WDIR%\"\\.mvn goto baseDirFound\ncd ..\nIF \"%WDIR%\"==\"%CD%\" goto baseDirNotFound\nset WDIR=%CD%\ngoto findBaseDir\n\n:baseDirFound\nset MAVEN_PROJECTBASEDIR=%WDIR%\ncd \"%EXEC_DIR%\"\ngoto endDetectBaseDir\n\n:baseDirNotFound\nset MAVEN_PROJECTBASEDIR=%EXEC_DIR%\ncd \"%EXEC_DIR%\"\n\n:endDetectBaseDir\n\nIF NOT EXIST \"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\" goto endReadAdditionalConfig\n\n@setlocal EnableExtensions EnableDelayedExpansion\nfor /F \"usebackq delims=\" %%a in (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\jvm.config\") do set JVM_CONFIG_MAVEN_PROPS=!JVM_CONFIG_MAVEN_PROPS! %%a\n@endlocal & set JVM_CONFIG_MAVEN_PROPS=%JVM_CONFIG_MAVEN_PROPS%\n\n:endReadAdditionalConfig\n\nSET MAVEN_JAVA_EXE=\"%JAVA_HOME%\\bin\\java.exe\"\nset WRAPPER_JAR=\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.jar\"\nset WRAPPER_LAUNCHER=org.apache.maven.wrapper.MavenWrapperMain\n\nset WRAPPER_URL=\"https://repo.maven.apache.org/maven2/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperUrl\" SET WRAPPER_URL=%%B\n)\n\n@REM Extension to allow automatically downloading the maven-wrapper.jar from Maven-central\n@REM This allows using the maven wrapper in projects that prohibit checking in binary data.\nif exist %WRAPPER_JAR% (\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Found %WRAPPER_JAR%\n    )\n) else (\n    if not \"%MVNW_REPOURL%\" == \"\" (\n        SET WRAPPER_URL=\"%MVNW_REPOURL%/org/apache/maven/wrapper/maven-wrapper/3.2.0/maven-wrapper-3.2.0.jar\"\n    )\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Couldn't find %WRAPPER_JAR%, downloading it ...\n        echo Downloading from: %WRAPPER_URL%\n    )\n\n    powershell -Command \"&{\"^\n\t\t\"$webclient = new-object System.Net.WebClient;\"^\n\t\t\"if (-not ([string]::IsNullOrEmpty('%MVNW_USERNAME%') -and [string]::IsNullOrEmpty('%MVNW_PASSWORD%'))) {\"^\n\t\t\"$webclient.Credentials = new-object System.Net.NetworkCredential('%MVNW_USERNAME%', '%MVNW_PASSWORD%');\"^\n\t\t\"}\"^\n\t\t\"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; $webclient.DownloadFile('%WRAPPER_URL%', '%WRAPPER_JAR%')\"^\n\t\t\"}\"\n    if \"%MVNW_VERBOSE%\" == \"true\" (\n        echo Finished downloading %WRAPPER_JAR%\n    )\n)\n@REM End of extension\n\n@REM If specified, validate the SHA-256 sum of the Maven wrapper jar file\nSET WRAPPER_SHA_256_SUM=\"\"\nFOR /F \"usebackq tokens=1,2 delims==\" %%A IN (\"%MAVEN_PROJECTBASEDIR%\\.mvn\\wrapper\\maven-wrapper.properties\") DO (\n    IF \"%%A\"==\"wrapperSha256Sum\" SET WRAPPER_SHA_256_SUM=%%B\n)\nIF NOT %WRAPPER_SHA_256_SUM%==\"\" (\n    powershell -Command \"&{\"^\n       \"$hash = (Get-FileHash \\\"%WRAPPER_JAR%\\\" -Algorithm SHA256).Hash.ToLower();\"^\n       \"If('%WRAPPER_SHA_256_SUM%' -ne $hash){\"^\n       \"  Write-Output 'Error: Failed to validate Maven wrapper SHA-256, your Maven wrapper might be compromised.';\"^\n       \"  Write-Output 'Investigate or delete %WRAPPER_JAR% to attempt a clean download.';\"^\n       \"  Write-Output 'If you updated your Maven version, you need to update the specified wrapperSha256Sum property.';\"^\n       \"  exit 1;\"^\n       \"}\"^\n       \"}\"\n    if ERRORLEVEL 1 goto error\n)\n\n@REM Provide a \"standardized\" way to retrieve the CLI args that will\n@REM work with both Windows and non-Windows executions.\nset MAVEN_CMD_LINE_ARGS=%*\n\n%MAVEN_JAVA_EXE% ^\n  %JVM_CONFIG_MAVEN_PROPS% ^\n  %MAVEN_OPTS% ^\n  %MAVEN_DEBUG_OPTS% ^\n  -classpath %WRAPPER_JAR% ^\n  \"-Dmaven.multiModuleProjectDirectory=%MAVEN_PROJECTBASEDIR%\" ^\n  %WRAPPER_LAUNCHER% %MAVEN_CONFIG% %*\nif ERRORLEVEL 1 goto error\ngoto end\n\n:error\nset ERROR_CODE=1\n\n:end\n@endlocal & set ERROR_CODE=%ERROR_CODE%\n\nif not \"%MAVEN_SKIP_RC%\"==\"\" goto skipRcPost\n@REM check for post script, once with legacy .bat ending and once with .cmd ending\nif exist \"%USERPROFILE%\\mavenrc_post.bat\" call \"%USERPROFILE%\\mavenrc_post.bat\"\nif exist \"%USERPROFILE%\\mavenrc_post.cmd\" call \"%USERPROFILE%\\mavenrc_post.cmd\"\n:skipRcPost\n\n@REM pause the script if MAVEN_BATCH_PAUSE is set to 'on'\nif \"%MAVEN_BATCH_PAUSE%\"==\"on\" pause\n\nif \"%MAVEN_TERMINATE_CMD%\"==\"on\" exit %ERROR_CODE%\n\ncmd /C exit /B %ERROR_CODE%\n"
        },
        {
          "name": "nohttp-checkstyle-suppressions.xml",
          "type": "blob",
          "size": 3.681640625,
          "content": "<?xml version=\"1.0\"?>\n<!--\n  ~ Copyright 2020 The Netty Project\n  ~\n  ~ The Netty Project licenses this file to you under the Apache License,\n  ~ version 2.0 (the \"License\"); you may not use this file except in compliance\n  ~ with the License. You may obtain a copy of the License at:\n  ~\n  ~   https://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n  ~ License for the specific language governing permissions and limitations\n  ~ under the License.\n  -->\n<!DOCTYPE suppressions PUBLIC \"-//Checkstyle//DTD SuppressionFilter Configuration 1.2//EN\" \"https://checkstyle.org/dtds/suppressions_1_2.dtd\">\n<suppressions>\n\n  <!-- For demo and testing purposes -->\n  <suppress message=\"http://example.com\" checks=\"NoHttp\"/>\n  <suppress message=\"http://aurl.com;port=\" checks=\"NoHttp\"/>\n  <suppress message=\"http://domain1.com\" checks=\"NoHttp\"/>\n  <suppress message=\"http://domain1.com/cors.html\" checks=\"NoHttp\"/>\n  <suppress message=\"http://foo.com\" checks=\"NoHttp\"/>\n  <suppress message=\"http://www.site.ru/index.html\" checks=\"NoHttp\"/>\n  <suppress message=\"http://aurl.com\" files=\".+Test.+\" checks=\"NoHttp\"/>\n  <suppress message=\"http://www.acme.com\" files=\".+Test.+\" checks=\"NoHttp\"/>\n  <suppress message=\"http://www.acme.com/acme\" files=\".+\\.xml\" checks=\"NoHttp\"/>\n\n  <!-- Suppress warnings for URLs to old projects that don't have HTTPS links -->\n  <suppress files=\"NOTICE\\.txt\" lines=\"34,35,43,59,102,199\" checks=\"NoHttp\"/>\n\n  <!-- Those links don't support HTTPS or not reachable -->\n  <suppress message=\"http://www.faqs.org\" checks=\"NoHttp\"/>\n  <suppress message=\"http://autobahn.ws\" checks=\"NoHttp\"/>\n  <suppress message=\"http://beepcore.org/\" checks=\"NoHttp\"/>\n  <suppress message=\"http://blog.peterlynch.ca/2010/05/maven-how-to-prevent-generate-sources.html\" checks=\"NoHttp\"/>\n  <suppress message=\"http://entropyware.info/shcodec/index.html\" checks=\"NoHttp\"/>\n  <suppress message=\"http://foo.com/images;num=10?query=name;value=123\" checks=\"NoHttp\"/>\n  <suppress message=\"http://iharder.sourceforge.net/current/java/base64/\" checks=\"NoHttp\"/>\n  <suppress message=\"http://jira.codehaus.org/browse/MSOURCES-13\" checks=\"NoHttp\"/>\n  <suppress message=\"http://jmesnil.net/\" checks=\"NoHttp\"/>\n  <suppress message=\"http://oldhome.schmorp.de/marc/liblzf.html\" checks=\"NoHttp\"/>\n  <suppress message=\"http://status.com\" checks=\"NoHttp\"/>\n  <suppress message=\"http://www-di.inf.puc-rio.br/~laber/public/spire98.ps\" checks=\"NoHttp\"/>\n  <suppress message=\"http://www.javaconcurrencyinpractice.com/annotations/doc/\" checks=\"NoHttp\"/>\n  <suppress message=\"http://www.jmesnil.net/stomp-websocket/doc/\" checks=\"NoHttp\"/>\n  <suppress message=\"http://www.oid-info.com/get/2.16.840.1.101.3.4.2.1\" checks=\"NoHttp\"/>\n  <suppress message=\"http://www.soap-service.by/foo/add\" checks=\"NoHttp\"/>\n  <suppress message=\"http://www.tavendo.de/autobahn/testsuite.html\" checks=\"NoHttp\"/>\n  <suppress message=\"http://gee.cs.oswego.edu/cgi-bin/viewcvs.cgi/jsr166/src/main/java/util/concurrent/ThreadLocalRandom.java\" checks=\"NoHttp\"/>\n\n  <!-- Need to use http as the maven release plugin will fail otherwise\n       See https://issues.apache.org/jira/browse/HBASE-24014 -->\n  <suppress message=\"http://www.w3.org/2001/XMLSchema-instance\" checks=\"NoHttp\"/>\n  <suppress message=\"http://maven.apache.org/POM/4.0.0\" checks=\"NoHttp\"/>\n\n  <!-- These files are generated during the build and not under git -->\n  <suppress files=\"testsuite-shading[/\\\\]dependency-reduced-pom\\.xml\" checks=\"NoHttp\"/>\n  <suppress files=\"common[/\\\\]dependency-reduced-pom\\.xml\" checks=\"NoHttp\"/>\n</suppressions>\n"
        },
        {
          "name": "nohttp-checkstyle.xml",
          "type": "blob",
          "size": 0.9755859375,
          "content": "<?xml version=\"1.0\"?>\n<!--\n  ~ Copyright 2020 The Netty Project\n  ~\n  ~ The Netty Project licenses this file to you under the Apache License,\n  ~ version 2.0 (the \"License\"); you may not use this file except in compliance\n  ~ with the License. You may obtain a copy of the License at:\n  ~\n  ~   https://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n  ~ License for the specific language governing permissions and limitations\n  ~ under the License.\n  -->\n<!DOCTYPE module PUBLIC \"-//Puppy Crawl//DTD Check Configuration 1.3//EN\" \"https://www.puppycrawl.com/dtds/configuration_1_3.dtd\">\n<module name=\"Checker\">\n    <property name=\"charset\" value=\"UTF-8\"/>\n    <property name=\"fileExtensions\" value=\"\"/>\n    <module name=\"io.spring.nohttp.checkstyle.check.NoHttpCheck\"/>\n</module>\n"
        },
        {
          "name": "pom.xml",
          "type": "blob",
          "size": 87.927734375,
          "content": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!--\n  ~ Copyright 2012 The Netty Project\n  ~\n  ~ The Netty Project licenses this file to you under the Apache License,\n  ~ version 2.0 (the \"License\"); you may not use this file except in compliance\n  ~ with the License. You may obtain a copy of the License at:\n  ~\n  ~   https://www.apache.org/licenses/LICENSE-2.0\n  ~\n  ~ Unless required by applicable law or agreed to in writing, software\n  ~ distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n  ~ WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n  ~ License for the specific language governing permissions and limitations\n  ~ under the License.\n  -->\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd\">\n\n  <modelVersion>4.0.0</modelVersion>\n  <parent>\n    <groupId>org.sonatype.oss</groupId>\n    <artifactId>oss-parent</artifactId>\n    <version>9</version>\n  </parent>\n\n  <groupId>io.netty</groupId>\n  <artifactId>netty-parent</artifactId>\n  <packaging>pom</packaging>\n  <version>4.1.117.Final-SNAPSHOT</version>\n\n  <name>Netty</name>\n  <url>https://netty.io/</url>\n  <description>\n    Netty is an asynchronous event-driven network application framework for\n    rapid development of maintainable high performance protocol servers and\n    clients.\n  </description>\n\n  <organization>\n    <name>The Netty Project</name>\n    <url>https://netty.io/</url>\n  </organization>\n\n  <licenses>\n    <license>\n      <name>Apache License, Version 2.0</name>\n      <url>https://www.apache.org/licenses/LICENSE-2.0</url>\n    </license>\n  </licenses>\n  <inceptionYear>2008</inceptionYear>\n\n  <scm>\n    <url>https://github.com/netty/netty</url>\n    <connection>scm:git:git://github.com/netty/netty.git</connection>\n    <developerConnection>scm:git:ssh://git@github.com/netty/netty.git</developerConnection>\n    <tag>HEAD</tag>\n  </scm>\n\n  <developers>\n    <developer>\n      <id>netty.io</id>\n      <name>The Netty Project Contributors</name>\n      <email>netty@googlegroups.com</email>\n      <url>https://netty.io/</url>\n      <organization>The Netty Project</organization>\n      <organizationUrl>https://netty.io/</organizationUrl>\n    </developer>\n  </developers>\n\n  <profiles>\n    <profile>\n      <id>aggregate</id>\n      <properties>\n        <checkstyle.skip>true</checkstyle.skip>\n      </properties>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-javadoc-plugin</artifactId>\n            <version>3.2.0</version>\n            <executions>\n              <execution>\n                <id>aggregate</id>\n                <goals>\n                  <goal>aggregate</goal>\n                </goals>\n              </execution>\n            </executions>\n            <configuration>\n              <skippedModules>\n                netty-all,netty-bom,netty-testsuite,netty-testsuite-autobahn,netty-testsuite-http2,\n                netty-testsuite-native,netty-testsuite-native-image,netty-testsuite-native-image-client,\n                netty-testsuite-native-image-client-runtime-init,netty-testsuite-osgi,netty-testsuite-shading,\n                netty-transport-blockhound-tests,netty-transport-native-unix-common-tests,netty-microbench,\n                netty-dev-tools,netty-example\n              </skippedModules>\n              <sourceFileExcludes>\n                <exclude>**/com/sun/**/*.java</exclude>\n                <exclude>**/example/**/*.java</exclude>\n                <exclude>**/testsuite/**/*.java</exclude>\n                <exclude>**/microbench/**/*.java</exclude>\n                <exclude>**/microbenchmark/**/*.java</exclude>\n                <exclude>**/generated/**/*.java</exclude>\n                <exclude>**/*Benchmark.java</exclude>\n                <exclude>**/*Bench.java</exclude>\n                <exclude>**/*Test.java</exclude>\n              </sourceFileExcludes>\n              <docfilessubdirs>true</docfilessubdirs>\n              <outputDirectory>${project.build.directory}/api</outputDirectory>\n              <overview>${project.basedir}/src/javadoc/overview.html</overview>\n              <doctitle>Netty API Reference (${project.version})</doctitle>\n              <windowtitle>Netty API Reference (${project.version})</windowtitle>\n              <detectJavaApiLink>false</detectJavaApiLink>\n              <links>\n                <link>https://docs.oracle.com/javase/8/docs/api/</link>\n                <link>https://developers.google.com/protocol-buffers/docs/reference/java/</link>\n                <link>https://www.slf4j.org/apidocs/</link>\n              </links>\n              <groups>\n                <group>\n                  <title>Low-level data representation</title>\n                  <packages>io.netty.buffer*</packages>\n                </group>\n                <group>\n                  <title>Central interface for all I/O operations</title>\n                  <packages>io.netty.channel*</packages>\n                </group>\n                <group>\n                  <title>Client &amp; Server bootstrapping utilities</title>\n                  <packages>io.netty.bootstrap*</packages>\n                </group>\n                <group>\n                  <title>Reusable I/O event interceptors</title>\n                  <packages>io.netty.handler*</packages>\n                </group>\n                <group>\n                  <title>DNS / Host resolvers</title>\n                  <packages>io.netty.resolver*</packages>\n                </group>\n                <group>\n                  <title>Utils</title>\n                  <packages>io.netty.util*</packages>\n                </group>\n              </groups>\n              <locale>en_US</locale>\n            </configuration>\n          </plugin>\n          <plugin>\n            <groupId>org.apache.maven.plugins</groupId>\n            <artifactId>maven-jxr-plugin</artifactId>\n            <executions>\n              <execution>\n                <id>aggregate</id>\n                <goals>\n                  <goal>aggregate</goal>\n                </goals>\n              </execution>\n            </executions>\n            <configuration>\n              <linkJavadoc>true</linkJavadoc>\n              <destDir>${project.build.directory}/site/xref</destDir>\n              <javadocDir>${project.build.directory}/site/apidocs</javadocDir>\n              <docTitle>Netty Source Xref (${project.version})</docTitle>\n              <windowTitle>Netty Source Xref (${project.version})</windowTitle>\n              <excludes>\n                <exclude>**/com/sun/**/*.java</exclude>\n                <exclude>**/microbench/**/*.java</exclude>\n                <exclude>**/microbenchmark/**/*.java</exclude>\n              </excludes>\n            </configuration>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <!-- Detect if we use GraalVM and if so enable the native image testsuite -->\n    <profile>\n      <id>graal</id>\n      <activation>\n        <file>\n          <!-- GraalVM Component Updater should exists when using GraalVM-->\n          <exists>${java.home}/bin/gu</exists>\n        </file>\n      </activation>\n      <properties>\n        <skipNativeImageTestsuite>false</skipNativeImageTestsuite>\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <testJvm />\n      </properties>\n    </profile>\n    <profile>\n      <id>java23</id>\n      <activation>\n        <jdk>23</jdk>\n      </activation>\n      <properties>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- We need to use 1.8 as otherwise default methods are not picked up and so result in compile errors for\n             our EventExecutorGroup implementations\n        -->\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n        <revapi.skip>true</revapi.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>java22</id>\n      <activation>\n        <jdk>22</jdk>\n      </activation>\n      <properties>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- We need to use 1.8 as otherwise default methods are not picked up and so result in compile errors for\n             our EventExecutorGroup implementations\n        -->\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n        <revapi.skip>true</revapi.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>java21</id>\n      <activation>\n        <jdk>21</jdk>\n      </activation>\n      <properties>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- We need to use 1.8 as otherwise default methods are not picked up and so result in compile errors for\n             our EventExecutorGroup implementations\n        -->\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n        <revapi.skip>true</revapi.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>java20</id>\n      <activation>\n        <jdk>20</jdk>\n      </activation>\n      <properties>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- We need to use 1.8 as otherwise default methods are not picked up and so result in compile errors for\n             our EventExecutorGroup implementations\n        -->\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n        <revapi.skip>true</revapi.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>java19</id>\n      <activation>\n        <jdk>19</jdk>\n      </activation>\n      <properties>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- We need to use 1.8 as otherwise default methods are not picked up and so result in compile errors for\n             our EventExecutorGroup implementations\n        -->\n        <maven.compiler.source>1.8</maven.compiler.source>\n        <maven.compiler.target>1.8</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n        <revapi.skip>true</revapi.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>java18</id>\n      <activation>\n        <jdk>18</jdk>\n      </activation>\n      <properties>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- This is the minimum supported by Java12+ -->\n        <maven.compiler.source>1.7</maven.compiler.source>\n        <maven.compiler.target>1.7</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n        <revapi.skip>true</revapi.skip>\n      </properties>\n    </profile>\n    <profile>\n      <id>java17</id>\n      <activation>\n        <jdk>17</jdk>\n      </activation>\n      <properties>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- This is the minimum supported by Java12+ -->\n        <maven.compiler.source>1.7</maven.compiler.source>\n        <maven.compiler.target>1.7</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n      </properties>\n    </profile>\n\n    <!-- JDK16 -->\n    <profile>\n      <id>java16</id>\n      <activation>\n        <jdk>16</jdk>\n      </activation>\n      <properties>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- This is the minimum supported by Java12+ -->\n        <maven.compiler.source>1.7</maven.compiler.source>\n        <maven.compiler.target>1.7</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n      </properties>\n    </profile>\n\n    <!-- JDK15 -->\n    <profile>\n      <id>java15</id>\n      <activation>\n        <jdk>15</jdk>\n      </activation>\n      <properties>\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- This is the minimum supported by Java12+ -->\n        <maven.compiler.source>1.7</maven.compiler.source>\n        <maven.compiler.target>1.7</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n      </properties>\n    </profile>\n    <!-- JDK14 -->\n    <profile>\n      <id>java14</id>\n      <activation>\n        <jdk>14</jdk>\n      </activation>\n      <properties>\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- This is the minimum supported by Java12+ -->\n        <maven.compiler.source>1.7</maven.compiler.source>\n        <maven.compiler.target>1.7</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n      </properties>\n    </profile>\n    <!-- JDK13 -->\n    <profile>\n      <id>java13</id>\n      <activation>\n        <jdk>13</jdk>\n      </activation>\n      <properties>\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- This is the minimum supported by Java12+ -->\n        <maven.compiler.source>1.7</maven.compiler.source>\n        <maven.compiler.target>1.7</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n      </properties>\n    </profile>\n\n    <!-- JDK12 -->\n    <profile>\n      <id>java12</id>\n      <activation>\n        <jdk>12</jdk>\n      </activation>\n      <properties>\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- This is the minimum supported by Java12+ -->\n        <maven.compiler.source>1.7</maven.compiler.source>\n        <maven.compiler.target>1.7</maven.compiler.target>\n        <!-- pax-exam does not work on latest Java12 EA 22 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n      </properties>\n    </profile>\n\n    <!-- JDK11 -->\n    <profile>\n      <id>java11</id>\n      <activation>\n        <jdk>11</jdk>\n      </activation>\n      <properties>\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny ${argLine.java9.extras}</argLine.java9>\n        <!-- Not use alpn agent as Java11+ supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n        <!-- pax-exam does not work on latest Java11 build -->\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n      </properties>\n    </profile>\n\n    <!-- JDK10 -->\n    <profile>\n      <id>java10</id>\n      <activation>\n        <jdk>10</jdk>\n      </activation>\n      <properties>\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny --add-modules java.xml.bind ${argLine.java9.extras}</argLine.java9>\n        <!-- Not use alpn agent as Java10 supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- Needed because of https://issues.apache.org/jira/browse/MENFORCER-275 -->\n        <enforcer.plugin.version>3.0.0-M3</enforcer.plugin.version>\n        <!-- 1.4.x does not work in Java10+ -->\n        <jboss.marshalling.version>2.0.5.Final</jboss.marshalling.version>\n      </properties>\n    </profile>\n\n    <!-- JDK9 -->\n    <profile>\n      <id>java9</id>\n      <properties>\n        <argLine.java9.extras />\n        <!-- Export some stuff which is used during our tests -->\n        <argLine.java9>--illegal-access=deny --add-modules java.xml.bind ${argLine.java9.extras}</argLine.java9>\n        <!-- Not use alpn agent as Java9 supports alpn out of the box -->\n        <argLine.alpnAgent />\n        <!-- Skip as maven plugin not works with Java9 yet -->\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <!-- Needed because of https://issues.apache.org/jira/browse/MENFORCER-275 -->\n        <enforcer.plugin.version>3.0.0-M1</enforcer.plugin.version>\n      </properties>\n      <activation>\n        <jdk>9</jdk>\n      </activation>\n    </profile>\n\n    <profile>\n      <id>riscv64</id>\n      <activation>\n        <os>\n          <family>linux</family>\n          <arch>riscv64</arch>\n        </os>\n      </activation>\n      <properties>\n        <!--\n          We use a classifier that is not valid so we are at least be able to get access to the classes.\n          The loading of the native lib will fail and so the tests will be skipped.\n        -->\n        <corretto.classifier>linux-x86_64</corretto.classifier>\n      </properties>\n    </profile>\n\n    <profile>\n      <id>boringssl-mac-aarch64</id>\n      <activation>\n        <os>\n          <!--\n            Automatically active on mac with aarch64 as we only release static boringssl version of\n            netty-tcnative for it.\n          -->\n          <family>mac</family>\n          <arch>aarch64</arch>\n        </os>\n      </activation>\n      <properties>\n        <tcnative.artifactId>netty-tcnative-boringssl-static</tcnative.artifactId>\n        <tcnative.classifier />\n      </properties>\n    </profile>\n    <profile>\n      <id>boringssl-linux-aarch64</id>\n      <activation>\n        <os>\n          <!--\n           Automatically active on linux with aarch64 as we only release static boringssl version of\n           netty-tcnative for it.\n         -->\n          <family>linux</family>\n          <arch>aarch64</arch>\n        </os>\n      </activation>\n      <properties>\n        <tcnative.artifactId>netty-tcnative-boringssl-static</tcnative.artifactId>\n        <tcnative.classifier />\n      </properties>\n    </profile>\n    <profile>\n      <id>boringssl</id>\n      <properties>\n        <tcnative.artifactId>netty-tcnative-boringssl-static</tcnative.artifactId>\n        <tcnative.classifier />\n      </properties>\n    </profile>\n    <profile>\n      <id>windows</id>\n      <activation>\n        <os>\n          <family>windows</family>\n        </os>\n      </activation>\n      <properties>\n        <!--\n          We only release static boringssl version of netty-tcnative for windows.\n        -->\n        <tcnative.artifactId>netty-tcnative-boringssl-static</tcnative.artifactId>\n        <tcnative.classifier />\n        <!--\n          We use a classifier that is not valid so we are at least be able to get access to the classes.\n          The loading of the native lib will fail and so the tests will be skipped.\n         -->\n        <corretto.classifier>linux-x86_64</corretto.classifier>\n      </properties>\n    </profile>\n    <profile>\n      <id>boringssl-snapshot</id>\n      <properties>\n        <tcnative.artifactId>netty-tcnative-boringssl-static</tcnative.artifactId>\n        <tcnative.version>2.0.70.Final-SNAPSHOT</tcnative.version>\n        <tcnative.classifier>${os.detected.classifier}</tcnative.classifier>\n      </properties>\n    </profile>\n    <profile>\n      <id>leak</id>\n      <properties>\n        <argLine.leak>-Dio.netty.leakDetectionLevel=paranoid -Dio.netty.leakDetection.targetRecords=32</argLine.leak>\n      </properties>\n    </profile>\n    <profile>\n      <id>noPrintGC</id>\n      <properties>\n        <argLine.printGC>-D_</argLine.printGC>\n      </properties>\n    </profile>\n    <profile>\n      <id>noUnsafe</id>\n      <properties>\n        <argLine.noUnsafe>-Dio.netty.noUnsafe=true</argLine.noUnsafe>\n      </properties>\n    </profile>\n    <profile>\n      <id>jdk23DenyUnsafe</id>\n      <properties>\n        <argLine.noUnsafe>--sun-misc-unsafe-memory-access=deny</argLine.noUnsafe>\n      </properties>\n    </profile>\n    <profile>\n      <!-- Skip many checks for faster turn-around in local builds. -->\n      <id>fast</id>\n      <properties>\n        <forbiddenapis.skip>true</forbiddenapis.skip>\n        <checkstyle.skip>true</checkstyle.skip>\n        <japicmp.skip>true</japicmp.skip>\n        <revapi.skip>true</revapi.skip>\n        <xml.skip>true</xml.skip>\n        <skipShadingTestsuite>true</skipShadingTestsuite>\n        <skipDeploy>true</skipDeploy>\n        <skipTests>true</skipTests>\n        <skipOsgiTestsuite>true</skipOsgiTestsuite>\n        <skipAutobahnTestsuite>true</skipAutobahnTestsuite>\n        <skipHttp2Testsuite>true</skipHttp2Testsuite>\n      </properties>\n    </profile>\n    <profile>\n      <id>coverage</id>\n      <properties>\n        <argLine.coverage>${jacoco.argLine}</argLine.coverage>\n      </properties>\n      <build>\n        <plugins>\n          <plugin>\n            <groupId>org.jacoco</groupId>\n            <artifactId>jacoco-maven-plugin</artifactId>\n            <version>0.7.7.201606060606</version>\n            <executions>\n              <execution>\n                <id>jacoco-prepare-agent</id>\n                <goals>\n                  <goal>prepare-agent</goal>\n                </goals>\n                <configuration>\n                  <propertyName>jacoco.argLine</propertyName>\n                </configuration>\n              </execution>\n            </executions>\n          </plugin>\n        </plugins>\n      </build>\n    </profile>\n    <profile>\n      <id>jdk8</id>\n      <activation>\n        <jdk>[1.8,)</jdk>\n      </activation>\n      <properties>\n        <!-- Our Javadoc has poor enough quality to fail the build thanks to JDK8 javadoc which got more strict. -->\n        <maven.javadoc.failOnError>false</maven.javadoc.failOnError>\n      </properties>\n    </profile>\n    <profile>\n      <!--\n      This profile exists because either ALPN or NPN can exits on the class path at once, but not both.\n      The JDK version is typically used to distinguish which should be used but there is some overlap\n      where both could be used.  ALPN is the default and this profile is enabled with a -Dforcenpn=true arugument\n      -->\n      <id>forcenpn</id>\n      <activation>\n        <property>\n          <name>forcenpn</name>\n          <value>true</value>\n        </property>\n      </activation>\n      <properties>\n        <jetty.alpnAgent.option>forceNpn=true</jetty.alpnAgent.option>\n      </properties>\n    </profile>\n  </profiles>\n\n  <properties>\n    <maven.compiler.source>1.6</maven.compiler.source>\n    <maven.compiler.target>1.6</maven.compiler.target>\n    <netty.dev.tools.directory>${project.build.directory}/dev-tools</netty.dev.tools.directory>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n    <netty.build.version>31</netty.build.version>\n    <jboss.marshalling.version>1.4.11.Final</jboss.marshalling.version>\n    <jetty.alpnAgent.version>2.0.10</jetty.alpnAgent.version>\n    <jetty.alpnAgent.path>\"${settings.localRepository}\"/org/mortbay/jetty/alpn/jetty-alpn-agent/${jetty.alpnAgent.version}/jetty-alpn-agent-${jetty.alpnAgent.version}.jar</jetty.alpnAgent.path>\n    <argLine.common>\n      -server\n      -dsa -da -ea:io.netty...\n      -XX:+HeapDumpOnOutOfMemoryError\n    </argLine.common>\n    <argLine.jni>-D_</argLine.jni>\n    <!-- Default to ALPN. See forcenpn profile to force NPN -->\n    <jetty.alpnAgent.option/>\n    <argLine.alpnAgent>-javaagent:${jetty.alpnAgent.path}=${jetty.alpnAgent.option}</argLine.alpnAgent>\n    <argLine.leak>-D_</argLine.leak> <!-- Overridden when 'leak' profile is active -->\n    <argLine.noUnsafe>-D_</argLine.noUnsafe> <!-- Overridden when 'noUnsafe' profile is active -->\n    <argLine.coverage>-D_</argLine.coverage> <!-- Overridden when 'coverage' profile is active -->\n    <jacoco.argLine/>\n    <argLine.printGC>-XX:+PrintGCDetails</argLine.printGC>\n    <argLine.java9 /> <!-- Overridden when 'java9' profile is active -->\n    <argLine.javaProperties>-D_</argLine.javaProperties>\n    <!-- Configure the os-maven-plugin extension to expand the classifier on                  -->\n    <!-- Fedora-\"like\" systems. This is currently only used for the netty-tcnative dependency -->\n    <osmaven.version>1.7.1</osmaven.version>\n    <!-- keep in sync with PlatformDependent#ALLOWED_LINUX_OS_CLASSIFIERS -->\n    <os.detection.classifierWithLikes>fedora,suse,arch</os.detection.classifierWithLikes>\n    <tcnative.artifactId>netty-tcnative</tcnative.artifactId>\n    <!-- Keep in sync with bom/pom.xml -->\n    <tcnative.version>2.0.69.Final</tcnative.version>\n    <tcnative.classifier>${os.detected.classifier}</tcnative.classifier>\n    <conscrypt.groupId>org.conscrypt</conscrypt.groupId>\n    <conscrypt.artifactId>conscrypt-openjdk-uber</conscrypt.artifactId>\n    <conscrypt.version>2.5.2</conscrypt.version>\n    <conscrypt.classifier />\n    <corretto.version>2.4.1</corretto.version>\n    <!--\n      Don't use os.detected.classifier as it will also add the \"likes\" as configure above.\n      ${os.detected.name}-${os.detected.arch} is the same but without \"likes\".\n      See https://github.com/trustin/os-maven-plugin/blob/os-maven-plugin-1.7.1/README.md#property-osdetectedclassifier\n    -->\n    <corretto.classifier>${os.detected.name}-${os.detected.arch}</corretto.classifier>\n    <jni.classifier>${os.detected.name}-${os.detected.arch}</jni.classifier>\n    <logging.config>${project.basedir}/../common/src/test/resources/logback-test.xml</logging.config>\n    <logging.logLevel>debug</logging.logLevel>\n    <log4j2.version>2.17.2</log4j2.version>\n    <enforcer.plugin.version>3.0.0</enforcer.plugin.version>\n    <junit.version>5.9.0</junit.version>\n    <skipTests>false</skipTests>\n    <testJavaHome>${java.home}</testJavaHome>\n    <testJvm>${testJavaHome}/bin/java</testJvm>\n    <skipOsgiTestsuite>false</skipOsgiTestsuite>\n    <skipAutobahnTestsuite>false</skipAutobahnTestsuite>\n    <skipHttp2Testsuite>false</skipHttp2Testsuite>\n    <graalvm.version>19.3.6</graalvm.version>\n    <brotli4j.version>1.16.0</brotli4j.version>\n    <!-- By default skip native testsuite as it requires a custom environment with graalvm installed -->\n    <skipNativeImageTestsuite>true</skipNativeImageTestsuite>\n    <skipShadingTestsuite>false</skipShadingTestsuite>\n    <skipDeploy>false</skipDeploy>\n  </properties>\n\n  <modules>\n    <module>all</module>\n    <module>dev-tools</module>\n    <module>common</module>\n    <module>buffer</module>\n    <module>codec</module>\n    <module>codec-dns</module>\n    <module>codec-haproxy</module>\n    <module>codec-http</module>\n    <module>codec-http2</module>\n    <module>codec-memcache</module>\n    <module>codec-mqtt</module>\n    <module>codec-redis</module>\n    <module>codec-smtp</module>\n    <module>codec-socks</module>\n    <module>codec-stomp</module>\n    <module>codec-xml</module>\n    <module>resolver</module>\n    <module>resolver-dns</module>\n    <module>resolver-dns-classes-macos</module>\n    <module>resolver-dns-native-macos</module>\n    <module>transport</module>\n    <module>transport-native-unix-common-tests</module>\n    <module>transport-native-unix-common</module>\n    <module>transport-classes-epoll</module>\n    <module>transport-native-epoll</module>\n    <module>transport-classes-kqueue</module>\n    <module>transport-native-kqueue</module>\n    <module>transport-rxtx</module>\n    <module>transport-sctp</module>\n    <module>transport-udt</module>\n    <module>handler</module>\n    <module>handler-proxy</module>\n    <module>handler-ssl-ocsp</module>\n    <module>example</module>\n    <module>testsuite</module>\n    <module>testsuite-autobahn</module>\n    <module>testsuite-http2</module>\n    <module>testsuite-osgi</module>\n    <module>testsuite-shading</module>\n    <module>testsuite-native</module>\n    <module>testsuite-native-image</module>\n    <module>testsuite-native-image-client</module>\n    <module>testsuite-native-image-client-runtime-init</module>\n    <module>transport-blockhound-tests</module>\n    <module>microbench</module>\n    <module>bom</module>\n  </modules>\n\n  <dependencyManagement>\n    <dependencies>\n      <dependency>\n        <groupId>io.netty</groupId>\n        <artifactId>netty-jni-util</artifactId>\n        <version>0.0.9.Final</version>\n        <classifier>sources</classifier>\n        <optional>true</optional>\n      </dependency>\n\n      <dependency>\n        <groupId>${project.groupId}</groupId>\n        <artifactId>netty-dev-tools</artifactId>\n        <version>${project.version}</version>\n      </dependency>\n\n      <!-- Needed for java11 and later as javax.activation is not part of the JDK anymore -->\n      <dependency>\n        <groupId>com.sun.activation</groupId>\n        <artifactId>javax.activation</artifactId>\n        <version>1.2.0</version>\n      </dependency>\n\n      <!-- JBoss Marshalling - completely optional -->\n      <dependency>\n        <groupId>org.jboss.marshalling</groupId>\n        <artifactId>jboss-marshalling</artifactId>\n        <version>${jboss.marshalling.version}</version>\n        <scope>compile</scope>\n        <optional>true</optional>\n      </dependency>\n\n      <!-- SPDY and HTTP/2 - completely optional -->\n      <dependency>\n        <groupId>org.eclipse.jetty.npn</groupId>\n        <artifactId>npn-api</artifactId>\n        <version>1.1.1.v20141010</version>\n        <scope>provided</scope> <!-- Provided by npn-boot -->\n      </dependency>\n      <dependency>\n        <groupId>org.eclipse.jetty.alpn</groupId>\n        <artifactId>alpn-api</artifactId>\n        <version>1.1.2.v20150522</version>\n        <scope>provided</scope> <!-- Provided by alpn-boot -->\n      </dependency>\n\n      <!-- Google Protocol Buffers - completely optional -->\n      <dependency>\n        <groupId>com.google.protobuf</groupId>\n        <artifactId>protobuf-java</artifactId>\n        <version>2.6.1</version>\n      </dependency>\n      <dependency>\n        <groupId>com.google.protobuf.nano</groupId>\n        <artifactId>protobuf-javanano</artifactId>\n        <version>3.0.0-alpha-5</version>\n      </dependency>\n\n      <!-- Our own Tomcat Native fork - completely optional for the native lib, used for accelerating SSL with OpenSSL. -->\n      <dependency>\n        <groupId>${project.groupId}</groupId>\n        <artifactId>netty-tcnative-classes</artifactId>\n        <version>${tcnative.version}</version>\n        <scope>compile</scope>\n        <optional>true</optional>\n      </dependency>\n      <dependency>\n        <groupId>${project.groupId}</groupId>\n        <artifactId>${tcnative.artifactId}</artifactId>\n        <version>${tcnative.version}</version>\n        <classifier>${tcnative.classifier}</classifier>\n        <scope>runtime</scope>\n        <optional>true</optional>\n      </dependency>\n\n      <!-- Conscrypt - needed for running tests, used for accelerating SSL with OpenSSL. -->\n      <dependency>\n        <groupId>${conscrypt.groupId}</groupId>\n        <artifactId>${conscrypt.artifactId}</artifactId>\n        <classifier>${conscrypt.classifier}</classifier>\n        <version>${conscrypt.version}</version>\n        <scope>compile</scope>\n        <optional>true</optional>\n      </dependency>\n\n      <!-- ACCP - needed for running tests, used for accelerating SSL with OpenSSL. -->\n      <dependency>\n        <groupId>software.amazon.cryptools</groupId>\n        <artifactId>AmazonCorrettoCryptoProvider</artifactId>\n        <version>${corretto.version}</version>\n        <classifier>${corretto.classifier}</classifier>\n        <scope>test</scope>\n      </dependency>\n\n      <!--\n        Bouncy Castle - completely optional, only needed when:\n        - you generate a temporary self-signed certificate using SelfSignedCertificate, and\n        - you don't use the JDK which doesn't provide sun.security.x509 package.\n      -->\n      <dependency>\n        <groupId>org.bouncycastle</groupId>\n        <artifactId>bcpkix-jdk15on</artifactId>\n        <version>1.69</version>\n        <scope>compile</scope>\n        <optional>true</optional>\n      </dependency>\n\n      <!--\n        Completely optional and only needed for OCSP stapling to construct and\n        parse OCSP requests and responses.\n      -->\n      <dependency>\n        <groupId>org.bouncycastle</groupId>\n        <artifactId>bcprov-jdk15on</artifactId>\n        <version>1.69</version>\n        <scope>compile</scope>\n        <optional>true</optional>\n      </dependency>\n\n      <!--\n        Completely optional and only needed for ALPN.\n      -->\n      <dependency>\n        <groupId>org.bouncycastle</groupId>\n        <artifactId>bctls-jdk15on</artifactId>\n        <version>1.69</version>\n        <scope>compile</scope>\n        <optional>true</optional>\n      </dependency>\n\n      <dependency>\n        <groupId>com.fasterxml</groupId>\n        <artifactId>aalto-xml</artifactId>\n        <version>1.0.0</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.jcraft</groupId>\n        <artifactId>jzlib</artifactId>\n        <version>1.1.3</version>\n      </dependency>\n      <dependency>\n        <groupId>com.ning</groupId>\n        <artifactId>compress-lzf</artifactId>\n        <version>1.0.3</version>\n      </dependency>\n      <dependency>\n        <groupId>net.jpountz.lz4</groupId>\n        <artifactId>lz4</artifactId>\n        <version>1.3.0</version>\n      </dependency>\n      <dependency>\n        <groupId>com.github.jponge</groupId>\n        <artifactId>lzma-java</artifactId>\n        <version>1.3</version>\n      </dependency>\n      <dependency>\n        <groupId>com.github.luben</groupId>\n        <artifactId>zstd-jni</artifactId>\n        <version>1.5.5-11</version>\n        <optional>true</optional>\n      </dependency>\n      <dependency>\n        <groupId>com.aayushatharva.brotli4j</groupId>\n        <artifactId>brotli4j</artifactId>\n        <version>${brotli4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.aayushatharva.brotli4j</groupId>\n        <artifactId>native-linux-ppc64le</artifactId>\n        <version>${brotli4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.aayushatharva.brotli4j</groupId>\n        <artifactId>native-linux-x86_64</artifactId>\n        <version>${brotli4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.aayushatharva.brotli4j</groupId>\n        <artifactId>native-linux-aarch64</artifactId>\n        <version>${brotli4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.aayushatharva.brotli4j</groupId>\n        <artifactId>native-linux-riscv64</artifactId>\n        <version>${brotli4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.aayushatharva.brotli4j</groupId>\n        <artifactId>native-linux-armv7</artifactId>\n        <version>${brotli4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.aayushatharva.brotli4j</groupId>\n        <artifactId>native-osx-x86_64</artifactId>\n        <version>${brotli4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.aayushatharva.brotli4j</groupId>\n        <artifactId>native-osx-aarch64</artifactId>\n        <version>${brotli4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.aayushatharva.brotli4j</groupId>\n        <artifactId>native-windows-x86_64</artifactId>\n        <version>${brotli4j.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>com.aayushatharva.brotli4j</groupId>\n        <artifactId>native-windows-aarch64</artifactId>\n        <version>${brotli4j.version}</version>\n      </dependency>\n\n      <!-- Java concurrency tools for the JVM -->\n      <dependency>\n        <groupId>org.jctools</groupId>\n        <artifactId>jctools-core</artifactId>\n        <version>4.0.5</version>\n      </dependency>\n\n      <!-- Annotations for IDE integration and analysis -->\n      <dependency>\n        <groupId>org.jetbrains</groupId>\n        <artifactId>annotations-java5</artifactId>\n        <version>23.0.0</version>\n        <scope>provided</scope>\n      </dependency>\n\n      <dependency>\n        <groupId>org.rxtx</groupId>\n        <artifactId>rxtx</artifactId>\n        <version>2.1.7</version>\n      </dependency>\n\n      <dependency>\n        <groupId>com.barchart.udt</groupId>\n        <artifactId>barchart-udt-bundle</artifactId>\n        <version>2.3.0</version>\n      </dependency>\n\n      <dependency>\n        <groupId>javax.servlet</groupId>\n        <artifactId>servlet-api</artifactId>\n        <version>2.5</version>\n      </dependency>\n\n      <dependency>\n        <groupId>org.slf4j</groupId>\n        <artifactId>slf4j-api</artifactId>\n        <version>1.7.30</version>\n      </dependency>\n      <dependency>\n        <groupId>commons-logging</groupId>\n        <artifactId>commons-logging</artifactId>\n        <version>1.2</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.logging.log4j</groupId>\n        <artifactId>log4j-api</artifactId>\n        <version>${log4j2.version}</version>\n      </dependency>\n      <dependency>\n        <groupId>org.apache.logging.log4j</groupId>\n        <artifactId>log4j-1.2-api</artifactId>\n        <version>${log4j2.version}</version>\n        <exclusions>\n          <exclusion>\n            <artifactId>mail</artifactId>\n            <groupId>javax.mail</groupId>\n          </exclusion>\n          <exclusion>\n            <artifactId>jms</artifactId>\n            <groupId>javax.jms</groupId>\n          </exclusion>\n          <exclusion>\n            <artifactId>jmxtools</artifactId>\n            <groupId>com.sun.jdmk</groupId>\n          </exclusion>\n          <exclusion>\n            <artifactId>jmxri</artifactId>\n            <groupId>com.sun.jmx</groupId>\n          </exclusion>\n        </exclusions>\n        <optional>true</optional>\n      </dependency>\n\n      <!-- Metrics providers -->\n      <dependency>\n        <groupId>com.yammer.metrics</groupId>\n        <artifactId>metrics-core</artifactId>\n        <version>2.2.0</version>\n      </dependency>\n\n      <!-- Common test dependencies -->\n      <dependency>\n        <groupId>org.junit.jupiter</groupId>\n        <artifactId>junit-jupiter-api</artifactId>\n        <version>${junit.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.junit.jupiter</groupId>\n        <artifactId>junit-jupiter-engine</artifactId>\n        <version>${junit.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.junit.jupiter</groupId>\n        <artifactId>junit-jupiter-params</artifactId>\n        <version>${junit.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>${project.groupId}</groupId>\n        <artifactId>netty-build-common</artifactId>\n        <version>${netty.build.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.hamcrest</groupId>\n        <artifactId>hamcrest-library</artifactId>\n        <version>1.3</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.assertj</groupId>\n        <artifactId>assertj-core</artifactId>\n        <version>3.18.0</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.mockito</groupId>\n        <artifactId>mockito-core</artifactId>\n        <version>2.18.3</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.reflections</groupId>\n        <artifactId>reflections</artifactId>\n        <version>0.10.2</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>ch.qos.logback</groupId>\n        <artifactId>logback-classic</artifactId>\n        <version>1.2.13</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>io.github.artsok</groupId>\n        <artifactId>rerunner-jupiter</artifactId>\n        <version>2.1.6</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- Test dependencies for jboss marshalling encoder/decoder -->\n      <dependency>\n        <groupId>org.jboss.marshalling</groupId>\n        <artifactId>jboss-marshalling-serial</artifactId>\n        <version>${jboss.marshalling.version}</version>\n        <scope>test</scope>\n      </dependency>\n      <dependency>\n        <groupId>org.jboss.marshalling</groupId>\n        <artifactId>jboss-marshalling-river</artifactId>\n        <version>${jboss.marshalling.version}</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- Test dependencies for microbench -->\n      <dependency>\n        <groupId>com.google.caliper</groupId>\n        <artifactId>caliper</artifactId>\n        <version>0.5-rc1</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- Test dependency for Bzip2 compression codec -->\n      <dependency>\n        <groupId>org.apache.commons</groupId>\n        <artifactId>commons-compress</artifactId>\n        <version>1.26.0</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- Test dependency for Brotli compression codec -->\n      <dependency>\n        <groupId>commons-io</groupId>\n        <artifactId>commons-io</artifactId>\n        <version>2.14.0</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- Test dependency used by http/2 hpack -->\n      <dependency>\n        <groupId>com.google.code.gson</groupId>\n        <artifactId>gson</artifactId>\n        <version>2.8.9</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- Test suite dependency for generating a compressed heap dump file -->\n      <dependency>\n        <groupId>org.tukaani</groupId>\n        <artifactId>xz</artifactId>\n        <version>1.5</version>\n      </dependency>\n\n      <!-- Test dependency for resolver-dns -->\n      <dependency>\n        <groupId>org.apache.directory.server</groupId>\n        <artifactId>apacheds-protocol-dns</artifactId>\n        <version>1.5.7</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- Test dependency for log4j2 tests -->\n      <dependency>\n        <groupId>org.apache.logging.log4j</groupId>\n        <artifactId>log4j-core</artifactId>\n        <version>${log4j2.version}</version>\n        <scope>test</scope>\n      </dependency>\n\n      <!-- BlockHound integration -->\n      <dependency>\n        <groupId>io.projectreactor.tools</groupId>\n        <artifactId>blockhound</artifactId>\n        <version>1.0.10.RELEASE</version>\n      </dependency>\n    </dependencies>\n  </dependencyManagement>\n\n  <dependencies>\n    <!-- Testing frameworks and related dependencies -->\n    <dependency>\n      <groupId>org.junit.jupiter</groupId>\n      <artifactId>junit-jupiter-api</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.jupiter</groupId>\n      <artifactId>junit-jupiter-engine</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.junit.jupiter</groupId>\n      <artifactId>junit-jupiter-params</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>${project.groupId}</groupId>\n      <artifactId>netty-build-common</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.hamcrest</groupId>\n      <artifactId>hamcrest-library</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.assertj</groupId>\n      <artifactId>assertj-core</artifactId>\n      <scope>test</scope>\n    </dependency>\n    <dependency>\n      <groupId>ch.qos.logback</groupId>\n      <artifactId>logback-classic</artifactId>\n      <scope>test</scope>\n    </dependency>\n  </dependencies>\n\n  <build>\n    <extensions>\n      <extension>\n        <groupId>kr.motd.maven</groupId>\n        <artifactId>os-maven-plugin</artifactId>\n        <version>${osmaven.version}</version>\n      </extension>\n    </extensions>\n\n    <plugins>\n      <plugin>\n        <groupId>org.revapi</groupId>\n        <artifactId>revapi-maven-plugin</artifactId>\n        <version>0.14.6</version>\n        <dependencies>\n          <dependency>\n            <groupId>org.revapi</groupId>\n            <artifactId>revapi-java</artifactId>\n            <version>0.26.1</version>\n          </dependency>\n        </dependencies>\n        <configuration>\n          <analysisConfiguration>\n            <revapi.filter>\n              <elements>\n                <exclude>\n                  <item>\n                    <matcher>java-package</matcher>\n                    <match>/.*\\.internal\\..*/</match>\n                  </item>\n                  <item>\n                    <matcher>java-package</matcher>\n                    <match>/org\\.openjdk\\.jmh\\..*/</match>\n                  </item>\n                  <item>\n                    <matcher>java</matcher>\n                    <match>@io.netty.util.internal.UnstableApi ^*;</match>\n                  </item>\n                </exclude>\n              </elements>\n              <annotated>\n                <exclude>\n                  <item>@io.netty.util.internal.UnstableApi</item>\n                </exclude>\n              </annotated>\n            </revapi.filter>\n            <revapi.differences>\n              <differences>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.field.constantValueChanged</code>\n                  <classQualifiedName>io.netty.handler.codec.http2.Http2CodecUtil</classQualifiedName>\n                  <field>CONTINUATION_FRAME_HEADER_LENGTH</field>\n                  <oldValue>10</oldValue>\n                  <newValue>9</newValue>\n                  <justification>Padding was removed from CONTINUATION frame in http2-spec.</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.missing.oldClass</code> <!-- Missing in prior Netty versions -->\n                  <old>missing-class org.slf4j.Logger</old>\n                  <new>missing-class org.slf4j.Logger</new>\n                  <justification>The com.barchart.udt library exposes this class in their API, but slf4j is an optional dependency to Netty.</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.missing.newClass</code> <!-- Missing in this Netty version -->\n                  <old>missing-class org.slf4j.Logger</old>\n                  <new>missing-class org.slf4j.Logger</new>\n                  <justification>The com.barchart.udt library exposes this class in their API, but slf4j is an optional dependency to Netty.</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.class.externalClassExposedInAPI</code>\n                  <regex>true</regex>\n                  <package>io\\.netty\\..*</package>\n                  <justification>They're not \"external classes\" if they're from a Netty package.</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.field.removed</code>\n                  <classQualifiedName>io.netty.util.internal.InternalThreadLocalMap</classQualifiedName>\n                  <justification>Ignore cache padding.</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.method.removed</code>\n                  <old>method java.lang.String io.netty.testsuite.util.TestUtils::testMethodName(org.junit.rules.TestName)</old>\n                  <justification>This should be test-only, and we're removing support for JUnit 4.</justification>\n                </item>\n                <!-- Necessary changes to fix #12627 -->\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.method.finalMethodAddedToNonFinalClass</code>\n                  <new>method void io.netty.util.AbstractReferenceCounted::setRefCnt(int) @ io.netty.handler.codec.http.multipart.MixedAttribute</new>\n                  <justification>Acceptable incompatibility for required change</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.method.finalMethodAddedToNonFinalClass</code>\n                  <new>method void io.netty.util.AbstractReferenceCounted::setRefCnt(int) @ io.netty.handler.codec.http.multipart.MixedFileUpload</new>\n                  <justification>Acceptable incompatibility for required change</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.class.nonFinalClassInheritsFromNewClass</code>\n                  <old>class io.netty.handler.codec.http.multipart.MixedFileUpload</old>\n                  <new>class io.netty.handler.codec.http.multipart.MixedFileUpload</new>\n                  <superClass>io.netty.handler.codec.http.multipart.AbstractMixedHttpData&lt;io.netty.handler.codec.http.multipart.FileUpload&gt;</superClass>\n                  <justification>Acceptable incompatibility for required change</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.class.nonFinalClassInheritsFromNewClass</code>\n                  <old>class io.netty.handler.codec.http.multipart.MixedAttribute</old>\n                  <new>class io.netty.handler.codec.http.multipart.MixedAttribute</new>\n                  <superClass>io.netty.handler.codec.http.multipart.AbstractMixedHttpData&lt;io.netty.handler.codec.http.multipart.Attribute&gt;</superClass>\n                  <justification>Acceptable incompatibility for required change</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.annotation.removed</code>\n                  <annotation>@io.netty.channel.ChannelHandlerMask.Skip</annotation>\n                  <justification>No change in compatibility</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.method.finalMethodAddedToNonFinalClass</code>\n                  <new>method io.netty.channel.unix.DomainSocketAddress io.netty.channel.unix.Socket::localDomainSocketAddress()</new>\n                  <justification>Acceptable incompatibility for required change</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.method.finalMethodAddedToNonFinalClass</code>\n                  <new>method io.netty.channel.unix.DomainSocketAddress io.netty.channel.unix.Socket::remoteDomainSocketAddress()</new>\n                  <justification>Acceptable incompatibility for required change</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.method.returnTypeErasureChanged</code>\n                  <old>method B io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder&lt;T extends io.netty.handler.codec.http2.Http2ConnectionHandler, B extends io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder&lt;T, B&gt;&gt;::decoderEnforceMaxConsecutiveEmptyDataFrames(int) @ io.netty.handler.codec.http2.Http2ConnectionHandlerBuilder</old>\n                  <new>method io.netty.handler.codec.http2.Http2ConnectionHandlerBuilder io.netty.handler.codec.http2.Http2ConnectionHandlerBuilder::decoderEnforceMaxConsecutiveEmptyDataFrames(int)</new>\n                  <justification>Acceptable incompatibility for required change, because the method was not previously exposed; protected visiblity in super-class, not made public in final sub-class until now</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.method.returnTypeErasureChanged</code>\n                  <old>method B io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder&lt;T extends io.netty.handler.codec.http2.Http2ConnectionHandler, B extends io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder&lt;T, B&gt;&gt;::decoderEnforceMaxRstFramesPerWindow(int, int) @ io.netty.handler.codec.http2.Http2ConnectionHandlerBuilder</old>\n                  <new>method io.netty.handler.codec.http2.Http2ConnectionHandlerBuilder io.netty.handler.codec.http2.Http2ConnectionHandlerBuilder::decoderEnforceMaxRstFramesPerWindow(int, int)</new>\n                  <justification>Acceptable incompatibility for required change, because the method was not previously exposed; protected visiblity in super-class, not made public in final sub-class until now</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.method.returnTypeErasureChanged</code>\n                  <old>method B io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder&lt;T extends io.netty.handler.codec.http2.Http2ConnectionHandler, B extends io.netty.handler.codec.http2.AbstractHttp2ConnectionHandlerBuilder&lt;T, B&gt;&gt;::encoderIgnoreMaxHeaderListSize(boolean) @ io.netty.handler.codec.http2.HttpToHttp2ConnectionHandlerBuilder</old>\n                  <new>method io.netty.handler.codec.http2.HttpToHttp2ConnectionHandlerBuilder io.netty.handler.codec.http2.HttpToHttp2ConnectionHandlerBuilder::encoderIgnoreMaxHeaderListSize(boolean)</new>\n                  <justification>Acceptable incompatibility for required change, because the method was not previously exposed; protected visiblity in super-class, not made public in final sub-class until now</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.method.removed</code>\n                  <old>method io.netty.channel.ChannelFactory&lt;&amp; extends io.netty.channel.socket.DatagramChannel&gt; io.netty.resolver.dns.DnsNameResolverBuilder::channelFactory()</old>\n                  <justification>Protected methods of a final class.</justification>\n                </item>\n                <item>\n                  <ignore>true</ignore>\n                  <code>java.method.returnTypeChanged</code>\n                  <old>method io.netty.channel.socket.ServerSocketChannel io.netty.channel.socket.nio.NioDomainSocketChannel::parent()</old>\n                  <new>method io.netty.channel.ServerChannel io.netty.channel.socket.nio.NioDomainSocketChannel::parent()</new>\n                  <justification>Old return type made no sense, the parent channel is a NioServerDomainSocketChannel which does not implement ServerSocketChannel. The method always threw a ClassCastException (except for null).</justification>\n                </item>\n              </differences>\n            </revapi.differences>\n          </analysisConfiguration>\n        </configuration>\n        <executions>\n          <execution>\n            <id>api-check</id>\n            <goals>\n              <goal>check</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <groupId>com.github.siom79.japicmp</groupId>\n        <artifactId>japicmp-maven-plugin</artifactId>\n        <version>0.21.0</version>\n        <configuration>\n          <parameter>\n            <ignoreMissingOldVersion>true</ignoreMissingOldVersion>\n            <breakBuildOnBinaryIncompatibleModifications>true</breakBuildOnBinaryIncompatibleModifications>\n            <breakBuildOnSourceIncompatibleModifications>true</breakBuildOnSourceIncompatibleModifications>\n            <oldVersionPattern>\\d+\\.\\d+\\.\\d+\\.Final</oldVersionPattern>\n            <ignoreMissingClassesByRegularExpressions>\n              <!-- ignore everything which is not part of netty itself as the plugin can not handle optional dependencies -->\n              <ignoreMissingClassesByRegularExpression>^(?!io\\.netty\\.).*</ignoreMissingClassesByRegularExpression>\n              <ignoreMissingClassesByRegularExpression>^io\\.netty\\.internal\\.tcnative\\..*</ignoreMissingClassesByRegularExpression>\n            </ignoreMissingClassesByRegularExpressions>\n            <excludes>\n              <exclude>@io.netty.util.internal.UnstableApi</exclude>\n              <exclude>io.netty.util.internal.shaded</exclude>\n              <exclude>io.netty.buffer.AdaptivePoolingAllocator$ChunkAllocator</exclude>\n              <exclude>io.netty.channel.socket.nio.NioDomainSocketChannel#parent()</exclude>\n            </excludes>\n            <overrideCompatibilityChangeParameters>\n              <overrideCompatibilityChangeParameter>\n                <compatibilityChange>FIELD_REMOVED</compatibilityChange>\n                <sourceCompatible>true</sourceCompatible>\n                <binaryCompatible>true</binaryCompatible>\n                <semanticVersionLevel>PATCH</semanticVersionLevel>\n              </overrideCompatibilityChangeParameter>\n            </overrideCompatibilityChangeParameters>\n          </parameter>\n        </configuration>\n        <executions>\n          <execution>\n            <phase>verify</phase>\n            <goals>\n              <goal>cmp</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <artifactId>maven-enforcer-plugin</artifactId>\n        <version>${enforcer.plugin.version}</version>\n        <executions>\n          <execution>\n            <id>enforce-tools</id>\n            <goals>\n              <goal>enforce</goal>\n            </goals>\n            <configuration>\n              <rules>\n                <requireJavaVersion>\n                  <!-- Enforce JDK 1.8+ for compilation. -->\n                  <!-- This is needed because of java.util.zip.Deflater and NIO UDP multicast. -->\n                  <version>[1.8.0,)</version>\n                </requireJavaVersion>\n                <requireMavenVersion>\n                  <version>[3.1.1,)</version>\n                </requireMavenVersion>\n                <requireProperty>\n                  <regexMessage>\n\t\t     x86_64/AARCH64/RISCV64/PPCLE64/s390x_64/loongarch64 JDK must be used.\n                  </regexMessage>\n                  <property>os.detected.arch</property>\n                  <regex>^(x86_64|aarch_64|riscv64|ppcle_64|s390_64|loongarch_64)$</regex>\n                </requireProperty>\n              </rules>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <artifactId>maven-compiler-plugin</artifactId>\n        <version>3.8.0</version>\n        <configuration>\n          <compilerVersion>1.8</compilerVersion>\n          <fork>true</fork>\n          <source>${maven.compiler.source}</source>\n          <target>${maven.compiler.target}</target>\n          <debug>true</debug>\n          <optimize>true</optimize>\n          <showDeprecation>true</showDeprecation>\n          <showWarnings>true</showWarnings>\n          <compilerArgument>-Xlint:-options</compilerArgument>\n          <!-- XXX: maven-release-plugin complains - MRELEASE-715 -->\n          <!--\n          <compilerArguments>\n            <Xlint:-options />\n            <Xlint:unchecked />\n            <Xlint:deprecation />\n          </compilerArguments>\n          -->\n          <meminitial>256m</meminitial>\n          <maxmem>1024m</maxmem>\n          <excludes>\n            <exclude>**/package-info.java</exclude>\n          </excludes>\n        </configuration>\n      </plugin>\n      <plugin>\n        <!-- ensure that only methods available in java 1.6 can\n             be used even when compiling with java 1.7+ -->\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>animal-sniffer-maven-plugin</artifactId>\n        <version>1.16</version>\n        <configuration>\n          <signature>\n            <groupId>org.codehaus.mojo.signature</groupId>\n            <artifactId>java16</artifactId>\n            <version>1.1</version>\n          </signature>\n          <ignores>\n            <ignore>java.nio.ByteBuffer</ignore>\n          </ignores>\n          <annotations>\n            <annotation>io.netty.util.internal.SuppressJava6Requirement</annotation>\n          </annotations>\n        </configuration>\n        <executions>\n          <execution>\n            <phase>process-classes</phase>\n            <goals>\n              <goal>check</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <artifactId>maven-checkstyle-plugin</artifactId>\n        <version>3.1.0</version>\n        <executions>\n          <execution>\n            <id>check-style</id>\n            <goals>\n              <goal>check</goal>\n            </goals>\n            <phase>validate</phase>\n            <configuration>\n              <consoleOutput>true</consoleOutput>\n              <logViolationsToConsole>true</logViolationsToConsole>\n              <failsOnError>true</failsOnError>\n              <failOnViolation>true</failOnViolation>\n              <configLocation>io/netty/checkstyle.xml</configLocation>\n              <sourceDirectories>\n                <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>\n                <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>\n              </sourceDirectories>\n            </configuration>\n          </execution>\n          <execution>\n            <id>nohttp-checkstyle-validation</id>\n            <phase>validate</phase>\n            <configuration>\n              <!-- skip>false</skip -->\n              <configLocation>nohttp-checkstyle.xml</configLocation>\n              <suppressionsLocation>nohttp-checkstyle-suppressions.xml</suppressionsLocation>\n              <!-- propertyExpansion>main.basedir=${main.basedir}</propertyExpansion -->\n              <encoding>UTF-8</encoding>\n              <sourceDirectories>${basedir}</sourceDirectories>\n              <includes>**/*</includes>\n              <excludes>nohttp-checkstyle-suppressions.xml,**/.git/**/*,**/.idea/**/*,**/target/**/,**/.flattened-pom.xml,**/*.class</excludes>\n            </configuration>\n            <goals>\n              <goal>check</goal>\n            </goals>\n            <inherited>false</inherited>\n          </execution>\n        </executions>\n        <dependencies>\n          <dependency>\n            <groupId>com.puppycrawl.tools</groupId>\n            <artifactId>checkstyle</artifactId>\n            <version>8.29</version>\n          </dependency>\n          <dependency>\n            <groupId>${project.groupId}</groupId>\n            <artifactId>netty-build-common</artifactId>\n            <version>${netty.build.version}</version>\n          </dependency>\n          <dependency>\n            <groupId>io.spring.nohttp</groupId>\n            <artifactId>nohttp-checkstyle</artifactId>\n            <version>0.0.5.RELEASE</version>\n          </dependency>\n        </dependencies>\n      </plugin>\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>xml-maven-plugin</artifactId>\n        <version>1.0.1</version>\n        <executions>\n          <execution>\n            <id>check-style</id>\n            <goals>\n              <goal>check-format</goal>\n            </goals>\n            <phase>validate</phase>\n          </execution>\n        </executions>\n        <configuration>\n          <formatFileSets>\n            <formatFileSet>\n              <directory>${project.basedir}</directory>\n              <includes>\n                <include>**/pom.xml</include>\n              </includes>\n              <excludes>\n                <exclude>**/target/**</exclude>\n              </excludes>\n            </formatFileSet>\n          </formatFileSets>\n          <useDefaultFormatFileSet>false</useDefaultFormatFileSet>\n        </configuration>\n      </plugin>\n      <!-- Download the npn-boot.jar in advance to add it to the boot classpath. -->\n      <plugin>\n        <artifactId>maven-dependency-plugin</artifactId>\n        <executions>\n          <execution>\n            <id>get-jetty-alpn-agent</id>\n            <phase>validate</phase>\n            <goals>\n              <goal>get</goal>\n            </goals>\n            <configuration>\n              <groupId>org.mortbay.jetty.alpn</groupId>\n              <artifactId>jetty-alpn-agent</artifactId>\n              <version>${jetty.alpnAgent.version}</version>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <artifactId>maven-surefire-plugin</artifactId>\n        <configuration>\n          <includes>\n            <include>**/*Test*.java</include>\n            <include>**/*Benchmark*.java</include>\n          </includes>\n          <excludes>\n            <exclude>**/Abstract*</exclude>\n            <exclude>**/*TestUtil*</exclude>\n          </excludes>\n          <runOrder>random</runOrder>\n          <systemPropertyVariables>\n            <logback.configurationFile>${logging.config}</logback.configurationFile>\n            <logLevel>${logging.logLevel}</logLevel>\n            <!-- Used by ChannelHandlerMetadataUtil to create the recommended directory layout for native-image metadata -->\n            <nativeImage.handlerMetadataGroupId>${project.groupId}</nativeImage.handlerMetadataGroupId>\n            <nativeimage.handlerMetadataArtifactId>${project.artifactId}</nativeimage.handlerMetadataArtifactId>\n          </systemPropertyVariables>\n          <argLine>${argLine.common} ${argLine.printGC} ${argLine.alpnAgent} ${argLine.leak} ${argLine.coverage} ${argLine.noUnsafe} ${argLine.jni} ${argLine.java9} ${argLine.javaProperties} -Dio.netty.bootstrap.extensions=serviceload</argLine>\n          <properties>\n            <property>\n              <name>listener</name>\n              <value>io.netty.build.junit.TimedOutTestsListener</value>\n            </property>\n          </properties>\n          <skipTests>${skipTests}</skipTests>\n          <jvm>${testJvm}</jvm>\n           <!-- Ensure the whole stacktrace is preserved when an exception is thrown. See https://issues.apache.org/jira/browse/SUREFIRE-1457 -->\n          <trimStackTrace>false</trimStackTrace>\n        </configuration>\n      </plugin>\n      <!-- always produce osgi bundles -->\n      <plugin>\n        <groupId>org.apache.felix</groupId>\n        <artifactId>maven-bundle-plugin</artifactId>\n        <version>5.1.8</version>\n        <executions>\n          <execution>\n            <id>generate-manifest</id>\n            <phase>process-classes</phase>\n            <goals>\n              <goal>manifest</goal>\n            </goals>\n            <configuration>\n              <supportedProjectTypes>\n                <supportedProjectType>jar</supportedProjectType>\n                <supportedProjectType>bundle</supportedProjectType>\n              </supportedProjectTypes>\n              <instructions>\n                <Export-Package>${project.groupId}.*</Export-Package>\n                <!-- enforce JVM vendor package as optional -->\n                <Import-Package>sun.net.dns.*;resolution:=optional,sun.misc.*;resolution:=optional,sun.nio.ch;resolution:=optional,sun.security.*;resolution:=optional,org.eclipse.jetty.npn;version=\"[1,2)\";resolution:=optional,org.eclipse.jetty.alpn;version=\"[1,2)\";resolution:=optional,org.bouncycastle.jcajce.provider;version=\"[1.0,2)\";resolution:=optional,*</Import-Package>\n                <!-- override \"internal\" private package convention -->\n                <Private-Package>!*</Private-Package>\n              </instructions>\n            </configuration>\n          </execution>\n        </executions>\n      </plugin>\n\n      <plugin>\n        <groupId>org.codehaus.mojo</groupId>\n        <artifactId>build-helper-maven-plugin</artifactId>\n        <version>1.10</version>\n        <executions>\n          <execution>\n            <id>parse-version</id>\n            <goals>\n              <goal>parse-version</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n\n      <plugin>\n        <artifactId>maven-source-plugin</artifactId>\n        <version>3.2.0</version>\n        <!-- Eclipse-related OSGi manifests\n             See https://github.com/netty/netty/issues/3886\n             More information: https://rajakannappan.blogspot.ie/2010/03/automating-eclipse-source-bundle.html -->\n        <configuration>\n          <archive>\n            <manifestEntries>\n              <Bundle-ManifestVersion>2</Bundle-ManifestVersion>\n              <Bundle-Name>${project.name}</Bundle-Name>\n              <Bundle-SymbolicName>${project.groupId}.${project.artifactId}.source</Bundle-SymbolicName>\n              <Bundle-Vendor>${project.organization.name}</Bundle-Vendor>\n              <Bundle-Version>${parsedVersion.osgiVersion}</Bundle-Version>\n              <Eclipse-SourceBundle>${project.groupId}.${project.artifactId};version=\"${parsedVersion.osgiVersion}\";roots:=\".\"</Eclipse-SourceBundle>\n            </manifestEntries>\n          </archive>\n        </configuration>\n\n        <executions>\n          <execution>\n            <id>attach-sources</id>\n            <phase>prepare-package</phase>\n            <goals>\n              <goal>jar-no-fork</goal>\n            </goals>\n          </execution>\n          <execution>\n            <id>attach-test-sources</id>\n            <phase>prepare-package</phase>\n            <goals>\n              <goal>test-jar-no-fork</goal>\n            </goals>\n          </execution>\n        </executions>\n      </plugin>\n      <plugin>\n        <artifactId>maven-javadoc-plugin</artifactId>\n        <version>2.10.4</version>\n        <configuration>\n          <detectOfflineLinks>false</detectOfflineLinks>\n          <breakiterator>true</breakiterator>\n          <version>false</version>\n          <author>false</author>\n          <keywords>true</keywords>\n        </configuration>\n      </plugin>\n      <plugin>\n        <artifactId>maven-deploy-plugin</artifactId>\n        <version>2.8.2</version>\n        <configuration>\n          <retryFailedDeploymentCount>10</retryFailedDeploymentCount>\n          <skip>${skipDeploy}</skip>\n        </configuration>\n      </plugin>\n      <plugin>\n        <artifactId>maven-release-plugin</artifactId>\n        <!-- Downgrade to 2.4.1 if release fails -->\n        <version>2.5.3</version>\n        <configuration>\n          <useReleaseProfile>false</useReleaseProfile>\n          <arguments>-P restricted-release,sonatype-oss-release,full</arguments>\n          <autoVersionSubmodules>true</autoVersionSubmodules>\n          <allowTimestampedSnapshots>false</allowTimestampedSnapshots>\n          <tagNameFormat>netty-@{project.version}</tagNameFormat>\n        </configuration>\n        <dependencies>\n          <dependency>\n            <groupId>org.apache.maven.scm</groupId>\n            <artifactId>maven-scm-api</artifactId>\n            <version>1.9.4</version>\n          </dependency>\n          <dependency>\n            <groupId>org.apache.maven.scm</groupId>\n            <artifactId>maven-scm-provider-gitexe</artifactId>\n            <version>1.9.4</version>\n          </dependency>\n        </dependencies>\n      </plugin>\n\n      <!-- Ensure to put maven-antrun-plugin at the end of the plugin list\n           so that they are run lastly in the same phase. -->\n      <plugin>\n        <artifactId>maven-antrun-plugin</artifactId>\n        <executions>\n          <!-- Generate the version properties for all artifacts. -->\n          <execution>\n            <id>write-version-properties</id>\n            <phase>initialize</phase>\n            <goals>\n              <goal>run</goal>\n            </goals>\n            <configuration>\n              <target>\n                <taskdef resource=\"net/sf/antcontrib/antlib.xml\" />\n\n                <!-- Get the information about the latest commit -->\n                <exec executable=\"git\" outputproperty=\"gitOutput.lastCommit\" resultproperty=\"gitExitCode.lastCommit\" failonerror=\"false\" failifexecutionfails=\"false\">\n                  <arg value=\"log\" />\n                  <arg value=\"-1\" />\n                  <arg value=\"--format=format:%h %H %cd\" />\n                  <arg value=\"--date=iso\" />\n                </exec>\n                <propertyregex property=\"shortCommitHash\" input=\"${gitOutput.lastCommit}\" regexp=\"^([0-9a-f]+) .*$\" select=\"\\1\" casesensitive=\"true\" defaultValue=\"0\" />\n                <propertyregex property=\"longCommitHash\" input=\"${gitOutput.lastCommit}\" regexp=\"^[0-9a-f]+ ([0-9a-f]{40}) .*$\" select=\"\\1\" casesensitive=\"true\" defaultValue=\"0000000000000000000000000000000000000000\" />\n                <propertyregex property=\"commitDate\" input=\"${gitOutput.lastCommit}\" regexp=\"^[0-9a-f]+ [0-9a-f]{40} (.*)$\" select=\"\\1\" casesensitive=\"true\" defaultValue=\"1970-01-01 00:00:00 +0000\" />\n\n                <!-- Get the information abount whether the repository is clean or dirty -->\n                <exec executable=\"git\" outputproperty=\"gitOutput.repoStatus\" resultproperty=\"gitExitCode.repoStatus\" failonerror=\"false\" failifexecutionfails=\"false\">\n                  <arg value=\"status\" />\n                  <arg value=\"--porcelain\" />\n                </exec>\n                <if>\n                  <equals arg2=\"0\" arg1=\"${gitExitCode.repoStatus}\" />\n                  <then>\n                    <if>\n                      <equals arg2=\"\" arg1=\"${gitOutput.repoStatus}\" />\n                      <then>\n                        <property name=\"repoStatus\" value=\"clean\" />\n                      </then>\n                      <else>\n                        <property name=\"repoStatus\" value=\"dirty\" />\n                      </else>\n                    </if>\n                  </then>\n                  <else>\n                    <property name=\"repoStatus\" value=\"unknown\" />\n                  </else>\n                </if>\n\n                <!-- Print the obtained commit information. -->\n                <echo>Current commit: ${shortCommitHash} on ${commitDate}</echo>\n\n                <!-- Generate the .properties file. -->\n                <!--\n                <property name=\"metaInfDir\" value=\"${project.basedir}/src/main/resources/META-INF\" />\n                -->\n                <property name=\"metaInfDir\" value=\"${project.build.outputDirectory}/META-INF\" />\n                <property name=\"versionPropFile\" value=\"${metaInfDir}/${project.groupId}.versions.properties\" />\n                <mkdir dir=\"${metaInfDir}\" />\n                <delete file=\"${versionPropFile}\" quiet=\"true\" />\n\n                <propertyfile file=\"${versionPropFile}\" comment=\"Generated by netty-parent/pom.xml\">\n                  <entry key=\"${project.artifactId}.version\" value=\"${project.version}\" />\n                  <entry key=\"${project.artifactId}.buildDate\" type=\"date\" value=\"now\" pattern=\"yyyy-MM-dd HH:mm:ss Z\" />\n                  <entry key=\"${project.artifactId}.commitDate\" value=\"${commitDate}\" />\n                  <entry key=\"${project.artifactId}.shortCommitHash\" value=\"${shortCommitHash}\" />\n                  <entry key=\"${project.artifactId}.longCommitHash\" value=\"${longCommitHash}\" />\n                  <entry key=\"${project.artifactId}.repoStatus\" value=\"${repoStatus}\" />\n                </propertyfile>\n              </target>\n            </configuration>\n          </execution>\n        </executions>\n        <dependencies>\n          <dependency>\n            <groupId>org.apache.ant</groupId>\n            <artifactId>ant</artifactId>\n            <version>1.10.11</version>\n          </dependency>\n          <dependency>\n            <groupId>org.apache.ant</groupId>\n            <artifactId>ant-launcher</artifactId>\n            <version>1.9.7</version>\n          </dependency>\n          <dependency>\n            <groupId>ant-contrib</groupId>\n            <artifactId>ant-contrib</artifactId>\n            <version>1.0b3</version>\n            <exclusions>\n              <exclusion>\n                <groupId>ant</groupId>\n                <artifactId>ant</artifactId>\n              </exclusion>\n            </exclusions>\n          </dependency>\n        </dependencies>\n      </plugin>\n      <plugin>\n        <groupId>org.apache.maven.plugins</groupId>\n        <artifactId>maven-remote-resources-plugin</artifactId>\n        <version>1.5</version>\n      </plugin>\n      <plugin>\n        <groupId>de.thetaphi</groupId>\n        <artifactId>forbiddenapis</artifactId>\n        <version>2.2</version>\n      </plugin>\n    </plugins>\n\n    <pluginManagement>\n      <plugins>\n        <!-- keep surefire and failsafe in sync -->\n        <plugin>\n          <artifactId>maven-surefire-plugin</artifactId>\n          <version>2.22.2</version>\n        </plugin>\n        <!-- keep surefire and failsafe in sync -->\n        <plugin>\n          <artifactId>maven-failsafe-plugin</artifactId>\n          <version>2.22.2</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-clean-plugin</artifactId>\n          <version>3.0.0</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-resources-plugin</artifactId>\n          <version>3.0.1</version>\n          <executions>\n            <execution>\n              <id>default-testResources</id>\n              <phase>process-test-resources</phase>\n              <goals>\n                <goal>testResources</goal>\n              </goals>\n              <configuration>\n                <resources>\n                  <resource>\n                    <directory>${project.basedir}/src/test/resources</directory>\n                  </resource>\n                  <resource>\n                    <directory>${project.build.outputDirectory}</directory>\n                    <excludes>\n                      <!--\n-                       Exclude native files as these are already in the classes directory. This is needed as\n-                       otherwise NativeLibraryLoader will fail to load the native lib as it detects duplicates on\n-                       the classpath.\n-                     -->\n                      <exclude>META-INF/native/*.*</exclude>\n                    </excludes>\n                    <includes>\n                      <!-- Include everything else -->\n                      <include>*.*</include>\n                    </includes>\n                  </resource>\n                </resources>\n              </configuration>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <groupId>org.ops4j.pax.exam</groupId>\n          <artifactId>maven-paxexam-plugin</artifactId>\n          <version>1.2.4</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-jar-plugin</artifactId>\n          <version>3.0.2</version>\n          <executions>\n            <execution>\n              <id>default-jar</id>\n              <configuration>\n                <archive>\n                  <manifest>\n                    <addDefaultImplementationEntries>true</addDefaultImplementationEntries>\n                    <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>\n                  </manifest>\n                  <manifestEntries>\n                    <Automatic-Module-Name>${javaModuleName}</Automatic-Module-Name>\n                  </manifestEntries>\n                  <index>true</index>\n                  <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>\n                </archive>\n              </configuration>\n            </execution>\n            <execution>\n              <goals>\n                <goal>test-jar</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <artifactId>maven-dependency-plugin</artifactId>\n          <version>2.10</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-assembly-plugin</artifactId>\n          <version>2.6</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-jxr-plugin</artifactId>\n          <version>3.1.1</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-antrun-plugin</artifactId>\n          <version>1.8</version>\n          <dependencies>\n            <dependency>\n              <groupId>ant-contrib</groupId>\n              <artifactId>ant-contrib</artifactId>\n              <version>1.0b3</version>\n              <exclusions>\n                <exclusion>\n                  <groupId>ant</groupId>\n                  <artifactId>ant</artifactId>\n                </exclusion>\n              </exclusions>\n            </dependency>\n          </dependencies>\n        </plugin>\n        <plugin>\n          <groupId>org.codehaus.mojo</groupId>\n          <artifactId>build-helper-maven-plugin</artifactId>\n          <version>1.10</version>\n        </plugin>\n        <plugin>\n          <groupId>org.fusesource.hawtjni</groupId>\n          <artifactId>hawtjni-maven-plugin</artifactId>\n          <version>1.18</version>\n        </plugin>\n        <plugin>\n          <groupId>kr.motd.maven</groupId>\n          <artifactId>exec-maven-plugin</artifactId>\n          <version>1.0.0.Final</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-shade-plugin</artifactId>\n          <version>3.2.1</version>\n        </plugin>\n        <plugin>\n          <groupId>org.apache.maven.plugins</groupId>\n          <artifactId>maven-remote-resources-plugin</artifactId>\n          <version>1.5</version>\n          <configuration>\n            <resourceBundles>\n              <resourceBundle>io.netty:netty-dev-tools:${project.version}</resourceBundle>\n            </resourceBundles>\n            <outputDirectory>${netty.dev.tools.directory}</outputDirectory>\n            <!-- don't include netty-dev-tools in artifacts -->\n            <attachToMain>false</attachToMain>\n            <attachToTest>false</attachToTest>\n          </configuration>\n          <executions>\n            <execution>\n              <goals>\n                <goal>process</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n        <plugin>\n          <groupId>de.thetaphi</groupId>\n          <artifactId>forbiddenapis</artifactId>\n          <version>2.2</version>\n          <executions>\n            <execution>\n              <id>check-forbidden-apis</id>\n              <configuration>\n                <targetVersion>${maven.compiler.target}</targetVersion>\n                <!-- allow undocumented classes like sun.misc.Unsafe: -->\n                <internalRuntimeForbidden>false</internalRuntimeForbidden>\n                <!-- if the used Java version is too new, don't fail, just do nothing: -->\n                <failOnUnsupportedJava>false</failOnUnsupportedJava>\n                <bundledSignatures>\n                  <!-- This will automatically choose the right signatures based on 'targetVersion': -->\n                  <!-- enabling these should be done in the future -->\n                  <!-- bundledSignature>jdk-unsafe</bundledSignature -->\n                  <!-- bundledSignature>jdk-deprecated</bundledSignature -->\n                  <!-- bundledSignature>jdk-system-out</bundledSignature -->\n                </bundledSignatures>\n                <signaturesFiles>\n                  <signaturesFile>${netty.dev.tools.directory}/forbidden/signatures.txt</signaturesFile>\n                </signaturesFiles>\n                <suppressAnnotations><annotation>**.SuppressForbidden</annotation></suppressAnnotations>\n              </configuration>\n              <phase>compile</phase>\n              <goals>\n                <goal>check</goal>\n              </goals>\n            </execution>\n            <execution>\n              <id>check-forbidden-test-apis</id>\n              <configuration>\n                <targetVersion>${maven.compiler.target}</targetVersion>\n                <!-- allow undocumented classes like sun.misc.Unsafe: -->\n                <internalRuntimeForbidden>true</internalRuntimeForbidden>\n                <!-- if the used Java version is too new, don't fail, just do nothing: -->\n                <failOnUnsupportedJava>false</failOnUnsupportedJava>\n                <bundledSignatures>\n                  <!-- This will automatically choose the right signatures based on 'targetVersion': -->\n                  <!-- enabling these should be done in the future -->\n                  <!-- bundledSignature>jdk-unsafe</bundledSignature -->\n                  <!-- bundledSignature>jdk-deprecated</bundledSignature -->\n                </bundledSignatures>\n                <signaturesFiles>\n                  <signaturesFile>${netty.dev.tools.directory}/forbidden/signatures.txt</signaturesFile>\n                </signaturesFiles>\n                <suppressAnnotations><annotation>**.SuppressForbidden</annotation></suppressAnnotations>\n              </configuration>\n              <phase>test-compile</phase>\n              <goals>\n                <goal>testCheck</goal>\n              </goals>\n            </execution>\n          </executions>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n  </build>\n</project>\n"
        },
        {
          "name": "resolver-dns-classes-macos",
          "type": "tree",
          "content": null
        },
        {
          "name": "resolver-dns-native-macos",
          "type": "tree",
          "content": null
        },
        {
          "name": "resolver-dns",
          "type": "tree",
          "content": null
        },
        {
          "name": "resolver",
          "type": "tree",
          "content": null
        },
        {
          "name": "run-example.sh",
          "type": "blob",
          "size": 5.013671875,
          "content": "#!/bin/bash -e\n# ----------------------------------------------------------------------------\n# Copyright 2021 The Netty Project\n#\n# The Netty Project licenses this file to you under the Apache License,\n# version 2.0 (the \"License\"); you may not use this file except in compliance\n# with the License. You may obtain a copy of the License at:\n#\n#   https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n# License for the specific language governing permissions and limitations\n# under the License.\n# ----------------------------------------------------------------------------\nEXAMPLE_MAP=(\n  'discard-client:io.netty.example.discard.DiscardClient'\n  'discard-server:io.netty.example.discard.DiscardServer'\n  'echo-client:io.netty.example.echo.EchoClient'\n  'echo-server:io.netty.example.echo.EchoServer'\n  'factorial-client:io.netty.example.factorial.FactorialClient'\n  'factorial-server:io.netty.example.factorial.FactorialServer'\n  'file-server:io.netty.example.file.FileServer'\n  'http-cors-server:io.netty.example.http.cors.HttpCorsServer'\n  'http-file-server:io.netty.example.http.file.HttpStaticFileServer'\n  'http-helloworld-server:io.netty.example.http.helloworld.HttpHelloWorldServer'\n  'http-snoop-client:io.netty.example.http.snoop.HttpSnoopClient'\n  'http-snoop-server:io.netty.example.http.snoop.HttpSnoopServer'\n  'http-upload-client:io.netty.example.http.upload.HttpUploadClient'\n  'http-upload-server:io.netty.example.http.upload.HttpUploadServer'\n  'websocket-client:io.netty.example.http.websocketx.client.WebSocketClient'\n  'websocket-server:io.netty.example.http.websocketx.server.WebSocketServer'\n  'http2-client:io.netty.example.http2.helloworld.client.Http2Client'\n  'http2-server:io.netty.example.http2.helloworld.server.Http2Server'\n  'http2-tiles:io.netty.example.http2.tiles.Launcher'\n  'http2-multiplex-server:io.netty.example.http2.helloworld.multiplex.server.Http2Server'\n  'spdy-client:io.netty.example.spdy.client.SpdyClient'\n  'spdy-server:io.netty.example.spdy.server.SpdyServer'\n  'worldclock-client:io.netty.example.worldclock.WorldClockClient'\n  'worldclock-server:io.netty.example.worldclock.WorldClockServer'\n  'objectecho-client:io.netty.example.objectecho.ObjectEchoClient'\n  'objectecho-server:io.netty.example.objectecho.ObjectEchoServer'\n  'quote-client:org.jboss.netty.example.qotm.QuoteOfTheMomentClient'\n  'quote-server:org.jboss.netty.example.qotm.QuoteOfTheMomentServer'\n  'redis-client:io.netty.example.redis.RedisClient'\n  'securechat-client:io.netty.example.securechat.SecureChatClient'\n  'securechat-server:io.netty.example.securechat.SecureChatServer'\n  'telnet-client:io.netty.example.telnet.TelnetClient'\n  'telnet-server:io.netty.example.telnet.TelnetServer'\n  'proxy-server:io.netty.example.proxy.HexDumpProxy'\n  'socksproxy-server:io.netty.example.socksproxy.SocksServer'\n  'memcache-binary-client:io.netty.example.memcache.binary.MemcacheClient'\n  'stomp-client:io.netty.example.stomp.StompClient'\n  'uptime-client:io.netty.example.uptime.UptimeClient'\n  'uptime-server:io.netty.example.uptime.UptimeServer'\n  'sctpecho-client:io.netty.example.sctp.SctpEchoClient'\n  'sctpecho-server:io.netty.example.sctp.SctpEchoServer'\n  'localecho:io.netty.example.localecho.LocalEcho'\n  'udp-dns-client:io.netty.example.dns.udp.DnsClient'\n  'tcp-dns-client:io.netty.example.dns.tcp.TcpDnsClient'\n  'dot-dns-client:io.netty.example.dns.dot.DoTClient'\n)\n\nNEEDS_NPN_MAP=(\n  'spdy-client'\n  'spdy-server'\n)\n\nEXAMPLE=''\nEXAMPLE_CLASS=''\nEXAMPLE_ARGS='-D_'\nFORCE_NPN=''\nI=0\n\nwhile [[ $# -gt 0 ]]; do\n  ARG=\"$1\"\n  shift\n  if [[ \"$ARG\" =~ (^-.+) ]]; then\n    EXAMPLE_ARGS=\"$EXAMPLE_ARGS $ARG\"\n  else\n    EXAMPLE=\"$ARG\"\n    for E in \"${EXAMPLE_MAP[@]}\"; do\n      KEY=\"${E%%:*}\"\n      VAL=\"${E##*:}\"\n      if [[ \"$EXAMPLE\" == \"$KEY\" ]]; then\n        EXAMPLE_CLASS=\"$VAL\"\n        break\n      fi\n    done\n    break\n  fi\ndone\n\nif [[ -z \"$EXAMPLE\" ]] || [[ -z \"$EXAMPLE_CLASS\" ]] || [[ $# -ne 0 ]]; then\n  echo \"  Usage: $0 [-D<name>[=<value>] ...] <example-name>\" >&2\n  echo \"Example: $0 -Dport=8443 -Dssl http-server\" >&2\n  echo \"         $0 -Dhost=127.0.0.1 -Dport=8009 echo-client\" >&2\n  echo \"         $0 -DlogLevel=debug -Dhost=127.0.0.1 -Dport=8009 echo-client\" >&2\n  echo >&2\n  echo \"Available examples:\" >&2\n  echo >&2\n  I=0\n  for E in \"${EXAMPLE_MAP[@]}\"; do\n    if [[ $I -eq 0 ]]; then\n      echo -n '  '\n    fi\n\n    printf '%-24s' \"${E%%:*}\"\n    ((I++)) || true\n\n    if [[ $I -eq 2 ]]; then\n      I=0\n      echo\n    fi\n  done >&2\n  if [[ $I -ne 0 ]]; then\n    echo >&2\n  fi\n  echo >&2\n  exit 1\nfi\n\nfor E in \"${NEEDS_NPN_MAP[@]}\"; do\n  if [[ \"$EXAMPLE\" = \"$E\" ]]; then\n    FORCE_NPN='true'\n    break\n  fi\ndone\n\ncd \"`dirname \"$0\"`\"/example\necho \"[INFO] Running: $EXAMPLE ($EXAMPLE_CLASS $EXAMPLE_ARGS)\"\nexec mvn -q -nsu compile exec:exec -Dcheckstyle.skip=true -Dforbiddenapis.skip=true -Dforcenpn=\"$FORCE_NPN\" -DargLine.example=\"$EXAMPLE_ARGS\" -DexampleClass=\"$EXAMPLE_CLASS\"\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite-autobahn",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite-http2",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite-native-image-client-runtime-init",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite-native-image-client",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite-native-image",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite-native",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite-osgi",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite-shading",
          "type": "tree",
          "content": null
        },
        {
          "name": "testsuite",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport-blockhound-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport-classes-epoll",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport-classes-kqueue",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport-native-epoll",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport-native-kqueue",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport-native-unix-common-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport-native-unix-common",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport-rxtx",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport-sctp",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport-udt",
          "type": "tree",
          "content": null
        },
        {
          "name": "transport",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}