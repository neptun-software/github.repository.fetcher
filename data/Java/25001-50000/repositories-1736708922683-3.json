{
  "metadata": {
    "timestamp": 1736708922683,
    "page": 3,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "skylot/jadx",
      "stars": 42485,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.6806640625,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\nroot = true\n\n[*]\nend_of_line = lf\ninsert_final_newline = true\n\nindent_style = tab\ntab_width = 4\n\ncharset = utf-8\ntrim_trailing_whitespace = true\n\n[*.java]\nij_java_continuation_indent_size = 8\nij_java_use_single_class_imports = true\nij_java_class_count_to_use_import_on_demand = 99\nij_java_names_count_to_use_import_on_demand = 99\nij_java_packages_to_use_import_on_demand = *\n\n[*.kt]\nij_kotlin_continuation_indent_size = 8\nij_kotlin_name_count_to_use_star_import = 99\nij_kotlin_name_count_to_use_star_import_for_members = 99\nij_kotlin_packages_to_use_import_on_demand = *\n\n[*.yml]\nindent_style = space\nindent_size = 2\n\n[*.bat]\nend_of_line = crlf\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1904296875,
          "content": "*       text=auto eol=lf\n\n*.java  text eol=lf diff=java\n*.kt    text eol=lf diff=kotlin\n*.kts   text eol=lf diff=kotlin\n\ngradlew text eol=lf\n\n*.bat   text eol=crlf\n\n*.png   binary\n*.jar   binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3505859375,
          "content": "# Eclipse files\n.classpath\n.project\n.settings/\n\n# IntelliJ Idea files\n.idea/\n.run/\nout/\n*.iml\n*.ipr\n*.iws\n.attach_pid*\n*.hprof\n\n**/.DS_Store\n\nbin/\ntarget/\nbuild/\nclasses/\nidea/\n.gradle/\n.kotlin/\nnode_modules/\n.vscode/\n\njadx-output/\n*-tmp/\n**/tmp/\n*.jobf\n*.jadx\n\n*.class\n*.dump\n*.log\n*.cfg\n*.orig\nquark.json\n\ncliff.toml\njadx-gui/src/main/resources/logback.xml\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 0.2705078125,
          "content": "variables:\n  GRADLE_OPTS: \"-Dorg.gradle.daemon=false\"\n  TERM: \"dumb\"\n\nbefore_script:\n  - chmod +x gradlew\n\nstages:\n  - test\n\nbuild-test:\n  stage: test\n  image: eclipse-temurin:21\n  script: JADX_BUILD_JAVA_VERSION=11 JADX_TEST_JAVA_VERSION=11 ./gradlew clean build dist distWin\n"
        },
        {
          "name": ".jitpack.yml",
          "type": "blob",
          "size": 0.2431640625,
          "content": "jdk:\n  - openjdk11\ninstall:\n  - echo \"Jitpack is not supported. Use artifacts from Maven Central (https://search.maven.org/search?q=jadx), check usage help at https://github.com/skylot/jadx/wiki/Use-jadx-as-a-library\"\n  - ./gradlew intentional-fail\n"
        },
        {
          "name": ".run",
          "type": "tree",
          "content": null
        },
        {
          "name": ".typos.toml",
          "type": "blob",
          "size": 0.4306640625,
          "content": "# Config for 'typos' spellchecker (https://github.com/crate-ci/typos)\n\n[default.extend-words]\nIPUT = \"IPUT\"\nLaf = \"Laf\"\nDarcula=\"Darcula\"\n\n[default]\nextend-ignore-identifiers-re = [\n    \"finaly\", # intentional package name\n]\n\n[files]\nextend-exclude = [\n    \"config/\",\n    \"jadx-core/src/main/resources/\",\n    \"jadx-core/src/test/\",\n    \"jadx-gui/src/main/resources/i18n/\",\n    \"!jadx-gui/src/main/resources/i18n/Messages_en_US.properties\",\n]"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 2.6396484375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.05859375,
          "content": "# Contributing\n\nPlease note, we have [code of conduct](CODE_OF_CONDUCT.md), please follow it in all your interactions with the project.\n\n## Open Issue\n\n1. Before proceed, please do:\n    - check [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A) section on wiki\n    - search existing issues by exception message\n\n2. Describe error:\n    - full name of method or class with error\n    - full java stacktrace (no need to copy method fallback code (commented pseudocode))\n    - **IMPORTANT!:** attach or provide link to apk file (double check apk version)\n\n\t  **Note**: GitHub don't allow attaching files with `.apk` extension, but you can change extension by adding `.zip` at the end :)\n\n\n## Pull Request Process\n\n1. Please don't submit any code style fixes or dependencies updates changes.\n\n1. Use only features and API from Java 11 or below.\n\n1. Make sure your code is correctly formatted, see description here: [Code Formatting](https://github.com/skylot/jadx/wiki/Code-Formatting).\n\n1. Make sure your changes are passing build: `./gradlew clean build dist`\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 10.408203125,
          "content": "The majority of jadx is written and copyrighted by me (Skylot)\nand released under the Apache 2.0 license (see LICENSE file for full license text):\n\n*******************************************************************************\nCopyright 2015, Skylot\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*******************************************************************************\n\n\nVarious portions of the code including dx library are taken from\nthe Android Open Source Project, and are used in accordance with\nthe following license:\n\n*******************************************************************************\nCopyright (C) 2007 The Android Open Source Project\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*******************************************************************************\n\n\nOther binary libraries used in 'jadx'\n=====================================\n\nJCommander library (http://jcommander.org/) released under the following license:\n\n*******************************************************************************\nCopyright 2012, Cedric Beust\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*******************************************************************************\n\n\nSLF4J source code and binaries are distributed under the following license:\n\n*******************************************************************************\nCopyright (c) 2004-2011 QOS.ch\n All rights reserved.\n\n Permission is hereby granted, free  of charge, to any person obtaining\n a  copy  of this  software  and  associated  documentation files  (the\n \"Software\"), to  deal in  the Software without  restriction, including\n without limitation  the rights to  use, copy, modify,  merge, publish,\n distribute,  sublicense, and/or sell  copies of  the Software,  and to\n permit persons to whom the Software  is furnished to do so, subject to\n the following conditions:\n\n The  above  copyright  notice  and  this permission  notice  shall  be\n included in all copies or substantial portions of the Software.\n\n THE  SOFTWARE IS  PROVIDED  \"AS  IS\", WITHOUT  WARRANTY  OF ANY  KIND,\n EXPRESS OR  IMPLIED, INCLUDING  BUT NOT LIMITED  TO THE  WARRANTIES OF\n MERCHANTABILITY,    FITNESS    FOR    A   PARTICULAR    PURPOSE    AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n OF CONTRACT, TORT OR OTHERWISE,  ARISING FROM, OUT OF OR IN CONNECTION\n WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*******************************************************************************\n\n\nLogback source code and binaries are dual-licensed under the EPL v1.0 and the LGPL 2.1, or more formally:\n\n*******************************************************************************\nLogback: the reliable, generic, fast and flexible logging framework.\nCopyright (C) 1999-2012, QOS.ch. All rights reserved.\n\nThis program and the accompanying materials are dual-licensed under\neither the terms of the Eclipse Public License v1.0 as published by\nthe Eclipse Foundation\n\n  or (per the licensee's choosing)\n\nunder the terms of the GNU Lesser General Public License version 2.1\nas published by the Free Software Foundation.\n*******************************************************************************\n\n\nASM library:\n\n*******************************************************************************\nCopyright (c) 2000-2011 INRIA, France Telecom\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in the\n   documentation and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holders nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF\nTHE POSSIBILITY OF SUCH DAMAGE.\n*******************************************************************************\n\n\n\nJadx-gui components\n===================\n\nRSyntaxTextArea library (https://github.com/bobbylight/RSyntaxTextArea)\nlicensed under modified BSD license:\n\n*******************************************************************************\nCopyright (c) 2012, Robert Futrell\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of the author nor the names of its contributors may\n      be used to endorse or promote products derived from this software\n      without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*******************************************************************************\n\n\nConcurrent Trees (https://code.google.com/p/concurrent-trees/)\nlicenced under Apache License 2.0:\n\n*******************************************************************************\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*******************************************************************************\n\n\nImage Viewer (https://github.com/kazocsaba/imageviewer)\n\n*******************************************************************************\nCopyright (c) 2008-2012 Kazó Csaba\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*******************************************************************************\n\nJFontChooser Component - http://sourceforge.jp/projects/jfontchooser/\n\nIcons copied from several places:\n - Eclipse Project (JDT UI) - licensed under EPL v1.0 (http://www.eclipse.org/legal/epl-v10.html)\n - famfamfam silk icon set (http://www.famfamfam.com/lab/icons/silk/) - licensed\n     under Creative Commons Attribution 2.5 License (http://creativecommons.org/licenses/by/2.5/)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.9375,
          "content": "<img src=\"https://raw.githubusercontent.com/skylot/jadx/master/jadx-gui/src/main/resources/logos/jadx-logo.png\" width=\"64\" align=\"left\" />\n\n## JADX\n\n![Build status](https://img.shields.io/github/actions/workflow/status/skylot/jadx/build-artifacts.yml)\n![GitHub contributors](https://img.shields.io/github/contributors/skylot/jadx)\n![GitHub all releases](https://img.shields.io/github/downloads/skylot/jadx/total)\n![GitHub release (latest by SemVer)](https://img.shields.io/github/downloads/skylot/jadx/latest/total)\n![Latest release](https://img.shields.io/github/release/skylot/jadx.svg)\n[![Maven Central](https://img.shields.io/maven-central/v/io.github.skylot/jadx-core)](https://search.maven.org/search?q=g:io.github.skylot%20AND%20jadx)\n![Java 11+](https://img.shields.io/badge/Java-11%2B-blue)\n[![License](http://img.shields.io/:license-apache-blue.svg)](http://www.apache.org/licenses/LICENSE-2.0.html)\n\n**jadx** - Dex to Java decompiler\n\nCommand line and GUI tools for producing Java source code from Android Dex and Apk files\n\n> [!WARNING]\n> Please note that in most cases **jadx** can't decompile all 100% of the code, so errors will occur.<br />\n> Check [Troubleshooting guide](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A#decompilation-issues) for workarounds.\n\n**Main features:**\n- decompile Dalvik bytecode to Java code from APK, dex, aar, aab and zip files\n- decode `AndroidManifest.xml` and other resources from `resources.arsc`\n- deobfuscator included\n\n**jadx-gui features:**\n- view decompiled code with highlighted syntax\n- jump to declaration\n- find usage\n- full text search\n- smali debugger, check [wiki page](https://github.com/skylot/jadx/wiki/Smali-debugger) for setup and usage\n\nJadx-gui key bindings can be found [here](https://github.com/skylot/jadx/wiki/JADX-GUI-Key-bindings)\n\nSee these features in action here: [jadx-gui features overview](https://github.com/skylot/jadx/wiki/jadx-gui-features-overview)\n\n<img src=\"https://user-images.githubusercontent.com/118523/142730720-839f017e-38db-423e-b53f-39f5f0a0316f.png\" width=\"700\"/>\n\n### Download\n- release\n  from [github: ![Latest release](https://img.shields.io/github/release/skylot/jadx.svg)](https://github.com/skylot/jadx/releases/latest)\n- latest [unstable build ![GitHub commits since tagged version (branch)](https://img.shields.io/github/commits-since/skylot/jadx/latest/master)](https://nightly.link/skylot/jadx/workflows/build-artifacts/master)\n\nAfter download unpack zip file go to `bin` directory and run:\n- `jadx` - command line version\n- `jadx-gui` - UI version\n\nOn Windows run `.bat` files with double-click\\\n**Note:** ensure you have installed Java 11 or later 64-bit version.\nFor Windows, you can download it from [oracle.com](https://www.oracle.com/java/technologies/downloads/#jdk17-windows) (select x64 Installer).\n\n### Install\n- Arch Linux\n  [![Arch Linux package](https://img.shields.io/archlinux/v/extra/any/jadx)](https://archlinux.org/packages/extra/any/jadx/)\n  [![AUR Version](https://img.shields.io/aur/version/jadx-git)](https://aur.archlinux.org/packages/jadx-git)\n  ```bash\n  sudo pacman -S jadx\n  ```\n- macOS\n  [![homebrew version](https://img.shields.io/homebrew/v/jadx)](https://formulae.brew.sh/formula/jadx)\n  ```bash\n  brew install jadx\n  ```\n- Flathub\n  [![Flathub Version](https://img.shields.io/flathub/v/com.github.skylot.jadx)](https://flathub.org/apps/com.github.skylot.jadx)\n  ```bash\n  flatpak install flathub com.github.skylot.jadx\n  ```\n\n### Use jadx as a library\nYou can use jadx in your java projects, check details on [wiki page](https://github.com/skylot/jadx/wiki/Use-jadx-as-a-library)\n\n### Build from source\nJDK 11 or higher must be installed:\n```\ngit clone https://github.com/skylot/jadx.git\ncd jadx\n./gradlew dist\n```\n\n(on Windows, use `gradlew.bat` instead of `./gradlew`)\n\nScripts for run jadx will be placed in `build/jadx/bin`\nand also packed to `build/jadx-<version>.zip`\n\n### Usage\n```\njadx[-gui] [command] [options] <input files> (.apk, .dex, .jar, .class, .smali, .zip, .aar, .arsc, .aab, .xapk, .apkm, .jadx.kts)\ncommands (use '<command> --help' for command options):\n  plugins\t  - manage jadx plugins\n\noptions:\n  -d, --output-dir                      - output directory\n  -ds, --output-dir-src                 - output directory for sources\n  -dr, --output-dir-res                 - output directory for resources\n  -r, --no-res                          - do not decode resources\n  -s, --no-src                          - do not decompile source code\n  --single-class                        - decompile a single class, full name, raw or alias\n  --single-class-output                 - file or dir for write if decompile a single class\n  --output-format                       - can be 'java' or 'json', default: java\n  -e, --export-gradle                   - save as android gradle project\n  -j, --threads-count                   - processing threads count, default: 4\n  -m, --decompilation-mode              - code output mode:\n                                           'auto' - trying best options (default)\n                                           'restructure' - restore code structure (normal java code)\n                                           'simple' - simplified instructions (linear, with goto's)\n                                           'fallback' - raw instructions without modifications\n  --show-bad-code                       - show inconsistent code (incorrectly decompiled)\n  --no-xml-pretty-print                 - do not prettify XML\n  --no-imports                          - disable use of imports, always write entire package name\n  --no-debug-info                       - disable debug info parsing and processing\n  --add-debug-lines                     - add comments with debug line numbers if available\n  --no-inline-anonymous                 - disable anonymous classes inline\n  --no-inline-methods                   - disable methods inline\n  --no-move-inner-classes               - disable move inner classes into parent\n  --no-inline-kotlin-lambda             - disable inline for Kotlin lambdas\n  --no-finally                          - don't extract finally block\n  --no-restore-switch-over-string       - don't restore switch over string\n  --no-replace-consts                   - don't replace constant value with matching constant field\n  --escape-unicode                      - escape non latin characters in strings (with \\u)\n  --respect-bytecode-access-modifiers   - don't change original access modifiers\n  --mappings-path                       - deobfuscation mappings file or directory. Allowed formats: Tiny and Tiny v2 (both '.tiny'), Enigma (.mapping) or Enigma directory\n  --mappings-mode                       - set mode for handling the deobfuscation mapping file:\n                                           'read' - just read, user can always save manually (default)\n                                           'read-and-autosave-every-change' - read and autosave after every change\n                                           'read-and-autosave-before-closing' - read and autosave before exiting the app or closing the project\n                                           'ignore' - don't read or save (can be used to skip loading mapping files referenced in the project file)\n  --deobf                               - activate deobfuscation\n  --deobf-min                           - min length of name, renamed if shorter, default: 3\n  --deobf-max                           - max length of name, renamed if longer, default: 64\n  --deobf-whitelist                     - space separated list of classes (full name) and packages (ends with '.*') to exclude from deobfuscation, default: android.support.v4.* android.support.v7.* android.support.v4.os.* android.support.annotation.Px androidx.core.os.* androidx.annotation.Px\n  --deobf-cfg-file                      - deobfuscation mappings file used for JADX auto-generated names (in the JOBF file format), default: same dir and name as input file with '.jobf' extension\n  --deobf-cfg-file-mode                 - set mode for handling the JADX auto-generated names' deobfuscation map file:\n                                           'read' - read if found, don't save (default)\n                                           'read-or-save' - read if found, save otherwise (don't overwrite)\n                                           'overwrite' - don't read, always save\n                                           'ignore' - don't read and don't save\n  --deobf-res-name-source               - better name source for resources:\n                                           'auto' - automatically select best name (default)\n                                           'resources' - use resources names\n                                           'code' - use R class fields names\n  --use-source-name-as-class-name-alias - use source name as class name alias:\n                                           'always' - always use source name if it's available\n                                           'if-better' - use source name if it seems better than the current one\n                                           'never' - never use source name, even if it's available\n  --use-kotlin-methods-for-var-names    - use kotlin intrinsic methods to rename variables, values: disable, apply, apply-and-hide, default: apply\n  --rename-flags                        - fix options (comma-separated list of):\n                                           'case' - fix case sensitivity issues (according to --fs-case-sensitive option),\n                                           'valid' - rename java identifiers to make them valid,\n                                           'printable' - remove non-printable chars from identifiers,\n                                          or single 'none' - to disable all renames\n                                          or single 'all' - to enable all (default)\n  --integer-format                      - how integers are displayed:\n                                           'auto' - automatically select (default)\n                                           'decimal' - use decimal\n                                           'hexadecimal' - use hexadecimal\n  --fs-case-sensitive                   - treat filesystem as case sensitive, false by default\n  --cfg                                 - save methods control flow graph to dot file\n  --raw-cfg                             - save methods control flow graph (use raw instructions)\n  -f, --fallback                        - set '--decompilation-mode' to 'fallback' (deprecated)\n  --use-dx                              - use dx/d8 to convert java bytecode\n  --comments-level                      - set code comments level, values: error, warn, info, debug, user-only, none, default: info\n  --log-level                           - set log level, values: quiet, progress, error, warn, info, debug, default: progress\n  -v, --verbose                         - verbose output (set --log-level to DEBUG)\n  -q, --quiet                           - turn off output (set --log-level to QUIET)\n  --version                             - print jadx version\n  -h, --help                            - print this help\n\nPlugin options (-P<name>=<value>):\n  dex-input: Load .dex and .apk files\n    - dex-input.verify-checksum         - verify dex file checksum before load, values: [yes, no], default: yes\n  java-convert: Convert .class, .jar and .aar files to dex\n    - java-convert.mode                 - convert mode, values: [dx, d8, both], default: both\n    - java-convert.d8-desugar           - use desugar in d8, values: [yes, no], default: no\n  kotlin-metadata: Use kotlin.Metadata annotation for code generation\n    - kotlin-metadata.class-alias       - rename class alias, values: [yes, no], default: yes\n    - kotlin-metadata.method-args       - rename function arguments, values: [yes, no], default: yes\n    - kotlin-metadata.fields            - rename fields, values: [yes, no], default: yes\n    - kotlin-metadata.companion         - rename companion object, values: [yes, no], default: yes\n    - kotlin-metadata.data-class        - add data class modifier, values: [yes, no], default: yes\n    - kotlin-metadata.to-string         - rename fields using toString, values: [yes, no], default: yes\n    - kotlin-metadata.getters           - rename simple getters to field names, values: [yes, no], default: yes\n  rename-mappings: various mappings support\n    - rename-mappings.format            - mapping format, values: [AUTO, TINY_FILE, TINY_2_FILE, ENIGMA_FILE, ENIGMA_DIR, SRG_FILE, XSRG_FILE, JAM_FILE, CSRG_FILE, TSRG_FILE, TSRG_2_FILE, PROGUARD_FILE, RECAF_SIMPLE_FILE, JOBF_FILE], default: AUTO\n    - rename-mappings.invert            - invert mapping on load, values: [yes, no], default: no\n  smali-input: Load .smali files\n    - smali-input.api-level             - Android API level, default: 27\n\nEnvironment variables:\n  JADX_DISABLE_XML_SECURITY - set to 'true' to disable all security checks for XML files\n  JADX_DISABLE_ZIP_SECURITY - set to 'true' to disable all security checks for zip files\n  JADX_ZIP_MAX_ENTRIES_COUNT - maximum allowed number of entries in zip files (default: 100 000)\n  JADX_CONFIG_DIR - custom config directory, using system by default\n  JADX_CACHE_DIR - custom cache directory, using system by default\n  JADX_TMP_DIR - custom temp directory, using system by default\n\nExamples:\n  jadx -d out classes.dex\n  jadx --rename-flags \"none\" classes.dex\n  jadx --rename-flags \"valid, printable\" classes.dex\n  jadx --log-level ERROR app.apk\n  jadx -Pdex-input.verify-checksum=no app.apk\n```\nThese options also work in jadx-gui running from command line and override options from preferences' dialog\n\n### Troubleshooting\nPlease check wiki page [Troubleshooting Q&A](https://github.com/skylot/jadx/wiki/Troubleshooting-Q&A)\n\n### Contributing\nTo support this project you can:\n  - Post thoughts about new features/optimizations that important to you\n  - Submit decompilation issues, please read before proceed: [Open issue](CONTRIBUTING.md#Open-Issue)\n  - Open pull request, please follow these rules: [Pull Request Process](CONTRIBUTING.md#Pull-Request-Process)\n\n---------------------------------------\n*Licensed under the Apache 2.0 License*\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.42578125,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nTo report a security issue, please open a [new security advisory](https://github.com/skylot/jadx/security/advisories/new).\nPlease fill the steps you took to create the issue, affected versions, and, if known, mitigations for the issue.\nWe will check and respond within 3 working days.\nIf the issue is confirmed as a vulnerability, we will apply required mitigations at the next release.\n"
        },
        {
          "name": "build.gradle.kts",
          "type": "blob",
          "size": 4.798828125,
          "content": "import com.diffplug.gradle.spotless.FormatExtension\nimport com.diffplug.gradle.spotless.SpotlessExtension\nimport com.diffplug.spotless.LineEnding\nimport com.github.benmanes.gradle.versions.updates.DependencyUpdatesTask\nimport org.gradle.nativeplatform.platform.internal.DefaultNativePlatform\nimport java.util.Locale\n\nplugins {\n\tid(\"com.github.ben-manes.versions\") version \"0.51.0\"\n\tid(\"se.patrikerdes.use-latest-versions\") version \"0.2.18\"\n\tid(\"com.diffplug.spotless\") version \"6.25.0\"\n}\n\nval jadxVersion by extra { System.getenv(\"JADX_VERSION\") ?: \"dev\" }\nprintln(\"jadx version: $jadxVersion\")\nversion = jadxVersion\n\nval jadxBuildJavaVersion by extra { getBuildJavaVersion() }\n\nfun getBuildJavaVersion(): Int? {\n\tval envVarName = \"JADX_BUILD_JAVA_VERSION\"\n\tval buildJavaVer = System.getenv(envVarName)?.toInt() ?: return null\n\tif (buildJavaVer < 11) {\n\t\tthrow GradleException(\"'$envVarName' can't be set to lower than 11\")\n\t}\n\tprintln(\"Set Java toolchain for jadx build to version '$buildJavaVer'\")\n\treturn buildJavaVer\n}\n\nallprojects {\n\tapply(plugin = \"java\")\n\tapply(plugin = \"checkstyle\")\n\tapply(plugin = \"com.diffplug.spotless\")\n\tapply(plugin = \"com.github.ben-manes.versions\")\n\tapply(plugin = \"se.patrikerdes.use-latest-versions\")\n\n\trepositories {\n\t\tmavenCentral()\n\t}\n\n\tconfigure<SpotlessExtension> {\n\t\tjava {\n\t\t\timportOrderFile(\"$rootDir/config/code-formatter/eclipse.importorder\")\n\t\t\teclipse().configFile(\"$rootDir/config/code-formatter/eclipse.xml\")\n\t\t\tremoveUnusedImports()\n\t\t\tcommonFormatOptions()\n\t\t}\n\t\tkotlin {\n\t\t\tktlint().editorConfigOverride(mapOf(\"indent_style\" to \"tab\"))\n\t\t\tcommonFormatOptions()\n\t\t}\n\t\tkotlinGradle {\n\t\t\tktlint()\n\t\t\tcommonFormatOptions()\n\t\t}\n\t\tformat(\"misc\") {\n\t\t\ttarget(\"**/*.gradle\", \"**/*.xml\", \"**/.gitignore\", \"**/.properties\")\n\t\t\ttargetExclude(\".gradle/**\", \".idea/**\", \"*/build/**\")\n\t\t\tcommonFormatOptions()\n\t\t}\n\t}\n\n\ttasks.named<DependencyUpdatesTask>(\"dependencyUpdates\") {\n\t\trejectVersionIf {\n\t\t\t// disallow release candidates as upgradable versions from stable versions\n\t\t\tisNonStable(candidate.version) && !isNonStable(currentVersion)\n\t\t}\n\t}\n}\n\nfun FormatExtension.commonFormatOptions() {\n\tlineEndings = LineEnding.UNIX\n\tencoding = Charsets.UTF_8\n\ttrimTrailingWhitespace()\n\tendWithNewline()\n}\n\nfun isNonStable(version: String): Boolean {\n\tval stableKeyword = listOf(\"RELEASE\", \"FINAL\", \"GA\").any { version.uppercase(Locale.getDefault()).contains(it) }\n\tval regex = \"^[0-9,.v-]+(-r)?$\".toRegex()\n\tval isStable = stableKeyword || regex.matches(version)\n\treturn isStable.not()\n}\n\nval copyArtifacts by tasks.registering(Copy::class) {\n\tval jarCliPattern = \"jadx-cli-(.*)-all.jar\".toPattern()\n\tfrom(tasks.getByPath(\":jadx-cli:installShadowDist\")) {\n\t\texclude(\"**/*.jar\")\n\t\tfilter { line ->\n\t\t\tjarCliPattern.matcher(line).replaceAll(\"jadx-$1-all.jar\")\n\t\t\t\t.replace(\"-jar \\\"\\\\\\\"\\$CLASSPATH\\\\\\\"\\\"\", \"-cp \\\"\\\\\\\"\\$CLASSPATH\\\\\\\"\\\" jadx.cli.JadxCLI\")\n\t\t\t\t.replace(\"-jar \\\"%CLASSPATH%\\\"\", \"-cp \\\"%CLASSPATH%\\\" jadx.cli.JadxCLI\")\n\t\t}\n\t}\n\tval jarGuiPattern = \"jadx-gui-(.*)-all.jar\".toPattern()\n\tfrom(tasks.getByPath(\":jadx-gui:installShadowDist\")) {\n\t\texclude(\"**/*.jar\")\n\t\tfilter { line -> jarGuiPattern.matcher(line).replaceAll(\"jadx-$1-all.jar\") }\n\t}\n\tfrom(tasks.getByPath(\":jadx-gui:installShadowDist\")) {\n\t\tinclude(\"**/*.jar\")\n\t\trename(\"jadx-gui-(.*)-all.jar\", \"jadx-$1-all.jar\")\n\t}\n\tfrom(layout.projectDirectory) {\n\t\tinclude(\"README.md\")\n\t\tinclude(\"LICENSE\")\n\t}\n\tinto(layout.buildDirectory.dir(\"jadx\"))\n\tduplicatesStrategy = DuplicatesStrategy.EXCLUDE\n}\n\nval pack by tasks.registering(Zip::class) {\n\tfrom(copyArtifacts)\n\tarchiveFileName.set(\"jadx-$jadxVersion.zip\")\n\tdestinationDirectory.set(layout.buildDirectory)\n}\n\nval distWin by tasks.registering(Zip::class) {\n\tgroup = \"jadx\"\n\tdescription = \"Build Windows bundle\"\n\n\tval guiTask = tasks.getByPath(\"jadx-gui:copyDistWin\")\n\tdependsOn(guiTask)\n\tfrom(guiTask.outputs)\n\n\tdestinationDirectory.set(layout.buildDirectory.dir(\"distWin\"))\n\tarchiveFileName.set(\"jadx-gui-$jadxVersion-win.zip\")\n\tduplicatesStrategy = DuplicatesStrategy.EXCLUDE\n}\n\nval distWinWithJre by tasks.registering(Zip::class) {\n\tdescription = \"Build Windows with JRE bundle\"\n\n\tval guiTask = tasks.getByPath(\":jadx-gui:copyDistWinWithJre\")\n\tdependsOn(guiTask)\n\tfrom(guiTask.outputs)\n\n\tdestinationDirectory.set(layout.buildDirectory.dir(\"distWinWithJre\"))\n\tarchiveFileName.set(\"jadx-gui-$jadxVersion-with-jre-win.zip\")\n\tduplicatesStrategy = DuplicatesStrategy.EXCLUDE\n}\n\nval dist by tasks.registering {\n\tgroup = \"jadx\"\n\tdescription = \"Build jadx distribution zip bundles\"\n\n\tdependsOn(pack)\n\n\tval os = DefaultNativePlatform.getCurrentOperatingSystem()\n\tif (os.isWindows) {\n\t\tif (project.hasProperty(\"bundleJRE\")) {\n\t\t\tprintln(\"Build win bundle with JRE\")\n\t\t\tdependsOn(distWinWithJre)\n\t\t} else {\n\t\t\tdependsOn(distWin)\n\t\t}\n\t}\n}\n\nval cleanBuildDir by tasks.registering(Delete::class) {\n\tdelete(layout.buildDirectory)\n}\ntasks.getByName(\"clean\").dependsOn(cleanBuildDir)\n"
        },
        {
          "name": "buildSrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.8017578125,
          "content": "org.gradle.warning.mode=all\norg.gradle.parallel=true\norg.gradle.caching=true\n\n### Disable configuration cache for now: causing issues with spotless and version plugins\n# org.gradle.configuration-cache=true\n# org.gradle.configuration-cache.problems=warn\n\n# Flags for google-java-format (optimize imports by spotless) for Java >= 16.\n# Java < 9 will ignore unsupported flags (thanks to -XX:+IgnoreUnrecognizedVMOptions)\norg.gradle.jvmargs=-XX:+IgnoreUnrecognizedVMOptions \\\n  --add-exports='jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED' \\\n  --add-exports='jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED' \\\n  --add-exports='jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED' \\\n  --add-exports='jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED' \\\n  --add-exports='jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED'\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.556640625,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/platforms/jvm/plugins-application/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\n# Discard cd standard output in case $CDPATH is set (https://github.com/gradle/gradle/issues/25036)\nAPP_HOME=$( cd -P \"${APP_HOME:-./}\" > /dev/null && printf '%s\n' \"$PWD\" ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    if ! command -v java >/dev/null 2>&1\n    then\n        die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC2039,SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command:\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, JAVA_OPTS, and optsEnvironmentVar are not allowed to contain shell fragments,\n#     and any embedded shellness will be escaped.\n#   * For example: A user cannot expect ${Hostname} to be expanded, as it is an environment variable and will be\n#     treated as '${Hostname}' itself on the command line.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8046875,
          "content": "@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n@rem SPDX-License-Identifier: Apache-2.0\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH. 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho. 1>&2\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME% 1>&2\necho. 1>&2\necho Please set the JAVA_HOME variable in your environment to match the 1>&2\necho location of your Java installation. 1>&2\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "jadx-cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "jadx-commons",
          "type": "tree",
          "content": null
        },
        {
          "name": "jadx-core",
          "type": "tree",
          "content": null
        },
        {
          "name": "jadx-gui",
          "type": "tree",
          "content": null
        },
        {
          "name": "jadx-plugins-tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "jadx-plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle.kts",
          "type": "blob",
          "size": 1.1083984375,
          "content": "plugins {\n\tid(\"org.gradle.toolchains.foojay-resolver-convention\") version (\"0.8.0\")\n}\n\nif (!JavaVersion.current().isJava11Compatible) {\n\tthrow GradleException(\"Jadx requires at least Java 11 for build (current version is '${JavaVersion.current()}')\")\n}\n\nrootProject.name = \"jadx\"\n\ninclude(\"jadx-core\")\ninclude(\"jadx-cli\")\ninclude(\"jadx-gui\")\n\ninclude(\"jadx-plugins-tools\")\n\ninclude(\"jadx-commons:jadx-app-commons\")\n\ninclude(\"jadx-plugins:jadx-input-api\")\ninclude(\"jadx-plugins:jadx-dex-input\")\ninclude(\"jadx-plugins:jadx-java-input\")\ninclude(\"jadx-plugins:jadx-raung-input\")\ninclude(\"jadx-plugins:jadx-smali-input\")\ninclude(\"jadx-plugins:jadx-java-convert\")\ninclude(\"jadx-plugins:jadx-rename-mappings\")\ninclude(\"jadx-plugins:jadx-kotlin-metadata\")\ninclude(\"jadx-plugins:jadx-kotlin-source-debug-extension\")\ninclude(\"jadx-plugins:jadx-xapk-input\")\ninclude(\"jadx-plugins:jadx-aab-input\")\ninclude(\"jadx-plugins:jadx-apkm-input\")\n\ninclude(\"jadx-plugins:jadx-script:jadx-script-plugin\")\ninclude(\"jadx-plugins:jadx-script:jadx-script-runtime\")\ninclude(\"jadx-plugins:jadx-script:jadx-script-ide\")\ninclude(\"jadx-plugins:jadx-script:examples\")\n"
        }
      ]
    }
  ]
}