{
  "metadata": {
    "timestamp": 1736557612812,
    "page": 686,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "open-mmlab/mmdetection",
      "stars": 30012,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dev_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.34,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/en/_build/\ndocs/zh_cn/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\ndata/\ndata\n.vscode\n.idea\n.DS_Store\n\n# custom\n*.pkl\n*.pkl.json\n*.log.json\ndocs/modelzoo_statistics.md\nmmdet/.mim\nwork_dirs/\n\n# Pytorch\n*.pth\n*.py~\n*.sh~\n"
        },
        {
          "name": ".owners.yml",
          "type": "blob",
          "size": 0.2,
          "content": "assign:\n  strategy:\n    # random\n    daily-shift-based\n  scedule:\n    '*/1 * * * *'\n  assignees:\n    - Czm369\n    - hhaAndroid\n    - jbwang1997\n    - RangiLyu\n    - BIGWangYuDong\n    - chhluo\n    - ZwwWayne\n"
        },
        {
          "name": ".pre-commit-config-zh-cn.yaml",
          "type": "blob",
          "size": 1.63,
          "content": "exclude: ^tests/data/\nrepos:\n  - repo: https://gitee.com/openmmlab/mirrors-flake8\n    rev: 5.0.4\n    hooks:\n      - id: flake8\n  - repo: https://gitee.com/openmmlab/mirrors-isort\n    rev: 5.11.5\n    hooks:\n      - id: isort\n  - repo: https://gitee.com/openmmlab/mirrors-yapf\n    rev: v0.32.0\n    hooks:\n      - id: yapf\n  - repo: https://gitee.com/openmmlab/mirrors-pre-commit-hooks\n    rev: v4.3.0\n    hooks:\n      - id: trailing-whitespace\n      - id: check-yaml\n      - id: end-of-file-fixer\n      - id: requirements-txt-fixer\n      - id: double-quote-string-fixer\n      - id: check-merge-conflict\n      - id: fix-encoding-pragma\n        args: [\"--remove\"]\n      - id: mixed-line-ending\n        args: [\"--fix=lf\"]\n  - repo: https://gitee.com/openmmlab/mirrors-mdformat\n    rev: 0.7.9\n    hooks:\n      - id: mdformat\n        args: [\"--number\"]\n        additional_dependencies:\n          - mdformat-openmmlab\n          - mdformat_frontmatter\n          - linkify-it-py\n  - repo: https://gitee.com/openmmlab/mirrors-codespell\n    rev: v2.2.1\n    hooks:\n      - id: codespell\n  - repo: https://gitee.com/openmmlab/mirrors-docformatter\n    rev: v1.3.1\n    hooks:\n      - id: docformatter\n        args: [\"--in-place\", \"--wrap-descriptions\", \"79\"]\n  - repo: https://gitee.com/openmmlab/mirrors-pyupgrade\n    rev: v3.0.0\n    hooks:\n      - id: pyupgrade\n        args: [\"--py36-plus\"]\n  - repo: https://gitee.com/open-mmlab/pre-commit-hooks\n    rev: v0.2.0\n    hooks:\n      - id: check-algo-readme\n      - id: check-copyright\n        args: [\"mmdet\"]\n#  - repo: https://gitee.com/openmmlab/mirrors-mypy\n#    rev: v0.812\n#    hooks:\n#      - id: mypy\n#        exclude: \"docs\"\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.42,
          "content": "repos:\n  - repo: https://github.com/PyCQA/flake8\n    rev: 5.0.4\n    hooks:\n      - id: flake8\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.11.5\n    hooks:\n      - id: isort\n  - repo: https://github.com/pre-commit/mirrors-yapf\n    rev: v0.32.0\n    hooks:\n      - id: yapf\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.3.0\n    hooks:\n      - id: trailing-whitespace\n      - id: check-yaml\n      - id: end-of-file-fixer\n      - id: requirements-txt-fixer\n      - id: double-quote-string-fixer\n      - id: check-merge-conflict\n      - id: fix-encoding-pragma\n        args: [\"--remove\"]\n      - id: mixed-line-ending\n        args: [\"--fix=lf\"]\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.2.1\n    hooks:\n      - id: codespell\n  - repo: https://github.com/executablebooks/mdformat\n    rev: 0.7.9\n    hooks:\n      - id: mdformat\n        args: [\"--number\"]\n        additional_dependencies:\n          - mdformat-openmmlab\n          - mdformat_frontmatter\n          - linkify-it-py\n  - repo: https://github.com/myint/docformatter\n    rev: v1.3.1\n    hooks:\n      - id: docformatter\n        args: [\"--in-place\", \"--wrap-descriptions\", \"79\"]\n  - repo: https://github.com/open-mmlab/pre-commit-hooks\n    rev: v0.2.0  # Use the ref you want to point at\n    hooks:\n      - id: check-algo-readme\n      - id: check-copyright\n        args: [\"mmdet\"]  # replace the dir_to_check with your expected directory to check\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.19,
          "content": "version: 2\n\nbuild:\n  os: ubuntu-22.04\n  tools:\n    python: \"3.8\"\n\nformats:\n  - epub\n\npython:\n  install:\n    - requirements: requirements/docs.txt\n    - requirements: requirements/readthedocs.txt\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.27,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - name: \"MMDetection Contributors\"\ntitle: \"OpenMMLab Detection Toolbox and Benchmark\"\ndate-released: 2018-08-22\nurl: \"https://github.com/open-mmlab/mmdetection\"\nlicense: Apache-2.0\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.13,
          "content": "Copyright 2018-2023 OpenMMLab. All rights reserved.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2018-2023 OpenMMLab.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.24,
          "content": "include requirements/*.txt\ninclude mmdet/VERSION\ninclude mmdet/.mim/model-index.yml\ninclude mmdet/.mim/dataset-index.yml\ninclude mmdet/.mim/demo/*/*\nrecursive-include mmdet/.mim/configs *.py *.yml\nrecursive-include mmdet/.mim/tools *.sh *.py\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 25.6,
          "content": "<div align=\"center\">\n  <img src=\"resources/mmdet-logo.png\" width=\"600\"/>\n  <div>&nbsp;</div>\n  <div align=\"center\">\n    <b><font size=\"5\">OpenMMLab website</font></b>\n    <sup>\n      <a href=\"https://openmmlab.com\">\n        <i><font size=\"4\">HOT</font></i>\n      </a>\n    </sup>\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    <b><font size=\"5\">OpenMMLab platform</font></b>\n    <sup>\n      <a href=\"https://platform.openmmlab.com\">\n        <i><font size=\"4\">TRY IT OUT</font></i>\n      </a>\n    </sup>\n  </div>\n  <div>&nbsp;</div>\n\n[![PyPI](https://img.shields.io/pypi/v/mmdet)](https://pypi.org/project/mmdet)\n[![docs](https://img.shields.io/badge/docs-latest-blue)](https://mmdetection.readthedocs.io/en/latest/)\n[![badge](https://github.com/open-mmlab/mmdetection/workflows/build/badge.svg)](https://github.com/open-mmlab/mmdetection/actions)\n[![codecov](https://codecov.io/gh/open-mmlab/mmdetection/branch/main/graph/badge.svg)](https://codecov.io/gh/open-mmlab/mmdetection)\n[![license](https://img.shields.io/github/license/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/blob/main/LICENSE)\n[![open issues](https://isitmaintained.com/badge/open/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/issues)\n[![issue resolution](https://isitmaintained.com/badge/resolution/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/issues)\n[![Open in OpenXLab](https://cdn-static.openxlab.org.cn/app-center/openxlab_demo.svg)](https://openxlab.org.cn/apps?search=mmdet)\n\n[📘Documentation](https://mmdetection.readthedocs.io/en/latest/) |\n[🛠️Installation](https://mmdetection.readthedocs.io/en/latest/get_started.html) |\n[👀Model Zoo](https://mmdetection.readthedocs.io/en/latest/model_zoo.html) |\n[🆕Update News](https://mmdetection.readthedocs.io/en/latest/notes/changelog.html) |\n[🚀Ongoing Projects](https://github.com/open-mmlab/mmdetection/projects) |\n[🤔Reporting Issues](https://github.com/open-mmlab/mmdetection/issues/new/choose)\n\n</div>\n\n<div align=\"center\">\n\nEnglish | [简体中文](README_zh-CN.md)\n\n</div>\n\n<div align=\"center\">\n  <a href=\"https://openmmlab.medium.com/\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219255827-67c1a27f-f8c5-46a9-811d-5e57448c61d1.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://discord.com/channels/1037617289144569886/1046608014234370059\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218347213-c080267f-cbb6-443e-8532-8e1ed9a58ea9.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://twitter.com/OpenMMLab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218346637-d30c8a0f-3eba-4699-8131-512fb06d46db.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://www.youtube.com/openmmlab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218346691-ceb2116a-465a-40af-8424-9f30d2348ca9.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://space.bilibili.com/1293512903\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219026751-d7d14cce-a7c9-4e82-9942-8375fca65b99.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://www.zhihu.com/people/openmmlab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219026120-ba71e48b-6e94-4bd4-b4e9-b7d175b5e362.png\" width=\"3%\" alt=\"\" /></a>\n</div>\n\n<div align=\"center\">\n<img src=\"https://github.com/open-mmlab/mmdetection/assets/17425982/6c29886f-ae7a-4a55-8be4-352ee85b7d3e\"/>\n</div>\n\n## Introduction\n\nMMDetection is an open source object detection toolbox based on PyTorch. It is\na part of the [OpenMMLab](https://openmmlab.com/) project.\n\nThe main branch works with **PyTorch 1.8+**.\n\n<img src=\"https://user-images.githubusercontent.com/12907710/187674113-2074d658-f2fb-42d1-ac15-9c4a695e64d7.png\"/>\n\n<details open>\n<summary>Major features</summary>\n\n- **Modular Design**\n\n  We decompose the detection framework into different components and one can easily construct a customized object detection framework by combining different modules.\n\n- **Support of multiple tasks out of box**\n\n  The toolbox directly supports multiple detection tasks such as **object detection**, **instance segmentation**, **panoptic segmentation**, and **semi-supervised object detection**.\n\n- **High efficiency**\n\n  All basic bbox and mask operations run on GPUs. The training speed is faster than or comparable to other codebases, including [Detectron2](https://github.com/facebookresearch/detectron2), [maskrcnn-benchmark](https://github.com/facebookresearch/maskrcnn-benchmark) and [SimpleDet](https://github.com/TuSimple/simpledet).\n\n- **State of the art**\n\n  The toolbox stems from the codebase developed by the *MMDet* team, who won [COCO Detection Challenge](http://cocodataset.org/#detection-leaderboard) in 2018, and we keep pushing it forward.\n  The newly released [RTMDet](configs/rtmdet) also obtains new state-of-the-art results on real-time instance segmentation and rotated object detection tasks and the best parameter-accuracy trade-off on object detection.\n\n</details>\n\nApart from MMDetection, we also released [MMEngine](https://github.com/open-mmlab/mmengine) for model training and [MMCV](https://github.com/open-mmlab/mmcv) for computer vision research, which are heavily depended on by this toolbox.\n\n## What's New\n\n💎 **We have released the pre-trained weights for MM-Grounding-DINO Swin-B and Swin-L, welcome to try and give feedback.**\n\n### Highlight\n\n**v3.3.0** was released in 5/1/2024:\n\n**[MM-Grounding-DINO: An Open and Comprehensive Pipeline for Unified Object Grounding and Detection](https://arxiv.org/abs/2401.02361)**\n\nGrounding DINO is a grounding pre-training model that unifies 2d open vocabulary object detection and phrase grounding, with wide applications. However, its training part has not been open sourced. Therefore, we propose MM-Grounding-DINO, which not only serves as an open source replication version of Grounding DINO, but also achieves significant performance improvement based on reconstructed data types, exploring different dataset combinations and initialization strategies. Moreover, we conduct evaluations from multiple dimensions, including OOD, REC, Phrase Grounding, OVD, and Fine-tune, to fully excavate the advantages and disadvantages of Grounding pre-training, hoping to provide inspiration for future work.\n\ncode: [mm_grounding_dino/README.md](configs/mm_grounding_dino/README.md)\n\n<div align=center>\n<img src=\"https://github.com/open-mmlab/mmdetection/assets/17425982/fb14d1ee-5469-44d2-b865-aac9850c429c\"/>\n</div>\n\nWe are excited to announce our latest work on real-time object recognition tasks, **RTMDet**, a family of fully convolutional single-stage detectors. RTMDet not only achieves the best parameter-accuracy trade-off on object detection from tiny to extra-large model sizes but also obtains new state-of-the-art performance on instance segmentation and rotated object detection tasks. Details can be found in the [technical report](https://arxiv.org/abs/2212.07784). Pre-trained models are [here](configs/rtmdet).\n\n[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/rtmdet-an-empirical-study-of-designing-real/real-time-instance-segmentation-on-mscoco)](https://paperswithcode.com/sota/real-time-instance-segmentation-on-mscoco?p=rtmdet-an-empirical-study-of-designing-real)\n[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/rtmdet-an-empirical-study-of-designing-real/object-detection-in-aerial-images-on-dota-1)](https://paperswithcode.com/sota/object-detection-in-aerial-images-on-dota-1?p=rtmdet-an-empirical-study-of-designing-real)\n[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/rtmdet-an-empirical-study-of-designing-real/object-detection-in-aerial-images-on-hrsc2016)](https://paperswithcode.com/sota/object-detection-in-aerial-images-on-hrsc2016?p=rtmdet-an-empirical-study-of-designing-real)\n\n| Task                     | Dataset | AP                                   | FPS(TRT FP16 BS1 3090) |\n| ------------------------ | ------- | ------------------------------------ | ---------------------- |\n| Object Detection         | COCO    | 52.8                                 | 322                    |\n| Instance Segmentation    | COCO    | 44.6                                 | 188                    |\n| Rotated Object Detection | DOTA    | 78.9(single-scale)/81.3(multi-scale) | 121                    |\n\n<div align=center>\n<img src=\"https://user-images.githubusercontent.com/12907710/208044554-1e8de6b5-48d8-44e4-a7b5-75076c7ebb71.png\"/>\n</div>\n\n## Installation\n\nPlease refer to [Installation](https://mmdetection.readthedocs.io/en/latest/get_started.html) for installation instructions.\n\n## Getting Started\n\nPlease see [Overview](https://mmdetection.readthedocs.io/en/latest/get_started.html) for the general introduction of MMDetection.\n\nFor detailed user guides and advanced guides, please refer to our [documentation](https://mmdetection.readthedocs.io/en/latest/):\n\n- User Guides\n\n  <details>\n\n  - [Train & Test](https://mmdetection.readthedocs.io/en/latest/user_guides/index.html#train-test)\n    - [Learn about Configs](https://mmdetection.readthedocs.io/en/latest/user_guides/config.html)\n    - [Inference with existing models](https://mmdetection.readthedocs.io/en/latest/user_guides/inference.html)\n    - [Dataset Prepare](https://mmdetection.readthedocs.io/en/latest/user_guides/dataset_prepare.html)\n    - [Test existing models on standard datasets](https://mmdetection.readthedocs.io/en/latest/user_guides/test.html)\n    - [Train predefined models on standard datasets](https://mmdetection.readthedocs.io/en/latest/user_guides/train.html)\n    - [Train with customized datasets](https://mmdetection.readthedocs.io/en/latest/user_guides/train.html#train-with-customized-datasets)\n    - [Train with customized models and standard datasets](https://mmdetection.readthedocs.io/en/latest/user_guides/new_model.html)\n    - [Finetuning Models](https://mmdetection.readthedocs.io/en/latest/user_guides/finetune.html)\n    - [Test Results Submission](https://mmdetection.readthedocs.io/en/latest/user_guides/test_results_submission.html)\n    - [Weight initialization](https://mmdetection.readthedocs.io/en/latest/user_guides/init_cfg.html)\n    - [Use a single stage detector as RPN](https://mmdetection.readthedocs.io/en/latest/user_guides/single_stage_as_rpn.html)\n    - [Semi-supervised Object Detection](https://mmdetection.readthedocs.io/en/latest/user_guides/semi_det.html)\n  - [Useful Tools](https://mmdetection.readthedocs.io/en/latest/user_guides/index.html#useful-tools)\n\n  </details>\n\n- Advanced Guides\n\n  <details>\n\n  - [Basic Concepts](https://mmdetection.readthedocs.io/en/latest/advanced_guides/index.html#basic-concepts)\n  - [Component Customization](https://mmdetection.readthedocs.io/en/latest/advanced_guides/index.html#component-customization)\n  - [How to](https://mmdetection.readthedocs.io/en/latest/advanced_guides/index.html#how-to)\n\n  </details>\n\nWe also provide object detection colab tutorial [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](demo/MMDet_Tutorial.ipynb) and instance segmentation colab tutorial [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](demo/MMDet_InstanceSeg_Tutorial.ipynb).\n\nTo migrate from MMDetection 2.x, please refer to [migration](https://mmdetection.readthedocs.io/en/latest/migration.html).\n\n## Overview of Benchmark and Model Zoo\n\nResults and models are available in the [model zoo](docs/en/model_zoo.md).\n\n<div align=\"center\">\n  <b>Architectures</b>\n</div>\n<table align=\"center\">\n  <tbody>\n    <tr align=\"center\" valign=\"bottom\">\n      <td>\n        <b>Object Detection</b>\n      </td>\n      <td>\n        <b>Instance Segmentation</b>\n      </td>\n      <td>\n        <b>Panoptic Segmentation</b>\n      </td>\n      <td>\n        <b>Other</b>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td>\n        <ul>\n            <li><a href=\"configs/fast_rcnn\">Fast R-CNN (ICCV'2015)</a></li>\n            <li><a href=\"configs/faster_rcnn\">Faster R-CNN (NeurIPS'2015)</a></li>\n            <li><a href=\"configs/rpn\">RPN (NeurIPS'2015)</a></li>\n            <li><a href=\"configs/ssd\">SSD (ECCV'2016)</a></li>\n            <li><a href=\"configs/retinanet\">RetinaNet (ICCV'2017)</a></li>\n            <li><a href=\"configs/cascade_rcnn\">Cascade R-CNN (CVPR'2018)</a></li>\n            <li><a href=\"configs/yolo\">YOLOv3 (ArXiv'2018)</a></li>\n            <li><a href=\"configs/cornernet\">CornerNet (ECCV'2018)</a></li>\n            <li><a href=\"configs/grid_rcnn\">Grid R-CNN (CVPR'2019)</a></li>\n            <li><a href=\"configs/guided_anchoring\">Guided Anchoring (CVPR'2019)</a></li>\n            <li><a href=\"configs/fsaf\">FSAF (CVPR'2019)</a></li>\n            <li><a href=\"configs/centernet\">CenterNet (CVPR'2019)</a></li>\n            <li><a href=\"configs/libra_rcnn\">Libra R-CNN (CVPR'2019)</a></li>\n            <li><a href=\"configs/tridentnet\">TridentNet (ICCV'2019)</a></li>\n            <li><a href=\"configs/fcos\">FCOS (ICCV'2019)</a></li>\n            <li><a href=\"configs/reppoints\">RepPoints (ICCV'2019)</a></li>\n            <li><a href=\"configs/free_anchor\">FreeAnchor (NeurIPS'2019)</a></li>\n            <li><a href=\"configs/cascade_rpn\">CascadeRPN (NeurIPS'2019)</a></li>\n            <li><a href=\"configs/foveabox\">Foveabox (TIP'2020)</a></li>\n            <li><a href=\"configs/double_heads\">Double-Head R-CNN (CVPR'2020)</a></li>\n            <li><a href=\"configs/atss\">ATSS (CVPR'2020)</a></li>\n            <li><a href=\"configs/nas_fcos\">NAS-FCOS (CVPR'2020)</a></li>\n            <li><a href=\"configs/centripetalnet\">CentripetalNet (CVPR'2020)</a></li>\n            <li><a href=\"configs/autoassign\">AutoAssign (ArXiv'2020)</a></li>\n            <li><a href=\"configs/sabl\">Side-Aware Boundary Localization (ECCV'2020)</a></li>\n            <li><a href=\"configs/dynamic_rcnn\">Dynamic R-CNN (ECCV'2020)</a></li>\n            <li><a href=\"configs/detr\">DETR (ECCV'2020)</a></li>\n            <li><a href=\"configs/paa\">PAA (ECCV'2020)</a></li>\n            <li><a href=\"configs/vfnet\">VarifocalNet (CVPR'2021)</a></li>\n            <li><a href=\"configs/sparse_rcnn\">Sparse R-CNN (CVPR'2021)</a></li>\n            <li><a href=\"configs/yolof\">YOLOF (CVPR'2021)</a></li>\n            <li><a href=\"configs/yolox\">YOLOX (CVPR'2021)</a></li>\n            <li><a href=\"configs/deformable_detr\">Deformable DETR (ICLR'2021)</a></li>\n            <li><a href=\"configs/tood\">TOOD (ICCV'2021)</a></li>\n            <li><a href=\"configs/ddod\">DDOD (ACM MM'2021)</a></li>\n            <li><a href=\"configs/rtmdet\">RTMDet (ArXiv'2022)</a></li>\n            <li><a href=\"configs/conditional_detr\">Conditional DETR (ICCV'2021)</a></li>\n            <li><a href=\"configs/dab_detr\">DAB-DETR (ICLR'2022)</a></li>\n            <li><a href=\"configs/dino\">DINO (ICLR'2023)</a></li>\n            <li><a href=\"configs/glip\">GLIP (CVPR'2022)</a></li>\n            <li><a href=\"configs/ddq\">DDQ (CVPR'2023)</a></li>\n            <li><a href=\"projects/DiffusionDet\">DiffusionDet (ArXiv'2023)</a></li>\n            <li><a href=\"projects/EfficientDet\">EfficientDet (CVPR'2020)</a></li>\n            <li><a href=\"projects/ViTDet\">ViTDet (ECCV'2022)</a></li>\n            <li><a href=\"projects/Detic\">Detic (ECCV'2022)</a></li>\n            <li><a href=\"projects/CO-DETR\">CO-DETR (ICCV'2023)</a></li>\n      </ul>\n      </td>\n      <td>\n        <ul>\n          <li><a href=\"configs/mask_rcnn\">Mask R-CNN (ICCV'2017)</a></li>\n          <li><a href=\"configs/cascade_rcnn\">Cascade Mask R-CNN (CVPR'2018)</a></li>\n          <li><a href=\"configs/ms_rcnn\">Mask Scoring R-CNN (CVPR'2019)</a></li>\n          <li><a href=\"configs/htc\">Hybrid Task Cascade (CVPR'2019)</a></li>\n          <li><a href=\"configs/yolact\">YOLACT (ICCV'2019)</a></li>\n          <li><a href=\"configs/instaboost\">InstaBoost (ICCV'2019)</a></li>\n          <li><a href=\"configs/solo\">SOLO (ECCV'2020)</a></li>\n          <li><a href=\"configs/point_rend\">PointRend (CVPR'2020)</a></li>\n          <li><a href=\"configs/detectors\">DetectoRS (ArXiv'2020)</a></li>\n          <li><a href=\"configs/solov2\">SOLOv2 (NeurIPS'2020)</a></li>\n          <li><a href=\"configs/scnet\">SCNet (AAAI'2021)</a></li>\n          <li><a href=\"configs/queryinst\">QueryInst (ICCV'2021)</a></li>\n          <li><a href=\"configs/mask2former\">Mask2Former (ArXiv'2021)</a></li>\n          <li><a href=\"configs/condinst\">CondInst (ECCV'2020)</a></li>\n          <li><a href=\"projects/SparseInst\">SparseInst (CVPR'2022)</a></li>\n          <li><a href=\"configs/rtmdet\">RTMDet (ArXiv'2022)</a></li>\n          <li><a href=\"configs/boxinst\">BoxInst (CVPR'2021)</a></li>\n          <li><a href=\"projects/ConvNeXt-V2\">ConvNeXt-V2 (Arxiv'2023)</a></li>\n        </ul>\n      </td>\n      <td>\n        <ul>\n          <li><a href=\"configs/panoptic_fpn\">Panoptic FPN (CVPR'2019)</a></li>\n          <li><a href=\"configs/maskformer\">MaskFormer (NeurIPS'2021)</a></li>\n          <li><a href=\"configs/mask2former\">Mask2Former (ArXiv'2021)</a></li>\n          <li><a href=\"configs/XDecoder\">XDecoder (CVPR'2023)</a></li>\n        </ul>\n      </td>\n      <td>\n        </ul>\n          <li><b>Contrastive Learning</b></li>\n        <ul>\n        <ul>\n          <li><a href=\"configs/selfsup_pretrain\">SwAV (NeurIPS'2020)</a></li>\n          <li><a href=\"configs/selfsup_pretrain\">MoCo (CVPR'2020)</a></li>\n          <li><a href=\"configs/selfsup_pretrain\">MoCov2 (ArXiv'2020)</a></li>\n        </ul>\n        </ul>\n        </ul>\n          <li><b>Distillation</b></li>\n        <ul>\n        <ul>\n          <li><a href=\"configs/ld\">Localization Distillation (CVPR'2022)</a></li>\n          <li><a href=\"configs/lad\">Label Assignment Distillation (WACV'2022)</a></li>\n        </ul>\n        </ul>\n          <li><b>Semi-Supervised Object Detection</b></li>\n        <ul>\n        <ul>\n          <li><a href=\"configs/soft_teacher\">Soft Teacher (ICCV'2021)</a></li>\n        </ul>\n        </ul>\n      </ul>\n      </td>\n    </tr>\n</td>\n    </tr>\n  </tbody>\n</table>\n\n<div align=\"center\">\n  <b>Components</b>\n</div>\n<table align=\"center\">\n  <tbody>\n    <tr align=\"center\" valign=\"bottom\">\n      <td>\n        <b>Backbones</b>\n      </td>\n      <td>\n        <b>Necks</b>\n      </td>\n      <td>\n        <b>Loss</b>\n      </td>\n      <td>\n        <b>Common</b>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td>\n      <ul>\n        <li>VGG (ICLR'2015)</li>\n        <li>ResNet (CVPR'2016)</li>\n        <li>ResNeXt (CVPR'2017)</li>\n        <li>MobileNetV2 (CVPR'2018)</li>\n        <li><a href=\"configs/hrnet\">HRNet (CVPR'2019)</a></li>\n        <li><a href=\"configs/empirical_attention\">Generalized Attention (ICCV'2019)</a></li>\n        <li><a href=\"configs/gcnet\">GCNet (ICCVW'2019)</a></li>\n        <li><a href=\"configs/res2net\">Res2Net (TPAMI'2020)</a></li>\n        <li><a href=\"configs/regnet\">RegNet (CVPR'2020)</a></li>\n        <li><a href=\"configs/resnest\">ResNeSt (ArXiv'2020)</a></li>\n        <li><a href=\"configs/pvt\">PVT (ICCV'2021)</a></li>\n        <li><a href=\"configs/swin\">Swin (CVPR'2021)</a></li>\n        <li><a href=\"configs/pvt\">PVTv2 (ArXiv'2021)</a></li>\n        <li><a href=\"configs/resnet_strikes_back\">ResNet strikes back (ArXiv'2021)</a></li>\n        <li><a href=\"configs/efficientnet\">EfficientNet (ArXiv'2021)</a></li>\n        <li><a href=\"configs/convnext\">ConvNeXt (CVPR'2022)</a></li>\n        <li><a href=\"projects/ConvNeXt-V2\">ConvNeXtv2 (ArXiv'2023)</a></li>\n      </ul>\n      </td>\n      <td>\n      <ul>\n        <li><a href=\"configs/pafpn\">PAFPN (CVPR'2018)</a></li>\n        <li><a href=\"configs/nas_fpn\">NAS-FPN (CVPR'2019)</a></li>\n        <li><a href=\"configs/carafe\">CARAFE (ICCV'2019)</a></li>\n        <li><a href=\"configs/fpg\">FPG (ArXiv'2020)</a></li>\n        <li><a href=\"configs/groie\">GRoIE (ICPR'2020)</a></li>\n        <li><a href=\"configs/dyhead\">DyHead (CVPR'2021)</a></li>\n      </ul>\n      </td>\n      <td>\n        <ul>\n          <li><a href=\"configs/ghm\">GHM (AAAI'2019)</a></li>\n          <li><a href=\"configs/gfl\">Generalized Focal Loss (NeurIPS'2020)</a></li>\n          <li><a href=\"configs/seesaw_loss\">Seasaw Loss (CVPR'2021)</a></li>\n        </ul>\n      </td>\n      <td>\n        <ul>\n          <li><a href=\"configs/faster_rcnn/faster-rcnn_r50_fpn_ohem_1x_coco.py\">OHEM (CVPR'2016)</a></li>\n          <li><a href=\"configs/gn\">Group Normalization (ECCV'2018)</a></li>\n          <li><a href=\"configs/dcn\">DCN (ICCV'2017)</a></li>\n          <li><a href=\"configs/dcnv2\">DCNv2 (CVPR'2019)</a></li>\n          <li><a href=\"configs/gn+ws\">Weight Standardization (ArXiv'2019)</a></li>\n          <li><a href=\"configs/pisa\">Prime Sample Attention (CVPR'2020)</a></li>\n          <li><a href=\"configs/strong_baselines\">Strong Baselines (CVPR'2021)</a></li>\n          <li><a href=\"configs/resnet_strikes_back\">Resnet strikes back (ArXiv'2021)</a></li>\n        </ul>\n      </td>\n    </tr>\n</td>\n    </tr>\n  </tbody>\n</table>\n\nSome other methods are also supported in [projects using MMDetection](./docs/en/notes/projects.md).\n\n## FAQ\n\nPlease refer to [FAQ](docs/en/notes/faq.md) for frequently asked questions.\n\n## Contributing\n\nWe appreciate all contributions to improve MMDetection. Ongoing projects can be found in out [GitHub Projects](https://github.com/open-mmlab/mmdetection/projects). Welcome community users to participate in these projects. Please refer to [CONTRIBUTING.md](.github/CONTRIBUTING.md) for the contributing guideline.\n\n## Acknowledgement\n\nMMDetection is an open source project that is contributed by researchers and engineers from various colleges and companies. We appreciate all the contributors who implement their methods or add new features, as well as users who give valuable feedbacks.\nWe wish that the toolbox and benchmark could serve the growing research community by providing a flexible toolkit to reimplement existing methods and develop their own new detectors.\n\n## Citation\n\nIf you use this toolbox or benchmark in your research, please cite this project.\n\n```\n@article{mmdetection,\n  title   = {{MMDetection}: Open MMLab Detection Toolbox and Benchmark},\n  author  = {Chen, Kai and Wang, Jiaqi and Pang, Jiangmiao and Cao, Yuhang and\n             Xiong, Yu and Li, Xiaoxiao and Sun, Shuyang and Feng, Wansen and\n             Liu, Ziwei and Xu, Jiarui and Zhang, Zheng and Cheng, Dazhi and\n             Zhu, Chenchen and Cheng, Tianheng and Zhao, Qijie and Li, Buyu and\n             Lu, Xin and Zhu, Rui and Wu, Yue and Dai, Jifeng and Wang, Jingdong\n             and Shi, Jianping and Ouyang, Wanli and Loy, Chen Change and Lin, Dahua},\n  journal= {arXiv preprint arXiv:1906.07155},\n  year={2019}\n}\n```\n\n## License\n\nThis project is released under the [Apache 2.0 license](LICENSE).\n\n## Projects in OpenMMLab\n\n- [MMEngine](https://github.com/open-mmlab/mmengine): OpenMMLab foundational library for training deep learning models.\n- [MMCV](https://github.com/open-mmlab/mmcv): OpenMMLab foundational library for computer vision.\n- [MMPreTrain](https://github.com/open-mmlab/mmpretrain): OpenMMLab pre-training toolbox and benchmark.\n- [MMagic](https://github.com/open-mmlab/mmagic): Open**MM**Lab **A**dvanced, **G**enerative and **I**ntelligent **C**reation toolbox.\n- [MMDetection](https://github.com/open-mmlab/mmdetection): OpenMMLab detection toolbox and benchmark.\n- [MMDetection3D](https://github.com/open-mmlab/mmdetection3d): OpenMMLab's next-generation platform for general 3D object detection.\n- [MMRotate](https://github.com/open-mmlab/mmrotate): OpenMMLab rotated object detection toolbox and benchmark.\n- [MMYOLO](https://github.com/open-mmlab/mmyolo): OpenMMLab YOLO series toolbox and benchmark.\n- [MMSegmentation](https://github.com/open-mmlab/mmsegmentation): OpenMMLab semantic segmentation toolbox and benchmark.\n- [MMOCR](https://github.com/open-mmlab/mmocr): OpenMMLab text detection, recognition, and understanding toolbox.\n- [MMPose](https://github.com/open-mmlab/mmpose): OpenMMLab pose estimation toolbox and benchmark.\n- [MMHuman3D](https://github.com/open-mmlab/mmhuman3d): OpenMMLab 3D human parametric model toolbox and benchmark.\n- [MMSelfSup](https://github.com/open-mmlab/mmselfsup): OpenMMLab self-supervised learning toolbox and benchmark.\n- [MMRazor](https://github.com/open-mmlab/mmrazor): OpenMMLab model compression toolbox and benchmark.\n- [MMFewShot](https://github.com/open-mmlab/mmfewshot): OpenMMLab fewshot learning toolbox and benchmark.\n- [MMAction2](https://github.com/open-mmlab/mmaction2): OpenMMLab's next-generation action understanding toolbox and benchmark.\n- [MMTracking](https://github.com/open-mmlab/mmtracking): OpenMMLab video perception toolbox and benchmark.\n- [MMFlow](https://github.com/open-mmlab/mmflow): OpenMMLab optical flow toolbox and benchmark.\n- [MMEditing](https://github.com/open-mmlab/mmediting): OpenMMLab image and video editing toolbox.\n- [MMGeneration](https://github.com/open-mmlab/mmgeneration): OpenMMLab image and video generative models toolbox.\n- [MMDeploy](https://github.com/open-mmlab/mmdeploy): OpenMMLab model deployment framework.\n- [MIM](https://github.com/open-mmlab/mim): MIM installs OpenMMLab packages.\n- [MMEval](https://github.com/open-mmlab/mmeval): A unified evaluation library for multiple machine learning libraries.\n- [Playground](https://github.com/open-mmlab/playground): A central hub for gathering and showcasing amazing projects built upon OpenMMLab.\n"
        },
        {
          "name": "README_zh-CN.md",
          "type": "blob",
          "size": 26.05,
          "content": "<div align=\"center\">\n  <img src=\"resources/mmdet-logo.png\" width=\"600\"/>\n  <div>&nbsp;</div>\n  <div align=\"center\">\n    <b><font size=\"5\">OpenMMLab 官网</font></b>\n    <sup>\n      <a href=\"https://openmmlab.com\">\n        <i><font size=\"4\">HOT</font></i>\n      </a>\n    </sup>\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    <b><font size=\"5\">OpenMMLab 开放平台</font></b>\n    <sup>\n      <a href=\"https://platform.openmmlab.com\">\n        <i><font size=\"4\">TRY IT OUT</font></i>\n      </a>\n    </sup>\n  </div>\n  <div>&nbsp;</div>\n\n[![PyPI](https://img.shields.io/pypi/v/mmdet)](https://pypi.org/project/mmdet)\n[![docs](https://img.shields.io/badge/docs-latest-blue)](https://mmdetection.readthedocs.io/en/latest/)\n[![badge](https://github.com/open-mmlab/mmdetection/workflows/build/badge.svg)](https://github.com/open-mmlab/mmdetection/actions)\n[![codecov](https://codecov.io/gh/open-mmlab/mmdetection/branch/main/graph/badge.svg)](https://codecov.io/gh/open-mmlab/mmdetection)\n[![license](https://img.shields.io/github/license/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/blob/main/LICENSE)\n[![open issues](https://isitmaintained.com/badge/open/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/issues)\n[![issue resolution](https://isitmaintained.com/badge/resolution/open-mmlab/mmdetection.svg)](https://github.com/open-mmlab/mmdetection/issues)\n[![Open in OpenXLab](https://cdn-static.openxlab.org.cn/app-center/openxlab_demo.svg)](https://openxlab.org.cn/apps?search=mmdet)\n\n[📘使用文档](https://mmdetection.readthedocs.io/zh_CN/latest/) |\n[🛠️安装教程](https://mmdetection.readthedocs.io/zh_CN/latest/get_started.html) |\n[👀模型库](https://mmdetection.readthedocs.io/zh_CN/latest/model_zoo.html) |\n[🆕更新日志](https://mmdetection.readthedocs.io/en/latest/notes/changelog.html) |\n[🚀进行中的项目](https://github.com/open-mmlab/mmdetection/projects) |\n[🤔报告问题](https://github.com/open-mmlab/mmdetection/issues/new/choose)\n\n</div>\n\n<div align=\"center\">\n\n[English](README.md) | 简体中文\n\n</div>\n\n<div align=\"center\">\n  <a href=\"https://openmmlab.medium.com/\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219255827-67c1a27f-f8c5-46a9-811d-5e57448c61d1.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://discord.com/channels/1037617289144569886/1046608014234370059\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218347213-c080267f-cbb6-443e-8532-8e1ed9a58ea9.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://twitter.com/OpenMMLab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218346637-d30c8a0f-3eba-4699-8131-512fb06d46db.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://www.youtube.com/openmmlab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/218346691-ceb2116a-465a-40af-8424-9f30d2348ca9.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://space.bilibili.com/1293512903\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219026751-d7d14cce-a7c9-4e82-9942-8375fca65b99.png\" width=\"3%\" alt=\"\" /></a>\n  <img src=\"https://user-images.githubusercontent.com/25839884/218346358-56cc8e2f-a2b8-487f-9088-32480cceabcf.png\" width=\"3%\" alt=\"\" />\n  <a href=\"https://www.zhihu.com/people/openmmlab\" style=\"text-decoration:none;\">\n    <img src=\"https://user-images.githubusercontent.com/25839884/219026120-ba71e48b-6e94-4bd4-b4e9-b7d175b5e362.png\" width=\"3%\" alt=\"\" /></a>\n</div>\n\n<div align=\"center\">\n<img src=\"https://github.com/open-mmlab/mmdetection/assets/17425982/6c29886f-ae7a-4a55-8be4-352ee85b7d3e\"/>\n</div>\n\n## 简介\n\nMMDetection 是一个基于 PyTorch 的目标检测开源工具箱。它是 [OpenMMLab](https://openmmlab.com/) 项目的一部分。\n\n主分支代码目前支持 PyTorch 1.8 及其以上的版本。\n\n<img src=\"https://user-images.githubusercontent.com/12907710/187674113-2074d658-f2fb-42d1-ac15-9c4a695e64d7.png\"/>\n\n<details open>\n<summary>主要特性</summary>\n\n- **模块化设计**\n\n  MMDetection 将检测框架解耦成不同的模块组件，通过组合不同的模块组件，用户可以便捷地构建自定义的检测模型\n\n- **支持多种检测任务**\n\n  MMDetection 支持了各种不同的检测任务，包括**目标检测**，**实例分割**，**全景分割**，以及**半监督目标检测**。\n\n- **速度快**\n\n  基本的框和 mask 操作都实现了 GPU 版本，训练速度比其他代码库更快或者相当，包括 [Detectron2](https://github.com/facebookresearch/detectron2), [maskrcnn-benchmark](https://github.com/facebookresearch/maskrcnn-benchmark) 和 [SimpleDet](https://github.com/TuSimple/simpledet)。\n\n- **性能高**\n\n  MMDetection 这个算法库源自于 COCO 2018 目标检测竞赛的冠军团队 *MMDet* 团队开发的代码，我们在之后持续进行了改进和提升。\n  新发布的 [RTMDet](configs/rtmdet) 还在实时实例分割和旋转目标检测任务中取得了最先进的成果，同时也在目标检测模型中取得了最佳的的参数量和精度平衡。\n\n</details>\n\n除了 MMDetection 之外，我们还开源了深度学习训练库 [MMEngine](https://github.com/open-mmlab/mmengine) 和计算机视觉基础库 [MMCV](https://github.com/open-mmlab/mmcv)，它们是 MMDetection 的主要依赖。\n\n## 最新进展\n\n💎 **我们已经发布了 MM-Grounding-DINO Swin-B 和 Swin-L 预训练权重，欢迎试用和反馈.**\n\n### 亮点\n\n**v3.3.0** 版本已经在 2024.1.5 发布：\n\n**MM-Grounding-DINO: 轻松涨点，数据到评测全面开源**\n\nGrounding DINO 是一个统一了 2d 开放词汇目标检测和 Phrase Grounding 的检测预训练模型，应用广泛，但是其训练部分并未开源，为此提出了 MM-Grounding-DINO。其不仅作为 Grounding DINO 的开源复现版，MM-Grounding-DINO 基于重新构建的数据类型出发，在探索了不同数据集组合和初始化策略基础上实现了 Grounding DINO 的性能极大提升，并且从多个维度包括 OOD、REC、Phrase Grounding、OVD 和 Finetune 等方面进行评测，充分挖掘 Grounding 预训练优缺点，希望能为后续工作提供启发。\n\narxiv 技术报告：https://arxiv.org/abs/2401.02361\n\n代码地址: [mm_grounding_dino/README.md](configs/mm_grounding_dino/README.md)\n\n<div align=center>\n<img src=\"https://github.com/open-mmlab/mmdetection/assets/17425982/fb14d1ee-5469-44d2-b865-aac9850c429c\"/>\n</div>\n\n我们很高兴向大家介绍我们在实时目标识别任务方面的最新成果 RTMDet，包含了一系列的全卷积单阶段检测模型。 RTMDet 不仅在从 tiny 到 extra-large 尺寸的目标检测模型上实现了最佳的参数量和精度的平衡，而且在实时实例分割和旋转目标检测任务上取得了最先进的成果。 更多细节请参阅[技术报告](https://arxiv.org/abs/2212.07784)。 预训练模型可以在[这里](configs/rtmdet)找到。\n\n[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/rtmdet-an-empirical-study-of-designing-real/real-time-instance-segmentation-on-mscoco)](https://paperswithcode.com/sota/real-time-instance-segmentation-on-mscoco?p=rtmdet-an-empirical-study-of-designing-real)\n[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/rtmdet-an-empirical-study-of-designing-real/object-detection-in-aerial-images-on-dota-1)](https://paperswithcode.com/sota/object-detection-in-aerial-images-on-dota-1?p=rtmdet-an-empirical-study-of-designing-real)\n[![PWC](https://img.shields.io/endpoint.svg?url=https://paperswithcode.com/badge/rtmdet-an-empirical-study-of-designing-real/object-detection-in-aerial-images-on-hrsc2016)](https://paperswithcode.com/sota/object-detection-in-aerial-images-on-hrsc2016?p=rtmdet-an-empirical-study-of-designing-real)\n\n| Task                     | Dataset | AP                                   | FPS(TRT FP16 BS1 3090) |\n| ------------------------ | ------- | ------------------------------------ | ---------------------- |\n| Object Detection         | COCO    | 52.8                                 | 322                    |\n| Instance Segmentation    | COCO    | 44.6                                 | 188                    |\n| Rotated Object Detection | DOTA    | 78.9(single-scale)/81.3(multi-scale) | 121                    |\n\n<div align=center>\n<img src=\"https://user-images.githubusercontent.com/12907710/208044554-1e8de6b5-48d8-44e4-a7b5-75076c7ebb71.png\"/>\n</div>\n\n## 安装\n\n请参考[快速入门文档](https://mmdetection.readthedocs.io/zh_CN/latest/get_started.html)进行安装。\n\n## 教程\n\n请阅读[概述](https://mmdetection.readthedocs.io/zh_CN/latest/get_started.html)对 MMDetection 进行初步的了解。\n\n为了帮助用户更进一步了解 MMDetection，我们准备了用户指南和进阶指南，请阅读我们的[文档](https://mmdetection.readthedocs.io/zh_CN/latest/)：\n\n- 用户指南\n\n  <details>\n\n  - [训练 & 测试](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/index.html#train-test)\n    - [学习配置文件](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/config.html)\n    - [使用已有模型在标准数据集上进行推理](https://mmdetection.readthedocs.io/en/latest/user_guides/inference.html)\n    - [数据集准备](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/dataset_prepare.html)\n    - [测试现有模型](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/test.html)\n    - [在标准数据集上训练预定义的模型](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/train.html)\n    - [在自定义数据集上进行训练](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/train.html#train-with-customized-datasets)\n    - [在标准数据集上训练自定义模型](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/new_model.html)\n    - [模型微调](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/finetune.html)\n    - [提交测试结果](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/test_results_submission.html)\n    - [权重初始化](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/init_cfg.html)\n    - [将单阶段检测器作为 RPN](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/single_stage_as_rpn.html)\n    - [半监督目标检测](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/semi_det.html)\n  - [实用工具](https://mmdetection.readthedocs.io/zh_CN/latest/user_guides/index.html#useful-tools)\n\n  </details>\n\n- 进阶指南\n\n  <details>\n\n  - [基础概念](https://mmdetection.readthedocs.io/zh_CN/latest/advanced_guides/index.html#basic-concepts)\n  - [组件定制](https://mmdetection.readthedocs.io/zh_CN/latest/advanced_guides/index.html#component-customization)\n  - [How to](https://mmdetection.readthedocs.io/zh_CN/latest/advanced_guides/index.html#how-to)\n\n  </details>\n\n我们提供了检测的 colab 教程 [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](demo/MMDet_Tutorial.ipynb) 和 实例分割的 colab 教程 [![Open in Colab](https://colab.research.google.com/assets/colab-badge.svg)](demo/MMDet_Tutorial.ipynb)\n\n同时，我们还提供了 [MMDetection 中文解读文案汇总](docs/zh_cn/article.md)\n\n若需要将2.x版本的代码迁移至新版，请参考[迁移文档](https://mmdetection.readthedocs.io/en/latest/migration.html)。\n\n## 基准测试和模型库\n\n测试结果和模型可以在[模型库](docs/zh_cn/model_zoo.md)中找到。\n\n<div align=\"center\">\n  <b>算法架构</b>\n</div>\n<table align=\"center\">\n  <tbody>\n    <tr align=\"center\" valign=\"bottom\">\n      <td>\n        <b>Object Detection</b>\n      </td>\n      <td>\n        <b>Instance Segmentation</b>\n      </td>\n      <td>\n        <b>Panoptic Segmentation</b>\n      </td>\n      <td>\n        <b>Other</b>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td>\n        <ul>\n            <li><a href=\"configs/fast_rcnn\">Fast R-CNN (ICCV'2015)</a></li>\n            <li><a href=\"configs/faster_rcnn\">Faster R-CNN (NeurIPS'2015)</a></li>\n            <li><a href=\"configs/rpn\">RPN (NeurIPS'2015)</a></li>\n            <li><a href=\"configs/ssd\">SSD (ECCV'2016)</a></li>\n            <li><a href=\"configs/retinanet\">RetinaNet (ICCV'2017)</a></li>\n            <li><a href=\"configs/cascade_rcnn\">Cascade R-CNN (CVPR'2018)</a></li>\n            <li><a href=\"configs/yolo\">YOLOv3 (ArXiv'2018)</a></li>\n            <li><a href=\"configs/cornernet\">CornerNet (ECCV'2018)</a></li>\n            <li><a href=\"configs/grid_rcnn\">Grid R-CNN (CVPR'2019)</a></li>\n            <li><a href=\"configs/guided_anchoring\">Guided Anchoring (CVPR'2019)</a></li>\n            <li><a href=\"configs/fsaf\">FSAF (CVPR'2019)</a></li>\n            <li><a href=\"configs/centernet\">CenterNet (CVPR'2019)</a></li>\n            <li><a href=\"configs/libra_rcnn\">Libra R-CNN (CVPR'2019)</a></li>\n            <li><a href=\"configs/tridentnet\">TridentNet (ICCV'2019)</a></li>\n            <li><a href=\"configs/fcos\">FCOS (ICCV'2019)</a></li>\n            <li><a href=\"configs/reppoints\">RepPoints (ICCV'2019)</a></li>\n            <li><a href=\"configs/free_anchor\">FreeAnchor (NeurIPS'2019)</a></li>\n            <li><a href=\"configs/cascade_rpn\">CascadeRPN (NeurIPS'2019)</a></li>\n            <li><a href=\"configs/foveabox\">Foveabox (TIP'2020)</a></li>\n            <li><a href=\"configs/double_heads\">Double-Head R-CNN (CVPR'2020)</a></li>\n            <li><a href=\"configs/atss\">ATSS (CVPR'2020)</a></li>\n            <li><a href=\"configs/nas_fcos\">NAS-FCOS (CVPR'2020)</a></li>\n            <li><a href=\"configs/centripetalnet\">CentripetalNet (CVPR'2020)</a></li>\n            <li><a href=\"configs/autoassign\">AutoAssign (ArXiv'2020)</a></li>\n            <li><a href=\"configs/sabl\">Side-Aware Boundary Localization (ECCV'2020)</a></li>\n            <li><a href=\"configs/dynamic_rcnn\">Dynamic R-CNN (ECCV'2020)</a></li>\n            <li><a href=\"configs/detr\">DETR (ECCV'2020)</a></li>\n            <li><a href=\"configs/paa\">PAA (ECCV'2020)</a></li>\n            <li><a href=\"configs/vfnet\">VarifocalNet (CVPR'2021)</a></li>\n            <li><a href=\"configs/sparse_rcnn\">Sparse R-CNN (CVPR'2021)</a></li>\n            <li><a href=\"configs/yolof\">YOLOF (CVPR'2021)</a></li>\n            <li><a href=\"configs/yolox\">YOLOX (CVPR'2021)</a></li>\n            <li><a href=\"configs/deformable_detr\">Deformable DETR (ICLR'2021)</a></li>\n            <li><a href=\"configs/tood\">TOOD (ICCV'2021)</a></li>\n            <li><a href=\"configs/ddod\">DDOD (ACM MM'2021)</a></li>\n            <li><a href=\"configs/rtmdet\">RTMDet (ArXiv'2022)</a></li>\n            <li><a href=\"configs/conditional_detr\">Conditional DETR (ICCV'2021)</a></li>\n            <li><a href=\"configs/dab_detr\">DAB-DETR (ICLR'2022)</a></li>\n            <li><a href=\"configs/dino\">DINO (ICLR'2023)</a></li>\n            <li><a href=\"configs/glip\">GLIP (CVPR'2022)</a></li>\n            <li><a href=\"configs/ddq\">DDQ (CVPR'2023)</a></li>\n            <li><a href=\"projects/DiffusionDet\">DiffusionDet (ArXiv'2023)</a></li>\n            <li><a href=\"projects/EfficientDet\">EfficientDet (CVPR'2020)</a></li>\n            <li><a href=\"projects/ViTDet\">ViTDet (ECCV'2022)</a></li>\n            <li><a href=\"projects/Detic\">Detic (ECCV'2022)</a></li>\n            <li><a href=\"projects/CO-DETR\">CO-DETR (ICCV'2023)</a></li>\n      </ul>\n      </td>\n      <td>\n        <ul>\n          <li><a href=\"configs/mask_rcnn\">Mask R-CNN (ICCV'2017)</a></li>\n          <li><a href=\"configs/cascade_rcnn\">Cascade Mask R-CNN (CVPR'2018)</a></li>\n          <li><a href=\"configs/ms_rcnn\">Mask Scoring R-CNN (CVPR'2019)</a></li>\n          <li><a href=\"configs/htc\">Hybrid Task Cascade (CVPR'2019)</a></li>\n          <li><a href=\"configs/yolact\">YOLACT (ICCV'2019)</a></li>\n          <li><a href=\"configs/instaboost\">InstaBoost (ICCV'2019)</a></li>\n          <li><a href=\"configs/solo\">SOLO (ECCV'2020)</a></li>\n          <li><a href=\"configs/point_rend\">PointRend (CVPR'2020)</a></li>\n          <li><a href=\"configs/detectors\">DetectoRS (ArXiv'2020)</a></li>\n          <li><a href=\"configs/solov2\">SOLOv2 (NeurIPS'2020)</a></li>\n          <li><a href=\"configs/scnet\">SCNet (AAAI'2021)</a></li>\n          <li><a href=\"configs/queryinst\">QueryInst (ICCV'2021)</a></li>\n          <li><a href=\"configs/mask2former\">Mask2Former (ArXiv'2021)</a></li>\n          <li><a href=\"configs/condinst\">CondInst (ECCV'2020)</a></li>\n          <li><a href=\"projects/SparseInst\">SparseInst (CVPR'2022)</a></li>\n          <li><a href=\"configs/rtmdet\">RTMDet (ArXiv'2022)</a></li>\n          <li><a href=\"configs/boxinst\">BoxInst (CVPR'2021)</a></li>\n          <li><a href=\"projects/ConvNeXt-V2\">ConvNeXt-V2 (Arxiv'2023)</a></li>\n        </ul>\n      </td>\n      <td>\n        <ul>\n          <li><a href=\"configs/panoptic_fpn\">Panoptic FPN (CVPR'2019)</a></li>\n          <li><a href=\"configs/maskformer\">MaskFormer (NeurIPS'2021)</a></li>\n          <li><a href=\"configs/mask2former\">Mask2Former (ArXiv'2021)</a></li>\n          <li><a href=\"configs/XDecoder\">XDecoder (CVPR'2023)</a></li>\n        </ul>\n      </td>\n      <td>\n        </ul>\n          <li><b>Contrastive Learning</b></li>\n        <ul>\n        <ul>\n          <li><a href=\"configs/selfsup_pretrain\">SwAV (NeurIPS'2020)</a></li>\n          <li><a href=\"configs/selfsup_pretrain\">MoCo (CVPR'2020)</a></li>\n          <li><a href=\"configs/selfsup_pretrain\">MoCov2 (ArXiv'2020)</a></li>\n        </ul>\n        </ul>\n        </ul>\n          <li><b>Distillation</b></li>\n        <ul>\n        <ul>\n          <li><a href=\"configs/ld\">Localization Distillation (CVPR'2022)</a></li>\n          <li><a href=\"configs/lad\">Label Assignment Distillation (WACV'2022)</a></li>\n        </ul>\n        </ul>\n          <li><b>Semi-Supervised Object Detection</b></li>\n        <ul>\n        <ul>\n          <li><a href=\"configs/soft_teacher\">Soft Teacher (ICCV'2021)</a></li>\n        </ul>\n        </ul>\n      </ul>\n      </td>\n    </tr>\n</td>\n    </tr>\n  </tbody>\n</table>\n\n<div align=\"center\">\n  <b>模块组件</b>\n</div>\n<table align=\"center\">\n  <tbody>\n    <tr align=\"center\" valign=\"bottom\">\n      <td>\n        <b>Backbones</b>\n      </td>\n      <td>\n        <b>Necks</b>\n      </td>\n      <td>\n        <b>Loss</b>\n      </td>\n      <td>\n        <b>Common</b>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td>\n      <ul>\n        <li>VGG (ICLR'2015)</li>\n        <li>ResNet (CVPR'2016)</li>\n        <li>ResNeXt (CVPR'2017)</li>\n        <li>MobileNetV2 (CVPR'2018)</li>\n        <li><a href=\"configs/hrnet\">HRNet (CVPR'2019)</a></li>\n        <li><a href=\"configs/empirical_attention\">Generalized Attention (ICCV'2019)</a></li>\n        <li><a href=\"configs/gcnet\">GCNet (ICCVW'2019)</a></li>\n        <li><a href=\"configs/res2net\">Res2Net (TPAMI'2020)</a></li>\n        <li><a href=\"configs/regnet\">RegNet (CVPR'2020)</a></li>\n        <li><a href=\"configs/resnest\">ResNeSt (ArXiv'2020)</a></li>\n        <li><a href=\"configs/pvt\">PVT (ICCV'2021)</a></li>\n        <li><a href=\"configs/swin\">Swin (CVPR'2021)</a></li>\n        <li><a href=\"configs/pvt\">PVTv2 (ArXiv'2021)</a></li>\n        <li><a href=\"configs/resnet_strikes_back\">ResNet strikes back (ArXiv'2021)</a></li>\n        <li><a href=\"configs/efficientnet\">EfficientNet (ArXiv'2021)</a></li>\n        <li><a href=\"configs/convnext\">ConvNeXt (CVPR'2022)</a></li>\n        <li><a href=\"projects/ConvNeXt-V2\">ConvNeXtv2 (ArXiv'2023)</a></li>\n      </ul>\n      </td>\n      <td>\n      <ul>\n        <li><a href=\"configs/pafpn\">PAFPN (CVPR'2018)</a></li>\n        <li><a href=\"configs/nas_fpn\">NAS-FPN (CVPR'2019)</a></li>\n        <li><a href=\"configs/carafe\">CARAFE (ICCV'2019)</a></li>\n        <li><a href=\"configs/fpg\">FPG (ArXiv'2020)</a></li>\n        <li><a href=\"configs/groie\">GRoIE (ICPR'2020)</a></li>\n        <li><a href=\"configs/dyhead\">DyHead (CVPR'2021)</a></li>\n      </ul>\n      </td>\n      <td>\n        <ul>\n          <li><a href=\"configs/ghm\">GHM (AAAI'2019)</a></li>\n          <li><a href=\"configs/gfl\">Generalized Focal Loss (NeurIPS'2020)</a></li>\n          <li><a href=\"configs/seesaw_loss\">Seasaw Loss (CVPR'2021)</a></li>\n        </ul>\n      </td>\n      <td>\n        <ul>\n          <li><a href=\"configs/faster_rcnn/faster_rcnn_r50_fpn_ohem_1x_coco.py\">OHEM (CVPR'2016)</a></li>\n          <li><a href=\"configs/gn\">Group Normalization (ECCV'2018)</a></li>\n          <li><a href=\"configs/dcn\">DCN (ICCV'2017)</a></li>\n          <li><a href=\"configs/dcnv2\">DCNv2 (CVPR'2019)</a></li>\n          <li><a href=\"configs/gn+ws\">Weight Standardization (ArXiv'2019)</a></li>\n          <li><a href=\"configs/pisa\">Prime Sample Attention (CVPR'2020)</a></li>\n          <li><a href=\"configs/strong_baselines\">Strong Baselines (CVPR'2021)</a></li>\n          <li><a href=\"configs/resnet_strikes_back\">Resnet strikes back (ArXiv'2021)</a></li>\n        </ul>\n      </td>\n    </tr>\n</td>\n    </tr>\n  </tbody>\n</table>\n\n我们在[基于 MMDetection 的项目](./docs/zh_cn/notes/projects.md)中列举了一些其他的支持的算法。\n\n## 常见问题\n\n请参考 [FAQ](docs/zh_cn/notes/faq.md) 了解其他用户的常见问题。\n\n## 贡献指南\n\n我们感谢所有的贡献者为改进和提升 MMDetection 所作出的努力。我们将正在进行中的项目添加进了[GitHub Projects](https://github.com/open-mmlab/mmdetection/projects)页面，非常欢迎社区用户能参与进这些项目中来。请参考[贡献指南](.github/CONTRIBUTING.md)来了解参与项目贡献的相关指引。\n\n## 致谢\n\nMMDetection 是一款由来自不同高校和企业的研发人员共同参与贡献的开源项目。我们感谢所有为项目提供算法复现和新功能支持的贡献者，以及提供宝贵反馈的用户。 我们希望这个工具箱和基准测试可以为社区提供灵活的代码工具，供用户复现已有算法并开发自己的新模型，从而不断为开源社区提供贡献。\n\n## 引用\n\n如果你在研究中使用了本项目的代码或者性能基准，请参考如下 bibtex 引用 MMDetection。\n\n```\n@article{mmdetection,\n  title   = {{MMDetection}: Open MMLab Detection Toolbox and Benchmark},\n  author  = {Chen, Kai and Wang, Jiaqi and Pang, Jiangmiao and Cao, Yuhang and\n             Xiong, Yu and Li, Xiaoxiao and Sun, Shuyang and Feng, Wansen and\n             Liu, Ziwei and Xu, Jiarui and Zhang, Zheng and Cheng, Dazhi and\n             Zhu, Chenchen and Cheng, Tianheng and Zhao, Qijie and Li, Buyu and\n             Lu, Xin and Zhu, Rui and Wu, Yue and Dai, Jifeng and Wang, Jingdong\n             and Shi, Jianping and Ouyang, Wanli and Loy, Chen Change and Lin, Dahua},\n  journal= {arXiv preprint arXiv:1906.07155},\n  year={2019}\n}\n```\n\n## 开源许可证\n\n该项目采用 [Apache 2.0 开源许可证](LICENSE)。\n\n## OpenMMLab 的其他项目\n\n- [MMEngine](https://github.com/open-mmlab/mmengine): OpenMMLab 深度学习模型训练基础库\n- [MMCV](https://github.com/open-mmlab/mmcv): OpenMMLab 计算机视觉基础库\n- [MMPreTrain](https://github.com/open-mmlab/mmpretrain): OpenMMLab 深度学习预训练工具箱\n- [MMagic](https://github.com/open-mmlab/mmagic): OpenMMLab 新一代人工智能内容生成（AIGC）工具箱\n- [MMDetection](https://github.com/open-mmlab/mmdetection): OpenMMLab 目标检测工具箱\n- [MMDetection3D](https://github.com/open-mmlab/mmdetection3d): OpenMMLab 新一代通用 3D 目标检测平台\n- [MMRotate](https://github.com/open-mmlab/mmrotate): OpenMMLab 旋转框检测工具箱与测试基准\n- [MMYOLO](https://github.com/open-mmlab/mmyolo): OpenMMLab YOLO 系列工具箱与测试基准\n- [MMSegmentation](https://github.com/open-mmlab/mmsegmentation): OpenMMLab 语义分割工具箱\n- [MMOCR](https://github.com/open-mmlab/mmocr): OpenMMLab 全流程文字检测识别理解工具包\n- [MMPose](https://github.com/open-mmlab/mmpose): OpenMMLab 姿态估计工具箱\n- [MMHuman3D](https://github.com/open-mmlab/mmhuman3d): OpenMMLab 人体参数化模型工具箱与测试基准\n- [MMSelfSup](https://github.com/open-mmlab/mmselfsup): OpenMMLab 自监督学习工具箱与测试基准\n- [MMRazor](https://github.com/open-mmlab/mmrazor): OpenMMLab 模型压缩工具箱与测试基准\n- [MMFewShot](https://github.com/open-mmlab/mmfewshot): OpenMMLab 少样本学习工具箱与测试基准\n- [MMAction2](https://github.com/open-mmlab/mmaction2): OpenMMLab 新一代视频理解工具箱\n- [MMTracking](https://github.com/open-mmlab/mmtracking): OpenMMLab 一体化视频目标感知平台\n- [MMFlow](https://github.com/open-mmlab/mmflow): OpenMMLab 光流估计工具箱与测试基准\n- [MMEditing](https://github.com/open-mmlab/mmediting): OpenMMLab 图像视频编辑工具箱\n- [MMGeneration](https://github.com/open-mmlab/mmgeneration): OpenMMLab 图片视频生成模型工具箱\n- [MMDeploy](https://github.com/open-mmlab/mmdeploy): OpenMMLab 模型部署框架\n- [MIM](https://github.com/open-mmlab/mim): OpenMMlab 项目、算法、模型的统一入口\n- [MMEval](https://github.com/open-mmlab/mmeval): 统一开放的跨框架算法评测库\n- [Playground](https://github.com/open-mmlab/playground): 收集和展示 OpenMMLab 相关的前沿、有趣的社区项目\n\n## 欢迎加入 OpenMMLab 社区\n\n扫描下方的二维码可关注 OpenMMLab 团队的 [知乎官方账号](https://www.zhihu.com/people/openmmlab)，扫描下方微信二维码添加喵喵好友，进入 MMDectection 微信交流社群。【加好友申请格式：研究方向+地区+学校/公司+姓名】\n\n<div align=\"center\">\n<img src=\"resources/zhihu_qrcode.jpg\" height=\"400\" />  <img src=\"resources/miaomiao_qrcode.jpg\" height=\"400\" />\n</div>\n\n我们会在 OpenMMLab 社区为大家\n\n- 📢 分享 AI 框架的前沿核心技术\n- 💻 解读 PyTorch 常用模块源码\n- 📰 发布 OpenMMLab 的相关新闻\n- 🚀 介绍 OpenMMLab 开发的前沿算法\n- 🏃 获取更高效的问题答疑和意见反馈\n- 🔥 提供与各行各业开发者充分交流的平台\n\n干货满满 📘，等你来撩 💗，OpenMMLab 社区期待您的加入 👬\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dataset-index.yml",
          "type": "blob",
          "size": 0.46,
          "content": "openxlab: true\nvoc2007:\n  dataset: OpenDataLab/PASCAL_VOC2007\n  download_root: data\n  data_root: data\n  script: tools/dataset_converters/scripts/preprocess_voc2007.sh\n\nvoc2012:\n  dataset: OpenDataLab/PASCAL_VOC2012\n  download_root: data\n  data_root: data\n  script: tools/dataset_converters/scripts/preprocess_voc2012.sh\n\ncoco2017:\n  dataset: OpenDataLab/COCO_2017\n  download_root: data\n  data_root: data/coco\n  script: tools/dataset_converters/scripts/preprocess_coco2017.sh\n"
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mmdet",
          "type": "tree",
          "content": null
        },
        {
          "name": "model-index.yml",
          "type": "blob",
          "size": 3.35,
          "content": "Import:\n  - configs/albu_example/metafile.yml\n  - configs/atss/metafile.yml\n  - configs/autoassign/metafile.yml\n  - configs/boxinst/metafile.yml\n  - configs/carafe/metafile.yml\n  - configs/cascade_rcnn/metafile.yml\n  - configs/cascade_rpn/metafile.yml\n  - configs/centernet/metafile.yml\n  - configs/centripetalnet/metafile.yml\n  - configs/condinst/metafile.yml\n  - configs/conditional_detr/metafile.yml\n  - configs/cornernet/metafile.yml\n  - configs/convnext/metafile.yml\n  - configs/crowddet/metafile.yml\n  - configs/dab_detr/metafile.yml\n  - configs/dcn/metafile.yml\n  - configs/dcnv2/metafile.yml\n  - configs/ddod/metafile.yml\n  - configs/deformable_detr/metafile.yml\n  - configs/detectors/metafile.yml\n  - configs/detr/metafile.yml\n  - configs/dino/metafile.yml\n  - configs/double_heads/metafile.yml\n  - configs/dyhead/metafile.yml\n  - configs/dynamic_rcnn/metafile.yml\n  - configs/efficientnet/metafile.yml\n  - configs/empirical_attention/metafile.yml\n  - configs/faster_rcnn/metafile.yml\n  - configs/fcos/metafile.yml\n  - configs/foveabox/metafile.yml\n  - configs/fpg/metafile.yml\n  - configs/free_anchor/metafile.yml\n  - configs/fsaf/metafile.yml\n  - configs/gcnet/metafile.yml\n  - configs/gfl/metafile.yml\n  - configs/ghm/metafile.yml\n  - configs/gn/metafile.yml\n  - configs/gn+ws/metafile.yml\n  - configs/grid_rcnn/metafile.yml\n  - configs/groie/metafile.yml\n  - configs/guided_anchoring/metafile.yml\n  - configs/hrnet/metafile.yml\n  - configs/htc/metafile.yml\n  - configs/instaboost/metafile.yml\n  - configs/lad/metafile.yml\n  - configs/ld/metafile.yml\n  - configs/libra_rcnn/metafile.yml\n  - configs/lvis/metafile.yml\n  - configs/mask2former/metafile.yml\n  - configs/mask_rcnn/metafile.yml\n  - configs/maskformer/metafile.yml\n  - configs/ms_rcnn/metafile.yml\n  - configs/nas_fcos/metafile.yml\n  - configs/nas_fpn/metafile.yml\n  - configs/openimages/metafile.yml\n  - configs/paa/metafile.yml\n  - configs/pafpn/metafile.yml\n  - configs/panoptic_fpn/metafile.yml\n  - configs/pvt/metafile.yml\n  - configs/pisa/metafile.yml\n  - configs/point_rend/metafile.yml\n  - configs/queryinst/metafile.yml\n  - configs/regnet/metafile.yml\n  - configs/reppoints/metafile.yml\n  - configs/res2net/metafile.yml\n  - configs/resnest/metafile.yml\n  - configs/resnet_strikes_back/metafile.yml\n  - configs/retinanet/metafile.yml\n  - configs/rpn/metafile.yml\n  - configs/rtmdet/metafile.yml\n  - configs/sabl/metafile.yml\n  - configs/scnet/metafile.yml\n  - configs/scratch/metafile.yml\n  - configs/seesaw_loss/metafile.yml\n  - configs/simple_copy_paste/metafile.yml\n  - configs/soft_teacher/metafile.yml\n  - configs/sparse_rcnn/metafile.yml\n  - configs/solo/metafile.yml\n  - configs/solov2/metafile.yml\n  - configs/ssd/metafile.yml\n  - configs/strong_baselines/metafile.yml\n  - configs/swin/metafile.yml\n  - configs/tridentnet/metafile.yml\n  - configs/tood/metafile.yml\n  - configs/vfnet/metafile.yml\n  - configs/yolact/metafile.yml\n  - configs/yolo/metafile.yml\n  - configs/yolof/metafile.yml\n  - configs/yolox/metafile.yml\n  - configs/bytetrack/metafile.yml\n  - configs/strongsort/metafile.yml\n  - configs/ocsort/metafile.yml\n  - configs/sort/metafile.yml\n  - configs/deepsort/metafile.yml\n  - configs/qdtrack/metafile.yml\n  - configs/mask2former_vis/metafile.yml\n  - configs/masktrack_rcnn/metafile.yml\n  - configs/glip/metafile.yml\n  - configs/ddq/metafile.yml\n  - configs/grounding_dino/metafile.yml\n  - configs/mm_grounding_dino/metafile.yml\n"
        },
        {
          "name": "projects",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.29,
          "content": "[pytest]\naddopts = --xdoctest --xdoctest-style=auto\nnorecursedirs = .git ignore build __pycache__ data docker docs .eggs\n\nfilterwarnings= default\n                ignore:.*No cfgstr given in Cacher constructor or call.*:Warning\n                ignore:.*Define the __nice__ method for.*:Warning\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.08,
          "content": "-r requirements/build.txt\n-r requirements/optional.txt\n-r requirements/runtime.txt\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.99,
          "content": "[isort]\nline_length = 79\nmulti_line_output = 0\nextra_standard_library = setuptools\nknown_first_party = mmdet\nknown_third_party = PIL,asynctest,cityscapesscripts,cv2,gather_models,matplotlib,mmcv,mmengine,numpy,onnx,onnxruntime,pycocotools,parameterized,pytest,pytorch_sphinx_theme,requests,scipy,seaborn,six,terminaltables,torch,ts,yaml\nno_lines_before = STDLIB,LOCALFOLDER\ndefault_section = THIRDPARTY\n\n[yapf]\nBASED_ON_STYLE = pep8\nBLANK_LINE_BEFORE_NESTED_CLASS_OR_DEF = true\nSPLIT_BEFORE_EXPRESSION_AFTER_OPENING_PAREN = true\n\n# ignore-words-list needs to be lowercase format. For example, if we want to\n# ignore word \"BA\", then we need to append \"ba\" to ignore-words-list rather\n# than \"BA\"\n[codespell]\nskip = *.ipynb,configs/v3det/category_name_13204_v3det_2023_v1.txt\nquiet-level = 3\nignore-words-list = patten,nd,ty,mot,hist,formating,winn,gool,datas,wan,confids,TOOD,tood,ba,warmup,nam,DOTA,dota,conveyer,singed,comittee,extention,moniter,pres,\n\n[flake8]\nper-file-ignores = mmdet/configs/*: F401,F403,F405\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 7.88,
          "content": "#!/usr/bin/env python\n# Copyright (c) OpenMMLab. All rights reserved.\nimport os\nimport os.path as osp\nimport platform\nimport shutil\nimport sys\nimport warnings\nfrom setuptools import find_packages, setup\n\nimport torch\nfrom torch.utils.cpp_extension import (BuildExtension, CppExtension,\n                                       CUDAExtension)\n\n\ndef readme():\n    with open('README.md', encoding='utf-8') as f:\n        content = f.read()\n    return content\n\n\nversion_file = 'mmdet/version.py'\n\n\ndef get_version():\n    with open(version_file, 'r') as f:\n        exec(compile(f.read(), version_file, 'exec'))\n    return locals()['__version__']\n\n\ndef make_cuda_ext(name, module, sources, sources_cuda=[]):\n\n    define_macros = []\n    extra_compile_args = {'cxx': []}\n\n    if torch.cuda.is_available() or os.getenv('FORCE_CUDA', '0') == '1':\n        define_macros += [('WITH_CUDA', None)]\n        extension = CUDAExtension\n        extra_compile_args['nvcc'] = [\n            '-D__CUDA_NO_HALF_OPERATORS__',\n            '-D__CUDA_NO_HALF_CONVERSIONS__',\n            '-D__CUDA_NO_HALF2_OPERATORS__',\n        ]\n        sources += sources_cuda\n    else:\n        print(f'Compiling {name} without CUDA')\n        extension = CppExtension\n\n    return extension(\n        name=f'{module}.{name}',\n        sources=[os.path.join(*module.split('.'), p) for p in sources],\n        define_macros=define_macros,\n        extra_compile_args=extra_compile_args)\n\n\ndef parse_requirements(fname='requirements.txt', with_version=True):\n    \"\"\"Parse the package dependencies listed in a requirements file but strips\n    specific versioning information.\n\n    Args:\n        fname (str): path to requirements file\n        with_version (bool, default=False): if True include version specs\n\n    Returns:\n        List[str]: list of requirements items\n\n    CommandLine:\n        python -c \"import setup; print(setup.parse_requirements())\"\n    \"\"\"\n    import re\n    import sys\n    from os.path import exists\n    require_fpath = fname\n\n    def parse_line(line):\n        \"\"\"Parse information from a line in a requirements text file.\"\"\"\n        if line.startswith('-r '):\n            # Allow specifying requirements in other files\n            target = line.split(' ')[1]\n            for info in parse_require_file(target):\n                yield info\n        else:\n            info = {'line': line}\n            if line.startswith('-e '):\n                info['package'] = line.split('#egg=')[1]\n            elif '@git+' in line:\n                info['package'] = line\n            else:\n                # Remove versioning from the package\n                pat = '(' + '|'.join(['>=', '==', '>']) + ')'\n                parts = re.split(pat, line, maxsplit=1)\n                parts = [p.strip() for p in parts]\n\n                info['package'] = parts[0]\n                if len(parts) > 1:\n                    op, rest = parts[1:]\n                    if ';' in rest:\n                        # Handle platform specific dependencies\n                        # http://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-platform-specific-dependencies\n                        version, platform_deps = map(str.strip,\n                                                     rest.split(';'))\n                        info['platform_deps'] = platform_deps\n                    else:\n                        version = rest  # NOQA\n                    info['version'] = (op, version)\n            yield info\n\n    def parse_require_file(fpath):\n        with open(fpath, 'r') as f:\n            for line in f.readlines():\n                line = line.strip()\n                if line and not line.startswith('#'):\n                    for info in parse_line(line):\n                        yield info\n\n    def gen_packages_items():\n        if exists(require_fpath):\n            for info in parse_require_file(require_fpath):\n                parts = [info['package']]\n                if with_version and 'version' in info:\n                    parts.extend(info['version'])\n                if not sys.version.startswith('3.4'):\n                    # apparently package_deps are broken in 3.4\n                    platform_deps = info.get('platform_deps')\n                    if platform_deps is not None:\n                        parts.append(';' + platform_deps)\n                item = ''.join(parts)\n                yield item\n\n    packages = list(gen_packages_items())\n    return packages\n\n\ndef add_mim_extension():\n    \"\"\"Add extra files that are required to support MIM into the package.\n\n    These files will be added by creating a symlink to the originals if the\n    package is installed in `editable` mode (e.g. pip install -e .), or by\n    copying from the originals otherwise.\n    \"\"\"\n\n    # parse installment mode\n    if 'develop' in sys.argv:\n        # installed by `pip install -e .`\n        if platform.system() == 'Windows':\n            # set `copy` mode here since symlink fails on Windows.\n            mode = 'copy'\n        else:\n            mode = 'symlink'\n    elif 'sdist' in sys.argv or 'bdist_wheel' in sys.argv:\n        # installed by `pip install .`\n        # or create source distribution by `python setup.py sdist`\n        mode = 'copy'\n    else:\n        return\n\n    filenames = [\n        'tools', 'configs', 'demo', 'model-index.yml', 'dataset-index.yml'\n    ]\n    repo_path = osp.dirname(__file__)\n    mim_path = osp.join(repo_path, 'mmdet', '.mim')\n    os.makedirs(mim_path, exist_ok=True)\n\n    for filename in filenames:\n        if osp.exists(filename):\n            src_path = osp.join(repo_path, filename)\n            tar_path = osp.join(mim_path, filename)\n\n            if osp.isfile(tar_path) or osp.islink(tar_path):\n                os.remove(tar_path)\n            elif osp.isdir(tar_path):\n                shutil.rmtree(tar_path)\n\n            if mode == 'symlink':\n                src_relpath = osp.relpath(src_path, osp.dirname(tar_path))\n                os.symlink(src_relpath, tar_path)\n            elif mode == 'copy':\n                if osp.isfile(src_path):\n                    shutil.copyfile(src_path, tar_path)\n                elif osp.isdir(src_path):\n                    shutil.copytree(src_path, tar_path)\n                else:\n                    warnings.warn(f'Cannot copy file {src_path}.')\n            else:\n                raise ValueError(f'Invalid mode {mode}')\n\n\nif __name__ == '__main__':\n    add_mim_extension()\n    setup(\n        name='mmdet',\n        version=get_version(),\n        description='OpenMMLab Detection Toolbox and Benchmark',\n        long_description=readme(),\n        long_description_content_type='text/markdown',\n        author='MMDetection Contributors',\n        author_email='openmmlab@gmail.com',\n        keywords='computer vision, object detection',\n        url='https://github.com/open-mmlab/mmdetection',\n        packages=find_packages(exclude=('configs', 'tools', 'demo')),\n        include_package_data=True,\n        classifiers=[\n            'Development Status :: 5 - Production/Stable',\n            'License :: OSI Approved :: Apache Software License',\n            'Operating System :: OS Independent',\n            'Programming Language :: Python :: 3',\n            'Programming Language :: Python :: 3.7',\n            'Programming Language :: Python :: 3.8',\n            'Programming Language :: Python :: 3.9',\n        ],\n        license='Apache License 2.0',\n        install_requires=parse_requirements('requirements/runtime.txt'),\n        extras_require={\n            'all': parse_requirements('requirements.txt'),\n            'tests': parse_requirements('requirements/tests.txt'),\n            'build': parse_requirements('requirements/build.txt'),\n            'optional': parse_requirements('requirements/optional.txt'),\n            'mim': parse_requirements('requirements/mminstall.txt'),\n            'tracking': parse_requirements('requirements/tracking.txt'),\n            'multimodal': parse_requirements('requirements/multimodal.txt'),\n        },\n        ext_modules=[],\n        cmdclass={'build_ext': BuildExtension},\n        zip_safe=False)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}