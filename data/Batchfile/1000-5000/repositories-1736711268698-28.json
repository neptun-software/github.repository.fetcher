{
  "metadata": {
    "timestamp": 1736711268698,
    "page": 28,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "VirtualHotBar/HotPEToolBox",
      "stars": 1169,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.7568359375,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\npip-wheel-metadata/\nshare/python-wheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.nox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n*.py,cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\ndb.sqlite3-journal\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# IPython\nprofile_default/\nipython_config.py\n\n# pyenv\n.python-version\n\n# pipenv\n#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.\n#   However, in case of collaboration, if having platform-specific dependencies or dependencies\n#   having no cross-platform support, pipenv may install dependencies that don't work, or not\n#   install all needed dependencies.\n#Pipfile.lock\n\n# PEP 582; used by e.g. github.com/David-OConnor/pyflow\n__pypackages__/\n\n# Celery stuff\ncelerybeat-schedule\ncelerybeat.pid\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n.dmypy.json\ndmypy.json\n\n# Pyre type checker\n.pyre/\n"
        },
        {
          "name": "AddFiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "Bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "HotPEBuildTools.PY",
          "type": "blob",
          "size": 0.673828125,
          "content": "﻿from __future__ import print_function\nimport ctypes, sys\nfrom runpy import run_path\nimport os\n\nrunPath = os.path.split( os.path.realpath( sys.argv[0] ) )[0] + \"\\\\\"\n\n#用NSudo提权运行命令\ndef nsudoRun (cmd):\n    os.system(runPath + \"Bin\\\\Tools\\\\NSudo.exe  -U:T -P:E -UseCurrentConsole -Wait cmd /c \\\"\"+cmd+\"\\\"\")\n    #time.sleep(1)\n    return\n\n#获取管理员权限\ndef is_admin():\n    try:\n        return ctypes.windll.shell32.IsUserAnAdmin()\n    except:\n        return False\n\nif is_admin():\n    nsudoRun (\"python.exe \" + runPath + \"main.py\")\n    \n\nelse:\n    if sys.version_info[0] == 3:\n    \tctypes.windll.shell32.ShellExecuteW(None, \"runas\", sys.executable, __file__, None, 1)\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0439453125,
          "content": "MIT License\n\nCopyright (c) 2022 VirtualHotBar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.5009765625,
          "content": "<h1 align=\"center\">\n  <br>\n<img src=\"https://github.com/VirtualHotBar/HotPEToolBox/assets/96966978/ea7edc26-3b62-4cbe-9f3f-5e875f026de9\" width=\"150\"/>\n  <br>\n  HotPE 工具箱\n  <br>\n</h1>\n\n<h4 align=\"center\">一个纯净、强大、优雅的Win11PE</h4>\n\n<p align=\"center\">支持上网、声音、远程、下载、HotPE模块、Edgeless插件、MTP、RNDIS、Legacy、UEFI、M.2、NVME、USB设备弹出、搜索功能、MSI、BitLocker磁盘解锁、网络共享、U盘启动、本地启动、生成ISO等</p>\n\n<p align=\"center\">\n  <a href=\"https://www.hotpe.top\">首页</a> -\n  <a href=\"https://docs.hotpe.top\">文档</a> -\n  <a href=\"https://down.hotpe.top\">下载站</a>  -\n  <a href=\"https://blog.hotpe.top\">博客</a> \n</p>\n\n## 发布版\n\n请到 https://www.hotpe.top/download 进行下载。\n\n## 使用\n本仓库为HotPEBuildTools(HotPE的构建工具)\n\n**适用于Win10/11镜像，11版本需低于等于22000.282**\n\n### 1.开发环境\n\n克隆本仓库，安装Python，然后挂载原版系统镜像到虚拟光驱\n\n### 2.生成HotPE\n\n运行 \"\\HotPEBuildTools.PY\"  根据提示操作\n\n演示视频：https://www.bilibili.com/video/BV1W3411a7YW\n\n## 许可证\n\nHotPE的自编代码基于MIT许可证开源。使用本工具生成的WinPE一律算作HotPE的分支，[详细要求请看文档](https://docs.hotpe.top/devdoc/branch.html)\n\n## 更多\n- [HotPE Client](https://github.com/VirtualHotBar/HotPE_Client) - HotPE的聚合客户端\n- [HPM CIL](https://github.com/VirtualHotBar/HPM-cil/) - HPM(HotPE Module)加载器实现\n\n"
        },
        {
          "name": "README_en.md",
          "type": "blob",
          "size": 1.48046875,
          "content": "<h1 align=\"center\">\n  <br>\n<img src=\"https://docs.hotpe.top/favicon.ico\" width=\"150\"/>\n  <br>\n  HotPEToolBox\n  <br>\n</h1>\n\n<h4 align=\"center\">A pure, powerful and elegant Win11PE</h4>\n\n<p align=\"center\">Support Internet, Voice, Remote, Download, HotPE Module, Edgeless Plug-in, MTP, RNDIS, Legacy, UEFI, M.2,Nvme, USB Device Pop-up, Search Function, MSI, BitLocker Disk Unlocking, Network Sharing, USB Disk Startup, Local Startup, ISO Generation ...</p>\n\n<p align=\"center\">\n  <a href=\"https://www.hotpe.top\">Home Page</a> -\n  <a href=\"https://docs.hotpe.top\">Docs</a> -\n  <a href=\"https://down.hotpe.top\">Download Station</a>  -\n  <a href=\"https://blog.hotpe.top\">Bolg</a> \n</p>\n\n[简体中文](https://github.com/VirtualHotBar/HotPEToolBox/) | English\n## Release\n\nPlease https://www.hotpe.top/download Download.\n\n## Use\nThis warehouse is HotPEBuildTools\n\n**Applicable to Win10/11 image, version 11 must be lower than or equal to 22000.282**\n\n### 1.Development environment\n\nClone this repository, install python, and then mount the original system image to the virtual optical drive\n\n### 2.Build HotPE\n\nRun \"\\HotPEBuildTools.PY\" ,Follow the prompts\n\n![](https://p2.myzwq.com/i/2022/11/27/6382ee80adfe8.png)\n\nDemo video：https://www.bilibili.com/video/BV1W3411a7YW\n\n## Licence\n\nHotPE self compiled code is open source under the MIT license. WinPE generated by using this tool is always counted as a branch of HotPE. [Please refer to the document for detailed requirements](https://docs.hotpe.top/devdoc/branch.html)\n"
        },
        {
          "name": "TempFile",
          "type": "tree",
          "content": null
        },
        {
          "name": "copyDriver.bat",
          "type": "blob",
          "size": 0.560546875,
          "content": "@echo off\ncd /d \"%~dp0\"\n\nfor /d %%f in (\"%~dp0TempFile\\apply\\windows\\system32\\DriverStore\\FileRepository\\netrndis.inf*\") do (\necho DriverDatabase\\DriverPackages\\%%~nf%%~xf\nreg copy \"hklm\\os_drv\\DriverDatabase\\DriverPackages\\%%~nf%%~xf\" \"hklm\\pe_drv\\DriverDatabase\\DriverPackages\\%%~nf%%~xf\" /S /F\n)\n\nfor /d %%g in (\"%~dp0TempFile\\apply\\windows\\system32\\DriverStore\\FileRepository\\rndiscmp.inf*\") do (\necho DriverDatabase\\DriverPackages\\%%~ng%%~xg\nreg copy \"hklm\\os_drv\\DriverDatabase\\DriverPackages\\%%~ng%%~xg\" \"hklm\\pe_drv\\DriverDatabase\\DriverPackages\\%%~ng%%~xg\" /S /F\n)\n"
        },
        {
          "name": "main.PY",
          "type": "blob",
          "size": 12.6416015625,
          "content": "from __future__ import print_function\nimport ctypes\nfrom runpy import run_path\nimport os\nimport sys\nimport os\nimport configparser\nimport time\n\nrunPath = os.path.split( os.path.realpath( sys.argv[0] ) )[0] + \"\\\\\"\nrunFile =sys.argv[0]\n\n\n\ndef emptyDir (path):#清空目录\n    os.system(\"rd /s /Q \\\"\"+ path + \"\\\"\")\n    if os.path.exists(path)==False:\n        os.makedirs(path)\n    return\n\ndef copyDir (path,pathGoTo):#复制目录\n    os.system(\"xcopy \\\"\"+ path+\"\\\" \\\"\" + pathGoTo + \"\\\" /Q /Y /H /R /E\")\n    return\n\ndef loadConfigUnit (FileName,KeyName):#加载配置单元\n    os.system (\"reg load \"+KeyName+\" \\\"\"+FileName+\"\\\"\")\n    return\n\ndef unloadConfigUnit (KeyName):#卸载配置单元\n    os.system (\"reg unload \"+KeyName)\n    return\n\ndef importReg (FileName):#导入注册表\n    os.system (\"reg import \\\"\"+FileName+\"\\\"\")\n    return\n\ndef copyRegKey (KeyName,toKeyName):#复制注册表项\n    os.system (\"reg copy \\\"\"+KeyName+\"\\\" \\\"\"+toKeyName+\"\\\"  /S /F\")\n    return\n\ndef encryptPecmdScript (path):#加密PECMD脚本\n    os.system(runPath+\"Bin\\Tools\\pecmd.exe \\\"CMPS -bin \"+path+\",\"+path+\".new\\\"\")\n    os.remove(path)\n    os.rename(path+\".new\",path)\n    return\n\ndef begin ():\n    # 初始化\n    os.system(\"title HotPEBuildTools 2.4.2022.8\")\n    \n    print(\"正在清理文件\\n\")\n    emptyDir (runPath+\"TempFile\\\\apply\")\n    emptyDir (runPath + \"TempFile\\\\apply\")\n    emptyDir (runPath + \"TempFile\\\\config\")\n\n    wimlibImagex= runPath + \"Bin\\\\Tools\\\\wimlib\\\\wimlib-imagex.exe\"\n\n    isoLetter = input (\"输入虚拟光驱盘符(不加冒号)：\")\n    print(\"\\n\")\n\n    installWim = isoLetter + \":\\\\sources\\\\install.wim\"\n    bootWim = isoLetter + \":\\\\sources\\\\boot.wim\"\n\n    os.system (wimlibImagex + \" info \"+isoLetter+\":\\\\sources\\\\boot.wim|FIND  \\\"Description\\\" \")\n    bootVolume = input (\"输入Boot.wim分卷(从1开始)：\")\n    print(\"\\n\")\n\n    os.system (wimlibImagex + \" info \"+isoLetter+\":\\\\sources\\\\install.wim|FIND  \\\"Display Name\\\" \")\n    installVolume = input (\"输入install.wim分卷(从1开始)：\")\n\n    print(\"\\n正在从boot.wim提取文件\")\n    \n    os.system(wimlibImagex+\" apply \"+bootWim+\" \"+str(bootVolume)+\" \"+runPath+\"TempFile\\\\apply\")\n\n    print(\"\\n正在从boot.wim提取Cat文件\")\n    emptyDir (runPath + \"TempFile\\\\apply\\\\Windows\\\\System32\\\\CatRoot\\\\{127D0A1D-4EF2-11D1-8608-00C04FC295EE}\\\\\")\n    emptyDir (runPath + \"TempFile\\\\apply\\\\Windows\\\\System32\\\\CatRoot\\\\{F750E6C3-38EE-11D1-85E5-00C04FC295EE}\\\\\")\n    os.system(wimlibImagex+\" extract \"+bootWim+\" \"+str(bootVolume)+\" @\"+runPath+\"Bin\\\\Files\\\\Cat.txt \"+\"--dest-dir=\"+runPath+\"TempFile\\\\apply \"+\" --nullglob --no-acls\")\n\n    print(\"\\n正在清理WinSxS文件\")\n    emptyDir (runPath + \"TempFile\\\\apply\\\\Windows\\\\WinSxS\\\\\")\n\n    print(\"\\n正在从install.wim提取文件\")\n    #os.system(wimlibImagex+\" extract \"+installWim+\" \"+str(installVolume)+\" \\Windows\\System32\\Recovery\\winre.wim \"+\"--dest-dir=\"+runPath+\"TempFile\\\\ \"+\" --nullglob --no-acls\")\n    os.system(wimlibImagex+\" extract \"+installWim+\" \"+str(installVolume)+\" @\"+runPath+\"Bin\\\\Files\\\\install.txt \"+\"--dest-dir=\"+runPath+\"TempFile\\\\apply \"+\" --nullglob --no-acls\")\n\n    print(\"\\n正在删除无用文件\")\n    for line in open(runPath+\"Bin\\\\Files\\\\delFiles.txt\", \"r\"):  #打开文件\n        rs = line.rstrip('\\n')  # 移除行尾换行符\n        if os.path.isfile(runPath+\"TempFile\\\\apply\\\\\"+rs):\n            os.system(\"del \"+runPath+\"TempFile\\\\apply\\\\\"+rs+\" /F /Q\")\n        if os.path.isdir(runPath+\"TempFile\\\\apply\\\\\"+rs):\n            os.system(\"rd \"+runPath+\"TempFile\\\\apply\\\\\"+rs+\" /S /Q\")\n\n    for line in open(runPath+\"Bin\\\\Files\\\\delFilesMore.txt\", \"r\"):  #打开文件\n        rs = line.rstrip('\\n')  # 移除行尾换行符\n        if os.path.isfile(runPath+\"TempFile\\\\apply\\\\\"+rs):\n            os.system(\"del \"+runPath+\"TempFile\\\\apply\\\\\"+rs+\" /F /Q\")\n        if os.path.isdir(runPath+\"TempFile\\\\apply\\\\\"+rs):\n            os.system(\"rd \"+runPath+\"TempFile\\\\apply\\\\\"+rs+\" /S /Q\")\n\n    for line in open(runPath+\"Bin\\\\Files\\\\delFilesMore(drivers).txt\", \"r\"):  #打开文件\n        rs = line.rstrip('\\n')  # 移除行尾换行符\n        if os.path.isfile(runPath+\"TempFile\\\\apply\\\\\"+rs):\n            os.system(\"del \"+runPath+\"TempFile\\\\apply\\\\\"+rs+\" /F /Q\")\n        if os.path.isdir(runPath+\"TempFile\\\\apply\\\\\"+rs):\n            os.system(\"rd \"+runPath+\"TempFile\\\\apply\\\\\"+rs+\" /S /Q\")\n\n    for line in open(runPath+\"Bin\\\\Files\\\\clearDir.txt\", \"r\"):  #打开文件\n        rs = line.rstrip('\\n')  # 移除行尾换行符\n        emptyDir(runPath+\"TempFile\\\\apply\\\\\"+rs)\n    \n    print(\"\\n正在从install.wim提取注册表文件:system,drivers\")\n    os.system(wimlibImagex+\" extract \"+installWim+\" \"+str(installVolume)+\" \\Windows\\System32\\config\\system \"+\"--dest-dir=\"+runPath+\"TempFile\\\\config \"+\" --nullglob --no-acls\")\n    os.system(wimlibImagex+\" extract \"+installWim+\" \"+str(installVolume)+\" \\Windows\\System32\\config\\drivers \"+\"--dest-dir=\"+runPath+\"TempFile\\\\config \"+\" --nullglob --no-acls\")\n\n    print(\"\\n正在添加文件:AddFiles\\*\")\n    copyDir(runPath+\"AddFiles\",runPath+\"TempFile\\\\apply\")\n    \n\n    print(\"\\n正在加密Pecmd脚本文件\")\n    encryptPecmdScript(runPath+\"TempFile\\\\apply\\\\windows\\\\system32\\\\PECMD.ini\")\n    \n\n    print(\"\\n正在挂载配置单元\")\n    \n    loadConfigUnit (runPath+\"TempFile\\\\config\\\\drivers\",\"hklm\\os_drv\")\n    loadConfigUnit (runPath+\"TempFile\\\\config\\\\system\",\"hklm\\os_sys\")\n    loadConfigUnit (runPath+\"TempFile\\\\apply\\\\windows\\\\system32\\\\config\\\\default\",\"hklm\\pe_def\")\n    loadConfigUnit (runPath+\"TempFile\\\\apply\\\\windows\\\\system32\\\\config\\\\software\",\"hklm\\pe_soft\")\n    loadConfigUnit (runPath+\"TempFile\\\\apply\\\\windows\\\\system32\\\\config\\\\system\",\"hklm\\pe_sys\")\n    loadConfigUnit (runPath+\"TempFile\\\\apply\\\\windows\\\\system32\\\\config\\\\DRIVERS\",\"hklm\\pe_drv\")\n\n    print(\"\\n正在导入注册表项\")\n    \n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\explorer.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\pe_def.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\pe_soft.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\Pecmd.ini.reg\")\n\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\SOFT_精简注册表.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\CMD字体和透明.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\HDTunePro.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\StartIsBack_浅.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\Windows颜色模式浅.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\打开HotPE模块.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\任务管理器默认详细信息.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\任务栏合并按钮.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\任务栏图标.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\鼠标指针.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\开始菜单不显示搜索.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\开始菜单不显示最近打开项.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\控制面板界面.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\控制面板删除管理工具.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\控制面板删除任务栏和导航.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\控制面板删除设备和打印机.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\控制面板删除无效图标.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\控制面板删除字体.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\删除右键3D Edit.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\删除右键包含到库.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\删除右键个性化和显示设置.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\删除右键恢复到之前版本.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\删除右键设为壁纸.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\删除资源管理器内桌面等文件夹.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\视觉效果.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\修复此电脑右键管理.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\隐藏3D对象等文件夹.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\隐藏导航窗格.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\隐藏开始菜单启动和管理工具.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\隐藏映射网络驱动器.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\隐藏3D对象等文件夹.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\电源键默认重启.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\计算机属性.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\绕过TPM检测.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\右键用记事本打开文件.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\右键显示设置.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\HashTab.reg\")\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\WinX开机动画.reg\")\n\n\n    print(\"\\n正在替换注册表的C:\\\\为X:\\\\\")\n    os.system(runPath + \"Bin\\\\Tools\\\\regfind.exe\"+\" -p HKEY_LOCAL_MACHINE\\\\pe_soft -y C:\\\\ -y -r X:\\\\\")\n\n    print(\"\\n正在处理Interactive User\")\n    os.system(runPath + \"Bin\\\\Tools\\\\regfind.exe\"+\" -p HKEY_LOCAL_MACHINE\\\\pe_soft\\Classes\\AppID -y Interactive User -r\")\n\n    print(\"\\n复制必要的SYSTEM注册表到PE\")\n    for line in open(runPath+\"\\\\Bin\\\\RegistryFiles\\\\pe_sys.txt\", \"r\"):  #打开文件\n        rs = line.rstrip('\\n')  # 移除行尾换行符\n        copyRegKey(\"hklm\\\\os_sys\\\\\"+rs,\"hklm\\\\pe_sys\\\\\"+rs)\n\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\pe_sys.reg\")\n\n    print(\"\\n复制必要的drivers注册表到PE\")\n    for line in open(runPath+\"\\\\Bin\\\\RegistryFiles\\\\pe_drv.txt\", \"r\"):  #打开文件\n        rs = line.rstrip('\\n')  # 移除行尾换行符\n        copyRegKey(\"hklm\\\\os_drv\\\\\"+rs,\"hklm\\\\pe_drv\\\\\"+rs)\n\n    os.system(runPath + \"copyDriver.bat\")\n\n    importReg (runPath + \"Bin\\\\RegistryFiles\\\\pe_drv.reg\")  \n\n\n    print(\"\\n正在卸载配置单元\")\n    \n    unloadConfigUnit (\"hklm\\os_drv\")\n    unloadConfigUnit (\"hklm\\os_sys\")\n    unloadConfigUnit (\"hklm\\pe_def\")\n    unloadConfigUnit (\"hklm\\pe_soft\")\n    unloadConfigUnit (\"hklm\\pe_sys\")\n    unloadConfigUnit (\"hklm\\pe_drv\")\n\n    os.system(\"del /f /q /ah \\\"\" + runPath + \"TempFile\\\\apply\\\\Windows\\\\System32\\\\config\\\\*.*\\\"\")\n\n    print(\"\\n正在修改图标\")\n    if os.path.exists(runPath+\"TempFile\\\\apply\\\\Windows\\\\System32\\\\imageres.dll\"):\n        os.system(\"copy \\\"\"+runPath+\"TempFile\\\\apply\\\\Windows\\System32\\\\imageres.dll\\\" \\\"\"+runPath+\"Bin\\\\imageres_dll\\\\imageres.dll\\\"\")\n        os.system(runPath + \"Bin\\\\imageres_dll\\\\cmd.bat\")\n        os.system(\"del \"+runPath+\"TempFile\\\\apply\\\\windows\\\\system32\\\\imageres.dll /F /S /Q\")\n        os.system(\"del \"+runPath+\"TempFile\\\\apply\\\\windows\\\\SysWOW64\\\\imageres.dll /F /S /Q\")\n        os.system(\"copy \\\"\"+runPath+\"Bin\\\\imageres_dll\\\\new_imageres.dll\\\" \\\"\"+runPath+\"TempFile\\\\apply\\\\windows\\\\system32\\\\imageres.dll\\\"\")\n        os.system(\"copy \\\"\"+runPath+\"Bin\\\\imageres_dll\\\\new_imageres.dll\\\" \\\"\"+runPath+\"TempFile\\\\apply\\\\windows\\\\SysWOW64\\\\imageres.dll\\\"\")\n        #os.system(\"del \"+runPath+\"TempFile\\\\imageres32.dll /F /S /Q\")\n        #os.system(\"del \"+runPath+\"TempFile\\\\temp_imageres32.dll /F /S /Q\")\n        #os.system(\"del \"+runPath+\"TempFile\\\\new_imageres32.dll /F /S /Q\")\n\n    print(\"\\n正在破解USB弹出功能文件\")\n    os.system(runPath +\"Bin\\\\Tools\\\\binmay.exe -u \\\"\" + runPath + \"TempFile\\\\apply\\\\Windows\\\\System32\\\\DeviceSetupManager.dll\\\" -s u:SystemSetupInProgress -r u:DisableDeviceSetupMgr\")\n\n    print(\"\\n正在删除dll备份文件\")\n    os.system(\"del \\\"\" + runPath + \"TempFile\\\\apply\\\\Windows\\\\System32\\\\DeviceSetupManager.dll.org\\\"\")\n\n    print(\"\\n正在打包成Kernel.wim\")\n    os.system(wimlibImagex+\" capture \\\"\" + runPath + \"TempFile\\\\apply\\\" \\\"\"+runPath+\"\\\\Kernel.wim\\\" \\\"HotPE\\\" --boot --compress=lzx --rebuild\")\n\n    print(\"\\n正在打包成ISO\")\n    os.system(\"del \"+runPath+\"TempFile\\\\ISO\\\\HotPE\\\\Kernel.wim /F /S /Q\")\n    os.system(\"copy \\\"\"+runPath+\"Kernel.wim\\\" \\\"\"+runPath+\"TempFile\\\\ISO\\\\HotPE\\\\Kernel.wim\\\"\")\n    os.system(runPath +\"Bin\\\\Tools\\\\oscdimg.exe  -m -o -u2 -udfver102 -h -bootdata:2#p0,e,b\"+runPath+\"Bin\\\\Tools\\\\Etfsboot.com#pEF,e,b\"+runPath+\"Bin\\\\Tools\\\\Efisys.bin -l\\\"HotPE工具箱\\\" \"+runPath+\"TempFile\\\\ISO\\\\ \"+runPath+\"HotPE工具箱.iso\")\n\n    input(\"\\n构建结束，回车启动虚拟机测试\")\n    os.system(runPath + \"启动虚拟机测试.bat\")\n    \n    return\n\n\n\n#入口\nif __name__=='__main__':\n    #获取管理员权限\n    def is_admin():\n        try:\n            return ctypes.windll.shell32.IsUserAnAdmin()\n        except:\n            return False\n\n    if is_admin():\n        begin ()\n    else:\n        os.system(\"python.exe \" + runPath + \"HotPEBuildTools.py\")\n        #if sys.version_info[0] == 3:\n    \t#    ctypes.windll.shell32.ShellExecuteW(None, \"runas\", sys.executable, __file__, None, 1)\n        \n"
        },
        {
          "name": "启动虚拟机测试.bat",
          "type": "blob",
          "size": 0.0908203125,
          "content": "@echo off\nD:\\Software\\VMware\\vmrun.exe start \"D:\\文档\\Virtual Machines\\HotPE\\HotPE.vmx\" gui"
        },
        {
          "name": "捕捉wim.bat",
          "type": "blob",
          "size": 0.142578125,
          "content": "@echo off\ncd /d \"%~dp0\"\n%~dp0Bin\\Tools\\wimlib\\wimlib-imagex capture \"%~dp0TempFile\\apply\" \"%~dp0Kernel.wim\" \"Boot\" 1 --compress=lzx:100 --boot    "
        },
        {
          "name": "生成ISO.bat",
          "type": "blob",
          "size": 0.2939453125,
          "content": "@echo off\ncd /d \"%~dp0\"\ndel %~dp0TempFile\\ISO\\HotPE\\Kernel.wim /F /S /Q\ncopy %~dp0Kernel.wim %~dp0TempFile\\ISO\\HotPE\\Kernel.wim\n%~dp0Bin\\Tools\\oscdimg.exe  -m -o -u2 -udfver102 -h -bootdata:2#p0,e,b%~dp0Bin\\Tools\\Etfsboot.com#pEF,e,b%~dp0Bin\\Tools\\Efisys.bin %~dp0TempFile\\ISO\\ %~dp0HotPE工具箱.iso"
        }
      ]
    }
  ]
}