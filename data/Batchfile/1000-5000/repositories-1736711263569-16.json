{
  "metadata": {
    "timestamp": 1736711263569,
    "page": 16,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "zkteco-home/redis-windows",
      "stars": 2001,
      "defaultBranch": "master",
      "files": [
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "MIT License\n\nCopyright (c) 2022,2023 zkteco-home\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.388671875,
          "content": "\r\n# This is an unofficial version of Redis for Windows X64<!-- [zkteco-home](https://github.com/zkteco-home/redis-windows)-->\r\n\r\n## Warning: \r\n\r\n# it will be regarded as illegal use If you don't like.\r\n\r\nIf you want to get latest version or [report any issues],please contact (michael_zkteco@126.com), thanks in advance!\r\n\r\n\r\nIt includes several new user-facing features, significant performance\r\noptimizations, and many other improvements. It also includes changes that\r\npotentially break backwards compatibility with older versions. We urge users to\r\nreview the release notes carefully before upgrading.\r\n\r\nIn particular, users should be aware of the following changes:\r\n\r\n1. It stores AOF as multiple files in a folder; see Multi-Part AOF below.\r\n\t(automatically migrated an old-style AOF file (appendonly.aof) into the AOF directory (appendonlydir))\r\n\t\r\n2. It uses a new version 10 format for RDB files, which is incompatible\r\n\twith older versions.\r\n\r\n3. It converts ziplist encoded keys to listpacks on the fly when loading\r\n\tan older RDB format. Conversion applies to loading a file from disk or\r\n\treplicating from a Redis master and will slightly increase loading time.\r\n\r\nHere is a comprehensive list of changes in this release compared to 6.2.6.\r\nhttps://github.com/redis/redis/releases/tag/7.0-rc1\r\n\r\n\r\n\r\nIf you want to know more, this is a list of selected starting points:\r\n\r\nRedis 7.0 release Notes . https://github.com/redis/redis/releases/tag/7.0-rc1\r\n\r\nIntroduction to Redis data types. https://redis.io/topics/data-types-intro\r\n\r\nTry Redis directly inside your browser. https://try.redis.io\r\n\r\nThe full list of Redis commands. https://redis.io/commands\r\n\r\nThere is much more inside the official Redis documentation. https://redis.io/documentation\r\n\r\n## DISCLAIMER\r\n\r\nThis release is based on [Redis](https://github.com/redis/redis). It has passed all the standard tests.\r\n\r\nDue to the many functional differences between windows and linux,There are still unknown issues/bugs, in particular there is a bug to work properly in certain scenarios.\r\nIf you download and install it, you accept the following agreement by defaultï¼š\r\n\r\nNO LIABILITY FOR DAMAGES\r\n\r\nIn no event shall the author of this Software be liable for any damages whatsoever (including, without limitation, damages for loss of business profits, business interruption, loss of business information, or any other pecuniary loss) arising out of the use of or inability to use this product, even if the Author of this Software has been advised of the possibility of such damages.\r\n\r\n\r\n## Building from source code on Windows\r\n\r\n  - Redis binaries are built with the original source [Redis](https://github.com/redis/redis) and have been compiled with Visual Studio 2022 to obtain higher performance and better stability than the binaries built by Cygwin, MSYS, or even WSL2.\r\n\r\n  - Redis can be installed as a Windows Service.\r\n  \r\n## Supported Windows Versions\r\n\r\n- Windows Server 2008/2012/2016/2019/2022 x64  \r\n- Windows 7/10/11 x64\r\n\r\n\r\n\r\n## Default configrations\r\n\r\n\tsave \"\"\r\n\tmaxmemory 256mb\r\n\tappendonly no\r\n\tmaxmemory-policy allkeys-lru\r\n\r\n- if you want to modify parameters,it is recommanded you edit the redis.conf file\r\n\r\n## Support latest RedisJson \r\n\r\n\tedit redis.conf and add the following parameters:\r\n\t\r\n\tenable-module-command yes\r\n\tloadmodule rejson.dll\r\n\r\n\tReJson.dll download:\r\n\thttps://github.com/zkteco-home/RedisJson\r\n\r\n## Running Redis as a Service\r\n\r\n-   Self elevation of the Redis executable so that service commands would work from a non-elevated command prompt.\r\n\r\n-   Service naming so that multiple instances of the Redis service could be installed on one machine.\r\n\r\n-   Automatically adjusting folder permissions so that when Redis is run under the NETWORK SERVICE account it could modify the files in the installation directory.\r\n\r\n\r\n\r\n### Run install_redis.cmd as Administrator  (recommanded)\r\n\r\nyou also can use the following command and manage redis service:\r\n\r\n\r\nInstalling the Service\r\n------------------------\r\n\r\n*--service-install*\r\n\r\nThis must be the first argument on the redis-server command line. Arguments after this are passed in the order they occur to Redis when the service is launched. The service will be configured as Autostart and will be launched as \"NT AUTHORITY\\\\NetworkService\". Upon successful installation a success message will be displayed and Redis will exit.\r\n\r\nThis command does not start the service.\r\n\r\nFor instance:\r\n\r\nredis-server --service-install redis.conf --loglevel verbose\r\n\r\nUninstalling the Service\r\n------------------------\r\n\r\n*--service-uninstall*\r\n\r\nThis will remove the Redis service configuration information from the registry. Upon successful uninstallation a success message will be displayed and Redis will exit.\r\n\r\nThis does command not stop the service.\r\n\r\nFor instance:\r\n\r\nredis-server --service-uninstall\r\n\r\nStarting the Service\r\n--------------------\r\n\r\n*--service-start*\r\n\r\nThis will start the Redis service. Upon successful start, a success message will be displayed and Redis will begin running.\r\n\r\nFor instance:\r\n\r\nredis-server --service-start\r\n\r\nStopping the Service\r\n--------------------\r\n\r\n*--service-stop*\r\n\r\nThis will stop the Redis service. Upon successful termination a success message will be displayed and Redis will exit.\r\n\r\nFor instance:\r\n\r\nredis-server --service-stop\r\n\r\nNaming the Service\r\n------------------\r\n\r\n*--service-name **name***\r\n\r\nThis optional argument may be used with any of the preceding commands to set the name of the installed service. This argument should follow the service-install, service-start, service-stop or service-uninstall commands, and precede any arguments to be passed to Redis via the service-install command.\r\n\r\nThe following would install and start three separate instances of Redis as a service:\r\n\r\nredis-server --service-install --service-name redisService1 redis.conf\r\n\r\nredis-server --service-start --service-name redisService1\r\n\r\nThe following would stop and uninstall three separate instances of Redis as a service:\r\n\r\nredis-server --service-stop --service-name redisService1\r\n\r\nredis-server --service-uninstall --service-name redisService1\r\n\r\n\r\nSentinel for Redis Server on Windows\r\n------------------------------------\r\n \r\n\r\nAfter you have edited and created the necessary configuration files,you must open the necessary firewall port. you can install Redis Sentinel from the command prompt as follows:\r\n\r\n\r\nredis-server --service-install --service-name Sentinel sentinel.conf --sentinel\r\n\r\n## Contribute\r\n\r\n\r\n\r\n\r\n  \r\n"
        },
        {
          "name": "RELEASENOTES",
          "type": "blob",
          "size": 16.7734375,
          "content": "================================================================================\nRedis 7.0   Released  May 04 12:00:00 IST 2022\n================================================================================\n\n\nUpgrade urgency LOW: This is the first Release Candidate of Redis 7.0.\n\nRedis Release Candidate (RC) versions are early versions that are made available\nfor early adopters in the community to test them. We do not consider\nthem suitable for production environments.\n\nIntroduction to the Redis 7.0 release\n=====================================\n\nRedis 7.0 includes several new user-facing features, significant performance\noptimizations, and many other improvements. It also includes changes that\npotentially break backwards compatibility with older versions. We urge users to\nreview the release notes carefully before upgrading.\n\nIn particular, users should be aware of the following changes:\n\n1. Redis 7 stores AOF as multiple files in a folder; see Multi-Part AOF below.\n2. Redis 7 uses a new version 10 format for RDB files, which is incompatible\n   with older versions.\n3. Redis 7 converts ziplist encoded keys to listpacks on the fly when loading\n   an older RDB format. Conversion applies to loading a file from disk or\n   replicating from a Redis master and will slightly increase loading time.\n4. See sections about breaking changes mentioned below.\n\nHere is a comprehensive list of changes in this release compared to 6.2.6.\nEach one includes the PR number that added it so that you can get more details\nat https://github.com/redis/redis/pull/<number>\n\nNew Features\n============\n\n* Redis Functions: A new way to extend Redis with server-side scripts (#8693)\n  see https://redis.io/topics/functions-intro\n* ACL: Fine-grained key-based permissions and allow users to support multiple\n  sets of command rules with selectors (#9974)\n  see https://redis.io/topics/acl#key-permissions and https://redis.io/topics/acl#selectors.\n* Cluster: Sharded (node-specific) Pub/Sub support (#8621)\n  see https://redis.io/topics/pubsub#sharded-pubsub\n* First-class handling of sub-commands in most contexts (affecting ACL\n  categories, INFO commandstats, etc.) (#9504, #10147)\n* Command metadata and documentation (#10104)\n  see https://redis.io/commands/command-docs, https://redis.io/topics/command-tips\n* Command key-specs. A better way for clients to locate key arguments and their\n  read/write purpose (#8324, #10122, #10167)\n  see https://redis.io/topics/key-specs\n* Multi-Part AOF mechanism to avoid AOF rewrite overheads (#9788)\n* Cluster: Support for hostnames, instead of IP addresses only (#9530)\n* Improved management of memory consumed by network buffers, and an option to\n  drop clients when total memory exceeds a limit  (#8687)\n* Cluster: A mechanism for disconnecting cluster bus connections to prevent\n  uncontrolled buffer growth (#9774)\n* AOF: Timestamp annotations and support for point-in-time recovery (#9326)\n* Lua: support Function flags in EVAL scripts (#10126)\n  see https://redis.io/topics/eval-intro#eval-flags\n* Lua: Support RESP3 reply for Verbatim and Big-Number types (#9202)\n* Lua: Get Redis version via redis.REDIS_VERSION, redis.REDIS_VERSION_NUM (#10066)\n\nNew user commands or command arguments\n--------------------------------------\n\n* ZMPOP, BZMPOP commands (#9484)\n* LMPOP, BLMPOP commands (#9373)\n* SINTERCARD, ZINTERCARD commands (#8946, #9425)\n* SPUBLISH, SSUBSCRIBE, SUNSUBSCRIBE, PUBSUB SHARDCHANNELS/SHARDNUMSUB (#8621)\n* EXPIRETIME and PEXPIRETIME commands (#8474)\n* EXPIRE command group supports NX/XX/GT/LT options (#2795)\n* SET command supports combining NX and GET flags (#8906)\n* BITPOS, BITCOUNT accepts BIT index (#9324)\n* EVAL_RO, EVALSHA_RO command variants, to run on read-only replicas (#8820)\n* SORT_RO command, to run on read-only replicas (#9299)\n* SHUTDOWN arguments: NOW, FORCE, ABORT (#9872)\n* FUNCTION *, FCALL, FCALL_RO - https://redis.io/commands/function-load\n* CONFIG SET/GET can handle multiple configs atomically, in one call (#9748, #9914)\n* QUIT promoted to be a proper command, HOST: and POST demoted (#9798)\n* XADD supports auto sequence number via <ms>-* (#9217)\n\nNew administrative and introspection commands and command arguments\n-------------------------------------------------------------------\n\n* COMMAND DOCS (#9656, #10056, #10104)\n* COMMAND LIST (#9504)\n* COMMAND INFO accepts sub-commands as args, and no args too (#9504, #10056)\n* LATENCY HISTOGRAM (#9462)\n* CLUSTER LINKS (#9774)\n* CLUSTER DELSLOTSRANGE and CLUSTER ADDSLOTSRANGE (#9445)\n* CLIENT NO-EVICT (#8687)\n* ACL DRYRUN (#9974)\n* SLOWLOG GET supports passing in -1 to get all entries (#9018)\n\nCommand replies that have been extended\n---------------------------------------\n\n* COMMAND and COMMAND INFO extended with tips, key-specs and sub-commands\n  see https://redis.io/commands/command\n* ACL CAT, COMMAND LIST list sub-commands (#10127)\n* MODULE LIST reply includes path and args (#4848)\n* OBJECT ENCODING returns listpack instead of ziplist (#8887, #9366)\n* CLUSTER SLOTS hostname support (#9530)\n* COMMAND command: Added the `blocking` and `module` flags (#10104, #9656)\n\n\nPotentially Breaking Changes\n============================\n\n* Modifying the bind parameter to a non-default value will no longer implicitly\n  disable protected-mode (#9034)\n* Remove EVAL script verbatim replication, propagation, and deterministic\n  execution logic (#9812)\n  This has been deprecated and off by default since Redis 6 and is no longer\n  supported.\n* ACL: pub/sub channels are blocked by default (acl-pubsub-default=resetchannels) (#10181)\n* SCRIPT LOAD and SCRIPT FLUSH are no longer propagated to replicas / AOF (#9812)\n* ACL: Declarations of duplicate ACL users in startup files and command line\n  arguments will result in an error, whereas previously the last declaration\n  would overwrite the others. (#9330)\n* Replication: TTLs are always replicated as absolute (not relative) millisecond\n  timestamps (#8474)\n* Fixes in handling multi-key commands with expired keys on writable replicas (#9572)\n* CONFIG SET maxmemory returns before starting eviction (#10019)\n* AOF: The new Multi-Part mechanism stores data as a set of multiple files in a\n  designated folder (#9788)\n* Remove STRALGO command, preserve LCS a standalone command which only works on\n  keys (#9799)\n* Remove gopher protocol support (#9057)\n* MODULE and DEBUG commands disabled (protected) by default, for better security (#9920)\n* Snapshot-creating and other admin commands in MULTI/EXEC transactions are now\n  rejected (#10015)\n* PING is now rejected with -MASTERDOWN when replica-serve-stale-data=no (#9757)\n* ACL GETUSER reply now uses ACL syntax for `keys` and `channels` (#9974)\n* COMMAND reply drops `random` and `sort-for-scripts` flags, which are now part\n  of command tips (#10104)\n* LPOP/RPOP with count against non-existing list return null array (#10095)\n* INFO commandstats now shows the stats per sub-command (#9504)\n* ZPOPMIN/ZPOPMAX used to produce wrong replies when count is 0 with non-zset (#9711)\n* LPOP/RPOP used to produce wrong replies when count is 0 (#9692)\n* CONFIG GET bind now returns the current value in effect, even if the implicit\n  default is in use (#9034)\n* CONFIG REWRITE now rewrites the list of modules to load (#4848)\n* Config: repl-diskless-sync is now set to yes by default (#10092)\n* When shutting down, Redis can optionally wait for replicas to catch up on the\n  replication link (#9872)\n* Most CONFIG SET, REWRITE, RESETSTAT commands are now allowed during loading (#9878)\n* READONLY and READWRITE commands are now allowed when loading and on stale\n  replicas (#7425)\n* Fix ACL category for SELECT, WAIT, ROLE, LASTSAVE, READONLY, READWRITE, ASKING (#9208)\n* RESET is now allowed even when on unauthenticated connections (#9798)\n* SCRIPT LOAD is now allowed on stale replicas (#10126)\n\n\nSecurity improvements\n=====================\n\n* Sensitive configs and commands blocked (protected) by default (#9920)\n* Improve bind and protected-mode config handling (#9034)\n* Sentinel: avoid logging auth-pass value (#9652)\n* redis-cli: sensitive commands bypass the history file (#8895)\n\n\nPerformance and resource utilization improvements\n=================================================\n\n* Significant memory saving and latency improvements in cluster mode (#9356)\n* Significant memory savings in case of many hash or zset keys (#9228)\n* Replication backlog and replicas use one global shared replication buffer (#9166)\n* Significant reduction of copy-on-write memory overheads (#8974)\n* Free unused capacity in the cluster send buffer (#9255)\n* Memory efficiency, make full use of client struct memory for reply buffers (#8968)\n* Replace ziplist with listpack in Hash, List, Zset (#8887, #9366, #9740)\n* Add support for list type to store elements larger than 4GB (#9357)\n* Reuse temporary client objects for blocked clients by module (#9940)\n* Remove command argument count limit, dynamically grow argv buffer (#9528)\n* Optimize list type operations to seek from the nearest end (#9454)\n* Improvements in fsync to avoid large writes to disk (#9409)\n* BITSET and BITFIELD SET only propagated when the value actually changed (#9403)\n* Improve latency when a client is unblocked by module timer (#9593)\n\n\nOther General Improvements\n==========================\n\n* Make partial sync possible after master reboot (#8015)\n* Always create a base AOF file when redis starts from empty (#10102)\n* Replica keep serving data during repl-diskless-load=swapdb for better\n  availability (#9323)\n\n\nChanges in CLI tools\n====================\n* redis-cli --json, and -2 options (#9954)\n* redis-cli --scan, add sleep interval option (#3751)\n* redis-cli --replica optimization, skip RDB generation (#10044)\n* redis-cli --functions-rdb, generate RDB with Functions only (#9968)\n* redis-cli -X, take an arbitrary arg from stdin, extend --cluster call take -x (#9980)\n* redis-benchmark -x takes an argument from stdin (#9130)\n* redis-benchmark, Added URI support (#9314)\n* redis-cli monitor and pubsub can be aborted with Ctrl+C, keeping the cli alive (#9347)\n\n\nPlatform / toolchain support related improvements\n=================================================\n\n* Upgrade jemalloc 5.2.1 (#9623)\n* Fix RSS metrics on NetBSD and OpenBSD (#10116, #10149)\n* Check somaxconn system settings on macOS, FreeBSD and OpenBSD (#9972)\n* Better fsync on MacOS, improve power failure safety (#9545)\n\n\nNew configuration options\n=========================\n\n* CONFIG SET/GET can handle multiple configs in one call (#9748, #9914)\n* Support glob pattern matching for config include files (#8980)\n* appenddirname, folder where multi-part AOF files are stored (#9788)\n* shutdown-timeout, default 10 seconds (#9872)\n* maxmemory-clients, allows limiting the total memory usage by all clients (#8687)\n* cluster-port, can control the bind port of cluster bus (#9389)\n* bind-source-addr, configuration argument control IP of outgoing connections (#9142)\n* busy-reply-threshold, alias for the old lua-time-limit (#9963)\n* repl-diskless-sync-max-replicas, allows faster replication in some cases (#10092)\n* latency-tracking, enabled by default, and latency-tracking-info-percentiles (#9462)\n* cluster-announce-hostnameand cluster-preferred-endpoint-type (#9530)\n* cluster-allow-pubsublocal-when-down (#8621)\n* cluster-link-sendbuf-limit (#9774)\n* list-max-listpack-*, hash-max-listpack-*, zset-max-listpack-* as aliases for\n  the old ziplist configs (#8887, #9366, #9740)\n\n\nINFO fields and introspection changes\n=====================================\n\n* INFO: latencystats section (#9462)\n* INFO: total_active_defrag_time and current_active_defrag_time (#9377)\n* INFO: total_eviction_exceeded_time and current_eviction_exceeded_time (#9031)\n* INFO: evicted_clients (#8687)\n* INFO: mem_cluster_links, total_cluster_links_buffer_limit_exceeded (#9774)\n* INFO: current_cow_peak (#8974)\n* INFO: Remove aof_rewrite_buffer_length (#9788)\n* MEMORY STATS: Report slot to keys map size in in cluster mode (#10017)\n* INFO MEMORY: changes to separate memory usage of Functions and EVAL (#9780)\n* INFO MEMORY: Add mem_total_replication_buffers, change meaning of\n  mem_clients_slaves (#9166)\n* CLIENT LIST: tot-mem, multi-mem (#8687)\n* CLIENT LIST, INFO: Show RESP version (#9508)\n* SENTINEL INFO: tilt_mode_since (#9000)\n* LATENCY: Track module-acquire-GIL latency (#9608)\n\n\nModule API changes\n==================\n\n* Add API for replying with RESP3 types (#8521, #9639, #9632)\n* Add API for parsing RESP3 replies from RM_Call (#9202)\n* Add RM_Call '0' and '3' flags to control RESP version to be used (#9202)\n* Add Support for validating ACL explicitly (#9309, #9974)\n* Add missing list type functionality APIs (#8439)\n* Add API for yielding to Redis events during long busy jobs (#9963)\n* Add API for registering other file descriptors to the Redis event loop (#10001)\n* Enhance mem_usage/free_effort/unlink/copy and IO callbacks to have key name\n  and DB index (#8999)\n* Enhance mem_usage callback to get the requested sample size (#9612)\n* RM_GetContextFlags: CTX_FLAGS_ASYNC_LOADING, CTX_FLAGS_RESP3 (#9323, #9202)\n* Mark APIs as non-experimental (#9983)\n* RM_CreateSubcommand (#9504)\n* RM_KeyExists (#9600)\n* RM_TrimStringAllocation (#9540)\n* RM_LoadDataTypeFromStringEncver (#9537)\n* RM_MonotonicMicroseconds (#10101)\n* Add ReplAsyncLoad event and deprecate the ReplBackup event (#9323)\n* Add RM_SetModuleOptions OPTIONS_HANDLE_REPL_ASYNC_LOAD flag (#9323)\n\n\nBug Fixes\n=========\n\n* Fix COMMAND GETKEYS on EVAL without keys (#9733)\n* Improve MEMORY USAGE with allocator overheads (#9095)\n* Unpause clients after manual failover ends instead of waiting for timed (#9676)\n* Lua: fix crash on a script call with many arguments, a regression in v6.2.6 (#9809)\n* Lua: Use all characters to calculate string hash to prevent hash collisions (#9449)\n* Prevent LCS from allocating temp memory over proto-max-bulk-len (#9817)\n* Tracking: Make invalidation messages always after command's reply (#9422)\n* Cluster: Hide empty replicas from CLUSTER SLOTS responses (#9287)\n* CLIENT KILL killed all clients when used with ID of 0 (#9853)\n* Fix bugs around lists with list-compress-depth (#9849, #9779)\n* Fix one in a blue moon LRU bug in RESTORE, RDB loading, and module API (#9279)\n* Reset lazyfreed_objects info field with RESETSTAT, test for stream lazyfree (#8934)\n* Fix RDB and list node compression for handling values larger than 4GB (#9776)\n* Fix a crash when adding elements larger than 2GB to a Set or Hash (#9916)\n* Diskless replication could not count as a change and skip next database SAVE (#9323)\n* Fix excessive stream trimming due to an overflow (#10068)\n* Safe and organized exit when receiving SIGTERM while loading (#10003)\n* Improve EXPIRE TTL overflow detection (#9839)\n* Add missed error counting for INFO errorstats (#9646)\n* DECRBY LLONG_MIN caused negation overflow (#9577)\n* Delay discarding cached master when full synchronization (#9398)\n* Fix Stream keyspace notification and persistence triggers in consumer\n  creation and deletion (#9263)\n* Fix rank overflow in zset with more than 2B entries (#9249)\n* Avoid starting in check-aof / check-rdb / sentinel modes if only the folder\n  name contains that name (#9215, #9176)\n* create the log file only after done parsing the entire config file (#6741)\n* redis-cli: Fix SCAN sleep interval for --bigkeys, --memkeys, --hotkeys (#9624)\n* redis-cli: Fix prompt to show the right DB num and transaction state after\n  RESET (#9096)\n* Module API: fix possible propagation bugs in case a module calls CONFIG SET\n  maxmemory outside a command (#10019, #9890)\n* Module API: carry through client RESP version to module blocked clients (#9634)\n* Module API: release clients blocked on module commands in cluster resharding\n  and down state (#9483)\n* Sentinel: Fix availability after master reboot (#9438)\n* Sentinel: Fix memory leak with TLS (#9753)\n* Sentinel: Fix possible failover due to duplicate zero-port (#9240)\n* Sentinel: Fix issues with hostname support (#10146)\n* Sentinel: Fix election failures on certain container environments (#10197)\n\n\nKnown Issues\n============\n\nThis is a list of known issues that affect this release, and are planned to be\nfixed or completed before Redis 7 is officially released:\n\n* Module APIs for modules to provide additional command meta-data are still\n  missing.\n* Module APIs for supporting the new ACL selectors are still missing.\n* ACL key access selectors do not yet apply to SORT with GET/BY does.\n* Multi-Part AOF support in redis-check-aof is still missing.\n\nThanks to all the users and developers who made this release possible.\nWe'll follow up with more RC releases, until the code looks production ready\nand we don't get reports of serious issues for a while.\n\nA special thank you for the amount of work put into this release by:\n\n- Guy Benoish\n- Meir Shpilraien\n- Oran Agra\n- Chen Yang\n- Zhu Binbin\n- Yoav Steinberg\n- sundb\n- Madelyn Olson\n- Yossi Gottlieb\n- Viktor SÃ¶derqvist\n- Wang Yuan\n- Harkrishn Patro\n- Ozan Tezcan\n- Wen Hui\n- Huang Zhw\n- Nan Yan\n- Filipe Oliveira\n- Eduardo Semprebon\n- Yaacov Hazan\n- Itamar Haber\n- Zhao Zhao\n- Itay Perry\n- Ning Sun\n- zhugezy\n- menwen\n- Andy Pan\n\n"
        },
        {
          "name": "install_redis.cmd",
          "type": "blob",
          "size": 0.2109375,
          "content": "@echo on\ncd /d %~dp0\nsc create redis binPath= \"\\\"%CD%\\redis-server.exe\\\" --service-run \\\"%CD%\\redis.conf\\\"\" DisplayName= \"Redis\" start= auto depend= TCPIP\nsc description redis \"Redis Cache Service\"\nnet start redis\n\n\n"
        },
        {
          "name": "redis-benchmark.exe",
          "type": "blob",
          "size": 580,
          "content": null
        },
        {
          "name": "redis-check-aof.exe",
          "type": "blob",
          "size": 2650,
          "content": null
        },
        {
          "name": "redis-check-rdb.exe",
          "type": "blob",
          "size": 2650,
          "content": null
        },
        {
          "name": "redis-cli.exe",
          "type": "blob",
          "size": 841,
          "content": null
        },
        {
          "name": "redis-server.exe",
          "type": "blob",
          "size": 2650,
          "content": null
        },
        {
          "name": "redis.conf",
          "type": "blob",
          "size": 2.6181640625,
          "content": "# Save the DB to disk.\n# save <seconds> <changes> [<seconds> <changes> ...]\n#\n# Redis will save the DB if the given number of seconds elapsed and it\n# surpassed the given number of write operations against the DB.\n#\n# Snapshotting can be completely disabled with a single empty string argument\n# as in following example:\n#\n# save \"\"\n#\n# Unless specified otherwise, by default Redis will save the DB:\n#   * After 3600 seconds (an hour) if at least 1 change was performed\n#   * After 300 seconds (5 minutes) if at least 100 changes were performed\n#   * After 60 seconds if at least 10000 changes were performed\n#\n# You can set these explicitly by uncommenting the following line.\n#\n# save 3600 1 300 100 60 10000\n\nsave \"\"\nport 6379 \nrequirepass '' \nmaxmemory 256mb\nappendonly no\nmaxmemory-policy allkeys-lru\n\n# Examples:\n#\n# bind 192.168.1.100 10.0.0.1     # listens on two specific IPv4 addresses\n# bind 127.0.0.1 ::1              # listens on loopback IPv4 and IPv6\n# bind * -::*                     # like the default, all available interfaces\n#\n# ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the\n# internet, binding to all the interfaces is dangerous and will expose the\n# instance to everybody on the internet. So by default we uncomment the\n# following bind directive, that will force Redis to listen only on the\n# IPv4 and IPv6 (if available) loopback interface addresses (this means Redis\n# will only be able to accept client connections from the same host that it is\n# running on).\n#\n# IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES\n# COMMENT OUT THE FOLLOWING LINE.\n#\n# You will also need to set a password unless you explicitly disable protected\n# mode.\n# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nbind 127.0.0.1\n\n# Redis supports recording timestamp annotations in the AOF to support restoring\n# the data from a specific point-in-time. However, using this capability changes\n# the AOF format in a way that may not be compatible with existing AOF parsers.\n#aof-timestamp-enabled no\n\n# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.\n# This makes the format more resistant to corruption but there is a performance\n# hit to pay (around 10%) when saving and loading RDB files, so you can disable it\n# for maximum performances.\n#\n# RDB files created with checksum disabled have a checksum of zero that will\n# tell the loading code to skip the check.\n\nrdbchecksum no\n\n# By default protected mode is enabled. You should disable it only if\n# you are sure you want clients from other hosts to connect to Redis\n# even if no authentication is configured.\n\nprotected-mode yes\n\n"
        }
      ]
    }
  ]
}