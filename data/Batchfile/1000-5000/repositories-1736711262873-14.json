{
  "metadata": {
    "timestamp": 1736711262873,
    "page": 14,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "CesiumGS/3d-tiles",
      "stars": 2183,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.33203125,
          "content": ".DS_Store\nThumbs.db\n.idea\n\n# Ignore intermediate and output files from metanorma\n/specification/iev\n/specification/relaton\n/specification/Specification.xml\n/specification/Specification.pdf\n/specification/Specification.html\n/specification/Specification.err\n/specification/Specification.html.err\n/specification/Specification.presentation.xml\n"
        },
        {
          "name": "3d-tiles-reference-card-1.1.pdf",
          "type": "blob",
          "size": 1219.3447265625,
          "content": null
        },
        {
          "name": "3d-tiles-reference-card.pdf",
          "type": "blob",
          "size": 4199.9296875,
          "content": null
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 4.818359375,
          "content": "\n\n- Version 1.1, 2023-01-09\n\n  - The [3D Tiles Specification 1.1](https://docs.ogc.org/cs/22-025r4/22-025r4.html) was submitted to the Open Geospatial Consortium (OGC), and approved as an OGC Community Standard _(2022-12-17)_\n   \n  - 3D Tiles 1.1 adds new capabilities to 3D Tiles. The additions have been proposed and published as a set of draft extensions, summarized under the name [*3D Tiles Next*](https://cesium.com/blog/2021/11/10/introducing-3d-tiles-next/). The proposed extensions have undergone thorough testing and review, and have been the basis for the additions to the 3D Tiles 1.1 core specification. The new capabilities that have been introduced in 3D Tiles 1.1 are the following:\n    \n    - **Support for glTF 2.0 assets as tile content:** \n    \n      In 3D Tiles 1.1, it is possible to use [glTF 2.0](https://www.khronos.org/gltf/) as the tile content. This improves the interoperability with the broader 3D content and tooling ecosystem. \n    \n      This functionality has originally been proposed as the [`3DTILES_content_gltf`](./extensions/3DTILES_content_gltf) extension for 3D Tiles 1.0.\n    \n    - **Support for multiple contents:**: \n      \n      Each tile in a 3D Tiles 1.1 tileset can now refer to _multiple_ contents. These contents can be organized in various ways, and they may represent different map layers or different representations of the same tile data. \n      \n      This functionality has originally been proposed as the [`3DTILES_multiple_contents`](./extensions/3DTILES_multiple_contents) extension for 3D Tiles 1.0.\n    \n    - **Implicit tiling:** \n    \n      An implicit definition of the spatial structure of a tileset allows for more compact representations of tilesets and their bounding volume hierarchy, faster spatial queries due to the implicit spatial indexing, and improved interoperability with other geospatial formats.\n    \n      This functionality has originally been proposed as the [`3DTILES_implicit_tiling`](./extensions/3DTILES_implicit_tiling) extension for 3D Tiles 1.0.\n  \n    - **Metadata:**\n    \n      3D Tiles 1.1 provides mechanisms to associate metadata with elements of a tileset on all levels of granularity. Metadata may be assigned to tilesets, tiles, or tile content groups. It is based on the format-agnostic [3D Metadata Specification](./specification/Metadata), which defines the key concepts of schemas, property types, and storage formats.\n\n      This functionality has originally been proposed as the [`3DTILES_metadata`](./extensions/3DTILES_metadata) extension for 3D Tiles 1.0.\n\n    - **Recommended glTF extensions:**\n   \n      The new functionality for associating metadata with elements of a 3D Tiles tileset is based the [3D Metadata Specification](./specification/Metadata). This specification also serves as the basis for glTF extension proposals that allow a unified approach for managing metadata even for individual vertices and texels on glTF 2.0 geometry. The proposed glTF 2.0 extensions are:\n    \n      - The [`EXT_mesh_features`](https://github.com/CesiumGS/glTF/tree/3d-tiles-next/extensions/2.0/Vendor/EXT_mesh_features) extension that allows assigning identifiers to geometry and subcomponents of geometry within a glTF 2.0 asset.\n    \n      - The [`EXT_structural_metadata`](https://github.com/CesiumGS/glTF/tree/3d-tiles-next/extensions/2.0/Vendor/EXT_structural_metadata) extension that allows storing structured metadata within a glTF 2.0 asset.\n    \n      The detailed revision history for the proposed glTF extensions can be found in the [glTF extension proposals revision history](./specification/TileFormats/glTF/REVISION_HISTORY.md).\n\n\n  - The additional capabilities of 3D Tiles 1.1 provide more versatile and expressive mechanisms to represent the following elements of 3D Tiles 1.0, which are therefore deprecated:\n\n    - **Legacy tile formats:**\n\n      The functionalities of Batched 3D Models, Instanced 3D Models, Point Clouds and Composite Tiles can largely be emulated with glTF tile content and the proposed glTF extensions. The [migration guide](./specification/TileFormats/glTF/) contains further information about how to replace the legacy tile formats with glTF. \n\n      The deprecation of the legacy tile formats implies the deprecation of the associated extensions, namely the `3DTILES_batch_table_hierarchy` extension and the `3DTILES_draco_point_compression` extension.\n\n    - **Legacy tileset properties:**\n\n      The `tileset.properties` dictionary in 3D Tiles 1.0 could contain a simple form of per-feature metadata about the tileset. This is deprecated in favor of the more powerful metadata model of 3D Tiles 1.1.\n\n\n\n- [Version 1.0](https://github.com/CesiumGS/3d-tiles/tree/1.0), 2018-06-06\n\n  - The [3D Tiles Specification 1.0](http://docs.opengeospatial.org/cs/18-053r2/18-053r2.html) was submitted to the Open Geospatial Consortium (OGC), and approved as an OGC Community Standard _(2018-12-14)_\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.6904296875,
          "content": "# Code of Conduct \n\nOne of Cesium's strengths is our community. Our contributors and users are pushing the 3D geospatial field to amazing new levels. We rely on an open, friendly, inclusive environment to facilitate this. As such, we follow the [Contributor Covenant](http://contributor-covenant.org/)'s [Code of Conduct](http://contributor-covenant.org/version/1/4/code-of-conduct.md) to ensure a harassment-free experience in the Cesium community. Any unacceptable behavior can be confidentially sent to the core team at patrick@cesium.com.\n\nThis applies to this repository, forum, twitter, and all channels, including all repositories in the [CesiumGS](https://github.com/CesiumGS) GitHub organization.\n\n"
        },
        {
          "name": "Q-and-A.md",
          "type": "blob",
          "size": 6.8955078125,
          "content": "<!-- omit in toc -->\n# 3D Tiles Q&A\n\n<!-- omit in toc -->\n## Contents\n\n- [General Q&A](#general-qa)\n  - [Is 3D Tiles specific to Cesium?](#is-3d-tiles-specific-to-cesium)\n  - [What is the relationship between 3D Tiles and glTF?](#what-is-the-relationship-between-3d-tiles-and-gltf)\n  - [Does 3D Tiles support runtime editing?](#does-3d-tiles-support-runtime-editing)\n  - [Will 3D Tiles replace KML?](#will-3d-tiles-replace-kml)\n- [Technical Q&A](#technical-qa)\n  - [How does 3D Tiles support heterogeneous datasets?](#how-does-3d-tiles-support-heterogeneous-datasets)\n  - [How do I request the tiles for Level `n`?](#how-do-i-request-the-tiles-for-level-n)\n  - [Is screen space error the only metric used to drive refinement?](#is-screen-space-error-the-only-metric-used-to-drive-refinement)\n  - [How are cracks between tiles with vector data handled?](#how-are-cracks-between-tiles-with-vector-data-handled)\n  - [What compressed texture formats does 3D Tiles use?](#what-compressed-texture-formats-does-3d-tiles-use)\n\n### General Q&A\n\n#### Is 3D Tiles specific to Cesium?\n\nNo, 3D Tiles is an open standard for streaming massive heterogeneous 3D geospatial dataset. The Cesium team started this initiative because we need an open format optimized for streaming 3D content to CesiumJS. Today, 3D Tiles is an [open standard recognized by the Open Geospatial Consortium](https://www.ogc.org/standards/3DTiles), and an increasing number of visualization engines and geospatial applications use 3D Tiles as their delivery format. \n\n#### What is the relationship between 3D Tiles and glTF?\n\n[glTF](https://www.khronos.org/gltf) is an open standard for 3D models from Khronos (the same group that does WebGL and COLLADA). CesiumJS uses glTF as its 3D model format, and the Cesium team contributes heavily to the glTF specification and open-source COLLADA2GLTF converter. We recommend using glTF in CesiumJS for individual assets, e.g., an aircraft, a character, or a 3D building.\n\nWe created 3D Tiles for streaming massive geospatial datasets where a single glTF model would be prohibitive. Given that glTF is optimized for rendering, that CesiumJS has a well-tested glTF loader, and that there are existing conversion tools for glTF, 3D Tiles often use glTF for tile content. Tiles may reference glTF models directly, using the [glTF Tile Format](./specification/TileFormats/glTF/README.adoc).\n\nTaking this approach allows us to improve CesiumJS, glTF, and 3D Tiles at the same time. As new features and compression methods arrive in glTF, they benefit 3D models in CesiumJS, the glTF ecosystem, and 3D Tiles.\n\n#### Does 3D Tiles support runtime editing?\n\nA common use case for 3D buildings is to stream a city dataset, color each building based on one or more properties (e.g., the building's height), and then hide a few buildings and replace them with high-resolution 3D buildings. With 3D Tiles, this type of editing can be done at runtime.\n\nThe general case runtime editing of geometry on a building, vector data, etc., and then efficiently saving those changes in a 3D Tile will be possible, but is not the initial focus. However, styling is much easier since it can be applied at runtime without modification to the 3D Tiles tree and is part of the initial work.\n\n#### Will 3D Tiles replace KML?\n\nIn many cases, yes. KML regions and network links are a clunky approach to streaming massive 3D geospatial datasets on the web. 3D Tiles is built for the web and optimized for streaming. It uses true HLOD and does not need to triangulate polygons on the client side.\n\n### Technical Q&A\n\n#### How does 3D Tiles support heterogeneous datasets?\n\nGeospatial datasets are heterogeneous: 3D buildings are different from terrain, which is different from point clouds, which are different from vector data, and so on.\n\n3D Tiles supports heterogeneous data by allowing different formst of 3D data in a tileset. A tileset may contain tiles for 3D buildings, tiles for instanced 3D trees, and tiles for point clouds. The [glTF Tile Format](./specification/TileFormats/glTF/README.adoc) serves as a basis for representing these different forms of data: [glTF](https://www.khronos.org/gltf) is an open standard for 3D models and supports a large variety of 3D data, in a form that is optimized for efficient transmission.\n\n#### How do I request the tiles for Level `n`?\n\nMore generally, how does 3D Tiles support the use case for when the viewer is zoomed in very close to terrain, for example, and we do not want to load all the parent tiles toward the root of the tree; instead, we want to skip right to the high-resolution tiles needed for the current 3D view?\n\nFor a tileset with irregular structure, the tile hierarchy can be quickly traversed to find the desired tiles (see [Skipping Levels of Detail](https://cesium.com/blog/2017/05/05/skipping-levels-of-detail/)). For tilesets with common, regular subdivision patterns like quadtrees or octrees, [Implicit Tiling](./specification/ImplicitTiling) may be used, and allow near-constant time random access to arbitrary tiles in the hierarchy. \n\n#### Is screen space error the only metric used to drive refinement?\n\nAt runtime, a tile's `geometricError` is used to compute the screen space error (SSE) to drive refinement. Additionally, it is possible to drive the refinement using [metadata ](specification/README.adoc#core-metadata) that is associated with the tile or tile content. For example, points of interest may be better served with on/off distances and a label collision factor computed at runtime. Note that the viewer's height above the ground is rarely a good metric for 3D since 3D supports arbitrary views.\n\n#### How are cracks between tiles with vector data handled?\n\nUnlike 2D, in 3D, we expect adjacent tiles to be from different LODs so, for example, in the distance, lower resolution tiles are used. Adjacent tiles from different LODs can lead to an artifact called _cracking_ where there are gaps between tiles. For terrain, this is generally handled by dropping _skirts_ slightly angled outward around each tile to fill the gap. For 3D buildings, this is handled by extending the tile boundary to fully include buildings on the edge; [see Quadtrees](./specification/README.adoc#core-quadtrees). For vector data, this is an open research problem that we need to solve. This could involve boundary-aware simplification or runtime stitching.\n\n#### What compressed texture formats does 3D Tiles use?\n\n3D Tiles reference glTF content via the [glTF Tile Format](./specification/TileFormats/glTF/README.adoc), and the glTF format officially supports PNG, JPEG, and KTX2 / Basis Universal compressed textures ([`KHR_texture_basisu`](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_texture_basisu)). Additional texture compression methods may be added to glTF in the future, as [glTF extensions](https://github.com/KhronosGroup/glTF/tree/main/extensions). Texture compression is generally applied offline, as it is often prohibitively expensive to do in JavaScript and Web Workers.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.0400390625,
          "content": "![](figures/3DTiles_light_color_small.png#gh-dark-mode-only)![](figures/3DTiles_dark_color_small.png#gh-light-mode-only)\n\n# 3D Tiles\n[https://cesium.com/](https://cesium.com/)\n\n![](figures/photogrammetry-cad-fusion.jpg)\n\n_A building CAD model is fused with photogrammetry data using 3D Tiles, data courtesy of Bentley Systems._\n\n## Overview\n\n3D Tiles is an open specification for sharing, visualizing, fusing, and interacting with massive heterogenous 3D geospatial content across desktop, web, and mobile applications.\n\n#### Open and interoperable\n\nAs an open specification with an open-source runtime implementation, 3D Tiles allows data providers and app developers to make massive and complex 3D information more accessible, interoperable, and useful across all kinds of tools and applications.\n\n#### Heterogeneous\n\nWith a defined set of file formats, multiple types of 3D geospatial content including photogrammetry/massive models, BIM/CAD, 3D buildings, instanced features, and point clouds can be converted into 3D Tiles and combined into a single dataset.\n\n#### Designed for 3D\n\nBringing techniques from the field of 3D graphics and built on [glTF](https://github.com/KhronosGroup/glTF), 3D Tiles defines a spatial hierarchy for fast streaming and precision rendering, balancing performance and visual quality at any scale from global to building interiors.\n\n#### Semantic, interactive, and styleable\n\n3D Tiles preserve per-feature metadata to allow interaction such as selecting, querying, filtering, and styling efficiently at runtime.\n\n## Specification\n\n* [3D Tiles Format Specification](./specification/)\n* [3D Tiles Extension Registry](./extensions/)\n\nPlease provide specification feedback by [submitting issues](https://github.com/CesiumGS/3d-tiles/issues). For questions on implementation, generating 3D Tiles, or to showcase your work, join the [Cesium community forum](https://community.cesium.com/). \n\n## 3D Tiles Ecosystem\n\nThe [3D Tiles Resources](./RESOURCES.md) page contains a list of implementations of the 3D Tiles standard, as well as viewers, generators, data providers, and demos. The page also includes developer resources, blog posts, and presentations that explain the concepts and applications of 3D Tiles.\n\n## 3D Tiles Reference Cards\n\nThe [**3D Tiles Reference Cards**](./reference-cards) are approachable and concise guides to learning about the main concepts in 3D Tiles and designed to help integrate 3D Tiles into runtime engines for visualization and analysis of massive heterogeneous 3D geospatial content.\n\nThese guides augment the fully detailed 3D Tiles specification with coverage of key concepts to help developers jumpstart adopting 3D Tiles.\n\n## Version History\n\n- [3D Tiles 1.0](https://github.com/CesiumGS/3d-tiles/tree/1.0): The [3D Tiles Specification 1.0](http://docs.opengeospatial.org/cs/18-053r2/18-053r2.html) was submitted to the Open Geospatial Consortium (OGC), and approved as an OGC Community Standard _(2018-12-14)_\n- [3D Tiles 1.1](https://github.com/CesiumGS/3d-tiles)\n  - Additions:\n    - Support for structured metadata that can be associated with tilesets, tiles, tile content, and tile content groups\n    - Directly support glTF assets as tile contents\n    - Support for multiple tile contents\n    - Support for implicit tiling schemes\n  - Deprecations:\n    - The original tile formats (b3dm, i3dm, pnts, and cmpt) are deprecated in favor of glTF content\n    - The `tileset.properties` are deprecated, in favor of the more versatile metadata support\n\nMore details about the changes between 3D Tiles 1.0 and 3D Tiles 1.1 can be found in [CHANGES.md](CHANGES.md).\n\n## Contributing\n\n3D Tiles is an open specification and contributions including specification fixes, new tile formats, and extensions are encouraged. Issues and pull requests are welcome on this repository.\n\n---\n\nCreated by the <a href=\"https://cesium.com/\">Cesium team</a> and built on <a href=\"https://www.khronos.org/gltf\">glTF</a>.<br/>\n\n<a href=\"https://cesium.com/\"><img src=\"figures/cesium.jpg\" height=\"40\" /></a> <a href=\"https://www.khronos.org/gltf\"><img src=\"figures/gltf.png\" height=\"40\" /></a>\n"
        },
        {
          "name": "RESOURCES.md",
          "type": "blob",
          "size": 26.76171875,
          "content": "## 3D Tiles Resources\n\n- [**Introducing 3D Tiles**](https://cesium.com/blog/2015/08/10/introducing-3d-tiles/) - the motivation for and principles of 3D Tiles.  Read this first if you are new to 3D Tiles.\n- [**Introducing 3D Tiles Next, Streaming Geospatial to the Metaverse**](https://cesium.com/blog/2021/11/10/introducing-3d-tiles-next/) - the announcement of the 3D Tiles Next specification, summarizing the technical goals and application areas.\n- [**3D Tiles Reference Cards**](./reference-cards) - approachable and concise guides to learning about the main concepts in 3D Tiles and 3D Tiles 1.1, designed to help integrate 3D Tiles into runtime engines.\n- [**3D Tiles Q&A**](./Q-and-A.md)\n\n### Viewers\n\n- [CesiumJS](https://cesium.com/cesiumjs/) - An open source JavaScript runtime engine for visualizing 3D Tiles\n- [Cesium For Unreal](https://cesium.com/platform/cesium-for-unreal/) - An open source plugin for Unreal Engine for visualizing 3D Tiles\n- [Cesium For O3DE](https://cesium.com/platform/cesium-for-o3de/) - An open source plugin for O3DE, the Open 3D Engine, for visualizing 3D Tiles\n- [Cesium For Unity](https://cesium.com/platform/cesium-for-unity/) - An open source plugin that enables rich 3D geospatial workflows and applications based on 3D Tiles in Unity.\n- [3DTilesRendererJS](https://github.com/NASA-AMMOS/3DTilesRendererJS) - A renderer for 3D Tiles based on Three.js, developed by NASA-AMMOS. This serves as the basis for many other renderers, and includes dedicated [3D Tiles React Components](https://github.com/NASA-AMMOS/3DTilesRendererJS/blob/master/src/r3f/README.md). \n- [three-loader-3dtiles](https://github.com/nytimes/three-loader-3dtiles) - A Three.js loader module for loading and visualizing 3D Tiles, developed by NY Times R&D.\n- [threedtiles](https://github.com/ebeaufay/threedtiles) - A viewer for 3D Tiles based on Three.js\n- [mapbox-3dtiles](https://github.com/Geodan/mapbox-3dtiles) - A 3D Tiles viewer, implemented as a Mapbox GL JS custom layer, based on Three.js\n- [iTowns](https://github.com/iTowns/itowns) - A Three.js-based framework for visualizing 3D geospatial data, including 3D Tiles, based in 3DTilesRendererJS\n- [giro3d](https://gitlab.com/giro3d/giro3d) - A framework for visualizing 3D geospatial data, based on Three.js\n- [Hexagon Geospatial Luciad](https://www.hexagongeospatial.com/) - Tools for converting, processing, optimizing, hosting, and visualizing geospatial data based on 3D Tiles \n- [AGI STK](https://www.agi.com/products/stk) - A mission engineering software with visualization capabilities based on 3D Tiles\n- [Ecere GNOSIS](http://ecere.ca/) - A GIS visualization SDK with support for 3D Tiles\n- [TerriaJS](https://github.com/TerriaJS/terriajs) - A library for web-based geospatial data explorers, based on CesiumJS, with support for 3D Tiles\n- [GeoSolutions MapStore](https://www.geosolutionsgroup.com/technologies/mapstore/) - A framework for creating, managing and sharing maps with different types of geospatial content, including [support for 3D Tiles](https://www.geosolutionsgroup.com/blog/mapstore-release-2022_01_00/)\n- [3DCityDB-Web-Map-Client](https://github.com/3dcitydb/3dcitydb-web-map) A viewer for 3D Tiles and CityGML, based on CesiumJS\n- [deck.gl Tile3DLayer](https://deck.gl/docs/api-reference/geo-layers/tile-3d-layer) An implementation of a 3D Tiles renderer for deck.gl\n- [vsgCs](https://github.com/timoore/vsgCs) - A library for using 3D Tiles in Vulkan Scene Graph (VSG) applications, based on [Cesium Native](https://github.com/CesiumGS/cesium-native)\n- [Earth Explorer 3D](https://earthexplorer.techmaven.net/) - Earth Explorer 3D is an iOS, Android and Windows app that supports 3D Tiles, including 3D Tiles packages in online- and offline mode, as well as Cesium ion assets and different mapping services\n- [Map Data Explorer](https://mapexplorer.techmaven.net/) - Map Data Explorer is an iOS and Android App with support for different tile data formats, including 3D Tiles\n- [Oracle Spatial Studio](https://www.oracle.com/database/spatial/) - A spatial database platform that can display 3D Tiles data sets by integrating CesiumJS as a plugin, as described in [the release blog post](https://blogs.oracle.com/oraclespatial/post/oracle-spatial-studio-now-supports-displaying-3d-tiles-using-cesiumjs-plugin)\n - [Geofox Viewer](https://viewer.geofox.ai/?tileset=tilesetURL) which parses a `tileset` url-param search query and displays the provided `tileset.json` url dataset\n- [t3d-3dtiles](https://github.com/uinosoft/t3d-3dtiles) - An extension of the [ThingsJS 3D Engine](https://github.com/uinosoft/t3d.js) for loading and viewing 3D Tiles\n- [UltraGlobe](https://github.com/ebeaufay/UltraGlobe) - A library for handling geospatial data in three.js, supporting several geospatial formats, including 3D Tiles\n\n### Implementations\n\n- [CesiumJS](https://github.com/CesiumGS/cesium) - An open source JavaScript runtime engine for visualizing 3D Tiles\n- [Cesium Native](https://github.com/CesiumGS/cesium-native) - A set of C++ libraries for 3D geospatial including an engine-agnostic 3D Tiles loader\n- [loaders.gl](https://github.com/visgl/loaders.gl) - A framework for loaders for geospatial data, including 3D Tiles\n- [Unity GIS Streaming Framework](https://github.com/Unity-Technologies/com.unity.gis.streaming-framework) - A framework for streaming 3D geospatial data for visualization in Unity, with 3D Tiles support\n- [ArcGIS Maps SDK for Native Apps](https://doc.arcgis.com/en/arcgis-online/reference/tile-layers.htm) - Supports 3D Tiles layers, as described in the [release blog post for version 200.4](https://www.esri.com/arcgis-blog/products/developers/announcements/whats-new-in-arcgis-maps-sdks-for-native-apps-200-4/). \n- [Unity3DTiles](https://github.com/NASA-AMMOS/Unity3DTiles) - A Unity based implementation of the 3DTiles open format for streaming and rendering large static models such as those generated by photogrammetry pipelines \n- [cesium_3d_native](https://github.com/odd-io/cesium_3d_native) - A Dart package for working with 3D Tiles, with a functionality that is similar to that of `cesium-native`, including the functionality to load and traverse the tileset to determine visible tiles\n\n### Tools\n\n- [3d-tiles-validator](https://github.com/CesiumGS/3d-tiles-validator) - A validator for the tileset JSON file and tile formats of 3D Tiles\n- [3d-tiles-tools](https://github.com/CesiumGS/3d-tiles-tools) - A collection of tools and utilities for converting, optimizing, processing, and analyzing 3D Tiles data\n- [blender-3d-tiler](https://gitee.com/cesium_processing/blender-3d-tiler) - A tool for tiling 3D models using the Blender API\n- [Blosm](https://github.com/vvoovv/blosm) - Blosm for Blender (formerly known as Blender-OSM) allows importing OpenStreetMap and 3D Tiles data into Blender\n- [GeoNode](https://github.com/GeoNode/geonode) - A geospatial content management system with direct support for 3D Tiles\n- [GeoTileLoader](https://github.com/mhama/GeoTileLoader) - A library for Unity3D that loads and displays 3D Tiles data\n- [3D Tile content inspector](https://github.com/bbbbx/3d-tile-content-inspector) - An online tool to inspect tile content in PNTS, B3DM, I3DM, CMPT and GLB format\n\n### Sample Data\n\n- [3d-tiles-samples](https://github.com/CesiumGS/3d-tiles-samples) - Sample data sets demonstrating different capabilities of 3D Tiles\n- [CesiumJS 3D Tiles Spec files](https://github.com/CesiumGS/cesium/tree/main/Specs/Data/Cesium3DTiles) - The data that is used for testing the 3D Tiles support in CesiumJS. This data was mostly generated with the [3d-tiles-samples-generator](https://github.com/CesiumGS/3d-tiles-samples-generator).\n- [3DTilesSampleData](https://github.com/NASA-AMMOS/3DTilesSampleData) - 3D Tiles data sets generated from the NASA Curiosity Rover data\n- [cesium_3dtiles_samples](https://github.com/bertt/cesium_3dtiles_samples) - Sample data sets demonstrating different features of 3D Tiles\n- [mapbox_3dtiles_samples](https://github.com/bertt/mapbox_3dtiles_samples) - Sample data for MapBox 3D Tiles support, with a [blog post 'Exploring 3D Options of MapBox V3'](https://bertt.wordpress.com/2023/08/21/exploring-3d-options-of-mapbox-v3/)\n\n### Open data\n - [Strasbourg Od@CiT](https://odacit.3d.strasbourg.eu/) viewer and sample [tileset.json](https://s3.eu-west-2.wasabisys.com/ems-sgct-photomaillage/ODACIT/EMS_PM2022/tileset.json)\n - [Auvergne Rhone Alpes](https://3d.craig.fr/viewer/) - also see [metadata](https://catalogue.datara.gouv.fr/geonetwork/apps/api/records/60eabec9-6780-4dae-acb7-a211f195188b) and sample tileset.json for [Clermont](https://3d.craig.fr/datasets/Clermont/3dtiles/tileset.json) & [Saint-Etienne](https://3d.craig.fr/datasets/St-Etienne/3dtiles/tileset.json)\n - [Métropole Européenne de Lille 2016](https://www.data.gouv.fr/fr/datasets/maquette-3d-mel-2016-1/) and [tileset.json](https://webimaging.lillemetropole.fr/externe/maillage/2016_mel_10cm/3dtiles/tileset.json)\n - Planet Labs has a collection of satellite stereo imagery 3dtiles, see the [STAC catalog](https://www.planet.com/data/stac/browser/open-skysat-data/angkor-wat/catalog.json) e.g. [angkor-wat tileset.json](https://storage.googleapis.com/open-cogs/planet-stac/angkor-wat/3d-geofox.ai/3DTiles/tileset.json)\n - [Utrecht](https://bertt.github.io/cesium_3dtiles_samples/samples/esridemo/) ESRI 3d tiles [tileset.json](https://tiles.arcgis.com/tiles/V6ZHFr6zdgNZuVG0/arcgis/rest/services/Utrecht_3D_Tiles_Integrated_Mesh/3DTilesServer/tileset.json)\n - [Soest](https://soest.virtualcitymap.de/#/legend) and [tileset.json](https://soest.virtualcitymap.de/datasource-data/HOSTING-Soest/3D-Mesh_2023/tileset.json)\n - [Aarhus](https://sdfe-hosting.virtualcitymap.de/Aarhus/#/) and [tileset.json](https://sdfe-hosting.virtualcitymap.de/Aarhus/datasource-data/Aarhus_Mesh/tileset.json)\n - [AGI Headquarters tileset.json](https://pelican-public.s3.amazonaws.com/3dtiles/agi-hq/tileset.json)\n - Plateau [tutorial](https://github.com/Project-PLATEAU/plateau-streaming-tutorial/blob/main/3d-tiles/plateau-3dtiles-streaming.md) for buildings 3Dtiles models, for example minato-ku_lod4 [tileset.json](https://assets.cms.plateau.reearth.io/assets/99/e2a800-7d75-4d11-94e1-bef604c39d01/13103_minato-ku_pref_2023_citygml_1_op_bldg_3dtiles_13103_minato-ku_lod4/tileset.json)\n\n### Generators\n\n- [Cesium ion](https://cesium.com/platform/cesium-ion/) - Upload and convert content to 3D Tiles. Data can be combined and fused with curated global 3D content including Cesium World Terrain, Bing Maps imagery, and Cesium OSM Buildings. \n- [cdb-to-3dtiles](https://github.com/CesiumGS/cdb-to-3dtiles) - A tool for converting Open Geospatial Consortium (OGC) CDB datasets into 3D Tiles for efficient streaming and rendering\n- [Safe FME](https://hub.safe.com/packages/safe/cesiumion) - A desktop application for transforming data. The `CesiumIonConnector` converts data to 3D Tiles via Cesium ion.\n- [Bentley ContextCapture](https://www.bentley.com/en/products/product-line/reality-modeling-software/contextcapture) - A desktop photogrammetry application for converting photographs and/or point clouds to 3D Tiles.\n- [Bentley MicroStation](https://www.bentley.com/en/products/brands/microstation) - Desktop CAD software that can export 3D Tiles.\n- [osm-cesium-3d-tiles](https://github.com/kiselev-dv/osm-cesium-3d-tiles) - A tool for converting OSM buildings to Cesium 3d tiles\n- [OpenDroneMap](https://www.opendronemap.org/) - Solutions for  collecting, processing, analyzing and displaying aerial data, with support for 3D Tiles. \n- [Agisoft Metashape](https://www.agisoft.com/) - Photogrammetry models can directly be uploaded to Cesium ion, converted into the 3D Tiles format, and shared and combined with other 3D- and imagery data.\n- [nFrames](https://www.nframes.com/) - The SURE software system is an application for 3D reconstruction from images that can export the results as 3D Tiles data sets.\n- [Melown Vadstena](https://www.melowntech.com/products/vadstena/) - A software that can process drone-based close-range imagery and low-overlap nadir imagery, to create 3D models that can be exported in the 3D Tiles format.\n- [py3dtilers](https://github.com/VCityTeam/py3dtilers) - A tool and library for building 3D Tiles tilesets from OBJ, GeoJSON, IFC or CityGML input data. \n- [py3dtiles](https://gitlab.com/Oslandia/py3dtiles) - A Python tool and library for creating and manipulating 3D Tiles\n- [gocesiumtiler](https://github.com/mfbonfigli/gocesiumtiler) - A Golang tool to convert point clouds stored as LAS files to Cesium 3D Tiles\n- [Entwine](https://entwine.io/) - A data organization library for massive point clouds, with the option to output 3D Tiles\n- [AGI GCS](https://www.agi.com/capabilities/geospatial-content-server) - Geospatial Content Server (GCS) is a hosting platform for 3D geospatial data that optimizes data and converts it into 3D Tiles for efficient streaming and visualization.\n- [Veesus](https://veesus.com/) - Software for editing, visualizing, and serving point clouds in different formats, including 3D Tiles.\n- [Hexagon Geospatial](https://www.hexagongeospatial.com/) - Tools for converting, processing, optimizing, hosting, and visualizing geospatial data based on 3D Tiles \n- [RhinoTerrain](https://www.rhinoterrain.com/) - Terrain modeling and city builder software with 3D Tiles export\n- [4DMapper](https://4dmapper.com/) - A platform for visualizing, managing and delivering geospatial data, with 3D Tiles export\n- [cesium_pnt_generator](https://github.com/mattshax/cesium_pnt_generator) - A set of prototype scripts to convert LAS data into 3D Tiles\n- [cesium-point-cloud-generator](https://github.com/tum-gis/cesium-point-cloud-generator) - A tool for the generation of point cloud visualization datasets in the 3D Tiles format.\n- [pg2b3dm](https://github.com/Geodan/pg2b3dm) - A tool for converting 3D geometries from PostGIS into 3D Tiles B3DM tiles\n- [Obj2Tiles](https://github.com/OpenDroneMap/Obj2Tiles) - A command-line tool and library for converting OBJ files to 3D Tiles\n- [3dtiles](https://github.com/fanvanzh/3dtiles) - Tools for converting OSGB, Esri Shapefiles and FBX files into 3D Tiles\n- [gltf-to-3d-tiles](https://github.com/dreamergz/gltf-to-3d-tiles) - A tool for converting glTF models into GLB, B3DM or 3D Tiles\n- [Apache Baremaps](https://github.com/apache/incubator-baremaps/pull/569) - Experimental support for 3D Tiles in Apache Baremaps\n- [Kitware](https://www.kitware.com/3d-tiles-generation-using-vtk/) - The Kitware Danesfield application can convert satellite imagery into 3D mesh models of buildings atop a separate terrain mesh, and packages the 3D mesh models as 3D Tiles\n- [Ansys Terrain2Tiles](https://www.ansys.com/blog/generate-3d-tiles-terrain2tiles-utility) - A command-line utility that converts terrain from many industry-recognized terrain file types to 3D Tiles\n- [PLATEAU GIS Converter](https://github.com/MIERUNE/plateau-gis-converter) - A tool for converting PLATEAU 3D city models from CityGML into different geospatial formats, including 3D Tiles\n\n### Data Providers\n\n- [Maxar](https://www.maxar.com/) - Vricon, a Maxar Company, offers massive, highly detailed 3D Models in 3D Tiles format as part of their [Precision3D Data Suite](https://resources.maxar.com/precision3d-data-suite), in close [cooperation with Cesium](https://cesium.com/industries/mission-support/usg-work-from-home/)\n- [Aerometrex](https://aerometrex.com/) - Aerometrex offers geographically accurate high-resolution models in the 3D Tiles format. See [this Cesium blog post](https://cesium.com/blog/2017/07/26/aerometrex-melbourne/) for examples of Aerometrex data rendered in Cesium. \n- [Nearmap](https://www.nearmap.com/us/en) - Nearmap manages a library of large-scale 3D content that can be exported in 3D Tiles. Read more about their support in this [blog post about streaming 3D models](https://www.nearmap.com/us/en/aerial-view-blog/cesium-3d-tiles-helping-cities-stream-3d-models).\n- [geopipe](https://geopi.pe/) - A platform for digital twins for games, simulation, architecture, with options for efficient visualization in the browser, based on 3D Tiles\n- [CyberCity3D](https://www.cybercity3d.com/) - City models for use in smart cities presentations, building analytics and for contextual environmental needs, streamed using 3D Tiles\n- [Virtual City Systems](https://vc.systems/en/) - A virtual city hosting- and visualization platform for visualizing 3D cities based on 3D Tiles\n- [DroneDeploy](https://www.dronedeploy.com/) - A drone data repository that uses CesiumJS and Cesium ion for tiling and visualizing massive 3D models using 3D Tiles\n- [Google Photorealistic 3D Tiles](https://cloud.google.com/blog/products/maps-platform/create-immersive-3d-map-experiences-photorealistic-3d-tiles) - Photorealistic 3D Tiles of over 2500 cities across 49 countries, offered via the Google Map Tiles API\n- [Matterport](https://matterport.com) - Photorealistic 3D Tiles of over 10m+ spaces captured across the globe, using 3D Tiles to visualize and stream massive 3d models\n- [basemap.de](https://basemap.de/) - A group of cartographic products developed by the federal and state governments of Germany, with [3D visualizations based on CesiumJS](https://basemap.de/beta/)\n- [Vexcel 3D Cities](https://vexceldata.com/products/3d-cities/) - High quality 3D Tiles data for more than 60 cities, [available through Cesium ion Self-Hosted](https://cesium.com/blog/2024/06/25/vexcel-cesium/)\n\n### Selected Talks\n\n- _3D Tiles Next: Bringing Massive 3D Geospatial Data to the Web_, WebGL + WebGPU Meetup (April 2022). [Video and slides](https://cesium.com/learn/presentations/#webg-webgpu-meetup)\n- _3D Tiles Next: Data Performance for the Future of 3D Geospatial_, GEOINT 2022 Lightning Talk. [Slides](https://cesium.com/learn/presentations/#geoint-lightning-talk-2022)\n- _Rendering the World with 3D Tiles_, a guest lecture at Drexel University (February 2022). [Slides](https://cesium.com/learn/presentations/#rendering-the-world-with-3d-tiles)\n- _Introducing 3D Tiles Next_, at Web3D Conference 2021. [Video and slides](https://cesium.com/learn/presentations/#web3d-conference-2021)\n- _Bridging the Physical and Digital Worlds: Cesium and 3D Tiles for O3DE_, at O3DECon 2021. [Video and slides](https://cesium.com/learn/presentations/#o3decon-presentation)\n- _3D Tiles and Visualization Advancements in STK 11.6_, AGI Webinar May 2019. [Video](https://cesium.com/learn/presentations/#webinar-stk-11.6-2019)\n- _What's New and What's Next for Cesium and 3D Tiles?_, at FOSS4G NA 2019. [Slides](https://cesium.com/learn/presentations/#whats-new-foss4g-na-2019)\n- _3D Tiles with FME_, at SIGGRAPH 2018. [Slides](https://cesium.com/learn/presentations/#siggraph-2018-ceium-bof-safe)\n- _3D Tiles Update - 3DP SWG_, OGC TC Meeting June 2018. [Slides](https://cesium.com/learn/presentations/#ogc-tc-2018-3d-tiles-update)\n- _Massive Point Cloud Visualization with CesiumJS, 3D Tiles, and Cesium ion_, OGC TC Meeting June 2018. [Slides](https://cesium.com/learn/presentations/#ogc-tc-meeting-2018)\n- _Data Fusion With 3D Tiles_, FOSS4G NA 2018. [Slides](https://cesium.com/learn/presentations/#data-fusion-foss4g-na-2018)\n- _CityGML, 3D Tiles and Cesium - A Data Fusion Symphony_, FOSS4G NA 2018. [Slides](https://cesium.com/learn/presentations/#citygml-3d-tiles-and-cesium-2018)\n- _3D Tiles in Action_, at FOSS4G 2017. [Slides](https://cesium.com/learn/presentations/#3d-tiles-in-action-2017)\n- _Point Clouds with 3D Tiles_, at the OGC Technical Committee Meeting (June 2018). [Slides](https://cesium.com/learn/presentations/#ogc-tc-meeting-2018)\n- _The Open Cesium 3D Tiles Specification: Bringing Massive Geospatial 3D Scenes to the Web_, at Web3D 2016. [Slides](https://cesium.com/learn/presentations/#3d-tiles-web3d-2016)\n- _3D Tiles: Beyond 2D Tiling_, at FOSS4G NA 2016. [Slides and Video](https://cesium.com/learn/presentations/#3d-tiles-foss4g-2016)\n- _3D Tiles motivation and ecosystem update_, at the OGC Technical Committee Meeting (March 2016). [Slides](https://cesium.com/learn/presentations/#ogc-3d-tiles-2016)\n- _3D Tiles intro_, at the Cesium BOF at SIGGRAPH 2015. [Slides](https://cesium.com/learn/presentations/#virtual-globes-using-webgl-and-cesium-2015)\n\n### Selected Articles\n\n- [Fine Grained Metadata in 3D Tiles Next](https://cesium.com/blog/2022/05/31/fine-grained-metadata-in-3d-tiles-next/). May 2022.\n- [An End-to-End Guide to Photogrammetry with Mobile Devices](https://rd.nytimes.com/projects/an-end-to-end-guide-to-photogrammetry-with-mobile-devices). September 2021.\n- [Georeferencing 3D models for Cesium](https://medium.com/terria/georeferencing-3d-models-for-cesium-7ccf609ee2ef). May 2020.\n- [Create 3D Tiles from KML/COLLADA with Per-Building Data](https://cesium.com/blog/2020/04/09/kml-collada-metadata/). April 2020.\n- [Bring Your Cesium ion 3D Tiles and Bing Imagery in osgEarth](https://cesium.com/blog/2020/04/02/osgearth-supports-cesium-ion-assets/). April 2020.\n- [Taking City Visualization into the Third Dimension with Point Clouds, 3D Tiles, and deck.gl](https://eng.uber.com/3d-tiles-loadersgl/). October 2019.\n- [Millimeter Precision Point Clouds with Cesium and 3D Tiles](https://cesium.com/blog/2018/06/27/millimeter-precision-point-clouds/). June 2018.\n- [OneSky Using Cesium / 3D Tiles For Volumetric Airspace Visualization](https://cesium.com/blog/2018/04/13/onesky-3dtiles/). April 2018.\n- [Cesium's Participation in OGC Testbed 13](https://cesium.com/blog/2018/02/06/citygml-testbed-13/). February 2018.\n- [Aerometrex and 3D Tiles](https://cesium.com/blog/2017/07/26/aerometrex-melbourne/). July 2017.\n- [Skipping Levels of Detail](https://cesium.com/blog/2017/05/05/skipping-levels-of-detail/). May 2017.\n- [Infrastructure Visualisation using 3D Tiles](https://cesium.com/blog/2017/04/12/site-see-3d-tiles/). April 2017.\n- [Optimizing Spatial Subdivisions in Practice](https://cesium.com/blog/2017/04/04/spatial-subdivision-in-practice/). April 2017.\n- [Optimizing Subdivisions in Spatial Data Structures](https://cesium.com/blog/2017/03/30/spatial-subdivision/). March 2017.\n- [What's new in 3D Tiles?](https://cesium.com/blog/2017/03/29/whats-new-in-3d-tiles/) March 2017.\n- [Streaming 3D Capture Data using 3D Tiles](https://cesium.com/blog/2017/03/06/3d-scans/). March 2017.\n- [Visualizing Massive Models using 3D Tiles](https://cesium.com/blog/2017/02/21/massive-models/). February 2017.\n\n\n### Applications and Services Using 3D Tiles\n\n| <div style=\"width:200px\">&nbsp;</div> |  |\n| :--- | :--- |\n| <a href=\"https://map.geo.admin.ch\">Swiss Federal Office of Topography<br/><img src=\"figures/ecosystem/swisstopo.jpg\"/></a> | The Swiss Federal Office of Topography offers a complete topographical map of Switzerland. The 3D view uses 3D Tiles for the terrain- and building models. |\n| <a href=\"https://www.cybercity3d.com/\">CyberCity3D<br/><img src=\"figures/ecosystem/CC3D.jpg\"/></a> | City models for use in smart cities presentations, building analytics and for contextual environmental needs, streamed using 3D Tiles |\n| <a href=\"https://vc.systems/en/\">Virtual City Systems<br/><img src=\"figures/ecosystem/virtualcitySYSTEMS.jpg\"/></a> | A virtual city hosting- and visualization platform for visualizing 3D cities based on 3D Tiles |\n| <a href=\"https://www.cityzenith.com/\">Cityzenith<br/><img src=\"figures/ecosystem/Cityzenith.jpg\"/></a> | A City Information Modeling tool that uses 3D Tiles in a pipeline for modeling digital twins |\n| <a href=\"https://georocket.io/\">GeoRocket<br/><img src=\"figures/ecosystem/3dps.jpg\"/></a> | A high-performance data store for geospatial files, developed by the competence center for Spatial Information Management of the Fraunhofer Institute for Computer Graphics Research |\n| <a href=\"https://www.data61.csiro.au/\">CSIRO Data61<br/><img src=\"figures/ecosystem/data61.jpg\"/></a> | The Commonwealth Scientific and Industrial Research Organisation created a National Digital Twin which includes 3D, time dynamic, and even real-time data, based on 3D Tiles |\n| <a href=\"https://www.gamesim.com/3d-geospatial-conform/\">GameSim Conform<br/><img src=\"figures/ecosystem/gamesim.jpg\"/></a> | A tool for building, visualizing, and editing rich 3D environments that can be exported as 3D Tiles, for urban planning, simulations, and games. |\n| <a href=\"https://www.sitesee.io/\">SiteSee<br/><img src=\"figures/ecosystem/sitesee.jpg\"/></a> | Provides telecom companies with 3D capture models of their infrastructure. The photogrammetry data is converted to 3D Tiles for efficient streaming and visualization. |\n| <a href=\"https://www.virtualgis.io/\">VirtualGIS<br/><img src=\"figures/ecosystem/virtualgis.jpg\"/></a> | A set of 2D, 3D and Augmented Reality GIS applications for visualizing data based on 3D Tiles and CesiumJS |\n| <a href=\"https://github.com/iTowns/itowns\">iTowns<br/><img src=\"figures/ecosystem/itowns.jpg\"/></a> | A Three.js-based framework for visualizing 3D geospatial data, including 3D Tiles |\n| <a href=\"https://geopi.pe/\">geopipe<br/><img src=\"figures/ecosystem/geopipe.jpg\"/></a> | A platform for digital twins for games, simulation, architecture, with options for efficient visualization in the browser, based on 3D Tiles |\n| <a href=\"https://data.grandlyon.com/\">data.grandlyon.com<br/><img src=\"figures/ecosystem/poulain.jpg\"/></a> | A 3D digital clone of Métropole de Lyon, based on 3D Tiles (Cesium blog post: [3D Digital Territory Lab: A Digital Clone of Métropole de Lyon](https://cesium.com/blog/2018/02/05/digital-territory-lab/)) |\n\n\n\n\n### Featured Demos\n\n<sub>(Note: These demos had been published based on the <a href=\"https://github.com/CesiumGS/cesium/blob/main/CHANGES.md#1871---2021-11-09\" target=\"_blank\">CesiumJS 1.87.1 Release</a>, which included experimental support for the extensions of 3D Tiles Next. Most of the features that are shown in these demos are now part of the 3D Tiles 1.1 core specification, or extensions of 3D Tiles 1.1)</sub>\n\n| <div style=\"width:200px\">&nbsp;</div> |  |\n| :--- | :--- |\n| <a href=\"https://demos.cesium.com/ferry-building\">Photogrammetry Classification<br/><img src=\"figures/ecosystem/CesiumDemoScreenshot-PhotogrammetryClassification.jpg\"/></a> | Components of the geometry in 3D Tiles can receive identifiers, and be associated with metadata via these identifiers. In this example, building components in a photogrammetry model are classified based on their type. |\n| <a href=\"https://demos.cesium.com/owt-uncertainty\">Property Textures<br/><img src=\"figures/ecosystem/CesiumDemoScreenshot-PropertyTextures.jpg\"/></a> | High-frequency data can be associated with the surface of geometry, by storing metadata for each surface point (texel) in a property texture |\n| <a href=\"https://demos.cesium.com/cdb-yemen\">Metadata<br/><img src=\"figures/ecosystem/CesiumDemoScreenshot-Properties.jpg\"/></a> | Metadata can be associated with elements of a tileset on different levels of granularity, and queried at runtime to support analytics and styling based on the property values. |\n| <a href=\"https://demos.cesium.com/owt-globe\">S2 Base Globe<br/><img src=\"figures/ecosystem/CesiumDemoScreenshot-S2BaseGlobe.jpg\"/></a> | An extension allows to divide geographic data into [S2 Cells](https://s2geometry.io/) to represent the whole globe with less distortion than traditional mapping approaches, and without singularities at the poles. |\n\n"
        },
        {
          "name": "extensions",
          "type": "tree",
          "content": null
        },
        {
          "name": "figures",
          "type": "tree",
          "content": null
        },
        {
          "name": "next",
          "type": "tree",
          "content": null
        },
        {
          "name": "reference-cards",
          "type": "tree",
          "content": null
        },
        {
          "name": "releases",
          "type": "tree",
          "content": null
        },
        {
          "name": "specification",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}