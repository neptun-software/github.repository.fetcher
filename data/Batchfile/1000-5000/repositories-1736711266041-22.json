{
  "metadata": {
    "timestamp": 1736711266041,
    "page": 22,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Alex313031/Thorium-Win",
      "stars": 1632,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": "CROSS_BUILD_VS_ARCHIVE",
          "type": "blob",
          "size": 0.1826171875,
          "content": "### For cross-building for Windows on Linux, a Visual Studio artifacts archive is needed. \n\nI have uploaded one here > https://github.com/Alex313031/Snippets/releases/tag/10.1.22621.1778\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.47265625,
          "content": "BSD 3-Clause License\n\nCopyright (c) 2023, Alexander David Frick\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.4990234375,
          "content": "![GitHub tag (latest SemVer)](https://img.shields.io/github/v/tag/alex313031/thorium-win?label=Version%3A) &nbsp;![GitHub](https://img.shields.io/github/license/alex313031/thorium-win?color=green&label=License%3A) &nbsp;![GitHub commit activity](https://img.shields.io/github/commit-activity/w/alex313031/thorium?color=blueviolet&label=Commit%20Activity%3A) &nbsp;![Subreddit subscribers](https://img.shields.io/reddit/subreddit-subscribers/ChromiumBrowser?style=social)\n\n# Thorium for Windows <img src=\"https://github.com/Alex313031/Thorium/blob/main/logos/STAGING/winflag_animated.gif\" width=\"64\">\n\n__Repo to serve Windows builds of [Thorium](https://github.com/Alex313031/Thorium)!__ \\\n__*IMPORTANT: PLEASE USE THE NEW WINDOWS 7/8 REPO HERE FOR WINDOWS 7/8/8.1 RELEASES* > https://github.com/Alex313031/thorium-win7__ \\\n__*NEW:* AVX2 Builds are now being served at https://github.com/Alex313031/Thorium-AVX2__ &nbsp;<img src=\"https://github.com/Alex313031/Thorium/blob/main/logos/STAGING/AVX2.png\" width=\"48\">\n\n<img src=\"https://github.com/Alex313031/Thorium-Win/blob/main/ThoriumLogo.png\">\n\nThis repo only hosts Windows builds. The other Thorium repos :\n\nMain repo that hosts the source code for all platforms and serves linux builds > https://github.com/Alex313031/Thorium\n\nWindows AVX2 repo that serves AVX2 Windows builds > https://github.com/Alex313031/Thorium-Win-AVX2\n\nMacOS builds for x64 and M1 ARM64 are here > https://github.com/Alex313031/Thorium-MacOS \\\n\nAndroid builds for ARM32 and ARM64 are here > https://github.com/Alex313031/Thorium-Android \\\n\nRaspberry Pi (ARM64) builds are here > https://github.com/Alex313031/Thorium-Raspi \\\n\nBuilds for Windows 7/8/8.1 are here > https://github.com/Alex313031/thorium-win7 \\\n\nWindows on ARM (arm64) builds are here > https://github.com/Alex313031/Thorium-WOA \\\n\nSpecial repo which serves builds for SSE3, SSE4, and 32 bit builds are here > https://github.com/Alex313031/Thorium-Special \\\n\nAnother related project I'm trying to share is ThoriumOS : ChromiumOS builds with Thorium, Widevine, Google Sync, Google Drive, Kernel 5.15, firmware, and extra packages > https://github.com/Alex313031/ThoriumOS\n\n## Chromium fork for Windows named after radioactive element No. 90; Windows builds of https://github.com/Alex313031/Thorium <img src=\"https://github.com/Alex313031/Thorium/blob/main/logos/NEW/bulb_light.svg#gh-dark-mode-only\"> <img src=\"https://github.com/Alex313031/Thorium/blob/main/logos/NEW/bulb_dark.svg#gh-light-mode-only\">\n\n- Always built with the latest stable version of [Chromium](https://www.chromium.org/).\n- Intended to behave like and have the featureset of Google Chrome, with differences/patches/enhancements listed [Here](https://github.com/Alex313031/Thorium#features--differences-between-chromium-and-thorium--).\n- I release Thorium as an .exe installer and a portable .zip. Portable instructions are in the Readme in the zip file.\n\n## Building <img src=\"https://github.com/Alex313031/Thorium/blob/main/logos/NEW/build_light.svg#gh-dark-mode-only\"> <img src=\"https://github.com/Alex313031/Thorium/blob/main/logos/NEW/build_dark.svg#gh-light-mode-only\">\nFor building yourself, follow instructions at [BUILDING_WIN.md](https://github.com/Alex313031/thorium/blob/main/docs/BUILDING_WIN.md) (if building natively on Windows), OR [BUILDING_WIN_CROSS.md](https://github.com/Alex313031/thorium/blob/main/docs/BUILDING_WIN_CROSS.md) (if cross building for Windows on Linux).\n\n*Thanks for using Thorium!*\n\n<img src=\"https://github.com/Alex313031/Thorium/blob/main/logos/STAGING/Thorium90_504.jpg\" width=\"200\">\n"
        },
        {
          "name": "ThoriumLogo.png",
          "type": "blob",
          "size": 6.0537109375,
          "content": null
        },
        {
          "name": "WIN_CROSS_BUILD_INSTRUCTIONS.txt",
          "type": "blob",
          "size": 5.5126953125,
          "content": "## These are instruction for cross building Thorium for Windows, on Linux. Preliminary file for @gz83, to be eventually migrated to a Wiki with building instructions for all paltforms.\n## Copyright (c) 2022 Alex313031\n\n## In general, this document follows information from > https://chromium.googlesource.com/chromium/src.git/+/HEAD/docs/win_cross.md and https://chromium.googlesource.com/chromium/src/+/main/docs/linux/build_instructions.md\n\n## Preparatory setup\nFirst, make sure you are running Ubuntu 18.04/20.04, or Debian 10/11, or Arch, and have nano and unrar installed.\n\nFirst, we need to install depot_tools. depot_tools is a .zip that contains tools for all Google projects like Chromium, ChromiumOS, NaCl, V8, Infra, Android, Google Cloud, and Fuschia.\n\nWe are assuming that depot_tools, chromium, and thorium will all be in $HOME.\n\nFirst, (in $HOME), download depot_tools.\n\ngit clone https://chromium.googlesource.com/chromium/tools/depot_tools.git\n\nThen, open your .bashrc and add these to the end. (SUBSTITUTING FOR THE ACTUAL PATH, I.E. mine says alex because my name is Alex lol.)\n\numask 022\nexport EDITOR=nano\nexport VISUAL=nano\nexport NINJA_SUMMARIZE_BUILD=1\nexport PATH=/home/alex/depot_tools:$PATH\nexport DEPOT_TOOLS_WIN_TOOLCHAIN_BASE_URL=/home/alex/chromium/win/\nexport GYP_MSVS_HASH_1023ce2e82=b86447e8fb\n\nThen make these dirs\n\nmkdir ~/chromium\nmkdir ~/chromium/win\n\nThen cd ~/chromium, and run\n\nfetch --nohooks chromium\n\nLet it download, it is large.\nThen cd ~/chromium/src, and run\n\n./build/install-build-deps.sh --no-arm --lib32\n\nThen run \n\ngclient runhooks\n\nWe now have a Chromium checkout, however we need to modify the .gclient file to download Windows dependencies.\n\nEdit the .gclient file in chromium (not chromium/src)\n\nAnd append to the bottom this line:\n\ntarget_os = [ 'linux', 'win' ]\n\nLastly, cross building requires artifacts from Visual Studio as per > https://chromium.googlesource.com/chromium/src.git/+/HEAD/docs/win_cross.md\n\nDownload a .zip I already made from here > https://github.com/Alex313031/Snippets/releases/tag/10.1.20348.1\n\nAnd place it in ~/chromium/win\n\n## Setting up Thorium\n\nNow, lets download the Thorium tree, so run (in $HOME)\n\ngit clone https://github.com/Alex313031/Thorium.git OR\n\nDownload the latest .zip > https://github.com/Alex313031/Thorium/archive/refs/heads/main.zip\n\nThen cd ~/Thorium, and we need to make some files executable. So run\n\nsudo chmod +x build.sh\nsudo chmod +x build_win.sh\nsudo chmod +x setup.sh\nsudo chmod +x trunk.sh\nsudo chmod +x clean.sh\nsudo chmod +x misc/autoninja\n\n## Setting up the build\nThen, run (in order)\n\n./trunk.sh   // Pay attention to the PGO profile that is downloaded, the script downloads the PGO profile *.profdata files for Linux, Windows, and MacOS.\n./setup.sh\n\nNow we need to set up the PGO profile and set the args.gn\n\nOpen ~/Thorium/misc/windows_arg.gn and edit the last line that looks like\n\n/home/alex/chromium/src/chrome/build/pgo_profiles/chrome-win64-main-1649213807-91f73deff0cf33b43bdbec74d7cefebdfe29830a.profdata\n\nAnd edit it to point to the actual location of that PGO file from above. \nYou can also add API Keys to the top three lines of this file to enable Google Sync, Translate, etc. (Out of the scope of this article, for help, contact me.)\n\nNow, go to ~/chromium/src, and run \n\ngn args out/thorium\n\nA nano editor will come up, and you will copy/paste the contents of the win_args.gn OR win_AVX2_args.gn (for AVX2) Or win_ARM_args.gn (for Windows on ARM) file into this.\nSave and exit and the terminal will show \"Generating files...\" Wait for it to complete, and then to actually build it:\n\nGo back to ~/Thorium, and run ./build_win.sh\n\nNOTE: Run ./build_win.sh --help to see the (only) option, which is the number of jobs. The command it ultimately runs is:\n./misc/autoninja -C ~/chromium/src/out/thorium chrome chromedriver thorium_shell setup mini_installer -j\n\nYou can substitute the -j# for the number of jobs. I use 8 because I have an 8 core cpu. Do not use a number more than the number of threads your CPU has.\n\nSo for example, I run ./build_win.sh 8\n\nIn the end, you will have a nice installer called mini_installer.exe in ~/chromium/src/out/thorium/\n\nI rename it to thorium_mini_installer.exe or thorium_avx2_mini_installer.exe for releases. Just double click to install Thorium to C:\\Users\\$USERNAME\\AppData\\Local\\Thorium\n\n## AVX2 Release\n\nSpeaking of which! Thorium by default compiles with AVX and AES. To make the AVX2 version of it, you will follow all the steps above, except before running gn args out\\thorium, \nwe need to download the avx2 sources.\n\ngit clone https://github.com/Alex313031/Thorium-AVX2.git or https://github.com/Alex313031/Thorium-AVX2/archive/refs/heads/main.zip\n\nAnd simply copy the build directory over ~/chromium/src/build\n\n## Make a portable release.\nTo make a portable release, it is easiest to copy an already made portable release from GitHub, extract it, and then:\n\n1. Delete the contents of the BIN folder.\n\n2. Use 7-Zip to extract the contents of the new mini_installer you just made, and then extract the chrome.7z that was inside it.\n\n3. Copy the contents of Chrome-bin into the BIN folder in the portable folder.\n\n4. Edit CONTENT_SHELL.bat to point to the actual location as the version number will have changed.\n\n5. Likewise, edit the version number in the name of the whole portable folder to reflect the new Thorium.\n\n6. Finally, rezip it up with 7-Zip. To use it, read the README.txt inside. \n\n## Updating your checkout\n\nTo update the Chromium checkout, just run (from ~/Thorium)\n\n./trunk\n\nTo update Thorium, do a git pull main or redownload the latest .zip\n\nEnjoy!\n"
        },
        {
          "name": "WIN_INSTRUCTIONS.txt",
          "type": "blob",
          "size": 7.49609375,
          "content": "## These are instruction for building Thorium for Windows, natively on Windows. Preliminary file for @gz83, to be eventually migrated to a Wiki with building instructions for all paltforms.\n## Copyright (c) 2022 Alex313031\n\n## Preparatory setup\nFirst, we need to install depot_tools and Visual Studio. depot_tools is a .zip that contains tools for all Google projects like Chromium, ChromiumOS, NaCl, V8, Infra, Android, Google Cloud, and Fuschia.\n\nWe will be in general following instructions from > https://chromium.googlesource.com/chromium/src/+/main/docs/windows_build_instructions.md\n\nVisual Studio 2019 or 2022 is needed, and the Windows SDK version 10.0.20348.0 is needed along with its Debugging Tools.\n\nEVERYTHING in this document is to be done in command prompt. No powershell, no windows terminal (Win 11).\n\nThe easiest way to do this is (and even if you already have Visual Studio installed, go ahead and redownload the latest installer to do this)\n(VISUAL_STUDIO_INSTALLER is the actual path/name of the installer .exe) \n$VISUAL_STUDIO_INSTALLER --add Microsoft.VisualStudio.Workload.NativeDesktop --add Microsoft.VisualStudio.Component.VC.ATLMFC --includeRecommended\n\nAs noted above The SDK Debugging Tools must also be installed. If the Windows 10 SDK was installed via the Visual Studio installer, then they can be installed by going to: \nControl Panel → Programs → Programs and Features → Select the “Windows Software Development Kit” → Change → Change → Check “Debugging Tools For Windows” → Change.\n\nThen download depot_tools. We are assuming that depot_tools, chromium, and thorium will all be in C:\\src\\.\n\nhttps://storage.googleapis.com/chrome-infra/depot_tools.zip\n\nThen, If you have Administrator access, Modify the PATH system variable and put C:\\src\\depot_tools at the front (or at least in front of any directory that might already have a copy of Python or Git).\nAlso, add a DEPOT_TOOLS_WIN_TOOLCHAIN environment variable in the same way, and set it to 0. This tells depot_tools to use your locally installed version of Visual Studio \n(by default, depot_tools will try to use a google-internal version).\nAlso, add a NINJA_SUMMARIZE_BUILD environment variable the same way, and set it to 1.\n\nThen, go to C:\\src in cmd, and run\n\ngclient\n\nNow, lets configure git (you can skip the user.name and user.email if it is already configured)\n\ngit config --global user.name \"My Name\"\ngit config --global user.email \"my-name@chromium.org\"\ngit config --global core.autocrlf false\ngit config --global core.filemode false\ngit config --global branch.autosetuprebase always\n\nNow let's make the chromium dir.\n\nmkdir chromium && cd chromium\n\nSo you should be in C:\\src\\chromium\n\nNow run\n\nfetch chromium\n\nLet it download, it is large.\n\nThen cd src\\v8, so that we are in C:\\src\\chromium\\src\\v8, and run (one after another)\n\ngit checkout -f origin/main\n\ncd ..\n\ngit checkout -f origin/main\n\ngit rebase-update\n\ngit fetch --tags\n\ngclient sync --with_branch_heads --with_tags -f -R -D\n\ngclient runhooks\n\nGood, now we have a full Chromium checkout ready to be built, but to turn it into Thorium, we must copy the Thorium sources over the Chromium tree.\n\n## Thorium Setup\nSo, lets download Thorium in C:\\src\n\ngit clone https://github.com/Alex313031/Thorium.git or download the .zip and unpack it there > https://github.com/Alex313031/Thorium/archive/refs/heads/main.zip\n\nNow, go back to C:\\chromium\\src\n\nWe are going to download the PGO profile (which changes with every release) so that we can set it in our args.gn file, which ninja (the build system) parses before compiling. So run\n\npython3 tools/update_pgo_profiles.py --target=win64 update --gs-url-base=chromium-optimization-profiles/pgo_profiles\n\nNow pay attention to the the file that is downloaded.\n\nIn C:\\src\\Thorium\\misc, there is a file called win_args.gn. In that file toward the bottom there will be a line that says \npgo_data_path = \"/home/alex/chromium/src/chrome/build/pgo_profiles/chrome-win64-main-1649213807-91f73deff0cf33b43bdbec74d7cefebdfe29830a.profdata\"\n\nWe are going to change that to the actual location and name of the PGO profile data file we just downloaded i.e. it should look similar to this:\n\nC:\\src\\chromium\\src\\chrome\\build\\pgo_profiles\\chrome-win64-main-1649213807-91f73deff0cf33b43bdbec74d7cefebdfe29830a.profdata\n\nYou can also add API Keys to the top three lines of this file to enable Google Sync, Translate, etc. (Out of the scope of this article, for help, contact me.)\n\nNow, we are going to copy the Thorium sources. Select (via Ctrl + Left Mouse button) these folders in C:\\src\\Thorium:\n\nash, base, build, chrome, components, content, extensions, media, net, sandbox, third_party, tools, ui, v8 as well as the BUILD.gn in the root of Thorium.\n\nThen paste these in C:\\chromium\\src (overwriting everything)\n\nNow, we are going to set up the build.\n\nGo to C:\\src\\chromium\\src and run\n\ngn args out\\thorium\n\nIt will pull up notepad. Copy and paste the contents of the win_args.gn we just edited into notepad, save it, and then exit notepad. Cmd will show \"generating files...\"\n\n#NOTE: For AVX2 you should use the win_AVX2_args.gn and for ARM you should use the win_ARM_args.gn.\n\nBut wait, we also need to cherry pick some files from Thorium and copy them into C:\\src\\chromium\\src\\out\\thorium (These are things like logos, the pak binaries, etc. that are thorium specific)\n\ncontent_shell\\thorium-devtools.ico and content_shell\\thorium-devtools.png AND\n\nAll the files in pak_src\\bin\\pak-win\n\n## Compilation\nFinally, we are ready to compile Thorium!\n\nMake sure you are in C:\\src\\chromium\\src\n\nAnd run:\n\nautoninja -C out\\thorium chrome chromedriver thorium_shell setup mini_installer -j8\n\nYou can substitute the -j# for the number of jobs. I use 8 because I have an 8 core cpu. Do not use a number more than the number of threads your CPU has.\n\nIn the end, you will have a nice installer:\n\nC:\\src\\chromium\\src\\out\\thorium\\mini_installer.exe \n\nI rename it to thorium_mini_installer.exe or thorium_avx2_mini_installer.exe for releases. Just double click to install Thorium to C:\\Users\\$USERNAME\\AppData\\Local\\Thorium\n\n## AVX2 Release\n\nSpeaking of which! Thorium by default compiles with AVX and AES. To make the AVX2 version of it, you will follow all the steps above, except before running gn args out\\thorium, we need to download the avx2 sources. You should also use the win_AVX2_args.gn in the Thorium-AVX2 repo.\n\ngit clone https://github.com/Alex313031/Thorium-AVX2.git or https://github.com/Alex313031/Thorium-AVX2/archive/refs/heads/main.zip\n\nAnd simply copy the build directory over C:\\src\\chromium\\src\\build\n\n## Portable release\nTo make a portable release, it is easiest to copy an already made portable release from GitHub, extract it, and then:\n\n1. Delete the contents of the BIN folder.\n\n2. Use 7-Zip to extract the contents of the new mini_installer you just made, and then extract the chrome.7z that was inside it.\n\n3. Copy the contents of Chrome-bin into the BIN folder in the portable folder.\n\n4. Edit CONTENT_SHELL.bat to point to the actual location as the version number will have changed.\n\n5. Likewise, edit the version number in the name of the whole portable folder to reflect the new Thorium.\n\n6. Finally, rezip it up with 7-Zip. To use it, read the README.txt inside. \n\n## Updating your checkout\n\nTo update the Chromium checkout, just run the same commands from above (in C:\\src\\chromium\\src\\v8\\)\n\ngit checkout -f origin/main\n\ncd ..\n\ngit checkout -f origin/main\n\ngit rebase-update\n\ngit fetch --tags\n\ngclient sync --with_branch_heads --with_tags -f -R -D\n\ngclient runhooks\n\nTo update Thorium, do a git pull main or redownload the latest .zip\n\nEnjoy!\n"
        },
        {
          "name": "chromium_speedometer.png",
          "type": "blob",
          "size": 65.228515625,
          "content": null
        },
        {
          "name": "googledff6691d0cd5ffa7.html",
          "type": "blob",
          "size": 0.0517578125,
          "content": "google-site-verification: googledff6691d0cd5ffa7.html"
        },
        {
          "name": "thor_compat_mode.bat",
          "type": "blob",
          "size": 0.5908203125,
          "content": "@echo off\r\necho:\r\necho Copyright (c) 2022 Alex313031\r\necho:\r\necho Automatically sets the compatibility mode for Thorium on Windows 10/11,\r\necho as a mitigation to the \"Error code: RESULT_CODE_MISSING_DATA\" bug.\r\necho _________________________________________________________________________\r\necho:\r\n\r\nreg.exe Add \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers\" /v \"%LOCALAPPDATA%\\Thorium\\Application\\chrome.exe\" /d \"~ WIN8RTM\"\r\nreg.exe Add \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers\" /v \"%LOCALAPPDATA%\\Thorium\\Application\\chrome.exe\" /d \"~ WIN8RTM\""
        },
        {
          "name": "thorium_speedometer.png",
          "type": "blob",
          "size": 73.3125,
          "content": null
        }
      ]
    }
  ]
}