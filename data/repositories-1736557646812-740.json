{
  "metadata": {
    "timestamp": 1736557646812,
    "page": 740,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "backstage/backstage",
      "stars": 28992,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".changeset",
          "type": "tree",
          "content": null
        },
        {
          "name": ".clomonitor.yml",
          "type": "blob",
          "size": 0.64,
          "content": "# CLOMonitor metadata file\n# This file must be located at the root of the repository\n# https://clomonitor.io/projects/cncf/backstage\n\n# Checks exemptions\nexemptions:\n  - check: trademark_disclaimer # Check identifier (see https://github.com/cncf/clomonitor/blob/main/docs/checks.md#exemptions)\n    # Justification of this exemption (mandatory, it will be displayed on the UI)\n    reason: 'The Linux Foundation trademark disclaimer and link are contained within the project web site at https://backstage.io in the copyright footer. However, because the site is delivered dynamically via React through JavaScript, the check cannot currently identify it.'\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.11,
          "content": ".git\n.yarn/cache\n.yarn/install-state.gz\ndocs\nmicrosite\nnode_modules\npackages/*/src\npackages/*/node_modules\nplugins\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.48,
          "content": "# EditorConfig is awesome: https://EditorConfig.org\n\n# top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file\n[*]\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\nindent_style = space\n\n[*.html]\nindent_style = space\nindent_size = 2\n\n[*.{ts,json,js,tsx,jsx}]\nindent_style = space\nindent_size = 2\n\n[*.md]\nindent_size = 2\nindent_style = space\n\n[Dockerfile]\nindent_style = space\nindent_size = 2\n\n[*.{yml,yaml}]\nindent_size = 2\nindent_style = space\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.21,
          "content": "**/node_modules/**\n**/dist/**\n**/dist-types/**\n**/storybook-static/**\n**/coverage/**\n**/build/**\n**/.git/**\n**/public/**\n**/microsite/**\n**/canon-docs/**\n**/templates/**\n**/sample-templates/**\nplaywright.config.ts\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 6.78,
          "content": "/*\n * Copyright 2021 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar path = require('path');\n\nmodule.exports = {\n  root: true,\n  plugins: ['@spotify', 'notice', 'react', 'testing-library'],\n  rules: {\n    'notice/notice': [\n      'error',\n      {\n        templateFile: path.resolve(\n          // eslint-disable-next-line no-restricted-syntax\n          __dirname,\n          './scripts/templates/copyright-header.txt'\n        ),\n        onNonMatchingHeader: 'replace',\n      },\n    ],\n    'no-restricted-syntax': [\n      'error',\n      {\n        message:\n          \"Avoid using .toLowerCase(), use .toLocaleLowerCase('en-US') instead. \" +\n          'This rule can sometimes be ignored when converting text to be displayed to the user.',\n        selector:\n          \"CallExpression[arguments.length=0] > MemberExpression[property.name='toLowerCase']\",\n      },\n      {\n        message:\n          \"Avoid using .toUpperCase(), use .toLocaleUpperCase('en-US') instead. \" +\n          'This rule can sometimes be ignored when converting text to be displayed to the user.',\n        selector:\n          \"CallExpression[arguments.length=0] > MemberExpression[property.name='toUpperCase']\",\n      },\n    ],\n    'testing-library/await-async-queries': 'error',\n    'testing-library/await-async-utils': 'error',\n    'testing-library/no-await-sync-queries': 'error',\n    'testing-library/no-dom-import': 'error',\n    'testing-library/no-wait-for-side-effects': 'error',\n    'testing-library/await-async-events': 'error',\n    'no-restricted-globals': [\n      'error',\n      [\n        'blur',\n        'captureEvents',\n        'chrome',\n        'clientInformation',\n        'close',\n        'closed',\n        'createImageBitmap',\n        'crypto',\n        'customElements',\n        'defaultstatus',\n        'defaultStatus',\n        'devicePixelRatio',\n        'external',\n        'find',\n        'focus',\n        'frameElement',\n        'frames',\n        'getComputedStyle',\n        'getSelection',\n        'indexedDB',\n        'innerHeight',\n        'innerWidth',\n        'isSecureContext',\n        'length',\n        'location',\n        'locationbar',\n        'matchMedia',\n        'menubar',\n        'moveBy',\n        'moveTo',\n        'name',\n        'navigator',\n        'onabort',\n        'onafterprint',\n        'onanimationend',\n        'onanimationiteration',\n        'onanimationstart',\n        'onappinstalled',\n        'onauxclick',\n        'onbeforeinstallprompt',\n        'onbeforeprint',\n        'onbeforeunload',\n        'onblur',\n        'oncancel',\n        'oncanplay',\n        'oncanplaythrough',\n        'onchange',\n        'onclick',\n        'onclose',\n        'oncontextmenu',\n        'oncuechange',\n        'ondblclick',\n        'ondevicemotion',\n        'ondeviceorientation',\n        'ondeviceorientationabsolute',\n        'ondrag',\n        'ondragend',\n        'ondragenter',\n        'ondragleave',\n        'ondragover',\n        'ondragstart',\n        'ondrop',\n        'ondurationchange',\n        'onemptied',\n        'onended',\n        'onerror',\n        'onfocus',\n        'ongotpointercapture',\n        'onhashchange',\n        'oninput',\n        'oninvalid',\n        'onkeydown',\n        'onkeypress',\n        'onkeyup',\n        'onlanguagechange',\n        'onload',\n        'onloadeddata',\n        'onloadedmetadata',\n        'onloadstart',\n        'onlostpointercapture',\n        'onmessage',\n        'onmessageerror',\n        'onmousedown',\n        'onmouseenter',\n        'onmouseleave',\n        'onmousemove',\n        'onmouseout',\n        'onmouseover',\n        'onmouseup',\n        'onmousewheel',\n        'onoffline',\n        'ononline',\n        'onpagehide',\n        'onpageshow',\n        'onpause',\n        'onplay',\n        'onplaying',\n        'onpointercancel',\n        'onpointerdown',\n        'onpointerenter',\n        'onpointerleave',\n        'onpointermove',\n        'onpointerout',\n        'onpointerover',\n        'onpointerup',\n        'onpopstate',\n        'onprogress',\n        'onratechange',\n        'onrejectionhandled',\n        'onreset',\n        'onresize',\n        'onscroll',\n        'onsearch',\n        'onseeked',\n        'onseeking',\n        'onselect',\n        'onstalled',\n        'onstorage',\n        'onsubmit',\n        'onsuspend',\n        'ontimeupdate',\n        'ontoggle',\n        'ontransitionend',\n        'onunhandledrejection',\n        'onunload',\n        'onvolumechange',\n        'onwaiting',\n        'onwebkitanimationend',\n        'onwebkitanimationiteration',\n        'onwebkitanimationstart',\n        'onwebkittransitionend',\n        'onwheel',\n        'open',\n        'openDatabase',\n        'opener',\n        'origin',\n        'outerHeight',\n        'outerWidth',\n        'pageXOffset',\n        'pageYOffset',\n        'parent',\n        'performance',\n        'personalbar',\n        'postMessage',\n        'print',\n        'releaseEvents',\n        'resizeBy',\n        'resizeTo',\n        'screen',\n        'screenLeft',\n        'screenTop',\n        'screenX',\n        'screenY',\n        'scroll',\n        'scrollbars',\n        'scrollBy',\n        'scrollTo',\n        'scrollX',\n        'scrollY',\n        'self',\n        'speechSynthesis',\n        'status',\n        'statusbar',\n        'stop',\n        'styleMedia',\n        'toolbar',\n        'top',\n        'visualViewport',\n        'webkitRequestFileSystem',\n        'webkitResolveLocalFileSystemURL',\n        'webkitStorageInfo',\n      ].map(function f(name) {\n        return {\n          name: name,\n          message:\n            'Avoid using implicitly global variables. Use e.g. window.' +\n            name +\n            ' instead if this was your intent.',\n        };\n      }),\n    ].flat(),\n  },\n  overrides: [\n    {\n      files: ['**/*.[jt]s?(x)'],\n      excludedFiles: '**/*.{test,spec}.[jt]s?(x)',\n      rules: {\n        'react/forbid-elements': [\n          1,\n          {\n            forbid: [\n              {\n                element: 'button',\n                message: 'use Material UI <Button> instead',\n              },\n              { element: 'p', message: 'use Material UI <Typography> instead' },\n              {\n                element: 'span',\n                message: 'use a Material UI <Typography> variant instead',\n              },\n            ],\n          },\n        ],\n      },\n    },\n  ],\n  settings: {\n    'testing-library/custom-queries': 'off',\n  },\n};\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.6,
          "content": "# macOS\n.DS_Store\n\n# IntelliJ\n.idea/\n*.iml\n\n# Visual Studio Code\n.vscode/\n.vsls.json\n\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# Documentation reference, generated by build:api-docs\ndocs/reference\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Yarn 3 files\n.pnp.*\n**/.yarn/*\n!**/.yarn/patches\n!**/.yarn/plugins\n!**/.yarn/releases\n!**/.yarn/sdks\n!**/.yarn/versions\n\n# Node version directives\n.nvmrc\n\n# Optional eslint cache\n.eslintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n.env.test\n.envrc\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n\n# Next.js build output\n.next\n\n# Nuxt.js build / generate output\n.nuxt\ndist\ndist-types\ndist-workspace\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and not Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test\n\n# Temporary change files created by Vim\n*.swp\n\n# MkDocs build output\nsite\n\n# Local configuration files\n*.local.yaml\n!packages/create-app/templates/default-app/app-config.local.yaml\n\n# Sensitive credentials\n*-credentials.yaml\n\n# Possible leftover from build:api-reports\ntsconfig.tmp.json\n\n# vscode database functionality support files\n*.session.sql\n\n# E2E test reports\ne2e-test-report/\n\n# Lighthouse CI Reports\n**/.lighthouseci/*\n!**/.lighthouseci/scripts\n\n# VS Code backing up svg files\n*svg.bkp\n*svg.dtmp\n\n# Scripts\nplugins-report.csv\n\n# Temporary knip configs\nknip.json\n\n# Schemathesis temporary files\n.hypothesis/\n.cassettes/\n"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": ".imgbotconfig",
          "type": "blob",
          "size": 0.05,
          "content": "{\n  \"ignoredFiles\": [\"docs/assets/**/*.svg\"]\n}\n"
        },
        {
          "name": ".lighthouseci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.05,
          "content": "registry=https://registry.npmjs.org/\nengine-strict=true\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.35,
          "content": ".yarn\ndist\nmicrosite\ncanon-docs/.next\ncanon-docs/public\ncanon-docs/out\ncoverage\n*.hbs\ntemplates\n# old reports\napi-report.md\napi-report-*.md\n# new reports\nreport.api.md\nreport-*.api.md\n\nknip-report.md\ncli-report.md\nplugins/scaffolder-backend/sample-templates\n.vscode\ndist-types\n.eslintrc.js\n\n# reduce the barrier for adopters to add themselves\nADOPTERS.md\n"
        },
        {
          "name": ".vale.ini",
          "type": "blob",
          "size": 0.09,
          "content": "StylesPath = .github/vale\n\nVocab = Backstage\n\n[*.md]\nBasedOnStyles = Vale\nVale.Terms = NO\n"
        },
        {
          "name": ".yarn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".yarnrc.yml",
          "type": "blob",
          "size": 0.27,
          "content": "enableGlobalCache: true\n\nhttpTimeout: 300000\n\nnodeLinker: node-modules\n\nnpmRegistryServer: 'https://registry.npmjs.org/'\n\nplugins:\n  - path: .yarn/plugins/@yarnpkg/plugin-workspace-tools.cjs\n    spec: '@yarnpkg/plugin-workspace-tools'\n\nyarnPath: .yarn/releases/yarn-3.8.1.cjs\n"
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 227.94,
          "content": "# Adopters\n\n_If you're using Backstage in your organization, please try to add your company name to this list. It really helps the project to gain momentum and credibility. It's a small contribution back to the project with a big impact._\n_You can do this by using the [Adopter form](https://info.backstage.spotify.com/public-adopter-hand-raiser-form) or by editing this file after following the [CONTRIBUTING.md](./CONTRIBUTING.md)._\n\n| Organization                                                                | Contact                                                                                                                                                                                                                                                          | Description of Use|\n|-----------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------||\n| [Spotify](https://www.spotify.com)                                          | [@helengreul](https://github.com/helengreul)                                                                                                                                                                                                                     | Main interface towards all of Spotify's infrastructure and technical documentation|\n| [bol.com](https://www.bol.com)                                              | [@acierto](https://github.com/acierto), [@clanghout](https://github.com/clanghout)                                                                                                                                                                               | Initial work being done to unify platform tooling|\n| [DFDS](https://www.dfds.com)                                                | [@carlsendk](https://github.com/carlsendk)                                                                                                                                                                                                                       | V2 self-service platform|\n| [Roadie](https://roadie.io)                                                 | [@dtuite](https://github.com/dtuite)                                                                                                                                                                                                                             | Hosted, managed Backstage with easy set-up|\n| [SDA SE](https://sda.se)                                                    | [@dschwank](https://github.com/dschwank), [@iammnils](https://github.com/iammnils)                                                                                                                                                                               | Central place for developing and sharing services in our insurance ecosystem|\n| [H-E-B](https://www.heb.com)                                                | [@german-j-rodriguez](https://github.com/german-j-rodriguez)                                                                                                                                                                                                     | Initial work on Engineering Portal service platform|\n| [American Airlines](https://www.aa.com)                                     | [@paulpach](https://github.com/paulpach)                                                                                                                                                                                                                         | Central place for developers to develop and maintain applications                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| [Kiwi.com](https://kiwi.com)                                                | [@aexvir](https://github.com/aexvir)                                                                                                                                                                                                                             | Replacing the frontend of [The Zoo](https://github.com/kiwicom/the-zoo), their service registry|\n| [Voi](https://www.voiscooters.com/)                                         | [@K-Phoen](https://github.com/K-Phoen)                                                                                                                                                                                                                           | Developer portal, main gateway to our infrastructure, documentation and internal tooling.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| [Talkdesk](https://www.talkdesk.com)                                        | [@atmcarmo](https://github.com/atmcarmo)                                                                                                                                                                                                             | Engineering Portal with all of our apps and services, overview about our deployment regions and scaffolding new services|\n| [Wealthsimple](https://www.wealthsimple.com)                                | [@andrewthauer](https://github.com/andrewthauer)                                                                                                                                                                                                                 | Developer portal, service catalog, documentation and tooling|\n| [Grab](https://www.grab.com)                                                | [@althafh](https://github.com/althafh)                                                                                                                                                                                                                           | Initial work as a unified interface for all of Grab's internal tooling|\n| [Telenor Sweden](https://www.telenor.se)                                    | [@O5ten](https://github.com/O5ten)                                                                                                                                                                                                                               | Building a developer portal for scaffolding projects towards our unified build environment and microservice stacks                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| [Fiverr](https://www.fiverr.com)                                            | [@nirga](https://github.com/nirga)                                                                                                                                                                                                                               | Unifying separate tools that developers are using today (i.e. monitoring, dead letter queues management, etc.) into a single platform.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| [Zalando SE](https://www.zalando.de)                                        | [@leviferreira](https://github.com/leviferreira)                                                                                                                                                                                                                 | Building V2 of the Internal Development Portal|\n| [LegalZoom](https://legalzoom.com)                                          | [@backjo](https://github.com/backjo)                                                                                                                                                                                                                             | Developer portal - hub for all engineering projects and metadata|\n| [Expedia Group](https://www.expediagroup.com)                               | [Guillermo Manzo](mailto:gmanzo@expediagroup.com)                                                                      | EG Developer Portal|\n| [Paddle.com](https://paddle.com)                                            | [Ioannis Georgoulas](https://github.com/geototti21)                                                                                                                                                                                                              | Developer portal (Tech Docs, Service Catalog, Internal Tooling), we use vanilla Backstage FE and custom BE implementation in Go                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| [Acast.com](https://acast.com)                                              | [Olle Lundberg](https://github.com/lndbrg)                                                                                                                                                                                                                       | Developer portal with tech docs, service catalog and a bunch of other internal tooling|\n| [Lunar](https://lunar.app)                                                  | [Bjørn Hald Sørensen](https://github.com/crevil)                                                                                                                                                                                                                 | Internal developer portal for service overview and insights, API documentation, technical guides, onboarding guides and RFC's.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| [Trendyol](https://trendyol.com)                                            | [Gamze Senturk](https://github.com/gmzsenturk), [Mert Can Bilgic](https://github.com/mertcb)                                                                                                                                                                     | The Developer Portal has been called `Pandora`. Provides an overview of Trendyol tech ecosystem. TechDocs, Catalog, Custom Plugins and Theme.                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| [Peloton](https://www.onepeloton.com/)                                      | [Matt Waldron](https://github.com/daftgopher)                                                                                                                                                                                                                    | Creating our first developer portal and tech-docs. Exploring Service Catalog, Tech Insights and Cost Insights as well.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| [Brex](https://www.brex.com/)                                               | [Vamsi Chitters](https://github.com/vamsikc)                                                                                                                                                                                                                     | A centralized UI to understand how a service fits in the whole Brex architecture and manage a team’s engineering dependencies.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| [Oriflame](https://www.oriflame.com/)                                       | [Oriflame](https://github.com/oriflame)                                                                                                                                                                                                                          | Internal developer portal for services, single page apps and packages overview, API documentation, technical guides, tech-radar and more.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| [Booz Allen Hamilton](https://www.boozallen.com/)                           | [Jason Miller](https://github.com/JasonMiller-BAH)                                                                                                                                                                                                               | Developer portal for a full-stack software development ecosystem that accelerates consistent and repeatable Modern Software Development practices for internal innovation and investments.                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| [b.well](https://www.icanbwell.com/)                                        | [Jacob Rosales](https://github.com/jrosales)                                                                                                                                                                                                                     | Foundation for our engineering portal and cloud insights.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| [PagerDuty](https://www.pagerduty.com/)                                     | [Mark Shaw](https://github.com/markshawtoronto)                                                                                                                                                                                                                  | Developer portal, initially focused on software templates and tech-docs|\n| [MoonShiner](https://moonshiner.at)                                         | [Fabian Hippmann](https://github.com/FabianHippmann)                                                                                                                                                                                                             | Developer portal - helps us keep track of our customer projects, onboard new developers & improve our development process 🌕🚀🧑‍🚀                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| [FundApps](https://www.fundapps.co/)                                        | [Elliot Greenwood](https://github.com/egnwd)                                                                                                                                                                                                                     | Developer Portal - A place for us to keep track of our projects and documentation for all services and processes                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [DAZN](https://dazn.com/)                                                   | [David Rubio Vidal](https://github.com/davidrv87), [Marco Crivellaro](https://github.com/crivetechie), [Marian Bazalik](https://github.com/mbazalik)                                                               | Ingesting all of DAZN's repos for the catalog, migrating our internal platform apps (pull request boards, release information, inner source marketplace etc) to Backstage plugins (where applicable).                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| [HelloFresh](https://www.hellofresh.de/)                                    | [@iammuho](https://github.com/iammuho), [@ElenaForester](https://github.com/ElenaForester), [@diegomarangoni](https://github.com/diegomarangoni)                                                                                                                 | Our developer portal at HelloFresh - Spread across an organisation of 500+ engineers globally|\n| [FactSet](https://www.factset.com/)                                         | [@kuangp](https://github.com/kuangp)                                                                                                                                                                                                                             | Developer portal to provide discoverability to all internal components, APIs, documentation, and scaffold templates with integrations to our internal infrastructure tools.                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| [Workrise](https://www.workrise.com/)                                       | [Michael Rode](https://github.com/michaelrode)                                                                                                                                                                                                                   | Developer portal, main gateway to our infrastructure, documentation and internal tooling|\n| [RedVentures](https://www.redventures.com/)                                 | [Chris Diaz](https://github.com/codingdiaz)                                                                                                                                                                                                                      | Developer portal that brings everything an engineer needs to provide value into a single pane of glass.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| [MavTek](https://www.mavtek.com/)                                           | [@fgascon](https://github.com/fgascon)                                                                                                                                                                                                                           | Developer portal focused on standardizing practices, centralizing documentation and streamlining developer practices.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| [QuintoAndar](https://www.quintoandar.com.br/)                              | [@quintoandar](https://github.com/quintoandar)                                                                                                                                                                                                                   | Developer portal, services catalog and centralization of service metrics|\n| [empathy.co](https://empathy.co/)                                           | [@guillermotti](https://github.com/guillermotti)                                                                                                                                                                                                                 | Developer portal for tech docs, service catalog, plugin discovery and much more|\n| [creditas.com](https://creditas.com/)                                       | [@rebender](https://github.com/rebender) [@Creditas](https://github.com/creditas)                                                                                                                                                                    | Centralization of all services, standards, documentation, etc. We started the deployment process|\n| [Prisjakt](https://www.prisjakt.nu) / [PriceSpy](https://pricespy.co.uk)    | [@kennylindahl](https://github.com/kennylindahl)                                                                                                                                                                                                                 | Internal developer portal - Documentation, scaffolding, software catalog, TechRadar, Gitlab org data integration                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [Powerspike](https://powerspike.tv/)                                        | [@trelore](https://github.com/trelore)                                                                                                                                                                                                                           | Developer portal for documentation of core libraries and repositories|\n| [2U](https://2u.com)                                                        | [@danielleEriksen](https://github.com/danielleEriksen), [@sbhatia](https://github.com/sbhatia)                                                                                                                                                                   | Development team home-base, promoting service discoverability, resource dependencies, and tech radar                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| [Taxfix](https://taxfix.de/)                                                | [Sami Ur Rehman](https://github.com/samiurrehman92)                                                                                                                                                                                                              | Developer's portal with software catalog at it's core. Hosts API Specs, Tech Docs, Tech Radar and some custom plugins.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| [Busuu](https://busuu.com/)                                                 | [Adam Tester](https://github.com/adamtester)                                                                                                                                                                                                                     | Developer portal with service catalog, API docs, Event docs, service templating, and cost insights|\n| [Loadsmart](https://loadsmart.com/)                                         | [Loadsmart](https://github.com/loadsmart)                                                                                                                                                                                                                        | Improve services visibility and operations for service owners and developers|\n| [Monzo](https://monzo.com/)                                                 | [@WillSewell](https://github.com/WillSewell), [@joechrisellis](https://github.com/joechrisellis)                                                                                                                                                                 | Developer portal showing metadata and docs for over 2000 microservices. We have built a number of plugins such as a UI for our system to measure [software excellence](https://monzo.com/blog/2021/09/15/how-we-measure-software-excellence), and a UI to show deployment and config change events.                                                                                                                                                                                                                                                                                                                    |\n| [Vaimo](https://www.vaimo.com)                                              | [@vaimo-magnus](https://github.com/vaimo-magnus)                                                                                                                                                                                                                 | Developer Portal for our developers at Vaimo, currently docs and self-service towards our internal PaaS based on k8s. Plans to extend the catalog into Projects, Environments etc                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| [Wayfair](https://www.wayfair.com)                                          | [@fransan](https://github.com/fransan), [@errskipower](https://github.com/errskipower), [@hrrs](https://github.com/hrrs)                                                                                                                                         | Developer portal for service catalog, technical documentation, and APIs|\n| [CircleHD](https://www.circlehd.com)                                        | [@circlehddev](https://github.com/circlehddev)                                                                                                                                                                                                                   | Developer Portal for internal dev team across the globe|\n| [CastDesk](https://castdesk.com)                                            | [@circlehddev](https://github.com/circlehddev)                                                                                                                                                                                                                   | Developer Portal for internal dev team across the globe|\n| [Santagostino](https://santagostino.it)                                     | [@santagostino](https://github.com/santagostino)                                                                                                                                                                                                                 | Developer portal, gateway to our infrastructure, documentation, service catalog and internal tooling.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| [Peak](https://peak.ai)                                                     | [Luke Beamish](https://github.com/lukebeamish-peak)                                                                                                                                                                                                              | Developer portal for all internal engineers to access documentation and tooling|\n| [Gelato](https://gelato.com/)                                               | [Dmitry Makarenko](https://github.com/dmitry-makarenko-gelato)                                                                                                                                                                                                   | Developer portal: documentation, service templates, org structure, service catalog, plugins for integration with internal and third-party systems🚀.                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| [GoCardless](https://gocardless.com/)                                       | [James Turley](https://github.com/tragiclifestories)                                                                                                                                                                                                             | Developer portal: documentation, service templates, org structure, service catalog, plugins for integration with internal systems.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| [Box](https://www.box.com)                                                  | [@kielosz](https://github.com/kielosz), [@jluk-box](https://github.com/jluk-box), [@ptychu](https://github.com/ptychu), [@alexrybch](https://github.com/alexrybch), [@szubster](https://github.com/szubster)                                                     | Developer portal for service catalog, integration with internal systems, new service onboarding|\n| [Bazaarvoice](https://www.bazaarvoice.com)                                  | [@niallmccullagh](https://github.com/niallmccullagh)                                                                                                                                                                                                             | Developer portal for service catalog and scaffolds, publishing Github docs and API documentation, visualising our internal tech radar and our product engineering org structure.                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [Krateo PlatformOps](https://www.krateo.io)                                 | [@projectkerberus](https://github.com/projectkerberus)                                                                                                                                                                                                           | A multi-cloud control plane to create, manage and deploy any kind of resource easily and centrally via a Developer Portal that centralizes via a self-service catalog the templating and ownership of services, the available documentation, the overview of the components that compose an entire domain and all the data of the service lifecycle.                                                                                                                                                                                                                                                                   |\n| [Adevinta](https://www.adevinta.com)                                        | [Ray Sinnema](https://github.com/RemonSinnema)                                                                                                                                                                                                                   | Showcase shared services to our internal customers|\n| [Splunk](https://www.splunk.com)                                            | [@tonytamsf](https://github.com/tonytamsf)                                                                                                                                                                                                                       | Developer portal as a centralized place to find people, services, documentation, escalation policies and give bravos. This portal is also being used as a centralized search engine for engineering specific documentation.                                                                                                                                                                                                                                                                                                                                                                                            |\n| [SoundCloud](https://www.soundcloud.com)                                    | [Julio Zynger](https://github.com/julioz)                                                                                                                                                                                                                        | Developer portal as a [humane registry](https://martinfowler.com/bliki/HumaneRegistry.html) for the organization: catalog of people, services, documentation, feature toggles, escalation policies, etc.                                                                                                                                                                                                                                                                                                                                                                                                               |\n| [Volvofinans Bank](https://www.volvofinans.se)                              | [Johan Hammar](https://github.com/johanhammar)                                                                                                                                                                                                                   | Developer portal enabling engineers to manage and explore software and documentation|\n| [Palo Alto Networks](https://www.paloaltonetworks.com)                      | [Jeremy Guarini](https://github.com/jeremyguarini), [Brian Lomeland](https://github.com/bbbmmmlll), [Palo Alto Networks](https://github.com/PaloAltoNetworks)                                                                                                    | Developer portal, service catalog, documentation and tooling|\n| [Signal Iduna Group](https://www.signal-iduna.de/)                          | [Jonas Thomsen](https://github.com/JoThomsen)                                                                                                                                                                                                                    | Developer Portal, documentation, monitoring, service catalog for our insurance ecosystem|\n| [Tradeshift](https://www.tradeshift.com/)                                   | [Soren Mathiasen](https://github.com/sorenmat)                                                                                                                                                                                                                   | Developer Portal: documentation, monitoring, service templates, service catalog for our micro services                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| [Unity](https://unity.com)                                                  | [Ted Cordery](https://github.com/TeddyBallGame)                                                                                                                                                                                                                  | A centralized service catalog with documentation for our service engineers|\n| [PicPay](https://www.picpay.com)                                            | [Elton Welsch](https://github.com/eltonwelsch), [Emanuella Okada](https://github.com/ManuOkadaPicPay), [PicPay](https://github.com/picpay)                                                                                                                       | Developer portal for building services through templates, service catalog with ownership of services, documentation and metrics providing autonomy and visibility for all.                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| [Epic Games](https://www.epicgames.com)                                     | [Brian Jung](https://github.com/brian-at-epic), [Jeff Goldian](https://github.com/jeffgoldian-Epic)                                                                                                                                                              | Developer Portal: Service Catalog, Documentation, Software Templates and more making our internal teams' lives easier!                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| [Globo](https://globo.com)                                                  | [Carlos Gusmão](https://github.com/caeugusmao), [Guilherme Vierno](https://github.com/vierno), [Denis Aoki](https://github.com/dnsaoki2), [Maycon Dionisio](https://github.com/MayconDionisio),                                                                  | Reduce the friction of accessing the information engineers need about Globo's digital services through a coherent and centralized experience.                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| [QBE](https://www.qbe.com/)                                                 | [Daniel Steel](https://github.com/danielsteelqbe), [Pete Jespers](https://github.com/petejespersqbe)                                                                                                                                                             | Developer portal allowing our global teams to explore and create applications, documentation and cloud infrastructure easily and quickly 🚀                                                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| [GoTo](https://www.goto.com)                                                | [Lorenzo Orsatti](https://github.com/lorsatti)                                                                                                                                                                                                                   | Improve onboarding experience of new developers. Discover faster and painlessly developer documentation, API definitions and team information. Provide useful dev metrics in a central place. Provide easy-to-use templates for new services.                                                                                                                                                                                                                                                                                                                                                                          |\n| [Telstra](https://www.telstra.com.au)                                       | [@kiranpatel11](https://github.com/kiranpatel11), [JasonC](https://github.com/JasonC17)                                                                                                                                                                          | Primary usage: software catalog and templates<br/> Emerging usage : TechDocs, Explore Ecosystem, TechRadar, etc                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| [Mosaico](https://www.mosaico.com.br/)                                      | [Wédney Yuri](https://github.com/wedneyyuri),[@tino.milton](https://github.com/miltonjacomini)                                                                                                                                                                   | A centralized service catalog of our documentation for our service engineers|\n| [Mox Bank](https://www.mox.com/)                                            | [Nick Laqua](https://github.com/nick-laqua-dragon)                                                                                                                                                                                                               | \"Single pane of glass\" developer portal for providing a best-in-class developer experience to our product teams and making Mox the best tech environment in Hongkong 🥰🚀                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| [Keyloop](https://www.keyloop.com/)                                         | [Shawn Bruce](https://github.com/sbruce-keyloop)                                                                                                                                                                                                                       | Future-motive Developer Portal to help our teams create technology to make everything about buying and owning a car better. 🚗                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| [Simply Business](https://sbtech.simplybusiness.co.uk/)                     | [@addersuk](https://github.com/addersuk), [@LightningStairs](https://github.com/LightningStairs), [@punitcse](https://github.com/punitcse), [@moltenice](https://github.com/moltenice)                                                                           | Central developer portal to access everything a developer needs such as docs, internal service catalog, and the ability to quickly create a new service from a template. Internally developed Backstage plugins allow us to customise the experience to how we work.                                                                                                                                                                                                                                                                                                                                                   |\n| [Overwolf](https://www.overwolf.com)                                        | [@tomwolfgang](https://github.com/tomwolfgang)                                                                                                                                                                                                                   | Dev portal - software catalog, tech-docs, scaffolding|\n| [Hotmart](https://www.hotmart.com)                                          | [@fabioviana-hotmart](https://github.com/fabioviana-hotmart)                                                                                                                                                                                                     | The main Developers Portal to centralize docs, applications and technical metrics|\n| [EF Education First](https://www.ef.com)                                    | [Daan Boerlage](https://github.com/runebaas), [Rafał Nowosielski](https://github.com/rnowosielski)                                                                                                                                                               | Our developer portal - primarily used for cataloging and scaffolding with the ambition to expand with more feature adoptions over time                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| [Power Home Remodeling](https://www.techatpower.com)                        | [Ben Langfeld](https://github.com/benlangfeld)                                                                                                                                                                                                                   | Developer portal to our internal services, build on open-source software (including Kubernetes) in our own datacenters. Our Portal allows our team members to navigate inherant complexity and standardise.                                                                                                                                                                                                                                                                                                                                                                                                            |\n| [Livspace](https://www.livspace.com)                                        | [Praveen Kumar](https://github.com/praveen-livspace)                                                                                                                                                                                                             | Developer portal, service catalog, tech docs, API docs and plugins|\n| [Just Eat Takeaway](https://www.justeattakeaway.com)                        | [Kim Wilson](https://github.com/kwilson541)                                                                                                                                                                                                                      | Our developer portal which centralises applications, reduces cognitive load and provides teams insights.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| [Hopin](https://hopin.com)                                                  | [Vladimir Glafirov](https://github.com/vglafirov), [Chloe Lee](https://github.com/msfuko)                                                                                                                                                                        | Developer portal to streamline the development practices. Integrated with service catalog, software templates, application monitoring, tech docs and plugins.                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| [HBO Max](https://hbomax.com)                                               | [@mdb](https://github.com/mdb), [@nesta219](https://github.com/nesta219), [@nmische](https://github.com/nmische), [@hbomark](https://github.com/hbomark)                                                                                                         | Developer portal hosting service catalog and API documentation, as well as cloud infrastructure details, operational visibility tools, and a custom plugin for browsing notable platform change events, such as deployments and configuration updates.                                                                                                                                                                                                                                                                                                                                                                 |\n| [RCHLO](https://www.riachuelo.com.br) & [MIDWAY](https://www.midway.com.br) | [@marcosborges](https://github.com/marcosborges), [@defaultbr](https://github.com/defaultbr)                                                                                                                                                                     | Self-Service Platform|\n| [HP Inc](https://www.hp.com)                                                | [Damon Kaswell](https://github.com/dekoding)                                                                                                                                                                                                                     | DevEx engagement hub (dev portal: docs, standards, Q&A) and extensive assets catalog (APIs, services, code, data, etc.) for the pan-HP internal developer community.                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| [VMware](https://www.vmware.com)                                            | [Waldir Montoya](https://github.com/waldirmontoya25), [Kris Applegate](https://github.com/krisapplegate), [Jamie Klassen](https://github.com/jamieklassen)                                                                                                       | Part of [Tanzu Application Platform](https://docs.vmware.com/en/VMware-Tanzu-Application-Platform/index.html) offering; internal developer portal                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| [Ualá](https://www.uala.com.ar/)                                            | [Santiago Bernal](https://github.com/sabernal)                                                                                                                                                                                                                   | Initial work being done to centralize documentation for all our microservices and APIs, as well as scaffolding new services and tracking code quality                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| [IKEA IT AB](https://www.ingka.com)                                         | [@bjornramberg](https://github.com/bjornramberg), [@supriyachitale](https://github.com/supriyachitale)                                                                                                                                                           | Supporting engineers at scale with self serve access and connecting the dots of our engineering platform and services, enabling product teams to move faster and go further, and unleashing innovation, reuse and co-creation across the organisation.                                                                                                                                                                                                                                                                                                                                                                 |\n| [Invitae](https://www.invitae.com/en)                                       | [@ryan-hanchett](https://github.com/ryan-hanchett), [@gmandler42](https://github.com/gmandler42)                                                                                                                                                                 | Centralized Developer Experience portal, putting all of our tooling behind a single pane of glass and creating a living service catalog.                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| [Fortum](https://www.fortum.com/)                                           | [@brunoamaroalmeida](https://github.com/brunoamaroalmeida), [@dhaval-vithalani](https://github.com/dhaval-vithalani), [@sunilkumarmohanty](https://github.com/sunilkumarmohanty)                                                                                 | A central portal containing information about our applications, services, processes and other software assets to be used by Fortum software engineering community.                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| [Procore](https://www.procore.com/jobs/engineering)                         | [@shayon](https://github.com/Shayon), [@jamesdabbs-procore](https://github.com/jamesdabbs-procore)                                                                                                                                                               | Developer portal - centralized software catalog and templates to enable self serve and reduce cognitive load.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| [Bradesco](https://banco.bradesco/html/classic/sobre/index.shtm)            | [@danilosoarescardoso](https://github.com/danilosoarescardoso)                                                                                                                                                                                                   | Centralized developer portal with software catalog, software templates, techdocs and some plugins from community and by our own.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [SeatGeek](https://seatgeek.com)                                            | [@zhammer](https://github.com/zhammer)                                                                                                                                                                                                                           | Software catalog and documentation platform|\n| [Grupo Boticário](https://www.grupoboticario.com.br/)                       | [@chicoribas](https://github.com/chicoribas), [@fndiaz](https://github.com/fndiaz), [@digogid](https://github.com/digogid), [@manumbs](https://github.com/manumbs), [@haooliveira84](https://github.com/haooliveira84), [@Rhullyam](https://github.com/Rhullyam) | Centralized developer portal with catalog, documentation, and software templates to build a ready to go application, including pipelines (CI/CD) and cloud services provisioning                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [Snyk](https://snyk.io/)                                                    | [@robcresswell](https://github.com/robcresswell)                                                                                                                                                                                                                 | Developer portal for software discovery, API documentation and templating|\n| [Stilingue](https://www.stilingue.com.br/)                                  | [@stilingue-inteligencia-artificial](https://github.com/Stilingue-IA), [@bbviana](https://github.com/bbviana)                                                                                                                                                    | Developer portal, services catalog and centralization of metrics from Grafana, Sentry and GCP. Furthermore, centralization of documentation and infra details like DNS, Network services, SSL and so on.                                                                                                                                                                                                                                                                                                                                                                                                               |\n| [TUI Group](https://www.tuigroup.com/)                                      | [Simon Stamm](https://github.com/simonstamm), [Christian Rudolph](https://github.com/ChrisRu82)                                                                                                                                                                  | Developer portal for all engineer to provide discoverability to all internal components, APIs, documentation and to scaffold templates with integrations to our internal tools extended by plugins from our community.                                                                                                                                                                                                                                                                                                                                                                                                 |\n| [Alliander](https://www.alliander.com/)                                     | [@leon-vg](https://github.com/leon-vg), [@gieljl](https://github.com/gieljl), [@niekteg](https://github.com/niekteg)                                                                                                                                             | Developer portal - software catalog, technical documentation, software templates, tech radar and exploration of used tools/services                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| [VIA](https://www.via.com.br)                                               | [Rogerio Segovia](https://github.com/rsegovia)                                                                                                                                                                                                                 | Centralized Developer Experience portal - Software catalog and documentation platform, software templates, techdocs, scaffolding, self-service infrastructure                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| [Surevine](https://www.surevine.com/)                                       | [@DJDANNY123](https://github.com/djdanny123)                                                                                                                                                                                                                     | Developer portal for software catalog, discovery and a view of the technologies we are using across the organisation, we are looking to explore how we can enrich our entities in Backstage by integrating a software bill of materials.                                                                                                                                                                                                                                                                                                                                                                               |\n| [Bonial International GmbH](https://www.bonial.com/)                        | [@pjungermann](https://github.com/pjungermann)                                                                                                                                                                                                                   | Centralized developer portal with software catalog, tech docs, templates, and more|\n| [Beez Innovation Labs Pvt. Ltd](https://www.beezlabs.com/)                  | [Karthikeyan Venkatesan](https://github.com/karthikeyan23)                                                                                                                                                                                                       | Developer portal with software catalog, scaffolding, tech docs, templates, and infra|\n| [Agorapulse](https://www.agorapulse.com/)                                   | [@jvdrean](https://github.com/jvdrean)                                                                                                                                                                                                                           | Developer portal with software catalog, documentation, monitoring, runbooks, tech radar and more|\n| [Wistia](https://wistia.com/)                                               | [@qrush](https://github.com/qrush), [@okize](https://github.com/okize)                                                                                                                                                                                           | Internal Developer Portal, service catalog, tech docs and more                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| [SIX](https://www.six-group.com/)                                           | [@jbadeau](https://github.com/jbadeau), [@tomassatka](https://github.com/tomassatka)                                                                                                                                                                             | Internal DevOps portal hosting our software and dataset catalog, as well as custom plugins for observability, service virtualization, deployments, incident managment and quality metrics.                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| [Raiffeisen Bank International](https://www.rbinternational.com/)           | [Daniel Baumgartner](https://github.com/dabarbi)                                                                                                                                                                                                                 | From developers for developers: software catalog, techdocs and heavy use of scaffolder to drive reuse on engineering level forward. Part of inner source initiative. Multi national setup coming.                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| [Spread Group](https://www.spreadgroup.com/)                                | [Luna Stadler](https://github.com/heyLu), [Iván González](https://github.com/ivangonzalezacuna)                                                                                                                                                                  | Internal Developer Portal, an overview of all running software, architecture documentation and more; replacing and unifying a variety of internal tools.                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| [RD Station](https://rdstation.com)                                         | [Rogerio Angeliski](https://github.com/angeliski), [Paula Assis](https://github.com/paulassis), [Guilherme Eric](https://github.com/guilhermeeric), [Daniela Adamatti](https://github.com/daniadamatti), [Luana Negreiros](https://github.com/luananegreiros)    | Developer portal, scaffolding, services catalog. We are looking to centralize automations and information for the whole engineering team .                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| [Resuelve Tu Deuda](https://resuelve.mx)                                    | [Iván Álvarez](https://github.com/ivanhoe), [Jorge Medina](https://github.com/jorgearma1982)                                                                                                                                                                     | Internal developer portal, service catalog, tech docs, api doc|\n| [Pachama](https://pachama.com/)                                             | [Aron Gates](https://github.com/agates4)                                                                                                                                                                                                                         | Internal Developer Portal, a catalog of all microservices, architecture documentation, and templates to generate developer resources.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| [SEEK](https://www.seek.com.au)                                             | [Jahred Hope](https://github.com/jahredhope)                                                                                                                                                                                                                     | Developer portal for developer tooling and technical documentation|\n| [Marks & Spencer](https://www.marksandspencer.com/)                         | [Kamal Cheriyath](https://github.com/kcheriyath)                                                                                                                                                                                                                 | Centralised discovery, adoption and devops automation hub for Engineering & Architecture|\n| [McKesson](https://www.mckesson.com/)                                       | [Agnel Antony](https://github.com/aantony2)                                                                                                                                                                                                                      | Internal Developer Platform for developer gated CI/CD templates, technical documentation, cloud automation service catalog, etc|\n| [leboncoin](https://www.leboncoin.fr/)                                      | [Andy Ladjadj](https://github.com/aladjadj)                                                                                                                                                                                                                      | Centralize our multiple UI in a single portal. Simplify onbording, new features and harmonize how people search information.                                                                                                                                                                                                                                                                                                                                                                                          |\n| [Contentful](https://www.contentful.com)                                    | [James Bourne](https://github.com/jamesmbourne)                                                                                                                                                                                                                  | Centralized documentation of service ownership, APIs, and documentation, and new service creation with a custom scaffolder - [full case study with Roadie](https://roadie.io/case-studies/maintaining-velocity-through-hypergrowth-contentful/).                                                                                                                                                                                                                                                                                                                                                                       |\n| [Back Market](https://www.backmarket.com)                                   | [Sami Farhat](https://github.com/skfarhat)                                                                                                                                                                                                                       | Internal Developer Portal featuring catalog, tech-radar, ownership management, component creation (scaffolder) and centralized infrastructure management -- probably more to come.                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| [Avalia Systems](https://avalia.io)                                         | [Olivier Liechti](https://github.com/wasadigi), [Fabio Velloso](https://github.com/fabiovelloso)                                                                                                                                                                 | Innersource, software analytics, knowledge base for 360 software assessments, collaborative applications, hub for tracking and sharing IP assets.                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| [Albert Heijn](https://ah.technology)                                       | [Reindrich Geerman](https://github.com/reinst)                                                                                                                                                                   | Single point of entry for all our engineers (Developer portal), Tech radar, catalog, templates (paved roads) and tech documentation.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| [Wise, formerly TransferWise](https://wise.com)                             | [Andrew Beveridge](https://github.com/beveradb)                                                                                                                                                                                                                  | It's early days for us, we're trying to start small with catalog, tech docs and unified search. Future ambitious vision includes scaffolder for one-click component addition, building out integrations with CI/CD tooling, kubernetes clusters, monitoring/alerting tooling etc. and aiming for a frictionless \"golden path\" for engineers! 🚀                                                                                                                                                                                                                                                                        |\n| [Happy Money](http://happymoney.com/)                                       | [Akshit Lomash](mailto:alomash@happymoney.com)                                                                                                                                                                                                                   | We are moving from a monolith to microservices-based architecture. We are developing a developer portal based on Backstage to create a service catalog for our new services. All the services created are onboarded Backstage and engineering teams are using a cookie-cutter-based template from backstage to initiate a new service.                                                                                                                                                                                                                                                                                 |\n| [Lightspeed](http://lightspeedhq.com/)                                      | [Marcus Crane](mailto:marcus.crane@lightspeedhq.com)                                                                                                                                                                                                             | We use it within our X-Series division (https://vendhq.com) to catalog ~100+ systems and ~350 components!                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| [Siemens](https://www.siemens.com/global/en.html)                           | [Nizar Chaouch](mailto:nizar.chaouch@siemens.com)                                                                                                                                                                                                                | We are using Backstage as our Developer portal                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| [The Warehouse Group](https://www.thewarehouse.co.nz)                       | [Matt Law](mailto:matt.law@thewarehouse.co.nz)                                                                                                                                                                                                                   | Backstage enables us to bootstrap our middleware environment of new services for our Dev teams in a matter of seconds. CI, CD, testing, logging, deployments are all taken care of to get them up and running in less than 60 seconds.                                                                                                                                                                                                                                                                                                                                                                                 |\n| [Tink](https://tink.com/)                                                   | [Sebastian Olsson](https://github.com/Sebelino), [Błażej Szum](https://github.com/blazejszumtink), [Anders Eurenius Runvald](https://github.com/anders-er-at-tink)                                                                                               | Internal developer portal which provides templates for creating new Java or Go microservices seamlessly. Also includes a tech radar and a visualization of our CD pipeline.                                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| [Brandwatch](https://brandwatch.com)                                        | [Stefan Buck](https://github.com/stefanbuck)                                                                                                                                                                                                                     | Our primary focus is on the service catalog. Backstage is replacing our homemade service catalog. The switch was quite simple due to the catalog processor API.                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| [Laybuy](https://www.laybuy.com)                                            | [Chris Simmons](https://github.com/contrarianchris)                                                                                                                                                                                                              | Backstage is the heart of Laybuy’s new centralised Development Platform, bringing disparate development tools and experiences into a single easy-to-use portal. It simplifies software and API discovery, project scaffolding, and technical documentation, enabling us to embrace golden path development and automate software standards.                                                                                                                                                                                                                                                                            |\n| [Brevo](https://engineering.brevo.com/)                           | [Tanguy Antoine](mailto:antoine.tanguy@brevo.com)                                                                                                                                                                                                           | Helps us drive the change at scale. Puts light on services, resources, and dependencies. One tool that rules them all through plugins we created for that purpose. We are aiming to put Backstage at the center of every developer's work (Actionable items, Debugging, Monitoring, Provisioning, etc...) to improve their happiness                                                                                                                                                                                                                                                                                   |\n| [SafetyCulture](https://safetyculture.com/)                                 | [@R-cen](https://github.com/R-cen), [@lachlancooper](https://github.com/lachlancooper), [@hkf57](https://github.com/hkf57)                                                                                                                                       | Internal developer portal to provide a centralized place for engineers to see an overview of their team's services and information related to the service from other systems. Initially focused on the software catalog, techdocs and search.                                                                                                                                                                                                                                                                                                                                                                          |\n| [Sana Life Science](https://sanalifescience.com)                            | [Joe Hillyard](mailto:joe@sanalifescience.com)                                                                                                                                                                                                                   | API Catalog, Tools Management & Control Hub|\n| [Ndustrial](https://ndustrial.io)                                           | [Jonathan Skubic](mailto:jonathan@ndustrial.io)                                                                                                                                                                                                                  | Software Project Catalog|\n| [Kambi AB](https://www.kambi.com)                                           | [Martin Norum](mailto:martin.norum@kambi.com)                                                                                                                                                                                                                    | We want to kick ass at speed, so we're currently building up a catalog of our existing software, and looking into how Backstage can support us in our journey towards autonomous product teams. Both to improve speed to market and operational awareness.                                                                                                                                                                                                                                                                                                                                                             |\n| [ANZ](https://www.anz.com.au/personal/)                                     | [Elliot Jackson](mailto:elliot.jackson@anz.com)                                                                                                                                                                                                                  | Catalog, tech docs and automation                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| [Genie Solutions](https://www.geniesolutionssoftware.com.au)                | [Zainab Bagasrawala](mailto:zainabbagasrawala@geniesolutions.com.au)                                                                                                                                                                                             | Developer Portal to track our projects, documentation, observability tools and more|\n| [MadeiraMadeira](https://www.madeiramadeira.com.br)                         | [DX Team](mailto:dxteam@madeiramadeira.com.br)                                                                                                                                                                                                                   | As a support tool for developers, following the principles of \"Developer Experience\". In order to make the developer's day to day more practical, efficient and, why not, happy.                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [Sonatype](https://www.sonatype.com)                                        | [Srikar Ananthula](mailto:sananthula@sonatype.com)                                                                                                                                                                                                               | Centralize services used internally with many plugins|\n| [CVS Health](https://www.cvshealth.com)                                     | [Ari Ben-Elazar](mailto:abenelazar@gmail.com)                                                                                                                                                                                                                    | Cataloging and documenting our service offerings to offer our internal developers a better operational journey                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| [Yatra.com](https://www.yatra.com)                                          | [Matiur Rahman Maitur](mailto:arifrahman4u@gmail.com)                                                                                                                                                                                                            | Easy to find out Project details, ownership, dependent services, Documentation, it is very useful for developer.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [Yotpo](https://www.yotpo.com)                                              | [Liran Yogev](mailto:lyogev@yotpo.com)                                                                                                                                                                                                                           | Services exploration, documentation and project generator                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| [Mainsail Industries](https://www.mainsailindustries.com)                   | [Brad Sollar](mailto:brad@mainsailindustries.com)                                                                                                                                                                                                                | Internal tool management and docs|\n| [Prisma](https://prismamp.com)                                              | [Sebastian Gravina](mailto:sgravina@prismamp.com)                                                                                                                                                                                                                | Is part of our|\n| [Syndetic](https://syndetic.io)                                             | [John Feminella](mailto:robots+swag@syndetic.io)                                                                                                                                                                                                                 | We're working with multiple F100 clients for digital transformation and Backstage is a key part of our landing and acceleration strategy.                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| [Imagine Learning](https://www.imaginelearning.com/en/us)                   | [Jared Stehler](mailto:jared.stehler@imaginelearning.com)                                                                                                                                                                                                        | Software catalog, product dependency visualization                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| [Alef Education](https://www.alefeducation.com)                             | [Belal Juma](mailto:belal.juma@alefeducation.com)                                                                                                                                                                                                                | We use backstage as a Service Catalog and rely on the TechDocs feature|\n| [Zego](https://www.zego.com)                                                | [Sean Kenny](mailto:sean.kenny@zego.com)                                                                                                                                                                                                                         | Single pane of glass for organisational and operational information for all services across our systems.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| [Absa Group Limited](https://www.absa.africa/absaafrica/)                   | [Chris Kieser](mailto:chris.kieser@absa.africa)                                                                                                                                                                                                                  | Developer portal for all development needs - security, AWS, k8s, build and deployment pipelines and more                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\n| [Nutrien Ag Solutions](https://www.nutrienagsolutions.com.au)               | [Jan Quijano](mailto:jan.quijano@nutrien.com.au)                                                                                                                                                                                                                 | Software Project Catalog|\n| [Lendingkart](https://www.lendingkart.com/)                                 | [Dinesh Rajpoot](mailto:dinesh.rajpoot@lendingkart.com)                                                                                                                                                                                                          | Service catalog, Software templates to enforce best practices and tech insights to track mandates & migrations.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| [Meltwater](https://underthehood.meltwater.com)                             | [@spier](https://github.com/spier), [@remen](https://github.com/remen)                                                                                                                                                                                           | Improving developer experience by centralizing documentation and internal APIs. Goal: Foster InnerSource collaboration and speed up onboarding time in our 500+ people Product & Engineering org.                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| [Doctolib](https://doctolib.engineering/)                                   | [@djiit](https://github.com/djiit)                                                                                                                                                                                                                               | Rails modularization effort awareness, tech organization discoverability. Improving the daily workflows and collaboration processes of our engineers.                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| [Twilio](https://www.twilio.com)                                            | [Alec Jacobs](https://github.com/alecjacobs5401)                                                                                                                                                                                                                 | Developer portal, universal software catalog, and centralized taxonomy platform|\n| [OVHcloud](https://www.ovhcloud.com/fr/)                                    | [Jean-Philippe Blary](https://github.com/blaryjp), [Arnaud Bauer](mailto:arnaud.bauer@ovhcloud.com), [Flavien Chantelot](https://github.com/Dorn-)                                                                                                               | We're providing Backstage to our collaborators to ease their daily jobs, and let them extends it using plugins.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| [Procter & Gamble](https://us.pg.com/)                                      | [Binita Nayak](https://github.com/binitan),                                                                                                                                  | P&G leverages Backstage to build internal developer portal to ensure developers' happiness. This developer portal shall act as single source of information needed by development teams to seamlessly create, find and maintain their software components/resources/documentation.                                                                                                                                                                                                                                                                                                                                     |\n| [SANS Institute](https://www.sans.org)                                      | [Christopher Klewin](mailto:cklewin@sans.org)                                                                                                                                                                                                                    | Developer portal for centralized visibility, reporting, and tooling across multiple organizations|\n| [Okay](https://www.okayhq.com/)                                             | [Tomas Barreto](mailto:tomas@okayhq.com)                                                                                                                                                                                                                         | Service catalog, developer portal, and technical documentation|\n| [Kaluza](https://www.kaluza.com)                                            | [James Condron](mailto:james.condron@kaluza.com)                                                                                                                                                                                                                 | To provide an automated golden path to developers, with a focus on discovery and documentation|\n| [LinkedIn](https://linkedin.com)                                            | [Joshua Lawrence](mailto:jlawrence@linkedin.com)                                                                                                                                                                                                                 | We are building a platform for internal web tools|\n| [Forto](https://forto.com)                                                  | [Rodolfo Matos](mailto:rodolfo.matos@forto.com)                                                                                                                                                                                                                  | Still in a experimental phase/assessing the organisational fit. We will be using it mostly a developer portal -- pretty standard use case.                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| [BetterUp](https://betterup.com)                                            | [Jordan Hochenbaum](mailto:jordan.hochenbaum@betterup.co)                                                                                                                                                                                                        | We're starting to use Backstage as the central hub for service discovery, documentation, and develop experience.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [warung pintar](https://warungpintar.co.id/)                                | [Muhammad Rafly Andrianza](mailto:rafly.andrianza@warungpintar.co)                                                                                                                                                                                               | Initial Work Developer Portal with TechRadar, Service Catalogue, TechDocs, anything about platform & infrastructure resources.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |\n| [RaiaDrogasil](https://rd.com.br/)                                          | [Michael Lima](mailto:midsilva@rd.com.br)                                                                                                                                                                                                                        | We are building our developer portal. Software catalog, Tech Radar and Scaffolding are among the initial features.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| [AEB](https://www.aeb.com/)                                                 | [David Fankhänel](mailto:dfl@aeb.com)                                                                                                                                                                                                                            | Central developer platform for creating new apps via templates, getting an overview via software catalog, etc                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| [SALTO Systems](https://saltosystems.com)                                   | [Ian Cowley](mailto:i.cowley@saltosystems.com)                                                                                                                                                                                                                   | Currently using Backstage as an internal documentation portal|\n| [Lummo](https://lummo.com)                                                  | [Anjul Sahu](mailto:anjul@lummo.com)                                                                                                                                                                                                                             | We are building the internal developer portal using Backstage and bringing up all integrations and service information at one place.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| [Frontside](https://frontside.com/backstage)                                | [Taras Mankovski](mailto:taras@frontside.com)                                                                                                                                                                                                                    | An active community member and contributor, Frontside offers both custom development as well as enterprise support services to help teams get the most out of Backstage for the long-run.                                                                                                                                                                                                                                                                                                                                                                                                                              |\n| [Stepstone](https://www.stepstone.com/en/)                                  | [Neil Kennedy](mailto:neil.kennedy@stepstone.com)                                                                                                                                                                                                                | StepStone is using Backstage to solve problems around ownership and visibility of our applications. We have thousands of repos, multiple legacy systems and a growing platform that is hard to maintain. Backstage is forming the centre of our push to embrace the chaos.                                                                                                                                                                                                                                                                                                                                             |\n| [idwall](https://idwall.co)                                                 | [Rodrigo Catão Araujo](mailto:rodrigo@idwall.co)                                                                                                                                                                                                                 | Developer Portal for internal engineers to access service catalog, documentation, observability, infrastructure and internal tooling.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| [Jaguar Land Rover](https://www.jaguarlandrover.com)                        | [Josh Walker](mailto:jwalke18@jaguarlandrover.com)                                                                                                                                                                                                               | Users can request a Gitlab user, which creates a commit with the Terraform code|\n| [Glovo](http://glovoapp.com/)                                               | [Yaser Toutah](mailto:yaser.toutah@glovoapp.com)                                                                                                                                                                                                                 | Developer Portal to improve our Developer Experience, identify ownership and track metadata for our services and tools. It's our Service Catalog. In addition to that, we use it for Service Creation, and much more.                                                                                                                                                                                                                                                                                                                                                                                                  |\n| [Dixa](https://dixa.com)                                                    | [Jens Møller](https://github.com/jensamoller)                                                                                                                                                                                                                    | We are in early stages, but using it to get overview of our repositories and ownership of these. We want among many things to use it for compliance and easier access to key metrics for our repos.                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| [Notino](https://notino.com)                                                | [Jan Remunda](mailto:jan.remunda@notino.com)                                                                                                                                                                                                                     | Backstage is our developer portal. We use it as service catalog and for technical documentation|\n| [Polarpoint](https://polarpoint.io/)                                        | [Surj Bains](https://github.com/polarpoint-io)                                                                                                                                                                                                                   | We are using Backstage as our Developer portal as well as for hosting our DevOps portal for software catalog.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| [Niche](https://niche.com)                                                  | [Zach Romitz](mailto:zach.romitz@niche.com)                                                                                                                                                                                                                      | We are using the Software Catalog, Software Templates, API documentation, and Techdocs to try and centralize service information.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\n| [Mercedes-Benz.io](https://www.mercedes-benz.io/)                           | [Manuel Santos](https://github.com/manusant)                                                                                                                                                                                                                     | At Mercedes-Benz we use it as a developer portal with software catalog, TechDocs, Scaffolding and custom plugins. It provides an overview of our tech ecosystem to our product development teams. The portal also serves as a way to foster collaboration among the numerous companies of the Mercedes-Benz Group.                                                                                                                                                                                                                                                                                                     |\n| [Funding Circle](https://www.fundingcircle.com/)                            | [Ariel Pacciaroni](https://github.com/arielpacciaroni)                                                                                                                                                                                                           | We are building the internal developer portal using Backstage project and centralizing all services information at one place. The portal helps us track down repositories ownership as well as direct access to key information on every component.                                                                                                                                                                                                                                                                                                                                                                    |\n| [Clarivate](https://www.clarivate.com)                                      | [Gabriele Carteni](mailto:gabriele.carteni@clarivate.com)                                                                                                                                                                                                        | We are building our Developer Portal using Backstage to have a better control over our software ecosystem, integrate SDLC tools and promote best practices                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\n| [Cho Tot](https://www.chotot.com)                                           | [Chotot Team](mailto:sre@chotot.vn)                                                                                                                                                                                                                              | Internal developer portal, service catalog with CI/CD tools|\n| [William Hill](https://www.williamhillgroup.com/)                           | [Pat Mills](mailto:pat.mills@williamhill.com), [Nathan Flynn](mailto:nflynn@williamhill.co.uk), and [Nishkarsh Raj](mailto:nishkarsh.raj@williamhill.co.uk)                                                                                                      | William Hill are leveraging Backstage to build our Engineering Portal. Our mission is to centralize the software catalog inventory to enable service discoverability, reduce the onboarding time for new Engineers, provide a single pane of glass to accelerate Developer Productivity and Save Engineers time. Our aspiration is to create an InnerSource community focussed on organization-wide patterns that are re-usable and can be self-served with the Scaffolder.                                                                                                                                            |\n| [Vodafone NewZealand Limited](https://vodafone.co.nz)                       | [Ankit Gupta](mailto:ankit.gupta@vodafone.nz), [DevOps COE](mailto:devopstooling@vodafone.nz)                                                                                                                                                                    | Vodafone NZ are leveraging Backstage to build centralised and self service Engineering Portal. Our mission is to standardised Pipeline templates across the Engineering teams, One shop stop to create the pipelines and repository with a template approach which reduces creation part from days to minutes and no wait time for developers. A unified view for Azure DevOps pipeline, Azure Repo pull requests, Deployment status from Azure RedHat Openshift-ArgoCD and SonarQube Security and code quality scans report on a single pan to provide a streamlined view for all microservices across the app stack. |\n| [Coamo](http://www.coamo.com.br)                                            | [Henrique Oliveira](https://www.linkedin.com/in/oliveirah/), [Guilherme Xavier](https://br.linkedin.com/in/guilhermexavierlnx)                                                                                                                                                                               | We're starting to use it as the main tool of a DevOps platform. Our goal is to provide software templates, centralize our software catalog enabling efficient service discovery, and make it easy to manage the entire software ecosystem in one place.                                                                                                                                                                                                                                                                                                                                                                |\n| [Exclaimer](https://www.exclaimer.com/)                                     | [Marley Powell](mailto:marley.powell@exclaimer.com)                                                                                                                                                                                                              | Developer portal, service catalog and documentation|\n| [Edge Consulting](https://egde.no/)                                         | [Øyvind Brekkhus Sandåker](mailto:oyvindbs@egde.no)                                                                                                                                                                                                              | Using it as a Software Catalog to get an overview of our systems, for ourselves and our customers|\n| [CRV](https://crv4all.com)                                                  | [Pepijn Schildkamp](mailto:pepijn.schildkamp@crv4all.com)                                                                                                                                                                                                        |\n| [uisee.com](https://uisee.com)                                              | [Haili Zhang](mailto:haili.zhang@uisee.com)                                                                                                                                                                                                                      | In PoC stage, planning to land it for cloud platform dev team|\n| [Egencia](https://www.egencia.com)                                          | [Micheal Gibbons](mailto:migibbons@egencia.com)                                                                                                                                                                                                                  | Developer Portal: Software Catalog, Software Templates and Techdocs|\n| [Adaptavist](https://adaptavist.com)                                        | [Lilly Holden](mailto:lholden@adaptavist.com)                                                                                                                                                                                                                    | Developer portal, service catalog, documentation and self-service platform|\n| [Shipshape](https://shipshape.io)                                           | [Chuck Carpenter](mailto:chuck@shipshape.io)                                                                                                                                                                                                                     | We are a consultancy helping teams implement and customize Backstage|\n| [Backbase](https://backbase.com)                                            | [Nicolas Torres](mailto:ntorres.dev@gmail.com)                                                                                                                                                                                                                   | To catalog components and teams|\n| [clearSale](https://www.clear.sale)                                         | [Paulo Baima](mailto:paulo.filho@clear.sale)                                                                                                                                                                                                                     | Central Hub for all the company modules, enabling the track of ownership of components and resources and how they relate to each other.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| [LeroyMerlin](https://www.leroymerlin.com.br)                               | [Rodrigo Franzoni](mailto:rfranzoni@leroymerlin.com.br)                                                                                                                                                                                                          | Our engineers use the Backstage to solve problems around ownership and visibility of our applications, access service catalog, documentation, observability and infrastructure.                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| [Intility](https://intility.no/en/)                                         | [@daniwk](https://github.com/daniwk)                                                                                                                                                                                                                             | We are creating a developer portal powered by Backstage, with software catalog, documentation, templates and integrations to our infrastructure and internal tools.                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| [ImmobiliareLabs](https://labs.immobiliare.it/)                             | [@JellyBellyDev](https://github.com/JellyBellyDev)                                                                                                                                                                                                               | Centralized portal with our internal services, infrastructures, relationships between systems, technical documentation, templates, monitoring and custom integrations with our own DX tools.                                                                                                                                                                                                                                                                                                                                                                                                                           |\n| [Skillz](https://skillz.com/)                                               | [Peiman Jafari](https://github.com/peimanja)                                                                                                                                                                                                                     | Internal developers portal for technical documentations, components ownership and relationship, software templates and integrations with internal tools                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n| [Telus](https://www.telus.com/en/)                                          | [Leo Li](mailto:leo.li@telus.com), [Laurent Robichaud](mailto:laurent.robichaud@telus.com), [Seb Barre](https://github.com/sbarre)                                                                                                                               | Simplifying the developer experience through centralized team member portals. Our current focus includes the adoption of Tech Docs, Software Catalog, Software Templates, the plethora of plugins, and contributing features back to Backstage. 🤖                                                                                                                                                                                                                                                                                                                                                                     |\n| [Fidelity Investments](https://fidelity.com)                                | [Ankita Upadhyay](mailto:ankita.upadhyay@fmr.com)                                                                                                                                                                                                                | Getting started with the adoption for Monorepo projects|\n| [Verisk](https://verisk.com)                                                | [Callen Barton](mailto:#xw_architecture@verisk.com), [Kevin Johnson](mailto:#xw_architecture@verisk.com)                                                                                                                                                         | Developer portal to quickly create and deploy microservices|\n| [iodigital](https://iodigital.com)                                          | [Jan-Willem Mulder](mailto:jan-willem.mulder@iodigital.com)                                                                                                                                                                                                      | Internal developer portal for discovery of applications, projects and teams. Using several plugins like the Software Catalog and Tech Insights for promoting best practices and supporting our SDLC toolchain                                                                                                                                                                                                                                                                                                                                                                                                          |\n| [Fanatics](https://www.fanaticsinc.com/)                                    | [Rory Scott](mailto:rscott@fanatics.com)                                                                                                                                                                                                                         | Internal Portal consolidating documentation, making it easier to manage applications, internal developer community platform, and self-service cloud infrastructure + pipelines.                                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| [Appfolio](https://appfolio.com)                                            | [Andy Vaughn](mailto:andy.vaughn@appfolio.com)                                                                                                                                                                                                                   | Internal software catalog, tech radar, documentation portal to disambiguate software and domain ownership, foster exploration of available developer platform services and tools, improve communication, democratize documentation and knowledge sharing, and coordinate the software lifecycle; all in service of a best-in-class developer experience.                                                                                                                                                                                                                                                               |\n| [isaac](https://isaac.com.br/)                                              | [Leonardo Borges](mailto:leonardo.borges@isaac.com.br), [Ordilei Souza](mailto:ordilei.souza@isaac.com.br)                                                                                                                                                       | We're using Backstage as our Internal Developer Portal and main microservices catalog for mapping ownership, health and metrics for each one.                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| [Paraná Banco](https://site.paranabanco.com.br/)                            | [Joao Antunes](mailto:joaopma@pbtech.net.br)                                                                                                                                                                                                                     | Internal software catalog, documentation and ownership, improve communication, democratize documentation and knowledge sharing, and coordinate the software lifecycle; all in service of a best-in-class developer experience.                                                                                                                                                                                                                                                                                                                                                                                         |\n| [Stone](https://stone.com.br/)                                              | [Levy Fialho](mailto:lfialho@stone.com.br)                                                                                                                                                                                                                       | We're using Backstage as our Credit Team Developer Portal and microservices catalog for mapping ownership. We are also using mkdocs for microservices documentation.                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\n| [REI](https://www.rei.com/)                                                 | [Jen Evans](mailto:jenevan@rei.com)                                                                                                                                                                                                                              | Developer portal focused on an enterprise-wide app catalog to track ownership and surface APIs|\n| [next](https://next.me)                                                     | [Devan Jeronimo Nack](mailto:devan.j.nack@next.me), [Everson Crusara](mailto:everson.crusara@next.me), [Thiago Carneiro da Silva](mailto:thiagoc.silva@next.me)                                                                                                  | We are building our Internal Developer Portal using Backstage to improve developer's experience by centralizing our services catalog and identifing microservices' ownership. Also we are going to improve Technical Documentation and speed up development using software templates to help squads in creation and deployment of new microservices.                                                                                                                                                                                                                                                                   |\n| [Vipps](https://vipps.no)                                                   | [Martin Ehrnst](https://github.com/ehrnst)                                                                                                                                                                                                                       | Vipps use backstage for our service catalog, documentation, and developer portal. Using templates we are able to simplify the developer experience when deploying new services to our platform.                                                                                                                                                                                                                                                                                                                                                                                                                        |\n| [Ferrovial](https://ferrovial.com)                                          | [Jose Luis Rosado](mailto:jlrosado@ferrovial.com)                                                                                                                                                                                                                | Backstage is helping us to improve and acelerate dev experience helping teams to quickly find technical documentation, infrastructure templates, pipelines, software components and quickstarters that have been developed by our squads in a inner source friendly environment.                                                                                                                                                                                                                                                                                                                                       |\n| [Inter&Co](https://bancointer.com.br)                                       | [Arnaud Lanna](https://github.com/arnaudlanna), [Adriano Silva](https://github.com/adrianovss), [Bruno Grossi](https://github.com/begrossi)                                                                                                                      | We're using Backstage as our internal Developer Portal to catalog and collect repositories and microservices pieces of information like ownership, deployment time, and documentation.                                                                                                                                                                                                                                                                                                                                                                                                                                 |\n| [StatusNeo](https://statusneo.com/)                                         | [Karan Nangru](mailto:nangru@statusneo.com), [@NishkarshRaj](https://github.com/NishkarshRaj), and [Gaurav Sarien](mailto:gaurav.sarien@statusneo.com)                                                                                                           | Harnessing the power of central catalog inventory and self-serving software templates|\n| [Alaska Airlines](https://alaskaair.com)                                    | [@swerdick](https://github.com/swerdick)                                                                                                                                                                                                                         | Backstage is the developer portal for our 'software delivery platform'. Consolidating developer tools to one place, and providing automation to make it easy for developers to create and deploy applications to Kubernetes                                                                                                                                                                                                                                                                                                                                                                                            |\n| [Loft](https://loft.com.br)                                                 | [Squad DevTools](mailto:squad_devtools@loft.com.br)                                                                                                                                                                                                              | We're using Backstage to give visibility and promote ownership of all our applications, resources and tools. Now moving to use it as a Developer Portal to create applications, AWS resources etc.                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| [Raízen](https://www.raizen.com)                                            | [Melquisedque Bernardes Pereira](https://github.com/rayleshh) and [Paulo Eduardo Peixoto](https://github.com/padupe)                                                                                                                                             | Backstage helps us to organize and make available, in a simple and direct way, all the infrastructure for new projects. In addition, it has become a great support tool for our developers.                                                                                                                                                                                                                                                                                                                                                                                                                            |\n| [Trifork](https://trifork.com)                                              | [Casper Thygesen](https://github.com/cthtrifork)                                                                                                                                                                                                                 | We're using Backstage as part of our dataplatform product. It integrates with the infrastructure components and is the developer portal for all the platform users.                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n| [MSCI](http://msci.com)                                                     | [Stephen Burrows](mailto:stephen.burrows@msci.com)                                                                                                                                                                                                               | Developer portal, service catalog, documentation and tooling|\n| [ESW](https://esw.com)                                                      | [Alisson Fabiano](https://github.com/afabianoo), [Bruno Quintella](https://github.com/quintelab) and [Guilherme Oenning](https://github.com/goenning)                                                                                                            | Backstage is our one stop shop to find everything related to all our services, such as ownership, dependencies, production status, tech health and much more.                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n| [FanDuel](https://fanduel.com)                                              | [Diego Herrera](https://github.com/diegoh), [Christy Campbell](https://github.com/FD-ChristopherCampbell)                                                                                                                                                        | We use backstage as our developer portal to provide visibility of our software, ownership, strategy, and the state of maturity across disciplines.                                                                                                                                                                                                                                                                                                                                                                                                                                                                     |\n| [Operate First](https://www.operate-first.cloud/)                           | [Tom Coufal](https://github.com/tumido), [Sam Kopecky](https://github.com/samokopecky)                                                                                                                                                                           | Backstage provides us with a public service catalog and serves as a gateway to our community cloud. Our instance is publicly available to everyone [here](https://service-catalog.operate-first.cloud/) ([source](https://github.com/operate-first/service-catalog))                                                                                                                                                                                                                                                                                                                                                   |\n| [Tractable AI](https://tractable.ai/)                                       | [Stephan Schielke](https://github.com/stephanschielke)                                                                                                                                                                                                           | We are hitting a critical point in our scale (100+ engineers) and need to get a handle on discoverability and ownership. The Service Catalog, TechDocs and Search are essential to us to achieve that.                                                                                                                                                                                                                                                                                                                                                                                                         |\n| [Garanti BBVA Teknoloji](https://www.linkedin.com/company/garanti-teknoloji/)            | [Caglar Cataloglu](https://github.com/crozwise)                                                                                                                                                                                                         | We are using Backstage focusing on improving experience of developers, minimizing friction from idea to production. We call our portal as \"Hyperspace\" and very excited for our community (2000+ engineers) that finally we have a platform to boost our productivity!\n| [Booking.com](https://www.linkedin.com/company/booking.com/)            | [Mesut Yilmazyildirim](https://www.linkedin.com/in/myilmazyildirim)                                                                                                                                                                                                         | We are adopting Backstage as the new reliability platform inside the company. We are migrating UIs of our internal developer tools to Backstage for a better user experience.\n| [Swissquote Bank](https://swissquote.com/company/jobs/open-positions)            | [Bruno Rocha](https://www.linkedin.com/in/bruno-rocha1/)                                                                                                                                                                                                         | Integrating Backstage as the visualization layer & tactical overview of our services and teams.\n| [XP Inc.](https://www.linkedin.com/company/xpinc/)                          | [Gabriel Santos](https://www.linkedin.com/in/gabriel-santos-6bb740a/)                                                                                                                                                                                            | Developer Portal Catalog (components, APIs, resources, users, groups) and organization relations.\n| [OVO Energy](https://www.ovoenergy.com/)                          | [Michael Wizner](https://github.com/mwz), [Dan Laird](https://github.com/dlaird-ovo), [Samantha Betts](https://github.com/sammbetts)                                                                                                                                                                                           | Developer Experience Tool with an aim to to improve processes, boost productivity, finding of information/docs and building tech engagement throughout the business.\n| [MusicTribe](https://careers.musictribe.com/)                               | [Alex Ford](mailto:alex.j.ford@gmail.com), [Tiago Barbosa](https://github.com/t1agob)                                                                                                                                                                                                         | We are starting to use Backstage as a developer portal to share API specifications and documentation, to quickly onboard new projects with the software templates, and to help developers discover software through the catalog.\n| [Cazoo](https://www.cazoo.co.uk/)                                           | [Abz Mungul](https://www.linkedin.com/in/abzmungul/), [Scott Edwards](https://www.linkedin.com/in/scott-edwards-tech/)                                                                                                                                           | We're assessing Backstage as our developer platform at Cazoo with a focus on reducing cognitive load for our engineers. We're currently aiming for 3 outcomes: creating visibility into service ownership across teams, improving the discoverability of event schemas and relationships, and improving the discoverability of technical documentation and best practices.                                                                                                                                                                                                                                             |\n| [Gumtree](https://www.gumtree.com.au)                                       | [Kumar Gaurav](https://www.linkedin.com/in/kumargaurav517)                                                                                                                                                                                                       | We are starting to use it as a single place to find all component information in a distributed architecture.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n| [N26](https://n26.com)                                                      | [Alexei Timofti](https://www.linkedin.com/in/alexeitimofti)                                                                                                                                                                                                     | We use Backstage for our service catalog and are actively looking into adopting other plugins like TechDocs, TechInsights and Software Templates.                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [The LEGO Group](https://www.lego.com)                                                      | [Waqas Ali](https://www.linkedin.com/in/waqasali47)                                                                                                                                                                                                     | We are building our internal develper portal on top of Backstage.                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [CORS.gmbh](https://www.cors.gmbh)                                          | [@dpfaffenbauer](https://github.com/dpfaffenbauer)                                                                                                                                                                                                              | Developer Portal for our Projects we develop for our Customers and Hosting them On Kubernetes.                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [Comcast](https://comcast.github.io/)                                         | [Ryan Emerle](https://github.com/remerle)                                                                                                                                                                                                                        | Developer portal enabling discovery of products, services, and documentation throughout the enterprise to ultimately reduce friction and improve time-to-market.                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| [Syntasso](https://www.syntasso.io/)                                        | [@syntassodev](https://github.com/syntassodev)                                                                                                                                                                                                                   | Backstage is used as a optional UI for the [Kratix project](https://kratix.io), a framework for building platforms.\n| [Bankdata](https://www.bankdata.dk)                                                      | [Thomas Grønbæk](https://www.linkedin.com/in/thomas-grønbæk/)                                                                                                                                                                                                     | We are assessing Backstage as our internal developer portal @Bankdata. Goal is to reduce cognitive load and friction for developers and thereby improving developer experience, onboarding and productivity. Expect use of Software Catalog for discoverability and ownership, Tech Docs and Software Templates to integrate tooling and best practices.\n| [B3](https://www.b3.com.br/)                              | [Marcos Rodrigues](https://www.linkedin.com/in/marcos-rodrigues-cloud/)                                                                                                                                                                                                                   | B3 (Brazilian Stock Exchange) will implement a self-service platform focused on software development based on Backstage. The tool will primarily focus on product development and software engineering teams, as well as professionals from other areas who are also involved in software delivery. The new platform will function as a portal where teams can access tools, codes, and templates that have already been tested and are available, serving as building blocks for the development of new solutions|\n| [Porto](https://www.portoseguro.com.br/)                              | [Camilo Alessandro](https://www.linkedin.com/in/camilo-alessandro/)                                                                                                                                                                                                                   | Porto (Brazilian insurance company) Centralized developer portal with software catalog, application templates, maturity radar, component taxonomy standardization, and automation in the integration with DevSecOps processes|\n| [Einride](https://github.com/einride) | [@odsod](https://github.com/odsod/) | We use Backstage to create a great developer experience across Einride's entire software stack - from autonomous and electric vehicles to cloud systems - and we've developed a [Backstage Go SDK](https://github.com/einride/backstage-go) for interfacing with Backstage from our Go tooling.\n| [Chartboost](https://www.chartboost.com)| [@brucearctor](https://github.com/brucearctor), [@ArtemChekunov](https://github.com/ArtemChekunov) | We are building our internal develper portal on top of Backstage.|\n| [Quantum Metric](https://www.quantummetric.com/) | [Eric Irwin](https://www.linkedin.com/in/ericirwin1124/) | Backstage is used within our Developer Experience Platform (DXP) in order to increase self-service, standardization and discoverability across our Engineering teams. |\n| [VodafoneZiggo](https://www.vodafoneziggo.nl/) | [Peter Macdonald](https://github.com/Parsifal-M) | We use Backstage as our go-to platform for managing our internal tools and services. With Backstage, we can easily discover and access all the services we need to do our work, whether it's deploying code, managing infrastructure, or accessing documentation. We appreciate the standardized, consistent interface and the ability to easily create custom plugins to integrate with our existing workflows. Overall, Backstage is streamlining our internal operations and helps us work more efficiently as a team. |\n| [Volvo Cars](https://www.volvocars.com) | [Martin Wänerskär](https://github.com/martin-wanerskar) | Internal developer portal with intent to unify infrastructure tooling, services, and developer documentation under a single, easy-to-use interface. |\n| [Mercantil Andina](https://www.mercantilandina.com.ar/) | [Sebastian Paredero](https://www.linkedin.com/in/sebastian-paredero/), [Matias Javier Gomez](https://www.linkedin.com/in/matias-javier-gomez-140540a3/), [Gustavo Wilgenhoff](https://github.com/wilgustavo) | Developer portal: documentation, service templates, org structure, service catalog, plugins for integration with internal systems. |\n| [Livelo](https://www.livelo.com.br) | [Felipe Nardon](https://www.linkedin.com/in/felipe-nardon-dos-santos/), [Yves Galvão](https://www.linkedin.com/in/yvesgalvao/), [Isaque Rocha](https://www.linkedin.com/in/isaque-rocha/) | Internal platform that aims to reduce the teams' cognitive load through self-service, abstracting processes that are now part of the teams' daily lives, enabling a centralized management of documentation, catalog, metrics and knowledge. |\n| [Worten](https://www.worten.pt) | [@elisiariocouto](https://github.com/elisiariocouto) | We are proud to be an adopter of Backstage. Our goal is to make our Backstage installation the go-to location for every developer. To achieve this, we developed a custom plugin to populate Backstage's catalog with information from our internal deployment tool. As a result, we now have full visibility of all Worten systems, components, APIs, messaging topics, and documentation. We also migrated the internal deployment tool's Web UI to Backstage. Currently, we are working on Backstage's Software Templates feature. |\n| [Inventa](https://www.inventa.shop) | [João Munhoz](https://github.com/joaovitormunhoz), [Lucca Fonte](https://github.com/luccafonte) | We use Backstage at Inventa to share knowledge between squads, in the form of technical documentation, API contracts, and service status/ownership info, fomenting a self-service and scalable engineering culture. We also developed a plugin that allows us to have a centralized view of all the engineering tools we have for each environment, making it easy to access each one of our tools and increasing productivity. |\n| [PITS Global Data Recovery Services](https://www.pitsdatarecovery.net/) | [@pheianox](https://github.com/pheianox) | The internal developer portal seeks to combine infrastructure tooling, services, and developer documentation into a single, user-friendly interface. By streamlining these components, the portal enhances productivity and simplifies the development process for the internal team. |\n| [Ericsson](https://www.ericsson.com/) | [Shane Kelly](https://www.linkedin.com/in/shane-kelly-2367816/) | We are adopting backstage to use as our Internal Developer Portal. Our goal is to improve Developer Experience by reducing cognitive load through backstage as a single point for developer information, documentation, tools, software insights and developer metrics. To enable golden paths using the scaffolder and improve developer self service through automation of infrastructure provisioning and configuration. |\n| [Paylocity](https://www.paylocity.com) | [@mharrah](https://www.linkedin.com/in/mattharrah/) | We're basing our internal developer hub we call Nucleus on Backstage.  We're starting with the software catalog, then will gather feedback from our developers on what features they want next...integrations, templates, expanded catalog info, etc. |\n| [Celonis](https://celonis.com) | [@georgeyord](https://github.com/georgeyord), [@LauraMoraB](https://github.com/LauraMoraB), [@mariosant](https://github.com/mariosant), [@Rbillon59](https://github.com/Rbillon59) | Internal developer and product portal implementation. |\n| [Rabobank](https://www.rabobank.com) | [Willem Dekker](https://github.com/wdekker), [Sridhar Gnanasekaran](https://github.com/srid99), [Ruben Ernst](https://github.com/Ruben-E) | At Rabobank, our mission is to make life better for engineers. After exploring various options in the market, we've discovered that Backstage provides the perfect foundation for creating a platform that meets our engineers' needs and helps us achieve our goals. We want to make our engineers happy by offering standardized services, freeing them up to focus on delivering value. Our vision is to create a one-stop platform where engineers can find everything related to software and services. In practice, we're excited about using all the cool features in Backstage, and we're even planning to build our own plugins. |\n| [JB Hi-Fi](https://www.jbhifi.com.au) | [@bahman](https://github.com/bahman-jb/) | We use Backstage as a central place for all of our components/apis across multiple teams. It helps us to quickly identify the ownership of a component/api, find the related links and have a quick access to CI/CD pipelines. |\n| [Zenklub](https://www.zenklub.com.br) | [@zenklub](https://github.com/zenklub), [@gioufop](https://github.com/gioufop) | Developer portal, services catalog and centralization of metrics from Grafana Stack and AWS. Furthermore, centralization of documentation and infra details like Tools, Network services and so on. |\n| [Platzi](https://platzi.com/) | [@juancarestre](https://github.com/juancarestre/), [Engineering at Platzi](https://github.com/PlatziDev/) | Backstage allow our developers to get easily engaged with all the internal components, technical documentations and software templates. All new developers reduce its onboarding time via Backstage, and after a couple of integrations it allowed us to create new components with in a couple of clicks. |\n| [idealo](https://idealo.de) | [Wanis Fahmy](https://github.com/wanisfahmyDE), [Sajjad Pervaiz](https://github.com/sjvaiz), [Tim Heurich](https://github.com/theurichde) | Backstage is our Internal developer portal. Along with other plugins, We use the software catalog, TechDocs and explore plugins to manage, discover and document our software components and platform products. |\n| [Localiza&Co](https://www.localiza.com/) | [Augusto Amormino](https://github.com/augustoamormino), [Jonas Soares](https://github.com/jonaopower), [Alexandre Amormino](https://github.com/alexandreamormino), [Greg Almeida](https://github.com/sephh) | We're excited to announce our adoption of Backstage as our Internal Developer Portal! Our mission is to elevate the Developer Experience by streaming information access. Backstage will serve as the ultimate hub for developer resources, including documentation, tools, software insights, and metrics. Through Backstage, we're simplifying processes, offering software templates to empowered and efficient development journey, enhancing self-service capabilities with the embedded all best practices. |\n| [V2 Digital](https://v2.digital) | [Joe Patterson](https://github.com/jrwpatterson)| We will be using it to be a corporate dashboard plus our software catalog. |\n| [AppsFlyer](https://www.appsflyer.com/) | [Shahar Shmaram](https://github.com/shmaram)                                                                                                                                                                                                                     | Internal Developer Portal, a catalog of all company resources, custom providers and processors, scaffolder for generating new resources.\n| [Gynzy](https://gynzy.com) | [Stef Louwers](https://github.com/fhp) | We are building an internal developer portal to get an overview of all our software components. |\n| [Cielo](https://www.cielo.com.br)                                          | [@Alex Silva](https://github.com/narokwq)                                                                                                                                                                                                                     | We are using as our Internal Developer Portal, it provides developers with the resources, information, and tools they need to build high-quality applications and adhere to organizational standards and security practices.                                                                                                                                                                                                                                                                                                                                                                                                 |\n| [Giant Swarm](https://giantswarm.io) | [Lucas Weatherhog](https://github.com/weatherhog) | At Giant Swarm we are using Backstage as our internal developer portal. Heavily using the service catalog and the TechDocs plugin. Further looking into adopting functionalities of our Web UI into Backstage to have a single pane of glass for our core business, managing all our components, and helping developers to be more productive. |\n| [WD Studios](https://wdstudios.tech) | [Mikael Aboagye](https://github.com/JailbreakPapa) | We are using Backstage as our main internal developer portal for our Programmers and Studio Partners. It's really proven its worth at our studio with on-boarding new programmers! |\n| [Anuclei](https://anuclei.com) | [Mark Jackson](https://github.com/markjacksonfishing) | At Anuclei, we are using Backstage as our internal portal for developers, providing all the tools and guidance needed for full-stack software projects. It simplifies our development methods, making innovation and investment in new ideas consistent and easy to repeat.\n| [Fortnox](https://www.fortnox.se) | [@magnusp](https://github.com/magnusp) | With Backstage we consolidate our internal tools into a single pane of glass and let the catalog drive our user interface. Our software templates onboard our services and teams onto Backstage, and with Techdocs we are letting our developers get back in control of their own documentation. |\n| [Wefox](https://www.wefox.com) | [@dibenlloch](https://github.com/dibenlloch) | Internal developer portal to consolidate all developers dashboards, company inventory with compliance reports, team management and self-service portal for IT/Team operations. |\n| [Aurora Innovation](https://aurorainnovation.com) | [@O5ten](https://github.com/O5ten) | Heavy usage of scaffolder, techdocs, homepage, k8s plugin and homegrown plugins to track migration paths and so on within a developer portal. It acts as a starting point for new and old developers to find all of our internal tooling in one place. \n| [ENSEK](https://ensek.com/) |  [Timothy Deakin](https://github.com/cftad) |We are using Backstage as our internal developer portal to provide a single pane of glass for our developers to access all the tools and services they need to build and maintain our software. |\n| [OP Financial Group](https://www.op.fi/op-financial-group) | [Heikki Hellgren](https://github.com/drodil), [Jyrki Koistinen](https://github.com/snyvision) | We are using Backstage as a gateway into our internal development platform offering to simplify complexity. |\n| [Scania](https://www.scania.com) | [Santosh Rangavajjula](https://linkedin.com/in/rsbth) | We are implementing backstage at Scania to consolidate operational information from Gitlab, Jira, Confluence, Artifactory, Servicenow and other tools into one place. |\n| [Senora.dev](https://senora.dev) | [Shaked Braimok Yosef](https://github.com/ShakedBraimok) |  We are using Backstage as a service catalog for our costumers. |\n| [Covestro](https://www.covestro.com) | [Julien Gedeon](https://github.com/cvvcv1) | We use Backstage as our Internal developer portal for the Digital R&D department. |\n| [Grupo OLX](https://www.olx.com.br/) | [@marciorgb](https://github.com/marciorgb), [@jeffbraga](https://github.com/jeffbraga), [@rogerfernandes](https://github.com/rogerfernandes), [@stockrt](https://github.com/stockrt) | At Grupo OLX, we are using Backstage to reduce friction and enhance developer autonomy by creating Golden Paths, which automate previously manual processes. Additionally, Backstage's catalog integrates various views of our organizational structure and workflows, offering a comprehensive overview of how different components interconnect. |\n| [DPG Media](https://www.dpgmediagroup.com) | [@benjidotsh](https://github.com/benjidotsh), [@lvstb](https://github.com/lvstb), [@ssliman](https://github.com/ssliman), [@edewel-beep](https://github.com/edewel-beep) | Access to infrastructure, documentation and internal tooling |\n| [Baloise](https://www.baloise.ch) | [@dweber019](https://github.com/dweber019), [@mikevader](https://github.com/mikevader) | We are using Backstage as internal developer protal for use cases like software catalog, documentation, infrastructure. |\n| [Cigna](https://www.cigna.com/) / [Evernorth](https://www.evernorth.com/) | [@raphtalia](https://github.com/raphtalia), [Devon Paluso](mailto:Devon.Paluso@evernorth.com), [Bryan Rego](mailto:Bryan.Rego@evernorth.com), [Ian Skillings](mailto:Ian.Skillings@evernorth.com) | Internal developer portal providing TechDocs, software templates, centralized secret management, with information consolidation from ServiceNow, Okta, GitHub, GitLab, and WebEx. |\n| [Infobip](https://www.infobip.com/) | [Antonio Ereiz](https://github.com/SonilPro) | Visual representation of all our entities registered within an existing internal catalog, along with a UI for editing their manifests. It serves as the go-to place for new internal tools that require a user interface and provides standardization of new components using Software Templates.\n| [CloudScript](https://www.cloudscript.com.br/) | [Helias Rodrigues](https://github.com/xcloudscript) | We use it to centralize and organize the components of our internal development platform. In addition, it provides an integrated experience for developers by using all the core modules and some plugins.\n| [Alauda](https://www.alauda.io/) | [Mario](https://github.com/mario-mui) | We use it to centralize and organize the components of our internal development platform. In addition, it provides environment templates for developers to create development testing or others environments \n| [New10](https://www.new10.com/) | [Cleber Gasparoto](https://github.com/chgasparoto) | We use Backstage as our internal developer portal to catalog services across teams, implement custom Tech Insights for ensuring service standards adoption, and centralize API specifications to streamline development processes and cross-team collaboration.\n| [Tele2 Kazakhstan](https://tele2.kz/) / [Altel Digital](https://digital.altel.kz/) | [Kuanysh Bekkulov](https://www.linkedin.com/in/kuanysh-bekkulov/), [Alexandr Puzeyev](https://www.linkedin.com/in/alexandr-puzeyev/) | Developer portal: services, components, APIs, and resources; includes documentation (Docs-as-Code), service templates, and plugins for integration with internal systems and tools.\n| [Axelerant](https://www.axelerant.com/) | [Zeshan Ziya](https://github.com/zeshanziya) | Developer portal, main gateway to infrastructure, documentation, internal tooling, and service catalog with a focus on project visibility.\n| [KnowBe4](https://www.knowbe4.com) | [Brandon Vicinus](https://www.linkedin.com/in/bvicinus/) | Internal Developer Portal managed by the Developer Experience Team. IDP hosts many different internal tools as plugins created by multiple teams, many of which are directly integrated with the Service Catalog. |\n| [Scalepoint](https://scalepoint.com) | [Yuriy Ostapenko](https://github.com/yuriyostapenko), [Dmytro Pasko](https://github.com/dimapasko), [Yuri Sedykh ](https://github.com/yuiri-sedykh), [Bartosz Wisniewski](https://github.com/Epgor) | Internal Developer Portal: Software Catalog with infrastructure resources and dependencies, Software Templates, TechDocs, Tech Radar, Kubernetes and Observability, as well as custom CI/CD components |\n\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.14,
          "content": "# Community Code of Conduct\n\nBackstage follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/main/code-of-conduct.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 20.75,
          "content": "# Contributing to Backstage\n\nOur vision for Backstage is for it to become the trusted standard toolbox (read: UX layer) for the open source infrastructure landscape. Think of it like Kubernetes for developer experience. We realize this is an ambitious goal. We can’t do it alone.\n\nTherefore, we want to create a strong community of contributors -- all working together to create the kind of delightful experience that our developers deserve.\n\nContributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given. ❤️\n\nBackstage is released under the Apache 2.0 License, and original creations contributed to this repo are accepted under the same license.\n\nIf you need help, just jump into our [Discord chatroom](https://discord.gg/backstage-687207715902193673).\n\n## Table of Contents\n\n- [Code of Conduct](#code-of-conduct)\n- [Security Issues?](#security-issues)\n- [Accessibility](#accessibility)\n- [Get Started!](#get-started)\n- [Coding Guidelines](#coding-guidelines)\n- [Package Scripts](#package-scripts)\n- [Local configuration](#local-configuration)\n- [Creating Changesets](#creating-changesets)\n- [Developer Certificate of Origin](#developer-certificate-of-origin)\n- [API Reports](#api-reports)\n- [Submitting a Pull Request](#submitting-a-pull-request)\n- [Review Process](#review-process)\n\n## Code of Conduct\n\nThis project adheres to the [CNCF Code of Conduct][code-of-conduct]. By participating, you are expected to honor this code.\n\n[code-of-conduct]: https://github.com/backstage/backstage/blob/master/CODE_OF_CONDUCT.md\n\n## Security Issues?\n\nSee [SECURITY](SECURITY.md).\n\n## Accessibility\n\nWe encourage you to catch any accessibility issues already in the development phase of new features to Backstage, see our [Accessibility documentation](https://backstage.io/docs/accessibility/) for more details.\n\n## Get Started!\n\nSo... feel ready to jump in? Let's do this. 👏🏻💯\n\n### Cloning the Repository\n\nOk. So you're gonna want some code right? Go ahead and fork the repository into your own GitHub account and clone that code to your local machine. GitHub's [Fork a repo](https://docs.github.com/en/get-started/quickstart/fork-a-repo) documentation has a great step by step guide if you are not sure how to do this.\n\nIf you cloned a fork, you can add the upstream dependency like so:\n\n```bash\ngit remote add upstream git@github.com:backstage/backstage\ngit pull upstream master\n```\n\nAfter you have cloned the Backstage repository, you should run the following commands once to set things up for development:\n\n```bash\ncd backstage  # change to root directory of project\n\nyarn install  # fetch dependency packages - may take a while\nyarn tsc      # does a first run of type generation and checks\n```\n\n### Serving the Example App\n\nOpen a terminal window and start the web app by using the following command from the project root. Make sure you have run the above mentioned commands first.\n\n```bash\nyarn dev\n```\n\nThis is going to start two things, the frontend (:3000) and the backend (:7007).\n\nThis should open a local instance of Backstage in your browser, otherwise open one of the URLs printed in the terminal.\n\nBy default, Backstage will start on port 3000, however you can override this by setting an environment variable `PORT` on your local machine. e.g. `export PORT=8080` then running `yarn start`. Or `PORT=8080 yarn start`.\n\nOnce successfully started, you should see the following message in your terminal window:\n\n```sh\n$ concurrently \"yarn start\" \"yarn start-backend\"\n$ yarn workspace example-app start\n$ yarn workspace example-backend start\n$ backstage-cli app:serve\n$ backstage-cli backend:dev\n[0] Loaded config from app-config.yaml\n[1] Build succeeded\n[0] ℹ ｢wds｣: Project is running at http://localhost:3000/\n[0] ℹ ｢wds｣: webpack output is served from /\n[0] ℹ ｢wds｣: Content not from webpack is served from $BACKSTAGE_DIR/packages/app/public\n[0] ℹ ｢wds｣: 404s will fallback to /index.html\n[0] ℹ ｢wdm｣: wait until bundle finished: /\n[1] 2021-02-12T20:58:17.614Z backstage info Loaded config from app-config.yaml\n```\n\nYou'll see how you get both logs for the frontend `webpack-dev-server` which serves the react app ([0]) and the backend ([1]);\n\nVisit <http://localhost:3000> and you should see the bleeding edge of Backstage ready for contributions!\n\nIf you want to get a better understanding of the layout of the repo now that you have a local copy running feel free to review the [Backstage Project Structure](https://backstage.io/docs/getting-started/#general-folder-structure) documentation.\n\n## Coding Guidelines\n\nAll code is formatted with `prettier` using the configuration in the repo. If possible, we recommend configuring your editor to format automatically, but you can also use the `yarn prettier --write <file>` command to format files.\n\nA consistent coding style is included via [EditorConfig](https://editorconfig.org/) with the file [`.editorconfig`](.editorconfig) at the root of the repo. Depending on your editor of choice, it will either support it out of the box or you can [download a plugin](https://editorconfig.org/#download) for the config to be applied.\n\nIf you're contributing to the backend or CLI tooling, be mindful of cross-platform support. [This](https://shapeshed.com/writing-cross-platform-node/) blog post is a good guide of what to keep in mind when writing cross-platform NodeJS.\n\nAlso be sure to skim through our [ADRs](docs/architecture-decisions) to see if they cover what you're working on. In particular [ADR006: Avoid React.FC and React.SFC](docs/architecture-decisions/adr006-avoid-react-fc.md) is one to look out for.\n\nIf there are any updates in `markdown` file please make sure to run `yarn run lint:docs`. Though it is checked on `lint-staged`. It is required to install [vale](https://vale.sh/docs/vale-cli/installation/) separately and make sure it is accessed by global command.\n\n### Editor\n\nThe Backstage development environment does not require any specific editor, but it is intended to be used with one that has built-in linting and type-checking. The development server does not include any checks by default, but they can be enabled using the `--check` flag. Note that using the flag may consume more system resources and slow things down.\n\n## Package Scripts\n\nThere are many commands to be found in the root [package.json](https://github.com/backstage/backstage/blob/master/package.json), here are some useful ones:\n\n```shell\nyarn start # Start serving the example app, use --check to include type checks and linting\n\nyarn storybook # Start local storybook, useful for working on components in @backstage/core-components\n\nyarn workspace @backstage/plugin-api-docs start # Serve api-docs plugin only, also supports --check\n\nyarn tsc # Run typecheck, use --watch for watch mode\nyarn tsc:full # Run full type checking, for example without skipLibCheck, use in CI\n\nyarn build:backend # Build the backend package, depends on tsc\nyarn build:all # Build published versions of packages, depends on tsc\nyarn build:api-reports # Build API Reports used for documentation\n\nyarn lint # Lint packages that have changed since later commit on origin/master\nyarn lint:all # Lint all packages\nyarn lint:docs # Lint all the Markdown files\nyarn lint:type-deps # Verify that @types/* dependencies are placed correctly in packages\n\nyarn test # Test packages that have changed since later commit on origin/master\nyarn test --no-watch # Test packages and include unchanged ones\nyarn test:all # Test all packages\n\nyarn clean # Remove all output folders and @backstage/cli cache\n\nyarn diff # Make sure all plugins are up to date with the latest plugin template\n\nyarn new # Create a new module\n```\n\n> See [package.json](https://github.com/backstage/backstage/blob/master/package.json) for other yarn commands/options.\n\n## Local configuration\n\nBackstage allows you to specify the configuration used while running the application on your computer. Local configuration is read from `app-config.local.yaml`. This file is ignored by Git, which means that you can safely use it to reference secrets like GitHub tokens without worrying about these secrets, inadvertently ending up in the Git repository. You do not need to copy everything from the default config to the local config. The `app-config.local.yaml` file will be merged with `app-config.yaml` and overwrite the default app configs.\n\n> NOTE: If you want to add your own configuration values to access in the frontend you also need to mark those values as visible using configuration schema, either in the app or in your own plugin. For more information, see [Defining Configuration](https://backstage.io/docs/conf/defining/).\n\nYou can learn more about the local configuration in the [Static Configuration in Backstage](https://backstage.io/docs/conf/) section.\n\n## Creating Changesets\n\nWe use [changesets](https://github.com/atlassian/changesets) to help us prepare releases. They help us make sure that every package affected by a change gets a proper version number and an entry in its `CHANGELOG.md`. To make the process of generating releases easy, it helps when contributors include changesets with their pull requests.\n\n### When to use a changeset?\n\nAny time a patch, minor, or major change aligning to [Semantic Versioning](https://semver.org) is made to any published package in `packages/` or `plugins/`, a changeset should be used. It helps to align your change to the [Backstage package versioning policy](https://backstage.io/docs/overview/versioning-policy#package-versioning-policy) for the package you are changing, for example, when to provide additional clarity on deprecation or impacting changes which will then be included into CHANGELOGs.\n\nIn general, changesets are only needed for changes to packages within `packages/` or `plugins/` directories, and only for the packages that are not marked as `private`. Changesets are also not needed for changes that do not affect the published version of each package, for example changes to tests or in-line source code comments.\n\nChangesets **are** needed for new packages, as that is what triggers the package to be part of the next release. They are also needed for changes to `README.md` files so that the updates are reflected on the NPM page for the changed package.\n\n### How to create a changeset\n\n1. Run `yarn changeset` from the root of the repo\n2. Select which packages you want to include a changeset for\n3. Select impact of the change you're introducing. If the package you are changing is at version `0.x`, use `minor` for breaking changes and `patch` otherwise. If the package is at `1.0.0` or higher, use `major` for breaking changes, `minor` for backwards compatible API changes, and `patch` otherwise. See the [Semantic Versioning specification](https://semver.org/#semantic-versioning-specification-semver) for more details.\n4. Explain your changes in the generated changeset. See [examples of well written changesets](#writing-changesets).\n5. Add generated changeset to Git\n6. Push the commit with your changeset to the branch associated with your PR\n7. Accept our gratitude for making the release process easier on the maintainers\n\n### Writing changesets\n\nChangesets are an important part of the development process. They are used to generate Changelog entries for all changes to the project. Ultimately, they are read by the end users to learn about important changes and fixes to the project. Some of these fixes might require manual intervention from users so it's important to write changesets that users understand and can take action on.\n\nHere are some important do's and don'ts when writing changesets:\n\n### Changeset should give a clear description to what has changed\n\n#### Bad\n\n```md\n---\n'@backstage/catalog': patch\n---\n\nFixed table layout\n```\n\n#### Good\n\n```md\n---\n'@backstage/catalog': patch\n---\n\nFixed bug in EntityTable component where table layout did not readjust properly below 1080x768 pixels.\n```\n\n### Breaking changes not caught by the type checker should be clearly marked with bold **BREAKING** text\n\n#### Bad\n\n```md\n---\n'@backstage/catalog': minor\n---\n\ngetEntity is now a function that returns a Promise.\n```\n\n#### Good\n\n```md\n---\n'@backstage/catalog': minor\n---\n\n**BREAKING** The getEntity function now returns a Promise and **must** be awaited from now on.\n```\n\n### Changes to code should include a diff of the files that need updating\n\n#### Bad\n\n```md\n---\n'@backstage/catalog': patch\n---\n\n**BREAKING** The catalogEngine now requires a flux capacitor to be passed.\n```\n\n#### Good\n\n````md\n---\n'@backstage/catalog': patch\n---\n\n**BREAKING** The catalog createRouter now requires that a `FluxCapacitor` is\npassed to the router.\n\nThese changes are **required** to `packages/backend/src/plugins/catalog.ts`\n\n```diff\n+ import { FluxCapacitor } from '@backstage/time';\n+ const fluxCapacitor = new FluxCapacitor();\n  return await createRouter({\n    entitiesCatalog,\n    locationAnalyzer,\n    locationService,\n+   fluxCapacitor,\n    logger: env.logger,\n    config: env.config,\n  });\n```\n````\n\n## Developer Certificate of Origin\n\nAs with other CNCF projects, Backstage has adopted a [Developers Certificate of Origin (DCO)](https://developercertificate.org/). A DCO is a lightweight way for a developer to certify that they wrote or otherwise have the right to submit code or documentation to a project.\n\nTo certify the code you submit to the repository, you'll need to add a `Signed-off-by` line to your commits.\n\n`$ git commit -s -m 'Awesome commit message'`\n\nWhich will look something like the following in the repo;\n\n```\nAwesome commit message\n\nSigned-off-by: Jane Smith <jane.smith@example.com>\n```\n\n> Note: this assumes you have setup your git name and email, if you have not you can use these commands to set that up:\n>\n> ```shell\n> git config --global user.name \"Your Name\"\n> git config --global user.email \"youremail@example.com\"\n> ```\n\n- In case you forgot to add it to the most recent commit, use `git commit --amend --signoff`\n- In case you forgot to add it to the last N commits in your branch, use `git rebase --signoff HEAD~N` and replace N with the number of new commits you created in your branch.\n- If you have a very deep branch with a lot of commits, run `git rebase -i --signoff $(git merge-base -a master HEAD)`, double check to make sense of the commits (keep all lines as `pick`) and save and close the editor. This should bulk sign all the commits in your PR. Do be careful though. If you have a complex flow with a lot of branching and re-merging of work branches and stuff, merge-base may not be the right solution for you.\n\nNote: If you have already pushed your branch to a remote, you might have to force push: `git push -f` after the rebase.\n\n### Using GitHub Desktop?\n\nIf you are using the GitHub Desktop client, you need to manually add the `Signed-off-by` line to the Description field on the Changes tab before committing:\n\n```text\nAwesome description (commit message)\n\nSigned-off-by: Jane Smith <jane.smith@example.com>\n```\n\nIn case you forgot to add the line to your most recent commit, you can amend the commit message from the History tab before pushing your branch (GitHub Desktop 2.9 or later).\n\n### Using VS Code?\n\nIf you are using VS Code you can enable always signing your commits by setting the following in your `settings.json` file:\n\n```json\n\"git.alwaysSignOff\": true,\n```\n\nOr from the Settings UI look for the \"Git: Always Sign Off\" setting and check the \"Controls the signoff flag for all commits\" box.\n\n## API Reports\n\nBackstage uses [API Extractor](https://api-extractor.com/) and TSDoc comments to generate API Reports in Markdown format. These reports are what drive the [API Reference documentation](https://backstage.io/docs/reference/). What this means is that if you are making changes to the API or adding a new plugin then you will need either generate a new API Report or update an existing API Report. If you don't do this the CI build will fail when you create your Pull Request.\n\nThere are two ways you can do this:\n\n1. You can run `yarn build:api-reports` from the root of the project and it will go through all of the existing API Reports and update them or create new ones as needed. This may take a while but is generally the best method if you are new to this.\n2. You can run `yarn build:api-reports plugins/<your-plugin-with-changes>` from the root and it will update the existing API Report or create a new one.\n\n> Note: the above commands assume you've run `yarn install` beforehand or recently.\n\nEach plugin/package has its own API Report which means you might see more than one file updated or created depending on your changes. These changes will then need to be committed as well.\n\n## Submitting a Pull Request\n\nWhen you've got your contribution working, tested, and committed to your branch it's time to create a Pull Request (PR). If you are unsure how to do this GitHub's [Creating a pull request from a fork](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork) documentation will help you with that. Once you create your PR you will be presented with a template in the PR's description that looks like this:\n\n```md\n## Hey, I just made a Pull Request!\n\n<!-- Please describe what you added, and add a screenshot if possible.\n     That makes it easier to understand the change so we can :shipit: faster. -->\n\n#### :heavy_check_mark: Checklist\n\n<!--- Please include the following in your Pull Request when applicable: -->\n\n- [ ] A changeset describing the change and affected packages. ([more info](https://github.com/backstage/backstage/blob/master/CONTRIBUTING.md#creating-changesets))\n- [ ] Added or updated documentation\n- [ ] Tests for new functionality and regression tests for bug fixes\n- [ ] Screenshots attached (for UI changes)\n- [ ] All your commits have a `Signed-off-by` line in the message. ([more info](https://github.com/backstage/backstage/blob/master/CONTRIBUTING.md#developer-certificate-of-origin))\n```\n\nFrom here all you need to do is fill in the information as requested by the template. Please do not remove this as it helps both you and the reviewers confirm that the various tasks have been completed.\n\nHere are some examples of good PR descriptions:\n\n- <https://github.com/backstage/backstage/pull/19473>\n- <https://github.com/backstage/backstage/pull/19623>\n- <https://github.com/backstage/backstage/pull/15881>\n- <https://github.com/backstage/backstage/pull/16401>\n\n## Review Process\n\nOnce you've submitted a Pull Request (PR) the various bots will come out and do their work:\n\n- assigning reviewers from the various areas impacted by changes in your PR\n- adding labels to help make reviewing PRs easier\n- checking for missing changesets or confirming them\n- checking for commits for their DCO (Developer Certificate of Origin)\n- kick of the various CI builds\n\nOnce these steps are completed, it's just a matter of being patient. As the reviewers have time, they will begin reviewing your PR. When the review process begins, there may be a few layers to this, but the general rule is that you need approval from one of the core maintainers and one from the specific area impacted by your PR. You may also have someone from the community review your changes. This can really help speed things up as they may catch some early items making the review for the maintainers simpler. Once you have the two (2) approvals, it's ready to be merged, a task that is also performed by the maintainers.\n\n### Review Tips\n\nHere are a few things that can help as you go through the review process:\n\n- You'll want to make sure all the automated checks are passing as generally the PR won't get a review if something like the CI build is failing\n- PRs get automatically assigned so you don't need to ping people, they will be notified and have a process of their own for this\n- If you are waiting for a review or mid-review and your PR goes stale one of the easiest ways to clear the stale bot is by simply rebasing your PR\n- There are times where you might run into conflict with the `yarn.lock` during a rebase, to help with that make sure your `master` branch is up to date and then in your branch run `git checkout master yarn.lock` and then run `yarn install`, this will get you a conflict free `yarn.lock` file you can commit\n- If Vale finds issues with your documentation but it's a code reference you can fix it by putting backticks (`) around it. Now if it is a special word or maybe a name there are two ways you can fix that by adding it to the list of accepted words in the [accept.txt file](https://github.com/backstage/backstage/blob/master/.github/vale/config/vocabularies/Backstage/accept.txt) and them committing that change\n\n### Merging to Master\n\nFor those contributors who have earned write access to the repository, when a pull request is approved, in general we prefer the author of the PR to perform the merge themselves. This allows them to own accountability for the change and they likely know best how or when to address pending fixes or additional follow-ups. In this way, we all help contribute to the project's successful outcomes.\n"
        },
        {
          "name": "DCO",
          "type": "blob",
          "size": 1.39,
          "content": "Developer Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved."
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 10.59,
          "content": "                              Apache License\n                        Version 2.0, January 2004\n                     http://www.apache.org/licenses/\n\nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n1. Definitions.\n\n   \"License\" shall mean the terms and conditions for use, reproduction,\n   and distribution as defined by Sections 1 through 9 of this document.\n\n   \"Licensor\" shall mean the copyright owner or entity authorized by\n   the copyright owner that is granting the License.\n\n   \"Legal Entity\" shall mean the union of the acting entity and all\n   other entities that control, are controlled by, or are under common\n   control with that entity. For the purposes of this definition,\n   \"control\" means (i) the power, direct or indirect, to cause the\n   direction or management of such entity, whether by contract or\n   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n   outstanding shares, or (iii) beneficial ownership of such entity.\n\n   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n   exercising permissions granted by this License.\n\n   \"Source\" form shall mean the preferred form for making modifications,\n   including but not limited to software source code, documentation\n   source, and configuration files.\n\n   \"Object\" form shall mean any form resulting from mechanical\n   transformation or translation of a Source form, including but\n   not limited to compiled object code, generated documentation,\n   and conversions to other media types.\n\n   \"Work\" shall mean the work of authorship, whether in Source or\n   Object form, made available under the License, as indicated by a\n   copyright notice that is included in or attached to the work\n   (an example is provided in the Appendix below).\n\n   \"Derivative Works\" shall mean any work, whether in Source or Object\n   form, that is based on (or derived from) the Work and for which the\n   editorial revisions, annotations, elaborations, or other modifications\n   represent, as a whole, an original work of authorship. For the purposes\n   of this License, Derivative Works shall not include works that remain\n   separable from, or merely link (or bind by name) to the interfaces of,\n   the Work and Derivative Works thereof.\n\n   \"Contribution\" shall mean any work of authorship, including\n   the original version of the Work and any modifications or additions\n   to that Work or Derivative Works thereof, that is intentionally\n   submitted to Licensor for inclusion in the Work by the copyright owner\n   or by an individual or Legal Entity authorized to submit on behalf of\n   the copyright owner. For the purposes of this definition, \"submitted\"\n   means any form of electronic, verbal, or written communication sent\n   to the Licensor or its representatives, including but not limited to\n   communication on electronic mailing lists, source code control systems,\n   and issue tracking systems that are managed by, or on behalf of, the\n   Licensor for the purpose of discussing and improving the Work, but\n   excluding communication that is conspicuously marked or otherwise\n   designated in writing by the copyright owner as \"Not a Contribution.\"\n\n   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n   on behalf of whom a Contribution has been received by Licensor and\n   subsequently incorporated within the Work.\n\n2. Grant of Copyright License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   copyright license to reproduce, prepare Derivative Works of,\n   publicly display, publicly perform, sublicense, and distribute the\n   Work and such Derivative Works in Source or Object form.\n\n3. Grant of Patent License. Subject to the terms and conditions of\n   this License, each Contributor hereby grants to You a perpetual,\n   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n   (except as stated in this section) patent license to make, have made,\n   use, offer to sell, sell, import, and otherwise transfer the Work,\n   where such license applies only to those patent claims licensable\n   by such Contributor that are necessarily infringed by their\n   Contribution(s) alone or by combination of their Contribution(s)\n   with the Work to which such Contribution(s) was submitted. If You\n   institute patent litigation against any entity (including a\n   cross-claim or counterclaim in a lawsuit) alleging that the Work\n   or a Contribution incorporated within the Work constitutes direct\n   or contributory patent infringement, then any patent licenses\n   granted to You under this License for that Work shall terminate\n   as of the date such litigation is filed.\n\n4. Redistribution. You may reproduce and distribute copies of the\n   Work or Derivative Works thereof in any medium, with or without\n   modifications, and in Source or Object form, provided that You\n   meet the following conditions:\n\n   (a) You must give any other recipients of the Work or\n       Derivative Works a copy of this License; and\n\n   (b) You must cause any modified files to carry prominent notices\n       stating that You changed the files; and\n\n   (c) You must retain, in the Source form of any Derivative Works\n       that You distribute, all copyright, patent, trademark, and\n       attribution notices from the Source form of the Work,\n       excluding those notices that do not pertain to any part of\n       the Derivative Works; and\n\n   (d) If the Work includes a \"NOTICE\" text file as part of its\n       distribution, then any Derivative Works that You distribute must\n       include a readable copy of the attribution notices contained\n       within such NOTICE file, excluding those notices that do not\n       pertain to any part of the Derivative Works, in at least one\n       of the following places: within a NOTICE text file distributed\n       as part of the Derivative Works; within the Source form or\n       documentation, if provided along with the Derivative Works; or,\n       within a display generated by the Derivative Works, if and\n       wherever such third-party notices normally appear. The contents\n       of the NOTICE file are for informational purposes only and\n       do not modify the License. You may add Your own attribution\n       notices within Derivative Works that You distribute, alongside\n       or as an addendum to the NOTICE text from the Work, provided\n       that such additional attribution notices cannot be construed\n       as modifying the License.\n\n   You may add Your own copyright statement to Your modifications and\n   may provide additional or different license terms and conditions\n   for use, reproduction, or distribution of Your modifications, or\n   for any such Derivative Works as a whole, provided Your use,\n   reproduction, and distribution of the Work otherwise complies with\n   the conditions stated in this License.\n\n5. Submission of Contributions. Unless You explicitly state otherwise,\n   any Contribution intentionally submitted for inclusion in the Work\n   by You to the Licensor shall be under the terms and conditions of\n   this License, without any additional terms or conditions.\n   Notwithstanding the above, nothing herein shall supersede or modify\n   the terms of any separate license agreement you may have executed\n   with Licensor regarding such Contributions.\n\n6. Trademarks. This License does not grant permission to use the trade\n   names, trademarks, service marks, or product names of the Licensor,\n   except as required for reasonable and customary use in describing the\n   origin of the Work and reproducing the content of the NOTICE file.\n\n7. Disclaimer of Warranty. Unless required by applicable law or\n   agreed to in writing, Licensor provides the Work (and each\n   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n   implied, including, without limitation, any warranties or conditions\n   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n   PARTICULAR PURPOSE. You are solely responsible for determining the\n   appropriateness of using or redistributing the Work and assume any\n   risks associated with Your exercise of permissions under this License.\n\n8. Limitation of Liability. In no event and under no legal theory,\n   whether in tort (including negligence), contract, or otherwise,\n   unless required by applicable law (such as deliberate and grossly\n   negligent acts) or agreed to in writing, shall any Contributor be\n   liable to You for damages, including any direct, indirect, special,\n   incidental, or consequential damages of any character arising as a\n   result of this License or out of the use or inability to use the\n   Work (including but not limited to damages for loss of goodwill,\n   work stoppage, computer failure or malfunction, or any and all\n   other commercial damages or losses), even if such Contributor\n   has been advised of the possibility of such damages.\n\n9. Accepting Warranty or Additional Liability. While redistributing\n   the Work or Derivative Works thereof, You may choose to offer,\n   and charge a fee for, acceptance of support, warranty, indemnity,\n   or other liability obligations and/or rights consistent with this\n   License. However, in accepting such obligations, You may act only\n   on Your own behalf and on Your sole responsibility, not on behalf\n   of any other Contributor, and only if You agree to indemnify,\n   defend, and hold each Contributor harmless for any liability\n   incurred by, or claims asserted against, such Contributor by reason\n   of your accepting any such warranty or additional liability.\n\nEND OF TERMS AND CONDITIONS\n\nAPPENDIX: How to apply the Apache License to your work.\n\n   To apply the Apache License to your work, attach the following\n   boilerplate notice, with the fields enclosed by brackets \"[]\"\n   replaced with your own identifying information. (Don't include\n   the brackets!)  The text should be enclosed in the appropriate\n   comment syntax for the file format. We also recommend that a\n   file or class name and description of purpose be included on the\n   same \"printed page\" as the copyright notice for easier\n   identification within third-party archives.\n\nCopyright 2020 The Backstage Authors\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 0.47,
          "content": "Backstage\nCopyright 2020 The Backstage Authors\n\nPortions of this software were developed by third-party software vendors:\n\n- Tech Radar Plugin (https://opensource.zalando.com/tech-radar/), Copyright (c) 2017 Zalando SE\n- [OpenAPI Generator Templates](./packages/repo-tools/templates), Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech) Copyright 2018 SmartBear Software\n- Optic CLI (https://github.com/opticdev/optic), Copyright 2022, Optic Labs Corporation\n"
        },
        {
          "name": "OWNERS.md",
          "type": "blob",
          "size": 15.76,
          "content": "- See [CONTRIBUTING.md](CONTRIBUTING.md) for general contribution guidelines.\n- See [GOVERNANCE.md](https://github.com/backstage/community/blob/main/GOVERNANCE.md) for governance guidelines and responsibilities.\n\n## Core Maintainers\n\nTeam: @backstage/maintainers\n\n| Maintainer      | Organization | GitHub                                          | Discord       |\n| --------------- | ------------ | ----------------------------------------------- | ------------- |\n| Patrik Oldsberg | Spotify      | [Rugvip](https://github.com/Rugvip)             | `Rugvip#0019` |\n| Fredrik Adelöw  | Spotify      | [freben](https://github.com/freben)             | `freben#3926` |\n| Ben Lambert     | Spotify      | [benjdlambert](https://github.com/benjdlambert) | `blam#2159`   |\n\n## Project Areas\n\nThese are the separate project areas of Backstage, each with their own project area maintainers\n\n### Catalog\n\nTeam: @backstage/catalog-maintainers\n\nScope: The catalog plugin and catalog model\n\n| Name                 | Organization | Team          | GitHub                                          | Discord         |\n| -------------------- | ------------ | ------------- | ----------------------------------------------- | --------------- |\n| Ben Lambert          | Spotify      | Cubic Belugas | [benjdlambert](https://github.com/benjdlambert) | `blam#2159`     |\n| Camila Loiola        | Spotify      | Cubic Belugas | [camilaibs](http://github.com/camilaibs)        | `camilal#0226`  |\n| Fredrik Adelöw       | Spotify      | Cubic Belugas | [freben](https://github.com/freben)             | `freben#3926`   |\n| Mihai Tabara         | Spotify      | Cubic Belugas | [MihaiTabara](http://github.com/MihaiTabara)    | `mihait#3107`   |\n| Patrik Oldsberg      | Spotify      | Cubic Belugas | [Rugvip](https://github.com/Rugvip)             | `Rugvip#0019`   |\n| Vincenzo Scamporlino | Spotify      | Cubic Belugas | [vinzscam](http://github.com/vinzscam)          | `vinzscam#6944` |\n\n### Design System\n\nTeam: @backstage/design-system-maintainers\n\nScope: The Backstage design system, component library, as well as surrounding tooling such as Storybook.\n\n| Name                | Organization | Team          | GitHub                                        | Discord       |\n| ------------------- | ------------ | ------------- | --------------------------------------------- | ------------- |\n| Charles de Dreuille | Spotify      |               | [cdedreuille](https://github.com/cdedreuille) | `cdedreuille` |\n| Patrik Oldsberg     | Spotify      | Cubic Belugas | [Rugvip](https://github.com/Rugvip)           | `Rugvip`      |\n\n### Home\n\nTeam: @backstage/home-maintainers\n\nScope: The Backstage home page and information architecture\n\n| Name                     | Organization | Team           | GitHub                                   | Discord           |\n| ------------------------ | ------------ | -------------- | ---------------------------------------- | ----------------- |\n| Avantika Iyer            | Spotify      | Infinite Buck$ | [tikabom](http://github.com/tikabom)     | -                 |\n| Emma Indal               | Spotify      | Infinite Buck$ | [emmaindal](http://github.com/emmaindal) | emmaindal#7503    |\n| Djamaile Rahamat         | Spotify      | Infinite Buck$ | [djamaile](http://github.com/djamaile)   | dyoqi             |\n| Raghunandan Balachandran | Spotify      | Infinite Buck$ | [soapraj](http://github.com/soapraj)     | raghunandanb#1114 |\n| Bailey Brooks            | Spotify      | Infinite Buck$ | [bailey](http://github.com/bailey)       | \\_bailey4         |\n\n### Search\n\nTeam: @backstage/search-maintainers\n\nScope: The Backstage Search plugin\n\n| Name            | Organization | Team    | GitHub                                            | Discord          |\n| --------------- | ------------ | ------- | ------------------------------------------------- | ---------------- |\n| Alex Lorenzi    | Spotify      | ProTean | [AlexLorenzi](https://github.com/AlexLorenzi)     | alexlorenzi      |\n| John Philip     | Spotify      | ProTean | [johnphilip283](https://github.com/johnphilip283) | john_philip#2399 |\n| Morgan Da Costa | Spotify      | ProTean | [morgandc](https://github.com/morgandc)           | -                |\n\n### Helm Charts\n\nTeam: @backstage/helm-chart-maintainers\n\nScope: The Backstage [Helm Chart(s)](https://github.com/backstage/charts).\n\n| Name                 | Organization | Team | GitHub                                   | Discord        |\n| -------------------- | ------------ | ---- | ---------------------------------------- | -------------- |\n| Andrew Block         | Red Hat      |      | [sabre1041](http://github.com/sabre1041) | sabre1041#2622 |\n| Tom Coufal           | Red Hat      |      | [tumido](http://github.com/tumido)       | Tumi#4346      |\n| Vincenzo Scamporlino | Spotify      |      | [vinzscam](http://github.com/vinzscam)   | vinzscam#6944  |\n\n### Kubernetes\n\nTeam: @backstage/kubernetes-maintainers\n\nScope: The Kubernetes plugin and the base it provides for other plugins to build upon.\n\n| Name           | Organization | Team | GitHub                                   | Discord      |\n| -------------- | ------------ | ---- | ---------------------------------------- | ------------ |\n| Matthew Clarke | Spotify      |      | [mclarke47](http://github.com/mclarke47) | mclarke#0725 |\n\n### Permission Framework\n\nTeam: @backstage/permission-maintainers\n\nScope: The Permission Framework and plugins integrating with the permission framework\n\n| Name                 | Organization | Team          | GitHub                                          | Discord         |\n| -------------------- | ------------ | ------------- | ----------------------------------------------- | --------------- |\n| Ben Lambert          | Spotify      | Cubic Belugas | [benjdlambert](https://github.com/benjdlambert) | `blam#2159`     |\n| Camila Loiola        | Spotify      | Cubic Belugas | [camilaibs](http://github.com/camilaibs)        | `camilal#0226`  |\n| Fredrik Adelöw       | Spotify      | Cubic Belugas | [freben](https://github.com/freben)             | `freben#3926`   |\n| Mihai Tabara         | Spotify      | Cubic Belugas | [MihaiTabara](http://github.com/MihaiTabara)    | `mihait#3107`   |\n| Patrik Oldsberg      | Spotify      | Cubic Belugas | [Rugvip](https://github.com/Rugvip)             | `Rugvip#0019`   |\n| Vincenzo Scamporlino | Spotify      | Cubic Belugas | [vinzscam](http://github.com/vinzscam)          | `vinzscam#6944` |\n\n### TechDocs\n\nTeam: @backstage/techdocs-maintainers\n\nScope: The TechDocs plugin and related tooling\n\n| Name            | Organization | Team    | GitHub                                            | Discord            |\n| --------------- | ------------ | ------- | ------------------------------------------------- | ------------------ |\n| Alex Lorenzi    | Spotify      | ProTean | [AlexLorenzi](https://github.com/AlexLorenzi)     | `alexlorenzi`      |\n| Bond Yan        | Spotify      | ProTean | [byan1197](https://github.com/byan1197)           | `bondify`          |\n| Jackson Chen    | Spotify      | ProTean | [PeaWarrior](https://github.com/PeaWarrior)       | `jacksonc#3322`    |\n| John Philip     | Spotify      | ProTean | [johnphilip283](https://github.com/johnphilip283) | `john_philip#2399` |\n| Sydney Achinger | Spotify      | ProTean | [squid-ney](https://github.com/squid-ney)         | -                  |\n\n## Incubating Project Areas\n\nThese incubating project areas have shared ownership with @backstage/maintainers.\n\n### Community Plugins\n\nTeam: @backstage/community-plugins-maintainers\n\nScope: Tooling and Community Repo Maintainers for the Backstage [Community Plugins repository](https://github.com/backstage/community-plugins)\n\n| Name                 | Organization | GitHub                                      | Discord      |\n| -------------------- | ------------ | ------------------------------------------- | ------------ |\n| André Wanlin         | Spotify      | [awanlin](https://github.com/awanlin)       | `ahhhndre`   |\n| Bethany Griggs       | Red Hat      | [BethGriggs](https://github.com/BethGriggs) | `bethgriggs` |\n| Nick Boldt           | Red Hat      | [nickboldt](https://github.com/nickboldt)   | `nboldt`     |\n| Vincenzo Scamporlino | Spotify      | [vinzscam](https://github.com/vinzscam)     | `vinzscam`   |\n\n### Events\n\nTeam: @backstage/events-maintainers\n\nScope: The Events plugin and library, along with events modules in the main repository\n\n| Name               | Organization              | GitHub                                        | Discord       |\n| ------------------ | ------------------------- | --------------------------------------------- | ------------- |\n| Patrick Jungermann | Bonial International GmbH | [pjungermann](https://github.com/pjungermann) | `pjungermann` |\n\n### Notifications\n\nTeam: @backstage/notifications-maintainers\n\nScope: The Notifications and Signals plugins and libraries\n\n| Name        | Organization | GitHub                                      | Discord   |\n| ----------- | ------------ | ------------------------------------------- | --------- |\n| Marek Libra | RedHat       | [mareklibra](https://github.com/mareklibra) | `marekli` |\n\n### OpenAPI Tooling\n\nTeam: @backstage/openapi-tooling-maintainers\n\nScope: Tooling for frontend and backend schema-first OpenAPI development.\n\n| Name           | Organization | GitHub                                                | Discord       |\n| -------------- | ------------ | ----------------------------------------------------- | ------------- |\n| Aramis Sennyey |              | [aramissennyeydd](https://github.com/aramissennyeydd) | `Aramis#7984` |\n\n### Scaffolder\n\nTeam: @backstage/scaffolder-maintainers\n\nScope: The Scaffolder frontend and backend plugins, and related tooling.\n\n| Name                | Organization | GitHub                                | Discord          |\n| ------------------- | ------------ | ------------------------------------- | ---------------- |\n| Bogdan Nechyporenko | Bol.com      | [acierto](https://github.com/acierto) | `bogdan_haarlem` |\n\n### Documentation\n\nTeam: @backstage/documentation-maintainers\n\nScope: The Backstage Documentation\n\n| Name            | Organization  | GitHub                                                | Discord       |\n| --------------- | ------------- | ----------------------------------------------------- | ------------- |\n| Andre Wanlin    | Spotify       | [awanlin](https://github.com/awanlin)                 | `ahhhndre`    |\n| Aramis Sennyey  |               | [aramissennyeydd](https://github.com/aramissennyeydd) | `Aramis#7984` |\n| Peter Macdonald | VodafoneZiggo | [Parsifal-M](https://github.com/Parsifal-M)           | `parsifal`    |\n\n## Sponsors\n\n| Name              | Organization | GitHub                                      | Email             |\n| ----------------- | ------------ | ------------------------------------------- | ----------------- |\n| Niklas Gustavsson | Spotify      | [protocol7](https://github.com/protocol7)   | ngn@spotify.com   |\n| Dave Zolotusky    | Spotify      | [dzolotusky](https://github.com/dzolotusky) | dzolo@spotify.com |\n| Pia Nilsson       | Spotify      | [pianilsson](https://github.com/pianilsson) | pia@spotify.com   |\n\n## Organization Members\n\n| Name                           | Organization              | GitHub                                                | Discord                        |\n| ------------------------------ | ------------------------- | ----------------------------------------------------- | ------------------------------ |\n| Adam Harvey                    | Okta                      | [adamdmharvey](https://github.com/adamdmharvey)       | `adamharvey_`                  |\n| Alex Crome                     |                           | [afscrome](https://github.com/afscrome)               | `afscrome`                     |\n| Andre Wanlin                   | Spotify                   | [awanlin](https://github.com/awanlin)                 | `ahhhndre`                     |\n| Andrew Thauer                  | Wealthsimple              | [andrewthauer](https://github.com/andrewthauer)       | `andrewthauer#3060`            |\n| Aramis Sennyey                 |                           | [aramissennyeydd](https://github.com/aramissennyeydd) | `Aramis#7984`                  |\n| Brian Fletcher                 | Roadie.io                 | [punkle](https://github.com/punkle)                   | `Brian Fletcher#7051`          |\n| Carlos Esteban Lopez Jaramillo | VMWare                    | [luchillo17](https://github.com/luchillo17)           | `luchillo17#8777`              |\n| David Tuite                    | Roadie.io                 | [dtuite](https://github.com/dtuite)                   | `David Tuite (roadie.io)#1010` |\n| Deepankumar Loganathan         |                           | [deepan10](https://github.com/deepan10)               | `deepan10`                     |\n| Himanshu Mishra                | Harness.io                | [OrkoHunter](https://github.com/OrkoHunter)           | `OrkoHunter#1520`              |\n| Irma Solakovic                 | Roadie.io                 | [Irma12](https://github.com/Irma12)                   | `Irma#7629`                    |\n| Jorge Lainfiesta               | Roadie.io                 | [jorgelainfiesta](https://github.com/jorgelainfiesta) | `jorgel#8733`                  |\n| Jussi Hallila                  | Roadie.io                 | [Xantier](https://github.com/Xantier)                 | `Xantier#0086`                 |\n| Kashish Mittal                 | Red Hat                   | [04kash](https://github.com/04kash)                   | `kashh._.`                     |\n| Mark Avery                     | Cvent                     | [webark](https://github.com/webark)                   | `webark#8471`                  |\n| Miklós Kiss                    | Roadie.io                 | [kissmikijr](https://github.com/kissmikijr)           | `Miklos#7416`                  |\n| Patrick Jungermann             | Bonial International GmbH | [pjungermann](https://github.com/pjungermann)         | `pjungermann#6933`             |\n| Peter Macdonald                | VodafoneZiggo             | [Parsifal-M](https://github.com/Parsifal-M)           | `parsifal`                     |\n| Phil Kuang                     | FactSet Research Systems  | [kuangp](https://github.com/kuangp)                   | `pkuang#3202`                  |\n| Sebastian Poxhofer             | N26                       | [secustor](https://github.com/secustor)               | `secustor`                     |\n| Taras Mankovski                | Frontside                 | [taras](https://github.com/taras)                     | `tarasm#1256`                  |\n\n## Emeritus Core Maintainers\n\n| Maintainer   | Organization | GitHub                                        | Discord        |\n| ------------ | ------------ | --------------------------------------------- | -------------- |\n| Stefan Ålund | Spotify      | [stefanalund](https://github.com/stefanalund) | `stalund#9602` |\n| Johan Haals  | Spotify      | [jhaals](https://github.com/jhaals)           | `Johan#0679`   |\n\n## Emeritus End User Sponsors\n\n| Name        | Organization | GitHub                                      | Discord        |\n| ----------- | ------------ | ------------------------------------------- | -------------- |\n| Lee Mills   | Spotify      | [leemills83](https://github.com/leemills83) | `.binarypoint` |\n| Helen Greul | Spotify      | [helengreul](https://github.com/helengreul) | `helen_greul`  |\n\n## Emeritus Project Area Maintainers\n\n| Maintainer    | Organization   | GitHub                                          | Discord             |\n| ------------- | -------------- | ----------------------------------------------- | ------------------- |\n| Paul Cowan    | frontendrescue | [dagda1](https://github.com/dagda1)             | `dagda1`            |\n| Jamie Klassen | VMware         | [jamieklassen](https://github.com/jamieklassen) | `jamieklassen#3047` |\n"
        },
        {
          "name": "README-fr_FR.md",
          "type": "blob",
          "size": 5.8,
          "content": "[![headline](docs/assets/headline.png)](https://backstage.io/)\n\n# [Backstage](https://backstage.io)\n\nFrançais \\| [English](README.md) \\| [한국어](README-ko_kr.md) \\| [中文版](README-zh_Hans.md)\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![CNCF Status](https://img.shields.io/badge/cncf%20status-incubation-blue.svg)](https://www.cncf.io/projects)\n[![Discord](https://img.shields.io/discord/687207715902193673?logo=discord&label=Discord&color=5865F2&logoColor=white)](https://discord.gg/backstage-687207715902193673)\n![Code style](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)\n[![Codecov](https://img.shields.io/codecov/c/github/backstage/backstage)](https://codecov.io/gh/backstage/backstage)\n[![](https://img.shields.io/github/v/release/backstage/backstage)](https://github.com/backstage/backstage/releases)\n[![Uffizzi](https://img.shields.io/endpoint?url=https%3A%2F%2Fapp.uffizzi.com%2Fapi%2Fv1%2Fpublic%2Fshields%2Fgithub.com%2Fbackstage%2Fbackstage)](https://app.uffizzi.com/ephemeral-environments/backstage/backstage)\n[![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/7678/badge)](https://bestpractices.coreinfrastructure.org/projects/7678)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/backstage/backstage/badge)](https://securityscorecards.dev/viewer/?uri=github.com/backstage/backstage)\n\n## Qu'est-ce que Backstage?\n\n[Backstage](https://backstage.io/) est un framework open source conçu pour créer des portails à destination des développeurs. Avec l'idée de fournir un catalogue d'applications centralisé, Backstage remet de l'ordre dans vos microservices et votre infrastructure, ce qui permet à vos équipes produit de coder rapidement et de manière efficace sans perdre en autonomie.\n\nBackstage rassemble tous vos outils d'infrastructure, services et documentations pour créer un environnement de développement fluide de bout en bout.\n\n![software-catalog](docs/assets/header.png)\n\nOut-of-the-box, Backstage comprend :\n\n- [Backstage Software Catalog](https://backstage.io/docs/features/software-catalog/) pour gérer tous vos logiciels tels que les microservices, les bibliothèques, les pipelines de données, les sites web et les modèles ML.\n- [Backstage Software Templates](https://backstage.io/docs/features/software-templates/) pour créer rapidement de nouveaux projets et uniformiser vos outils selon les meilleures pratiques de votre organisation.\n- [Backstage TechDocs](https://backstage.io/docs/features/techdocs/) pour faciliter la création, la maintenance, la recherche et l'utilisation de la documentation technique, en adoptant une approche \"docs like code\".\n- De plus, un écosystème croissant de [plugins open source](https://github.com/backstage/backstage/tree/master/plugins) qui étendent davantage la personnalisation et les fonctionnalités de Backstage.\n\nBackstage a été initialement développé par Spotify, mais il est désormais hébergé par la [Cloud Native Computing Foundation (CNCF)](https://www.cncf.io) en tant que projet en stade d'incubation. Pour en savoir plus, consultez l'[annonce](https://backstage.io/blog/2022/03/16/backstage-turns-two#out-of-the-sandbox-and-into-incubation).\n\n## Roadmap du projet\n\nPour des informations sur la roadmap détaillée du projet, y compris les jalons atteints, consultez [la Roadmap](https://backstage.io/docs/overview/roadmap).\n\n## Démarrage\n\nPour commencer à utiliser Backstage, consultez [Getting Started documentation](https://backstage.io/docs/getting-started).\n\n## Documentation\n\nLa documentation de Backstage inclus:\n\n- [Main documentation](https://backstage.io/docs)\n- [Software Catalog](https://backstage.io/docs/features/software-catalog/)\n- [Architecture](https://backstage.io/docs/overview/architecture-overview) ([Decisions](https://backstage.io/docs/architecture-decisions/))\n- [Designing for Backstage](https://backstage.io/docs/dls/design)\n- [Storybook - UI components](https://backstage.io/storybook)\n\n## Communauté\n\nSi vous voulez contribuer et vous impliquer dans notre communauté, voici les ressources à votre disposition :\n\n- [Discord chatroom](https://discord.gg/backstage-687207715902193673) - Pour obtenir de l'aide ou discuter du projet\n- [Contributing to Backstage](https://github.com/backstage/backstage/blob/master/CONTRIBUTING.md) - Rendez-vous ici si vous souhaitez contribuer\n- [RFCs](https://github.com/backstage/backstage/labels/rfc) - Contribuez à définir la direction technique\n- [FAQ](https://backstage.io/docs/FAQ)\n- [Code of Conduct](CODE_OF_CONDUCT.md) - C'est comme ça qu'on fonctionne\n- [Adopters](ADOPTERS.md) - Les entreprises utilisant déjà Backstage\n- [Blog](https://backstage.io/blog/) - Annonces et mises à jour\n- [Newsletter](https://spoti.fi/backstagenewsletter) - Abonnez-vous à notre newsletter par mail\n- [Backstage Community Sessions](https://github.com/backstage/community) - Participez aux rencontres mensuelles et découvrez la communauté Backstage\n- Donnez-nous une étoile ⭐️ - Si vous utilisez Backstage ou si vous trouvez que c'est un projet intéressant, nous apprécierions beaucoup votre soutien ❤️\n\n## Licence\n\nCopyright 2020-2024 © Les auteurs de Backstage. Tous droits réservés. La Linux Foundation détient des marques déposées et utilise des marques commerciales. Pour une liste des marques de commerce de la Linux Foundation, veuillez consulter notre page d'utilisation des marques: https://www.linuxfoundation.org/trademark-usage\n\nSous licence Apache, version 2.0: http://www.apache.org/licenses/LICENSE-2.0\n\n## Sécurité\n\nVeuillez signaler les problèmes de sécurité sensibles en utilisant le [programme de bug-bounty](https://hackerone.com/spotify) de Spotify plutôt que GitHub.\n\nPour plus de détails, consultez notre processus complet de [publication de sécurité](SECURITY.md).\n"
        },
        {
          "name": "README-ko_kr.md",
          "type": "blob",
          "size": 5.36,
          "content": "[![headline](docs/assets/headline.png)](https://backstage.io/)\n\n# [Backstage](https://backstage.io)\n\n[English](README.md) \\| 한국어\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![CNCF Status](https://img.shields.io/badge/cncf%20status-incubation-blue.svg)](https://www.cncf.io/projects)\n[![Discord](https://img.shields.io/discord/687207715902193673?logo=discord&label=Discord&color=5865F2&logoColor=white)](https://discord.gg/backstage-687207715902193673)\n![Code style](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)\n[![Codecov](https://img.shields.io/codecov/c/github/backstage/backstage)](https://codecov.io/gh/backstage/backstage)\n[![](https://img.shields.io/github/v/release/backstage/backstage)](https://github.com/backstage/backstage/releases)\n[![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/7678/badge)](https://bestpractices.coreinfrastructure.org/projects/7678)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/backstage/backstage/badge)](https://securityscorecards.dev/viewer/?uri=github.com/backstage/backstage)\n\n## 백스테이지(Backstage)란?\n\n[백스테이지(Backstage)](https://backstage.io/) 는 개발자 포털 구출을 위한 개방형 플랫폼입니다. 중앙 집중식 소프트웨어 카탈로그를 기반으로하는 Backstage는 마이크로 서비스와 인프라의 질서를 복원하고 제품팀이 자율성을 훼손하지 않고 고품질 코드를 신속하게 출시할 수 있도록 지원합니다.\n\nBackstage 는 모든 인프라 도구, 서비스 및 문서를 통합하여 처음부터 끝까지 간소화된 개발 환경을 만듭니다.\n\n![software-catalog](docs/assets/header.png)\n\nBackstage는 다음을 포함합니다:\n\n- [Backstage Software Catalog](https://backstage.io/docs/features/software-catalog/) 마이크로 서비스, 라이브러리, 데이터 파이프라인, 웹 사이트, ML 모델 등 모든 소프트웨어 관리\n- [Backstage Software Templates](https://backstage.io/docs/features/software-templates/) 새로운 프로젝트를 신속하게 시작하고 조직의 모범 사례에따라 도구를 표준화\n- [Backstage TechDocs](https://backstage.io/docs/features/techdocs/) \"docs like code\" 접근 방식을 사용하여 기술 문서를 쉽게 작성, 유지 관리, 검색 및 사용\n- [open source plugins](https://github.com/backstage/backstage/tree/master/plugins) Backstage의 사용자 정의 가능성과 기능을 확장\n\nBackstage는 Spotify에서 제작되었지만 현재는 [Cloud Native Computing Foundation(CNCF)](https://www.cncf.io)에서 인큐베이션 수준 프로젝트로 호스팅되고 있습니다. 추가적인 정보는 [announcement](https://backstage.io/blog/2022/03/16/backstage-turns-two#out-of-the-sandbox-and-into-incubation)를 참조하세요.\n\n## 프로젝트 로드맵\n\n제공된 마일스톤을 포함한 자세한 프로젝트 로드맵에 대한 자세한 내용은 [the Roadmap](https://backstage.io/docs/overview/roadmap)을 참조하세요.\n\n## 시작하기\n\nBackstage를 시작하기위해 [Getting Started documentation](https://backstage.io/docs/getting-started)를 참조하세요.\n\n## 문서\n\nBackstage의 문서는 다음을 포함합니다:\n\n- [Main documentation](https://backstage.io/docs)\n- [Software Catalog](https://backstage.io/docs/features/software-catalog/)\n- [Architecture](https://backstage.io/docs/overview/architecture-overview) ([Decisions](https://backstage.io/docs/architecture-decisions/))\n- [Designing for Backstage](https://backstage.io/docs/dls/design)\n- [Storybook - UI components](https://backstage.io/storybook)\n\n## 커뮤니티\n\n커뮤니티에 참여하려면 다음 리소스를 사용하세요:\n\n- [Discord chatroom](https://discord.gg/backstage-687207715902193673) - 지원 및 프로젝트 토론\n- [Contributing to Backstage](https://github.com/backstage/backstage/blob/master/CONTRIBUTING.md) - 프로젝트 기여\n- [RFCs](https://github.com/backstage/backstage/labels/rfc) - 기술 방향을 정하는 데 도움을 주세요.\n- [FAQ](https://backstage.io/docs/FAQ) - 자주 묻는 질문들\n- [Code of Conduct](CODE_OF_CONDUCT.md) - 커뮤니티 운영 방식\n- [Adopters](ADOPTERS.md) - Backstage를 사용하고 있는 기업\n- [Blog](https://backstage.io/blog/) - 공지사항 및 업데이트\n- [Newsletter](https://spoti.fi/backstagenewsletter) - 이메일 뉴스레터 구독\n- [Backstage Community Sessions](https://github.com/backstage/community) - 월간 모임 참여 및 커뮤니티 톺아보기\n- Backstage를 사용중이거나 흥미로운 프로젝트라고 생각하신다면 별표를 눌러주세요. 별표는 사랑입니다 ❤️\n\n## License\n\nCopyright 2020-2024 © The Backstage Authors. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see our Trademark Usage page: https://www.linuxfoundation.org/trademark-usage\n\nLicensed under the Apache License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0\n\n## 보안\n\n민감한 보안문제는 Github가 아닌 Spotify의 [bug-bounty program](https://hackerone.com/spotify) 통해 신고해주세요\nPlease report sensitive security issues using Spotify's [bug-bounty program](https://hackerone.com/spotify) rather than GitHub.\n\n자세한 내용은 [security release process](SECURITY.md)를 참고하세요.\n"
        },
        {
          "name": "README-zh_Hans.md",
          "type": "blob",
          "size": 4.75,
          "content": "[![headline](docs/assets/headline.png)](https://backstage.io/)\n\n# [Backstage](https://backstage.io)\n\n简体中文\\| [English](README.md) \\| [한국어](README-ko_kr.md)\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![CNCF Status](https://img.shields.io/badge/cncf%20status-incubation-blue.svg)](https://www.cncf.io/projects)\n[![Discord](https://img.shields.io/discord/687207715902193673?logo=discord&label=Discord&color=5865F2&logoColor=white)](https://discord.gg/backstage-687207715902193673)\n![Code style](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)\n[![Codecov](https://img.shields.io/codecov/c/github/backstage/backstage)](https://codecov.io/gh/backstage/backstage)\n[![](https://img.shields.io/github/v/release/backstage/backstage)](https://github.com/backstage/backstage/releases)\n[![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/7678/badge)](https://bestpractices.coreinfrastructure.org/projects/7678)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/backstage/backstage/badge)](https://securityscorecards.dev/viewer/?uri=github.com/backstage/backstage)\n\n## Backstage 是什么？\n\n[Backstage](https://backstage.io/) 是一个用于构建开发者门户的开放平台。在集中式软件目录的支持下，Backstage 可以恢复微服务和基础设施的秩序，并使您的产品团队能够快速交付高质量的代码，而不会影响自主权。\n\nBackstage 统一了所有基础设施工具、服务和文档，以创建端到端的流线型开发环境。\n\n![software-catalog](docs/assets/header.png)\n\n开箱即用的 Backstage 包括：\n\n- [Backstage 软件目录](https://backstage.io/docs/features/software-catalog/) 用于管理所有软件，例如微服务、类库、数据管道、网站和机器学习模型\n- [Backstage 软件模板](https://backstage.io/docs/features/software-templates/) 用于快速启动新项目，并根据组织的最佳实践实现工具标准化\n- [Backstage 技术文档](https://backstage.io/docs/features/techdocs/) 采用 \"像编写代码一样编写文档 \"的方法，轻松创建、维护、查找和使用技术文档\n- 此外，[开源插件](https://github.com/backstage/backstage/tree/master/plugins) 生态系统不断发展壮大，进一步扩展了 Backstage 的可定制性和功能性\n\nBackstage 由 Spotify 创建，但现在由 [云原生计算基金会 (CNCF)](https://www.cncf.io) 作为孵化级项目托管。更多信息请参见[公告](https://backstage.io/blog/2022/03/16/backstage-turns-two#out-of-the-sandbox-and-into-incubation)。\n\n## 项目路线图\n\n有关项目路线图（包括已交付的里程碑）的详细信息，请参阅[路线图](https://backstage.io/docs/overview/roadmap)。\n\n## 开始上手\n\n要开始使用 Backstage，请参阅[入门文档](https://backstage.io/docs/getting-started)。\n\n## 文档\n\nBackstage 的文档包括：\n\n- [主要文档](https://backstage.io/docs)\n- [软件目录](https://backstage.io/docs/features/software-catalog/)\n- [架构](https://backstage.io/docs/overview/architecture-overview) ([决策](https://backstage.io/docs/architecture-decisions/))\n- [Backstage 设计](https://backstage.io/docs/dls/design)\n- [Storybook - UI 组件](https://backstage.io/storybook)\n\n## 社区\n\n要参与我们的社区，您可以使用以下资源：\n\n- [Discord 聊天室](https://discord.gg/backstage-687207715902193673) - 获得支持或讨论项目\n- [参与贡献 Backstage](https://github.com/backstage/backstage/blob/master/CONTRIBUTING.md) - 如果您想做出贡献，请从这里开始\n- [RFCs](https://github.com/backstage/backstage/labels/rfc) - 帮助制定技术方向\n- [FAQ](https://backstage.io/docs/FAQ) - 常问问题\n- [行为准则](CODE_OF_CONDUCT.md) - 这是我们的行事方式\n- [采纳者](ADOPTERS.md) - 已经在使用 Backstage 的公司\n- [博客](https://backstage.io/blog/) - 公告和更新\n- [通讯](https://spoti.fi/backstagenewsletter) - 订阅我们的电子邮件通讯\n- [Backstage 社区会议](https://github.com/backstage/community) - 参加每月聚会，探索 Backstage 社区\n- 给我们点个星星吧 ⭐️ - 如果您正在使用 Backstage 或认为它是一个有趣的项目，我们希望获得你的一颗星星 ❤️\n\n## 许可\n\n版权所有 2020-2024 © Backstage 作者。版权所有。Linux 基金会已注册商标并使用商标。有关 Linux 基金会的商标列表，请参阅我们的商标使用页面：https://www.linuxfoundation.org/trademark-usage\n\n采用 Apache v2.0 许可：http://www.apache.org/licenses/LICENSE-2.0\n\n## 安全\n\n请使用 Spotify 的 [Bug 赏金计划](https://hackerone.com/spotify) 而不是 GitHub 报告敏感安全问题。\n\n更多详细信息，请参阅完整的[安全发布流程](SECURITY.md)。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.28,
          "content": "[![headline](docs/assets/headline.png)](https://backstage.io/)\n\n# [Backstage](https://backstage.io)\n\nEnglish \\| [한국어](README-ko_kr.md) \\| [中文版](README-zh_Hans.md) \\| [Français](README-fr_FR.md)\n\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n[![CNCF Status](https://img.shields.io/badge/cncf%20status-incubation-blue.svg)](https://www.cncf.io/projects)\n[![Discord](https://img.shields.io/discord/687207715902193673?logo=discord&label=Discord&color=5865F2&logoColor=white)](https://discord.gg/backstage-687207715902193673)\n![Code style](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)\n[![Codecov](https://img.shields.io/codecov/c/github/backstage/backstage)](https://codecov.io/gh/backstage/backstage)\n[![](https://img.shields.io/github/v/release/backstage/backstage)](https://github.com/backstage/backstage/releases)\n[![OpenSSF Best Practices](https://bestpractices.coreinfrastructure.org/projects/7678/badge)](https://bestpractices.coreinfrastructure.org/projects/7678)\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/backstage/backstage/badge)](https://securityscorecards.dev/viewer/?uri=github.com/backstage/backstage)\n\n## What is Backstage?\n\n[Backstage](https://backstage.io/) is an open source framework for building developer portals. Powered by a centralized software catalog, Backstage restores order to your microservices and infrastructure and enables your product teams to ship high-quality code quickly without compromising autonomy.\n\nBackstage unifies all your infrastructure tooling, services, and documentation to create a streamlined development environment from end to end.\n\n![software-catalog](docs/assets/header.png)\n\nOut of the box, Backstage includes:\n\n- [Backstage Software Catalog](https://backstage.io/docs/features/software-catalog/) for managing all your software such as microservices, libraries, data pipelines, websites, and ML models\n- [Backstage Software Templates](https://backstage.io/docs/features/software-templates/) for quickly spinning up new projects and standardizing your tooling with your organization’s best practices\n- [Backstage TechDocs](https://backstage.io/docs/features/techdocs/) for making it easy to create, maintain, find, and use technical documentation, using a \"docs like code\" approach\n- Plus, a growing ecosystem of [open source plugins](https://github.com/backstage/backstage/tree/master/plugins) that further expand Backstage’s customizability and functionality\n\nBackstage was created by Spotify but is now hosted by the [Cloud Native Computing Foundation (CNCF)](https://www.cncf.io) as an Incubation level project. For more information, see the [announcement](https://backstage.io/blog/2022/03/16/backstage-turns-two#out-of-the-sandbox-and-into-incubation).\n\n## Project roadmap\n\nFor information about the detailed project roadmap including delivered milestones, see [the Roadmap](https://backstage.io/docs/overview/roadmap).\n\n## Getting Started\n\nTo start using Backstage, see the [Getting Started documentation](https://backstage.io/docs/getting-started).\n\n## Documentation\n\nThe documentation of Backstage includes:\n\n- [Main documentation](https://backstage.io/docs)\n- [Software Catalog](https://backstage.io/docs/features/software-catalog/)\n- [Architecture](https://backstage.io/docs/overview/architecture-overview) ([Decisions](https://backstage.io/docs/architecture-decisions/))\n- [Designing for Backstage](https://backstage.io/docs/dls/design)\n- [Storybook - UI components](https://backstage.io/storybook)\n\n## Community\n\nTo engage with our community, you can use the following resources:\n\n- [Discord chatroom](https://discord.gg/backstage-687207715902193673) - Get support or discuss the project\n- [Contributing to Backstage](https://github.com/backstage/backstage/blob/master/CONTRIBUTING.md) - Start here if you want to contribute\n- [RFCs](https://github.com/backstage/backstage/labels/rfc) - Help shape the technical direction\n- [FAQ](https://backstage.io/docs/faq) - Frequently Asked Questions\n- [Code of Conduct](CODE_OF_CONDUCT.md) - This is how we roll\n- [Adopters](ADOPTERS.md) - Companies already using Backstage\n- [Blog](https://backstage.io/blog/) - Announcements and updates\n- [Newsletter](https://spoti.fi/backstagenewsletter) - Subscribe to our email newsletter\n- [Backstage Community Sessions](https://github.com/backstage/community) - Join monthly meetups and explore Backstage community\n- Give us a star ⭐️ - If you are using Backstage or think it is an interesting project, we would love a star ❤️\n\n## Governance\n\nSee the [GOVERNANCE.md](https://github.com/backstage/community/blob/main/GOVERNANCE.md) document in the [backstage/community](https://github.com/backstage/community) repository.\n\n## License\n\nCopyright 2020-2024 © The Backstage Authors. All rights reserved. The Linux Foundation has registered trademarks and uses trademarks. For a list of trademarks of The Linux Foundation, please see our Trademark Usage page: https://www.linuxfoundation.org/trademark-usage\n\nLicensed under the Apache License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0\n\n## Security\n\nPlease report sensitive security issues using Spotify's [bug-bounty program](https://hackerone.com/spotify) rather than GitHub.\n\nFor further details, see our complete [security release process](SECURITY.md).\n"
        },
        {
          "name": "REVIEWING.md",
          "type": "blob",
          "size": 22.49,
          "content": "# Introduction\n\nThis file provides pointers for reviewing pull requests. While the main audience are reviewers, this can also be useful if you are contributing to this repository.\n\n## Code Style\n\nSee our code style documented at [STYLE.md](./STYLE.md).\n\nIn particular when it comes to naming, make sure that naming follows established conventions within the project and/or package.\n\nWhen adding new dependencies to packages it is always preferred to use version ranges that are already in use by other packages in the repository. This helps minimize lockfile changes and reduce package duplication, both in our repository as well as other Backstage installations.\n\n## Secure Coding Practices\n\nBe sure to familiarize yourself with our [secure coding practices](./SECURITY.md#coding-practices).\n\n## Release & Versioning Policy\n\nWhen reviewing pull requests it's important to consider our [versioning policy and release cycle](https://backstage.io/docs/overview/versioning-policy). Generally the most important bit is our [package versioning policy](https://backstage.io/docs/overview/versioning-policy#package-versioning-policy), which describes when and how we can ship breaking changes. We'll dive into how to identify breaking changes in a different section.\n\nOne other thing to keep in mind, especially when merging pull requests, is where in the release cycle we're currently at. In particular you want to avoid merging any large or risky changes towards the end of each release cycle. If there is a change that is ready to be merged, but you want to hold off until the next main line release, then you can label it with the `merge-after-release` label.\n\n## Configuration\n\nPull requests that have [configuration related](https://backstage.io/docs/conf/defining) changes or additions need some extra consideration.\n\n- Every configuration field consumed by code should have a corresponding `config.d.ts` declaration.\n- Carefully consider the `@visibility` of configuration fields in the schema. The default is `backend`. Take extra care that sensitive/secret fields are marked as `@visibility secret` so that they don't accidentally leak. Also ensure that fields that the frontend wants to consume are marked as `@visibility frontend`, otherwise they can't be sent to the browser at all.\n- Check that the `config.d.ts` is mentioned in the consuming package's `package.json` as illustrated [in the docs](https://backstage.io/docs/conf/defining). Otherwise it won't get packaged and picked up by the runtime.\n\n## Changesets\n\nWe use changesets to track changes in all published packages. Changesets both define what should go into the changelog of each package, but also what kind of version bump should be done for the next release.\nAn introduction to changesets can be found in our [contribution guidelines](./CONTRIBUTING.md#creating-changesets).\n\nWhen reviewing a changeset, the most important things to look for are the bump levels, i.e. `major` / `minor` / `patch`, as well as whether the content is accurate and if it's written in a way that makes sense when reading it in the changelog for each package.\n\n### Reviewing Changeset Bump Levels\n\nThe following table provides a reference for what type of version bump is needed for each package. This is applied separately to each individual package, it does not matter what the scope of a change is in any other broader context.\n\n| Scope           | Current Package Version | Bump Level |\n| --------------- | ----------------------- | ---------- |\n| Breaking Change | `1.0` and above         | `major`    |\n| New Feature     | `1.0` and above         | `minor`    |\n| Fix             | `1.0` and above         | `patch`    |\n| Breaking Change | `0.x`                   | `minor`    |\n| New Feature     | `0.x`                   | `patch`    |\n| Fix             | `0.x`                   | `patch`    |\n\nThe only situation where a package that is currently at `0.x` can have a `major` bump is if all owners and stakeholders of the package agree that the package is ready to be released as `1.0`.\n\n### Reviewing Changeset Content\n\nEach changeset should be written in a way that describes the impact of the change for the users of each package. The contents of the changesets will end up in the changelog of each package, for example [@backstage/core-plugin-api](./packages/core-plugin-api/CHANGELOG.md). The changelogs are intended to provide both a summary of the new features as well as guidance in the case of breaking changes or deprecations.\n\nSome things that changeset should NOT contain are:\n\n- Internal architecture details - these are generally not interesting to users, focus on the impact towards users of the package instead.\n- Information related to a different package.\n- A large amount of content, consider for example a separate migration guide instead, either in the package README or [./docs/](./docs/), and then link to that instead.\n- Documentation - changesets can describe new features, but it should not be relied on for documenting them. Documentation should either be placed in [TSDoc](https://tsdoc.org) comments, package README, or [./docs/](./docs/).\n- Diffs of internal code, for example mirroring what the pull request changes _inside_ a plugin rather than public surfaces. This is not of interest to the reader of a package changelog. Sometimes, however, a small and concise diff can be used in a changeset to illustrate changes that the user will have to make in _their own_ Backstage installation as part of an upgrade, specifically when breaking changes are made to a package.\n\n### When is a changeset needed?\n\nIn general our changeset feedback bot will take care of informing whether a changeset is needed or not, but there are some edge cases. Whether a changeset is needed depends mostly on what files have been changed, but sometimes also on the kind of change that has been made.\n\nChanges that do NOT need a new changeset:\n\n- Changes to any test, storybook, or other local development files, for example, `MyComponent.test.tsx`, `MyComponent.stories.tsx`, `**mocks**/MyMock.ts`, `.eslintrc.js`, `setupTests.ts`, or `report.api.md`. Explained differently, it is only files that affect the published package that need changesets, such as source files and additional resources like `package.json`, `README.md`, `config.d.ts`, etc.\n- When tweaking a change that has not yet been released, you can rely on and potentially modify the existing changeset instead.\n- Changes that do not belong to a published packages, either because it's not a package at all, such as `docs/`, or because the package is private, such as `packages/app`.\n- Changes that do not end up having an effect on the published package, such as whitespace fixes or code formatting changes. Although it's also fine to have a short changeset for these kind of changes too.\n\n### Changeset Example\n\nConsider the following scenario for a changeset:\n\nA new `EntityList` component has been added to `plugins/catalog-react`.\n\nBelow are examples of a good and three bad changesets for that change.\n\n**GOOD**\n\n```md\n---\n'@backstage/plugin-catalog-react': minor\n---\n\nAdded a new `EntityList` component that can be used to display detailed information about a list of entities.\n```\n\nThe `@backstage/plugin-catalog-react` package has reached version `1.x`, which means that feature additions that aren't breaking should be a `minor` change. We don't bother with too much documentation, keeping it short and sweet. The main purpose is to inform users that this new component exists and to give them an idea of how they can use it.\n\n**BAD**\n\n```md\n---\n'@backstage/plugin-catalog-react': minor\n'@backstage/plugin-catalog': minor\n---\n\nAdded `EntityList` component.\n\nFixed a bug in the catalog index page.\n```\n\nThis changeset is too short, it's best to give users an idea of how they can benefit from the new addition.\n\nIt also includes changes affecting both the Catalog and Catalog React library. It should be split into two separate changesets for each of the two packages, otherwise we'll end up with redundant and unrelated information in both changelogs.\n\n**BAD**\n\n```md\n---\n'@backstage/plugin-catalog-react': major\n---\n\nAdded a new `EntityList` component that can be used to display detailed information about a list of entities. The component looks like this:\n\n![EntityList screenshot](./docs/assets/headline.png)\n\nIt accepts the following properties:\n\n- entities - The entities that should be listed.\n- title - An optional formatting function for the list titles.\n- dialog - An optional component that overrides the default details dialog.\n```\n\nThis changeset is getting too detailed. It's not always bad to get this much into the weeds, but keep in mind that changesets are not easy to browse when searching for information about specific APIs. It's better to document things like this separately and keep the changeset more lean. Also avoid linking to assets in changesets, keep them text-only.\n\nThe change is also marked as a breaking `major` change. This should be changed to `minor` since adding new APIs is never a breaking change.\n\n**BAD**\n\n```md\n---\n'@backstage/plugin-catalog-react': patch\n---\n\nAdded a new `EntityList` component that can be used to display detailed information about a list of entities. The `ListView` component was also refactored in order to make it possible to reuse it between the new `EntityList` and `KindList` components.\n```\n\nAssuming that the `ListView` component is not public API, this changeset goes into details that are not interesting to the user of the package. Internal changes do not need to be highlighted in changesets. If an internal refactor is the only change then it's alright to say something short like \"Internal refactor to improve code reuse\", but otherwise those details should be left out.\n\nThe `@backstage/plugin-catalog-react` package has also reached `1.x`, which means that new features should be introduced through a `minor` bump. We'd only use `patch` bumps for minor changes or fixes that do not affect the public API.\n\n## Breaking Changes\n\nIdentifying breaking changes can be quite tricky. You need to look at the changes from both the point of view of consumers and producers of APIs, as well as behavioral changes. In this section we explore a couple of methods for identifying whether a change is breaking or not.\n\n### Behavioral Changes\n\nThese are changes where the behavior of the code changes, but the public API is unchanged or doesn't have any breaking changes. They can be anything from tiny tweaks, like adding a bit of padding to a visual element, to a complete redesign and refactor of an entire plugin.\n\nIt's hard to set up exact rules for when a behavioral change is breaking or not. In some cases it's obvious, for example if you remove important functionality of a system, while in other cases it can be very hard to tell. In the end what's important is whether a significant number of users of the package will be negatively impacted by the change. One question that you can ask yourself here is \"is it likely that there are users that don't want the new behavior, or will need to change their code to adapt to the new behavior?\" If the answer is yes, then it's likely a breaking change. You do also want to keep [xkcd.com/1172](https://xkcd.com/1172/) in mind though.\n\nNote that even a bug fix can be considered a breaking change in some situations. One thing to lean on in that case is what the _documented_ behavior is. If the current behavior does not match the documented behavior, then a change to match the documentation is generally not a breaking change. That is unless it is likely that there are a significant number of users that will be impacted by the change.\n\nFor tricky behavioral changes you may simply need to let end users provide feedback. This can be done either by hiding the new behavior behind an experimental feature switch, or by releasing the change early on in the release cycle, preferably in the first or second `next`-line release. Be ready to respond to feedback and potentially revert the change if needed.\n\n### Public API Changes\n\nTypescript is a huge help when it comes to identifying breaking changes, as well as the API Reports that we generate for all packages. Most of the time it is enough to only look at the API Reports to determine whether a change is breaking or not. If you determine that a change is breaking at the TypeScript level, then it is a breaking change.\n\nIn this section we will be talking about changed \"types\", but by that we mean any kind of exported symbol from packages, such as TypeScript types aliases or interfaces, functions, classes, constants, etc.\n\n#### API Reports\n\nWe generate API Reports using the [API Extractor](https://api-extractor.com/) tool. These reports are generated for most packages in the Backstage repository, and are stored in the `report.api.md` file of each package. For CLI package we use custom tooling, and instead store the result in `cli-report.md`. Whenever the public API of a package changes, the API Report needs to be updated to reflect the new state of the API. Our CI checks will fail if the API reports are not up to date in a pull request.\n\nEach API report contains a list of all the exported types of each package. As long as the API report does not have any warnings it will contain the full publicly facing API of the package, meaning you do not need to consider any other changes to the package from the point of view of TypeScript API stability.\n\nExported types can be marked with either `@public`, `@alpha` or `@beta` release tags. It is only the `@public` exports that we consider to be part of the stable API. The `@alpha` and `@beta` exports are considered unstable and can be changed at any time without needing a breaking package versions bump.\n\n#### Changes that are Not Considered Breaking\n\nThere are a few exceptions that are not considered breaking in the [versioning policy](https://backstage.io/docs/overview/versioning-policy#changes-that-are-not-considered-breaking),\nprimarily regarding Utility APIs and Backend Service interfaces (referred to \"contracts\" below) that are supplied by the\nBackstage core packages.\n\nExample of a non-breaking change to a contract which has a default\nimplementation, since consumers typically only interact with that contract as\ncallers of existing methods:\n\n```diff\n export interface MyService {\n   oldMethod(): void;\n+  newMethod(): void;\n }\n```\n\nChanges such as these must still be marked with `**BREAKING PRODUCERS**:` in the\nchangelog, to highlight them for those who might be implementing custom\nimplementations of those contracts or putting mocks of the contract in tests.\n\nExample of a breaking change to a contract, which affects existing consumers and\ntherefore makes it NOT fall under these exceptions:\n\n```diff\n export interface MyService {\n-   oldMethod(): void;\n+   oldMethod(): Promise<void>;\n }\n```\n\n#### Type Contract Direction\n\nAn important distinction to make when looking at changes to an API Report is the direction of the contract of a changed type, that is, whether it's used as input or output from the user's point of view. In the next two sections we'll dive into the different directions of a type contract, and how it affects whether a change is breaking or not.\n\n#### Input Types\n\nAn input type is one where a value needs to be provided by users of the package. The most common form of input type are function, constructor, and method parameters.\n\nThe following is an example where `MyComponentProps` is an input type:\n\n```ts\ntype MyComponentProps = {\n  title: string;\n  size?: 'small' | 'medium' | 'large';\n};\n\nfunction MyComponent(props: MyComponentProps): JSX.Element;\n```\n\nAnd from the package user's point of view it would look something like this:\n\n```tsx\n<MyComponent title=\"Hello World\" size=\"medium\" />\n```\n\nWhen modifying an input type, any change that increases constraints are breaking. For example, if we made the `size` prop required, that would be a breaking change. Likewise, if we changed the type of `size` to `'small' | 'large'`, that would also be breaking.\n\nOn the other hand, it's fine to relax constraints without it being a breaking change. For example, if we made the `title` prop optional, that would not be breaking. Likewise, if we changed the type of `size` to `'small' | 'medium' | 'large' | 'huge'`, that would not be breaking either. It is also possible to add new properties without it being a breaking change, as long as they are optional.\n\nThere's an edge-case where completely removing a property is also considered a breaking change. That's because of TypeScript being strict and refusing unknown properties, rather than a runtime breaking change. It is typically an easy thing for consumers to fix though.\n\nAnother way to think about the rules for evolving input types is that the old type must be assignable to the new type. In this case for example `_props: NewComponentProps = {} as OldComponentProps`. It's not a silver bullet though, because of edge-cases like the one mentioned above.\n\n#### Output Types\n\nAn output type is one that the user receives from the packages. One of the most obvious examples here are the top-level exports from the package itself, but it also includes for example function return types.\n\nThe following is an example where both `useBox` and `Box` are output types:\n\n```ts\ntype Box = {\n  title: string;\n  shape?: 'square' | 'rounded';\n};\n\nfunction useBox(): Box;\n```\n\nAnd from the consumer's point of view it would look something like this:\n\n```ts\nconst { title, shape } = useBox();\n```\n\nWhen modifying an output type, any change that reduces constraints are breaking. For example, if we made the `title` property optional, that would be a breaking change, or if we changed the type of `shape` to `'square' | 'rounded' | 'octagon'`.\n\nAdding new properties is not a breaking change, regardless of whether they are optional or not. Removing properties is on the other hand always breaking.\n\nIt is generally fine to increase constraints without it being a breaking change. For example, if we made the `shape` property required, that would not be breaking.\n\nThere are some edge-cases though, for example if `shape` was changed to just `'square'`, that would be a breaking change because consumers might be checking for `box.shape === 'rounded'`, which would then be breaking. It's typically a quite easy thing for consumers to fix though. More generally, type unions and discriminated unions are quite troublesome in output types, as both adding and removing types from them are considered breaking changes.\n\nAnother way to think about the rules for evolving output types is that the new type must be assignable to the old type. In this case for example `_box: OldBox = {} as NewBox`. It's not a silver bullet though, because of edge-cases like the one mentioned above.\n\n#### I/O Types\n\nSome types are considered both input and output types. For example, consider the following example:\n\n```ts\ntype Point = {\n  x: number;\n  y: number;\n};\n\nfunction trimCoords(point: Point): Point;\n```\n\nIn this case `Point` is both an input and output type. This means that the only changes we can make to the type that aren't breaking are the intersection of allowed changes between input and output types. In practice this only allows for the addition of new optional properties. Because of this constraint it is generally best to avoid using I/O types, and keep the input separated from the output.\n\nThere are some cases where I/O types favor either input or output when it comes to API stability. For example, all types used by Utility APIs are I/O types, but the stability of the output is a lot more important than the stability of the input. That is because it's a lot easier for the single producer of the input interface to adapt to changes compared to all consumers of the API that use it as an output type.\n\n#### Identifying the Contract Direction\n\nThe only way to identify the contract direction of a type is to look at the context in which it's being used. In particular this can be tricky when looking at individual type aliases and interfaces, as you need to look at the rest of the package exports to see how the type is being used.\n\nOne important rule is that the context considered for any type is limited to only the package in which the type is declared. Just because a type is imported in a different package and used as an input type does not make it an input type.\n\nThe following rules can be used to identify the direction of a type alias or interface:\n\n- If the type is used in an input context, for example function parameter, then it's an input type.\n- If the type is used in an output context, for example function return type, then it's an output type.\n- If the type is referenced by another type, then it inherits the direction of that type, except if referenced through a function callback, in which case the direction is reversed.\n- If the type is used or inherits both input and output contexts, then it's an I/O type.\n- If the type is not referenced anywhere else, then it's an I/O type.\n\nBelow is an example of the public API of a package, with type directions assigned to each export:\n\n```ts\n// I/O, used by getPoint as return type and referenced by BoxProps, an input type\ninterface Point {\n  x: number;\n  y: number;\n}\n\n// Output, since it's an exported function\nfunction getPoint(): Point;\n\n// Input, used by Box as parameter type\ninterface BoxProps {\n  point?: Point\n}\n\n// Output, since it's an exported function\nfunction Box(props: BoxProps): JSX.Element;\n\n// Output, used by createWidget as return type\ninterface Widget {\n  ...\n}\n\n// Output, as it's referenced by WidgetOptions, which is an input\n// type, but the render callback causes a direction reversal\ninterface WidgetProps {\n  ...\n}\n\n// Input, just like WidgetProps this is due to the direction reversal\n// caused by the render callback\ntype RenderedWidget = JSX.Element | null;\n\n// Input, used by createWidget parameter type\ninterface WidgetOptions {\n  render(props: WidgetProps): RenderedWidget;\n}\n\n// Output, since it's an exported function\nfunction createWidget(options: WidgetOptions): Widget;\n\n// I/O, since it's not referenced anywhere else\ntype LabelStyle = 'normal' | 'thin';\n\n// Output, since it's an exported constant\nconst LABEL_SIZE: number;\n```\n\n## Plugin Directory Submissions\n\nWhen reviewing Plugin Directory submissions please consider the following:\n\n- Check to make sure they have the rights for any icon being used. This is mostly for clearly copyrighted logos, for example the Microsoft Azure DevOps logo\n- Make sure the package has been published on the NPM registry.\n- Make sure the package on NPM has a link back to the code repo, this helps provide confidence that it's the right package.\n- If they use an [NPM scope](https://docs.npmjs.com/about-scopes) make sure it that matches either the Organization name or user name, this provides trust in the plugin\n- If the plugin has both a frontend and backend make sure that the documentation notes that.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 7.46,
          "content": "# Security Policy\n\n## Supported Versions\n\nSee our [Release & Versioning Policy](https://backstage.io/docs/overview/versioning-policy#release-versioning-policy).\n\n## Reporting a Vulnerability\n\nPlease report sensitive security issues via Spotify's [bug-bounty program](https://hackerone.com/spotify) rather than GitHub.\n\nIf you have questions about a potential vulnerability, please reach out on Discord by asking for a maintainer in the `#support` channel, or via direct message to a maintainer.\n\n## Remediation and Notification Process\n\nVulnerabilities are handled and published through [GitHub Security Advisories](https://docs.github.com/en/code-security/security-advisories/about-github-security-advisories).\n\nIn the event of a vulnerability the runbook for the maintainers is as follows:\n\n1. Create a [new draft security advisory](https://github.com/backstage/backstage/security/advisories/new). The values and descriptions don't need to be perfect to begin with as they can be edited later. For severity, use the \"Assess severity using CVSS\" and refer to [the guide](https://www.first.org/cvss/v3.1/user-guide) for help.\n2. Request a CVE identification number. It can take up to 72h for one to be assigned so be sure to do this early on.\n3. If there is not already a patch for the vulnerability, collaborate on one in a private fork:\n   1. Head to the security advisory on GitHub and [create a private fork](https://docs.github.com/en/code-security/security-advisories/collaborating-in-a-temporary-private-fork-to-resolve-a-security-vulnerability)\n   1. [Invite any collaborators](https://docs.github.com/en/code-security/security-advisories/adding-a-collaborator-to-a-security-advisory) from outside the maintainer team that should be part of creating a fix.\n   1. Create one or multiple Pull Requests with fixes towards the fork. Note that these PRs will not have CI checks run on them, so more care should be taken to run local validation. The PRs are also not merged like normal PRs, but are instead merged straight into the main repo all at once when the merge button is hit on the security advisory.\n4. Once the fix is ready in a PR or private fork and it is time to release it, there are a couple of options. Either merge into the main branch with a changeset and wait for a regular release, or do a quick release by manually bumping the version in `package.json` of the affected package, along with a manual `CHANGELOG.md` entry. Note that a quick release will only work if the package does not have any other pending changes that depend on pending changes in other packages, so be sure to manually check that first, and fall back to an early regular release if needed. In general it's best to stick with the regular release flow, with the quick release being used only for time sensitive fixes.\n5. Finalize and publish the security advisory. Note that once you hit the publish button it's no longer possible to edit the advisory. Just like the CVE number this can take up to 72h, and expect it to be slower than the CVE number request.\n\n## Vulnerability Policies\n\nBackstage uses Snyk vulnerability scans in order to make sure we minimize vulnerabilities in our dependencies and get notified of new vulnerabilities.\n\nThere are many situations where a vulnerability does not affect a particular dependency because of how the vulnerable package is used. In that situation the package authors may choose to stay at the current version rather than bumping the dependency, leading to a warning in the vulnerability scans but no actual vulnerability.\n\nTo work around this and other similar issues, Snyk provides a method to ignore vulnerabilities. In order to provide the best visibility and most utility to adopters of Backstage, we store these ignore rules in `.snyk` policy files. This allows adopters to rely on our ignore policies if they wish to do so.\n\nAdding a new ignore policy is done by creating or modifying an existing `.snyk` file within a package root. See the [Snyk Documentation](https://support.snyk.io/hc/en-us/articles/360007487097-The-snyk-file) for details on the syntax. Always include a description, full path, and time limit of the ignore policy.\n\n## Coding Practices\n\nIn this section we highlight patterns where particular care needs to be taken in order to avoid security vulnerabilities, as well as the best practices to follow.\n\n### Local file path resolution\n\nA common pitfall in backend packages is to resolve local file paths based on user input, without sufficiently protecting against input that traverses outside the intended directory.\n\nFor example, consider the following code:\n\n```ts\n// WARNING: DO NOT DO THIS\n\nimport { join } from 'path';\nimport fs from 'fs-extra';\n\nfunction writeTemporaryFile(tmpDir: string, name: string, content: string) {\n  const filePath = join(tmpDir, name);\n  await fs.writeFile(filePath, content);\n}\n```\n\nIf the `name` of the file is controlled by the user, they can for example enter `../../../../etc/hosts` as the name of the file. This can lead to a file being written outside the intended directory, which in turn can be used to inject malicious code or other form of attacks.\n\nThe recommended solution to this is to use `resolveSafeChildPath` from `@backstage/backend-plugin-api` to resolve the file path instead. It makes sure that the resolved path does not fall outside the provided directory. If you simply want to validate whether a file path is safe, you can use `isChildPath` instead.\n\nThe insecure example above should instead be written like this:\n\n```ts\n// THIS IS GOOD, DO THIS\n\nimport { resolveSafeChildPath } from '@backstage/backend-plugin-api';\nimport fs from 'fs-extra';\n\nfunction writeTemporaryFile(tmpDir: string, name: string, content: string) {\n  const filePath = resolveSafeChildPath(tmpDir, name);\n  await fs.writeFile(filePath, content);\n}\n```\n\n### Express responses\n\nWhen returning a response from an Express route, always use `.json(...)` or `.end()` without any arguments. This ensures that the response can not be interpreted as an HTML document with embedded JavaScript by the browser. Never use `.send(...)` unless you want to send other forms of content, and be sure to always set an explicit content type. If you need to return HTML or other content that may be executed by the browser, be very careful how you handle user input.\n\nIf you want to return an error response, simply throw the error or pass it on to the `next(...)` callback. There is a middleware installed that will transform the error into a JSON response. Many of the common HTTP errors are available from `@backstage/errors`, for example `NotFoundError`, which will also set the correct status code.\n\nThe following example show how to return an error that contains user input:\n\n```ts\nres.send(`Invalid id: '${req.params.id}'`); // BAD\n\n// import { InputError } from '@backstage/errors';\nthrow new InputError(`Invalid id: '${req.params.id}'`); // GOOD\n\n// OR, in case a custom response is needed\nres.json({ message: `Invalid id: '${req.params.id}'` }); // NOT BAD\n```\n\nNo matter how trivial it may seem, always use `.json(...)`. It reduces the risk that a future refactoring introduces vulnerabilities:\n\n```ts\nres.send({ ok: true }); // BAD\n\nres.json({ ok: true }); // GOOD\n```\n\nIf you absolutely must return a string with `.send(...)`, use an explicit and secure `Content-Type`:\n\n```ts\nres.send(`message=${message}`); // BAD\n\nres.contentType('text/plain').send(`message=${message}`); // GOOD\n```\n\nAn example of how to return dynamic HTML is not provided here. If you need to do so, proceed with extreme caution and be very sure that you know what you are doing.\n"
        },
        {
          "name": "STYLE.md",
          "type": "blob",
          "size": 10.1,
          "content": "# Introduction\n\nThis file describes the various style and design conventions that are used in the Backstage main repository. While you may choose to use these conventions in your own Backstage projects, it is not required.\n\n# TypeScript Coding Conventions\n\nOur TypeScript style is inspired by the [style guidelines](https://github.com/Microsoft/TypeScript/wiki/Coding-guidelines) of the TypeScript implementation itself.\n\n## Naming\n\n1. Use PascalCase for type names.\n1. Do not use `I` as a prefix for interface names.\n1. Use PascalCase for `enum` values.\n1. Use `camelCase` for function names.\n1. Use `camelCase` for property names and local variables.\n1. Do not use `_` as a prefix for private properties.\n1. Use whole words in names when possible.\n1. Give type parameters names prefixed with `T`, for example `Request<TBody>`.\n\n## Syntax and Types\n\n1. Use `undefined`. Do not use `null`.\n1. Prefer `for..of` over `.forEach`.\n1. Do not introduce new types/values to the global namespace.\n\n## File and Export Structure\n\n1. Shared types should be defined in `types.ts`.\n1. Keep `index.ts` free from implementation, it should only contain re-exports.\n1. If a file has a single or a main export, name the file after the export.\n\n## Error Handling\n\n1. Rely on `@backstage/errors` for custom error types.\n   ```ts\n   throw new NotFoundError(`Could not find resource with id '${id}'`);\n   ```\n1. Check error types by comparing the name\n   ```ts\n   if (error.name === 'NotFoundError') {\n     // ...\n   }\n   ```\n1. Use `ResponseError` to convert `fetch` error responses.\n   ```ts\n   if (!res.ok) {\n     throw await ResponseError.fromResponse(res);\n   }\n   ```\n\n## API Design\n\nThis section describes guidelines for designing public APIs. It can also be applied to internal implementations, but it is less necessary.\n\n1. Keep [SOLID](https://en.wikipedia.org/wiki/SOLID) principles in mind.\n1. Be mindful of the number of top-level exports of each package, strive to keep it low.\n1. Prioritize consistency over correctness, stick to existing patterns within the same class/file/folder/package.\n1. Consume interfaces rather than concrete implementations.\n1. Prefer classes for encapsulating functionality and implementing interfaces.\n1. Suffix the name of concrete implementations with the name of the implemented interface. Use a prefix that describes the behavior of the implementation, or use a `Default` prefix.\n\n   ```ts\n   interface ImageLoader { ... } // interface for loading images\n\n   class DefaultImageLoader implements ImageLoader { /* loads an image */ }\n   class CachingImageLoader implements ImageLoader { /* caches loaded images */ }\n   class ResizingImageLoader implements ImageLoader { /* resizes loaded images */ }\n   ```\n\n1. Keep constructors private, prefer static factory methods for creating instances.\n\n   ```ts\n   class DefaultImageLoader implements ImageLoader {\n     // Use `create` for the main way to create an instance.\n     static create(options?: ImageLoaderOptions) {\n       /* ... */\n     }\n\n     // If there are multiple different types of instances that can be\n     // created, suffix the create method.\n     static createWithCaching(options?: ImageLoaderOptions) {\n       /* ... */\n     }\n\n     // If the instantiation process is based on a specific value, use `from*`.\n     // The most common example of this is reading from configuration.\n     // Use a second parameter in case additional options are needed.\n     static fromConfig(config: Config, deps: { logger: Logger }) {\n       /* ... */\n     }\n\n     // Other types of values can work too\n     static fromUrl(url: URL) {\n       /* ... */\n     }\n\n     // In order to make a private constructor available for testing you can use a\n     // static factory marked as `@internal`, which will not show up in the public API.\n     /** @internal */\n     static forTesting(internalOptions?: { ... }) {\n       return new DefaultImageLoader(internalOptions);\n     }\n\n     private constructor(/* ... */) {\n       /* ... */\n     }\n   }\n   ```\n\n1. Prefer common prefixes over suffixes when naming constants.\n\n   ```ts\n   // May be tempting to use `GITHUB_WIDGET_LABEL` instead.\n   const WIDGET_LABEL_GITHUB = 'github';\n   const WIDGET_LABEL_GITLAB = 'gitlab';\n   const WIDGET_LABEL_BITBUCKET = 'bitbucket';\n   ```\n\n1. When a type relates directly to other symbols, use the name of those as prefix for the type.\n\n   ```ts\n   // Always prefix a prop type with the name of the component.\n   function MyComponent(props: MyComponentProps) {}\n\n   // Option types should be prefixed with the name of the operation.\n   function upgradeWidget(options: UpgradeWidgetOptions) {}\n   function activateWidget(options: ActivateWidgetOptions) {}\n\n   // An exception to this are create methods, where the name of the thing\n   // being created may be used as the prefix instead.\n   function createWidget(options: WidgetOptions) {}\n\n   // In this case the related names for request types are `ReportsApi` and\n   // the method name. If there is a low risk of conflict we can keep them\n   // short by only prefixing with the method name, but if there is a higher\n   // risk of conflict then we would want to use the full prefix instead, while\n   // omitting redundant parts, i.e. `ReportsApiUploadRequest.\n   interface ReportsApi {\n     uploadReports(request: UploadReportsRequest): Promise<void>;\n     deleteReport(request: DeleteReportRequest): Promise<void>;\n   }\n   ```\n\n1. When there is a significant number of arguments to a function or method, prefer to use a single options object as the argument, rather than many positional arguments.\n\n   ```ts\n   // Bad\n   function createWidget(id: string, name: string, width: number) {}\n\n   // Good\n   function createWidget(options: CreateWidgetOptions) {}\n   ```\n\n1. Avoid arrays as return types; prefer response objects.\n\n   ```ts\n   interface UserApi {\n     // Bad\n     // Can only return Users without signaling additional information such as pagination.\n     listUsers(): Promise<User[]>;\n\n     // Good\n     // Easy to evolve with additional fields.\n     listUsers(): Promise<ListUsersResponse>;\n   }\n   ```\n\n# Documentation Guidelines\n\nWe use [API Extractor](https://api-extractor.com/pages/overview/demo_docs/) to generate our documentation, which in turn uses [TSDoc](https://github.com/microsoft/tsdoc) to parse our doc comments.\n\nThe doc comments are of the good old `/** ... */` format, with tags of the format `@<tag>` used to mark various things. The [TSDoc website](https://tsdoc.org/) has a good index of all available tags.\n\nThere are a few things to pay attention to, in order to make the documentation show up in a nice way on the website...\n\n## Declare exported functions using the `function` keyword\n\nAPI documenter will not recognize arrow functions as functions, but rather as a constant that shows up in the list of exported variables. By declaring functions using the `function` keyword, they will show up in the list of functions. They will also get a much nicer documentation page for the individual function that shows information about parameters and return types.\n\nThis also extends to React components, since API documenter doesn't have any special handling of those. By always defining exported React components using the `function` keyword, we make them show up among the list of functions in the API reference, where they are then easily discoverable through the `(props)` argument (which you should be sure to include!).\n\n![image](https://user-images.githubusercontent.com/4984472/133120461-59d74c3e-ebd9-44f9-900d-cc30f54a3cd2.png)\n\n```ts\n/**\n * Properties for {@link ErrorPanel}.\n */\nexport interface ErrorPanelProps {\n  ...\n}\n\n/**\n * Renders a warning panel as the effect of an error.\n */\nexport function ErrorPanel(props: ErrorPanelProps) {\n  ...\n}\n```\n\n## Do not destruct parameters in public function declarations\n\nIf the parameters of a function are destructed in the parameter list, they will show up in the documentation like this:\n\n![image](https://user-images.githubusercontent.com/4984472/133117011-3e6cb6da-40dd-450e-8d33-51bdcf412e08.png)\n\nInstead prefer to use a single parameter variable and then move the destructuring into the function body, which will look much nicer:\n\n![image](https://user-images.githubusercontent.com/4984472/133120542-d648de43-5495-43a8-b532-f5e6f6ab736e.png)\n\nAlso be sure to check that the type used by the parameter is exported, as it otherwise won't be discoverable through documentation.\n\n## Use `@remarks` to split long descriptions\n\nThe API reference has an index of exported symbols for each package, which uses a short description, while clicking through to the page for a symbol shows the full description. By default all descriptions are considered \"short\", and you have to manually add a divider where the description should be cut off using the `@remarks` tag.\n\n```ts\n/**\n * This function helps you create a thing.\n *\n * @remarks\n *\n * Here is a much longer and more elaborate description of how the\n * creation of a thing works, which is way too long to fit on the index page.\n */\nfunction createTheThing() {}\n```\n\n## Use `@param` to document parameters\n\nWhen using the `@param` tag to document a parameter it will show up in the **Parameters** section:\n\n![image](https://user-images.githubusercontent.com/4984472/133120977-64004074-0afb-4e8a-9a2a-c846f04eb3d9.png)\n\nBe sure to include a `-` after the parameter name as well as [required by TSDoc](https://tsdoc.org/pages/tags/param/), or you'll get a warning in the API report.\n\n```ts\n/**\n * Generates a PluginCacheManager for consumption by plugins.\n *\n * @param pluginId - The plugin that the cache manager should be created for. Plugin names should be unique.\n */\nforPlugin(pluginId: string): PluginCacheManager {\n  ...\n}\n```\n\n## Fill in missing references using `{@link ...}`\n\nNot all types are detected and referenced on the documentation page. Most notably variables, and therefore `ApiRef`s, will not have clickable links to other symbols that they reference. We instead fill in this missing information using inline `{@link ...}` tags in the description:\n\n```ts\n/**\n * {@link ApiRef} for the {@link DiscoveryApi}.\n */\nexport const discoveryApiRef: ApiRef<DiscoveryApi> = createApiRef(...);\n```\n\n![image](https://user-images.githubusercontent.com/4984472/133123632-d00cefd9-a70f-43f6-8f14-40c253554ee1.png)\n"
        },
        {
          "name": "app-config.yaml",
          "type": "blob",
          "size": 14.91,
          "content": "app:\n  title: Backstage Example App\n  baseUrl: http://localhost:3000\n  experimental:\n    packages: all # ✨\n\n  #datadogRum:\n  #  clientToken: '123456789'\n  #  applicationId: qwerty\n  #   site: # datadoghq.eu default = datadoghq.com\n  #   env: # optional\n  #   sessionSampleRate: 100\n  #   sessionReplaySampleRate: 0\n\n  support:\n    url: https://github.com/backstage/backstage/issues # Used by common ErrorPage\n    items: # Used by common SupportButton component\n      - title: Issues\n        icon: github\n        links:\n          - url: https://github.com/backstage/backstage/issues\n            title: GitHub Issues\n      - title: Discord Chatroom\n        icon: chat\n        links:\n          - url: https://discord.gg/backstage-687207715902193673\n            title: '#backstage'\n\n  packageName: example-app\n\nbackend:\n  # Used for enabling authentication, secret is shared by all backend plugins\n  # See https://backstage.io/docs/auth/service-to-service-auth for\n  # information on the format\n  # auth:\n  #   keys:\n  #     - secret: ${BACKEND_SECRET}\n\n  auth:\n    # TODO: once plugins have been migrated we can remove this, but right now it\n    # is require for the backend-next to work in this repo\n    dangerouslyDisableDefaultAuthPolicy: true\n\n  baseUrl: http://localhost:7007\n  listen:\n    port: 7007\n  database:\n    client: better-sqlite3\n    connection: ':memory:'\n  cors:\n    origin: http://localhost:3000\n    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]\n    credentials: true\n  csp:\n    connect-src: [\"'self'\", 'http:', 'https:']\n    # Content-Security-Policy directives follow the Helmet format: https://helmetjs.github.io/#reference\n    # Default Helmet Content-Security-Policy values can be removed by setting the key to false\n  reading:\n    allow:\n      - host: example.com\n      - host: '*.mozilla.org'\n  # workingDirectory: /tmp # Use this to configure a working directory for the scaffolder, defaults to the OS temp-dir\n\n# See README.md in the proxy-backend plugin for information on the configuration format\nproxy:\n  endpoints:\n    '/circleci/api':\n      target: https://circleci.com/api/v1.1\n      headers:\n        Circle-Token: ${CIRCLECI_AUTH_TOKEN}\n\n    '/jenkins/api':\n      target: http://localhost:8080\n      headers:\n        Authorization: ${JENKINS_BASIC_AUTH_HEADER}\n\n    '/travisci/api':\n      target: https://api.travis-ci.com\n      changeOrigin: true\n      headers:\n        Authorization: ${TRAVISCI_AUTH_TOKEN}\n        travis-api-version: '3'\n\n    '/newrelic/apm/api':\n      target: https://api.newrelic.com/v2\n      headers:\n        X-Api-Key: ${NEW_RELIC_REST_API_KEY}\n      allowedHeaders:\n        - link\n\n    '/newrelic/api':\n      target: https://api.newrelic.com\n      headers:\n        X-Api-Key: ${NEW_RELIC_USER_KEY}\n\n    '/pagerduty':\n      target: https://api.pagerduty.com\n      headers:\n        Authorization: Token token=${PAGERDUTY_TOKEN}\n\n    '/buildkite/api':\n      target: https://api.buildkite.com/v2/\n      headers:\n        Authorization: ${BUILDKITE_TOKEN}\n\n    '/sentry/api':\n      target: https://sentry.io/api/\n      allowedMethods: ['GET']\n      headers:\n        Authorization: ${SENTRY_TOKEN}\n\n    '/ilert':\n      target: https://api.ilert.com\n      allowedMethods: ['GET', 'POST', 'PUT']\n      allowedHeaders: ['Authorization']\n      headers:\n        Authorization: ${ILERT_AUTH_HEADER}\n\n    '/airflow':\n      target: https://your.airflow.instance.com/api/v1\n      headers:\n        Authorization: ${AIRFLOW_BASIC_AUTH_HEADER}\n\n    '/gocd':\n      target: https://your.gocd.instance.com/go/api\n      allowedMethods: ['GET']\n      allowedHeaders: ['Authorization']\n      headers:\n        Authorization: Basic ${GOCD_AUTH_CREDENTIALS}\n\n    '/dynatrace':\n      target: https://your.dynatrace.instance.com/api/v2\n      headers:\n        Authorization: 'Api-Token ${DYNATRACE_ACCESS_TOKEN}'\n\n    '/stackstorm':\n      target: https://your.stackstorm.instance.com/api\n      headers:\n        St2-Api-Key: ${ST2_API_KEY}\n\n    '/puppetdb':\n      target: https://your.puppetdb.instance.com\n\norganization:\n  name: My Company\n\n# Reference documentation http://backstage.io/docs/features/techdocs/configuration\n# Note: After experimenting with basic setup, use CI/CD to generate docs\n# and an external cloud storage when deploying TechDocs for production use-case.\n# https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach\ntechdocs:\n  builder: 'local' # Alternatives - 'external'\n  generator:\n    runIn: 'docker'\n    # dockerImage: my-org/techdocs # use a custom docker image\n    # pullImage: true # or false to disable automatic pulling of image (e.g. if custom docker login is required)\n  publisher:\n    type: 'local' # Alternatives - 'googleGcs' or 'awsS3' or 'azureBlobStorage' or 'openStackSwift'. Read documentation for using alternatives.\n\ndynatrace:\n  baseUrl: https://your.dynatrace.instance.com\n\nnomad:\n  addr: 0.0.0.0\n\n# Score-cards sample configuration.\nscorecards:\n  jsonDataUrl: https://raw.githubusercontent.com/Oriflame/backstage-plugins/main/plugins/score-card/sample-data/\n  wikiLinkTemplate: https://link-to-wiki/{id}\n\nsentry:\n  organization: my-company\n\nrollbar:\n  organization: my-company\n  # NOTE: The rollbar-backend & accountToken key may be deprecated in the future (replaced by a proxy config)\n  accountToken: my-rollbar-account-token\n\nlighthouse:\n  baseUrl: http://localhost:3003\n\nkubernetes:\n  serviceLocatorMethod:\n    type: 'multiTenant'\n  clusterLocatorMethods:\n    - type: 'config'\n      clusters: []\n\nkafka:\n  clientId: backstage\n  clusters:\n    - name: cluster\n      dashboardUrl: https://akhq.io/\n      brokers:\n        - localhost:9092\n\nallure:\n  baseUrl: http://localhost:5050/allure-docker-service\n\nintegrations:\n  github:\n    - host: github.com\n      token: ${GITHUB_TOKEN}\n  ### Example for how to add your GitHub Enterprise instance using the API:\n  # - host: ghe.example.net\n  #   apiBaseUrl: https://ghe.example.net/api/v3\n  #   token: ${GHE_TOKEN}\n  ### Example for how to add your GitHub Enterprise instance using raw HTTP fetches (token is optional):\n  # - host: ghe.example.net\n  #   rawBaseUrl: https://ghe.example.net/raw\n  #   token: ${GHE_TOKEN}\n  gitlab:\n    - host: gitlab.com\n      token: ${GITLAB_TOKEN}\n  ### Example for how to add a bitbucket cloud integration\n  # bitbucketCloud:\n  #   - username: ${BITBUCKET_USERNAME}\n  #     appPassword: ${BITBUCKET_APP_PASSWORD}\n  ### Example for how to add your bitbucket server instance using the API:\n  # - host: server.bitbucket.com\n  #   apiBaseUrl: server.bitbucket.com\n  #   username: ${BITBUCKET_SERVER_USERNAME}\n  #   appPassword: ${BITBUCKET_SERVER_APP_PASSWORD}\n\n  # azureBlobStorage:\n  #   - accountName: ${ACCOUNT_NAME} # required\n  #     endpoint: ${CUSTOM_ENDPOINT} # custom endpoint will require either aadCredentials or sasToken\n  #     sasToken: ${SAS_TOKEN}\n  #     aadCredential:\n  #       clientId: ${CLIENT_ID}\n  #       tenantId: ${TENANT_ID}\n  #       clientSecret: ${CLIENT_SECRET}\n  #     accountKey: ${ACCOUNT_KEY}\n\n  azure:\n    - host: dev.azure.com\n      token: ${AZURE_TOKEN}\n  #  googleGcs:\n  #    clientEmail: 'example@example.com'\n  #    privateKey: ${GCS_PRIVATE_KEY}\n  awsS3:\n    - endpoint: ${AWS_S3_ENDPOINT}\n      accessKeyId: ${AWS_ACCESS_KEY_ID}\n      secretAccessKey: ${AWS_SECRET_ACCESS_KEY}\n\ncatalog:\n  import:\n    entityFilename: catalog-info.yaml\n    pullRequestBranchName: backstage-integration\n  rules:\n    - allow:\n        - Component\n        - API\n        - Resource\n        - System\n        - Domain\n        - Location\n  providers:\n    azureBlob:\n      accountName: ${ACCOUNT_NAME}\n      containerName: ${CONTAINER_NAME}\n      schedule: # same options as in TaskScheduleDefinition\n        # supports cron, ISO duration, \"human duration\" as used in code\n        frequency: { minutes: 30 }\n        # supports ISO duration, \"human duration\" as used in code\n        timeout: { minutes: 3 }\n    backstageOpenapi:\n      plugins:\n        - catalog\n        - search\n\n  processors:\n    ldapOrg:\n      ### Example for how to add your enterprise LDAP server\n      # providers:\n      #   - target: ldaps://ds.example.net\n      #     bind:\n      #       dn: uid=ldap-reader-user,ou=people,ou=example,dc=example,dc=net\n      #       secret: ${LDAP_SECRET}\n      #     users:\n      #       dn: ou=people,ou=example,dc=example,dc=net\n      #       options:\n      #         filter: (uid=*)\n      #       map:\n      #         description: l\n      #     groups:\n      #       dn: ou=access,ou=groups,ou=example,dc=example,dc=net\n      #       options:\n      #         filter: (&(objectClass=some-group-class)(!(groupType=email)))\n\n  locations:\n    # Add a location here to ingest it, for example from a URL:\n    #\n    #     - type: url\n    #       target: https://github.com/backstage/backstage/blob/master/packages/catalog-model/examples/all.yaml\n    #\n    # For local development you can use a file location instead:\n    #\n    #     - type: file\n    #       target: ../catalog-model/examples/all-components.yaml\n    #\n    # File locations are relative to the current working directory of the\n    # backend, for example packages/backend/.\n\n    # Backstage example entities\n    - type: file\n      target: ../catalog-model/examples/all.yaml\n    # Backstage example groups and users\n    - type: file\n      target: ../catalog-model/examples/acme-corp.yaml\n      rules:\n        - allow: [User, Group]\n    # Example component for github-actions and TechDocs\n    - type: file\n      target: ../../plugins/github-actions/examples/sample.yaml\n    # Example component for TechDocs\n    - type: file\n      target: ../../plugins/techdocs-backend/examples/documented-component/catalog-info.yaml\n    # Example component for ADRs\n    - type: file\n      target: ../../plugins/adr/examples/component/catalog-info.yaml\n    # Backstage example templates\n    - type: file\n      target: ../../plugins/scaffolder-backend/sample-templates/all-templates.yaml\n      rules:\n        - allow: [Template]\nscaffolder:\n  # Use to customize default commit author info used when new components are created\n  # defaultAuthor:\n  #   name: Scaffolder\n  #   email: scaffolder@backstage.io\n  # Use to customize the default commit message when new components are created\n  # defaultCommitMessage: 'Initial commit'\n\nauth:\n  ### Add auth.keyStore.provider to more granularly control how to store JWK data when running\n  # the auth-backend.\n  #\n  # keyStore:\n  #  provider: firestore\n  #  firestore:\n  #    projectId: my-project\n  #    path: my-sessions\n\n  environment: development\n  ### Providing an auth.session.secret will enable session support in the auth-backend\n  # session:\n  #   secret: custom session secret\n  providers:\n    google:\n      development:\n        clientId: ${AUTH_GOOGLE_CLIENT_ID}\n        clientSecret: ${AUTH_GOOGLE_CLIENT_SECRET}\n    github:\n      development:\n        clientId: ${AUTH_GITHUB_CLIENT_ID}\n        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}\n        enterpriseInstanceUrl: ${AUTH_GITHUB_ENTERPRISE_INSTANCE_URL}\n    gitlab:\n      development:\n        clientId: ${AUTH_GITLAB_CLIENT_ID}\n        clientSecret: ${AUTH_GITLAB_CLIENT_SECRET}\n        audience: ${GITLAB_BASE_URL}\n    saml:\n      entryPoint: 'http://localhost:7001/'\n      issuer: 'passport-saml'\n      cert: 'fake-cert-base64'\n    okta:\n      development:\n        clientId: ${AUTH_OKTA_CLIENT_ID}\n        clientSecret: ${AUTH_OKTA_CLIENT_SECRET}\n        audience: ${AUTH_OKTA_AUDIENCE}\n    oauth2:\n      development:\n        clientId: ${AUTH_OAUTH2_CLIENT_ID}\n        clientSecret: ${AUTH_OAUTH2_CLIENT_SECRET}\n        authorizationUrl: ${AUTH_OAUTH2_AUTH_URL}\n        tokenUrl: ${AUTH_OAUTH2_TOKEN_URL}\n        ###\n        # provide a list of scopes as needed for your OAuth2 Server:\n        #\n        # scope: saml-login-selector openid profile email\n    oidc:\n      # Note that you must define a session secret (see above) since the oidc provider requires session support.\n      # Note that by default, this provider will use the 'none' prompt which assumes that your are already logged on in the IDP.\n      # You should set prompt to:\n      # - auto: will let the IDP decide if you need to log on or if you can skip login when you have an active SSO session\n      # - login: will force the IDP to always present a login form to the user\n      development:\n        metadataUrl: ${AUTH_OIDC_METADATA_URL}\n        clientId: ${AUTH_OIDC_CLIENT_ID}\n        clientSecret: ${AUTH_OIDC_CLIENT_SECRET}\n        tokenEndpointAuthMethod: ${AUTH_OIDC_TOKEN_ENDPOINT_AUTH_METHOD} # default='client_secret_basic'\n        tokenSignedResponseAlg: ${AUTH_OIDC_TOKEN_SIGNED_RESPONSE_ALG} # default='RS256'\n        scope: ${AUTH_OIDC_SCOPE} # default='openid profile email'\n        prompt: ${AUTH_OIDC_PROMPT} # default=none (allowed values: auto, none, consent, login)\n    auth0:\n      development:\n        clientId: ${AUTH_AUTH0_CLIENT_ID}\n        clientSecret: ${AUTH_AUTH0_CLIENT_SECRET}\n        domain: ${AUTH_AUTH0_DOMAIN}\n    microsoft:\n      development:\n        clientId: ${AUTH_MICROSOFT_CLIENT_ID}\n        clientSecret: ${AUTH_MICROSOFT_CLIENT_SECRET}\n        tenantId: ${AUTH_MICROSOFT_TENANT_ID}\n    onelogin:\n      development:\n        clientId: ${AUTH_ONELOGIN_CLIENT_ID}\n        clientSecret: ${AUTH_ONELOGIN_CLIENT_SECRET}\n        issuer: ${AUTH_ONELOGIN_ISSUER}\n    bitbucket:\n      development:\n        clientId: ${AUTH_BITBUCKET_CLIENT_ID}\n        clientSecret: ${AUTH_BITBUCKET_CLIENT_SECRET}\n    atlassian:\n      development:\n        clientId: ${AUTH_ATLASSIAN_CLIENT_ID}\n        clientSecret: ${AUTH_ATLASSIAN_CLIENT_SECRET}\n        scope: ${AUTH_ATLASSIAN_SCOPES}\n    myproxy: {}\n    guest: {}\n\ncostInsights:\n  engineerCost: 200000\n  engineerThreshold: 0.5\n  products:\n    computeEngine:\n      name: Compute Engine\n      icon: compute\n    cloudDataflow:\n      name: Cloud Dataflow\n      icon: data\n    cloudStorage:\n      name: Cloud Storage\n      icon: storage\n    bigQuery:\n      name: BigQuery\n      icon: search\n    events:\n      name: Events\n      icon: data\n  metrics:\n    DAU:\n      name: Daily Active Users\n      default: true\n    MSC:\n      name: Monthly Subscribers\n  currencies:\n    engineers:\n      label: 'Engineers 🛠'\n      unit: 'engineer'\n    usd:\n      label: 'US Dollars 💵'\n      kind: 'USD'\n      unit: 'dollar'\n      prefix: '$'\n      rate: 1\n    carbonOffsetTons:\n      label: 'Carbon Offset Tons ♻️⚖️s'\n      kind: 'CARBON_OFFSET_TONS'\n      unit: 'carbon offset ton'\n      rate: 3.5\n    beers:\n      label: 'Beers 🍺'\n      kind: 'BEERS'\n      unit: 'beer'\n      rate: 4.5\n    pintsIceCream:\n      label: 'Pints of Ice Cream 🍦'\n      kind: 'PINTS_OF_ICE_CREAM'\n      unit: 'ice cream pint'\n      rate: 5.5\n\npagerDuty:\n  eventsBaseUrl: 'https://events.pagerduty.com/v2'\n\njenkins:\n  instances:\n    - name: default\n      baseUrl: https://jenkins.example.com\n      username: backstage-bot\n      apiKey: 123456789abcdef0123456789abcedf012\n\nazureDevOps:\n  host: dev.azure.com\n  token: my-token\n  organization: my-company\n\napacheAirflow:\n  baseUrl: https://your.airflow.instance.com\n\ngocd:\n  baseUrl: https://your.gocd.instance.com\n\nstackstorm:\n  webUrl: https://your.stackstorm.webui.instance.com\n\npermission:\n  enabled: true\n"
        },
        {
          "name": "beps",
          "type": "tree",
          "content": null
        },
        {
          "name": "canon-docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "catalog-info.yaml",
          "type": "blob",
          "size": 0.65,
          "content": "apiVersion: backstage.io/v1alpha1\nkind: Component\nmetadata:\n  name: backstage\n  description: |\n    Backstage is an open-source developer portal that puts the developer experience first.\n  links:\n    - title: Website\n      url: http://backstage.io\n    - title: Documentation\n      url: https://backstage.io/docs\n    - title: Storybook\n      url: https://backstage.io/storybook\n    - title: Discord Chat\n      url: https://discord.com/invite/EBHEGzX\n  annotations:\n    github.com/project-slug: backstage/backstage\n    backstage.io/techdocs-ref: dir:.\n    lighthouse.com/website-url: https://backstage.io\nspec:\n  type: library\n  owner: CNCF\n  lifecycle: production\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "knexfile.js",
          "type": "blob",
          "size": 1.28,
          "content": "/*\n * Copyright 2024 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// To create a new migration in a plugin, run:\n//\n//   yarn workspace <package> knex migrate:make <name_with_underscores>\n//\n// for example:\n//\n//   yarn workspace @backstage/plugin-catalog-backend knex migrate:make add_feature_foo\n//\n// This creates a file similar to\n//\n//   plugins/catalog-backend/migrations/20240206160252_add_feature_foo.js\n\nmodule.exports = {\n  client: 'better-sqlite3',\n  connection: ':memory:',\n  useNullAsDefault: true,\n  migrations: {\n    // unfortunately this needs to be relative to the TARGET, not this file, and\n    // it just so happens to work to make it go up two steps due to our repo\n    // layout\n    stub: '../../scripts/templates/knex-migration.stub.js',\n  },\n};\n"
        },
        {
          "name": "lerna.json",
          "type": "blob",
          "size": 0.11,
          "content": "{\n  \"packages\": [\"packages/*\", \"plugins/*\"],\n  \"npmClient\": \"yarn\",\n  \"useWorkspaces\": true,\n  \"version\": \"0.0.0\"\n}\n"
        },
        {
          "name": "lighthouserc.js",
          "type": "blob",
          "size": 2.51,
          "content": "/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nmodule.exports = {\n  ci: {\n    collect: {\n      url: [\n        /** Software Catalog */\n        'http://localhost:3000/catalog',\n        'http://localhost:3000/catalog-import',\n        'http://localhost:3000/catalog/default/component/backstage',\n        /** TechDocs */\n        'http://localhost:3000/docs',\n        'http://localhost:3000/docs/default/component/backstage',\n        /** Software Templates */\n        'http://localhost:3000/create',\n        'http://localhost:3000/create/tasks',\n        'http://localhost:3000/create/actions',\n        'http://localhost:3000/create/edit',\n        'http://localhost:3000/create/templates/default/react-ssr-template',\n        /** Search */\n        'http://localhost:3000/search',\n        /** Miscellaneous */\n        'http://localhost:3000/settings',\n        /** plugin-devtools */\n        'http://localhost:3000/devtools',\n        'http://localhost:3000/devtools/config',\n        /** plugin-explore */\n        'http://localhost:3000/explore',\n        'http://localhost:3000/explore/groups',\n        'http://localhost:3000/explore/tools',\n        /** plugin-tech-radar */\n        'http://localhost:3000/tech-radar',\n      ],\n      settings: {\n        onlyCategories: ['accessibility'],\n        // need to disable storage reset because of auth\n        disableStorageReset: true,\n        output: ['html', 'json'],\n        outputPath: './.lighthouseci/reports',\n        preset: 'desktop',\n      },\n      startServerCommand: 'yarn start:lighthouse',\n      startServerReadyPattern: 'webpack compiled successfully',\n      startServerReadyTimeout: 600000,\n      numberOfRuns: 1,\n      puppeteerScript: './.lighthouseci/scripts/guest-auth.js',\n    },\n    assert: {\n      assertions: {\n        'categories:performance': 'off',\n        'categories:pwa': 'off',\n        'categories:best-practices': 'off',\n        'categories:seo': 'off',\n        'categories:accessibility': ['error', { minScore: 0.95 }],\n      },\n    },\n  },\n};\n"
        },
        {
          "name": "microsite",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkdocs.yml",
          "type": "blob",
          "size": 13.24,
          "content": "site_name: 'Backstage'\nsite_description: 'Main documentation for Backstage features and framework APIs'\nrepo_url: https://github.com/backstage/backstage\nedit_uri: edit/master/docs\n\nplugins:\n  - techdocs-core\n  - redirects:\n      redirect_maps:\n        'index.md': 'overview/what-is-backstage.md'\n\n# For sidebar navigation on https://backstage.io/, see `microsite/sidebars.js`\nnav:\n  - Overview:\n      - What is Backstage?: 'overview/what-is-backstage.md'\n      - Architecture overview: 'overview/architecture-overview.md'\n      - Project Roadmap: 'overview/roadmap.md'\n      - Vision: 'overview/vision.md'\n      - The Spotify Story: 'overview/background.md'\n      - Strategies for adopting: 'overview/adopting.md'\n      - Release & Versioning Policy: 'overview/versioning-policy.md'\n      - Backstage Threat Model: 'overview/threat-model.md'\n      - Support and community: 'overview/support.md'\n      - Logo assets: 'overview/logos.md'\n  - Getting Started:\n      - Creating your Backstage App: 'getting-started/index.md'\n      - Configuring Backstage:\n          - Database: 'getting-started/config/database.md'\n          - Authentication: 'getting-started/config/authentication.md'\n          - Configuring App with plugins: 'getting-started/configure-app-with-plugins.md'\n          - Customize the look-and-feel of your App: 'getting-started/app-custom-theme.md'\n          - Customizing your Homepage: 'getting-started/homepage.md'\n      - Deployment:\n          - Deploying Backstage: 'deployment/index.md'\n          - Scaling: 'deployment/scaling.md'\n          - Docker: 'deployment/docker.md'\n          - Kubernetes: 'deployment/k8s.md'\n      - Using Backstage:\n          - Logging in: 'getting-started/logging-in.md'\n          - Register a component: 'getting-started/register-a-component.md'\n          - Create a component: 'getting-started/create-a-component.md'\n      - Keeping Backstage Updated: 'getting-started/keeping-backstage-updated.md'\n  - Core Features:\n      - Software Catalog:\n          - Overview: 'features/software-catalog/index.md'\n          - The Life of an Entity: 'features/software-catalog/life-of-an-entity.md'\n          - Catalog Configuration: 'features/software-catalog/configuration.md'\n          - System Model: 'features/software-catalog/system-model.md'\n          - YAML File Format: 'features/software-catalog/descriptor-format.md'\n          - Entity References: 'features/software-catalog/references.md'\n          - Well-known Annotations: 'features/software-catalog/well-known-annotations.md'\n          - Well-known Relations: 'features/software-catalog/well-known-relations.md'\n          - Well-known Statuses: 'features/software-catalog/well-known-statuses.md'\n          - Extending the model: 'features/software-catalog/extending-the-model.md'\n          - External integrations: 'features/software-catalog/external-integrations.md'\n          - Catalog Customization: 'features/software-catalog/catalog-customization.md'\n          - API: 'features/software-catalog/api.md'\n          - FAQ: 'features/software-catalog/faq.md'\n      - Kubernetes:\n          - Overview: 'features/kubernetes/index.md'\n          - Installation: 'features/kubernetes/installation.md'\n          - Configuration: 'features/kubernetes/configuration.md'\n          - Authentication: 'features/kubernetes/authentication.md'\n          - Troubleshooting: 'features/kubernetes/troubleshooting.md'\n      - Software Templates:\n          - Overview: 'features/software-templates/index.md'\n          - Configuration: 'features/software-templates/configuration.md'\n          - Adding your own Templates: 'features/software-templates/adding-templates.md'\n          - Writing Templates: 'features/software-templates/writing-templates.md'\n          - Input Examples: 'features/software-templates/input-examples.md'\n          - Builtin Actions: 'features/software-templates/builtin-actions.md'\n          - Writing Custom Actions: 'features/software-templates/writing-custom-actions.md'\n          - Writing Custom Step Layouts: 'features/software-templates/writing-custom-step-layouts.md'\n          - Migrating from v1beta2 to v1beta3 templates: 'features/software-templates/migrating-from-v1beta2-to-v1beta3.md'\n          - Dry Run Testing: 'features/software-templates/dry-run-testing.md'\n      - Backstage Search:\n          - Overview: 'features/search/README.md'\n          - Getting Started: 'features/search/getting-started.md'\n          - Concepts: 'features/search/concepts.md'\n          - Search Architecture: 'features/search/architecture.md'\n          - Search Engines: 'features/search/search-engines.md'\n          - Collators: 'features/search/collators.md'\n          - HOW TO guides: 'features/search/how-to-guides.md'\n      - TechDocs:\n          - Overview: 'features/techdocs/README.md'\n          - Getting Started: 'features/techdocs/getting-started.md'\n          - Concepts: 'features/techdocs/concepts.md'\n          - TechDocs Architecture: 'features/techdocs/architecture.md'\n          - Creating and Publishing Documentation: 'features/techdocs/creating-and-publishing.md'\n          - TechDocs Configuration Options: 'features/techdocs/configuration.md'\n          - Using Cloud Storage: 'features/techdocs/using-cloud-storage.md'\n          - Configuring CI/CD to generate and publish TechDocs sites: 'features/techdocs/configuring-ci-cd.md'\n          - CLI: 'features/techdocs/cli.md'\n          - HOW TO guides: 'features/techdocs/how-to-guides.md'\n          - Extensions: 'features/techdocs/extensions.md'\n          - Troubleshooting: 'features/techdocs/troubleshooting.md'\n          - FAQ: 'features/techdocs/FAQ.md'\n  - Integrations:\n      - Overview: 'integrations/index.md'\n      - AWS S3:\n          - Locations: 'integrations/aws-s3/locations.md'\n          - Discovery: 'integrations/aws-s3/discovery.md'\n      - AWS CodeCommit:\n          - Locations: 'integrations/aws-codecommit/locations.md'\n      - Azure:\n          - Locations: 'integrations/azure/locations.md'\n          - Discovery: 'integrations/azure/discovery.md'\n          - Org Data: 'integrations/azure/org.md'\n      - Bitbucket Cloud:\n          - Locations: 'integrations/bitbucketCloud/locations.md'\n          - Discovery: 'integrations/bitbucketCloud/discovery.md'\n      - Bitbucket Server:\n          - Locations: 'integrations/bitbucketServer/locations.md'\n          - Discovery: 'integrations/bitbucketServer/discovery.md'\n      - Datadog:\n          - Installation: 'integrations/datadog-rum/installation.md'\n      - Gerrit:\n          - Locations: 'integrations/gerrit/locations.md'\n          - Discovery: 'integrations/gerrit/discovery.md'\n      - GitHub:\n          - Locations: 'integrations/github/locations.md'\n          - Discovery: 'integrations/github/discovery.md'\n          - Org Data: 'integrations/github/org.md'\n          - GitHub Apps: 'integrations/github/github-apps.md'\n      - GitLab:\n          - Locations: 'integrations/gitlab/locations.md'\n          - Discovery: 'integrations/gitlab/discovery.md'\n      - Google GCS:\n          - Locations: 'integrations/google-cloud-storage/locations.md'\n      - LDAP:\n          - Org Data: 'integrations/ldap/org.md'\n  - Plugins:\n      - Intro to plugins: 'plugins/index.md'\n      - Existing plugins: 'plugins/existing-plugins.md'\n      - Create a Backstage Plugin: 'plugins/create-a-plugin.md'\n      - Plugin Development: 'plugins/plugin-development.md'\n      - Structure of a plugin: 'plugins/structure-of-a-plugin.md'\n      - Integrate into the Software Catalog: 'plugins/integrating-plugin-into-software-catalog.md'\n      - Composability System: 'plugins/composability.md'\n      - Plugin Analytics: 'plugins/analytics.md'\n      - Feature Flags: 'plugins/feature-flags.md'\n      - OpenAPI:\n          - Schema-first plugins with OpenAPI (Experimental): 'openapi/01-getting-started.md'\n          - Generate a client from your OpenAPI spec: 'openapi/generate-client.md'\n          - Validate your OpenAPI spec against test data: 'openapi/test-case-validation.md'\n      - Backends and APIs:\n          - Proxying: 'plugins/proxying.md'\n          - Backend plugin: 'plugins/backend-plugin.md'\n          - Call existing API: 'plugins/call-existing-api.md'\n      - Testing:\n          - Testing with Jest: 'plugins/testing.md'\n      - Publishing:\n          - Publish private: 'plugins/publish-private.md'\n          - Add to Directory: 'plugins/add-to-directory.md'\n          - Observability: 'plugins/observability.md'\n  - Configuration:\n      - Static Configuration in Backstage: 'conf/index.md'\n      - Reading Backstage Configuration: 'conf/reading.md'\n      - Writing Backstage Configuration: 'conf/writing.md'\n      - Defining Configuration for your Plugin: 'conf/defining.md'\n  - Notifications:\n      - Getting Started: 'notifications/index.md'\n      - Usage: 'notifications/usage.md'\n      - Processors: 'notifications/processors.md'\n  - Authentication and identity:\n      - Adding Authentication: 'auth/index.md'\n      - Included providers:\n          - Atlassian: 'auth/atlassian/provider.md'\n          - Auth0: 'auth/auth0/provider.md'\n          - AWS ALB: 'auth/aws-alb/provider.md'\n          - Azure: 'auth/microsoft/provider.md'\n          - Azure EasyAuth: 'auth/microsoft/azure-easyauth.md'\n          - Bitbucket: 'auth/bitbucket/provider.md'\n          - Bitbucket Server: 'auth/bitbucketServer/provider.md'\n          - Cloudflare Access: 'auth/cloudflare/provider.md'\n          - GitHub: 'auth/github/provider.md'\n          - GitLab: 'auth/gitlab/provider.md'\n          - Google: 'auth/google/provider.md'\n          - Google IAP: 'auth/google/gcp-iap-auth.md'\n          - Guest: 'auth/guest/provider.md'\n          - OAuth2Proxy: 'auth/oauth2-proxy/provider.md'\n          - Okta: 'auth/okta/provider.md'\n          - OneLogin: 'auth/onelogin/provider.md'\n      - Sign in resolvers: 'auth/identity-resolver.md'\n      - OAuth and OpenID Connect: 'auth/oauth.md'\n      - OIDC provider from scratch: 'auth/oidc.md'\n      - Contributing New Providers: 'auth/add-auth-provider.md'\n      - Service to Service Auth: 'auth/service-to-service-auth.md'\n      - Troubleshooting Auth: 'auth/troubleshooting.md'\n  - Tooling:\n      - Backstage CLI:\n          - Overview: 'tooling/cli/01-overview.md'\n          - Build System: 'tooling/cli/02-build-system.md'\n          - Commands: 'tooling/cli/03-commands.md'\n      - Local Development:\n          - Linking in Local Packages: 'tooling/local-dev/linking-local-packages.md'\n          - Debugging Backstage: 'tooling/local-dev/debugging.md'\n          - Profiling Backstage: 'tooling/local-dev/profiling.md'\n      - Package Metadata: 'tooling/package-metadata.md'\n  - Designing for Backstage:\n      - Design: 'dls/design.md'\n      - Component Design Guidelines: 'dls/component-design-guidelines.md'\n      - Contributing to Storybook: 'dls/contributing-to-storybook.md'\n      - Figma: 'dls/figma.md'\n  - API Reference:\n      - Guides:\n          - Utility APIs: 'api/utility-apis.md'\n      - Deprecations: 'api/deprecations.md'\n  - Tutorials:\n      - React Router 6.0 Migration: 'tutorials/react-router-stable-migration.md'\n      - Package Role Migration: 'tutorials/package-role-migration.md'\n      - Migrating away from @backstage/core: 'tutorials/migrating-away-from-core.md'\n      - Adding Custom Plugin to Existing Monorepo App: 'tutorials/quickstart-app-plugin.md'\n      - Switching Backstage from SQLite to PostgreSQL: 'tutorials/switching-sqlite-postgres.md'\n      - Using the Backstage Proxy from Within a Plugin: 'tutorials/using-backstage-proxy-within-plugin.md'\n      - Migration to Yarn 3: 'tutorials/yarn-migration.md'\n      - Migration to Material UI v5: 'tutorials/migrate-to-mui5.md'\n      - Setup OpenTelemetry: 'tutorials/setup-opentelemetry.md'\n  - Architecture Decision Records (ADRs):\n      - Overview: 'architecture-decisions/index.md'\n      - ADR001 - Architecture Decision Record (ADR) log: 'architecture-decisions/adr001-add-adr-log.md'\n      - ADR002 - Default Software Catalog File Format: 'architecture-decisions/adr002-default-catalog-file-format.md'\n      - ADR003 - Avoid Default Exports and Prefer Named Exports: 'architecture-decisions/adr003-avoid-default-exports.md'\n      - ADR004 - Module Export Structure: 'architecture-decisions/adr004-module-export-structure.md'\n      - ADR005 - Catalog Core Entities: 'architecture-decisions/adr005-catalog-core-entities.md'\n      - ADR006 - Avoid React.FC and React.SFC: 'architecture-decisions/adr006-avoid-react-fc.md'\n      - ADR007 - Use MSW for Network Request Mocking: 'architecture-decisions/adr007-use-msw-to-mock-service-requests.md'\n      - ADR008 - Default Catalog File Name: 'architecture-decisions/adr008-default-catalog-file-name.md'\n      - ADR009 - Entity References: 'architecture-decisions/adr009-entity-references.md'\n      - ADR010 - Luxon Date Library: 'architecture-decisions/adr010-luxon-date-library.md'\n      - ADR011 - Plugin Package Structure: 'architecture-decisions/adr011-plugin-package-structure.md'\n      - ADR012 - Use Luxon Locale: 'architecture-decisions/adr012-use-luxon-locale-and-date-presets.md'\n      - ADR013 - Use node-fetch: 'architecture-decisions/adr013-use-node-fetch.md'\n      - ADR014 - Use fetch: 'architecture-decisions/adr014-use-fetch.md'\n  - FAQ:\n      - Overview: 'faq/index.md'\n      - Product FAQ: 'faq/product.md'\n      - Technical FAQ: 'faq/technical.md'\n  - Contribute:\n      - Contributions: 'contribute/index.md'\n      - Project Structure: 'contribute/project-structure.md'\n  - References:\n      - Glossary: 'references/glossary.md'\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 7.62,
          "content": "{\n  \"name\": \"root\",\n  \"version\": \"1.35.0-next.2\",\n  \"private\": true,\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/backstage/backstage\"\n  },\n  \"workspaces\": {\n    \"packages\": [\n      \"packages/*\",\n      \"plugins/*\"\n    ]\n  },\n  \"scripts\": {\n    \"build-storybook\": \"yarn ./storybook run build-storybook\",\n    \"build:all\": \"backstage-cli repo build --all\",\n    \"build:api-docs\": \"LANG=en_EN yarn build:api-reports --docs --exclude 'plugins/@(adr|adr-backend|adr-common|airbrake|airbrake-backend|allure|analytics-module-ga|analytics-module-ga4|analytics-module-newrelic-browser|apache-airflow|api-docs|api-docs-module-protoc-gen-doc|apollo-explorer|app-visualizer|azure-devops|azure-devops-backend|azure-devops-common|azure-sites|azure-sites-backend|azure-sites-common|badges|badges-backend|bazaar|bazaar-backend|bitbucket-cloud-common|bitrise|catalog-graph|catalog-graphql|catalog-import|catalog-unprocessed-entities|cicd-statistics|cicd-statistics-module-gitlab|circleci|cloudbuild|code-climate|code-coverage|code-coverage-backend|codescene|config-schema|cost-insights|cost-insights-common|dynatrace|entity-feedback|entity-feedback-backend|entity-feedback-common|entity-validation|example-todo-list|example-todo-list-backend|example-todo-list-common|firehydrant|fossa|gcalendar|gcp-projects|git-release-manager|github-actions|github-deployments|github-issues|github-pull-requests-board|gitops-profiles|gocd|graphiql|graphql-backend|graphql-voyager|ilert|jenkins|jenkins-backend|jenkins-common|kafka|kafka-backend|lighthouse|lighthouse-backend|lighthouse-common|linguist|linguist-backend|linguist-common|microsoft-calendar|newrelic|newrelic-dashboard|nomad|nomad-backend|octopus-deploy|opencost|pagerduty|periskop|periskop-backend|playlist|playlist-backend|playlist-common|proxy-backend|puppetdb|rollbar|rollbar-backend|sentry|shortcuts|splunk-on-call|stack-overflow|stack-overflow-backend|stackstorm|tech-radar|tech-radar-2|todo|todo-backend|xcmetrics)'\",\n    \"build:api-reports\": \"yarn build:api-reports:only --tsc\",\n    \"build:api-reports:only\": \"NODE_OPTIONS=--max-old-space-size=8192 backstage-repo-tools api-reports --allow-warnings 'packages/backend-app-api,packages/core-components,plugins/+(catalog|catalog-import|git-release-manager|jenkins|kubernetes)' -o ae-undocumented,ae-wrong-input-file-type --validate-release-tags\",\n    \"build:backend\": \"yarn workspace example-backend build\",\n    \"build:knip-reports\": \"backstage-repo-tools knip-reports\",\n    \"build:plugins-report\": \"node ./scripts/build-plugins-report\",\n    \"clean\": \"backstage-cli repo clean\",\n    \"create-plugin\": \"echo \\\"use 'yarn new' instead\\\"\",\n    \"dev\": \"yarn workspaces foreach -A --include example-backend --include example-app --parallel --jobs unlimited -v -i run start\",\n    \"dev:next\": \"yarn workspaces foreach -A --include example-backend --include example-app-next --parallel --jobs unlimited -v -i run start\",\n    \"docker-build\": \"yarn tsc && yarn workspace example-backend build && yarn workspace example-backend build-image\",\n    \"fix\": \"backstage-cli repo fix --publish\",\n    \"postinstall\": \"husky || true\",\n    \"lint\": \"backstage-cli repo lint --since origin/master\",\n    \"lint:all\": \"backstage-cli repo lint\",\n    \"lint:docs\": \"node ./scripts/check-docs-quality\",\n    \"lint:peer-deps\": \"backstage-repo-tools peer-deps\",\n    \"lint:type-deps\": \"backstage-repo-tools type-deps\",\n    \"new\": \"backstage-cli new --scope backstage --baseVersion 0.0.0 --no-private\",\n    \"prepare\": \"husky\",\n    \"prettier:check\": \"prettier --check .\",\n    \"prettier:fix\": \"prettier --write .\",\n    \"release\": \"node scripts/prepare-release.js && changeset version && yarn prettier --write '{packages,plugins}/*/{package.json,CHANGELOG.md}' '.changeset/*.json' && yarn install --no-immutable\",\n    \"snyk:test\": \"npx snyk test --yarn-workspaces --strict-out-of-sync=false\",\n    \"snyk:test:package\": \"yarn snyk:test --include\",\n    \"start\": \"yarn workspace example-app start\",\n    \"start-backend\": \"yarn workspace example-backend start\",\n    \"start-backend:legacy\": \"yarn workspace example-backend-legacy start\",\n    \"start:lighthouse\": \"yarn workspaces foreach -A --include example-backend --include example-app --parallel --jobs unlimited -v -i run start\",\n    \"start:microsite\": \"cd microsite/ && yarn start\",\n    \"start:next\": \"yarn workspace example-app-next start\",\n    \"storybook\": \"yarn ./storybook run storybook\",\n    \"techdocs-cli\": \"node scripts/techdocs-cli.js\",\n    \"techdocs-cli:dev\": \"cross-env TECHDOCS_CLI_DEV_MODE=true node scripts/techdocs-cli.js\",\n    \"test\": \"NODE_OPTIONS=--no-node-snapshot backstage-cli repo test\",\n    \"test:all\": \"NODE_OPTIONS=--no-node-snapshot backstage-cli repo test --coverage\",\n    \"test:e2e\": \"NODE_OPTIONS=--no-node-snapshot playwright test\",\n    \"tsc\": \"tsc\",\n    \"tsc:full\": \"backstage-cli repo clean && tsc --skipLibCheck false --incremental false\"\n  },\n  \"lint-staged\": {\n    \"*.{js,jsx,ts,tsx,mjs,cjs}\": [\n      \"eslint --fix\",\n      \"prettier --write\"\n    ],\n    \"*.json\": [\n      \"prettier --write\"\n    ],\n    \"*.md\": [\n      \"prettier --write\",\n      \"node ./scripts/check-docs-quality\"\n    ],\n    \"{plugins,packages}/*/catalog-info.yaml\": [\n      \"yarn backstage-repo-tools generate-catalog-info --ci\"\n    ],\n    \".github/CODEOWNERS\": [\n      \"yarn backstage-repo-tools generate-catalog-info\",\n      \"git add */catalog-info.yaml\"\n    ],\n    \"package.json\": [\n      \"yarn backstage-repo-tools generate-catalog-info\",\n      \"git add */catalog-info.yaml\",\n      \"node ./scripts/sort-package-json.mjs\"\n    ],\n    \"yarn.lock\": [\n      \"node ./scripts/verify-lockfile-duplicates --fix\"\n    ]\n  },\n  \"prettier\": \"@backstage/cli/config/prettier\",\n  \"jest\": {\n    \"rejectFrontendNetworkRequests\": true\n  },\n  \"resolutions\": {\n    \"@changesets/assemble-release-plan@^6.0.0\": \"patch:@changesets/assemble-release-plan@npm%3A6.0.0#./.yarn/patches/@changesets-assemble-release-plan-npm-6.0.0-f7b3005037.patch\",\n    \"@material-ui/pickers@^3.2.10\": \"patch:@material-ui/pickers@npm%3A3.3.11#./.yarn/patches/@material-ui-pickers-npm-3.3.11-1c8f68ea20.patch\",\n    \"@material-ui/pickers@^3.3.10\": \"patch:@material-ui/pickers@npm%3A3.3.11#./.yarn/patches/@material-ui-pickers-npm-3.3.11-1c8f68ea20.patch\",\n    \"@types/react\": \"^18\",\n    \"@types/react-dom\": \"^18\",\n    \"jest-haste-map@^29.7.0\": \"patch:jest-haste-map@npm%3A29.7.0#./.yarn/patches/jest-haste-map-npm-29.7.0-e3be419eff.patch\"\n  },\n  \"dependencies\": {\n    \"@backstage/errors\": \"workspace:^\",\n    \"@manypkg/get-packages\": \"^1.1.3\",\n    \"@types/global-agent\": \"^2.1.3\",\n    \"@useoptic/optic\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"@backstage/cli\": \"workspace:*\",\n    \"@backstage/codemods\": \"workspace:*\",\n    \"@backstage/create-app\": \"workspace:*\",\n    \"@backstage/e2e-test-utils\": \"workspace:*\",\n    \"@backstage/repo-tools\": \"workspace:*\",\n    \"@changesets/cli\": \"^2.14.0\",\n    \"@octokit/rest\": \"^19.0.3\",\n    \"@playwright/test\": \"^1.32.3\",\n    \"@spotify/eslint-plugin\": \"^15.0.0\",\n    \"@techdocs/cli\": \"workspace:*\",\n    \"@types/cacheable-request\": \"^8.3.6\",\n    \"@types/memjs\": \"^1.3.3\",\n    \"@types/node\": \"^20.16.0\",\n    \"@types/webpack\": \"^5.28.0\",\n    \"array-to-table\": \"^1.0.1\",\n    \"command-exists\": \"^1.2.9\",\n    \"cross-env\": \"^7.0.0\",\n    \"e2e-test\": \"workspace:*\",\n    \"eslint\": \"^8.6.0\",\n    \"eslint-plugin-notice\": \"^1.0.0\",\n    \"eslint-plugin-react\": \"^7.28.0\",\n    \"eslint-plugin-testing-library\": \"^6.0.0\",\n    \"fs-extra\": \"^11.2.0\",\n    \"husky\": \"^9.0.0\",\n    \"knip\": \"^5.0.0\",\n    \"lint-staged\": \"^15.0.0\",\n    \"minimist\": \"^1.2.5\",\n    \"node-gyp\": \"^10.0.0\",\n    \"prettier\": \"^2.2.1\",\n    \"semver\": \"^7.5.3\",\n    \"shx\": \"^0.3.2\",\n    \"sloc\": \"^0.3.1\",\n    \"sort-package-json\": \"^2.8.0\",\n    \"typescript\": \"~5.2.0\"\n  },\n  \"packageManager\": \"yarn@3.8.1\",\n  \"engines\": {\n    \"node\": \"20 || 22\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "playwright.config.ts",
          "type": "blob",
          "size": 1.87,
          "content": "/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { defineConfig } from '@playwright/test';\nimport { generateProjects } from '@backstage/e2e-test-utils/playwright';\n\n/**\n * See https://playwright.dev/docs/test-configuration.\n */\nexport default defineConfig({\n  timeout: 30_000,\n\n  expect: {\n    timeout: 5_000,\n  },\n\n  // Run your local dev server before starting the tests\n  webServer: process.env.CI\n    ? []\n    : [\n        {\n          command: 'yarn start',\n          port: 3000,\n          reuseExistingServer: true,\n          timeout: 60_000,\n        },\n        // TODO: Before encouraging e2e tests for backend we'll want to provide better utilities for mocking auth\n        // {\n        //   command: 'yarn start-backend',\n        //   port: 7007,\n        //   reuseExistingServer: true,\n        //   timeout: 60_000,\n        // },\n      ],\n\n  forbidOnly: !!process.env.CI,\n\n  retries: process.env.CI ? 2 : 0,\n\n  reporter: [['html', { open: 'never', outputFolder: 'e2e-test-report' }]],\n\n  use: {\n    actionTimeout: 0,\n    baseURL:\n      process.env.PLAYWRIGHT_URL ??\n      (process.env.CI ? 'http://localhost:7007' : 'http://localhost:3000'),\n    screenshot: 'only-on-failure',\n    trace: 'on-first-retry',\n  },\n\n  outputDir: 'node_modules/.cache/e2e-test-results',\n\n  projects: generateProjects(), // Find all packages with e2e-test folders\n});\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "storybook",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.33,
          "content": "{\n  \"extends\": \"@backstage/cli/config/tsconfig.json\",\n  \"include\": [\n    \"packages/*/src\",\n    \"packages/*/config.d.ts\",\n    \"plugins/*/src\",\n    \"plugins/*/config.d.ts\",\n    \"plugins/*/dev\",\n    \"plugins/*/migrations\"\n  ],\n  \"compilerOptions\": {\n    \"outDir\": \"dist-types\",\n    \"rootDir\": \".\",\n    \"useUnknownInCatchVariables\": false\n  }\n}\n"
        },
        {
          "name": "yarn.lock",
          "type": "blob",
          "size": 1666.74,
          "content": null
        }
      ]
    }
  ]
}